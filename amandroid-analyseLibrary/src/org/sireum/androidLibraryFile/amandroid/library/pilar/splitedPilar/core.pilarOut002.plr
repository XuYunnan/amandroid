record [|java:util:EventListenerProxy|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:util:EventListener|] {
      [|java:util:EventListener|] [|java:util:EventListenerProxy.listener|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:EventListenerProxy.<init>|] ([|java:util:EventListenerProxy|] v0 @type (this), [|java:util:EventListener|] v1 @type (object)) @owner [|java:util:EventListenerProxy|] @signature [|Ljava/util/EventListenerProxy;.<init>:(Ljava/util/EventListener;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08736c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L087372.   v0.[|java:util:EventListenerProxy.listener|]  := v1 @type object;
#L087376.   return @void ;

   }
    procedure [|java:util:EventListener|] [|java:util:EventListenerProxy.getListener|] ([|java:util:EventListenerProxy|] v1 @type (this)) @owner [|java:util:EventListenerProxy|] @signature [|Ljava/util/EventListenerProxy;.getListener:()Ljava/util/EventListener;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087388.   v0:= v1.[|java:util:EventListenerProxy.listener|]   @type object;
#L08738c.   return v0  @type object;

   }
record [|java:beans:PropertyChangeListenerProxy|]  @type class @AccessFlag PUBLIC  extends [|java:util:EventListenerProxy|], [|java:beans:PropertyChangeListener|] {
      [|java:lang:String|] [|java:beans:PropertyChangeListenerProxy.propertyName|]    @AccessFlag ;
   }
    procedure [|void|] [|java:beans:PropertyChangeListenerProxy.<init>|] ([|java:beans:PropertyChangeListenerProxy|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:beans:PropertyChangeListener|] v2 @type (object)) @owner [|java:beans:PropertyChangeListenerProxy|] @signature [|Ljava/beans/PropertyChangeListenerProxy;.<init>:(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0873a0.   call temp:=  [|java:util:EventListenerProxy.<init>|](v0, v2) @signature [|Ljava/util/EventListenerProxy;.<init>:(Ljava/util/EventListener;)V|] @classDescriptor [|java:util:EventListenerProxy|] @type direct;
#L0873a6.   v0.[|java:beans:PropertyChangeListenerProxy.propertyName|]  := v1 @type object;
#L0873aa.   return @void ;

   }
    procedure [|java:lang:String|] [|java:beans:PropertyChangeListenerProxy.getPropertyName|] ([|java:beans:PropertyChangeListenerProxy|] v1 @type (this)) @owner [|java:beans:PropertyChangeListenerProxy|] @signature [|Ljava/beans/PropertyChangeListenerProxy;.getPropertyName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0873bc.   v0:= v1.[|java:beans:PropertyChangeListenerProxy.propertyName|]   @type object;
#L0873c0.   return v0  @type object;

   }
    procedure [|void|] [|java:beans:PropertyChangeListenerProxy.propertyChange|] ([|java:beans:PropertyChangeListenerProxy|] v1 @type (this), [|java:beans:PropertyChangeEvent|] v2 @type (object)) @owner [|java:beans:PropertyChangeListenerProxy|] @signature [|Ljava/beans/PropertyChangeListenerProxy;.propertyChange:(Ljava/beans/PropertyChangeEvent;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0873d4.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getListener|](v1) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getListener:()Ljava/util/EventListener;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L0873da.   v0:= temp  @type object;
#L0873dc.   v0:= ([|java:beans:PropertyChangeListener|])v0;
#L0873e0.   call temp:=  [|java:beans:PropertyChangeListener.propertyChange|](v0, v2) @signature [|Ljava/beans/PropertyChangeListener;.propertyChange:(Ljava/beans/PropertyChangeEvent;)V|] @classDescriptor [|java:beans:PropertyChangeListener|] @type interface;
#L0873e6.   return @void ;

   }
record [|java:beans:PropertyChangeSupport|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|java:util:List|] [|java:beans:PropertyChangeSupport.listeners|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:Object|] [|java:beans:PropertyChangeSupport.sourceBean|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|java:io:ObjectStreamField|][] @@[|java:beans:PropertyChangeSupport.serialPersistentFields|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:beans:PropertyChangeSupport.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:beans:PropertyChangeSupport.<clinit>|] () @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0873f8.   v0:= 3  @length 4;
#L0873fa.   v0:= new [|java:io:ObjectStreamField|][v0];
#L0873fe.   v1:= 0  @length 4;
#L087400.   v2:= new [|java:io:ObjectStreamField|];
#L087404.   v3:= "source" @type (object, string);
#L087408.   v4:= new [|java:lang:Object|];
#L08740c.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L087412.   v0[v1]:= v2  @type object;
#L087416.   v1:= 1  @length 4;
#L087418.   v2:= new [|java:io:ObjectStreamField|];
#L08741c.   v3:= "children" @type (object, string);
#L087420.   v4:= new [|java:lang:Object|];
#L087424.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L08742a.   v0[v1]:= v2  @type object;
#L08742e.   v1:= 2  @length 4;
#L087430.   v2:= new [|java:io:ObjectStreamField|];
#L087434.   v3:= "propertyChangeSupportSerializedDataVersion" @type (object, string);
#L087438.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L08743c.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L087442.   v0[v1]:= v2  @type object;
#L087446.   @@[|java:beans:PropertyChangeSupport.serialPersistentFields|] := v0  @type object;
#L08744a.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.<init>|] ([|java:beans:PropertyChangeSupport|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.<init>:(Ljava/lang/Object;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08745c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L087462.   v0:= new [|java:util:concurrent:CopyOnWriteArrayList|];
#L087466.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.<init>|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L08746c.   v2.[|java:beans:PropertyChangeSupport.listeners|]  := v0 @type object;
#L087470.   if v3 != 0 then goto L087484;
#L087474.   v0:= new [|java:lang:NullPointerException|];
#L087478.   v1:= "sourceBean == null" @type (object, string);
#L08747c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L087482.   throw v0;
#L087484.   v2.[|java:beans:PropertyChangeSupport.sourceBean|]  := v3 @type object;
#L087488.   return @void ;

   }
    procedure [|boolean|] [|java:beans:PropertyChangeSupport.equals|] ([|java:beans:PropertyChangeSupport|] v5 @type (this), [|java:lang:String|] v6 @type (object), [|java:util:EventListener|] v7 @type (object), [|java:util:EventListener|] v8 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.equals:(Ljava/lang/String;Ljava/util/EventListener;Ljava/util/EventListener;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08749c.   v3:= 0  @length 4;
#L08749e.   v4:= instanceof @varname v8 @type [|java:beans:PropertyChangeListenerProxy|];
#L0874a2.   if v4 == 0 then goto L0874f0;
#L0874a6.   v2:= v8  @type object;
#L0874a8.   v2:= ([|java:beans:PropertyChangeListenerProxy|])v2;
#L0874ac.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getPropertyName|](v2) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getPropertyName:()Ljava/lang/String;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L0874b2.   v1:= temp  @type object;
#L0874b4.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getListener|](v2) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getListener:()Ljava/util/EventListener;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L0874ba.   v8:= temp  @type object;
#L0874bc.   if v6 != 0 then goto L0874e0;
#L0874c0.   v4:= instanceof @varname v7 @type [|java:beans:PropertyChangeListenerProxy|];
#L0874c4.   if v4 != 0 then goto L0874ca;
#L0874c8.   return v3;
#L0874ca.   v0:= v7  @type object;
#L0874cc.   v0:= ([|java:beans:PropertyChangeListenerProxy|])v0;
#L0874d0.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getPropertyName|](v0) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getPropertyName:()Ljava/lang/String;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L0874d6.   v6:= temp  @type object;
#L0874d8.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getListener|](v0) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getListener:()Ljava/util/EventListener;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L0874de.   v7:= temp  @type object;
#L0874e0.   call temp:=  [|libcore:util:Objects.equal|](v6, v1) @signature [|Llibcore/util/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|libcore:util:Objects|] @type static;
#L0874e6.   v4:= temp;
#L0874e8.   if v4 == 0 then goto L0874c8;
#L0874ec.   v6:= 0  @length 4;
#L0874ee.   goto L08749e;
#L0874f0.   if v6 != 0 then goto L0874c8;
#L0874f4.   call temp:=  [|libcore:util:Objects.equal|](v7, v8) @signature [|Llibcore/util/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|libcore:util:Objects|] @type static;
#L0874fa.   v4:= temp;
#L0874fc.   if v4 == 0 then goto L0874c8;
#L087500.   v3:= 1  @length 4;
#L087502.   goto L0874c8;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.readObject|] ([|java:beans:PropertyChangeSupport|] v10 @type (this), [|java:io:ObjectInputStream|] v11 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L087514.   v8:= 0  @length 4;
#L087516.   call temp:=  [|java:io:ObjectInputStream.readFields|](v11) @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L08751c.   v6:= temp  @type object;
#L08751e.   v7:= "source" @type (object, string);
#L087522.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v6, v7, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L087528.   v7:= temp  @type object;
#L08752a.   v10.[|java:beans:PropertyChangeSupport.sourceBean|]  := v7 @type object;
#L08752e.   v7:= new [|java:util:concurrent:CopyOnWriteArrayList|];
#L087532.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.<init>|](v7) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L087538.   v10.[|java:beans:PropertyChangeSupport.listeners|]  := v7 @type object;
#L08753c.   v7:= "children" @type (object, string);
#L087540.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v6, v7, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L087546.   v0:= temp  @type object;
#L087548.   v0:= ([|java:util:Map|])v0;
#L08754c.   if v0 == 0 then goto L0875ca;
#L087550.   call temp:=  [|java:util:Map.entrySet|](v0) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L087556.   v7:= temp  @type object;
#L087558.   call temp:=  [|java:util:Set.iterator|](v7) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L08755e.   v2:= temp  @type object;
#L087560.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087566.   v7:= temp;
#L087568.   if v7 == 0 then goto L0875ca;
#L08756c.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087572.   v1:= temp  @type object;
#L087574.   v1:= ([|java:util:Map$Entry|])v1;
#L087578.   call temp:=  [|java:util:Map$Entry.getValue|](v1) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L08757e.   v7:= temp  @type object;
#L087580.   v7:= ([|java:beans:PropertyChangeSupport|])v7;
#L087584.   v7:= v7.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L087588.   call temp:=  [|java:util:List.iterator|](v7) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L08758e.   v3:= temp  @type object;
#L087590.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087596.   v7:= temp;
#L087598.   if v7 == 0 then goto L087560;
#L08759c.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0875a2.   v5:= temp  @type object;
#L0875a4.   v5:= ([|java:beans:PropertyChangeListener|])v5;
#L0875a8.   v8:= v10.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L0875ac.   v9:= new [|java:beans:PropertyChangeListenerProxy|];
#L0875b0.   call temp:=  [|java:util:Map$Entry.getKey|](v1) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0875b6.   v7:= temp  @type object;
#L0875b8.   v7:= ([|java:lang:String|])v7;
#L0875bc.   call temp:=  [|java:beans:PropertyChangeListenerProxy.<init>|](v9, v7, v5) @signature [|Ljava/beans/PropertyChangeListenerProxy;.<init>:(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type direct;
#L0875c2.   call temp:=  [|java:util:List.add|](v8, v9) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0875c8.   goto L087590;
#L0875ca.   call temp:=  [|java:io:ObjectInputStream.readObject|](v11) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0875d0.   v4:= temp  @type object;
#L0875d2.   v4:= ([|java:beans:PropertyChangeListener|])v4;
#L0875d6.   if v4 == 0 then goto L0875e6;
#L0875da.   v7:= v10.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L0875de.   call temp:=  [|java:util:List.add|](v7, v4) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0875e4.   goto L0875ca;
#L0875e6.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.writeObject|] ([|java:beans:PropertyChangeSupport|] v9 @type (this), [|java:io:ObjectOutputStream|] v10 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0875f8.   v3:= new [|java:util:Hashtable|];
#L0875fc.   call temp:=  [|java:util:Hashtable.<init>|](v3) @signature [|Ljava/util/Hashtable;.<init>:()V|] @classDescriptor [|java:util:Hashtable|] @type direct;
#L087602.   v7:= v9.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L087606.   call temp:=  [|java:util:List.iterator|](v7) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L08760c.   v0:= temp  @type object;
#L08760e.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087614.   v7:= temp;
#L087616.   if v7 == 0 then goto L087690;
#L08761a.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087620.   v4:= temp  @type object;
#L087622.   v4:= ([|java:beans:PropertyChangeListener|])v4;
#L087626.   v7:= instanceof @varname v4 @type [|java:beans:PropertyChangeListenerProxy|];
#L08762a.   if v7 == 0 then goto L08760e;
#L08762e.   v7:= instanceof @varname v4 @type [|java:io:Serializable|];
#L087632.   if v7 != 0 then goto L08760e;
#L087636.   v5:= v4  @type object;
#L087638.   v5:= ([|java:beans:PropertyChangeListenerProxy|])v5;
#L08763c.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getListener|](v5) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getListener:()Ljava/util/EventListener;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L087642.   v2:= temp  @type object;
#L087644.   v2:= ([|java:beans:PropertyChangeListener|])v2;
#L087648.   v7:= instanceof @varname v2 @type [|java:io:Serializable|];
#L08764c.   if v7 == 0 then goto L08760e;
#L087650.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getPropertyName|](v5) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getPropertyName:()Ljava/lang/String;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L087656.   v7:= temp  @type object;
#L087658.   call temp:=  [|java:util:Map.get|](v3, v7) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L08765e.   v1:= temp  @type object;
#L087660.   v1:= ([|java:beans:PropertyChangeSupport|])v1;
#L087664.   if v1 != 0 then goto L087684;
#L087668.   v1:= new [|java:beans:PropertyChangeSupport|];
#L08766c.   v7:= v9.[|java:beans:PropertyChangeSupport.sourceBean|]   @type object;
#L087670.   call temp:=  [|java:beans:PropertyChangeSupport.<init>|](v1, v7) @signature [|Ljava/beans/PropertyChangeSupport;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type direct;
#L087676.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getPropertyName|](v5) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getPropertyName:()Ljava/lang/String;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L08767c.   v7:= temp  @type object;
#L08767e.   call temp:=  [|java:util:Map.put|](v3, v7, v1) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L087684.   v7:= v1.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L087688.   call temp:=  [|java:util:List.add|](v7, v2) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L08768e.   goto L08760e;
#L087690.   call temp:=  [|java:io:ObjectOutputStream.putFields|](v10) @signature [|Ljava/io/ObjectOutputStream;.putFields:()Ljava/io/ObjectOutputStream$PutField;|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L087696.   v6:= temp  @type object;
#L087698.   v7:= "source" @type (object, string);
#L08769c.   v8:= v9.[|java:beans:PropertyChangeSupport.sourceBean|]   @type object;
#L0876a0.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v6, v7, v8) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0876a6.   v7:= "children" @type (object, string);
#L0876aa.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v6, v7, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0876b0.   call temp:=  [|java:io:ObjectOutputStream.writeFields|](v10) @signature [|Ljava/io/ObjectOutputStream;.writeFields:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0876b6.   v7:= v9.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L0876ba.   call temp:=  [|java:util:List.iterator|](v7) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0876c0.   v0:= temp  @type object;
#L0876c2.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0876c8.   v7:= temp;
#L0876ca.   if v7 == 0 then goto L0876ea;
#L0876ce.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0876d4.   v4:= temp  @type object;
#L0876d6.   v4:= ([|java:beans:PropertyChangeListener|])v4;
#L0876da.   v7:= instanceof @varname v4 @type [|java:io:Serializable|];
#L0876de.   if v7 == 0 then goto L0876c2;
#L0876e2.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v10, v4) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0876e8.   goto L0876c2;
#L0876ea.   v7:= 0  @length 4;
#L0876ec.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v10, v7) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0876f2.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.addPropertyChangeListener|] ([|java:beans:PropertyChangeSupport|] v1 @type (this), [|java:beans:PropertyChangeListener|] v2 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087704.   if v2 == 0 then goto L087712;
#L087708.   v0:= v1.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L08770c.   call temp:=  [|java:util:List.add|](v0, v2) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L087712.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.addPropertyChangeListener|] ([|java:beans:PropertyChangeSupport|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:beans:PropertyChangeListener|] v4 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.addPropertyChangeListener:(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L087724.   if v4 == 0 then goto L087740;
#L087728.   if v3 == 0 then goto L087740;
#L08772c.   v0:= v2.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L087730.   v1:= new [|java:beans:PropertyChangeListenerProxy|];
#L087734.   call temp:=  [|java:beans:PropertyChangeListenerProxy.<init>|](v1, v3, v4) @signature [|Ljava/beans/PropertyChangeListenerProxy;.<init>:(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type direct;
#L08773a.   call temp:=  [|java:util:List.add|](v0, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L087740.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.fireIndexedPropertyChange|] ([|java:beans:PropertyChangeSupport|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4, [|int|] v5, [|int|] v6) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.fireIndexedPropertyChange:(Ljava/lang/String;III)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L087754.   if v5 == v6 then goto L08776e;
#L087758.   call temp:=  [|java:lang:Integer.valueOf|](v5) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L08775e.   v0:= temp  @type object;
#L087760.   call temp:=  [|java:lang:Integer.valueOf|](v6) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L087766.   v1:= temp  @type object;
#L087768.   call temp:=  [|java:beans:PropertyChangeSupport.fireIndexedPropertyChange|](v2, v3, v4, v0, v1) @signature [|Ljava/beans/PropertyChangeSupport;.fireIndexedPropertyChange:(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type virtual;
#L08776e.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.fireIndexedPropertyChange|] ([|java:beans:PropertyChangeSupport|] v6 @type (this), [|java:lang:String|] v7 @type (object), [|int|] v8, [|java:lang:Object|] v9 @type (object), [|java:lang:Object|] v10 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.fireIndexedPropertyChange:(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L087780.   v0:= new [|java:beans:IndexedPropertyChangeEvent|];
#L087784.   v1:= v6.[|java:beans:PropertyChangeSupport.sourceBean|]   @type object;
#L087788.   v2:= v7  @type object;
#L08778a.   v3:= v9  @type object;
#L08778c.   v4:= v10  @type object;
#L08778e.   v5:= v8;
#L087790.   call temp:=  [|java:beans:IndexedPropertyChangeEvent.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/beans/IndexedPropertyChangeEvent;.<init>:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)V|] @classDescriptor [|java:beans:IndexedPropertyChangeEvent|] @type direct;
#L087796.   call temp:=  [|java:beans:PropertyChangeSupport.firePropertyChange|](v6, v0) @signature [|Ljava/beans/PropertyChangeSupport;.firePropertyChange:(Ljava/beans/PropertyChangeEvent;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type virtual;
#L08779c.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.fireIndexedPropertyChange|] ([|java:beans:PropertyChangeSupport|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4, [|boolean|] v5, [|boolean|] v6) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.fireIndexedPropertyChange:(Ljava/lang/String;IZZ)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0877b0.   if v5 == v6 then goto L0877ca;
#L0877b4.   call temp:=  [|java:lang:Boolean.valueOf|](v5) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L0877ba.   v0:= temp  @type object;
#L0877bc.   call temp:=  [|java:lang:Boolean.valueOf|](v6) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L0877c2.   v1:= temp  @type object;
#L0877c4.   call temp:=  [|java:beans:PropertyChangeSupport.fireIndexedPropertyChange|](v2, v3, v4, v0, v1) @signature [|Ljava/beans/PropertyChangeSupport;.fireIndexedPropertyChange:(Ljava/lang/String;ILjava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type virtual;
#L0877ca.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.firePropertyChange|] ([|java:beans:PropertyChangeSupport|] v7 @type (this), [|java:beans:PropertyChangeEvent|] v8 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.firePropertyChange:(Ljava/beans/PropertyChangeEvent;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0877dc.   call temp:=  [|java:beans:PropertyChangeEvent.getPropertyName|](v8) @signature [|Ljava/beans/PropertyChangeEvent;.getPropertyName:()Ljava/lang/String;|] @classDescriptor [|java:beans:PropertyChangeEvent|] @type virtual;
#L0877e2.   v4:= temp  @type object;
#L0877e4.   call temp:=  [|java:beans:PropertyChangeEvent.getOldValue|](v8) @signature [|Ljava/beans/PropertyChangeEvent;.getOldValue:()Ljava/lang/Object;|] @classDescriptor [|java:beans:PropertyChangeEvent|] @type virtual;
#L0877ea.   v2:= temp  @type object;
#L0877ec.   call temp:=  [|java:beans:PropertyChangeEvent.getNewValue|](v8) @signature [|Ljava/beans/PropertyChangeEvent;.getNewValue:()Ljava/lang/Object;|] @classDescriptor [|java:beans:PropertyChangeEvent|] @type virtual;
#L0877f2.   v1:= temp  @type object;
#L0877f4.   if v1 == 0 then goto L08780a;
#L0877f8.   if v2 == 0 then goto L08780a;
#L0877fc.   call temp:=  [|java:lang:Object.equals|](v1, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L087802.   v6:= temp;
#L087804.   if v6 == 0 then goto L08780a;
#L087808.   return @void ;
#L08780a.   v6:= v7.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L08780e.   call temp:=  [|java:util:List.iterator|](v6) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L087814.   v0:= temp  @type object;
#L087816.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L08781c.   v6:= temp;
#L08781e.   if v6 == 0 then goto L087808;
#L087822.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087828.   v3:= temp  @type object;
#L08782a.   v3:= ([|java:beans:PropertyChangeListener|])v3;
#L08782e.   v6:= instanceof @varname v3 @type [|java:beans:PropertyChangeListenerProxy|];
#L087832.   if v6 == 0 then goto L08785e;
#L087836.   v5:= v3  @type object;
#L087838.   v5:= ([|java:beans:PropertyChangeListenerProxy|])v5;
#L08783c.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getPropertyName|](v5) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getPropertyName:()Ljava/lang/String;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L087842.   v6:= temp  @type object;
#L087844.   call temp:=  [|libcore:util:Objects.equal|](v6, v4) @signature [|Llibcore/util/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|libcore:util:Objects|] @type static;
#L08784a.   v6:= temp;
#L08784c.   if v6 == 0 then goto L087816;
#L087850.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getListener|](v5) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getListener:()Ljava/util/EventListener;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L087856.   v3:= temp  @type object;
#L087858.   v3:= ([|java:beans:PropertyChangeListener|])v3;
#L08785c.   goto L08782e;
#L08785e.   call temp:=  [|java:beans:PropertyChangeListener.propertyChange|](v3, v8) @signature [|Ljava/beans/PropertyChangeListener;.propertyChange:(Ljava/beans/PropertyChangeEvent;)V|] @classDescriptor [|java:beans:PropertyChangeListener|] @type interface;
#L087864.   goto L087816;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.firePropertyChange|] ([|java:beans:PropertyChangeSupport|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.firePropertyChange:(Ljava/lang/String;II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L087878.   call temp:=  [|java:lang:Integer.valueOf|](v4) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L08787e.   v0:= temp  @type object;
#L087880.   call temp:=  [|java:lang:Integer.valueOf|](v5) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L087886.   v1:= temp  @type object;
#L087888.   call temp:=  [|java:beans:PropertyChangeSupport.firePropertyChange|](v2, v3, v0, v1) @signature [|Ljava/beans/PropertyChangeSupport;.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type virtual;
#L08788e.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.firePropertyChange|] ([|java:beans:PropertyChangeSupport|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:Object|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0878a0.   v0:= new [|java:beans:PropertyChangeEvent|];
#L0878a4.   v1:= v2.[|java:beans:PropertyChangeSupport.sourceBean|]   @type object;
#L0878a8.   call temp:=  [|java:beans:PropertyChangeEvent.<init>|](v0, v1, v3, v4, v5) @signature [|Ljava/beans/PropertyChangeEvent;.<init>:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:beans:PropertyChangeEvent|] @type direct;
#L0878ae.   call temp:=  [|java:beans:PropertyChangeSupport.firePropertyChange|](v2, v0) @signature [|Ljava/beans/PropertyChangeSupport;.firePropertyChange:(Ljava/beans/PropertyChangeEvent;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type virtual;
#L0878b4.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.firePropertyChange|] ([|java:beans:PropertyChangeSupport|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|boolean|] v4, [|boolean|] v5) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.firePropertyChange:(Ljava/lang/String;ZZ)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0878c8.   call temp:=  [|java:lang:Boolean.valueOf|](v4) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L0878ce.   v0:= temp  @type object;
#L0878d0.   call temp:=  [|java:lang:Boolean.valueOf|](v5) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L0878d6.   v1:= temp  @type object;
#L0878d8.   call temp:=  [|java:beans:PropertyChangeSupport.firePropertyChange|](v2, v3, v0, v1) @signature [|Ljava/beans/PropertyChangeSupport;.firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type virtual;
#L0878de.   return @void ;

   }
    procedure [|java:beans:PropertyChangeListener|][] [|java:beans:PropertyChangeSupport.getPropertyChangeListeners|] ([|java:beans:PropertyChangeSupport|] v2 @type (this)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.getPropertyChangeListeners:()[Ljava/beans/PropertyChangeListener;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0878f0.   v0:= v2.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L0878f4.   v1:= 0  @length 4;
#L0878f6.   v1:= new [|java:beans:PropertyChangeListener|][v1];
#L0878fa.   call temp:=  [|java:util:List.toArray|](v0, v1) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L087900.   v0:= temp  @type object;
#L087902.   v0:= ([|java:beans:PropertyChangeListener|][])v0;
#L087906.   return v0  @type object;

   }
    procedure [|java:beans:PropertyChangeListener|][] [|java:beans:PropertyChangeSupport.getPropertyChangeListeners|] ([|java:beans:PropertyChangeSupport|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.getPropertyChangeListeners:(Ljava/lang/String;)[Ljava/beans/PropertyChangeListener;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L087918.   v2:= new [|java:util:ArrayList|];
#L08791c.   call temp:=  [|java:util:ArrayList.<init>|](v2) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L087922.   v3:= v4.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L087926.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L08792c.   v0:= temp  @type object;
#L08792e.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087934.   v3:= temp;
#L087936.   if v3 == 0 then goto L087970;
#L08793a.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087940.   v1:= temp  @type object;
#L087942.   v1:= ([|java:beans:PropertyChangeListener|])v1;
#L087946.   v3:= instanceof @varname v1 @type [|java:beans:PropertyChangeListenerProxy|];
#L08794a.   if v3 == 0 then goto L08792e;
#L08794e.   v3:= v1  @type object;
#L087950.   v3:= ([|java:beans:PropertyChangeListenerProxy|])v3;
#L087954.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getPropertyName|](v3) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getPropertyName:()Ljava/lang/String;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L08795a.   v3:= temp  @type object;
#L08795c.   call temp:=  [|libcore:util:Objects.equal|](v5, v3) @signature [|Llibcore/util/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|libcore:util:Objects|] @type static;
#L087962.   v3:= temp;
#L087964.   if v3 == 0 then goto L08792e;
#L087968.   call temp:=  [|java:util:List.add|](v2, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L08796e.   goto L08792e;
#L087970.   call temp:=  [|java:util:List.size|](v2) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L087976.   v3:= temp;
#L087978.   v3:= new [|java:beans:PropertyChangeListener|][v3];
#L08797c.   call temp:=  [|java:util:List.toArray|](v2, v3) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L087982.   v3:= temp  @type object;
#L087984.   v3:= ([|java:beans:PropertyChangeListener|][])v3;
#L087988.   return v3  @type object;

   }
    procedure [|boolean|] [|java:beans:PropertyChangeSupport.hasListeners|] ([|java:beans:PropertyChangeSupport|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.hasListeners:(Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08799c.   v2:= v3.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L0879a0.   call temp:=  [|java:util:List.iterator|](v2) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0879a6.   v0:= temp  @type object;
#L0879a8.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0879ae.   v2:= temp;
#L0879b0.   if v2 == 0 then goto L0879e4;
#L0879b4.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0879ba.   v1:= temp  @type object;
#L0879bc.   v1:= ([|java:beans:PropertyChangeListener|])v1;
#L0879c0.   v2:= instanceof @varname v1 @type [|java:beans:PropertyChangeListenerProxy|];
#L0879c4.   if v2 == 0 then goto L0879e0;
#L0879c8.   v1:= ([|java:beans:PropertyChangeListenerProxy|])v1;
#L0879cc.   call temp:=  [|java:beans:PropertyChangeListenerProxy.getPropertyName|](v1) @signature [|Ljava/beans/PropertyChangeListenerProxy;.getPropertyName:()Ljava/lang/String;|] @classDescriptor [|java:beans:PropertyChangeListenerProxy|] @type virtual;
#L0879d2.   v2:= temp  @type object;
#L0879d4.   call temp:=  [|libcore:util:Objects.equal|](v4, v2) @signature [|Llibcore/util/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|libcore:util:Objects|] @type static;
#L0879da.   v2:= temp;
#L0879dc.   if v2 == 0 then goto L0879a8;
#L0879e0.   v2:= 1  @length 4;
#L0879e2.   return v2;
#L0879e4.   v2:= 0  @length 4;
#L0879e6.   goto L0879e2;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.removePropertyChangeListener|] ([|java:beans:PropertyChangeSupport|] v3 @type (this), [|java:beans:PropertyChangeListener|] v4 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0879f8.   v2:= v3.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L0879fc.   call temp:=  [|java:util:List.iterator|](v2) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L087a02.   v0:= temp  @type object;
#L087a04.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087a0a.   v2:= temp;
#L087a0c.   if v2 == 0 then goto L087a34;
#L087a10.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087a16.   v1:= temp  @type object;
#L087a18.   v1:= ([|java:beans:PropertyChangeListener|])v1;
#L087a1c.   v2:= 0  @length 4;
#L087a1e.   call temp:=  [|java:beans:PropertyChangeSupport.equals|](v3, v2, v4, v1) @signature [|Ljava/beans/PropertyChangeSupport;.equals:(Ljava/lang/String;Ljava/util/EventListener;Ljava/util/EventListener;)Z|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type direct;
#L087a24.   v2:= temp;
#L087a26.   if v2 == 0 then goto L087a04;
#L087a2a.   v2:= v3.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L087a2e.   call temp:=  [|java:util:List.remove|](v2, v1) @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L087a34.   return @void ;

   }
    procedure [|void|] [|java:beans:PropertyChangeSupport.removePropertyChangeListener|] ([|java:beans:PropertyChangeSupport|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:beans:PropertyChangeListener|] v5 @type (object)) @owner [|java:beans:PropertyChangeSupport|] @signature [|Ljava/beans/PropertyChangeSupport;.removePropertyChangeListener:(Ljava/lang/String;Ljava/beans/PropertyChangeListener;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L087a48.   v2:= v3.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L087a4c.   call temp:=  [|java:util:List.iterator|](v2) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L087a52.   v0:= temp  @type object;
#L087a54.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087a5a.   v2:= temp;
#L087a5c.   if v2 == 0 then goto L087a82;
#L087a60.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L087a66.   v1:= temp  @type object;
#L087a68.   v1:= ([|java:beans:PropertyChangeListener|])v1;
#L087a6c.   call temp:=  [|java:beans:PropertyChangeSupport.equals|](v3, v4, v5, v1) @signature [|Ljava/beans/PropertyChangeSupport;.equals:(Ljava/lang/String;Ljava/util/EventListener;Ljava/util/EventListener;)Z|] @classDescriptor [|java:beans:PropertyChangeSupport|] @type direct;
#L087a72.   v2:= temp;
#L087a74.   if v2 == 0 then goto L087a54;
#L087a78.   v2:= v3.[|java:beans:PropertyChangeSupport.listeners|]   @type object;
#L087a7c.   call temp:=  [|java:util:List.remove|](v2, v1) @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L087a82.   return @void ;

   }
record [|java:lang:AutoCloseable|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:lang:AutoCloseable.close|] () @owner [|java:lang:AutoCloseable|] @signature [|Ljava/lang/AutoCloseable;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:Closeable|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:lang:AutoCloseable|] {
   }
    procedure [|void|] [|java:io:Closeable.close|] () @owner [|java:io:Closeable|] @signature [|Ljava/io/Closeable;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:InputStream|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:io:Closeable|] {
   }
    procedure [|void|] [|java:io:InputStream.<init>|] ([|java:io:InputStream|] v0 @type (this)) @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L087a94.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L087a9a.   return @void ;

   }
    procedure [|int|] [|java:io:InputStream.available|] ([|java:io:InputStream|] v1 @type (this)) @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087aac.   v0:= 0  @length 4;
#L087aae.   return v0;

   }
    procedure [|void|] [|java:io:InputStream.close|] ([|java:io:InputStream|] v0 @type (this)) @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.close:()V|] @Access PUBLIC {
      local temp ;
      
#L087ac0.   return @void ;

   }
    procedure [|void|] [|java:io:InputStream.mark|] ([|java:io:InputStream|] v0 @type (this), [|int|] v1) @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.mark:(I)V|] @Access PUBLIC {
      local temp ;
      
#L087ad4.   return @void ;

   }
    procedure [|boolean|] [|java:io:InputStream.markSupported|] ([|java:io:InputStream|] v1 @type (this)) @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087ae8.   v0:= 0  @length 4;
#L087aea.   return v0;

   }
    procedure [|int|] [|java:io:InputStream.read|] () @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.read:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:io:InputStream.read|] ([|java:io:InputStream|] v2 @type (this), [|byte|][] v3) @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.read:([B)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L087afc.   v0:= 0  @length 4;
#L087afe.   v1:= v3.length;
#L087b00.   call temp:=  [|java:io:InputStream.read|](v2, v3, v0, v1) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087b06.   v0:= temp;
#L087b08.   return v0;

   }
    procedure [|int|] [|java:io:InputStream.read|] ([|java:io:InputStream|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L087b1c.   v3:= -1  @length 4;
#L087b1e.   v4:= v7.length;
#L087b20.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v4, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L087b26.   v2:= 0  @length 4;
#L087b28.   if v2 >= v9 then goto L087b58;
#L087b2c.   call temp:=  [|java:io:InputStream.read|](v6) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087b32.   v0:= temp;
#L087b34.   if v0 != v3 then goto L087b48;
#L087b38.   if v2 != 0 then goto L087b3e;
#L087b3c.   v2:= v3;
#L087b3e.   return v2;
#L087b40.   v1:= Exception  @type object;
#L087b42.   if v2 != 0 then goto L087b3e;
#L087b46.   throw v1;
#L087b48.   v4:= v8 + v2  @type int;
#L087b4c.   v5:= (byte)v0  @type i2b;
#L087b4e.   v7[v4]:= v5  @byte;
#L087b52.   v2:= v2 + 1;
#L087b56.   goto L087b28;
#L087b58.   v2:= v9;
#L087b5a.   goto L087b3e;
  catch  [|java:io:IOException|] @[L087b2c..L087b32] goto L087b40;

   }
    procedure [|void|] [|java:io:InputStream.reset|] ([|java:io:InputStream|] v1 @type (this)) @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.reset:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L087b78.   (@monitorenter v1)
#L087b7a.   v0:= new [|java:io:IOException|];
#L087b7e.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L087b84.   throw v0;
#L087b86.   v0:= Exception  @type object;
#L087b88.   (@monitorexit v1)
#L087b8a.   throw v0;
  catch  [|any|] @[L087b7a..L087b86] goto L087b86;

   }
    procedure [|long|] [|java:io:InputStream.skip|] ([|java:io:InputStream|] v2 @type (this), [|long|] v3) @owner [|java:io:InputStream|] @signature [|Ljava/io/InputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L087ba8.   call temp:=  [|libcore:io:Streams.skipByReading|](v2, v3, v4) @signature [|Llibcore/io/Streams;.skipByReading:(Ljava/io/InputStream;J)J|] @classDescriptor [|libcore:io:Streams|] @type static;
#L087bae.   v0:= temp  @type wide;
#L087bb0.   return v0  @type wide;

   }
record [|java:io:FilterInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:InputStream|] {
      [|java:io:InputStream|] [|java:io:FilterInputStream.in|]    @AccessFlag PROTECTED_VOLATILE;
   }
    procedure [|void|] [|java:io:FilterInputStream.<init>|] ([|java:io:FilterInputStream|] v0 @type (this), [|java:io:InputStream|] v1 @type (object)) @owner [|java:io:FilterInputStream|] @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L087bc4.   call temp:=  [|java:io:InputStream.<init>|](v0) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L087bca.   v0.[|java:io:FilterInputStream.in|]  := v1 @type object;
#L087bce.   return @void ;

   }
    procedure [|int|] [|java:io:FilterInputStream.available|] ([|java:io:FilterInputStream|] v1 @type (this)) @owner [|java:io:FilterInputStream|] @signature [|Ljava/io/FilterInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087be0.   v0:= v1.[|java:io:FilterInputStream.in|]   @type object;
#L087be4.   call temp:=  [|java:io:InputStream.available|](v0) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087bea.   v0:= temp;
#L087bec.   return v0;

   }
    procedure [|void|] [|java:io:FilterInputStream.close|] ([|java:io:FilterInputStream|] v1 @type (this)) @owner [|java:io:FilterInputStream|] @signature [|Ljava/io/FilterInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087c00.   v0:= v1.[|java:io:FilterInputStream.in|]   @type object;
#L087c04.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087c0a.   return @void ;

   }
    procedure [|void|] [|java:io:FilterInputStream.mark|] ([|java:io:FilterInputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:FilterInputStream|] @signature [|Ljava/io/FilterInputStream;.mark:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L087c1c.   (@monitorenter v1)
#L087c1e.   v0:= v1.[|java:io:FilterInputStream.in|]   @type object;
#L087c22.   call temp:=  [|java:io:InputStream.mark|](v0, v2) @signature [|Ljava/io/InputStream;.mark:(I)V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087c28.   (@monitorexit v1)
#L087c2a.   return @void ;
#L087c2c.   v0:= Exception  @type object;
#L087c2e.   (@monitorexit v1)
#L087c30.   throw v0;
  catch  [|any|] @[L087c1e..L087c28] goto L087c2c;

   }
    procedure [|boolean|] [|java:io:FilterInputStream.markSupported|] ([|java:io:FilterInputStream|] v1 @type (this)) @owner [|java:io:FilterInputStream|] @signature [|Ljava/io/FilterInputStream;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087c50.   v0:= v1.[|java:io:FilterInputStream.in|]   @type object;
#L087c54.   call temp:=  [|java:io:InputStream.markSupported|](v0) @signature [|Ljava/io/InputStream;.markSupported:()Z|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087c5a.   v0:= temp;
#L087c5c.   return v0;

   }
    procedure [|int|] [|java:io:FilterInputStream.read|] ([|java:io:FilterInputStream|] v1 @type (this)) @owner [|java:io:FilterInputStream|] @signature [|Ljava/io/FilterInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087c70.   v0:= v1.[|java:io:FilterInputStream.in|]   @type object;
#L087c74.   call temp:=  [|java:io:InputStream.read|](v0) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087c7a.   v0:= temp;
#L087c7c.   return v0;

   }
    procedure [|int|] [|java:io:FilterInputStream.read|] ([|java:io:FilterInputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:FilterInputStream|] @signature [|Ljava/io/FilterInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087c90.   v0:= v1.[|java:io:FilterInputStream.in|]   @type object;
#L087c94.   call temp:=  [|java:io:InputStream.read|](v0, v2, v3, v4) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087c9a.   v0:= temp;
#L087c9c.   return v0;

   }
    procedure [|void|] [|java:io:FilterInputStream.reset|] ([|java:io:FilterInputStream|] v1 @type (this)) @owner [|java:io:FilterInputStream|] @signature [|Ljava/io/FilterInputStream;.reset:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L087cb0.   (@monitorenter v1)
#L087cb2.   v0:= v1.[|java:io:FilterInputStream.in|]   @type object;
#L087cb6.   call temp:=  [|java:io:InputStream.reset|](v0) @signature [|Ljava/io/InputStream;.reset:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087cbc.   (@monitorexit v1)
#L087cbe.   return @void ;
#L087cc0.   v0:= Exception  @type object;
#L087cc2.   (@monitorexit v1)
#L087cc4.   throw v0;
  catch  [|any|] @[L087cb2..L087cbc] goto L087cc0;

   }
    procedure [|long|] [|java:io:FilterInputStream.skip|] ([|java:io:FilterInputStream|] v2 @type (this), [|long|] v3) @owner [|java:io:FilterInputStream|] @signature [|Ljava/io/FilterInputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L087ce4.   v0:= v2.[|java:io:FilterInputStream.in|]   @type object;
#L087ce8.   call temp:=  [|java:io:InputStream.skip|](v0, v3, v4) @signature [|Ljava/io/InputStream;.skip:(J)J|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087cee.   v0:= temp  @type wide;
#L087cf0.   return v0  @type wide;

   }
record [|java:io:BufferedInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterInputStream|] {
      [|byte|][] [|java:io:BufferedInputStream.buf|]    @AccessFlag PROTECTED_VOLATILE;
      [|int|] [|java:io:BufferedInputStream.count|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:BufferedInputStream.marklimit|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:BufferedInputStream.markpos|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:BufferedInputStream.pos|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:BufferedInputStream.<init>|] ([|java:io:BufferedInputStream|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L087d04.   v0:= 8192  @length 16;
#L087d08.   call temp:=  [|java:io:BufferedInputStream.<init>|](v1, v2, v0) @signature [|Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;I)V|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L087d0e.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedInputStream.<init>|] ([|java:io:BufferedInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object), [|int|] v4) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L087d20.   call temp:=  [|java:io:FilterInputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L087d26.   v0:= -1  @length 4;
#L087d28.   v2.[|java:io:BufferedInputStream.markpos|]  := v0;
#L087d2c.   if v4 > 0 then goto L087d40;
#L087d30.   v0:= new [|java:lang:IllegalArgumentException|];
#L087d34.   v1:= "size <= 0" @type (object, string);
#L087d38.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L087d3e.   throw v0;
#L087d40.   v0:= new [|byte|][v4];
#L087d44.   v2.[|java:io:BufferedInputStream.buf|]  := v0 @type object;
#L087d48.   return @void ;

   }
    procedure [|int|] [|java:io:BufferedInputStream.fillbuf|] ([|java:io:BufferedInputStream|] v8 @type (this), [|java:io:InputStream|] v9 @type (object), [|byte|][] v10) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.fillbuf:(Ljava/io/InputStream;[B)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L087d5c.   v7:= -1  @length 4;
#L087d5e.   v4:= 0  @length 4;
#L087d60.   v5:= v8.[|java:io:BufferedInputStream.markpos|] ;
#L087d64.   if v5 == v7 then goto L087d7a;
#L087d68.   v5:= v8.[|java:io:BufferedInputStream.pos|] ;
#L087d6c.   v6:= v8.[|java:io:BufferedInputStream.markpos|] ;
#L087d70.   v5:= v5 - v6  @type int;
#L087d72.   v6:= v8.[|java:io:BufferedInputStream.marklimit|] ;
#L087d76.   if v5 < v6 then goto L087d9e;
#L087d7a.   call temp:=  [|java:io:InputStream.read|](v9, v10) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087d80.   v3:= temp;
#L087d82.   if v3 <= 0 then goto L087d96;
#L087d86.   v8.[|java:io:BufferedInputStream.markpos|]  := v7;
#L087d8a.   v8.[|java:io:BufferedInputStream.pos|]  := v4;
#L087d8e.   if v3 != v7 then goto L087d9a;
#L087d92.   v8.[|java:io:BufferedInputStream.count|]  := v4;
#L087d96.   v0:= v3;
#L087d98.   return v0;
#L087d9a.   v4:= v3;
#L087d9c.   goto L087d92;
#L087d9e.   v5:= v8.[|java:io:BufferedInputStream.markpos|] ;
#L087da2.   if v5 != 0 then goto L087e0c;
#L087da6.   v5:= v8.[|java:io:BufferedInputStream.marklimit|] ;
#L087daa.   v6:= v10.length;
#L087dac.   if v5 <= v6 then goto L087e0c;
#L087db0.   v5:= v10.length;
#L087db2.   v1:= v5 * 2;
#L087db6.   v5:= v8.[|java:io:BufferedInputStream.marklimit|] ;
#L087dba.   if v1 <= v5 then goto L087dc2;
#L087dbe.   v1:= v8.[|java:io:BufferedInputStream.marklimit|] ;
#L087dc2.   v2:= new [|byte|][v1];
#L087dc6.   v5:= v10.length;
#L087dc8.   call temp:=  [|java:lang:System.arraycopy|](v10, v4, v2, v4, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L087dce.   v8.[|java:io:BufferedInputStream.buf|]  := v2 @type object;
#L087dd2.   v10:= v2  @type object;
#L087dd4.   v5:= v8.[|java:io:BufferedInputStream.pos|] ;
#L087dd8.   v6:= v8.[|java:io:BufferedInputStream.markpos|] ;
#L087ddc.   v5:= v5 - v6  @type int;
#L087dde.   v8.[|java:io:BufferedInputStream.pos|]  := v5;
#L087de2.   v8.[|java:io:BufferedInputStream.markpos|]  := v4;
#L087de6.   v8.[|java:io:BufferedInputStream.count|]  := v4;
#L087dea.   v4:= v8.[|java:io:BufferedInputStream.pos|] ;
#L087dee.   v5:= v10.length;
#L087df0.   v6:= v8.[|java:io:BufferedInputStream.pos|] ;
#L087df4.   v5:= v5 - v6  @type int;
#L087df6.   call temp:=  [|java:io:InputStream.read|](v9, v10, v4, v5) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087dfc.   v0:= temp;
#L087dfe.   if v0 > 0 then goto L087e28;
#L087e02.   v4:= v8.[|java:io:BufferedInputStream.pos|] ;
#L087e06.   v8.[|java:io:BufferedInputStream.count|]  := v4;
#L087e0a.   goto L087d98;
#L087e0c.   v5:= v8.[|java:io:BufferedInputStream.markpos|] ;
#L087e10.   if v5 <= 0 then goto L087dd4;
#L087e14.   v5:= v8.[|java:io:BufferedInputStream.markpos|] ;
#L087e18.   v6:= v10.length;
#L087e1a.   v7:= v8.[|java:io:BufferedInputStream.markpos|] ;
#L087e1e.   v6:= v6 - v7  @type int;
#L087e20.   call temp:=  [|java:lang:System.arraycopy|](v10, v5, v10, v4, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L087e26.   goto L087dd4;
#L087e28.   v4:= v8.[|java:io:BufferedInputStream.pos|] ;
#L087e2c.   v4:= v4 + v0  @type int;
#L087e2e.   goto L087e06;

   }
    procedure [|java:io:IOException|] [|java:io:BufferedInputStream.streamClosed|] ([|java:io:BufferedInputStream|] v2 @type (this)) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.streamClosed:()Ljava/io/IOException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L087e40.   v0:= new [|java:io:IOException|];
#L087e44.   v1:= "BufferedInputStream is closed" @type (object, string);
#L087e48.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L087e4e.   throw v0;

   }
    procedure [|int|] [|java:io:BufferedInputStream.available|] ([|java:io:BufferedInputStream|] v3 @type (this)) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.available:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L087e60.   (@monitorenter v3)
#L087e62.   v0:= v3.[|java:io:BufferedInputStream.in|]   @type object;
#L087e66.   v1:= v3.[|java:io:BufferedInputStream.buf|]   @type object;
#L087e6a.   if v1 == 0 then goto L087e72;
#L087e6e.   if v0 != 0 then goto L087e82;
#L087e72.   call temp:=  [|java:io:BufferedInputStream.streamClosed|](v3) @signature [|Ljava/io/BufferedInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L087e78.   v1:= temp  @type object;
#L087e7a.   throw v1;
#L087e7c.   v1:= Exception  @type object;
#L087e7e.   (@monitorexit v3)
#L087e80.   throw v1;
#L087e82.   v1:= v3.[|java:io:BufferedInputStream.count|] ;
#L087e86.   v2:= v3.[|java:io:BufferedInputStream.pos|] ;
#L087e8a.   v1:= v1 - v2  @type int;
#L087e8c.   call temp:=  [|java:io:InputStream.available|](v0) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087e92.   v2:= temp;
#L087e94.   v1:= v1 + v2  @type int;
#L087e96.   (@monitorexit v3)
#L087e98.   return v1;
  catch  [|any|] @[L087e62..L087e7c] goto L087e7c;
  catch  [|any|] @[L087e82..L087e92] goto L087e7c;

   }
    procedure [|void|] [|java:io:BufferedInputStream.close|] ([|java:io:BufferedInputStream|] v2 @type (this)) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L087ec0.   v1:= 0  @length 4;
#L087ec2.   v2.[|java:io:BufferedInputStream.buf|]  := v1 @type object;
#L087ec6.   v0:= v2.[|java:io:BufferedInputStream.in|]   @type object;
#L087eca.   v2.[|java:io:BufferedInputStream.in|]  := v1 @type object;
#L087ece.   if v0 == 0 then goto L087ed8;
#L087ed2.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L087ed8.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedInputStream.mark|] ([|java:io:BufferedInputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.mark:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L087eec.   (@monitorenter v1)
#L087eee.   v1.[|java:io:BufferedInputStream.marklimit|]  := v2;
#L087ef2.   v0:= v1.[|java:io:BufferedInputStream.pos|] ;
#L087ef6.   v1.[|java:io:BufferedInputStream.markpos|]  := v0;
#L087efa.   (@monitorexit v1)
#L087efc.   return @void ;
#L087efe.   v0:= Exception  @type object;
#L087f00.   (@monitorexit v1)
#L087f02.   throw v0;
  catch  [|any|] @[L087eee..L087efa] goto L087efe;

   }
    procedure [|boolean|] [|java:io:BufferedInputStream.markSupported|] ([|java:io:BufferedInputStream|] v1 @type (this)) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L087f20.   v0:= 1  @length 4;
#L087f22.   return v0;

   }
    procedure [|int|] [|java:io:BufferedInputStream.read|] ([|java:io:BufferedInputStream|] v5 @type (this)) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.read:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L087f34.   v2:= -1  @length 4;
#L087f36.   (@monitorenter v5)
#L087f38.   v0:= v5.[|java:io:BufferedInputStream.buf|]   @type object;
#L087f3c.   v1:= v5.[|java:io:BufferedInputStream.in|]   @type object;
#L087f40.   if v0 == 0 then goto L087f48;
#L087f44.   if v1 != 0 then goto L087f58;
#L087f48.   call temp:=  [|java:io:BufferedInputStream.streamClosed|](v5) @signature [|Ljava/io/BufferedInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L087f4e.   v2:= temp  @type object;
#L087f50.   throw v2;
#L087f52.   v2:= Exception  @type object;
#L087f54.   (@monitorexit v5)
#L087f56.   throw v2;
#L087f58.   v3:= v5.[|java:io:BufferedInputStream.pos|] ;
#L087f5c.   v4:= v5.[|java:io:BufferedInputStream.count|] ;
#L087f60.   if v3 < v4 then goto L087f74;
#L087f64.   call temp:=  [|java:io:BufferedInputStream.fillbuf|](v5, v1, v0) @signature [|Ljava/io/BufferedInputStream;.fillbuf:(Ljava/io/InputStream;[B)I|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L087f6a.   v3:= temp;
#L087f6c.   if v3 != v2 then goto L087f74;
#L087f70.   (@monitorexit v5)
#L087f72.   return v2;
#L087f74.   v3:= v5.[|java:io:BufferedInputStream.buf|]   @type object;
#L087f78.   if v0 == v3 then goto L087f8e;
#L087f7c.   v0:= v5.[|java:io:BufferedInputStream.buf|]   @type object;
#L087f80.   if v0 != 0 then goto L087f8e;
#L087f84.   call temp:=  [|java:io:BufferedInputStream.streamClosed|](v5) @signature [|Ljava/io/BufferedInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L087f8a.   v2:= temp  @type object;
#L087f8c.   throw v2;
#L087f8e.   v3:= v5.[|java:io:BufferedInputStream.count|] ;
#L087f92.   v4:= v5.[|java:io:BufferedInputStream.pos|] ;
#L087f96.   v3:= v3 - v4  @type int;
#L087f98.   if v3 <= 0 then goto L087f70;
#L087f9c.   v2:= v5.[|java:io:BufferedInputStream.pos|] ;
#L087fa0.   v3:= v2 + 1;
#L087fa4.   v5.[|java:io:BufferedInputStream.pos|]  := v3;
#L087fa8.   v2:= v0[v2]  @byte;
#L087fac.   v2:= v2 ^& 255;
#L087fb0.   goto L087f70;
  catch  [|any|] @[L087f38..L087f52] goto L087f52;
  catch  [|any|] @[L087f58..L087f6a] goto L087f52;
  catch  [|any|] @[L087f74..L087fac] goto L087f52;

   }
    procedure [|int|] [|java:io:BufferedInputStream.read|] ([|java:io:BufferedInputStream|] v8 @type (this), [|byte|][] v9, [|int|] v10, [|int|] v11) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.read:([BII)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L087fe0.   v5:= -1  @length 4;
#L087fe2.   (@monitorenter v8)
#L087fe4.   v1:= v8.[|java:io:BufferedInputStream.buf|]   @type object;
#L087fe8.   if v1 != 0 then goto L087ffc;
#L087fec.   call temp:=  [|java:io:BufferedInputStream.streamClosed|](v8) @signature [|Ljava/io/BufferedInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L087ff2.   v5:= temp  @type object;
#L087ff4.   throw v5;
#L087ff6.   v5:= Exception  @type object;
#L087ff8.   (@monitorexit v8)
#L087ffa.   throw v5;
#L087ffc.   v6:= v9.length;
#L087ffe.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v6, v10, v11) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L088004.   if v11 != 0 then goto L08800e;
#L088008.   v5:= 0  @length 4;
#L08800a.   (@monitorexit v8)
#L08800c.   return v5;
#L08800e.   v2:= v8.[|java:io:BufferedInputStream.in|]   @type object;
#L088012.   if v2 != 0 then goto L088020;
#L088016.   call temp:=  [|java:io:BufferedInputStream.streamClosed|](v8) @signature [|Ljava/io/BufferedInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L08801c.   v5:= temp  @type object;
#L08801e.   throw v5;
#L088020.   v6:= v8.[|java:io:BufferedInputStream.pos|] ;
#L088024.   v7:= v8.[|java:io:BufferedInputStream.count|] ;
#L088028.   if v6 >= v7 then goto L08809c;
#L08802c.   v6:= v8.[|java:io:BufferedInputStream.count|] ;
#L088030.   v7:= v8.[|java:io:BufferedInputStream.pos|] ;
#L088034.   v6:= v6 - v7  @type int;
#L088036.   if v6 < v11 then goto L088064;
#L08803a.   v0:= v11;
#L08803c.   v6:= v8.[|java:io:BufferedInputStream.pos|] ;
#L088040.   call temp:=  [|java:lang:System.arraycopy|](v1, v6, v9, v10, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L088046.   v6:= v8.[|java:io:BufferedInputStream.pos|] ;
#L08804a.   v6:= v6 + v0  @type int;
#L08804c.   v8.[|java:io:BufferedInputStream.pos|]  := v6;
#L088050.   if v0 == v11 then goto L088060;
#L088054.   call temp:=  [|java:io:InputStream.available|](v2) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08805a.   v6:= temp;
#L08805c.   if v6 != 0 then goto L088072;
#L088060.   v5:= v0;
#L088062.   goto L08800a;
#L088064.   v6:= v8.[|java:io:BufferedInputStream.count|] ;
#L088068.   v7:= v8.[|java:io:BufferedInputStream.pos|] ;
#L08806c.   v0:= v6 - v7  @type int;
#L088070.   goto L08803c;
#L088072.   v10:= v10 + v0  @type int;
#L088074.   v4:= v11 - v0  @type int;
#L088078.   v6:= v8.[|java:io:BufferedInputStream.markpos|] ;
#L08807c.   if v6 != v5 then goto L0880a0;
#L088080.   v6:= v1.length;
#L088082.   if v4 < v6 then goto L0880a0;
#L088086.   call temp:=  [|java:io:InputStream.read|](v2, v9, v10, v4) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08808c.   v3:= temp;
#L08808e.   if v3 != v5 then goto L0880f4;
#L088092.   if v4 == v11 then goto L08800a;
#L088096.   v5:= v11 - v4  @type int;
#L08809a.   goto L08800a;
#L08809c.   v4:= v11;
#L08809e.   goto L088078;
#L0880a0.   call temp:=  [|java:io:BufferedInputStream.fillbuf|](v8, v2, v1) @signature [|Ljava/io/BufferedInputStream;.fillbuf:(Ljava/io/InputStream;[B)I|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L0880a6.   v6:= temp;
#L0880a8.   if v6 != v5 then goto L0880b6;
#L0880ac.   if v4 == v11 then goto L08800a;
#L0880b0.   v5:= v11 - v4  @type int;
#L0880b4.   goto L08800a;
#L0880b6.   v6:= v8.[|java:io:BufferedInputStream.buf|]   @type object;
#L0880ba.   if v1 == v6 then goto L0880d0;
#L0880be.   v1:= v8.[|java:io:BufferedInputStream.buf|]   @type object;
#L0880c2.   if v1 != 0 then goto L0880d0;
#L0880c6.   call temp:=  [|java:io:BufferedInputStream.streamClosed|](v8) @signature [|Ljava/io/BufferedInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L0880cc.   v5:= temp  @type object;
#L0880ce.   throw v5;
#L0880d0.   v6:= v8.[|java:io:BufferedInputStream.count|] ;
#L0880d4.   v7:= v8.[|java:io:BufferedInputStream.pos|] ;
#L0880d8.   v6:= v6 - v7  @type int;
#L0880da.   if v6 < v4 then goto L0880fe;
#L0880de.   v3:= v4;
#L0880e0.   v6:= v8.[|java:io:BufferedInputStream.pos|] ;
#L0880e4.   call temp:=  [|java:lang:System.arraycopy|](v1, v6, v9, v10, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0880ea.   v6:= v8.[|java:io:BufferedInputStream.pos|] ;
#L0880ee.   v6:= v6 + v3  @type int;
#L0880f0.   v8.[|java:io:BufferedInputStream.pos|]  := v6;
#L0880f4.   v4:= v4 - v3  @type int;
#L0880f6.   if v4 != 0 then goto L08810c;
#L0880fa.   v5:= v11;
#L0880fc.   goto L08800a;
#L0880fe.   v6:= v8.[|java:io:BufferedInputStream.count|] ;
#L088102.   v7:= v8.[|java:io:BufferedInputStream.pos|] ;
#L088106.   v3:= v6 - v7  @type int;
#L08810a.   goto L0880e0;
#L08810c.   call temp:=  [|java:io:InputStream.available|](v2) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L088112.   v6:= temp;
#L088114.   if v6 != 0 then goto L088120;
#L088118.   v5:= v11 - v4  @type int;
#L08811c.   goto L08800a;
#L088120.   v10:= v10 + v3  @type int;
#L088122.   goto L088078;
  catch  [|any|] @[L087fe4..L087ff6] goto L087ff6;
  catch  [|any|] @[L087ffc..L088004] goto L087ff6;
  catch  [|any|] @[L08800e..L088112] goto L087ff6;

   }
    procedure [|void|] [|java:io:BufferedInputStream.reset|] ([|java:io:BufferedInputStream|] v2 @type (this)) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.reset:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L088150.   (@monitorenter v2)
#L088152.   v0:= v2.[|java:io:BufferedInputStream.buf|]   @type object;
#L088156.   if v0 != 0 then goto L088170;
#L08815a.   v0:= new [|java:io:IOException|];
#L08815e.   v1:= "Stream is closed" @type (object, string);
#L088162.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L088168.   throw v0;
#L08816a.   v0:= Exception  @type object;
#L08816c.   (@monitorexit v2)
#L08816e.   throw v0;
#L088170.   v0:= -1  @length 4;
#L088172.   v1:= v2.[|java:io:BufferedInputStream.markpos|] ;
#L088176.   if v0 != v1 then goto L08818a;
#L08817a.   v0:= new [|java:io:IOException|];
#L08817e.   v1:= "Mark has been invalidated." @type (object, string);
#L088182.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L088188.   throw v0;
#L08818a.   v0:= v2.[|java:io:BufferedInputStream.markpos|] ;
#L08818e.   v2.[|java:io:BufferedInputStream.pos|]  := v0;
#L088192.   (@monitorexit v2)
#L088194.   return @void ;
  catch  [|any|] @[L088152..L08816a] goto L08816a;
  catch  [|any|] @[L088172..L088192] goto L08816a;

   }
    procedure [|long|] [|java:io:BufferedInputStream.skip|] ([|java:io:BufferedInputStream|] v8 @type (this), [|long|] v9) @owner [|java:io:BufferedInputStream|] @signature [|Ljava/io/BufferedInputStream;.skip:(J)J|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0881bc.   v6:= -1  @length 4;
#L0881be.   (@monitorenter v8)
#L0881c0.   v0:= v8.[|java:io:BufferedInputStream.buf|]   @type object;
#L0881c4.   v1:= v8.[|java:io:BufferedInputStream.in|]   @type object;
#L0881c8.   if v0 != 0 then goto L0881dc;
#L0881cc.   call temp:=  [|java:io:BufferedInputStream.streamClosed|](v8) @signature [|Ljava/io/BufferedInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L0881d2.   v4:= temp  @type object;
#L0881d4.   throw v4;
#L0881d6.   v4:= Exception  @type object;
#L0881d8.   (@monitorexit v8)
#L0881da.   throw v4;
#L0881dc.   v4:= 1  @length wide16;
#L0881e0.   v4:= cmp(v9,v4);
#L0881e4.   if v4 >= 0 then goto L0881f0;
#L0881e8.   v9:= 0  @length wide16;
#L0881ec.   (@monitorexit v8)
#L0881ee.   return v9  @type wide;
#L0881f0.   if v1 != 0 then goto L0881fe;
#L0881f4.   call temp:=  [|java:io:BufferedInputStream.streamClosed|](v8) @signature [|Ljava/io/BufferedInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L0881fa.   v4:= temp  @type object;
#L0881fc.   throw v4;
#L0881fe.   v4:= v8.[|java:io:BufferedInputStream.count|] ;
#L088202.   v5:= v8.[|java:io:BufferedInputStream.pos|] ;
#L088206.   v4:= v4 - v5  @type int;
#L088208.   v4:= (long)v4  @type i2l;
#L08820a.   v4:= cmp(v4,v9);
#L08820e.   if v4 < 0 then goto L088222;
#L088212.   v4:= v8.[|java:io:BufferedInputStream.pos|] ;
#L088216.   v4:= (long)v4  @type i2l;
#L088218.   v4:= v4 + v9  @type long;
#L08821a.   v4:= (int)v4  @type l2i;
#L08821c.   v8.[|java:io:BufferedInputStream.pos|]  := v4;
#L088220.   goto L0881ec;
#L088222.   v4:= v8.[|java:io:BufferedInputStream.count|] ;
#L088226.   v5:= v8.[|java:io:BufferedInputStream.pos|] ;
#L08822a.   v4:= v4 - v5  @type int;
#L08822c.   v2:= (long)v4  @type i2l;
#L08822e.   v4:= v8.[|java:io:BufferedInputStream.count|] ;
#L088232.   v8.[|java:io:BufferedInputStream.pos|]  := v4;
#L088236.   v4:= v8.[|java:io:BufferedInputStream.markpos|] ;
#L08823a.   if v4 == v6 then goto L0882a2;
#L08823e.   v4:= v8.[|java:io:BufferedInputStream.marklimit|] ;
#L088242.   v4:= (long)v4  @type i2l;
#L088244.   v4:= cmp(v9,v4);
#L088248.   if v4 > 0 then goto L0882a2;
#L08824c.   call temp:=  [|java:io:BufferedInputStream.fillbuf|](v8, v1, v0) @signature [|Ljava/io/BufferedInputStream;.fillbuf:(Ljava/io/InputStream;[B)I|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L088252.   v4:= temp;
#L088254.   if v4 != v6 then goto L08825c;
#L088258.   v9:= v2  @type wide;
#L08825a.   goto L0881ec;
#L08825c.   v4:= v8.[|java:io:BufferedInputStream.count|] ;
#L088260.   v5:= v8.[|java:io:BufferedInputStream.pos|] ;
#L088264.   v4:= v4 - v5  @type int;
#L088266.   v4:= (long)v4  @type i2l;
#L088268.   v6:= v9 - v2  @type long;
#L08826c.   v4:= cmp(v4,v6);
#L088270.   if v4 < 0 then goto L088288;
#L088274.   v4:= v8.[|java:io:BufferedInputStream.pos|] ;
#L088278.   v4:= (long)v4  @type i2l;
#L08827a.   v6:= v9 - v2  @type long;
#L08827e.   v4:= v4 + v6  @type long;
#L088280.   v4:= (int)v4  @type l2i;
#L088282.   v8.[|java:io:BufferedInputStream.pos|]  := v4;
#L088286.   goto L0881ec;
#L088288.   v4:= v8.[|java:io:BufferedInputStream.count|] ;
#L08828c.   v5:= v8.[|java:io:BufferedInputStream.pos|] ;
#L088290.   v4:= v4 - v5  @type int;
#L088292.   v4:= (long)v4  @type i2l;
#L088294.   v2:= v2 + v4  @type long;
#L088296.   v4:= v8.[|java:io:BufferedInputStream.count|] ;
#L08829a.   v8.[|java:io:BufferedInputStream.pos|]  := v4;
#L08829e.   v9:= v2  @type wide;
#L0882a0.   goto L0881ec;
#L0882a2.   v4:= v9 - v2  @type long;
#L0882a6.   call temp:=  [|java:io:InputStream.skip|](v1, v4, v5) @signature [|Ljava/io/InputStream;.skip:(J)J|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0882ac.   v4:= temp  @type wide;
#L0882ae.   v9:= v2 + v4  @type long;
#L0882b2.   goto L0881ec;
  catch  [|any|] @[L0881c0..L0881d6] goto L0881d6;
  catch  [|any|] @[L0881f4..L0882ac] goto L0881d6;

   }
record [|java:io:Flushable|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:io:Flushable.flush|] () @owner [|java:io:Flushable|] @signature [|Ljava/io/Flushable;.flush:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:OutputStream|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:io:Closeable|], [|java:io:Flushable|] {
   }
    procedure [|void|] [|java:io:OutputStream.<init>|] ([|java:io:OutputStream|] v0 @type (this)) @owner [|java:io:OutputStream|] @signature [|Ljava/io/OutputStream;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0882d8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0882de.   return @void ;

   }
    procedure [|boolean|] [|java:io:OutputStream.checkError|] ([|java:io:OutputStream|] v1 @type (this)) @owner [|java:io:OutputStream|] @signature [|Ljava/io/OutputStream;.checkError:()Z|] @Access  {
      local temp ;
        v0;
      
#L0882f0.   v0:= 0  @length 4;
#L0882f2.   return v0;

   }
    procedure [|void|] [|java:io:OutputStream.close|] ([|java:io:OutputStream|] v0 @type (this)) @owner [|java:io:OutputStream|] @signature [|Ljava/io/OutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
      
#L088304.   return @void ;

   }
    procedure [|void|] [|java:io:OutputStream.flush|] ([|java:io:OutputStream|] v0 @type (this)) @owner [|java:io:OutputStream|] @signature [|Ljava/io/OutputStream;.flush:()V|] @Access PUBLIC {
      local temp ;
      
#L088318.   return @void ;

   }
    procedure [|void|] [|java:io:OutputStream.write|] ([|int|] v0) @owner [|java:io:OutputStream|] @signature [|Ljava/io/OutputStream;.write:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:OutputStream.write|] ([|java:io:OutputStream|] v2 @type (this), [|byte|][] v3) @owner [|java:io:OutputStream|] @signature [|Ljava/io/OutputStream;.write:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08832c.   v0:= 0  @length 4;
#L08832e.   v1:= v3.length;
#L088330.   call temp:=  [|java:io:OutputStream.write|](v2, v3, v0, v1) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L088336.   return @void ;

   }
    procedure [|void|] [|java:io:OutputStream.write|] ([|java:io:OutputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:OutputStream|] @signature [|Ljava/io/OutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L088348.   v1:= v3.length;
#L08834a.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L088350.   v0:= v4;
#L088352.   v1:= v4 + v5  @type int;
#L088356.   if v0 >= v1 then goto L08836a;
#L08835a.   v1:= v3[v0]  @byte;
#L08835e.   call temp:=  [|java:io:OutputStream.write|](v2, v1) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L088364.   v0:= v0 + 1;
#L088368.   goto L088352;
#L08836a.   return @void ;

   }
record [|java:io:FilterOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:OutputStream|] {
      [|java:io:OutputStream|] [|java:io:FilterOutputStream.out|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:FilterOutputStream.<init>|] ([|java:io:FilterOutputStream|] v0 @type (this), [|java:io:OutputStream|] v1 @type (object)) @owner [|java:io:FilterOutputStream|] @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08837c.   call temp:=  [|java:io:OutputStream.<init>|](v0) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L088382.   v0.[|java:io:FilterOutputStream.out|]  := v1 @type object;
#L088386.   return @void ;

   }
    procedure [|void|] [|java:io:FilterOutputStream.close|] ([|java:io:FilterOutputStream|] v3 @type (this)) @owner [|java:io:FilterOutputStream|] @signature [|Ljava/io/FilterOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L088398.   v1:= 0  @length 4;
#L08839a.   call temp:=  [|java:io:FilterOutputStream.flush|](v3) @signature [|Ljava/io/FilterOutputStream;.flush:()V|] @classDescriptor [|java:io:FilterOutputStream|] @type virtual;
#L0883a0.   v2:= v3.[|java:io:FilterOutputStream.out|]   @type object;
#L0883a4.   call temp:=  [|java:io:OutputStream.close|](v2) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0883aa.   if v1 == 0 then goto L0883b4;
#L0883ae.   call temp:=  [|libcore:util:SneakyThrow.sneakyThrow|](v1) @signature [|Llibcore/util/SneakyThrow;.sneakyThrow:(Ljava/lang/Throwable;)V|] @classDescriptor [|libcore:util:SneakyThrow|] @type static;
#L0883b4.   return @void ;
#L0883b6.   v0:= Exception  @type object;
#L0883b8.   v1:= v0  @type object;
#L0883ba.   goto L0883a0;
#L0883bc.   v0:= Exception  @type object;
#L0883be.   if v1 != 0 then goto L0883aa;
#L0883c2.   v1:= v0  @type object;
#L0883c4.   goto L0883aa;
  catch  [|java:lang:Throwable|] @[L08839a..L0883a0] goto L0883b6;
  catch  [|java:lang:Throwable|] @[L0883a0..L0883aa] goto L0883bc;

   }
    procedure [|void|] [|java:io:FilterOutputStream.flush|] ([|java:io:FilterOutputStream|] v1 @type (this)) @owner [|java:io:FilterOutputStream|] @signature [|Ljava/io/FilterOutputStream;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0883f4.   v0:= v1.[|java:io:FilterOutputStream.out|]   @type object;
#L0883f8.   call temp:=  [|java:io:OutputStream.flush|](v0) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0883fe.   return @void ;

   }
    procedure [|void|] [|java:io:FilterOutputStream.write|] ([|java:io:FilterOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:FilterOutputStream|] @signature [|Ljava/io/FilterOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L088410.   v0:= v1.[|java:io:FilterOutputStream.out|]   @type object;
#L088414.   call temp:=  [|java:io:OutputStream.write|](v0, v2) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08841a.   return @void ;

   }
    procedure [|void|] [|java:io:FilterOutputStream.write|] ([|java:io:FilterOutputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:FilterOutputStream|] @signature [|Ljava/io/FilterOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08842c.   v1:= v3.length;
#L08842e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L088434.   v0:= 0  @length 4;
#L088436.   if v0 >= v5 then goto L08844e;
#L08843a.   v1:= v4 + v0  @type int;
#L08843e.   v1:= v3[v1]  @byte;
#L088442.   call temp:=  [|java:io:FilterOutputStream.write|](v2, v1) @signature [|Ljava/io/FilterOutputStream;.write:(I)V|] @classDescriptor [|java:io:FilterOutputStream|] @type virtual;
#L088448.   v0:= v0 + 1;
#L08844c.   goto L088436;
#L08844e.   return @void ;

   }
record [|java:io:BufferedOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterOutputStream|] {
      [|byte|][] [|java:io:BufferedOutputStream.buf|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:BufferedOutputStream.count|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:BufferedOutputStream.<init>|] ([|java:io:BufferedOutputStream|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object)) @owner [|java:io:BufferedOutputStream|] @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L088460.   v0:= 8192  @length 16;
#L088464.   call temp:=  [|java:io:BufferedOutputStream.<init>|](v1, v2, v0) @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;I)V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L08846a.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedOutputStream.<init>|] ([|java:io:BufferedOutputStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object), [|int|] v4) @owner [|java:io:BufferedOutputStream|] @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08847c.   call temp:=  [|java:io:FilterOutputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L088482.   if v4 > 0 then goto L088496;
#L088486.   v0:= new [|java:lang:IllegalArgumentException|];
#L08848a.   v1:= "size <= 0" @type (object, string);
#L08848e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L088494.   throw v0;
#L088496.   v0:= new [|byte|][v4];
#L08849a.   v2.[|java:io:BufferedOutputStream.buf|]  := v0 @type object;
#L08849e.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedOutputStream.checkNotClosed|] ([|java:io:BufferedOutputStream|] v2 @type (this)) @owner [|java:io:BufferedOutputStream|] @signature [|Ljava/io/BufferedOutputStream;.checkNotClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0884b0.   v0:= v2.[|java:io:BufferedOutputStream.buf|]   @type object;
#L0884b4.   if v0 != 0 then goto L0884c8;
#L0884b8.   v0:= new [|java:io:IOException|];
#L0884bc.   v1:= "BufferedOutputStream is closed" @type (object, string);
#L0884c0.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0884c6.   throw v0;
#L0884c8.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedOutputStream.flushInternal|] ([|java:io:BufferedOutputStream|] v4 @type (this)) @owner [|java:io:BufferedOutputStream|] @signature [|Ljava/io/BufferedOutputStream;.flushInternal:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0884dc.   v3:= 0  @length 4;
#L0884de.   v0:= v4.[|java:io:BufferedOutputStream.count|] ;
#L0884e2.   if v0 <= 0 then goto L0884fc;
#L0884e6.   v0:= v4.[|java:io:BufferedOutputStream.out|]   @type object;
#L0884ea.   v1:= v4.[|java:io:BufferedOutputStream.buf|]   @type object;
#L0884ee.   v2:= v4.[|java:io:BufferedOutputStream.count|] ;
#L0884f2.   call temp:=  [|java:io:OutputStream.write|](v0, v1, v3, v2) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0884f8.   v4.[|java:io:BufferedOutputStream.count|]  := v3;
#L0884fc.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedOutputStream.close|] ([|java:io:BufferedOutputStream|] v2 @type (this)) @owner [|java:io:BufferedOutputStream|] @signature [|Ljava/io/BufferedOutputStream;.close:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L088510.   (@monitorenter v2)
#L088512.   v0:= v2.[|java:io:BufferedOutputStream.buf|]   @type object;
#L088516.   if v0 != 0 then goto L08851e;
#L08851a.   (@monitorexit v2)
#L08851c.   return @void ;
#L08851e.   call temp:=  [|java:io:FilterOutputStream.close|](v2) @signature [|Ljava/io/FilterOutputStream;.close:()V|] @classDescriptor [|java:io:FilterOutputStream|] @type super;
#L088524.   v0:= 0  @length 4;
#L088526.   v2.[|java:io:BufferedOutputStream.buf|]  := v0 @type object;
#L08852a.   goto L08851a;
#L08852c.   v0:= Exception  @type object;
#L08852e.   (@monitorexit v2)
#L088530.   throw v0;
#L088532.   v0:= Exception  @type object;
#L088534.   v1:= 0  @length 4;
#L088536.   v2.[|java:io:BufferedOutputStream.buf|]  := v1 @type object;
#L08853a.   throw v0;
  catch  [|any|] @[L088512..L088516] goto L08852c;
  catch  [|any|] @[L08851e..L088524] goto L088532;
  catch  [|any|] @[L088526..L08852a] goto L08852c;
  catch  [|any|] @[L088536..L08853a] goto L08852c;

   }
    procedure [|void|] [|java:io:BufferedOutputStream.flush|] ([|java:io:BufferedOutputStream|] v1 @type (this)) @owner [|java:io:BufferedOutputStream|] @signature [|Ljava/io/BufferedOutputStream;.flush:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L088574.   (@monitorenter v1)
#L088576.   call temp:=  [|java:io:BufferedOutputStream.checkNotClosed|](v1) @signature [|Ljava/io/BufferedOutputStream;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L08857c.   call temp:=  [|java:io:BufferedOutputStream.flushInternal|](v1) @signature [|Ljava/io/BufferedOutputStream;.flushInternal:()V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L088582.   v0:= v1.[|java:io:BufferedOutputStream.out|]   @type object;
#L088586.   call temp:=  [|java:io:OutputStream.flush|](v0) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08858c.   (@monitorexit v1)
#L08858e.   return @void ;
#L088590.   v0:= Exception  @type object;
#L088592.   (@monitorexit v1)
#L088594.   throw v0;
  catch  [|any|] @[L088576..L08858c] goto L088590;

   }
    procedure [|void|] [|java:io:BufferedOutputStream.write|] ([|java:io:BufferedOutputStream|] v4 @type (this), [|int|] v5) @owner [|java:io:BufferedOutputStream|] @signature [|Ljava/io/BufferedOutputStream;.write:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0885b4.   (@monitorenter v4)
#L0885b6.   call temp:=  [|java:io:BufferedOutputStream.checkNotClosed|](v4) @signature [|Ljava/io/BufferedOutputStream;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L0885bc.   v0:= v4.[|java:io:BufferedOutputStream.count|] ;
#L0885c0.   v1:= v4.[|java:io:BufferedOutputStream.buf|]   @type object;
#L0885c4.   v1:= v1.length;
#L0885c6.   if v0 != v1 then goto L0885e4;
#L0885ca.   v0:= v4.[|java:io:BufferedOutputStream.out|]   @type object;
#L0885ce.   v1:= v4.[|java:io:BufferedOutputStream.buf|]   @type object;
#L0885d2.   v2:= 0  @length 4;
#L0885d4.   v3:= v4.[|java:io:BufferedOutputStream.count|] ;
#L0885d8.   call temp:=  [|java:io:OutputStream.write|](v0, v1, v2, v3) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0885de.   v0:= 0  @length 4;
#L0885e0.   v4.[|java:io:BufferedOutputStream.count|]  := v0;
#L0885e4.   v0:= v4.[|java:io:BufferedOutputStream.buf|]   @type object;
#L0885e8.   v1:= v4.[|java:io:BufferedOutputStream.count|] ;
#L0885ec.   v2:= v1 + 1;
#L0885f0.   v4.[|java:io:BufferedOutputStream.count|]  := v2;
#L0885f4.   v2:= (byte)v5  @type i2b;
#L0885f6.   v0[v1]:= v2  @byte;
#L0885fa.   (@monitorexit v4)
#L0885fc.   return @void ;
#L0885fe.   v0:= Exception  @type object;
#L088600.   (@monitorexit v4)
#L088602.   throw v0;
  catch  [|any|] @[L0885b6..L0885fa] goto L0885fe;

   }
    procedure [|void|] [|java:io:BufferedOutputStream.write|] ([|java:io:BufferedOutputStream|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|java:io:BufferedOutputStream|] @signature [|Ljava/io/BufferedOutputStream;.write:([BII)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L088620.   (@monitorenter v3)
#L088622.   call temp:=  [|java:io:BufferedOutputStream.checkNotClosed|](v3) @signature [|Ljava/io/BufferedOutputStream;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L088628.   if v4 != 0 then goto L088642;
#L08862c.   v1:= new [|java:lang:NullPointerException|];
#L088630.   v2:= "buffer == null" @type (object, string);
#L088634.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08863a.   throw v1;
#L08863c.   v1:= Exception  @type object;
#L08863e.   (@monitorexit v3)
#L088640.   throw v1;
#L088642.   v0:= v3.[|java:io:BufferedOutputStream.buf|]   @type object;
#L088646.   v1:= v0.length;
#L088648.   if v6 < v1 then goto L088660;
#L08864c.   call temp:=  [|java:io:BufferedOutputStream.flushInternal|](v3) @signature [|Ljava/io/BufferedOutputStream;.flushInternal:()V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L088652.   v1:= v3.[|java:io:BufferedOutputStream.out|]   @type object;
#L088656.   call temp:=  [|java:io:OutputStream.write|](v1, v4, v5, v6) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08865c.   (@monitorexit v3)
#L08865e.   return @void ;
#L088660.   v1:= v4.length;
#L088662.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v5, v6) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L088668.   v1:= v0.length;
#L08866a.   v2:= v3.[|java:io:BufferedOutputStream.count|] ;
#L08866e.   v1:= v1 - v2  @type int;
#L088670.   if v6 <= v1 then goto L08867a;
#L088674.   call temp:=  [|java:io:BufferedOutputStream.flushInternal|](v3) @signature [|Ljava/io/BufferedOutputStream;.flushInternal:()V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L08867a.   v1:= v3.[|java:io:BufferedOutputStream.count|] ;
#L08867e.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L088684.   v1:= v3.[|java:io:BufferedOutputStream.count|] ;
#L088688.   v1:= v1 + v6  @type int;
#L08868a.   v3.[|java:io:BufferedOutputStream.count|]  := v1;
#L08868e.   goto L08865c;
  catch  [|any|] @[L088622..L08863c] goto L08863c;
  catch  [|any|] @[L088642..L08865c] goto L08863c;
  catch  [|any|] @[L088660..L08868e] goto L08863c;

   }
record [|java:lang:Readable|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|int|] [|java:lang:Readable.read|] ([|java:nio:CharBuffer|] v0 @type (object)) @owner [|java:lang:Readable|] @signature [|Ljava/lang/Readable;.read:(Ljava/nio/CharBuffer;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:Reader|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:lang:Readable|], [|java:io:Closeable|] {
      [|java:lang:Object|] [|java:io:Reader.lock|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:Reader.<init>|] ([|java:io:Reader|] v0 @type (this)) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0886bc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0886c2.   v0.[|java:io:Reader.lock|]  := v0 @type object;
#L0886c6.   return @void ;

   }
    procedure [|void|] [|java:io:Reader.<init>|] ([|java:io:Reader|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.<init>:(Ljava/lang/Object;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0886d8.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0886de.   if v3 != 0 then goto L0886f2;
#L0886e2.   v0:= new [|java:lang:NullPointerException|];
#L0886e6.   v1:= "lock == null" @type (object, string);
#L0886ea.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0886f0.   throw v0;
#L0886f2.   v2.[|java:io:Reader.lock|]  := v3 @type object;
#L0886f6.   return @void ;

   }
    procedure [|void|] [|java:io:Reader.close|] () @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:Reader.mark|] ([|java:io:Reader|] v1 @type (this), [|int|] v2) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.mark:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L088708.   v0:= new [|java:io:IOException|];
#L08870c.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L088712.   throw v0;

   }
    procedure [|boolean|] [|java:io:Reader.markSupported|] ([|java:io:Reader|] v1 @type (this)) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L088724.   v0:= 0  @length 4;
#L088726.   return v0;

   }
    procedure [|int|] [|java:io:Reader.read|] ([|java:io:Reader|] v5 @type (this)) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L088738.   v1:= -1  @length 4;
#L08873a.   v2:= v5.[|java:io:Reader.lock|]   @type object;
#L08873e.   (@monitorenter v2)
#L088740.   v3:= 1  @length 4;
#L088742.   v0:= new [|char|][v3];
#L088746.   v3:= 0  @length 4;
#L088748.   v4:= 1  @length 4;
#L08874a.   call temp:=  [|java:io:Reader.read|](v5, v0, v3, v4) @signature [|Ljava/io/Reader;.read:([CII)I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L088750.   v3:= temp;
#L088752.   if v3 == v1 then goto L088760;
#L088756.   v1:= 0  @length 4;
#L088758.   v1:= v0[v1]  @char;
#L08875c.   (@monitorexit v2)
#L08875e.   return v1;
#L088760.   (@monitorexit v2)
#L088762.   goto L08875e;
#L088764.   v1:= Exception  @type object;
#L088766.   (@monitorexit v2)
#L088768.   throw v1;
  catch  [|any|] @[L088742..L088768] goto L088764;

   }
    procedure [|int|] [|java:io:Reader.read|] ([|java:io:Reader|] v3 @type (this), [|java:nio:CharBuffer|] v4 @type (object)) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.read:(Ljava/nio/CharBuffer;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L088788.   call temp:=  [|java:nio:CharBuffer.length|](v4) @signature [|Ljava/nio/CharBuffer;.length:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L08878e.   v1:= temp;
#L088790.   v0:= new [|char|][v1];
#L088794.   call temp:=  [|java:io:Reader.read|](v3, v0) @signature [|Ljava/io/Reader;.read:([C)I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08879a.   v2:= temp;
#L08879c.   call temp:=  [|java:lang:Math.min|](v1, v2) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0887a2.   v1:= temp;
#L0887a4.   if v1 <= 0 then goto L0887b0;
#L0887a8.   v2:= 0  @length 4;
#L0887aa.   call temp:=  [|java:nio:CharBuffer.put|](v4, v0, v2, v1) @signature [|Ljava/nio/CharBuffer;.put:([CII)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0887b0.   return v1;

   }
    procedure [|int|] [|java:io:Reader.read|] ([|java:io:Reader|] v2 @type (this), [|char|][] v3) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.read:([C)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0887c4.   v0:= 0  @length 4;
#L0887c6.   v1:= v3.length;
#L0887c8.   call temp:=  [|java:io:Reader.read|](v2, v3, v0, v1) @signature [|Ljava/io/Reader;.read:([CII)I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L0887ce.   v0:= temp;
#L0887d0.   return v0;

   }
    procedure [|int|] [|java:io:Reader.read|] ([|char|][] v0, [|int|] v1, [|int|] v2) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.read:([CII)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:io:Reader.ready|] ([|java:io:Reader|] v1 @type (this)) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.ready:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0887e4.   v0:= 0  @length 4;
#L0887e6.   return v0;

   }
    procedure [|void|] [|java:io:Reader.reset|] ([|java:io:Reader|] v1 @type (this)) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0887f8.   v0:= new [|java:io:IOException|];
#L0887fc.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L088802.   throw v0;

   }
    procedure [|long|] [|java:io:Reader.skip|] ([|java:io:Reader|] v13 @type (this), [|long|] v14) @owner [|java:io:Reader|] @signature [|Ljava/io/Reader;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L088814.   v7:= 0  @length wide16;
#L088818.   v7:= cmp(v14,v7);
#L08881c.   if v7 >= 0 then goto L088852;
#L088820.   v7:= new [|java:lang:IllegalArgumentException|];
#L088824.   v8:= new [|java:lang:StringBuilder|];
#L088828.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08882e.   v9:= "charCount < 0: " @type (object, string);
#L088832.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088838.   v8:= temp  @type object;
#L08883a.   call temp:=  [|java:lang:StringBuilder.append|](v8, v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088840.   v8:= temp  @type object;
#L088842.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088848.   v8:= temp  @type object;
#L08884a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v7, v8) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L088850.   throw v7;
#L088852.   v8:= v13.[|java:io:Reader.lock|]   @type object;
#L088856.   (@monitorenter v8)
#L088858.   v2:= 0  @length wide16;
#L08885c.   v9:= 512  @length wide16;
#L088860.   v7:= cmp(v14,v9);
#L088864.   if v7 >= 0 then goto L08888c;
#L088868.   v6:= (int)v14  @type l2i;
#L08886a.   v0:= new [|char|][v6];
#L08886e.   v7:= cmp(v2,v14);
#L088872.   if v7 >= 0 then goto L0888b6;
#L088876.   v7:= 0  @length 4;
#L088878.   call temp:=  [|java:io:Reader.read|](v13, v0, v7, v6) @signature [|Ljava/io/Reader;.read:([CII)I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08887e.   v1:= temp;
#L088880.   v7:= -1  @length 4;
#L088882.   if v1 != v7 then goto L088892;
#L088886.   (@monitorexit v8)
#L088888.   v4:= v2  @type wide;
#L08888a.   return v4  @type wide;
#L08888c.   v6:= 512  @length 16;
#L088890.   goto L08886a;
#L088892.   v9:= (long)v1  @type i2l;
#L088894.   v2:= v2 + v9  @type long;
#L088896.   if v1 >= v6 then goto L0888a0;
#L08889a.   (@monitorexit v8)
#L08889c.   v4:= v2  @type wide;
#L08889e.   goto L08888a;
#L0888a0.   v9:= v14 - v2  @type long;
#L0888a4.   v11:= (long)v6  @type i2l;
#L0888a6.   v7:= cmp(v9,v11);
#L0888aa.   if v7 >= 0 then goto L08886e;
#L0888ae.   v9:= v14 - v2  @type long;
#L0888b2.   v6:= (int)v9  @type l2i;
#L0888b4.   goto L08886e;
#L0888b6.   (@monitorexit v8)
#L0888b8.   v4:= v2  @type wide;
#L0888ba.   goto L08888a;
#L0888bc.   v7:= Exception  @type object;
#L0888be.   (@monitorexit v8)
#L0888c0.   throw v7;
  catch  [|any|] @[L08886a..L0888c0] goto L0888bc;

   }
record [|java:io:BufferedReader|]  @type class @AccessFlag PUBLIC  extends [|java:io:Reader|] {
      [|char|][] [|java:io:BufferedReader.buf|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:BufferedReader.end|]    @AccessFlag PRIVATE;
      [|java:io:Reader|] [|java:io:BufferedReader.in|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:BufferedReader.mark|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:BufferedReader.markLimit|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:BufferedReader.pos|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:BufferedReader.<init>|] ([|java:io:BufferedReader|] v1 @type (this), [|java:io:Reader|] v2 @type (object)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0888e0.   v0:= 8192  @length 16;
#L0888e4.   call temp:=  [|java:io:BufferedReader.<init>|](v1, v2, v0) @signature [|Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;I)V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L0888ea.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedReader.<init>|] ([|java:io:BufferedReader|] v2 @type (this), [|java:io:Reader|] v3 @type (object), [|int|] v4) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0888fc.   v0:= -1  @length 4;
#L0888fe.   call temp:=  [|java:io:Reader.<init>|](v2, v3) @signature [|Ljava/io/Reader;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Reader|] @type direct;
#L088904.   v2.[|java:io:BufferedReader.mark|]  := v0;
#L088908.   v2.[|java:io:BufferedReader.markLimit|]  := v0;
#L08890c.   if v4 > 0 then goto L088920;
#L088910.   v0:= new [|java:lang:IllegalArgumentException|];
#L088914.   v1:= "size <= 0" @type (object, string);
#L088918.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08891e.   throw v0;
#L088920.   v2.[|java:io:BufferedReader.in|]  := v3 @type object;
#L088924.   v0:= new [|char|][v4];
#L088928.   v2.[|java:io:BufferedReader.buf|]  := v0 @type object;
#L08892c.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedReader.checkNotClosed|] ([|java:io:BufferedReader|] v2 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.checkNotClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L088940.   call temp:=  [|java:io:BufferedReader.isClosed|](v2) @signature [|Ljava/io/BufferedReader;.isClosed:()Z|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088946.   v0:= temp;
#L088948.   if v0 == 0 then goto L08895c;
#L08894c.   v0:= new [|java:io:IOException|];
#L088950.   v1:= "BufferedReader is closed" @type (object, string);
#L088954.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08895a.   throw v0;
#L08895c.   return @void ;

   }
    procedure [|int|] [|java:io:BufferedReader.fillBuf|] ([|java:io:BufferedReader|] v11 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.fillBuf:()I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L088970.   v10:= -1  @length 4;
#L088972.   v9:= 0  @length 4;
#L088974.   v4:= v11.[|java:io:BufferedReader.mark|] ;
#L088978.   if v4 == v10 then goto L08898e;
#L08897c.   v4:= v11.[|java:io:BufferedReader.pos|] ;
#L088980.   v5:= v11.[|java:io:BufferedReader.mark|] ;
#L088984.   v4:= v4 - v5  @type int;
#L088986.   v5:= v11.[|java:io:BufferedReader.markLimit|] ;
#L08898a.   if v4 < v5 then goto L0889b8;
#L08898e.   v4:= v11.[|java:io:BufferedReader.in|]   @type object;
#L088992.   v5:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L088996.   v6:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L08899a.   v6:= v6.length;
#L08899c.   call temp:=  [|java:io:Reader.read|](v4, v5, v9, v6) @signature [|Ljava/io/Reader;.read:([CII)I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L0889a2.   v3:= temp;
#L0889a4.   if v3 <= 0 then goto L0889b4;
#L0889a8.   v11.[|java:io:BufferedReader.mark|]  := v10;
#L0889ac.   v11.[|java:io:BufferedReader.pos|]  := v9;
#L0889b0.   v11.[|java:io:BufferedReader.end|]  := v3;
#L0889b4.   v0:= v3;
#L0889b6.   return v0;
#L0889b8.   v4:= v11.[|java:io:BufferedReader.mark|] ;
#L0889bc.   if v4 != 0 then goto L088a2c;
#L0889c0.   v4:= v11.[|java:io:BufferedReader.markLimit|] ;
#L0889c4.   v5:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L0889c8.   v5:= v5.length;
#L0889ca.   if v4 <= v5 then goto L088a2c;
#L0889ce.   v4:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L0889d2.   v4:= v4.length;
#L0889d4.   v1:= v4 * 2;
#L0889d8.   v4:= v11.[|java:io:BufferedReader.markLimit|] ;
#L0889dc.   if v1 <= v4 then goto L0889e4;
#L0889e0.   v1:= v11.[|java:io:BufferedReader.markLimit|] ;
#L0889e4.   v2:= new [|char|][v1];
#L0889e8.   v4:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L0889ec.   v5:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L0889f0.   v5:= v5.length;
#L0889f2.   call temp:=  [|java:lang:System.arraycopy|](v4, v9, v2, v9, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0889f8.   v11.[|java:io:BufferedReader.buf|]  := v2 @type object;
#L0889fc.   v4:= v11.[|java:io:BufferedReader.in|]   @type object;
#L088a00.   v5:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L088a04.   v6:= v11.[|java:io:BufferedReader.pos|] ;
#L088a08.   v7:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L088a0c.   v7:= v7.length;
#L088a0e.   v8:= v11.[|java:io:BufferedReader.pos|] ;
#L088a12.   v7:= v7 - v8  @type int;
#L088a14.   call temp:=  [|java:io:Reader.read|](v4, v5, v6, v7) @signature [|Ljava/io/Reader;.read:([CII)I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L088a1a.   v0:= temp;
#L088a1c.   if v0 == v10 then goto L0889b6;
#L088a20.   v4:= v11.[|java:io:BufferedReader.end|] ;
#L088a24.   v4:= v4 + v0  @type int;
#L088a26.   v11.[|java:io:BufferedReader.end|]  := v4;
#L088a2a.   goto L0889b6;
#L088a2c.   v4:= v11.[|java:io:BufferedReader.mark|] ;
#L088a30.   if v4 <= 0 then goto L0889fc;
#L088a34.   v4:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L088a38.   v5:= v11.[|java:io:BufferedReader.mark|] ;
#L088a3c.   v6:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L088a40.   v7:= v11.[|java:io:BufferedReader.buf|]   @type object;
#L088a44.   v7:= v7.length;
#L088a46.   v8:= v11.[|java:io:BufferedReader.mark|] ;
#L088a4a.   v7:= v7 - v8  @type int;
#L088a4c.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v6, v9, v7) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L088a52.   v4:= v11.[|java:io:BufferedReader.pos|] ;
#L088a56.   v5:= v11.[|java:io:BufferedReader.mark|] ;
#L088a5a.   v4:= v4 - v5  @type int;
#L088a5c.   v11.[|java:io:BufferedReader.pos|]  := v4;
#L088a60.   v4:= v11.[|java:io:BufferedReader.end|] ;
#L088a64.   v5:= v11.[|java:io:BufferedReader.mark|] ;
#L088a68.   v4:= v4 - v5  @type int;
#L088a6a.   v11.[|java:io:BufferedReader.end|]  := v4;
#L088a6e.   v11.[|java:io:BufferedReader.mark|]  := v9;
#L088a72.   goto L0889fc;

   }
    procedure [|boolean|] [|java:io:BufferedReader.isClosed|] ([|java:io:BufferedReader|] v1 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.isClosed:()Z|] @Access PRIVATE {
      local temp ;
        v0;
      
#L088a84.   v0:= v1.[|java:io:BufferedReader.buf|]   @type object;
#L088a88.   if v0 != 0 then goto L088a90;
#L088a8c.   v0:= 1  @length 4;
#L088a8e.   return v0;
#L088a90.   v0:= 0  @length 4;
#L088a92.   goto L088a8e;

   }
    procedure [|void|] [|java:io:BufferedReader.chompNewline|] ([|java:io:BufferedReader|] v2 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.chompNewline:()V|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L088aa4.   v0:= v2.[|java:io:BufferedReader.pos|] ;
#L088aa8.   v1:= v2.[|java:io:BufferedReader.end|] ;
#L088aac.   if v0 != v1 then goto L088abe;
#L088ab0.   call temp:=  [|java:io:BufferedReader.fillBuf|](v2) @signature [|Ljava/io/BufferedReader;.fillBuf:()I|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088ab6.   v0:= temp;
#L088ab8.   v1:= -1  @length 4;
#L088aba.   if v0 == v1 then goto L088ade;
#L088abe.   v0:= v2.[|java:io:BufferedReader.buf|]   @type object;
#L088ac2.   v1:= v2.[|java:io:BufferedReader.pos|] ;
#L088ac6.   v0:= v0[v1]  @char;
#L088aca.   v1:= 10  @length 16;
#L088ace.   if v0 != v1 then goto L088ade;
#L088ad2.   v0:= v2.[|java:io:BufferedReader.pos|] ;
#L088ad6.   v0:= v0 + 1;
#L088ada.   v2.[|java:io:BufferedReader.pos|]  := v0;
#L088ade.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedReader.close|] ([|java:io:BufferedReader|] v2 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L088af0.   v1:= v2.[|java:io:BufferedReader.lock|]   @type object;
#L088af4.   (@monitorenter v1)
#L088af6.   call temp:=  [|java:io:BufferedReader.isClosed|](v2) @signature [|Ljava/io/BufferedReader;.isClosed:()Z|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088afc.   v0:= temp;
#L088afe.   if v0 != 0 then goto L088b12;
#L088b02.   v0:= v2.[|java:io:BufferedReader.in|]   @type object;
#L088b06.   call temp:=  [|java:io:Reader.close|](v0) @signature [|Ljava/io/Reader;.close:()V|] @classDescriptor [|java:io:Reader|] @type virtual;
#L088b0c.   v0:= 0  @length 4;
#L088b0e.   v2.[|java:io:BufferedReader.buf|]  := v0 @type object;
#L088b12.   (@monitorexit v1)
#L088b14.   return @void ;
#L088b16.   v0:= Exception  @type object;
#L088b18.   (@monitorexit v1)
#L088b1a.   throw v0;
  catch  [|any|] @[L088af6..L088b1a] goto L088b16;

   }
    procedure [|void|] [|java:io:BufferedReader.mark|] ([|java:io:BufferedReader|] v2 @type (this), [|int|] v3) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.mark:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L088b38.   if v3 >= 0 then goto L088b48;
#L088b3c.   v0:= new [|java:lang:IllegalArgumentException|];
#L088b40.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L088b46.   throw v0;
#L088b48.   v1:= v2.[|java:io:BufferedReader.lock|]   @type object;
#L088b4c.   (@monitorenter v1)
#L088b4e.   call temp:=  [|java:io:BufferedReader.checkNotClosed|](v2) @signature [|Ljava/io/BufferedReader;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088b54.   v2.[|java:io:BufferedReader.markLimit|]  := v3;
#L088b58.   v0:= v2.[|java:io:BufferedReader.pos|] ;
#L088b5c.   v2.[|java:io:BufferedReader.mark|]  := v0;
#L088b60.   (@monitorexit v1)
#L088b62.   return @void ;
#L088b64.   v0:= Exception  @type object;
#L088b66.   (@monitorexit v1)
#L088b68.   throw v0;
  catch  [|any|] @[L088b4e..L088b68] goto L088b64;

   }
    procedure [|boolean|] [|java:io:BufferedReader.markSupported|] ([|java:io:BufferedReader|] v1 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L088b88.   v0:= 1  @length 4;
#L088b8a.   return v0;

   }
    procedure [|int|] [|java:io:BufferedReader.read|] ([|java:io:BufferedReader|] v4 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L088b9c.   v0:= -1  @length 4;
#L088b9e.   v1:= v4.[|java:io:BufferedReader.lock|]   @type object;
#L088ba2.   (@monitorenter v1)
#L088ba4.   call temp:=  [|java:io:BufferedReader.checkNotClosed|](v4) @signature [|Ljava/io/BufferedReader;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088baa.   v2:= v4.[|java:io:BufferedReader.pos|] ;
#L088bae.   v3:= v4.[|java:io:BufferedReader.end|] ;
#L088bb2.   if v2 < v3 then goto L088bc2;
#L088bb6.   call temp:=  [|java:io:BufferedReader.fillBuf|](v4) @signature [|Ljava/io/BufferedReader;.fillBuf:()I|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088bbc.   v2:= temp;
#L088bbe.   if v2 == v0 then goto L088bda;
#L088bc2.   v0:= v4.[|java:io:BufferedReader.buf|]   @type object;
#L088bc6.   v2:= v4.[|java:io:BufferedReader.pos|] ;
#L088bca.   v3:= v2 + 1;
#L088bce.   v4.[|java:io:BufferedReader.pos|]  := v3;
#L088bd2.   v0:= v0[v2]  @char;
#L088bd6.   (@monitorexit v1)
#L088bd8.   return v0;
#L088bda.   (@monitorexit v1)
#L088bdc.   goto L088bd8;
#L088bde.   v0:= Exception  @type object;
#L088be0.   (@monitorexit v1)
#L088be2.   throw v0;
  catch  [|any|] @[L088ba4..L088be2] goto L088bde;

   }
    procedure [|int|] [|java:io:BufferedReader.read|] ([|java:io:BufferedReader|] v7 @type (this), [|char|][] v8, [|int|] v9, [|int|] v10) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.read:([CII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L088c00.   v3:= -1  @length 4;
#L088c02.   v4:= v7.[|java:io:BufferedReader.lock|]   @type object;
#L088c06.   (@monitorenter v4)
#L088c08.   call temp:=  [|java:io:BufferedReader.checkNotClosed|](v7) @signature [|Ljava/io/BufferedReader;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088c0e.   v5:= v8.length;
#L088c10.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v5, v9, v10) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L088c16.   v2:= v10;
#L088c18.   if v2 <= 0 then goto L088c66;
#L088c1c.   v5:= v7.[|java:io:BufferedReader.end|] ;
#L088c20.   v6:= v7.[|java:io:BufferedReader.pos|] ;
#L088c24.   v0:= v5 - v6  @type int;
#L088c28.   if v0 <= 0 then goto L088c4e;
#L088c2c.   if v0 < v2 then goto L088c76;
#L088c30.   v1:= v2;
#L088c32.   v5:= v7.[|java:io:BufferedReader.buf|]   @type object;
#L088c36.   v6:= v7.[|java:io:BufferedReader.pos|] ;
#L088c3a.   call temp:=  [|java:lang:System.arraycopy|](v5, v6, v8, v9, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L088c40.   v5:= v7.[|java:io:BufferedReader.pos|] ;
#L088c44.   v5:= v5 + v1  @type int;
#L088c46.   v7.[|java:io:BufferedReader.pos|]  := v5;
#L088c4a.   v9:= v9 + v1  @type int;
#L088c4c.   v2:= v2 - v1  @type int;
#L088c4e.   if v2 == 0 then goto L088c66;
#L088c52.   if v2 >= v10 then goto L088c7a;
#L088c56.   v5:= v7.[|java:io:BufferedReader.in|]   @type object;
#L088c5a.   call temp:=  [|java:io:Reader.ready|](v5) @signature [|Ljava/io/Reader;.ready:()Z|] @classDescriptor [|java:io:Reader|] @type virtual;
#L088c60.   v5:= temp;
#L088c62.   if v5 != 0 then goto L088c7a;
#L088c66.   v1:= v10 - v2  @type int;
#L088c6a.   if v1 > 0 then goto L088c72;
#L088c6e.   if v1 != v10 then goto L088ccc;
#L088c72.   (@monitorexit v4)
#L088c74.   return v1;
#L088c76.   v1:= v0;
#L088c78.   goto L088c32;
#L088c7a.   v5:= v7.[|java:io:BufferedReader.mark|] ;
#L088c7e.   if v5 == v3 then goto L088c94;
#L088c82.   v5:= v7.[|java:io:BufferedReader.pos|] ;
#L088c86.   v6:= v7.[|java:io:BufferedReader.mark|] ;
#L088c8a.   v5:= v5 - v6  @type int;
#L088c8c.   v6:= v7.[|java:io:BufferedReader.markLimit|] ;
#L088c90.   if v5 < v6 then goto L088cbe;
#L088c94.   v5:= v7.[|java:io:BufferedReader.buf|]   @type object;
#L088c98.   v5:= v5.length;
#L088c9a.   if v2 < v5 then goto L088cbe;
#L088c9e.   v5:= v7.[|java:io:BufferedReader.in|]   @type object;
#L088ca2.   call temp:=  [|java:io:Reader.read|](v5, v8, v9, v2) @signature [|Ljava/io/Reader;.read:([CII)I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L088ca8.   v1:= temp;
#L088caa.   if v1 <= 0 then goto L088c66;
#L088cae.   v2:= v2 - v1  @type int;
#L088cb0.   v5:= -1  @length 4;
#L088cb2.   v7.[|java:io:BufferedReader.mark|]  := v5;
#L088cb6.   goto L088c66;
#L088cb8.   v3:= Exception  @type object;
#L088cba.   (@monitorexit v4)
#L088cbc.   throw v3;
#L088cbe.   call temp:=  [|java:io:BufferedReader.fillBuf|](v7) @signature [|Ljava/io/BufferedReader;.fillBuf:()I|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088cc4.   v5:= temp;
#L088cc6.   if v5 != v3 then goto L088c18;
#L088cca.   goto L088c66;
#L088ccc.   v1:= v3;
#L088cce.   goto L088c72;
  catch  [|any|] @[L088c08..L088cbc] goto L088cb8;
  catch  [|any|] @[L088cbe..L088cc4] goto L088cb8;

   }
    procedure [|java:lang:String|] [|java:io:BufferedReader.readLine|] ([|java:io:BufferedReader|] v14 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L088cf4.   v4:= 0  @length 4;
#L088cf6.   v13:= -1  @length 4;
#L088cf8.   v12:= 13  @length 16;
#L088cfc.   v11:= 10  @length 16;
#L088d00.   v7:= v14.[|java:io:BufferedReader.lock|]   @type object;
#L088d04.   (@monitorenter v7)
#L088d06.   call temp:=  [|java:io:BufferedReader.checkNotClosed|](v14) @signature [|Ljava/io/BufferedReader;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088d0c.   v6:= v14.[|java:io:BufferedReader.pos|] ;
#L088d10.   v8:= v14.[|java:io:BufferedReader.end|] ;
#L088d14.   if v6 != v8 then goto L088d28;
#L088d18.   call temp:=  [|java:io:BufferedReader.fillBuf|](v14) @signature [|Ljava/io/BufferedReader;.fillBuf:()I|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088d1e.   v6:= temp;
#L088d20.   if v6 != v13 then goto L088d28;
#L088d24.   (@monitorexit v7)
#L088d26.   return v4  @type object;
#L088d28.   v2:= v14.[|java:io:BufferedReader.pos|] ;
#L088d2c.   v6:= v14.[|java:io:BufferedReader.end|] ;
#L088d30.   if v2 >= v6 then goto L088dd4;
#L088d34.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088d38.   v1:= v6[v2]  @char;
#L088d3c.   if v1 <= v12 then goto L088d46;
#L088d40.   v2:= v2 + 1;
#L088d44.   goto L088d2c;
#L088d46.   if v1 != v11 then goto L088d76;
#L088d4a.   v4:= new [|java:lang:String|];
#L088d4e.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088d52.   v8:= v14.[|java:io:BufferedReader.pos|] ;
#L088d56.   v9:= v14.[|java:io:BufferedReader.pos|] ;
#L088d5a.   v9:= v2 - v9  @type int;
#L088d5e.   call temp:=  [|java:lang:String.<init>|](v4, v6, v8, v9) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L088d64.   v6:= v2 + 1;
#L088d68.   v14.[|java:io:BufferedReader.pos|]  := v6;
#L088d6c.   (@monitorexit v7)
#L088d6e.   goto L088d26;
#L088d70.   v6:= Exception  @type object;
#L088d72.   (@monitorexit v7)
#L088d74.   throw v6;
#L088d76.   if v1 != v12 then goto L088d40;
#L088d7a.   v4:= new [|java:lang:String|];
#L088d7e.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088d82.   v8:= v14.[|java:io:BufferedReader.pos|] ;
#L088d86.   v9:= v14.[|java:io:BufferedReader.pos|] ;
#L088d8a.   v9:= v2 - v9  @type int;
#L088d8e.   call temp:=  [|java:lang:String.<init>|](v4, v6, v8, v9) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L088d94.   v6:= v2 + 1;
#L088d98.   v14.[|java:io:BufferedReader.pos|]  := v6;
#L088d9c.   v6:= v14.[|java:io:BufferedReader.pos|] ;
#L088da0.   v8:= v14.[|java:io:BufferedReader.end|] ;
#L088da4.   if v6 < v8 then goto L088db4;
#L088da8.   call temp:=  [|java:io:BufferedReader.fillBuf|](v14) @signature [|Ljava/io/BufferedReader;.fillBuf:()I|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088dae.   v6:= temp;
#L088db0.   if v6 == v13 then goto L088dd0;
#L088db4.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088db8.   v8:= v14.[|java:io:BufferedReader.pos|] ;
#L088dbc.   v6:= v6[v8]  @char;
#L088dc0.   if v6 != v11 then goto L088dd0;
#L088dc4.   v6:= v14.[|java:io:BufferedReader.pos|] ;
#L088dc8.   v6:= v6 + 1;
#L088dcc.   v14.[|java:io:BufferedReader.pos|]  := v6;
#L088dd0.   (@monitorexit v7)
#L088dd2.   goto L088d26;
#L088dd4.   v3:= 0  @length 4;
#L088dd6.   v5:= new [|java:lang:StringBuilder|];
#L088dda.   v6:= 80  @length 16;
#L088dde.   call temp:=  [|java:lang:StringBuilder.<init>|](v5, v6) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L088de4.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088de8.   v8:= v14.[|java:io:BufferedReader.pos|] ;
#L088dec.   v9:= v14.[|java:io:BufferedReader.end|] ;
#L088df0.   v10:= v14.[|java:io:BufferedReader.pos|] ;
#L088df4.   v9:= v9 - v10  @type int;
#L088df6.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6, v8, v9) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088dfc.   v6:= v14.[|java:io:BufferedReader.end|] ;
#L088e00.   v14.[|java:io:BufferedReader.pos|]  := v6;
#L088e04.   if v3 != v11 then goto L088e14;
#L088e08.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088e0e.   v4:= temp  @type object;
#L088e10.   (@monitorexit v7)
#L088e12.   goto L088d26;
#L088e14.   call temp:=  [|java:io:BufferedReader.fillBuf|](v14) @signature [|Ljava/io/BufferedReader;.fillBuf:()I|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088e1a.   v6:= temp;
#L088e1c.   if v6 != v13 then goto L088e3e;
#L088e20.   call temp:=  [|java:lang:StringBuilder.length|](v5) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088e26.   v6:= temp;
#L088e28.   if v6 > 0 then goto L088e30;
#L088e2c.   if v3 == 0 then goto L088e38;
#L088e30.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088e36.   v4:= temp  @type object;
#L088e38.   (@monitorexit v7)
#L088e3a.   goto L088d26;
#L088e3e.   v2:= v14.[|java:io:BufferedReader.pos|] ;
#L088e42.   v6:= v14.[|java:io:BufferedReader.end|] ;
#L088e46.   if v2 >= v6 then goto L088eda;
#L088e4a.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088e4e.   v0:= v6[v2]  @char;
#L088e52.   if v3 != 0 then goto L088e66;
#L088e56.   if v0 == v11 then goto L088e5e;
#L088e5a.   if v0 != v12 then goto L088e60;
#L088e5e.   v3:= v0;
#L088e60.   v2:= v2 + 1;
#L088e64.   goto L088e42;
#L088e66.   if v3 != v12 then goto L088ea6;
#L088e6a.   if v0 != v11 then goto L088ea6;
#L088e6e.   v6:= v14.[|java:io:BufferedReader.pos|] ;
#L088e72.   if v2 <= v6 then goto L088e90;
#L088e76.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088e7a.   v8:= v14.[|java:io:BufferedReader.pos|] ;
#L088e7e.   v9:= v14.[|java:io:BufferedReader.pos|] ;
#L088e82.   v9:= v2 - v9  @type int;
#L088e86.   v9:= v9 + -1;
#L088e8a.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6, v8, v9) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088e90.   v6:= v2 + 1;
#L088e94.   v14.[|java:io:BufferedReader.pos|]  := v6;
#L088e98.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088e9e.   v4:= temp  @type object;
#L088ea0.   (@monitorexit v7)
#L088ea2.   goto L088d26;
#L088ea6.   v6:= v14.[|java:io:BufferedReader.pos|] ;
#L088eaa.   if v2 <= v6 then goto L088ec8;
#L088eae.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088eb2.   v8:= v14.[|java:io:BufferedReader.pos|] ;
#L088eb6.   v9:= v14.[|java:io:BufferedReader.pos|] ;
#L088eba.   v9:= v2 - v9  @type int;
#L088ebe.   v9:= v9 + -1;
#L088ec2.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6, v8, v9) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088ec8.   v14.[|java:io:BufferedReader.pos|]  := v2;
#L088ecc.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088ed2.   v4:= temp  @type object;
#L088ed4.   (@monitorexit v7)
#L088ed6.   goto L088d26;
#L088eda.   if v3 != 0 then goto L088ef8;
#L088ede.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088ee2.   v8:= v14.[|java:io:BufferedReader.pos|] ;
#L088ee6.   v9:= v14.[|java:io:BufferedReader.end|] ;
#L088eea.   v10:= v14.[|java:io:BufferedReader.pos|] ;
#L088eee.   v9:= v9 - v10  @type int;
#L088ef0.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6, v8, v9) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088ef6.   goto L088dfc;
#L088ef8.   v6:= v14.[|java:io:BufferedReader.buf|]   @type object;
#L088efc.   v8:= v14.[|java:io:BufferedReader.pos|] ;
#L088f00.   v9:= v14.[|java:io:BufferedReader.end|] ;
#L088f04.   v10:= v14.[|java:io:BufferedReader.pos|] ;
#L088f08.   v9:= v9 - v10  @type int;
#L088f0a.   v9:= v9 + -1;
#L088f0e.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6, v8, v9) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L088f14.   goto L088dfc;
  catch  [|any|] @[L088d06..L088d74] goto L088d70;
  catch  [|any|] @[L088d7a..L088f14] goto L088d70;

   }
    procedure [|boolean|] [|java:io:BufferedReader.ready|] ([|java:io:BufferedReader|] v3 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.ready:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L088f3c.   v1:= v3.[|java:io:BufferedReader.lock|]   @type object;
#L088f40.   (@monitorenter v1)
#L088f42.   call temp:=  [|java:io:BufferedReader.checkNotClosed|](v3) @signature [|Ljava/io/BufferedReader;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088f48.   v0:= v3.[|java:io:BufferedReader.end|] ;
#L088f4c.   v2:= v3.[|java:io:BufferedReader.pos|] ;
#L088f50.   v0:= v0 - v2  @type int;
#L088f52.   if v0 > 0 then goto L088f66;
#L088f56.   v0:= v3.[|java:io:BufferedReader.in|]   @type object;
#L088f5a.   call temp:=  [|java:io:Reader.ready|](v0) @signature [|Ljava/io/Reader;.ready:()Z|] @classDescriptor [|java:io:Reader|] @type virtual;
#L088f60.   v0:= temp;
#L088f62.   if v0 == 0 then goto L088f6c;
#L088f66.   v0:= 1  @length 4;
#L088f68.   (@monitorexit v1)
#L088f6a.   return v0;
#L088f6c.   v0:= 0  @length 4;
#L088f6e.   goto L088f68;
#L088f70.   v0:= Exception  @type object;
#L088f72.   (@monitorexit v1)
#L088f74.   throw v0;
  catch  [|any|] @[L088f42..L088f74] goto L088f70;

   }
    procedure [|void|] [|java:io:BufferedReader.reset|] ([|java:io:BufferedReader|] v3 @type (this)) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L088f94.   v1:= v3.[|java:io:BufferedReader.lock|]   @type object;
#L088f98.   (@monitorenter v1)
#L088f9a.   call temp:=  [|java:io:BufferedReader.checkNotClosed|](v3) @signature [|Ljava/io/BufferedReader;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L088fa0.   v0:= v3.[|java:io:BufferedReader.mark|] ;
#L088fa4.   v2:= -1  @length 4;
#L088fa6.   if v0 != v2 then goto L088fc0;
#L088faa.   v0:= new [|java:io:IOException|];
#L088fae.   v2:= "Invalid mark" @type (object, string);
#L088fb2.   call temp:=  [|java:io:IOException.<init>|](v0, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L088fb8.   throw v0;
#L088fba.   v0:= Exception  @type object;
#L088fbc.   (@monitorexit v1)
#L088fbe.   throw v0;
#L088fc0.   v0:= v3.[|java:io:BufferedReader.mark|] ;
#L088fc4.   v3.[|java:io:BufferedReader.pos|]  := v0;
#L088fc8.   (@monitorexit v1)
#L088fca.   return @void ;
  catch  [|any|] @[L088f9a..L088fbe] goto L088fba;
  catch  [|any|] @[L088fc0..L088fca] goto L088fba;

   }
    procedure [|long|] [|java:io:BufferedReader.skip|] ([|java:io:BufferedReader|] v8 @type (this), [|long|] v9) @owner [|java:io:BufferedReader|] @signature [|Ljava/io/BufferedReader;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L088ff0.   v0:= 0  @length wide16;
#L088ff4.   v2:= cmp(v9,v0);
#L088ff8.   if v2 >= 0 then goto L08902e;
#L088ffc.   v2:= new [|java:lang:IllegalArgumentException|];
#L089000.   v3:= new [|java:lang:StringBuilder|];
#L089004.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08900a.   v4:= "charCount < 0: " @type (object, string);
#L08900e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L089014.   v3:= temp  @type object;
#L089016.   call temp:=  [|java:lang:StringBuilder.append|](v3, v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08901c.   v3:= temp  @type object;
#L08901e.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L089024.   v3:= temp  @type object;
#L089026.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08902c.   throw v2;
#L08902e.   v3:= v8.[|java:io:BufferedReader.lock|]   @type object;
#L089032.   (@monitorenter v3)
#L089034.   call temp:=  [|java:io:BufferedReader.checkNotClosed|](v8) @signature [|Ljava/io/BufferedReader;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L08903a.   v4:= 1  @length wide16;
#L08903e.   v2:= cmp(v9,v4);
#L089042.   if v2 >= 0 then goto L08904c;
#L089046.   (@monitorexit v3)
#L089048.   v9:= v0  @type wide;
#L08904a.   return v9  @type wide;
#L08904c.   v2:= v8.[|java:io:BufferedReader.end|] ;
#L089050.   v4:= v8.[|java:io:BufferedReader.pos|] ;
#L089054.   v2:= v2 - v4  @type int;
#L089056.   v4:= (long)v2  @type i2l;
#L089058.   v2:= cmp(v4,v9);
#L08905c.   if v2 < 0 then goto L089078;
#L089060.   v2:= v8.[|java:io:BufferedReader.pos|] ;
#L089064.   v4:= (long)v2  @type i2l;
#L089066.   v4:= v4 + v9  @type long;
#L089068.   v2:= (int)v4  @type l2i;
#L08906a.   v8.[|java:io:BufferedReader.pos|]  := v2;
#L08906e.   (@monitorexit v3)
#L089070.   goto L08904a;
#L089072.   v2:= Exception  @type object;
#L089074.   (@monitorexit v3)
#L089076.   throw v2;
#L089078.   v2:= v8.[|java:io:BufferedReader.end|] ;
#L08907c.   v4:= v8.[|java:io:BufferedReader.pos|] ;
#L089080.   v2:= v2 - v4  @type int;
#L089082.   v0:= (long)v2  @type i2l;
#L089084.   v2:= v8.[|java:io:BufferedReader.end|] ;
#L089088.   v8.[|java:io:BufferedReader.pos|]  := v2;
#L08908c.   v2:= cmp(v0,v9);
#L089090.   if v2 >= 0 then goto L0890ee;
#L089094.   call temp:=  [|java:io:BufferedReader.fillBuf|](v8) @signature [|Ljava/io/BufferedReader;.fillBuf:()I|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L08909a.   v2:= temp;
#L08909c.   v4:= -1  @length 4;
#L08909e.   if v2 != v4 then goto L0890a8;
#L0890a2.   (@monitorexit v3)
#L0890a4.   v9:= v0  @type wide;
#L0890a6.   goto L08904a;
#L0890a8.   v2:= v8.[|java:io:BufferedReader.end|] ;
#L0890ac.   v4:= v8.[|java:io:BufferedReader.pos|] ;
#L0890b0.   v2:= v2 - v4  @type int;
#L0890b2.   v4:= (long)v2  @type i2l;
#L0890b4.   v6:= v9 - v0  @type long;
#L0890b8.   v2:= cmp(v4,v6);
#L0890bc.   if v2 < 0 then goto L0890d6;
#L0890c0.   v2:= v8.[|java:io:BufferedReader.pos|] ;
#L0890c4.   v4:= (long)v2  @type i2l;
#L0890c6.   v6:= v9 - v0  @type long;
#L0890ca.   v4:= v4 + v6  @type long;
#L0890cc.   v2:= (int)v4  @type l2i;
#L0890ce.   v8.[|java:io:BufferedReader.pos|]  := v2;
#L0890d2.   (@monitorexit v3)
#L0890d4.   goto L08904a;
#L0890d6.   v2:= v8.[|java:io:BufferedReader.end|] ;
#L0890da.   v4:= v8.[|java:io:BufferedReader.pos|] ;
#L0890de.   v2:= v2 - v4  @type int;
#L0890e0.   v4:= (long)v2  @type i2l;
#L0890e2.   v0:= v0 + v4  @type long;
#L0890e4.   v2:= v8.[|java:io:BufferedReader.end|] ;
#L0890e8.   v8.[|java:io:BufferedReader.pos|]  := v2;
#L0890ec.   goto L08908c;
#L0890ee.   (@monitorexit v3)
#L0890f0.   goto L08904a;
  catch  [|any|] @[L089034..L089076] goto L089072;
  catch  [|any|] @[L089078..L0890f0] goto L089072;

   }
record [|java:lang:Appendable|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:Appendable|] [|java:lang:Appendable.append|] ([|char|] v0) @owner [|java:lang:Appendable|] @signature [|Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Appendable|] [|java:lang:Appendable.append|] ([|java:lang:CharSequence|] v0 @type (object)) @owner [|java:lang:Appendable|] @signature [|Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Appendable|] [|java:lang:Appendable.append|] ([|java:lang:CharSequence|] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|java:lang:Appendable|] @signature [|Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:Writer|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:lang:Appendable|], [|java:io:Closeable|], [|java:io:Flushable|] {
      [|java:lang:Object|] [|java:io:Writer.lock|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:Writer.<init>|] ([|java:io:Writer|] v0 @type (this)) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L089118.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08911e.   v0.[|java:io:Writer.lock|]  := v0 @type object;
#L089122.   return @void ;

   }
    procedure [|void|] [|java:io:Writer.<init>|] ([|java:io:Writer|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.<init>:(Ljava/lang/Object;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L089134.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08913a.   if v3 != 0 then goto L08914e;
#L08913e.   v0:= new [|java:lang:NullPointerException|];
#L089142.   v1:= "lock == null" @type (object, string);
#L089146.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08914c.   throw v0;
#L08914e.   v2.[|java:io:Writer.lock|]  := v3 @type object;
#L089152.   return @void ;

   }
    procedure [|java:io:Writer|] [|java:io:Writer.append|] ([|java:io:Writer|] v0 @type (this), [|char|] v1) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.append:(C)Ljava/io/Writer;|] @Access PUBLIC {
      local temp ;
      
#L089164.   call temp:=  [|java:io:Writer.write|](v0, v1) @signature [|Ljava/io/Writer;.write:(I)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08916a.   return v0  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:Writer.append|] ([|java:io:Writer|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08917c.   if v2 != 0 then goto L089184;
#L089180.   v2:= "null" @type (object, string);
#L089184.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L08918a.   v0:= temp  @type object;
#L08918c.   call temp:=  [|java:io:Writer.write|](v1, v0) @signature [|Ljava/io/Writer;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L089192.   return v1  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:Writer.append|] ([|java:io:Writer|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0891a4.   if v2 != 0 then goto L0891ac;
#L0891a8.   v2:= "null" @type (object, string);
#L0891ac.   call temp:=  [|java:lang:CharSequence.subSequence|](v2, v3, v4) @signature [|Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L0891b2.   v0:= temp  @type object;
#L0891b4.   call temp:=  [|java:lang:Object.toString|](v0) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0891ba.   v0:= temp  @type object;
#L0891bc.   call temp:=  [|java:io:Writer.write|](v1, v0) @signature [|Ljava/io/Writer;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L0891c2.   return v1  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:Writer.append|] ([|java:io:Writer|] v1 @type (this), [|char|] v2) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.append:(C)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0891d4.   call temp:=  [|java:io:Writer.append|](v1, v2) @signature [|Ljava/io/Writer;.append:(C)Ljava/io/Writer;|] @classDescriptor [|java:io:Writer|] @type virtual;
#L0891da.   v0:= temp  @type object;
#L0891dc.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:Writer.append|] ([|java:io:Writer|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0891f0.   call temp:=  [|java:io:Writer.append|](v1, v2) @signature [|Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;|] @classDescriptor [|java:io:Writer|] @type virtual;
#L0891f6.   v0:= temp  @type object;
#L0891f8.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:Writer.append|] ([|java:io:Writer|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08920c.   call temp:=  [|java:io:Writer.append|](v1, v2, v3, v4) @signature [|Ljava/io/Writer;.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;|] @classDescriptor [|java:io:Writer|] @type virtual;
#L089212.   v0:= temp  @type object;
#L089214.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:Writer.checkError|] ([|java:io:Writer|] v1 @type (this)) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.checkError:()Z|] @Access  {
      local temp ;
        v0;
      
#L089228.   v0:= 0  @length 4;
#L08922a.   return v0;

   }
    procedure [|void|] [|java:io:Writer.close|] () @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:Writer.flush|] () @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.flush:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:Writer.write|] ([|java:io:Writer|] v4 @type (this), [|int|] v5) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08923c.   v2:= v4.[|java:io:Writer.lock|]   @type object;
#L089240.   (@monitorenter v2)
#L089242.   v1:= 1  @length 4;
#L089244.   v0:= new [|char|][v1];
#L089248.   v1:= 0  @length 4;
#L08924a.   v3:= (char)v5  @type i2c;
#L08924c.   v0[v1]:= v3  @char;
#L089250.   call temp:=  [|java:io:Writer.write|](v4, v0) @signature [|Ljava/io/Writer;.write:([C)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L089256.   (@monitorexit v2)
#L089258.   return @void ;
#L08925a.   v1:= Exception  @type object;
#L08925c.   (@monitorexit v2)
#L08925e.   throw v1;
  catch  [|any|] @[L089244..L08925e] goto L08925a;

   }
    procedure [|void|] [|java:io:Writer.write|] ([|java:io:Writer|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.write:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08927c.   v0:= 0  @length 4;
#L08927e.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L089284.   v1:= temp;
#L089286.   call temp:=  [|java:io:Writer.write|](v2, v3, v0, v1) @signature [|Ljava/io/Writer;.write:(Ljava/lang/String;II)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08928c.   return @void ;

   }
    procedure [|void|] [|java:io:Writer.write|] ([|java:io:Writer|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|int|] v6, [|int|] v7) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.write:(Ljava/lang/String;II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0892a0.   v2:= 0  @length 4;
#L0892a2.   v1:= v6 ^| v7  @type int;
#L0892a6.   if v1 < 0 then goto L0892b8;
#L0892aa.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0892b0.   v1:= temp;
#L0892b2.   v1:= v1 - v7  @type int;
#L0892b4.   if v6 <= v1 then goto L0892c4;
#L0892b8.   v1:= new [|java:lang:StringIndexOutOfBoundsException|];
#L0892bc.   call temp:=  [|java:lang:StringIndexOutOfBoundsException.<init>|](v1, v5, v6, v7) @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:lang:StringIndexOutOfBoundsException|] @type direct;
#L0892c2.   throw v1;
#L0892c4.   v0:= new [|char|][v7];
#L0892c8.   v1:= v6 + v7  @type int;
#L0892cc.   call temp:=  [|java:lang:String.getChars|](v5, v6, v1, v0, v2) @signature [|Ljava/lang/String;.getChars:(II[CI)V|] @classDescriptor [|java:lang:String|] @type virtual;
#L0892d2.   v2:= v4.[|java:io:Writer.lock|]   @type object;
#L0892d6.   (@monitorenter v2)
#L0892d8.   v1:= 0  @length 4;
#L0892da.   v3:= v0.length;
#L0892dc.   call temp:=  [|java:io:Writer.write|](v4, v0, v1, v3) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L0892e2.   (@monitorexit v2)
#L0892e4.   return @void ;
#L0892e6.   v1:= Exception  @type object;
#L0892e8.   (@monitorexit v2)
#L0892ea.   throw v1;
  catch  [|any|] @[L0892da..L0892ea] goto L0892e6;

   }
    procedure [|void|] [|java:io:Writer.write|] ([|java:io:Writer|] v2 @type (this), [|char|][] v3) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.write:([C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L089308.   v0:= 0  @length 4;
#L08930a.   v1:= v3.length;
#L08930c.   call temp:=  [|java:io:Writer.write|](v2, v3, v0, v1) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L089312.   return @void ;

   }
    procedure [|void|] [|java:io:Writer.write|] ([|char|][] v0, [|int|] v1, [|int|] v2) @owner [|java:io:Writer|] @signature [|Ljava/io/Writer;.write:([CII)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:BufferedWriter|]  @type class @AccessFlag PUBLIC  extends [|java:io:Writer|] {
      [|char|][] [|java:io:BufferedWriter.buf|]    @AccessFlag PRIVATE;
      [|java:io:Writer|] [|java:io:BufferedWriter.out|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:BufferedWriter.pos|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:BufferedWriter.<init>|] ([|java:io:BufferedWriter|] v1 @type (this), [|java:io:Writer|] v2 @type (object)) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L089324.   v0:= 8192  @length 16;
#L089328.   call temp:=  [|java:io:BufferedWriter.<init>|](v1, v2, v0) @signature [|Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;I)V|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L08932e.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedWriter.<init>|] ([|java:io:BufferedWriter|] v2 @type (this), [|java:io:Writer|] v3 @type (object), [|int|] v4) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L089340.   call temp:=  [|java:io:Writer.<init>|](v2, v3) @signature [|Ljava/io/Writer;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Writer|] @type direct;
#L089346.   if v4 > 0 then goto L08935a;
#L08934a.   v0:= new [|java:lang:IllegalArgumentException|];
#L08934e.   v1:= "size <= 0" @type (object, string);
#L089352.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L089358.   throw v0;
#L08935a.   v2.[|java:io:BufferedWriter.out|]  := v3 @type object;
#L08935e.   v0:= new [|char|][v4];
#L089362.   v2.[|java:io:BufferedWriter.buf|]  := v0 @type object;
#L089366.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedWriter.checkNotClosed|] ([|java:io:BufferedWriter|] v2 @type (this)) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.checkNotClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L089378.   call temp:=  [|java:io:BufferedWriter.isClosed|](v2) @signature [|Ljava/io/BufferedWriter;.isClosed:()Z|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L08937e.   v0:= temp;
#L089380.   if v0 == 0 then goto L089394;
#L089384.   v0:= new [|java:io:IOException|];
#L089388.   v1:= "BufferedWriter is closed" @type (object, string);
#L08938c.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L089392.   throw v0;
#L089394.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedWriter.flushInternal|] ([|java:io:BufferedWriter|] v4 @type (this)) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.flushInternal:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0893a8.   v3:= 0  @length 4;
#L0893aa.   v0:= v4.[|java:io:BufferedWriter.pos|] ;
#L0893ae.   if v0 <= 0 then goto L0893c4;
#L0893b2.   v0:= v4.[|java:io:BufferedWriter.out|]   @type object;
#L0893b6.   v1:= v4.[|java:io:BufferedWriter.buf|]   @type object;
#L0893ba.   v2:= v4.[|java:io:BufferedWriter.pos|] ;
#L0893be.   call temp:=  [|java:io:Writer.write|](v0, v1, v3, v2) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L0893c4.   v4.[|java:io:BufferedWriter.pos|]  := v3;
#L0893c8.   return @void ;

   }
    procedure [|boolean|] [|java:io:BufferedWriter.isClosed|] ([|java:io:BufferedWriter|] v1 @type (this)) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.isClosed:()Z|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0893dc.   v0:= v1.[|java:io:BufferedWriter.out|]   @type object;
#L0893e0.   if v0 != 0 then goto L0893e8;
#L0893e4.   v0:= 1  @length 4;
#L0893e6.   return v0;
#L0893e8.   v0:= 0  @length 4;
#L0893ea.   goto L0893e6;

   }
    procedure [|void|] [|java:io:BufferedWriter.close|] ([|java:io:BufferedWriter|] v4 @type (this)) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0893fc.   v3:= v4.[|java:io:BufferedWriter.lock|]   @type object;
#L089400.   (@monitorenter v3)
#L089402.   call temp:=  [|java:io:BufferedWriter.isClosed|](v4) @signature [|Ljava/io/BufferedWriter;.isClosed:()Z|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L089408.   v2:= temp;
#L08940a.   if v2 == 0 then goto L089412;
#L08940e.   (@monitorexit v3)
#L089410.   return @void ;
#L089412.   v1:= 0  @length 4;
#L089414.   call temp:=  [|java:io:BufferedWriter.flushInternal|](v4) @signature [|Ljava/io/BufferedWriter;.flushInternal:()V|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L08941a.   v2:= 0  @length 4;
#L08941c.   v4.[|java:io:BufferedWriter.buf|]  := v2 @type object;
#L089420.   v2:= v4.[|java:io:BufferedWriter.out|]   @type object;
#L089424.   call temp:=  [|java:io:Writer.close|](v2) @signature [|Ljava/io/Writer;.close:()V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08942a.   v2:= 0  @length 4;
#L08942c.   v4.[|java:io:BufferedWriter.out|]  := v2 @type object;
#L089430.   if v1 == 0 then goto L08943a;
#L089434.   call temp:=  [|libcore:util:SneakyThrow.sneakyThrow|](v1) @signature [|Llibcore/util/SneakyThrow;.sneakyThrow:(Ljava/lang/Throwable;)V|] @classDescriptor [|libcore:util:SneakyThrow|] @type static;
#L08943a.   (@monitorexit v3)
#L08943c.   goto L089410;
#L08943e.   v2:= Exception  @type object;
#L089440.   (@monitorexit v3)
#L089442.   throw v2;
#L089444.   v0:= Exception  @type object;
#L089446.   v1:= v0  @type object;
#L089448.   goto L08941a;
#L08944a.   v0:= Exception  @type object;
#L08944c.   if v1 != 0 then goto L08942a;
#L089450.   v1:= v0  @type object;
#L089452.   goto L08942a;
  catch  [|any|] @[L089402..L089410] goto L08943e;
  catch  [|java:lang:Throwable|] @[L089414..L08941a] goto L089444;
  catch  [|any|] @[L089414..L08941a] goto L08943e;
  catch  [|any|] @[L08941c..L089420] goto L08943e;
  catch  [|java:lang:Throwable|] @[L089420..L08942a] goto L08944a;
  catch  [|any|] @[L089420..L08942a] goto L08943e;
  catch  [|any|] @[L08942c..L089442] goto L08943e;

   }
    procedure [|void|] [|java:io:BufferedWriter.flush|] ([|java:io:BufferedWriter|] v2 @type (this)) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08949c.   v1:= v2.[|java:io:BufferedWriter.lock|]   @type object;
#L0894a0.   (@monitorenter v1)
#L0894a2.   call temp:=  [|java:io:BufferedWriter.checkNotClosed|](v2) @signature [|Ljava/io/BufferedWriter;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L0894a8.   call temp:=  [|java:io:BufferedWriter.flushInternal|](v2) @signature [|Ljava/io/BufferedWriter;.flushInternal:()V|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L0894ae.   v0:= v2.[|java:io:BufferedWriter.out|]   @type object;
#L0894b2.   call temp:=  [|java:io:Writer.flush|](v0) @signature [|Ljava/io/Writer;.flush:()V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L0894b8.   (@monitorexit v1)
#L0894ba.   return @void ;
#L0894bc.   v0:= Exception  @type object;
#L0894be.   (@monitorexit v1)
#L0894c0.   throw v0;
  catch  [|any|] @[L0894a2..L0894c0] goto L0894bc;

   }
    procedure [|void|] [|java:io:BufferedWriter.newLine|] ([|java:io:BufferedWriter|] v1 @type (this)) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.newLine:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0894e0.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0894e6.   v0:= temp  @type object;
#L0894e8.   call temp:=  [|java:io:BufferedWriter.write|](v1, v0) @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:BufferedWriter|] @type virtual;
#L0894ee.   return @void ;

   }
    procedure [|void|] [|java:io:BufferedWriter.write|] ([|java:io:BufferedWriter|] v5 @type (this), [|int|] v6) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L089500.   v1:= v5.[|java:io:BufferedWriter.lock|]   @type object;
#L089504.   (@monitorenter v1)
#L089506.   call temp:=  [|java:io:BufferedWriter.checkNotClosed|](v5) @signature [|Ljava/io/BufferedWriter;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L08950c.   v0:= v5.[|java:io:BufferedWriter.pos|] ;
#L089510.   v2:= v5.[|java:io:BufferedWriter.buf|]   @type object;
#L089514.   v2:= v2.length;
#L089516.   if v0 < v2 then goto L089536;
#L08951a.   v0:= v5.[|java:io:BufferedWriter.out|]   @type object;
#L08951e.   v2:= v5.[|java:io:BufferedWriter.buf|]   @type object;
#L089522.   v3:= 0  @length 4;
#L089524.   v4:= v5.[|java:io:BufferedWriter.buf|]   @type object;
#L089528.   v4:= v4.length;
#L08952a.   call temp:=  [|java:io:Writer.write|](v0, v2, v3, v4) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L089530.   v0:= 0  @length 4;
#L089532.   v5.[|java:io:BufferedWriter.pos|]  := v0;
#L089536.   v0:= v5.[|java:io:BufferedWriter.buf|]   @type object;
#L08953a.   v2:= v5.[|java:io:BufferedWriter.pos|] ;
#L08953e.   v3:= v2 + 1;
#L089542.   v5.[|java:io:BufferedWriter.pos|]  := v3;
#L089546.   v3:= (char)v6  @type i2c;
#L089548.   v0[v2]:= v3  @char;
#L08954c.   (@monitorexit v1)
#L08954e.   return @void ;
#L089550.   v0:= Exception  @type object;
#L089552.   (@monitorexit v1)
#L089554.   throw v0;
  catch  [|any|] @[L089506..L089554] goto L089550;

   }
    procedure [|void|] [|java:io:BufferedWriter.write|] ([|java:io:BufferedWriter|] v7 @type (this), [|java:lang:String|] v8 @type (object), [|int|] v9, [|int|] v10) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.write:(Ljava/lang/String;II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L089574.   v3:= v7.[|java:io:BufferedWriter.lock|]   @type object;
#L089578.   (@monitorenter v3)
#L08957a.   call temp:=  [|java:io:BufferedWriter.checkNotClosed|](v7) @signature [|Ljava/io/BufferedWriter;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L089580.   if v10 > 0 then goto L089588;
#L089584.   (@monitorexit v3)
#L089586.   return @void ;
#L089588.   if v9 < 0 then goto L08959a;
#L08958c.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L089592.   v2:= temp;
#L089594.   v2:= v2 - v10  @type int;
#L089596.   if v9 <= v2 then goto L0895ac;
#L08959a.   v2:= new [|java:lang:StringIndexOutOfBoundsException|];
#L08959e.   call temp:=  [|java:lang:StringIndexOutOfBoundsException.<init>|](v2, v8, v9, v10) @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:lang:StringIndexOutOfBoundsException|] @type direct;
#L0895a4.   throw v2;
#L0895a6.   v2:= Exception  @type object;
#L0895a8.   (@monitorexit v3)
#L0895aa.   throw v2;
#L0895ac.   v2:= v7.[|java:io:BufferedWriter.pos|] ;
#L0895b0.   if v2 != 0 then goto L0895de;
#L0895b4.   v2:= v7.[|java:io:BufferedWriter.buf|]   @type object;
#L0895b8.   v2:= v2.length;
#L0895ba.   if v10 < v2 then goto L0895de;
#L0895be.   v1:= new [|char|][v10];
#L0895c2.   v2:= v9 + v10  @type int;
#L0895c6.   v4:= 0  @length 4;
#L0895c8.   call temp:=  [|java:lang:String.getChars|](v8, v9, v2, v1, v4) @signature [|Ljava/lang/String;.getChars:(II[CI)V|] @classDescriptor [|java:lang:String|] @type virtual;
#L0895ce.   v2:= v7.[|java:io:BufferedWriter.out|]   @type object;
#L0895d2.   v4:= 0  @length 4;
#L0895d4.   call temp:=  [|java:io:Writer.write|](v2, v1, v4, v10) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L0895da.   (@monitorexit v3)
#L0895dc.   goto L089586;
#L0895de.   v2:= v7.[|java:io:BufferedWriter.buf|]   @type object;
#L0895e2.   v2:= v2.length;
#L0895e4.   v4:= v7.[|java:io:BufferedWriter.pos|] ;
#L0895e8.   v0:= v2 - v4  @type int;
#L0895ec.   if v10 >= v0 then goto L0895f2;
#L0895f0.   v0:= v10;
#L0895f2.   if v0 <= 0 then goto L089612;
#L0895f6.   v2:= v9 + v0  @type int;
#L0895fa.   v4:= v7.[|java:io:BufferedWriter.buf|]   @type object;
#L0895fe.   v5:= v7.[|java:io:BufferedWriter.pos|] ;
#L089602.   call temp:=  [|java:lang:String.getChars|](v8, v9, v2, v4, v5) @signature [|Ljava/lang/String;.getChars:(II[CI)V|] @classDescriptor [|java:lang:String|] @type virtual;
#L089608.   v2:= v7.[|java:io:BufferedWriter.pos|] ;
#L08960c.   v2:= v2 + v0  @type int;
#L08960e.   v7.[|java:io:BufferedWriter.pos|]  := v2;
#L089612.   v2:= v7.[|java:io:BufferedWriter.pos|] ;
#L089616.   v4:= v7.[|java:io:BufferedWriter.buf|]   @type object;
#L08961a.   v4:= v4.length;
#L08961c.   if v2 != v4 then goto L08968c;
#L089620.   v2:= v7.[|java:io:BufferedWriter.out|]   @type object;
#L089624.   v4:= v7.[|java:io:BufferedWriter.buf|]   @type object;
#L089628.   v5:= 0  @length 4;
#L08962a.   v6:= v7.[|java:io:BufferedWriter.buf|]   @type object;
#L08962e.   v6:= v6.length;
#L089630.   call temp:=  [|java:io:Writer.write|](v2, v4, v5, v6) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L089636.   v2:= 0  @length 4;
#L089638.   v7.[|java:io:BufferedWriter.pos|]  := v2;
#L08963c.   if v10 <= v0 then goto L08968c;
#L089640.   v9:= v9 + v0  @type int;
#L089642.   v0:= v10 - v0  @type int;
#L089646.   v2:= v7.[|java:io:BufferedWriter.buf|]   @type object;
#L08964a.   v2:= v2.length;
#L08964c.   if v0 < v2 then goto L089670;
#L089650.   v1:= new [|char|][v10];
#L089654.   v2:= v9 + v0  @type int;
#L089658.   v4:= 0  @length 4;
#L08965a.   call temp:=  [|java:lang:String.getChars|](v8, v9, v2, v1, v4) @signature [|Ljava/lang/String;.getChars:(II[CI)V|] @classDescriptor [|java:lang:String|] @type virtual;
#L089660.   v2:= v7.[|java:io:BufferedWriter.out|]   @type object;
#L089664.   v4:= 0  @length 4;
#L089666.   call temp:=  [|java:io:Writer.write|](v2, v1, v4, v0) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08966c.   (@monitorexit v3)
#L08966e.   goto L089586;
#L089670.   v2:= v9 + v0  @type int;
#L089674.   v4:= v7.[|java:io:BufferedWriter.buf|]   @type object;
#L089678.   v5:= v7.[|java:io:BufferedWriter.pos|] ;
#L08967c.   call temp:=  [|java:lang:String.getChars|](v8, v9, v2, v4, v5) @signature [|Ljava/lang/String;.getChars:(II[CI)V|] @classDescriptor [|java:lang:String|] @type virtual;
#L089682.   v2:= v7.[|java:io:BufferedWriter.pos|] ;
#L089686.   v2:= v2 + v0  @type int;
#L089688.   v7.[|java:io:BufferedWriter.pos|]  := v2;
#L08968c.   (@monitorexit v3)
#L08968e.   goto L089586;
  catch  [|any|] @[L08957a..L0895aa] goto L0895a6;
  catch  [|any|] @[L0895ac..L08968e] goto L0895a6;

   }
    procedure [|void|] [|java:io:BufferedWriter.write|] ([|java:io:BufferedWriter|] v6 @type (this), [|char|][] v7, [|int|] v8, [|int|] v9) @owner [|java:io:BufferedWriter|] @signature [|Ljava/io/BufferedWriter;.write:([CII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0896b8.   v2:= v6.[|java:io:BufferedWriter.lock|]   @type object;
#L0896bc.   (@monitorenter v2)
#L0896be.   call temp:=  [|java:io:BufferedWriter.checkNotClosed|](v6) @signature [|Ljava/io/BufferedWriter;.checkNotClosed:()V|] @classDescriptor [|java:io:BufferedWriter|] @type direct;
#L0896c4.   if v7 != 0 then goto L0896de;
#L0896c8.   v1:= new [|java:lang:NullPointerException|];
#L0896cc.   v3:= "buffer == null" @type (object, string);
#L0896d0.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0896d6.   throw v1;
#L0896d8.   v1:= Exception  @type object;
#L0896da.   (@monitorexit v2)
#L0896dc.   throw v1;
#L0896de.   v1:= v7.length;
#L0896e0.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0896e6.   v1:= v6.[|java:io:BufferedWriter.pos|] ;
#L0896ea.   if v1 != 0 then goto L089706;
#L0896ee.   v1:= v6.[|java:io:BufferedWriter.buf|]   @type object;
#L0896f2.   v1:= v1.length;
#L0896f4.   if v9 < v1 then goto L089706;
#L0896f8.   v1:= v6.[|java:io:BufferedWriter.out|]   @type object;
#L0896fc.   call temp:=  [|java:io:Writer.write|](v1, v7, v8, v9) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L089702.   (@monitorexit v2)
#L089704.   return @void ;
#L089706.   v1:= v6.[|java:io:BufferedWriter.buf|]   @type object;
#L08970a.   v1:= v1.length;
#L08970c.   v3:= v6.[|java:io:BufferedWriter.pos|] ;
#L089710.   v0:= v1 - v3  @type int;
#L089714.   if v9 >= v0 then goto L08971a;
#L089718.   v0:= v9;
#L08971a.   if v0 <= 0 then goto L089736;
#L08971e.   v1:= v6.[|java:io:BufferedWriter.buf|]   @type object;
#L089722.   v3:= v6.[|java:io:BufferedWriter.pos|] ;
#L089726.   call temp:=  [|java:lang:System.arraycopy|](v7, v8, v1, v3, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L08972c.   v1:= v6.[|java:io:BufferedWriter.pos|] ;
#L089730.   v1:= v1 + v0  @type int;
#L089732.   v6.[|java:io:BufferedWriter.pos|]  := v1;
#L089736.   v1:= v6.[|java:io:BufferedWriter.pos|] ;
#L08973a.   v3:= v6.[|java:io:BufferedWriter.buf|]   @type object;
#L08973e.   v3:= v3.length;
#L089740.   if v1 != v3 then goto L08979a;
#L089744.   v1:= v6.[|java:io:BufferedWriter.out|]   @type object;
#L089748.   v3:= v6.[|java:io:BufferedWriter.buf|]   @type object;
#L08974c.   v4:= 0  @length 4;
#L08974e.   v5:= v6.[|java:io:BufferedWriter.buf|]   @type object;
#L089752.   v5:= v5.length;
#L089754.   call temp:=  [|java:io:Writer.write|](v1, v3, v4, v5) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08975a.   v1:= 0  @length 4;
#L08975c.   v6.[|java:io:BufferedWriter.pos|]  := v1;
#L089760.   if v9 <= v0 then goto L08979a;
#L089764.   v8:= v8 + v0  @type int;
#L089766.   v0:= v9 - v0  @type int;
#L08976a.   v1:= v6.[|java:io:BufferedWriter.buf|]   @type object;
#L08976e.   v1:= v1.length;
#L089770.   if v0 < v1 then goto L089782;
#L089774.   v1:= v6.[|java:io:BufferedWriter.out|]   @type object;
#L089778.   call temp:=  [|java:io:Writer.write|](v1, v7, v8, v0) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08977e.   (@monitorexit v2)
#L089780.   goto L089704;
#L089782.   v1:= v6.[|java:io:BufferedWriter.buf|]   @type object;
#L089786.   v3:= v6.[|java:io:BufferedWriter.pos|] ;
#L08978a.   call temp:=  [|java:lang:System.arraycopy|](v7, v8, v1, v3, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L089790.   v1:= v6.[|java:io:BufferedWriter.pos|] ;
#L089794.   v1:= v1 + v0  @type int;
#L089796.   v6.[|java:io:BufferedWriter.pos|]  := v1;
#L08979a.   (@monitorexit v2)
#L08979c.   goto L089704;
  catch  [|any|] @[L0896be..L0896dc] goto L0896d8;
  catch  [|any|] @[L0896de..L08979c] goto L0896d8;

   }
record [|java:io:ByteArrayInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:InputStream|] {
      [|byte|][] [|java:io:ByteArrayInputStream.buf|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:ByteArrayInputStream.count|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:ByteArrayInputStream.mark|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:ByteArrayInputStream.pos|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:ByteArrayInputStream.<init>|] ([|java:io:ByteArrayInputStream|] v1 @type (this), [|byte|][] v2) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0897c4.   call temp:=  [|java:io:InputStream.<init>|](v1) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L0897ca.   v0:= 0  @length 4;
#L0897cc.   v1.[|java:io:ByteArrayInputStream.mark|]  := v0;
#L0897d0.   v1.[|java:io:ByteArrayInputStream.buf|]  := v2 @type object;
#L0897d4.   v0:= v2.length;
#L0897d6.   v1.[|java:io:ByteArrayInputStream.count|]  := v0;
#L0897da.   return @void ;

   }
    procedure [|void|] [|java:io:ByteArrayInputStream.<init>|] ([|java:io:ByteArrayInputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.<init>:([BII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0897ec.   call temp:=  [|java:io:InputStream.<init>|](v2) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L0897f2.   v2.[|java:io:ByteArrayInputStream.buf|]  := v3 @type object;
#L0897f6.   v2.[|java:io:ByteArrayInputStream.pos|]  := v4;
#L0897fa.   v2.[|java:io:ByteArrayInputStream.mark|]  := v4;
#L0897fe.   v0:= v4 + v5  @type int;
#L089802.   v1:= v3.length;
#L089804.   if v0 <= v1 then goto L089810;
#L089808.   v0:= v3.length;
#L08980a.   v2.[|java:io:ByteArrayInputStream.count|]  := v0;
#L08980e.   return @void ;
#L089810.   v0:= v4 + v5  @type int;
#L089814.   goto L08980a;

   }
    procedure [|int|] [|java:io:ByteArrayInputStream.available|] ([|java:io:ByteArrayInputStream|] v2 @type (this)) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.available:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L089828.   (@monitorenter v2)
#L08982a.   v0:= v2.[|java:io:ByteArrayInputStream.count|] ;
#L08982e.   v1:= v2.[|java:io:ByteArrayInputStream.pos|] ;
#L089832.   v0:= v0 - v1  @type int;
#L089834.   (@monitorexit v2)
#L089836.   return v0;
#L089838.   v0:= Exception  @type object;
#L08983a.   (@monitorexit v2)
#L08983c.   throw v0;
  catch  [|any|] @[L08982a..L089832] goto L089838;

   }
    procedure [|void|] [|java:io:ByteArrayInputStream.close|] ([|java:io:ByteArrayInputStream|] v0 @type (this)) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
      
#L08985c.   return @void ;

   }
    procedure [|void|] [|java:io:ByteArrayInputStream.mark|] ([|java:io:ByteArrayInputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.mark:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L089870.   (@monitorenter v1)
#L089872.   v0:= v1.[|java:io:ByteArrayInputStream.pos|] ;
#L089876.   v1.[|java:io:ByteArrayInputStream.mark|]  := v0;
#L08987a.   (@monitorexit v1)
#L08987c.   return @void ;
#L08987e.   v0:= Exception  @type object;
#L089880.   (@monitorexit v1)
#L089882.   throw v0;
  catch  [|any|] @[L089872..L08987a] goto L08987e;

   }
    procedure [|boolean|] [|java:io:ByteArrayInputStream.markSupported|] ([|java:io:ByteArrayInputStream|] v1 @type (this)) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0898a0.   v0:= 1  @length 4;
#L0898a2.   return v0;

   }
    procedure [|int|] [|java:io:ByteArrayInputStream.read|] ([|java:io:ByteArrayInputStream|] v3 @type (this)) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.read:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0898b4.   (@monitorenter v3)
#L0898b6.   v0:= v3.[|java:io:ByteArrayInputStream.pos|] ;
#L0898ba.   v1:= v3.[|java:io:ByteArrayInputStream.count|] ;
#L0898be.   if v0 >= v1 then goto L0898de;
#L0898c2.   v0:= v3.[|java:io:ByteArrayInputStream.buf|]   @type object;
#L0898c6.   v1:= v3.[|java:io:ByteArrayInputStream.pos|] ;
#L0898ca.   v2:= v1 + 1;
#L0898ce.   v3.[|java:io:ByteArrayInputStream.pos|]  := v2;
#L0898d2.   v0:= v0[v1]  @byte;
#L0898d6.   v0:= v0 ^& 255;
#L0898da.   (@monitorexit v3)
#L0898dc.   return v0;
#L0898de.   v0:= -1  @length 4;
#L0898e0.   goto L0898da;
#L0898e2.   v0:= Exception  @type object;
#L0898e4.   (@monitorexit v3)
#L0898e6.   throw v0;
  catch  [|any|] @[L0898b6..L0898d6] goto L0898e2;

   }
    procedure [|int|] [|java:io:ByteArrayInputStream.read|] ([|java:io:ByteArrayInputStream|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.read:([BII)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L089904.   (@monitorenter v3)
#L089906.   v1:= v4.length;
#L089908.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v5, v6) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L08990e.   v1:= v3.[|java:io:ByteArrayInputStream.pos|] ;
#L089912.   v2:= v3.[|java:io:ByteArrayInputStream.count|] ;
#L089916.   if v1 < v2 then goto L089920;
#L08991a.   v0:= -1  @length 4;
#L08991c.   (@monitorexit v3)
#L08991e.   return v0;
#L089920.   if v6 != 0 then goto L089928;
#L089924.   v0:= 0  @length 4;
#L089926.   goto L08991c;
#L089928.   v1:= v3.[|java:io:ByteArrayInputStream.count|] ;
#L08992c.   v2:= v3.[|java:io:ByteArrayInputStream.pos|] ;
#L089930.   v1:= v1 - v2  @type int;
#L089932.   if v1 >= v6 then goto L089962;
#L089936.   v1:= v3.[|java:io:ByteArrayInputStream.count|] ;
#L08993a.   v2:= v3.[|java:io:ByteArrayInputStream.pos|] ;
#L08993e.   v0:= v1 - v2  @type int;
#L089942.   v1:= v3.[|java:io:ByteArrayInputStream.buf|]   @type object;
#L089946.   v2:= v3.[|java:io:ByteArrayInputStream.pos|] ;
#L08994a.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v4, v5, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L089950.   v1:= v3.[|java:io:ByteArrayInputStream.pos|] ;
#L089954.   v1:= v1 + v0  @type int;
#L089956.   v3.[|java:io:ByteArrayInputStream.pos|]  := v1;
#L08995a.   goto L08991c;
#L08995c.   v1:= Exception  @type object;
#L08995e.   (@monitorexit v3)
#L089960.   throw v1;
#L089962.   v0:= v6;
#L089964.   goto L089942;
  catch  [|any|] @[L089906..L089916] goto L08995c;
  catch  [|any|] @[L089928..L08995a] goto L08995c;

   }
    procedure [|void|] [|java:io:ByteArrayInputStream.reset|] ([|java:io:ByteArrayInputStream|] v1 @type (this)) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.reset:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L08998c.   (@monitorenter v1)
#L08998e.   v0:= v1.[|java:io:ByteArrayInputStream.mark|] ;
#L089992.   v1.[|java:io:ByteArrayInputStream.pos|]  := v0;
#L089996.   (@monitorexit v1)
#L089998.   return @void ;
#L08999a.   v0:= Exception  @type object;
#L08999c.   (@monitorexit v1)
#L08999e.   throw v0;
  catch  [|any|] @[L08998e..L089996] goto L08999a;

   }
    procedure [|long|] [|java:io:ByteArrayInputStream.skip|] ([|java:io:ByteArrayInputStream|] v4 @type (this), [|long|] v5) @owner [|java:io:ByteArrayInputStream|] @signature [|Ljava/io/ByteArrayInputStream;.skip:(J)J|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0899bc.   v1:= 0  @length wide16;
#L0899c0.   (@monitorenter v4)
#L0899c2.   v3:= cmp(v5,v1);
#L0899c6.   if v3 > 0 then goto L0899ce;
#L0899ca.   (@monitorexit v4)
#L0899cc.   return v1  @type wide;
#L0899ce.   v0:= v4.[|java:io:ByteArrayInputStream.pos|] ;
#L0899d2.   v1:= v4.[|java:io:ByteArrayInputStream.count|] ;
#L0899d6.   v2:= v4.[|java:io:ByteArrayInputStream.pos|] ;
#L0899da.   v1:= v1 - v2  @type int;
#L0899dc.   v1:= (long)v1  @type i2l;
#L0899de.   v1:= cmp(v1,v5);
#L0899e2.   if v1 >= 0 then goto L0899f8;
#L0899e6.   v1:= v4.[|java:io:ByteArrayInputStream.count|] ;
#L0899ea.   v4.[|java:io:ByteArrayInputStream.pos|]  := v1;
#L0899ee.   v1:= v4.[|java:io:ByteArrayInputStream.pos|] ;
#L0899f2.   v1:= v1 - v0  @type int;
#L0899f4.   v1:= (long)v1  @type i2l;
#L0899f6.   goto L0899ca;
#L0899f8.   v1:= v4.[|java:io:ByteArrayInputStream.pos|] ;
#L0899fc.   v1:= (long)v1  @type i2l;
#L0899fe.   v1:= v1 + v5  @type long;
#L089a00.   v1:= (int)v1  @type l2i;
#L089a02.   goto L0899ea;
#L089a04.   v1:= Exception  @type object;
#L089a06.   (@monitorexit v4)
#L089a08.   throw v1;
  catch  [|any|] @[L0899ce..L0899fc] goto L089a04;

   }
record [|java:io:ByteArrayOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:OutputStream|] {
      [|byte|][] [|java:io:ByteArrayOutputStream.buf|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:ByteArrayOutputStream.count|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:ByteArrayOutputStream.<init>|] ([|java:io:ByteArrayOutputStream|] v1 @type (this)) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L089a28.   call temp:=  [|java:io:OutputStream.<init>|](v1) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L089a2e.   v0:= 32  @length 16;
#L089a32.   v0:= new [|byte|][v0];
#L089a36.   v1.[|java:io:ByteArrayOutputStream.buf|]  := v0 @type object;
#L089a3a.   return @void ;

   }
    procedure [|void|] [|java:io:ByteArrayOutputStream.<init>|] ([|java:io:ByteArrayOutputStream|] v2 @type (this), [|int|] v3) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L089a4c.   call temp:=  [|java:io:OutputStream.<init>|](v2) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L089a52.   if v3 < 0 then goto L089a60;
#L089a56.   v0:= new [|byte|][v3];
#L089a5a.   v2.[|java:io:ByteArrayOutputStream.buf|]  := v0 @type object;
#L089a5e.   return @void ;
#L089a60.   v0:= new [|java:lang:IllegalArgumentException|];
#L089a64.   v1:= "size < 0" @type (object, string);
#L089a68.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L089a6e.   throw v0;

   }
    procedure [|void|] [|java:io:ByteArrayOutputStream.expand|] ([|java:io:ByteArrayOutputStream|] v4 @type (this), [|int|] v5) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.expand:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L089a80.   v3:= 0  @length 4;
#L089a82.   v1:= v4.[|java:io:ByteArrayOutputStream.count|] ;
#L089a86.   v1:= v1 + v5  @type int;
#L089a88.   v2:= v4.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089a8c.   v2:= v2.length;
#L089a8e.   if v1 > v2 then goto L089a94;
#L089a92.   return @void ;
#L089a94.   v1:= v4.[|java:io:ByteArrayOutputStream.count|] ;
#L089a98.   v1:= v1 + v5  @type int;
#L089a9a.   v1:= v1 * 2;
#L089a9e.   v0:= new [|byte|][v1];
#L089aa2.   v1:= v4.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089aa6.   v2:= v4.[|java:io:ByteArrayOutputStream.count|] ;
#L089aaa.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L089ab0.   v4.[|java:io:ByteArrayOutputStream.buf|]  := v0 @type object;
#L089ab4.   goto L089a92;

   }
    procedure [|void|] [|java:io:ByteArrayOutputStream.close|] ([|java:io:ByteArrayOutputStream|] v0 @type (this)) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
      
#L089ac8.   call temp:=  [|java:io:OutputStream.close|](v0) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type super;
#L089ace.   return @void ;

   }
    procedure [|void|] [|java:io:ByteArrayOutputStream.reset|] ([|java:io:ByteArrayOutputStream|] v1 @type (this)) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.reset:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L089ae0.   (@monitorenter v1)
#L089ae2.   v0:= 0  @length 4;
#L089ae4.   v1.[|java:io:ByteArrayOutputStream.count|]  := v0;
#L089ae8.   (@monitorexit v1)
#L089aea.   return @void ;
#L089aec.   v0:= Exception  @type object;
#L089aee.   (@monitorexit v1)
#L089af0.   throw v0;
  catch  [|any|] @[L089ae4..L089ae8] goto L089aec;

   }
    procedure [|int|] [|java:io:ByteArrayOutputStream.size|] ([|java:io:ByteArrayOutputStream|] v1 @type (this)) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L089b10.   v0:= v1.[|java:io:ByteArrayOutputStream.count|] ;
#L089b14.   return v0;

   }
    procedure [|byte|][] [|java:io:ByteArrayOutputStream.toByteArray|] ([|java:io:ByteArrayOutputStream|] v5 @type (this)) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.toByteArray:()[B|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L089b28.   (@monitorenter v5)
#L089b2a.   v1:= v5.[|java:io:ByteArrayOutputStream.count|] ;
#L089b2e.   v0:= new [|byte|][v1];
#L089b32.   v1:= v5.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089b36.   v2:= 0  @length 4;
#L089b38.   v3:= 0  @length 4;
#L089b3a.   v4:= v5.[|java:io:ByteArrayOutputStream.count|] ;
#L089b3e.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v0, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L089b44.   (@monitorexit v5)
#L089b46.   return v0  @type object;
#L089b48.   v1:= Exception  @type object;
#L089b4a.   (@monitorexit v5)
#L089b4c.   throw v1;
  catch  [|any|] @[L089b2a..L089b44] goto L089b48;

   }
    procedure [|java:lang:String|] [|java:io:ByteArrayOutputStream.toString|] ([|java:io:ByteArrayOutputStream|] v4 @type (this)) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L089b6c.   v0:= new [|java:lang:String|];
#L089b70.   v1:= v4.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089b74.   v2:= 0  @length 4;
#L089b76.   v3:= v4.[|java:io:ByteArrayOutputStream.count|] ;
#L089b7a.   call temp:=  [|java:lang:String.<init>|](v0, v1, v2, v3) @signature [|Ljava/lang/String;.<init>:([BII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L089b80.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:io:ByteArrayOutputStream.toString|] ([|java:io:ByteArrayOutputStream|] v4 @type (this), [|int|] v5) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.toString:(I)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L089b94.   call temp:=  [|java:io:ByteArrayOutputStream.size|](v4) @signature [|Ljava/io/ByteArrayOutputStream;.size:()I|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L089b9a.   v2:= temp;
#L089b9c.   v1:= new [|char|][v2];
#L089ba0.   v0:= 0  @length 4;
#L089ba2.   v2:= v1.length;
#L089ba4.   if v0 >= v2 then goto L089bca;
#L089ba8.   v2:= v5 ^& 255;
#L089bac.   v2:= v2 ^< 8;
#L089bb0.   v3:= v4.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089bb4.   v3:= v3[v0]  @byte;
#L089bb8.   v3:= v3 ^& 255;
#L089bbc.   v2:= v2 ^| v3  @type int;
#L089bbe.   v2:= (char)v2  @type i2c;
#L089bc0.   v1[v0]:= v2  @char;
#L089bc4.   v0:= v0 + 1;
#L089bc8.   goto L089ba2;
#L089bca.   v2:= new [|java:lang:String|];
#L089bce.   call temp:=  [|java:lang:String.<init>|](v2, v1) @signature [|Ljava/lang/String;.<init>:([C)V|] @classDescriptor [|java:lang:String|] @type direct;
#L089bd4.   return v2  @type object;

   }
    procedure [|java:lang:String|] [|java:io:ByteArrayOutputStream.toString|] ([|java:io:ByteArrayOutputStream|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.toString:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L089be8.   v0:= new [|java:lang:String|];
#L089bec.   v1:= v4.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089bf0.   v2:= 0  @length 4;
#L089bf2.   v3:= v4.[|java:io:ByteArrayOutputStream.count|] ;
#L089bf6.   call temp:=  [|java:lang:String.<init>|](v0, v1, v2, v3, v5) @signature [|Ljava/lang/String;.<init>:([BIILjava/lang/String;)V|] @classDescriptor [|java:lang:String|] @type direct;
#L089bfc.   return v0  @type object;

   }
    procedure [|void|] [|java:io:ByteArrayOutputStream.write|] ([|java:io:ByteArrayOutputStream|] v3 @type (this), [|int|] v4) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.write:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L089c10.   (@monitorenter v3)
#L089c12.   v0:= v3.[|java:io:ByteArrayOutputStream.count|] ;
#L089c16.   v1:= v3.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089c1a.   v1:= v1.length;
#L089c1c.   if v0 != v1 then goto L089c28;
#L089c20.   v0:= 1  @length 4;
#L089c22.   call temp:=  [|java:io:ByteArrayOutputStream.expand|](v3, v0) @signature [|Ljava/io/ByteArrayOutputStream;.expand:(I)V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type direct;
#L089c28.   v0:= v3.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089c2c.   v1:= v3.[|java:io:ByteArrayOutputStream.count|] ;
#L089c30.   v2:= v1 + 1;
#L089c34.   v3.[|java:io:ByteArrayOutputStream.count|]  := v2;
#L089c38.   v2:= (byte)v4  @type i2b;
#L089c3a.   v0[v1]:= v2  @byte;
#L089c3e.   (@monitorexit v3)
#L089c40.   return @void ;
#L089c42.   v0:= Exception  @type object;
#L089c44.   (@monitorexit v3)
#L089c46.   throw v0;
  catch  [|any|] @[L089c12..L089c3e] goto L089c42;

   }
    procedure [|void|] [|java:io:ByteArrayOutputStream.write|] ([|java:io:ByteArrayOutputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.write:([BII)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L089c64.   (@monitorenter v2)
#L089c66.   v0:= v3.length;
#L089c68.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L089c6e.   if v5 != 0 then goto L089c76;
#L089c72.   (@monitorexit v2)
#L089c74.   return @void ;
#L089c76.   call temp:=  [|java:io:ByteArrayOutputStream.expand|](v2, v5) @signature [|Ljava/io/ByteArrayOutputStream;.expand:(I)V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type direct;
#L089c7c.   v0:= v2.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089c80.   v1:= v2.[|java:io:ByteArrayOutputStream.count|] ;
#L089c84.   call temp:=  [|java:lang:System.arraycopy|](v3, v4, v0, v1, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L089c8a.   v0:= v2.[|java:io:ByteArrayOutputStream.count|] ;
#L089c8e.   v0:= v0 + v5  @type int;
#L089c90.   v2.[|java:io:ByteArrayOutputStream.count|]  := v0;
#L089c94.   goto L089c72;
#L089c96.   v0:= Exception  @type object;
#L089c98.   (@monitorexit v2)
#L089c9a.   throw v0;
  catch  [|any|] @[L089c66..L089c6e] goto L089c96;
  catch  [|any|] @[L089c76..L089c94] goto L089c96;

   }
    procedure [|void|] [|java:io:ByteArrayOutputStream.writeTo|] ([|java:io:ByteArrayOutputStream|] v3 @type (this), [|java:io:OutputStream|] v4 @type (object)) @owner [|java:io:ByteArrayOutputStream|] @signature [|Ljava/io/ByteArrayOutputStream;.writeTo:(Ljava/io/OutputStream;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L089cc0.   (@monitorenter v3)
#L089cc2.   v0:= v3.[|java:io:ByteArrayOutputStream.buf|]   @type object;
#L089cc6.   v1:= 0  @length 4;
#L089cc8.   v2:= v3.[|java:io:ByteArrayOutputStream.count|] ;
#L089ccc.   call temp:=  [|java:io:OutputStream.write|](v4, v0, v1, v2) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L089cd2.   (@monitorexit v3)
#L089cd4.   return @void ;
#L089cd6.   v0:= Exception  @type object;
#L089cd8.   (@monitorexit v3)
#L089cda.   throw v0;
  catch  [|any|] @[L089cc2..L089cd2] goto L089cd6;

   }
record [|java:io:CharArrayReader|]  @type class @AccessFlag PUBLIC  extends [|java:io:Reader|] {
      [|char|][] [|java:io:CharArrayReader.buf|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:CharArrayReader.count|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:CharArrayReader.markedPos|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:CharArrayReader.pos|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:CharArrayReader.<init>|] ([|java:io:CharArrayReader|] v1 @type (this), [|char|][] v2) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.<init>:([C)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L089cf8.   call temp:=  [|java:io:Reader.<init>|](v1) @signature [|Ljava/io/Reader;.<init>:()V|] @classDescriptor [|java:io:Reader|] @type direct;
#L089cfe.   v0:= -1  @length 4;
#L089d00.   v1.[|java:io:CharArrayReader.markedPos|]  := v0;
#L089d04.   v1.[|java:io:CharArrayReader.buf|]  := v2 @type object;
#L089d08.   v0:= v2.length;
#L089d0a.   v1.[|java:io:CharArrayReader.count|]  := v0;
#L089d0e.   return @void ;

   }
    procedure [|void|] [|java:io:CharArrayReader.<init>|] ([|java:io:CharArrayReader|] v2 @type (this), [|char|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.<init>:([CII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L089d20.   call temp:=  [|java:io:Reader.<init>|](v2) @signature [|Ljava/io/Reader;.<init>:()V|] @classDescriptor [|java:io:Reader|] @type direct;
#L089d26.   v1:= -1  @length 4;
#L089d28.   v2.[|java:io:CharArrayReader.markedPos|]  := v1;
#L089d2c.   if v4 < 0 then goto L089d42;
#L089d30.   v1:= v3.length;
#L089d32.   if v4 > v1 then goto L089d42;
#L089d36.   if v5 < 0 then goto L089d42;
#L089d3a.   v1:= v4 + v5  @type int;
#L089d3e.   if v1 >= 0 then goto L089d4e;
#L089d42.   v1:= new [|java:lang:IllegalArgumentException|];
#L089d46.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L089d4c.   throw v1;
#L089d4e.   v2.[|java:io:CharArrayReader.buf|]  := v3 @type object;
#L089d52.   v2.[|java:io:CharArrayReader.pos|]  := v4;
#L089d56.   v2.[|java:io:CharArrayReader.markedPos|]  := v4;
#L089d5a.   v0:= v3.length;
#L089d5c.   v1:= v4 + v5  @type int;
#L089d60.   if v1 >= v0 then goto L089d6a;
#L089d64.   v2.[|java:io:CharArrayReader.count|]  := v5;
#L089d68.   return @void ;
#L089d6a.   v5:= v0;
#L089d6c.   goto L089d64;

   }
    procedure [|void|] [|java:io:CharArrayReader.checkNotClosed|] ([|java:io:CharArrayReader|] v2 @type (this)) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.checkNotClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L089d80.   call temp:=  [|java:io:CharArrayReader.isClosed|](v2) @signature [|Ljava/io/CharArrayReader;.isClosed:()Z|] @classDescriptor [|java:io:CharArrayReader|] @type direct;
#L089d86.   v0:= temp;
#L089d88.   if v0 == 0 then goto L089d9c;
#L089d8c.   v0:= new [|java:io:IOException|];
#L089d90.   v1:= "CharArrayReader is closed" @type (object, string);
#L089d94.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L089d9a.   throw v0;
#L089d9c.   return @void ;

   }
    procedure [|boolean|] [|java:io:CharArrayReader.isClosed|] ([|java:io:CharArrayReader|] v1 @type (this)) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.isClosed:()Z|] @Access PRIVATE {
      local temp ;
        v0;
      
#L089db0.   v0:= v1.[|java:io:CharArrayReader.buf|]   @type object;
#L089db4.   if v0 != 0 then goto L089dbc;
#L089db8.   v0:= 1  @length 4;
#L089dba.   return v0;
#L089dbc.   v0:= 0  @length 4;
#L089dbe.   goto L089dba;

   }
    procedure [|boolean|] [|java:io:CharArrayReader.isOpen|] ([|java:io:CharArrayReader|] v1 @type (this)) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.isOpen:()Z|] @Access PRIVATE {
      local temp ;
        v0;
      
#L089dd0.   v0:= v1.[|java:io:CharArrayReader.buf|]   @type object;
#L089dd4.   if v0 == 0 then goto L089ddc;
#L089dd8.   v0:= 1  @length 4;
#L089dda.   return v0;
#L089ddc.   v0:= 0  @length 4;
#L089dde.   goto L089dda;

   }
    procedure [|void|] [|java:io:CharArrayReader.close|] ([|java:io:CharArrayReader|] v2 @type (this)) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L089df0.   v1:= v2.[|java:io:CharArrayReader.lock|]   @type object;
#L089df4.   (@monitorenter v1)
#L089df6.   call temp:=  [|java:io:CharArrayReader.isOpen|](v2) @signature [|Ljava/io/CharArrayReader;.isOpen:()Z|] @classDescriptor [|java:io:CharArrayReader|] @type direct;
#L089dfc.   v0:= temp;
#L089dfe.   if v0 == 0 then goto L089e08;
#L089e02.   v0:= 0  @length 4;
#L089e04.   v2.[|java:io:CharArrayReader.buf|]  := v0 @type object;
#L089e08.   (@monitorexit v1)
#L089e0a.   return @void ;
#L089e0c.   v0:= Exception  @type object;
#L089e0e.   (@monitorexit v1)
#L089e10.   throw v0;
  catch  [|any|] @[L089df6..L089e10] goto L089e0c;

   }
    procedure [|void|] [|java:io:CharArrayReader.mark|] ([|java:io:CharArrayReader|] v2 @type (this), [|int|] v3) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.mark:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L089e30.   v1:= v2.[|java:io:CharArrayReader.lock|]   @type object;
#L089e34.   (@monitorenter v1)
#L089e36.   call temp:=  [|java:io:CharArrayReader.checkNotClosed|](v2) @signature [|Ljava/io/CharArrayReader;.checkNotClosed:()V|] @classDescriptor [|java:io:CharArrayReader|] @type direct;
#L089e3c.   v0:= v2.[|java:io:CharArrayReader.pos|] ;
#L089e40.   v2.[|java:io:CharArrayReader.markedPos|]  := v0;
#L089e44.   (@monitorexit v1)
#L089e46.   return @void ;
#L089e48.   v0:= Exception  @type object;
#L089e4a.   (@monitorexit v1)
#L089e4c.   throw v0;
  catch  [|any|] @[L089e36..L089e4c] goto L089e48;

   }
    procedure [|boolean|] [|java:io:CharArrayReader.markSupported|] ([|java:io:CharArrayReader|] v1 @type (this)) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L089e6c.   v0:= 1  @length 4;
#L089e6e.   return v0;

   }
    procedure [|int|] [|java:io:CharArrayReader.read|] ([|java:io:CharArrayReader|] v4 @type (this)) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L089e80.   v1:= v4.[|java:io:CharArrayReader.lock|]   @type object;
#L089e84.   (@monitorenter v1)
#L089e86.   call temp:=  [|java:io:CharArrayReader.checkNotClosed|](v4) @signature [|Ljava/io/CharArrayReader;.checkNotClosed:()V|] @classDescriptor [|java:io:CharArrayReader|] @type direct;
#L089e8c.   v0:= v4.[|java:io:CharArrayReader.pos|] ;
#L089e90.   v2:= v4.[|java:io:CharArrayReader.count|] ;
#L089e94.   if v0 != v2 then goto L089e9e;
#L089e98.   v0:= -1  @length 4;
#L089e9a.   (@monitorexit v1)
#L089e9c.   return v0;
#L089e9e.   v0:= v4.[|java:io:CharArrayReader.buf|]   @type object;
#L089ea2.   v2:= v4.[|java:io:CharArrayReader.pos|] ;
#L089ea6.   v3:= v2 + 1;
#L089eaa.   v4.[|java:io:CharArrayReader.pos|]  := v3;
#L089eae.   v0:= v0[v2]  @char;
#L089eb2.   (@monitorexit v1)
#L089eb4.   goto L089e9c;
#L089eb6.   v0:= Exception  @type object;
#L089eb8.   (@monitorexit v1)
#L089eba.   throw v0;
  catch  [|any|] @[L089e86..L089eba] goto L089eb6;

   }
    procedure [|int|] [|java:io:CharArrayReader.read|] ([|java:io:CharArrayReader|] v4 @type (this), [|char|][] v5, [|int|] v6, [|int|] v7) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.read:([CII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L089ed8.   v1:= v5.length;
#L089eda.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v6, v7) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L089ee0.   v2:= v4.[|java:io:CharArrayReader.lock|]   @type object;
#L089ee4.   (@monitorenter v2)
#L089ee6.   call temp:=  [|java:io:CharArrayReader.checkNotClosed|](v4) @signature [|Ljava/io/CharArrayReader;.checkNotClosed:()V|] @classDescriptor [|java:io:CharArrayReader|] @type direct;
#L089eec.   v1:= v4.[|java:io:CharArrayReader.pos|] ;
#L089ef0.   v3:= v4.[|java:io:CharArrayReader.count|] ;
#L089ef4.   if v1 >= v3 then goto L089f32;
#L089ef8.   v1:= v4.[|java:io:CharArrayReader.pos|] ;
#L089efc.   v1:= v1 + v7  @type int;
#L089efe.   v3:= v4.[|java:io:CharArrayReader.count|] ;
#L089f02.   if v1 <= v3 then goto L089f2e;
#L089f06.   v1:= v4.[|java:io:CharArrayReader.count|] ;
#L089f0a.   v3:= v4.[|java:io:CharArrayReader.pos|] ;
#L089f0e.   v0:= v1 - v3  @type int;
#L089f12.   v1:= v4.[|java:io:CharArrayReader.buf|]   @type object;
#L089f16.   v3:= v4.[|java:io:CharArrayReader.pos|] ;
#L089f1a.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v5, v6, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L089f20.   v1:= v4.[|java:io:CharArrayReader.pos|] ;
#L089f24.   v1:= v1 + v0  @type int;
#L089f26.   v4.[|java:io:CharArrayReader.pos|]  := v1;
#L089f2a.   (@monitorexit v2)
#L089f2c.   return v0;
#L089f2e.   v0:= v7;
#L089f30.   goto L089f12;
#L089f32.   v0:= -1  @length 4;
#L089f34.   (@monitorexit v2)
#L089f36.   goto L089f2c;
#L089f38.   v1:= Exception  @type object;
#L089f3a.   (@monitorexit v2)
#L089f3c.   throw v1;
  catch  [|any|] @[L089ee6..L089f3c] goto L089f38;

   }
    procedure [|boolean|] [|java:io:CharArrayReader.ready|] ([|java:io:CharArrayReader|] v3 @type (this)) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.ready:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L089f5c.   v1:= v3.[|java:io:CharArrayReader.lock|]   @type object;
#L089f60.   (@monitorenter v1)
#L089f62.   call temp:=  [|java:io:CharArrayReader.checkNotClosed|](v3) @signature [|Ljava/io/CharArrayReader;.checkNotClosed:()V|] @classDescriptor [|java:io:CharArrayReader|] @type direct;
#L089f68.   v0:= v3.[|java:io:CharArrayReader.pos|] ;
#L089f6c.   v2:= v3.[|java:io:CharArrayReader.count|] ;
#L089f70.   if v0 == v2 then goto L089f7a;
#L089f74.   v0:= 1  @length 4;
#L089f76.   (@monitorexit v1)
#L089f78.   return v0;
#L089f7a.   v0:= 0  @length 4;
#L089f7c.   goto L089f76;
#L089f7e.   v0:= Exception  @type object;
#L089f80.   (@monitorexit v1)
#L089f82.   throw v0;
  catch  [|any|] @[L089f62..L089f82] goto L089f7e;

   }
    procedure [|void|] [|java:io:CharArrayReader.reset|] ([|java:io:CharArrayReader|] v3 @type (this)) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L089fa0.   v1:= v3.[|java:io:CharArrayReader.lock|]   @type object;
#L089fa4.   (@monitorenter v1)
#L089fa6.   call temp:=  [|java:io:CharArrayReader.checkNotClosed|](v3) @signature [|Ljava/io/CharArrayReader;.checkNotClosed:()V|] @classDescriptor [|java:io:CharArrayReader|] @type direct;
#L089fac.   v0:= v3.[|java:io:CharArrayReader.markedPos|] ;
#L089fb0.   v2:= -1  @length 4;
#L089fb2.   if v0 == v2 then goto L089fc2;
#L089fb6.   v0:= v3.[|java:io:CharArrayReader.markedPos|] ;
#L089fba.   v3.[|java:io:CharArrayReader.pos|]  := v0;
#L089fbe.   (@monitorexit v1)
#L089fc0.   return @void ;
#L089fc2.   v0:= 0  @length 4;
#L089fc4.   goto L089fba;
#L089fc6.   v0:= Exception  @type object;
#L089fc8.   (@monitorexit v1)
#L089fca.   throw v0;
  catch  [|any|] @[L089fa6..L089fca] goto L089fc6;

   }
    procedure [|long|] [|java:io:CharArrayReader.skip|] ([|java:io:CharArrayReader|] v6 @type (this), [|long|] v7) @owner [|java:io:CharArrayReader|] @signature [|Ljava/io/CharArrayReader;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L089fe8.   v0:= 0  @length wide16;
#L089fec.   v3:= v6.[|java:io:CharArrayReader.lock|]   @type object;
#L089ff0.   (@monitorenter v3)
#L089ff2.   call temp:=  [|java:io:CharArrayReader.checkNotClosed|](v6) @signature [|Ljava/io/CharArrayReader;.checkNotClosed:()V|] @classDescriptor [|java:io:CharArrayReader|] @type direct;
#L089ff8.   v2:= cmp(v7,v0);
#L089ffc.   if v2 > 0 then goto L08a004;
#L08a000.   (@monitorexit v3)
#L08a002.   return v0  @type wide;
#L08a004.   v0:= 0  @length wide16;
#L08a008.   v2:= v6.[|java:io:CharArrayReader.count|] ;
#L08a00c.   v4:= v6.[|java:io:CharArrayReader.pos|] ;
#L08a010.   v2:= v2 - v4  @type int;
#L08a012.   v4:= (long)v2  @type i2l;
#L08a014.   v2:= cmp(v7,v4);
#L08a018.   if v2 >= 0 then goto L08a034;
#L08a01c.   v2:= v6.[|java:io:CharArrayReader.pos|] ;
#L08a020.   v4:= (int)v7  @type l2i;
#L08a022.   v2:= v2 + v4  @type int;
#L08a024.   v6.[|java:io:CharArrayReader.pos|]  := v2;
#L08a028.   v0:= v7  @type wide;
#L08a02a.   (@monitorexit v3)
#L08a02c.   goto L08a002;
#L08a02e.   v2:= Exception  @type object;
#L08a030.   (@monitorexit v3)
#L08a032.   throw v2;
#L08a034.   v2:= v6.[|java:io:CharArrayReader.count|] ;
#L08a038.   v4:= v6.[|java:io:CharArrayReader.pos|] ;
#L08a03c.   v2:= v2 - v4  @type int;
#L08a03e.   v0:= (long)v2  @type i2l;
#L08a040.   v2:= v6.[|java:io:CharArrayReader.count|] ;
#L08a044.   v6.[|java:io:CharArrayReader.pos|]  := v2;
#L08a048.   goto L08a02a;
  catch  [|any|] @[L089ff2..L08a032] goto L08a02e;
  catch  [|any|] @[L08a034..L08a048] goto L08a02e;

   }
record [|java:io:CharArrayWriter|]  @type class @AccessFlag PUBLIC  extends [|java:io:Writer|] {
      [|char|][] [|java:io:CharArrayWriter.buf|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:CharArrayWriter.count|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:CharArrayWriter.<init>|] ([|java:io:CharArrayWriter|] v1 @type (this)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08a070.   call temp:=  [|java:io:Writer.<init>|](v1) @signature [|Ljava/io/Writer;.<init>:()V|] @classDescriptor [|java:io:Writer|] @type direct;
#L08a076.   v0:= 32  @length 16;
#L08a07a.   v0:= new [|char|][v0];
#L08a07e.   v1.[|java:io:CharArrayWriter.buf|]  := v0 @type object;
#L08a082.   v0:= v1.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a086.   v1.[|java:io:CharArrayWriter.lock|]  := v0 @type object;
#L08a08a.   return @void ;

   }
    procedure [|void|] [|java:io:CharArrayWriter.<init>|] ([|java:io:CharArrayWriter|] v2 @type (this), [|int|] v3) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08a09c.   call temp:=  [|java:io:Writer.<init>|](v2) @signature [|Ljava/io/Writer;.<init>:()V|] @classDescriptor [|java:io:Writer|] @type direct;
#L08a0a2.   if v3 >= 0 then goto L08a0b6;
#L08a0a6.   v0:= new [|java:lang:IllegalArgumentException|];
#L08a0aa.   v1:= "size < 0" @type (object, string);
#L08a0ae.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08a0b4.   throw v0;
#L08a0b6.   v0:= new [|char|][v3];
#L08a0ba.   v2.[|java:io:CharArrayWriter.buf|]  := v0 @type object;
#L08a0be.   v0:= v2.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a0c2.   v2.[|java:io:CharArrayWriter.lock|]  := v0 @type object;
#L08a0c6.   return @void ;

   }
    procedure [|void|] [|java:io:CharArrayWriter.expand|] ([|java:io:CharArrayWriter|] v5 @type (this), [|int|] v6) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.expand:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08a0d8.   v4:= 0  @length 4;
#L08a0da.   v2:= v5.[|java:io:CharArrayWriter.count|] ;
#L08a0de.   v2:= v2 + v6  @type int;
#L08a0e0.   v3:= v5.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a0e4.   v3:= v3.length;
#L08a0e6.   if v2 > v3 then goto L08a0ec;
#L08a0ea.   return @void ;
#L08a0ec.   v2:= v5.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a0f0.   v2:= v2.length;
#L08a0f2.   v2:= v2 * 2;
#L08a0f6.   v3:= v5.[|java:io:CharArrayWriter.count|] ;
#L08a0fa.   v3:= v3 + v6  @type int;
#L08a0fc.   call temp:=  [|java:lang:Math.max|](v2, v3) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L08a102.   v0:= temp;
#L08a104.   v1:= new [|char|][v0];
#L08a108.   v2:= v5.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a10c.   v3:= v5.[|java:io:CharArrayWriter.count|] ;
#L08a110.   call temp:=  [|java:lang:System.arraycopy|](v2, v4, v1, v4, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L08a116.   v5.[|java:io:CharArrayWriter.buf|]  := v1 @type object;
#L08a11a.   goto L08a0ea;

   }
    procedure [|java:io:CharArrayWriter|] [|java:io:CharArrayWriter.append|] ([|java:io:CharArrayWriter|] v0 @type (this), [|char|] v1) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.append:(C)Ljava/io/CharArrayWriter;|] @Access PUBLIC {
      local temp ;
      
#L08a12c.   call temp:=  [|java:io:CharArrayWriter.write|](v0, v1) @signature [|Ljava/io/CharArrayWriter;.write:(I)V|] @classDescriptor [|java:io:CharArrayWriter|] @type virtual;
#L08a132.   return v0  @type object;

   }
    procedure [|java:io:CharArrayWriter|] [|java:io:CharArrayWriter.append|] ([|java:io:CharArrayWriter|] v2 @type (this), [|java:lang:CharSequence|] v3 @type (object)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/CharArrayWriter;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08a144.   if v3 != 0 then goto L08a14c;
#L08a148.   v3:= "null" @type (object, string);
#L08a14c.   v0:= 0  @length 4;
#L08a14e.   call temp:=  [|java:lang:CharSequence.length|](v3) @signature [|Ljava/lang/CharSequence;.length:()I|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L08a154.   v1:= temp;
#L08a156.   call temp:=  [|java:io:CharArrayWriter.append|](v2, v3, v0, v1) @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/CharArrayWriter;|] @classDescriptor [|java:io:CharArrayWriter|] @type virtual;
#L08a15c.   return v2  @type object;

   }
    procedure [|java:io:CharArrayWriter|] [|java:io:CharArrayWriter.append|] ([|java:io:CharArrayWriter|] v3 @type (this), [|java:lang:CharSequence|] v4 @type (object), [|int|] v5, [|int|] v6) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/CharArrayWriter;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a170.   if v4 != 0 then goto L08a178;
#L08a174.   v4:= "null" @type (object, string);
#L08a178.   call temp:=  [|java:lang:CharSequence.subSequence|](v4, v5, v6) @signature [|Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L08a17e.   v1:= temp  @type object;
#L08a180.   call temp:=  [|java:lang:Object.toString|](v1) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L08a186.   v0:= temp  @type object;
#L08a188.   v1:= 0  @length 4;
#L08a18a.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08a190.   v2:= temp;
#L08a192.   call temp:=  [|java:io:CharArrayWriter.write|](v3, v0, v1, v2) @signature [|Ljava/io/CharArrayWriter;.write:(Ljava/lang/String;II)V|] @classDescriptor [|java:io:CharArrayWriter|] @type virtual;
#L08a198.   return v3  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:CharArrayWriter.append|] ([|java:io:CharArrayWriter|] v1 @type (this), [|char|] v2) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.append:(C)Ljava/io/Writer;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a1ac.   call temp:=  [|java:io:CharArrayWriter.append|](v1, v2) @signature [|Ljava/io/CharArrayWriter;.append:(C)Ljava/io/CharArrayWriter;|] @classDescriptor [|java:io:CharArrayWriter|] @type virtual;
#L08a1b2.   v0:= temp  @type object;
#L08a1b4.   return v0  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:CharArrayWriter.append|] ([|java:io:CharArrayWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a1c8.   call temp:=  [|java:io:CharArrayWriter.append|](v1, v2) @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/CharArrayWriter;|] @classDescriptor [|java:io:CharArrayWriter|] @type virtual;
#L08a1ce.   v0:= temp  @type object;
#L08a1d0.   return v0  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:CharArrayWriter.append|] ([|java:io:CharArrayWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a1e4.   call temp:=  [|java:io:CharArrayWriter.append|](v1, v2, v3, v4) @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/CharArrayWriter;|] @classDescriptor [|java:io:CharArrayWriter|] @type virtual;
#L08a1ea.   v0:= temp  @type object;
#L08a1ec.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:CharArrayWriter.append|] ([|java:io:CharArrayWriter|] v1 @type (this), [|char|] v2) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.append:(C)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a200.   call temp:=  [|java:io:CharArrayWriter.append|](v1, v2) @signature [|Ljava/io/CharArrayWriter;.append:(C)Ljava/io/CharArrayWriter;|] @classDescriptor [|java:io:CharArrayWriter|] @type virtual;
#L08a206.   v0:= temp  @type object;
#L08a208.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:CharArrayWriter.append|] ([|java:io:CharArrayWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a21c.   call temp:=  [|java:io:CharArrayWriter.append|](v1, v2) @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/CharArrayWriter;|] @classDescriptor [|java:io:CharArrayWriter|] @type virtual;
#L08a222.   v0:= temp  @type object;
#L08a224.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:CharArrayWriter.append|] ([|java:io:CharArrayWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a238.   call temp:=  [|java:io:CharArrayWriter.append|](v1, v2, v3, v4) @signature [|Ljava/io/CharArrayWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/CharArrayWriter;|] @classDescriptor [|java:io:CharArrayWriter|] @type virtual;
#L08a23e.   v0:= temp  @type object;
#L08a240.   return v0  @type object;

   }
    procedure [|void|] [|java:io:CharArrayWriter.close|] ([|java:io:CharArrayWriter|] v0 @type (this)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.close:()V|] @Access PUBLIC {
      local temp ;
      
#L08a254.   return @void ;

   }
    procedure [|void|] [|java:io:CharArrayWriter.flush|] ([|java:io:CharArrayWriter|] v0 @type (this)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.flush:()V|] @Access PUBLIC {
      local temp ;
      
#L08a268.   return @void ;

   }
    procedure [|void|] [|java:io:CharArrayWriter.reset|] ([|java:io:CharArrayWriter|] v2 @type (this)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08a27c.   v1:= v2.[|java:io:CharArrayWriter.lock|]   @type object;
#L08a280.   (@monitorenter v1)
#L08a282.   v0:= 0  @length 4;
#L08a284.   v2.[|java:io:CharArrayWriter.count|]  := v0;
#L08a288.   (@monitorexit v1)
#L08a28a.   return @void ;
#L08a28c.   v0:= Exception  @type object;
#L08a28e.   (@monitorexit v1)
#L08a290.   throw v0;
  catch  [|any|] @[L08a284..L08a290] goto L08a28c;

   }
    procedure [|int|] [|java:io:CharArrayWriter.size|] ([|java:io:CharArrayWriter|] v2 @type (this)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08a2b0.   v1:= v2.[|java:io:CharArrayWriter.lock|]   @type object;
#L08a2b4.   (@monitorenter v1)
#L08a2b6.   v0:= v2.[|java:io:CharArrayWriter.count|] ;
#L08a2ba.   (@monitorexit v1)
#L08a2bc.   return v0;
#L08a2be.   v0:= Exception  @type object;
#L08a2c0.   (@monitorexit v1)
#L08a2c2.   throw v0;
  catch  [|any|] @[L08a2b6..L08a2c2] goto L08a2be;

   }
    procedure [|char|][] [|java:io:CharArrayWriter.toCharArray|] ([|java:io:CharArrayWriter|] v6 @type (this)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.toCharArray:()[C|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08a2e0.   v2:= v6.[|java:io:CharArrayWriter.lock|]   @type object;
#L08a2e4.   (@monitorenter v2)
#L08a2e6.   v1:= v6.[|java:io:CharArrayWriter.count|] ;
#L08a2ea.   v0:= new [|char|][v1];
#L08a2ee.   v1:= v6.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a2f2.   v3:= 0  @length 4;
#L08a2f4.   v4:= 0  @length 4;
#L08a2f6.   v5:= v6.[|java:io:CharArrayWriter.count|] ;
#L08a2fa.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v4, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L08a300.   (@monitorexit v2)
#L08a302.   return v0  @type object;
#L08a304.   v1:= Exception  @type object;
#L08a306.   (@monitorexit v2)
#L08a308.   throw v1;
  catch  [|any|] @[L08a2e6..L08a308] goto L08a304;

   }
    procedure [|java:lang:String|] [|java:io:CharArrayWriter.toString|] ([|java:io:CharArrayWriter|] v5 @type (this)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08a328.   v1:= v5.[|java:io:CharArrayWriter.lock|]   @type object;
#L08a32c.   (@monitorenter v1)
#L08a32e.   v0:= new [|java:lang:String|];
#L08a332.   v2:= v5.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a336.   v3:= 0  @length 4;
#L08a338.   v4:= v5.[|java:io:CharArrayWriter.count|] ;
#L08a33c.   call temp:=  [|java:lang:String.<init>|](v0, v2, v3, v4) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L08a342.   (@monitorexit v1)
#L08a344.   return v0  @type object;
#L08a346.   v0:= Exception  @type object;
#L08a348.   (@monitorexit v1)
#L08a34a.   throw v0;
  catch  [|any|] @[L08a32e..L08a34a] goto L08a346;

   }
    procedure [|void|] [|java:io:CharArrayWriter.write|] ([|java:io:CharArrayWriter|] v4 @type (this), [|int|] v5) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08a368.   v1:= v4.[|java:io:CharArrayWriter.lock|]   @type object;
#L08a36c.   (@monitorenter v1)
#L08a36e.   v0:= 1  @length 4;
#L08a370.   call temp:=  [|java:io:CharArrayWriter.expand|](v4, v0) @signature [|Ljava/io/CharArrayWriter;.expand:(I)V|] @classDescriptor [|java:io:CharArrayWriter|] @type direct;
#L08a376.   v0:= v4.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a37a.   v2:= v4.[|java:io:CharArrayWriter.count|] ;
#L08a37e.   v3:= v2 + 1;
#L08a382.   v4.[|java:io:CharArrayWriter.count|]  := v3;
#L08a386.   v3:= (char)v5  @type i2c;
#L08a388.   v0[v2]:= v3  @char;
#L08a38c.   (@monitorexit v1)
#L08a38e.   return @void ;
#L08a390.   v0:= Exception  @type object;
#L08a392.   (@monitorexit v1)
#L08a394.   throw v0;
  catch  [|any|] @[L08a370..L08a394] goto L08a390;

   }
    procedure [|void|] [|java:io:CharArrayWriter.write|] ([|java:io:CharArrayWriter|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|int|] v6, [|int|] v7) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.write:(Ljava/lang/String;II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08a3b4.   if v5 != 0 then goto L08a3c8;
#L08a3b8.   v0:= new [|java:lang:NullPointerException|];
#L08a3bc.   v1:= "str == null" @type (object, string);
#L08a3c0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08a3c6.   throw v0;
#L08a3c8.   v0:= v6 ^| v7  @type int;
#L08a3cc.   if v0 < 0 then goto L08a3de;
#L08a3d0.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08a3d6.   v0:= temp;
#L08a3d8.   v0:= v0 - v7  @type int;
#L08a3da.   if v6 <= v0 then goto L08a3ea;
#L08a3de.   v0:= new [|java:lang:StringIndexOutOfBoundsException|];
#L08a3e2.   call temp:=  [|java:lang:StringIndexOutOfBoundsException.<init>|](v0, v5, v6, v7) @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:lang:StringIndexOutOfBoundsException|] @type direct;
#L08a3e8.   throw v0;
#L08a3ea.   v1:= v4.[|java:io:CharArrayWriter.lock|]   @type object;
#L08a3ee.   (@monitorenter v1)
#L08a3f0.   call temp:=  [|java:io:CharArrayWriter.expand|](v4, v7) @signature [|Ljava/io/CharArrayWriter;.expand:(I)V|] @classDescriptor [|java:io:CharArrayWriter|] @type direct;
#L08a3f6.   v0:= v6 + v7  @type int;
#L08a3fa.   v2:= v4.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a3fe.   v3:= v4.[|java:io:CharArrayWriter.count|] ;
#L08a402.   call temp:=  [|java:lang:String.getChars|](v5, v6, v0, v2, v3) @signature [|Ljava/lang/String;.getChars:(II[CI)V|] @classDescriptor [|java:lang:String|] @type virtual;
#L08a408.   v0:= v4.[|java:io:CharArrayWriter.count|] ;
#L08a40c.   v0:= v0 + v7  @type int;
#L08a40e.   v4.[|java:io:CharArrayWriter.count|]  := v0;
#L08a412.   (@monitorexit v1)
#L08a414.   return @void ;
#L08a416.   v0:= Exception  @type object;
#L08a418.   (@monitorexit v1)
#L08a41a.   throw v0;
  catch  [|any|] @[L08a3f0..L08a41a] goto L08a416;

   }
    procedure [|void|] [|java:io:CharArrayWriter.write|] ([|java:io:CharArrayWriter|] v3 @type (this), [|char|][] v4, [|int|] v5, [|int|] v6) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.write:([CII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a438.   v0:= v4.length;
#L08a43a.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v5, v6) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L08a440.   v1:= v3.[|java:io:CharArrayWriter.lock|]   @type object;
#L08a444.   (@monitorenter v1)
#L08a446.   call temp:=  [|java:io:CharArrayWriter.expand|](v3, v6) @signature [|Ljava/io/CharArrayWriter;.expand:(I)V|] @classDescriptor [|java:io:CharArrayWriter|] @type direct;
#L08a44c.   v0:= v3.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a450.   v2:= v3.[|java:io:CharArrayWriter.count|] ;
#L08a454.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v2, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L08a45a.   v0:= v3.[|java:io:CharArrayWriter.count|] ;
#L08a45e.   v0:= v0 + v6  @type int;
#L08a460.   v3.[|java:io:CharArrayWriter.count|]  := v0;
#L08a464.   (@monitorexit v1)
#L08a466.   return @void ;
#L08a468.   v0:= Exception  @type object;
#L08a46a.   (@monitorexit v1)
#L08a46c.   throw v0;
  catch  [|any|] @[L08a446..L08a46c] goto L08a468;

   }
    procedure [|void|] [|java:io:CharArrayWriter.writeTo|] ([|java:io:CharArrayWriter|] v4 @type (this), [|java:io:Writer|] v5 @type (object)) @owner [|java:io:CharArrayWriter|] @signature [|Ljava/io/CharArrayWriter;.writeTo:(Ljava/io/Writer;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08a48c.   v1:= v4.[|java:io:CharArrayWriter.lock|]   @type object;
#L08a490.   (@monitorenter v1)
#L08a492.   v0:= v4.[|java:io:CharArrayWriter.buf|]   @type object;
#L08a496.   v2:= 0  @length 4;
#L08a498.   v3:= v4.[|java:io:CharArrayWriter.count|] ;
#L08a49c.   call temp:=  [|java:io:Writer.write|](v5, v0, v2, v3) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08a4a2.   (@monitorexit v1)
#L08a4a4.   return @void ;
#L08a4a6.   v0:= Exception  @type object;
#L08a4a8.   (@monitorexit v1)
#L08a4aa.   throw v0;
  catch  [|any|] @[L08a492..L08a4aa] goto L08a4a6;

   }
record [|java:io:CharConversionException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:io:CharConversionException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:CharConversionException.<init>|] ([|java:io:CharConversionException|] v0 @type (this)) @owner [|java:io:CharConversionException|] @signature [|Ljava/io/CharConversionException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08a4c8.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08a4ce.   return @void ;

   }
    procedure [|void|] [|java:io:CharConversionException.<init>|] ([|java:io:CharConversionException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:CharConversionException|] @signature [|Ljava/io/CharConversionException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08a4e0.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08a4e6.   return @void ;

   }
record [|java:io:Console$ConsoleReader|]  @type class @AccessFlag   extends [|java:io:BufferedReader|] {
   }
    procedure [|void|] [|java:io:Console$ConsoleReader.<init>|] ([|java:io:Console$ConsoleReader|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|java:io:Console$ConsoleReader|] @signature [|Ljava/io/Console$ConsoleReader;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08a4f8.   v0:= new [|java:io:InputStreamReader|];
#L08a4fc.   v1:= "file.encoding" @type (object, string);
#L08a500.   call temp:=  [|java:lang:System.getProperty|](v1) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L08a506.   v1:= temp  @type object;
#L08a508.   call temp:=  [|java:io:InputStreamReader.<init>|](v0, v3, v1) @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L08a50e.   v1:= 256  @length 16;
#L08a512.   call temp:=  [|java:io:BufferedReader.<init>|](v2, v0, v1) @signature [|Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;I)V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L08a518.   call temp:=  [|java:io:Console.access$000|]() @signature [|Ljava/io/Console;.access$000:()Ljava/lang/Object;|] @classDescriptor [|java:io:Console|] @type static;
#L08a51e.   v0:= temp  @type object;
#L08a520.   v2.[|java:io:Console$ConsoleReader.lock|]  := v0 @type object;
#L08a524.   return @void ;

   }
    procedure [|void|] [|java:io:Console$ConsoleReader.close|] ([|java:io:Console$ConsoleReader|] v0 @type (this)) @owner [|java:io:Console$ConsoleReader|] @signature [|Ljava/io/Console$ConsoleReader;.close:()V|] @Access PUBLIC {
      local temp ;
      
#L08a538.   return @void ;

   }
record [|java:io:PrintWriter|]  @type class @AccessFlag PUBLIC  extends [|java:io:Writer|] {
      [|boolean|] [|java:io:PrintWriter.autoFlush|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:PrintWriter.ioError|]    @AccessFlag PRIVATE;
      [|java:io:Writer|] [|java:io:PrintWriter.out|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:PrintWriter.<init>|] ([|java:io:PrintWriter|] v3 @type (this), [|java:io:File|] v4 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/File;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a54c.   v0:= new [|java:io:OutputStreamWriter|];
#L08a550.   v1:= new [|java:io:BufferedOutputStream|];
#L08a554.   v2:= new [|java:io:FileOutputStream|];
#L08a558.   call temp:=  [|java:io:FileOutputStream.<init>|](v2, v4) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08a55e.   call temp:=  [|java:io:BufferedOutputStream.<init>|](v1, v2) @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L08a564.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v0, v1) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08a56a.   v1:= 0  @length 4;
#L08a56c.   call temp:=  [|java:io:PrintWriter.<init>|](v3, v0, v1) @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;Z)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08a572.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.<init>|] ([|java:io:PrintWriter|] v3 @type (this), [|java:io:File|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a584.   v0:= new [|java:io:OutputStreamWriter|];
#L08a588.   v1:= new [|java:io:BufferedOutputStream|];
#L08a58c.   v2:= new [|java:io:FileOutputStream|];
#L08a590.   call temp:=  [|java:io:FileOutputStream.<init>|](v2, v4) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08a596.   call temp:=  [|java:io:BufferedOutputStream.<init>|](v1, v2) @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L08a59c.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v0, v1, v5) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08a5a2.   v1:= 0  @length 4;
#L08a5a4.   call temp:=  [|java:io:PrintWriter.<init>|](v3, v0, v1) @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;Z)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08a5aa.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.<init>|] ([|java:io:PrintWriter|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08a5bc.   v0:= new [|java:io:OutputStreamWriter|];
#L08a5c0.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v0, v3) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08a5c6.   v1:= 0  @length 4;
#L08a5c8.   call temp:=  [|java:io:PrintWriter.<init>|](v2, v0, v1) @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;Z)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08a5ce.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.<init>|] ([|java:io:PrintWriter|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object), [|boolean|] v3) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/OutputStream;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08a5e0.   v0:= new [|java:io:OutputStreamWriter|];
#L08a5e4.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v0, v2) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08a5ea.   call temp:=  [|java:io:PrintWriter.<init>|](v1, v0, v3) @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;Z)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08a5f0.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.<init>|] ([|java:io:PrintWriter|] v1 @type (this), [|java:io:Writer|] v2 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08a604.   v0:= 0  @length 4;
#L08a606.   call temp:=  [|java:io:PrintWriter.<init>|](v1, v2, v0) @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;Z)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08a60c.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.<init>|] ([|java:io:PrintWriter|] v0 @type (this), [|java:io:Writer|] v1 @type (object), [|boolean|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08a620.   call temp:=  [|java:io:Writer.<init>|](v0, v1) @signature [|Ljava/io/Writer;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Writer|] @type direct;
#L08a626.   v0.[|java:io:PrintWriter.autoFlush|]  := v2 @boolean;
#L08a62a.   v0.[|java:io:PrintWriter.out|]  := v1 @type object;
#L08a62e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.<init>|] ([|java:io:PrintWriter|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a640.   v0:= new [|java:io:OutputStreamWriter|];
#L08a644.   v1:= new [|java:io:BufferedOutputStream|];
#L08a648.   v2:= new [|java:io:FileOutputStream|];
#L08a64c.   call temp:=  [|java:io:FileOutputStream.<init>|](v2, v4) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08a652.   call temp:=  [|java:io:BufferedOutputStream.<init>|](v1, v2) @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L08a658.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v0, v1) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08a65e.   v1:= 0  @length 4;
#L08a660.   call temp:=  [|java:io:PrintWriter.<init>|](v3, v0, v1) @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;Z)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08a666.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.<init>|] ([|java:io:PrintWriter|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a678.   v0:= new [|java:io:OutputStreamWriter|];
#L08a67c.   v1:= new [|java:io:BufferedOutputStream|];
#L08a680.   v2:= new [|java:io:FileOutputStream|];
#L08a684.   call temp:=  [|java:io:FileOutputStream.<init>|](v2, v4) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08a68a.   call temp:=  [|java:io:BufferedOutputStream.<init>|](v1, v2) @signature [|Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:BufferedOutputStream|] @type direct;
#L08a690.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v0, v1, v5) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08a696.   v1:= 0  @length 4;
#L08a698.   call temp:=  [|java:io:PrintWriter.<init>|](v3, v0, v1) @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;Z)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08a69e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.doWrite|] ([|java:io:PrintWriter|] v3 @type (this), [|char|][] v4, [|int|] v5, [|int|] v6) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.doWrite:([CII)V|] @Access PRIVATE_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a6b0.   v2:= v3.[|java:io:PrintWriter.lock|]   @type object;
#L08a6b4.   (@monitorenter v2)
#L08a6b6.   v1:= v3.[|java:io:PrintWriter.out|]   @type object;
#L08a6ba.   if v1 == 0 then goto L08a6dc;
#L08a6be.   v1:= v3.[|java:io:PrintWriter.out|]   @type object;
#L08a6c2.   call temp:=  [|java:io:Writer.write|](v1, v4, v5, v6) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08a6c8.   (@monitorexit v2)
#L08a6ca.   return @void ;
#L08a6cc.   v0:= Exception  @type object;
#L08a6ce.   call temp:=  [|java:io:PrintWriter.setError|](v3) @signature [|Ljava/io/PrintWriter;.setError:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a6d4.   goto L08a6c8;
#L08a6d6.   v1:= Exception  @type object;
#L08a6d8.   (@monitorexit v2)
#L08a6da.   throw v1;
#L08a6dc.   call temp:=  [|java:io:PrintWriter.setError|](v3) @signature [|Ljava/io/PrintWriter;.setError:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a6e2.   goto L08a6c8;
  catch  [|any|] @[L08a6b6..L08a6ba] goto L08a6d6;
  catch  [|java:io:IOException|] @[L08a6be..L08a6c8] goto L08a6cc;
  catch  [|any|] @[L08a6be..L08a6c8] goto L08a6d6;
  catch  [|any|] @[L08a6c8..L08a6da] goto L08a6d6;
  catch  [|any|] @[L08a6dc..L08a6e2] goto L08a6d6;

   }
    procedure [|java:io:PrintWriter|] [|java:io:PrintWriter.append|] ([|java:io:PrintWriter|] v0 @type (this), [|char|] v1) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.append:(C)Ljava/io/PrintWriter;|] @Access PUBLIC {
      local temp ;
      
#L08a71c.   call temp:=  [|java:io:PrintWriter.write|](v0, v1) @signature [|Ljava/io/PrintWriter;.write:(I)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a722.   return v0  @type object;

   }
    procedure [|java:io:PrintWriter|] [|java:io:PrintWriter.append|] ([|java:io:PrintWriter|] v2 @type (this), [|java:lang:CharSequence|] v3 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/PrintWriter;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08a734.   if v3 != 0 then goto L08a73c;
#L08a738.   v3:= "null" @type (object, string);
#L08a73c.   v0:= 0  @length 4;
#L08a73e.   call temp:=  [|java:lang:CharSequence.length|](v3) @signature [|Ljava/lang/CharSequence;.length:()I|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L08a744.   v1:= temp;
#L08a746.   call temp:=  [|java:io:PrintWriter.append|](v2, v3, v0, v1) @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a74c.   return v2  @type object;

   }
    procedure [|java:io:PrintWriter|] [|java:io:PrintWriter.append|] ([|java:io:PrintWriter|] v3 @type (this), [|java:lang:CharSequence|] v4 @type (object), [|int|] v5, [|int|] v6) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/PrintWriter;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a760.   if v4 != 0 then goto L08a768;
#L08a764.   v4:= "null" @type (object, string);
#L08a768.   call temp:=  [|java:lang:CharSequence.subSequence|](v4, v5, v6) @signature [|Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L08a76e.   v1:= temp  @type object;
#L08a770.   call temp:=  [|java:lang:Object.toString|](v1) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L08a776.   v0:= temp  @type object;
#L08a778.   v1:= 0  @length 4;
#L08a77a.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08a780.   v2:= temp;
#L08a782.   call temp:=  [|java:io:PrintWriter.write|](v3, v0, v1, v2) @signature [|Ljava/io/PrintWriter;.write:(Ljava/lang/String;II)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a788.   return v3  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:PrintWriter.append|] ([|java:io:PrintWriter|] v1 @type (this), [|char|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.append:(C)Ljava/io/Writer;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a79c.   call temp:=  [|java:io:PrintWriter.append|](v1, v2) @signature [|Ljava/io/PrintWriter;.append:(C)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a7a2.   v0:= temp  @type object;
#L08a7a4.   return v0  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:PrintWriter.append|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a7b8.   call temp:=  [|java:io:PrintWriter.append|](v1, v2) @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a7be.   v0:= temp  @type object;
#L08a7c0.   return v0  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:PrintWriter.append|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a7d4.   call temp:=  [|java:io:PrintWriter.append|](v1, v2, v3, v4) @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a7da.   v0:= temp  @type object;
#L08a7dc.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:PrintWriter.append|] ([|java:io:PrintWriter|] v1 @type (this), [|char|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.append:(C)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a7f0.   call temp:=  [|java:io:PrintWriter.append|](v1, v2) @signature [|Ljava/io/PrintWriter;.append:(C)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a7f6.   v0:= temp  @type object;
#L08a7f8.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:PrintWriter.append|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a80c.   call temp:=  [|java:io:PrintWriter.append|](v1, v2) @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a812.   v0:= temp  @type object;
#L08a814.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:PrintWriter.append|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08a828.   call temp:=  [|java:io:PrintWriter.append|](v1, v2, v3, v4) @signature [|Ljava/io/PrintWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a82e.   v0:= temp  @type object;
#L08a830.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:PrintWriter.checkError|] ([|java:io:PrintWriter|] v2 @type (this)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.checkError:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08a844.   v0:= v2.[|java:io:PrintWriter.out|]   @type object;
#L08a848.   if v0 != 0 then goto L08a852;
#L08a84c.   v1:= v2.[|java:io:PrintWriter.ioError|]   @boolean;
#L08a850.   return v1;
#L08a852.   call temp:=  [|java:io:PrintWriter.flush|](v2) @signature [|Ljava/io/PrintWriter;.flush:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a858.   v1:= v2.[|java:io:PrintWriter.ioError|]   @boolean;
#L08a85c.   if v1 != 0 then goto L08a86c;
#L08a860.   call temp:=  [|java:io:Writer.checkError|](v0) @signature [|Ljava/io/Writer;.checkError:()Z|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08a866.   v1:= temp;
#L08a868.   if v1 == 0 then goto L08a870;
#L08a86c.   v1:= 1  @length 4;
#L08a86e.   goto L08a850;
#L08a870.   v1:= 0  @length 4;
#L08a872.   goto L08a850;

   }
    procedure [|void|] [|java:io:PrintWriter.clearError|] ([|java:io:PrintWriter|] v2 @type (this)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.clearError:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L08a884.   v1:= v2.[|java:io:PrintWriter.lock|]   @type object;
#L08a888.   (@monitorenter v1)
#L08a88a.   v0:= 0  @length 4;
#L08a88c.   v2.[|java:io:PrintWriter.ioError|]  := v0 @boolean;
#L08a890.   (@monitorexit v1)
#L08a892.   return @void ;
#L08a894.   v0:= Exception  @type object;
#L08a896.   (@monitorexit v1)
#L08a898.   throw v0;
  catch  [|any|] @[L08a88c..L08a898] goto L08a894;

   }
    procedure [|void|] [|java:io:PrintWriter.close|] ([|java:io:PrintWriter|] v3 @type (this)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a8b8.   v2:= v3.[|java:io:PrintWriter.lock|]   @type object;
#L08a8bc.   (@monitorenter v2)
#L08a8be.   v1:= v3.[|java:io:PrintWriter.out|]   @type object;
#L08a8c2.   if v1 == 0 then goto L08a8d6;
#L08a8c6.   v1:= v3.[|java:io:PrintWriter.out|]   @type object;
#L08a8ca.   call temp:=  [|java:io:Writer.close|](v1) @signature [|Ljava/io/Writer;.close:()V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08a8d0.   v1:= 0  @length 4;
#L08a8d2.   v3.[|java:io:PrintWriter.out|]  := v1 @type object;
#L08a8d6.   (@monitorexit v2)
#L08a8d8.   return @void ;
#L08a8da.   v0:= Exception  @type object;
#L08a8dc.   call temp:=  [|java:io:PrintWriter.setError|](v3) @signature [|Ljava/io/PrintWriter;.setError:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a8e2.   goto L08a8d0;
#L08a8e4.   v1:= Exception  @type object;
#L08a8e6.   (@monitorexit v2)
#L08a8e8.   throw v1;
  catch  [|any|] @[L08a8be..L08a8c2] goto L08a8e4;
  catch  [|java:io:IOException|] @[L08a8c6..L08a8d0] goto L08a8da;
  catch  [|any|] @[L08a8c6..L08a8d0] goto L08a8e4;
  catch  [|any|] @[L08a8d2..L08a8e8] goto L08a8e4;

   }
    procedure [|void|] [|java:io:PrintWriter.flush|] ([|java:io:PrintWriter|] v3 @type (this)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08a91c.   v2:= v3.[|java:io:PrintWriter.lock|]   @type object;
#L08a920.   (@monitorenter v2)
#L08a922.   v1:= v3.[|java:io:PrintWriter.out|]   @type object;
#L08a926.   if v1 == 0 then goto L08a948;
#L08a92a.   v1:= v3.[|java:io:PrintWriter.out|]   @type object;
#L08a92e.   call temp:=  [|java:io:Writer.flush|](v1) @signature [|Ljava/io/Writer;.flush:()V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08a934.   (@monitorexit v2)
#L08a936.   return @void ;
#L08a938.   v0:= Exception  @type object;
#L08a93a.   call temp:=  [|java:io:PrintWriter.setError|](v3) @signature [|Ljava/io/PrintWriter;.setError:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a940.   goto L08a934;
#L08a942.   v1:= Exception  @type object;
#L08a944.   (@monitorexit v2)
#L08a946.   throw v1;
#L08a948.   call temp:=  [|java:io:PrintWriter.setError|](v3) @signature [|Ljava/io/PrintWriter;.setError:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a94e.   goto L08a934;
  catch  [|any|] @[L08a922..L08a926] goto L08a942;
  catch  [|java:io:IOException|] @[L08a92a..L08a934] goto L08a938;
  catch  [|any|] @[L08a92a..L08a934] goto L08a942;
  catch  [|any|] @[L08a934..L08a946] goto L08a942;
  catch  [|any|] @[L08a948..L08a94e] goto L08a942;

   }
    procedure [|java:io:PrintWriter|] [|java:io:PrintWriter.format|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Object|][] v3 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
      
#L08a988.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L08a98e.   v0:= temp  @type object;
#L08a990.   call temp:=  [|java:io:PrintWriter.format|](v1, v0, v2, v3) @signature [|Ljava/io/PrintWriter;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a996.   v0:= temp  @type object;
#L08a998.   return v0  @type object;

   }
    procedure [|java:io:PrintWriter|] [|java:io:PrintWriter.format|] ([|java:io:PrintWriter|] v2 @type (this), [|java:util:Locale|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:Object|][] v5 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
        v1;
      
#L08a9ac.   if v4 != 0 then goto L08a9c0;
#L08a9b0.   v0:= new [|java:lang:NullPointerException|];
#L08a9b4.   v1:= "format == null" @type (object, string);
#L08a9b8.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08a9be.   throw v0;
#L08a9c0.   v0:= new [|java:util:Formatter|];
#L08a9c4.   call temp:=  [|java:util:Formatter.<init>|](v0, v2, v3) @signature [|Ljava/util/Formatter;.<init>:(Ljava/lang/Appendable;Ljava/util/Locale;)V|] @classDescriptor [|java:util:Formatter|] @type direct;
#L08a9ca.   call temp:=  [|java:util:Formatter.format|](v0, v4, v5) @signature [|Ljava/util/Formatter;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;|] @classDescriptor [|java:util:Formatter|] @type virtual;
#L08a9d0.   v0:= v2.[|java:io:PrintWriter.autoFlush|]   @boolean;
#L08a9d4.   if v0 == 0 then goto L08a9de;
#L08a9d8.   call temp:=  [|java:io:PrintWriter.flush|](v2) @signature [|Ljava/io/PrintWriter;.flush:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a9de.   return v2  @type object;

   }
    procedure [|void|] [|java:io:PrintWriter.print|] ([|java:io:PrintWriter|] v1 @type (this), [|char|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.print:(C)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08a9f0.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(C)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08a9f6.   v0:= temp  @type object;
#L08a9f8.   call temp:=  [|java:io:PrintWriter.print|](v1, v0) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08a9fe.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.print|] ([|java:io:PrintWriter|] v1 @type (this), [|double|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.print:(D)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08aa10.   call temp:=  [|java:lang:String.valueOf|](v2, v3) @signature [|Ljava/lang/String;.valueOf:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08aa16.   v0:= temp  @type object;
#L08aa18.   call temp:=  [|java:io:PrintWriter.print|](v1, v0) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08aa1e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.print|] ([|java:io:PrintWriter|] v1 @type (this), [|float|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.print:(F)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08aa30.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(F)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08aa36.   v0:= temp  @type object;
#L08aa38.   call temp:=  [|java:io:PrintWriter.print|](v1, v0) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08aa3e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.print|] ([|java:io:PrintWriter|] v1 @type (this), [|int|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.print:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08aa50.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08aa56.   v0:= temp  @type object;
#L08aa58.   call temp:=  [|java:io:PrintWriter.print|](v1, v0) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08aa5e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.print|] ([|java:io:PrintWriter|] v1 @type (this), [|long|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.print:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08aa70.   call temp:=  [|java:lang:String.valueOf|](v2, v3) @signature [|Ljava/lang/String;.valueOf:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08aa76.   v0:= temp  @type object;
#L08aa78.   call temp:=  [|java:io:PrintWriter.print|](v1, v0) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08aa7e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.print|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08aa90.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08aa96.   v0:= temp  @type object;
#L08aa98.   call temp:=  [|java:io:PrintWriter.print|](v1, v0) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08aa9e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.print|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08aab0.   if v2 == 0 then goto L08aabc;
#L08aab4.   call temp:=  [|java:io:PrintWriter.write|](v1, v2) @signature [|Ljava/io/PrintWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08aaba.   return @void ;
#L08aabc.   v0:= 0  @length 4;
#L08aabe.   v0:= ([|java:lang:Object|])v0;
#L08aac2.   call temp:=  [|java:lang:String.valueOf|](v0) @signature [|Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08aac8.   v2:= temp  @type object;
#L08aaca.   goto L08aab4;

   }
    procedure [|void|] [|java:io:PrintWriter.print|] ([|java:io:PrintWriter|] v1 @type (this), [|boolean|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.print:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08aadc.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(Z)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08aae2.   v0:= temp  @type object;
#L08aae4.   call temp:=  [|java:io:PrintWriter.print|](v1, v0) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08aaea.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.print|] ([|java:io:PrintWriter|] v3 @type (this), [|char|][] v4) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.print:([C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08aafc.   v0:= new [|java:lang:String|];
#L08ab00.   v1:= 0  @length 4;
#L08ab02.   v2:= v4.length;
#L08ab04.   call temp:=  [|java:lang:String.<init>|](v0, v4, v1, v2) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L08ab0a.   call temp:=  [|java:io:PrintWriter.print|](v3, v0) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ab10.   return @void ;

   }
    procedure [|java:io:PrintWriter|] [|java:io:PrintWriter.printf|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Object|][] v3 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
      
#L08ab24.   call temp:=  [|java:io:PrintWriter.format|](v1, v2, v3) @signature [|Ljava/io/PrintWriter;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ab2a.   v0:= temp  @type object;
#L08ab2c.   return v0  @type object;

   }
    procedure [|java:io:PrintWriter|] [|java:io:PrintWriter.printf|] ([|java:io:PrintWriter|] v1 @type (this), [|java:util:Locale|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|java:lang:Object|][] v4 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.printf:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
      
#L08ab40.   call temp:=  [|java:io:PrintWriter.format|](v1, v2, v3, v4) @signature [|Ljava/io/PrintWriter;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ab46.   v0:= temp  @type object;
#L08ab48.   return v0  @type object;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v2 @type (this)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ab5c.   v1:= v2.[|java:io:PrintWriter.lock|]   @type object;
#L08ab60.   (@monitorenter v1)
#L08ab62.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L08ab68.   v0:= temp  @type object;
#L08ab6a.   call temp:=  [|java:io:PrintWriter.print|](v2, v0) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ab70.   v0:= v2.[|java:io:PrintWriter.autoFlush|]   @boolean;
#L08ab74.   if v0 == 0 then goto L08ab7e;
#L08ab78.   call temp:=  [|java:io:PrintWriter.flush|](v2) @signature [|Ljava/io/PrintWriter;.flush:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ab7e.   (@monitorexit v1)
#L08ab80.   return @void ;
#L08ab82.   v0:= Exception  @type object;
#L08ab84.   (@monitorexit v1)
#L08ab86.   throw v0;
  catch  [|any|] @[L08ab62..L08ab86] goto L08ab82;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v1 @type (this), [|char|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:(C)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08aba4.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(C)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08abaa.   v0:= temp  @type object;
#L08abac.   call temp:=  [|java:io:PrintWriter.println|](v1, v0) @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08abb2.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v1 @type (this), [|double|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:(D)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08abc4.   call temp:=  [|java:lang:String.valueOf|](v2, v3) @signature [|Ljava/lang/String;.valueOf:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08abca.   v0:= temp  @type object;
#L08abcc.   call temp:=  [|java:io:PrintWriter.println|](v1, v0) @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08abd2.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v1 @type (this), [|float|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:(F)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08abe4.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(F)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08abea.   v0:= temp  @type object;
#L08abec.   call temp:=  [|java:io:PrintWriter.println|](v1, v0) @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08abf2.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v1 @type (this), [|int|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08ac04.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08ac0a.   v0:= temp  @type object;
#L08ac0c.   call temp:=  [|java:io:PrintWriter.println|](v1, v0) @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ac12.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v1 @type (this), [|long|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08ac24.   call temp:=  [|java:lang:String.valueOf|](v2, v3) @signature [|Ljava/lang/String;.valueOf:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08ac2a.   v0:= temp  @type object;
#L08ac2c.   call temp:=  [|java:io:PrintWriter.println|](v1, v0) @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ac32.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08ac44.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08ac4a.   v0:= temp  @type object;
#L08ac4c.   call temp:=  [|java:io:PrintWriter.println|](v1, v0) @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ac52.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ac64.   v1:= v2.[|java:io:PrintWriter.lock|]   @type object;
#L08ac68.   (@monitorenter v1)
#L08ac6a.   call temp:=  [|java:io:PrintWriter.print|](v2, v3) @signature [|Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ac70.   call temp:=  [|java:io:PrintWriter.println|](v2) @signature [|Ljava/io/PrintWriter;.println:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ac76.   (@monitorexit v1)
#L08ac78.   return @void ;
#L08ac7a.   v0:= Exception  @type object;
#L08ac7c.   (@monitorexit v1)
#L08ac7e.   throw v0;
  catch  [|any|] @[L08ac6a..L08ac7e] goto L08ac7a;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v1 @type (this), [|boolean|] v2) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08ac9c.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(Z)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08aca2.   v0:= temp  @type object;
#L08aca4.   call temp:=  [|java:io:PrintWriter.println|](v1, v0) @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08acaa.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.println|] ([|java:io:PrintWriter|] v3 @type (this), [|char|][] v4) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.println:([C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08acbc.   v0:= new [|java:lang:String|];
#L08acc0.   v1:= 0  @length 4;
#L08acc2.   v2:= v4.length;
#L08acc4.   call temp:=  [|java:lang:String.<init>|](v0, v4, v1, v2) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L08acca.   call temp:=  [|java:io:PrintWriter.println|](v3, v0) @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08acd0.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.setError|] ([|java:io:PrintWriter|] v2 @type (this)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.setError:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L08ace4.   v1:= v2.[|java:io:PrintWriter.lock|]   @type object;
#L08ace8.   (@monitorenter v1)
#L08acea.   v0:= 1  @length 4;
#L08acec.   v2.[|java:io:PrintWriter.ioError|]  := v0 @boolean;
#L08acf0.   (@monitorexit v1)
#L08acf2.   return @void ;
#L08acf4.   v0:= Exception  @type object;
#L08acf6.   (@monitorexit v1)
#L08acf8.   throw v0;
  catch  [|any|] @[L08acec..L08acf8] goto L08acf4;

   }
    procedure [|void|] [|java:io:PrintWriter.write|] ([|java:io:PrintWriter|] v4 @type (this), [|int|] v5) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08ad18.   v3:= 1  @length 4;
#L08ad1a.   v2:= 0  @length 4;
#L08ad1c.   v0:= new [|char|][v3];
#L08ad20.   v1:= (char)v5  @type i2c;
#L08ad22.   v0[v2]:= v1  @char;
#L08ad26.   call temp:=  [|java:io:PrintWriter.doWrite|](v4, v0, v2, v3) @signature [|Ljava/io/PrintWriter;.doWrite:([CII)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08ad2c.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.write|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.write:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08ad40.   call temp:=  [|java:lang:String.toCharArray|](v2) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ad46.   v0:= temp  @type object;
#L08ad48.   call temp:=  [|java:io:PrintWriter.write|](v1, v0) @signature [|Ljava/io/PrintWriter;.write:([C)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ad4e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.write|] ([|java:io:PrintWriter|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.write:(Ljava/lang/String;II)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08ad60.   v0:= v3 + v4  @type int;
#L08ad64.   call temp:=  [|java:lang:String.substring|](v2, v3, v0) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ad6a.   v0:= temp  @type object;
#L08ad6c.   call temp:=  [|java:lang:String.toCharArray|](v0) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ad72.   v0:= temp  @type object;
#L08ad74.   call temp:=  [|java:io:PrintWriter.write|](v1, v0) @signature [|Ljava/io/PrintWriter;.write:([C)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ad7a.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.write|] ([|java:io:PrintWriter|] v2 @type (this), [|char|][] v3) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.write:([C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ad8c.   v0:= 0  @length 4;
#L08ad8e.   v1:= v3.length;
#L08ad90.   call temp:=  [|java:io:PrintWriter.write|](v2, v3, v0, v1) @signature [|Ljava/io/PrintWriter;.write:([CII)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08ad96.   return @void ;

   }
    procedure [|void|] [|java:io:PrintWriter.write|] ([|java:io:PrintWriter|] v0 @type (this), [|char|][] v1, [|int|] v2, [|int|] v3) @owner [|java:io:PrintWriter|] @signature [|Ljava/io/PrintWriter;.write:([CII)V|] @Access PUBLIC {
      local temp ;
      
#L08ada8.   call temp:=  [|java:io:PrintWriter.doWrite|](v0, v1, v2, v3) @signature [|Ljava/io/PrintWriter;.doWrite:([CII)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08adae.   return @void ;

   }
record [|java:io:Console$ConsoleWriter|]  @type class @AccessFlag   extends [|java:io:PrintWriter|] {
   }
    procedure [|void|] [|java:io:Console$ConsoleWriter.<init>|] ([|java:io:Console$ConsoleWriter|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object)) @owner [|java:io:Console$ConsoleWriter|] @signature [|Ljava/io/Console$ConsoleWriter;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08adc0.   v0:= 1  @length 4;
#L08adc2.   call temp:=  [|java:io:PrintWriter.<init>|](v1, v2, v0) @signature [|Ljava/io/PrintWriter;.<init>:(Ljava/io/OutputStream;Z)V|] @classDescriptor [|java:io:PrintWriter|] @type direct;
#L08adc8.   call temp:=  [|java:io:Console.access$000|]() @signature [|Ljava/io/Console;.access$000:()Ljava/lang/Object;|] @classDescriptor [|java:io:Console|] @type static;
#L08adce.   v0:= temp  @type object;
#L08add0.   v1.[|java:io:Console$ConsoleWriter.lock|]  := v0 @type object;
#L08add4.   return @void ;

   }
    procedure [|void|] [|java:io:Console$ConsoleWriter.close|] ([|java:io:Console$ConsoleWriter|] v0 @type (this)) @owner [|java:io:Console$ConsoleWriter|] @signature [|Ljava/io/Console$ConsoleWriter;.close:()V|] @Access PUBLIC {
      local temp ;
      
#L08ade8.   call temp:=  [|java:io:Console$ConsoleWriter.flush|](v0) @signature [|Ljava/io/Console$ConsoleWriter;.flush:()V|] @classDescriptor [|java:io:Console$ConsoleWriter|] @type virtual;
#L08adee.   return @void ;

   }
record [|java:io:Console|]  @type class @AccessFlag PUBLIC_FINAL extends  [|java:io:Flushable|] {
      [|java:io:Console$ConsoleReader|] [|java:io:Console.reader|]    @AccessFlag PRIVATE_FINAL;
      [|java:io:PrintWriter|] [|java:io:Console.writer|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:lang:Object|] @@[|java:io:Console.CONSOLE_LOCK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:io:Console|] @@[|java:io:Console.console|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:Console.<clinit>|] () @owner [|java:io:Console|] @signature [|Ljava/io/Console;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08ae00.   v0:= new [|java:lang:Object|];
#L08ae04.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08ae0a.   @@[|java:io:Console.CONSOLE_LOCK|] := v0  @type object;
#L08ae0e.   call temp:=  [|java:io:Console.makeConsole|]() @signature [|Ljava/io/Console;.makeConsole:()Ljava/io/Console;|] @classDescriptor [|java:io:Console|] @type static;
#L08ae14.   v0:= temp  @type object;
#L08ae16.   @@[|java:io:Console.console|] := v0  @type object;
#L08ae1a.   return @void ;

   }
    procedure [|void|] [|java:io:Console.<init>|] ([|java:io:Console|] v1 @type (this), [|java:io:InputStream|] v2 @type (object), [|java:io:OutputStream|] v3 @type (object)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.<init>:(Ljava/io/InputStream;Ljava/io/OutputStream;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08ae2c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08ae32.   v0:= new [|java:io:Console$ConsoleReader|];
#L08ae36.   call temp:=  [|java:io:Console$ConsoleReader.<init>|](v0, v2) @signature [|Ljava/io/Console$ConsoleReader;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:Console$ConsoleReader|] @type direct;
#L08ae3c.   v1.[|java:io:Console.reader|]  := v0 @type object;
#L08ae40.   v0:= new [|java:io:Console$ConsoleWriter|];
#L08ae44.   call temp:=  [|java:io:Console$ConsoleWriter.<init>|](v0, v3) @signature [|Ljava/io/Console$ConsoleWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:Console$ConsoleWriter|] @type direct;
#L08ae4a.   v1.[|java:io:Console.writer|]  := v0 @type object;
#L08ae4e.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:io:Console.access$000|] () @owner [|java:io:Console|] @signature [|Ljava/io/Console;.access$000:()Ljava/lang/Object;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L08ae60.   v0:= @@[|java:io:Console.CONSOLE_LOCK|]   @type object;
#L08ae64.   return v0  @type object;

   }
    procedure [|java:io:Console|] [|java:io:Console.getConsole|] () @owner [|java:io:Console|] @signature [|Ljava/io/Console;.getConsole:()Ljava/io/Console;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L08ae78.   v0:= @@[|java:io:Console.console|]   @type object;
#L08ae7c.   return v0  @type object;

   }
    procedure [|java:io:Console|] [|java:io:Console.makeConsole|] () @owner [|java:io:Console|] @signature [|Ljava/io/Console;.makeConsole:()Ljava/io/Console;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08ae90.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08ae94.   v2:= @@[|java:io:FileDescriptor.in|]   @type object;
#L08ae98.   call temp:=  [|libcore:io:Os.isatty|](v1, v2) @signature [|Llibcore/io/Os;.isatty:(Ljava/io/FileDescriptor;)Z|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08ae9e.   v1:= temp;
#L08aea0.   if v1 == 0 then goto L08aeb8;
#L08aea4.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08aea8.   v2:= @@[|java:io:FileDescriptor.out|]   @type object;
#L08aeac.   call temp:=  [|libcore:io:Os.isatty|](v1, v2) @signature [|Llibcore/io/Os;.isatty:(Ljava/io/FileDescriptor;)Z|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08aeb2.   v1:= temp;
#L08aeb4.   if v1 != 0 then goto L08aebc;
#L08aeb8.   v1:= 0  @length 4;
#L08aeba.   return v1  @type object;
#L08aebc.   v1:= new [|java:io:Console|];
#L08aec0.   v2:= @@[|java:lang:System.in|]   @type object;
#L08aec4.   v3:= @@[|java:lang:System.out|]   @type object;
#L08aec8.   call temp:=  [|java:io:Console.<init>|](v1, v2, v3) @signature [|Ljava/io/Console;.<init>:(Ljava/io/InputStream;Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:Console|] @type direct;
#L08aece.   goto L08aeba;
#L08aed0.   v0:= Exception  @type object;
#L08aed2.   v1:= new [|java:lang:AssertionError|];
#L08aed6.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L08aedc.   throw v1;
  catch  [|java:io:IOException|] @[L08aebc..L08aece] goto L08aed0;

   }
    procedure [|int|] [|java:io:Console.setEcho|] ([|boolean|] v2, [|int|] v3) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.setEcho:(ZI)I|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L08aefc.   call temp:=  [|java:io:Console.setEchoImpl|](v2, v3) @signature [|Ljava/io/Console;.setEchoImpl:(ZI)I|] @classDescriptor [|java:io:Console|] @type static;
#L08af02.   v1:= temp;
#L08af04.   return v1;
#L08af06.   v0:= Exception  @type object;
#L08af08.   v1:= new [|java:io:IOError|];
#L08af0c.   call temp:=  [|java:io:IOError.<init>|](v1, v0) @signature [|Ljava/io/IOError;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:io:IOError|] @type direct;
#L08af12.   throw v1;
  catch  [|java:io:IOException|] @[L08aefc..L08af02] goto L08af06;

   }
    procedure [|int|] [|java:io:Console.setEchoImpl|] ([|boolean|] v0, [|int|] v1) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.setEchoImpl:(ZI)I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:io:Console.flush|] ([|java:io:Console|] v1 @type (this)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08af30.   v0:= v1.[|java:io:Console.writer|]   @type object;
#L08af34.   call temp:=  [|java:io:PrintWriter.flush|](v0) @signature [|Ljava/io/PrintWriter;.flush:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08af3a.   return @void ;

   }
    procedure [|java:io:Console|] [|java:io:Console.format|] ([|java:io:Console|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:Object|][] v4 @type (object)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
        v1;
      
#L08af4c.   v0:= new [|java:util:Formatter|];
#L08af50.   v1:= v2.[|java:io:Console.writer|]   @type object;
#L08af54.   call temp:=  [|java:util:Formatter.<init>|](v0, v1) @signature [|Ljava/util/Formatter;.<init>:(Ljava/lang/Appendable;)V|] @classDescriptor [|java:util:Formatter|] @type direct;
#L08af5a.   call temp:=  [|java:util:Formatter.format|](v0, v3, v4) @signature [|Ljava/util/Formatter;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;|] @classDescriptor [|java:util:Formatter|] @type virtual;
#L08af60.   call temp:=  [|java:util:Formatter.flush|](v0) @signature [|Ljava/util/Formatter;.flush:()V|] @classDescriptor [|java:util:Formatter|] @type virtual;
#L08af66.   return v2  @type object;

   }
    procedure [|java:io:Console|] [|java:io:Console.printf|] ([|java:io:Console|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Object|][] v3 @type (object)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
      
#L08af78.   call temp:=  [|java:io:Console.format|](v1, v2, v3) @signature [|Ljava/io/Console;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;|] @classDescriptor [|java:io:Console|] @type virtual;
#L08af7e.   v0:= temp  @type object;
#L08af80.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:io:Console.readLine|] ([|java:io:Console|] v2 @type (this)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.readLine:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08af94.   v1:= v2.[|java:io:Console.reader|]   @type object;
#L08af98.   call temp:=  [|java:io:Console$ConsoleReader.readLine|](v1) @signature [|Ljava/io/Console$ConsoleReader;.readLine:()Ljava/lang/String;|] @classDescriptor [|java:io:Console$ConsoleReader|] @type virtual;
#L08af9e.   v1:= temp  @type object;
#L08afa0.   return v1  @type object;
#L08afa2.   v0:= Exception  @type object;
#L08afa4.   v1:= new [|java:io:IOError|];
#L08afa8.   call temp:=  [|java:io:IOError.<init>|](v1, v0) @signature [|Ljava/io/IOError;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:io:IOError|] @type direct;
#L08afae.   throw v1;
  catch  [|java:io:IOException|] @[L08af94..L08af9e] goto L08afa2;

   }
    procedure [|java:lang:String|] [|java:io:Console.readLine|] ([|java:io:Console|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:Object|][] v4 @type (object)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.readLine:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
        v1;
      
#L08afcc.   v1:= @@[|java:io:Console.CONSOLE_LOCK|]   @type object;
#L08afd0.   (@monitorenter v1)
#L08afd2.   call temp:=  [|java:io:Console.format|](v2, v3, v4) @signature [|Ljava/io/Console;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;|] @classDescriptor [|java:io:Console|] @type virtual;
#L08afd8.   call temp:=  [|java:io:Console.readLine|](v2) @signature [|Ljava/io/Console;.readLine:()Ljava/lang/String;|] @classDescriptor [|java:io:Console|] @type virtual;
#L08afde.   v0:= temp  @type object;
#L08afe0.   (@monitorexit v1)
#L08afe2.   return v0  @type object;
#L08afe4.   v0:= Exception  @type object;
#L08afe6.   (@monitorexit v1)
#L08afe8.   throw v0;
  catch  [|any|] @[L08afd2..L08afe8] goto L08afe4;

   }
    procedure [|char|][] [|java:io:Console.readPassword|] ([|java:io:Console|] v5 @type (this)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.readPassword:()[C|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08b008.   v3:= @@[|java:io:Console.CONSOLE_LOCK|]   @type object;
#L08b00c.   (@monitorenter v3)
#L08b00e.   v2:= 0  @length 4;
#L08b010.   v4:= 0  @length 4;
#L08b012.   call temp:=  [|java:io:Console.setEcho|](v2, v4) @signature [|Ljava/io/Console;.setEcho:(ZI)I|] @classDescriptor [|java:io:Console|] @type static;
#L08b018.   v1:= temp;
#L08b01a.   call temp:=  [|java:io:Console.readLine|](v5) @signature [|Ljava/io/Console;.readLine:()Ljava/lang/String;|] @classDescriptor [|java:io:Console|] @type virtual;
#L08b020.   v0:= temp  @type object;
#L08b022.   v2:= v5.[|java:io:Console.writer|]   @type object;
#L08b026.   call temp:=  [|java:io:PrintWriter.println|](v2) @signature [|Ljava/io/PrintWriter;.println:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L08b02c.   if v0 != 0 then goto L08b03e;
#L08b030.   v2:= 0  @length 4;
#L08b032.   v4:= 1  @length 4;
#L08b034.   call temp:=  [|java:io:Console.setEcho|](v4, v1) @signature [|Ljava/io/Console;.setEcho:(ZI)I|] @classDescriptor [|java:io:Console|] @type static;
#L08b03a.   (@monitorexit v3)
#L08b03c.   return v2  @type object;
#L08b03e.   call temp:=  [|java:lang:String.toCharArray|](v0) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08b044.   v2:= temp  @type object;
#L08b046.   goto L08b032;
#L08b048.   v2:= Exception  @type object;
#L08b04a.   v4:= 1  @length 4;
#L08b04c.   call temp:=  [|java:io:Console.setEcho|](v4, v1) @signature [|Ljava/io/Console;.setEcho:(ZI)I|] @classDescriptor [|java:io:Console|] @type static;
#L08b052.   throw v2;
#L08b054.   v2:= Exception  @type object;
#L08b056.   (@monitorexit v3)
#L08b058.   throw v2;
  catch  [|any|] @[L08b012..L08b018] goto L08b054;
  catch  [|any|] @[L08b01a..L08b02c] goto L08b048;
  catch  [|any|] @[L08b034..L08b03c] goto L08b054;
  catch  [|any|] @[L08b03e..L08b044] goto L08b048;
  catch  [|any|] @[L08b04c..L08b058] goto L08b054;

   }
    procedure [|char|][] [|java:io:Console.readPassword|] ([|java:io:Console|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:Object|][] v4 @type (object)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.readPassword:(Ljava/lang/String;[Ljava/lang/Object;)[C|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
        v1;
      
#L08b09c.   v1:= @@[|java:io:Console.CONSOLE_LOCK|]   @type object;
#L08b0a0.   (@monitorenter v1)
#L08b0a2.   call temp:=  [|java:io:Console.format|](v2, v3, v4) @signature [|Ljava/io/Console;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/Console;|] @classDescriptor [|java:io:Console|] @type virtual;
#L08b0a8.   call temp:=  [|java:io:Console.readPassword|](v2) @signature [|Ljava/io/Console;.readPassword:()[C|] @classDescriptor [|java:io:Console|] @type virtual;
#L08b0ae.   v0:= temp  @type object;
#L08b0b0.   (@monitorexit v1)
#L08b0b2.   return v0  @type object;
#L08b0b4.   v0:= Exception  @type object;
#L08b0b6.   (@monitorexit v1)
#L08b0b8.   throw v0;
  catch  [|any|] @[L08b0a2..L08b0b8] goto L08b0b4;

   }
    procedure [|java:io:Reader|] [|java:io:Console.reader|] ([|java:io:Console|] v1 @type (this)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.reader:()Ljava/io/Reader;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08b0d8.   v0:= v1.[|java:io:Console.reader|]   @type object;
#L08b0dc.   return v0  @type object;

   }
    procedure [|java:io:PrintWriter|] [|java:io:Console.writer|] ([|java:io:Console|] v1 @type (this)) @owner [|java:io:Console|] @signature [|Ljava/io/Console;.writer:()Ljava/io/PrintWriter;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08b0f0.   v0:= v1.[|java:io:Console.writer|]   @type object;
#L08b0f4.   return v0  @type object;

   }
record [|java:io:DataInput|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|java:io:DataInput.readBoolean|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readBoolean:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|] [|java:io:DataInput.readByte|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readByte:()B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|char|] [|java:io:DataInput.readChar|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readChar:()C|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|double|] [|java:io:DataInput.readDouble|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readDouble:()D|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|float|] [|java:io:DataInput.readFloat|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readFloat:()F|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataInput.readFully|] ([|byte|][] v0) @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readFully:([B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataInput.readFully|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readFully:([BII)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:io:DataInput.readInt|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readInt:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:io:DataInput.readLine|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readLine:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:io:DataInput.readLong|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readLong:()J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|short|] [|java:io:DataInput.readShort|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readShort:()S|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:io:DataInput.readUTF|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readUTF:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:io:DataInput.readUnsignedByte|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readUnsignedByte:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:io:DataInput.readUnsignedShort|] () @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.readUnsignedShort:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:io:DataInput.skipBytes|] ([|int|] v0) @owner [|java:io:DataInput|] @signature [|Ljava/io/DataInput;.skipBytes:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:DataInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterInputStream|], [|java:io:DataInput|] {
      [|byte|][] [|java:io:DataInputStream.scratch|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:io:DataInputStream.<init>|] ([|java:io:DataInputStream|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08b108.   call temp:=  [|java:io:FilterInputStream.<init>|](v1, v2) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L08b10e.   v0:= 8  @length 16;
#L08b112.   v0:= new [|byte|][v0];
#L08b116.   v1.[|java:io:DataInputStream.scratch|]  := v0 @type object;
#L08b11a.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:DataInputStream.decodeUTF|] ([|int|] v3, [|java:io:DataInput|] v4 @type (object)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.decodeUTF:(ILjava/io/DataInput;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08b12c.   v2:= 0  @length 4;
#L08b12e.   v0:= new [|byte|][v3];
#L08b132.   call temp:=  [|java:io:DataInput.readFully|](v4, v0, v2, v3) @signature [|Ljava/io/DataInput;.readFully:([BII)V|] @classDescriptor [|java:io:DataInput|] @type interface;
#L08b138.   v1:= new [|char|][v3];
#L08b13c.   call temp:=  [|java:nio:charset:ModifiedUtf8.decode|](v0, v1, v2, v3) @signature [|Ljava/nio/charset/ModifiedUtf8;.decode:([B[CII)Ljava/lang/String;|] @classDescriptor [|java:nio:charset:ModifiedUtf8|] @type static;
#L08b142.   v1:= temp  @type object;
#L08b144.   return v1  @type object;

   }
    procedure [|java:lang:String|] [|java:io:DataInputStream.readUTF|] ([|java:io:DataInput|] v1 @type (object)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readUTF:(Ljava/io/DataInput;)Ljava/lang/String;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L08b158.   call temp:=  [|java:io:DataInput.readUnsignedShort|](v1) @signature [|Ljava/io/DataInput;.readUnsignedShort:()I|] @classDescriptor [|java:io:DataInput|] @type interface;
#L08b15e.   v0:= temp;
#L08b160.   call temp:=  [|java:io:DataInputStream.decodeUTF|](v0, v1) @signature [|Ljava/io/DataInputStream;.decodeUTF:(ILjava/io/DataInput;)Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type static;
#L08b166.   v0:= temp  @type object;
#L08b168.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:io:DataInputStream.decodeUTF|] ([|java:io:DataInputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.decodeUTF:(I)Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
      
#L08b17c.   call temp:=  [|java:io:DataInputStream.decodeUTF|](v2, v1) @signature [|Ljava/io/DataInputStream;.decodeUTF:(ILjava/io/DataInput;)Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type static;
#L08b182.   v0:= temp  @type object;
#L08b184.   return v0  @type object;

   }
    procedure [|int|] [|java:io:DataInputStream.read|] ([|java:io:DataInputStream|] v1 @type (this), [|byte|][] v2) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.read:([B)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b198.   call temp:=  [|java:io:FilterInputStream.read|](v1, v2) @signature [|Ljava/io/FilterInputStream;.read:([B)I|] @classDescriptor [|java:io:FilterInputStream|] @type super;
#L08b19e.   v0:= temp;
#L08b1a0.   return v0;

   }
    procedure [|int|] [|java:io:DataInputStream.read|] ([|java:io:DataInputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.read:([BII)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b1b4.   v0:= v1.[|java:io:DataInputStream.in|]   @type object;
#L08b1b8.   call temp:=  [|java:io:InputStream.read|](v0, v2, v3, v4) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08b1be.   v0:= temp;
#L08b1c0.   return v0;

   }
    procedure [|boolean|] [|java:io:DataInputStream.readBoolean|] ([|java:io:DataInputStream|] v2 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readBoolean:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L08b1d4.   v1:= v2.[|java:io:DataInputStream.in|]   @type object;
#L08b1d8.   call temp:=  [|java:io:InputStream.read|](v1) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08b1de.   v0:= temp;
#L08b1e0.   if v0 >= 0 then goto L08b1f0;
#L08b1e4.   v1:= new [|java:io:EOFException|];
#L08b1e8.   call temp:=  [|java:io:EOFException.<init>|](v1) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L08b1ee.   throw v1;
#L08b1f0.   if v0 == 0 then goto L08b1f8;
#L08b1f4.   v1:= 1  @length 4;
#L08b1f6.   return v1;
#L08b1f8.   v1:= 0  @length 4;
#L08b1fa.   goto L08b1f6;

   }
    procedure [|byte|] [|java:io:DataInputStream.readByte|] ([|java:io:DataInputStream|] v2 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readByte:()B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L08b20c.   v1:= v2.[|java:io:DataInputStream.in|]   @type object;
#L08b210.   call temp:=  [|java:io:InputStream.read|](v1) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08b216.   v0:= temp;
#L08b218.   if v0 >= 0 then goto L08b228;
#L08b21c.   v1:= new [|java:io:EOFException|];
#L08b220.   call temp:=  [|java:io:EOFException.<init>|](v1) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L08b226.   throw v1;
#L08b228.   v1:= (byte)v0  @type i2b;
#L08b22a.   return v1;

   }
    procedure [|char|] [|java:io:DataInputStream.readChar|] ([|java:io:DataInputStream|] v1 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readChar:()C|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b23c.   call temp:=  [|java:io:DataInputStream.readShort|](v1) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L08b242.   v0:= temp;
#L08b244.   v0:= (char)v0  @type i2c;
#L08b246.   return v0;

   }
    procedure [|double|] [|java:io:DataInputStream.readDouble|] ([|java:io:DataInputStream|] v2 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readDouble:()D|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L08b258.   call temp:=  [|java:io:DataInputStream.readLong|](v2) @signature [|Ljava/io/DataInputStream;.readLong:()J|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L08b25e.   v0:= temp  @type wide;
#L08b260.   call temp:=  [|java:lang:Double.longBitsToDouble|](v0, v1) @signature [|Ljava/lang/Double;.longBitsToDouble:(J)D|] @classDescriptor [|java:lang:Double|] @type static;
#L08b266.   v0:= temp  @type wide;
#L08b268.   return v0  @type wide;

   }
    procedure [|float|] [|java:io:DataInputStream.readFloat|] ([|java:io:DataInputStream|] v1 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readFloat:()F|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b27c.   call temp:=  [|java:io:DataInputStream.readInt|](v1) @signature [|Ljava/io/DataInputStream;.readInt:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L08b282.   v0:= temp;
#L08b284.   call temp:=  [|java:lang:Float.intBitsToFloat|](v0) @signature [|Ljava/lang/Float;.intBitsToFloat:(I)F|] @classDescriptor [|java:lang:Float|] @type static;
#L08b28a.   v0:= temp;
#L08b28c.   return v0;

   }
    procedure [|void|] [|java:io:DataInputStream.readFully|] ([|java:io:DataInputStream|] v2 @type (this), [|byte|][] v3) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readFully:([B)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L08b2a0.   v0:= 0  @length 4;
#L08b2a2.   v1:= v3.length;
#L08b2a4.   call temp:=  [|java:io:DataInputStream.readFully|](v2, v3, v0, v1) @signature [|Ljava/io/DataInputStream;.readFully:([BII)V|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L08b2aa.   return @void ;

   }
    procedure [|void|] [|java:io:DataInputStream.readFully|] ([|java:io:DataInputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readFully:([BII)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b2bc.   v0:= v1.[|java:io:DataInputStream.in|]   @type object;
#L08b2c0.   call temp:=  [|libcore:io:Streams.readFully|](v0, v2, v3, v4) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L08b2c6.   return @void ;

   }
    procedure [|int|] [|java:io:DataInputStream.readInt|] ([|java:io:DataInputStream|] v4 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readInt:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08b2d8.   v3:= 0  @length 4;
#L08b2da.   v0:= v4.[|java:io:DataInputStream.in|]   @type object;
#L08b2de.   v1:= v4.[|java:io:DataInputStream.scratch|]   @type object;
#L08b2e2.   v2:= 4  @length 4;
#L08b2e4.   call temp:=  [|libcore:io:Streams.readFully|](v0, v1, v3, v2) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L08b2ea.   v0:= v4.[|java:io:DataInputStream.scratch|]   @type object;
#L08b2ee.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L08b2f2.   call temp:=  [|libcore:io:Memory.peekInt|](v0, v3, v1) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L08b2f8.   v0:= temp;
#L08b2fa.   return v0;

   }
    procedure [|java:lang:String|] [|java:io:DataInputStream.readLine|] ([|java:io:DataInputStream|] v5 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readLine:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08b30c.   v1:= new [|java:lang:StringBuilder|];
#L08b310.   v3:= 80  @length 16;
#L08b314.   call temp:=  [|java:lang:StringBuilder.<init>|](v1, v3) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08b31a.   v0:= 0  @length 4;
#L08b31c.   v3:= v5.[|java:io:DataInputStream.in|]   @type object;
#L08b320.   call temp:=  [|java:io:InputStream.read|](v3) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08b326.   v2:= temp;
#L08b328.   goto L08b3c4;
#L08b32e.   if v0 == 0 then goto L08b3b8;
#L08b332.   v3:= v5.[|java:io:DataInputStream.in|]   @type object;
#L08b336.   v3:= ([|java:io:PushbackInputStream|])v3;
#L08b33a.   call temp:=  [|java:io:PushbackInputStream.unread|](v3, v2) @signature [|Ljava/io/PushbackInputStream;.unread:(I)V|] @classDescriptor [|java:io:PushbackInputStream|] @type virtual;
#L08b340.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b346.   v3:= temp  @type object;
#L08b348.   return v3  @type object;
#L08b34a.   call temp:=  [|java:lang:StringBuilder.length|](v1) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b350.   v3:= temp;
#L08b352.   if v3 != 0 then goto L08b35e;
#L08b356.   if v0 != 0 then goto L08b35e;
#L08b35a.   v3:= 0  @length 4;
#L08b35c.   goto L08b348;
#L08b35e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b364.   v3:= temp  @type object;
#L08b366.   goto L08b348;
#L08b368.   if v0 == 0 then goto L08b384;
#L08b36c.   v3:= v5.[|java:io:DataInputStream.in|]   @type object;
#L08b370.   v3:= ([|java:io:PushbackInputStream|])v3;
#L08b374.   call temp:=  [|java:io:PushbackInputStream.unread|](v3, v2) @signature [|Ljava/io/PushbackInputStream;.unread:(I)V|] @classDescriptor [|java:io:PushbackInputStream|] @type virtual;
#L08b37a.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b380.   v3:= temp  @type object;
#L08b382.   goto L08b348;
#L08b384.   v0:= 1  @length 4;
#L08b386.   v3:= v5.[|java:io:DataInputStream.in|]   @type object;
#L08b38a.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L08b390.   v3:= temp  @type object;
#L08b392.   v4:= new [|java:io:PushbackInputStream|];
#L08b396.   if v3 == v4 then goto L08b31c;
#L08b39a.   v3:= new [|java:io:PushbackInputStream|];
#L08b39e.   v4:= v5.[|java:io:DataInputStream.in|]   @type object;
#L08b3a2.   call temp:=  [|java:io:PushbackInputStream.<init>|](v3, v4) @signature [|Ljava/io/PushbackInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:PushbackInputStream|] @type direct;
#L08b3a8.   v5.[|java:io:DataInputStream.in|]  := v3 @type object;
#L08b3ac.   goto L08b31c;
#L08b3ae.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b3b4.   v3:= temp  @type object;
#L08b3b6.   goto L08b348;
#L08b3b8.   v3:= (char)v2  @type i2c;
#L08b3ba.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b3c0.   goto L08b31c;
#L08b3c2.   
#L08b3c4.   switch v2
                 | -1 => goto L08b34a
                 | 10 => goto L08b3ae
                 | 13 => goto L08b368
                 | => goto L08b32e;

   }
    procedure [|long|] [|java:io:DataInputStream.readLong|] ([|java:io:DataInputStream|] v4 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readLong:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08b3f0.   v3:= 0  @length 4;
#L08b3f2.   v0:= v4.[|java:io:DataInputStream.in|]   @type object;
#L08b3f6.   v1:= v4.[|java:io:DataInputStream.scratch|]   @type object;
#L08b3fa.   v2:= 8  @length 16;
#L08b3fe.   call temp:=  [|libcore:io:Streams.readFully|](v0, v1, v3, v2) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L08b404.   v0:= v4.[|java:io:DataInputStream.scratch|]   @type object;
#L08b408.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L08b40c.   call temp:=  [|libcore:io:Memory.peekLong|](v0, v3, v1) @signature [|Llibcore/io/Memory;.peekLong:([BILjava/nio/ByteOrder;)J|] @classDescriptor [|libcore:io:Memory|] @type static;
#L08b412.   v0:= temp  @type wide;
#L08b414.   return v0  @type wide;

   }
    procedure [|short|] [|java:io:DataInputStream.readShort|] ([|java:io:DataInputStream|] v4 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readShort:()S|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08b428.   v3:= 0  @length 4;
#L08b42a.   v0:= v4.[|java:io:DataInputStream.in|]   @type object;
#L08b42e.   v1:= v4.[|java:io:DataInputStream.scratch|]   @type object;
#L08b432.   v2:= 2  @length 4;
#L08b434.   call temp:=  [|libcore:io:Streams.readFully|](v0, v1, v3, v2) @signature [|Llibcore/io/Streams;.readFully:(Ljava/io/InputStream;[BII)V|] @classDescriptor [|libcore:io:Streams|] @type static;
#L08b43a.   v0:= v4.[|java:io:DataInputStream.scratch|]   @type object;
#L08b43e.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L08b442.   call temp:=  [|libcore:io:Memory.peekShort|](v0, v3, v1) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L08b448.   v0:= temp;
#L08b44a.   return v0;

   }
    procedure [|java:lang:String|] [|java:io:DataInputStream.readUTF|] ([|java:io:DataInputStream|] v1 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b45c.   call temp:=  [|java:io:DataInputStream.readUnsignedShort|](v1) @signature [|Ljava/io/DataInputStream;.readUnsignedShort:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L08b462.   v0:= temp;
#L08b464.   call temp:=  [|java:io:DataInputStream.decodeUTF|](v1, v0) @signature [|Ljava/io/DataInputStream;.decodeUTF:(I)Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L08b46a.   v0:= temp  @type object;
#L08b46c.   return v0  @type object;

   }
    procedure [|int|] [|java:io:DataInputStream.readUnsignedByte|] ([|java:io:DataInputStream|] v2 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readUnsignedByte:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L08b480.   v1:= v2.[|java:io:DataInputStream.in|]   @type object;
#L08b484.   call temp:=  [|java:io:InputStream.read|](v1) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08b48a.   v0:= temp;
#L08b48c.   if v0 >= 0 then goto L08b49c;
#L08b490.   v1:= new [|java:io:EOFException|];
#L08b494.   call temp:=  [|java:io:EOFException.<init>|](v1) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L08b49a.   throw v1;
#L08b49c.   return v0;

   }
    procedure [|int|] [|java:io:DataInputStream.readUnsignedShort|] ([|java:io:DataInputStream|] v2 @type (this)) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.readUnsignedShort:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L08b4b0.   call temp:=  [|java:io:DataInputStream.readShort|](v2) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L08b4b6.   v0:= temp;
#L08b4b8.    v1:= 0.000000;
#L08b4be.   v0:= v0 ^& v1  @type int;
#L08b4c0.   return v0;

   }
    procedure [|int|] [|java:io:DataInputStream.skipBytes|] ([|java:io:DataInputStream|] v6 @type (this), [|int|] v7) @owner [|java:io:DataInputStream|] @signature [|Ljava/io/DataInputStream;.skipBytes:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08b4d4.   v2:= 0  @length 4;
#L08b4d6.   if v2 >= v7 then goto L08b500;
#L08b4da.   v3:= v6.[|java:io:DataInputStream.in|]   @type object;
#L08b4de.   v4:= v7 - v2  @type int;
#L08b4e2.   v4:= (long)v4  @type i2l;
#L08b4e4.   call temp:=  [|java:io:InputStream.skip|](v3, v4, v5) @signature [|Ljava/io/InputStream;.skip:(J)J|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08b4ea.   v0:= temp  @type wide;
#L08b4ec.   v3:= 0  @length wide16;
#L08b4f0.   v3:= cmp(v0,v3);
#L08b4f4.   if v3 == 0 then goto L08b500;
#L08b4f8.   v3:= (long)v2  @type i2l;
#L08b4fa.   v3:= v3 + v0  @type long;
#L08b4fc.   v2:= (int)v3  @type l2i;
#L08b4fe.   goto L08b4d6;
#L08b500.   return v2;

   }
record [|java:io:DataOutput|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:io:DataOutput.write|] ([|int|] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.write:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.write|] ([|byte|][] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.write:([B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.write|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.write:([BII)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeBoolean|] ([|boolean|] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeBoolean:(Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeByte|] ([|int|] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeByte:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeBytes|] ([|java:lang:String|] v0 @type (object)) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeBytes:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeChar|] ([|int|] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeChar:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeChars|] ([|java:lang:String|] v0 @type (object)) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeChars:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeDouble|] ([|double|] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeDouble:(D)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeFloat|] ([|float|] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeFloat:(F)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeInt|] ([|int|] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeInt:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeLong|] ([|long|] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeLong:(J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeShort|] ([|int|] v0) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeShort:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:DataOutput.writeUTF|] ([|java:lang:String|] v0 @type (object)) @owner [|java:io:DataOutput|] @signature [|Ljava/io/DataOutput;.writeUTF:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:DataOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterOutputStream|], [|java:io:DataOutput|] {
      [|byte|][] [|java:io:DataOutputStream.scratch|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:io:DataOutputStream.written|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:DataOutputStream.<init>|] ([|java:io:DataOutputStream|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object)) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08b514.   call temp:=  [|java:io:FilterOutputStream.<init>|](v1, v2) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L08b51a.   v0:= 8  @length 16;
#L08b51e.   v0:= new [|byte|][v0];
#L08b522.   v1.[|java:io:DataOutputStream.scratch|]  := v0 @type object;
#L08b526.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.flush|] ([|java:io:DataOutputStream|] v0 @type (this)) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.flush:()V|] @Access PUBLIC {
      local temp ;
      
#L08b538.   call temp:=  [|java:io:FilterOutputStream.flush|](v0) @signature [|Ljava/io/FilterOutputStream;.flush:()V|] @classDescriptor [|java:io:FilterOutputStream|] @type super;
#L08b53e.   return @void ;

   }
    procedure [|int|] [|java:io:DataOutputStream.size|] ([|java:io:DataOutputStream|] v1 @type (this)) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.size:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b550.   v0:= v1.[|java:io:DataOutputStream.written|] ;
#L08b554.   if v0 >= 0 then goto L08b562;
#L08b558.    v0:= nan;
#L08b55e.   v1.[|java:io:DataOutputStream.written|]  := v0;
#L08b562.   v0:= v1.[|java:io:DataOutputStream.written|] ;
#L08b566.   return v0;

   }
    procedure [|void|] [|java:io:DataOutputStream.write|] ([|java:io:DataOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08b578.   v0:= v1.[|java:io:DataOutputStream.out|]   @type object;
#L08b57c.   call temp:=  [|java:io:OutputStream.write|](v0, v2) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08b582.   v0:= v1.[|java:io:DataOutputStream.written|] ;
#L08b586.   v0:= v0 + 1;
#L08b58a.   v1.[|java:io:DataOutputStream.written|]  := v0;
#L08b58e.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.write|] ([|java:io:DataOutputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08b5a0.   if v3 != 0 then goto L08b5b4;
#L08b5a4.   v0:= new [|java:lang:NullPointerException|];
#L08b5a8.   v1:= "buffer == null" @type (object, string);
#L08b5ac.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08b5b2.   throw v0;
#L08b5b4.   v0:= v2.[|java:io:DataOutputStream.out|]   @type object;
#L08b5b8.   call temp:=  [|java:io:OutputStream.write|](v0, v3, v4, v5) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08b5be.   v0:= v2.[|java:io:DataOutputStream.written|] ;
#L08b5c2.   v0:= v0 + v5  @type int;
#L08b5c4.   v2.[|java:io:DataOutputStream.written|]  := v0;
#L08b5c8.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeBoolean|] ([|java:io:DataOutputStream|] v2 @type (this), [|boolean|] v3) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeBoolean:(Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L08b5dc.   v1:= v2.[|java:io:DataOutputStream.out|]   @type object;
#L08b5e0.   if v3 == 0 then goto L08b5fa;
#L08b5e4.   v0:= 1  @length 4;
#L08b5e6.   call temp:=  [|java:io:OutputStream.write|](v1, v0) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08b5ec.   v0:= v2.[|java:io:DataOutputStream.written|] ;
#L08b5f0.   v0:= v0 + 1;
#L08b5f4.   v2.[|java:io:DataOutputStream.written|]  := v0;
#L08b5f8.   return @void ;
#L08b5fa.   v0:= 0  @length 4;
#L08b5fc.   goto L08b5e6;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeByte|] ([|java:io:DataOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b610.   v0:= v1.[|java:io:DataOutputStream.out|]   @type object;
#L08b614.   call temp:=  [|java:io:OutputStream.write|](v0, v2) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08b61a.   v0:= v1.[|java:io:DataOutputStream.written|] ;
#L08b61e.   v0:= v0 + 1;
#L08b622.   v1.[|java:io:DataOutputStream.written|]  := v0;
#L08b626.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeBytes|] ([|java:io:DataOutputStream|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeBytes:(Ljava/lang/String;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08b638.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08b63e.   v2:= temp;
#L08b640.   if v2 != 0 then goto L08b646;
#L08b644.   return @void ;
#L08b646.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08b64c.   v2:= temp;
#L08b64e.   v0:= new [|byte|][v2];
#L08b652.   v1:= 0  @length 4;
#L08b654.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08b65a.   v2:= temp;
#L08b65c.   if v1 >= v2 then goto L08b674;
#L08b660.   call temp:=  [|java:lang:String.charAt|](v5, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08b666.   v2:= temp;
#L08b668.   v2:= (byte)v2  @type i2b;
#L08b66a.   v0[v1]:= v2  @byte;
#L08b66e.   v1:= v1 + 1;
#L08b672.   goto L08b654;
#L08b674.   v2:= v4.[|java:io:DataOutputStream.out|]   @type object;
#L08b678.   call temp:=  [|java:io:OutputStream.write|](v2, v0) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08b67e.   v2:= v4.[|java:io:DataOutputStream.written|] ;
#L08b682.   v3:= v0.length;
#L08b684.   v2:= v2 + v3  @type int;
#L08b686.   v4.[|java:io:DataOutputStream.written|]  := v2;
#L08b68a.   goto L08b644;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeChar|] ([|java:io:DataOutputStream|] v0 @type (this), [|int|] v1) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeChar:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L08b69c.   call temp:=  [|java:io:DataOutputStream.writeShort|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L08b6a2.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeChars|] ([|java:io:DataOutputStream|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeChars:(Ljava/lang/String;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L08b6b4.   v1:= "UTF-16BE" @type (object, string);
#L08b6b8.   call temp:=  [|java:lang:String.getBytes|](v4, v1) @signature [|Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L08b6be.   v0:= temp  @type object;
#L08b6c0.   v1:= v3.[|java:io:DataOutputStream.out|]   @type object;
#L08b6c4.   call temp:=  [|java:io:OutputStream.write|](v1, v0) @signature [|Ljava/io/OutputStream;.write:([B)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08b6ca.   v1:= v3.[|java:io:DataOutputStream.written|] ;
#L08b6ce.   v2:= v0.length;
#L08b6d0.   v1:= v1 + v2  @type int;
#L08b6d2.   v3.[|java:io:DataOutputStream.written|]  := v1;
#L08b6d6.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeDouble|] ([|java:io:DataOutputStream|] v2 @type (this), [|double|] v3) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeDouble:(D)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L08b6e8.   call temp:=  [|java:lang:Double.doubleToLongBits|](v3, v4) @signature [|Ljava/lang/Double;.doubleToLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L08b6ee.   v0:= temp  @type wide;
#L08b6f0.   call temp:=  [|java:io:DataOutputStream.writeLong|](v2, v0, v1) @signature [|Ljava/io/DataOutputStream;.writeLong:(J)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L08b6f6.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeFloat|] ([|java:io:DataOutputStream|] v1 @type (this), [|float|] v2) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeFloat:(F)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b708.   call temp:=  [|java:lang:Float.floatToIntBits|](v2) @signature [|Ljava/lang/Float;.floatToIntBits:(F)I|] @classDescriptor [|java:lang:Float|] @type static;
#L08b70e.   v0:= temp;
#L08b710.   call temp:=  [|java:io:DataOutputStream.writeInt|](v1, v0) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L08b716.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeInt|] ([|java:io:DataOutputStream|] v4 @type (this), [|int|] v5) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08b728.   v3:= 0  @length 4;
#L08b72a.   v0:= v4.[|java:io:DataOutputStream.scratch|]   @type object;
#L08b72e.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L08b732.   call temp:=  [|libcore:io:Memory.pokeInt|](v0, v3, v5, v1) @signature [|Llibcore/io/Memory;.pokeInt:([BIILjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L08b738.   v0:= v4.[|java:io:DataOutputStream.out|]   @type object;
#L08b73c.   v1:= v4.[|java:io:DataOutputStream.scratch|]   @type object;
#L08b740.   v2:= 4  @length 4;
#L08b742.   call temp:=  [|java:io:OutputStream.write|](v0, v1, v3, v2) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08b748.   v0:= v4.[|java:io:DataOutputStream.written|] ;
#L08b74c.   v0:= v0 + 4;
#L08b750.   v4.[|java:io:DataOutputStream.written|]  := v0;
#L08b754.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeLong|] ([|java:io:DataOutputStream|] v4 @type (this), [|long|] v5) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeLong:(J)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08b768.   v3:= 0  @length 4;
#L08b76a.   v0:= v4.[|java:io:DataOutputStream.scratch|]   @type object;
#L08b76e.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L08b772.   call temp:=  [|libcore:io:Memory.pokeLong|](v0, v3, v5, v6, v1) @signature [|Llibcore/io/Memory;.pokeLong:([BIJLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L08b778.   v0:= v4.[|java:io:DataOutputStream.out|]   @type object;
#L08b77c.   v1:= v4.[|java:io:DataOutputStream.scratch|]   @type object;
#L08b780.   v2:= 8  @length 16;
#L08b784.   call temp:=  [|java:io:OutputStream.write|](v0, v1, v3, v2) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08b78a.   v0:= v4.[|java:io:DataOutputStream.written|] ;
#L08b78e.   v0:= v0 + 8;
#L08b792.   v4.[|java:io:DataOutputStream.written|]  := v0;
#L08b796.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeShort|] ([|java:io:DataOutputStream|] v4 @type (this), [|int|] v5) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08b7a8.   v3:= 0  @length 4;
#L08b7aa.   v0:= v4.[|java:io:DataOutputStream.scratch|]   @type object;
#L08b7ae.   v1:= (short)v5  @type i2s;
#L08b7b0.   v2:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L08b7b4.   call temp:=  [|libcore:io:Memory.pokeShort|](v0, v3, v1, v2) @signature [|Llibcore/io/Memory;.pokeShort:([BISLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L08b7ba.   v0:= v4.[|java:io:DataOutputStream.out|]   @type object;
#L08b7be.   v1:= v4.[|java:io:DataOutputStream.scratch|]   @type object;
#L08b7c2.   v2:= 2  @length 4;
#L08b7c4.   call temp:=  [|java:io:OutputStream.write|](v0, v1, v3, v2) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08b7ca.   v0:= v4.[|java:io:DataOutputStream.written|] ;
#L08b7ce.   v0:= v0 + 2;
#L08b7d2.   v4.[|java:io:DataOutputStream.written|]  := v0;
#L08b7d6.   return @void ;

   }
    procedure [|void|] [|java:io:DataOutputStream.writeUTF|] ([|java:io:DataOutputStream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:DataOutputStream|] @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08b7e8.   call temp:=  [|java:nio:charset:ModifiedUtf8.encode|](v2) @signature [|Ljava/nio/charset/ModifiedUtf8;.encode:(Ljava/lang/String;)[B|] @classDescriptor [|java:nio:charset:ModifiedUtf8|] @type static;
#L08b7ee.   v0:= temp  @type object;
#L08b7f0.   call temp:=  [|java:io:DataOutputStream.write|](v1, v0) @signature [|Ljava/io/DataOutputStream;.write:([B)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L08b7f6.   return @void ;

   }
record [|java:io:EOFException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:io:EOFException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:EOFException.<init>|] ([|java:io:EOFException|] v0 @type (this)) @owner [|java:io:EOFException|] @signature [|Ljava/io/EOFException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08b808.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08b80e.   return @void ;

   }
    procedure [|void|] [|java:io:EOFException.<init>|] ([|java:io:EOFException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:EOFException|] @signature [|Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08b820.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08b826.   return @void ;

   }
record [|java:io:EmulatedFields$ObjectSlot|]  @type class @AccessFlag   {
      [|boolean|] [|java:io:EmulatedFields$ObjectSlot.defaulted|]    @AccessFlag ;
      [|java:io:ObjectStreamField|] [|java:io:EmulatedFields$ObjectSlot.field|]    @AccessFlag ;
      [|java:lang:Object|] [|java:io:EmulatedFields$ObjectSlot.fieldValue|]    @AccessFlag ;
   }
    procedure [|void|] [|java:io:EmulatedFields$ObjectSlot.<init>|] ([|java:io:EmulatedFields$ObjectSlot|] v1 @type (this)) @owner [|java:io:EmulatedFields$ObjectSlot|] @signature [|Ljava/io/EmulatedFields$ObjectSlot;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L08b838.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08b83e.   v0:= 1  @length 4;
#L08b840.   v1.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v0 @boolean;
#L08b844.   return @void ;

   }
    procedure [|java:io:ObjectStreamField|] [|java:io:EmulatedFields$ObjectSlot.getField|] ([|java:io:EmulatedFields$ObjectSlot|] v1 @type (this)) @owner [|java:io:EmulatedFields$ObjectSlot|] @signature [|Ljava/io/EmulatedFields$ObjectSlot;.getField:()Ljava/io/ObjectStreamField;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08b858.   v0:= v1.[|java:io:EmulatedFields$ObjectSlot.field|]   @type object;
#L08b85c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:EmulatedFields$ObjectSlot.getFieldValue|] ([|java:io:EmulatedFields$ObjectSlot|] v1 @type (this)) @owner [|java:io:EmulatedFields$ObjectSlot|] @signature [|Ljava/io/EmulatedFields$ObjectSlot;.getFieldValue:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08b870.   v0:= v1.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08b874.   return v0  @type object;

   }
record [|java:io:EmulatedFields|]  @type class @AccessFlag   {
      [|java:io:ObjectStreamField|][] [|java:io:EmulatedFields.declaredFields|]    @AccessFlag PRIVATE;
      [|java:io:EmulatedFields$ObjectSlot|][] [|java:io:EmulatedFields.slotsToSerialize|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:EmulatedFields.<init>|] ([|java:io:EmulatedFields|] v0 @type (this), [|java:io:ObjectStreamField|][] v1 @type (object), [|java:io:ObjectStreamField|][] v2 @type (object)) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.<init>:([Ljava/io/ObjectStreamField;[Ljava/io/ObjectStreamField;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08b888.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08b88e.   call temp:=  [|java:io:EmulatedFields.buildSlots|](v0, v1) @signature [|Ljava/io/EmulatedFields;.buildSlots:([Ljava/io/ObjectStreamField;)V|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08b894.   v0.[|java:io:EmulatedFields.declaredFields|]  := v2 @type object;
#L08b898.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFields.buildSlots|] ([|java:io:EmulatedFields|] v3 @type (this), [|java:io:ObjectStreamField|][] v4 @type (object)) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.buildSlots:([Ljava/io/ObjectStreamField;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L08b8ac.   v2:= v4.length;
#L08b8ae.   v2:= new [|java:io:EmulatedFields$ObjectSlot|][v2];
#L08b8b2.   v3.[|java:io:EmulatedFields.slotsToSerialize|]  := v2 @type object;
#L08b8b6.   v0:= 0  @length 4;
#L08b8b8.   v2:= v4.length;
#L08b8ba.   if v0 >= v2 then goto L08b8de;
#L08b8be.   v1:= new [|java:io:EmulatedFields$ObjectSlot|];
#L08b8c2.   call temp:=  [|java:io:EmulatedFields$ObjectSlot.<init>|](v1) @signature [|Ljava/io/EmulatedFields$ObjectSlot;.<init>:()V|] @classDescriptor [|java:io:EmulatedFields$ObjectSlot|] @type direct;
#L08b8c8.   v2:= v3.[|java:io:EmulatedFields.slotsToSerialize|]   @type object;
#L08b8cc.   v2[v0]:= v1  @type object;
#L08b8d0.   v2:= v4[v0]  @type object;
#L08b8d4.   v1.[|java:io:EmulatedFields$ObjectSlot.field|]  := v2 @type object;
#L08b8d8.   v0:= v0 + 1;
#L08b8dc.   goto L08b8b8;
#L08b8de.   return @void ;

   }
    procedure [|java:io:EmulatedFields$ObjectSlot|] [|java:io:EmulatedFields.findMandatorySlot|] ([|java:io:EmulatedFields|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|java:lang:Class|] v6 @type (object)) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08b8f0.   call temp:=  [|java:io:EmulatedFields.findSlot|](v4, v5, v6) @signature [|Ljava/io/EmulatedFields;.findSlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08b8f6.   v0:= temp  @type object;
#L08b8f8.   if v0 == 0 then goto L08b918;
#L08b8fc.   if v6 != 0 then goto L08b95e;
#L08b900.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.field|]   @type object;
#L08b904.   call temp:=  [|java:io:ObjectStreamField.getType|](v1) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L08b90a.   v1:= temp  @type object;
#L08b90c.   call temp:=  [|java:lang:Class.isPrimitive|](v1) @signature [|Ljava/lang/Class;.isPrimitive:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L08b912.   v1:= temp;
#L08b914.   if v1 == 0 then goto L08b95e;
#L08b918.   v1:= new [|java:lang:IllegalArgumentException|];
#L08b91c.   v2:= new [|java:lang:StringBuilder|];
#L08b920.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08b926.   v3:= "no field '" @type (object, string);
#L08b92a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b930.   v2:= temp  @type object;
#L08b932.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b938.   v2:= temp  @type object;
#L08b93a.   v3:= "' of type " @type (object, string);
#L08b93e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b944.   v2:= temp  @type object;
#L08b946.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b94c.   v2:= temp  @type object;
#L08b94e.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08b954.   v2:= temp  @type object;
#L08b956.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08b95c.   throw v1;
#L08b95e.   return v0  @type object;

   }
    procedure [|java:io:EmulatedFields$ObjectSlot|] [|java:io:EmulatedFields.findSlot|] ([|java:io:EmulatedFields|] v6 @type (this), [|java:lang:String|] v7 @type (object), [|java:lang:Class|] v8 @type (object)) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.findSlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08b970.   v4:= 1  @length 4;
#L08b972.   if v8 == 0 then goto L08b9c6;
#L08b976.   call temp:=  [|java:lang:Class.isPrimitive|](v8) @signature [|Ljava/lang/Class;.isPrimitive:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L08b97c.   v5:= temp;
#L08b97e.   if v5 == 0 then goto L08b9c6;
#L08b982.   v2:= v4;
#L08b984.   v1:= 0  @length 4;
#L08b986.   v5:= v6.[|java:io:EmulatedFields.slotsToSerialize|]   @type object;
#L08b98a.   v5:= v5.length;
#L08b98c.   if v1 >= v5 then goto L08b9ec;
#L08b990.   v5:= v6.[|java:io:EmulatedFields.slotsToSerialize|]   @type object;
#L08b994.   v3:= v5[v1]  @type object;
#L08b998.   v5:= v3.[|java:io:EmulatedFields$ObjectSlot.field|]   @type object;
#L08b99c.   call temp:=  [|java:io:ObjectStreamField.getName|](v5) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L08b9a2.   v5:= temp  @type object;
#L08b9a4.   call temp:=  [|java:lang:String.equals|](v5, v7) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08b9aa.   v5:= temp;
#L08b9ac.   if v5 == 0 then goto L08b9e6;
#L08b9b0.   if v2 == 0 then goto L08b9ca;
#L08b9b4.   v5:= v3.[|java:io:EmulatedFields$ObjectSlot.field|]   @type object;
#L08b9b8.   call temp:=  [|java:io:ObjectStreamField.getType|](v5) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L08b9be.   v5:= temp  @type object;
#L08b9c0.   if v5 != v8 then goto L08b9e6;
#L08b9c4.   return v3  @type object;
#L08b9c6.   v2:= 0  @length 4;
#L08b9c8.   goto L08b984;
#L08b9ca.   if v8 == 0 then goto L08b9c4;
#L08b9ce.   v5:= v3.[|java:io:EmulatedFields$ObjectSlot.field|]   @type object;
#L08b9d2.   call temp:=  [|java:io:ObjectStreamField.getType|](v5) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L08b9d8.   v5:= temp  @type object;
#L08b9da.   call temp:=  [|java:lang:Class.isAssignableFrom|](v5, v8) @signature [|Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L08b9e0.   v5:= temp;
#L08b9e2.   if v5 != 0 then goto L08b9c4;
#L08b9e6.   v1:= v1 + 1;
#L08b9ea.   goto L08b986;
#L08b9ec.   v5:= v6.[|java:io:EmulatedFields.declaredFields|]   @type object;
#L08b9f0.   if v5 == 0 then goto L08ba5e;
#L08b9f4.   v1:= 0  @length 4;
#L08b9f6.   v5:= v6.[|java:io:EmulatedFields.declaredFields|]   @type object;
#L08b9fa.   v5:= v5.length;
#L08b9fc.   if v1 >= v5 then goto L08ba5e;
#L08ba00.   v5:= v6.[|java:io:EmulatedFields.declaredFields|]   @type object;
#L08ba04.   v0:= v5[v1]  @type object;
#L08ba08.   call temp:=  [|java:io:ObjectStreamField.getName|](v0) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L08ba0e.   v5:= temp  @type object;
#L08ba10.   call temp:=  [|java:lang:String.equals|](v5, v7) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ba16.   v5:= temp;
#L08ba18.   if v5 == 0 then goto L08ba58;
#L08ba1c.   if v2 == 0 then goto L08ba40;
#L08ba20.   call temp:=  [|java:io:ObjectStreamField.getType|](v0) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L08ba26.   v5:= temp  @type object;
#L08ba28.   if v8 != v5 then goto L08ba58;
#L08ba2c.   v3:= new [|java:io:EmulatedFields$ObjectSlot|];
#L08ba30.   call temp:=  [|java:io:EmulatedFields$ObjectSlot.<init>|](v3) @signature [|Ljava/io/EmulatedFields$ObjectSlot;.<init>:()V|] @classDescriptor [|java:io:EmulatedFields$ObjectSlot|] @type direct;
#L08ba36.   v3.[|java:io:EmulatedFields$ObjectSlot.field|]  := v0 @type object;
#L08ba3a.   v3.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v4 @boolean;
#L08ba3e.   goto L08b9c4;
#L08ba40.   if v8 == 0 then goto L08ba2c;
#L08ba44.   call temp:=  [|java:io:ObjectStreamField.getType|](v0) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L08ba4a.   v5:= temp  @type object;
#L08ba4c.   call temp:=  [|java:lang:Class.isAssignableFrom|](v5, v8) @signature [|Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L08ba52.   v5:= temp;
#L08ba54.   if v5 != 0 then goto L08ba2c;
#L08ba58.   v1:= v1 + 1;
#L08ba5c.   goto L08b9f6;
#L08ba5e.   v3:= 0  @length 4;
#L08ba60.   goto L08b9c4;

   }
    procedure [|boolean|] [|java:io:EmulatedFields.defaulted|] ([|java:io:EmulatedFields|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.defaulted:(Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08ba74.   v1:= 0  @length 4;
#L08ba76.   call temp:=  [|java:io:EmulatedFields.findSlot|](v4, v5, v1) @signature [|Ljava/io/EmulatedFields;.findSlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08ba7c.   v0:= temp  @type object;
#L08ba7e.   if v0 != 0 then goto L08bac0;
#L08ba82.   v1:= new [|java:lang:IllegalArgumentException|];
#L08ba86.   v2:= new [|java:lang:StringBuilder|];
#L08ba8a.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08ba90.   v3:= "no field '" @type (object, string);
#L08ba94.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08ba9a.   v2:= temp  @type object;
#L08ba9c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08baa2.   v2:= temp  @type object;
#L08baa4.   v3:= "'" @type (object, string);
#L08baa8.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08baae.   v2:= temp  @type object;
#L08bab0.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08bab6.   v2:= temp  @type object;
#L08bab8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08babe.   throw v1;
#L08bac0.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bac4.   return v1;

   }
    procedure [|byte|] [|java:io:EmulatedFields.get|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|byte|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;B)B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bad8.   v1:= @@[|java:lang:Byte.TYPE|]   @type object;
#L08badc.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bae2.   v0:= temp  @type object;
#L08bae4.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bae8.   if v1 == 0 then goto L08baee;
#L08baec.   return v4;
#L08baee.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08baf2.   v1:= ([|java:lang:Byte|])v1;
#L08baf6.   call temp:=  [|java:lang:Byte.byteValue|](v1) @signature [|Ljava/lang/Byte;.byteValue:()B|] @classDescriptor [|java:lang:Byte|] @type virtual;
#L08bafc.   v4:= temp;
#L08bafe.   goto L08baec;

   }
    procedure [|char|] [|java:io:EmulatedFields.get|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|char|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;C)C|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bb10.   v1:= @@[|java:lang:Character.TYPE|]   @type object;
#L08bb14.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bb1a.   v0:= temp  @type object;
#L08bb1c.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bb20.   if v1 == 0 then goto L08bb26;
#L08bb24.   return v4;
#L08bb26.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08bb2a.   v1:= ([|java:lang:Character|])v1;
#L08bb2e.   call temp:=  [|java:lang:Character.charValue|](v1) @signature [|Ljava/lang/Character;.charValue:()C|] @classDescriptor [|java:lang:Character|] @type virtual;
#L08bb34.   v4:= temp;
#L08bb36.   goto L08bb24;

   }
    procedure [|double|] [|java:io:EmulatedFields.get|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|double|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;D)D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bb48.   v1:= @@[|java:lang:Double.TYPE|]   @type object;
#L08bb4c.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bb52.   v0:= temp  @type object;
#L08bb54.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bb58.   if v1 == 0 then goto L08bb5e;
#L08bb5c.   return v4  @type wide;
#L08bb5e.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08bb62.   v1:= ([|java:lang:Double|])v1;
#L08bb66.   call temp:=  [|java:lang:Double.doubleValue|](v1) @signature [|Ljava/lang/Double;.doubleValue:()D|] @classDescriptor [|java:lang:Double|] @type virtual;
#L08bb6c.   v4:= temp  @type wide;
#L08bb6e.   goto L08bb5c;

   }
    procedure [|float|] [|java:io:EmulatedFields.get|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|float|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;F)F|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bb80.   v1:= @@[|java:lang:Float.TYPE|]   @type object;
#L08bb84.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bb8a.   v0:= temp  @type object;
#L08bb8c.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bb90.   if v1 == 0 then goto L08bb96;
#L08bb94.   return v4;
#L08bb96.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08bb9a.   v1:= ([|java:lang:Float|])v1;
#L08bb9e.   call temp:=  [|java:lang:Float.floatValue|](v1) @signature [|Ljava/lang/Float;.floatValue:()F|] @classDescriptor [|java:lang:Float|] @type virtual;
#L08bba4.   v4:= temp;
#L08bba6.   goto L08bb94;

   }
    procedure [|int|] [|java:io:EmulatedFields.get|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bbb8.   v1:= @@[|java:lang:Integer.TYPE|]   @type object;
#L08bbbc.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bbc2.   v0:= temp  @type object;
#L08bbc4.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bbc8.   if v1 == 0 then goto L08bbce;
#L08bbcc.   return v4;
#L08bbce.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08bbd2.   v1:= ([|java:lang:Integer|])v1;
#L08bbd6.   call temp:=  [|java:lang:Integer.intValue|](v1) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L08bbdc.   v4:= temp;
#L08bbde.   goto L08bbcc;

   }
    procedure [|long|] [|java:io:EmulatedFields.get|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|long|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bbf0.   v1:= @@[|java:lang:Long.TYPE|]   @type object;
#L08bbf4.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bbfa.   v0:= temp  @type object;
#L08bbfc.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bc00.   if v1 == 0 then goto L08bc06;
#L08bc04.   return v4  @type wide;
#L08bc06.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08bc0a.   v1:= ([|java:lang:Long|])v1;
#L08bc0e.   call temp:=  [|java:lang:Long.longValue|](v1) @signature [|Ljava/lang/Long;.longValue:()J|] @classDescriptor [|java:lang:Long|] @type virtual;
#L08bc14.   v4:= temp  @type wide;
#L08bc16.   goto L08bc04;

   }
    procedure [|java:lang:Object|] [|java:io:EmulatedFields.get|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bc28.   v1:= 0  @length 4;
#L08bc2a.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bc30.   v0:= temp  @type object;
#L08bc32.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bc36.   if v1 == 0 then goto L08bc3c;
#L08bc3a.   return v4  @type object;
#L08bc3c.   v4:= v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08bc40.   goto L08bc3a;

   }
    procedure [|short|] [|java:io:EmulatedFields.get|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|short|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;S)S|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bc54.   v1:= @@[|java:lang:Short.TYPE|]   @type object;
#L08bc58.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bc5e.   v0:= temp  @type object;
#L08bc60.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bc64.   if v1 == 0 then goto L08bc6a;
#L08bc68.   return v4;
#L08bc6a.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08bc6e.   v1:= ([|java:lang:Short|])v1;
#L08bc72.   call temp:=  [|java:lang:Short.shortValue|](v1) @signature [|Ljava/lang/Short;.shortValue:()S|] @classDescriptor [|java:lang:Short|] @type virtual;
#L08bc78.   v4:= temp;
#L08bc7a.   goto L08bc68;

   }
    procedure [|boolean|] [|java:io:EmulatedFields.get|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|boolean|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;Z)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bc8c.   v1:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L08bc90.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bc96.   v0:= temp  @type object;
#L08bc98.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]   @boolean;
#L08bc9c.   if v1 == 0 then goto L08bca2;
#L08bca0.   return v4;
#L08bca2.   v1:= v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]   @type object;
#L08bca6.   v1:= ([|java:lang:Boolean|])v1;
#L08bcaa.   call temp:=  [|java:lang:Boolean.booleanValue|](v1) @signature [|Ljava/lang/Boolean;.booleanValue:()Z|] @classDescriptor [|java:lang:Boolean|] @type virtual;
#L08bcb0.   v4:= temp;
#L08bcb2.   goto L08bca0;

   }
    procedure [|void|] [|java:io:EmulatedFields.put|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|byte|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bcc4.   v1:= @@[|java:lang:Byte.TYPE|]   @type object;
#L08bcc8.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bcce.   v0:= temp  @type object;
#L08bcd0.   call temp:=  [|java:lang:Byte.valueOf|](v4) @signature [|Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;|] @classDescriptor [|java:lang:Byte|] @type static;
#L08bcd6.   v1:= temp  @type object;
#L08bcd8.   v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v1 @type object;
#L08bcdc.   v1:= 0  @length 4;
#L08bcde.   v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v1 @boolean;
#L08bce2.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFields.put|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|char|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bcf4.   v1:= @@[|java:lang:Character.TYPE|]   @type object;
#L08bcf8.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bcfe.   v0:= temp  @type object;
#L08bd00.   call temp:=  [|java:lang:Character.valueOf|](v4) @signature [|Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;|] @classDescriptor [|java:lang:Character|] @type static;
#L08bd06.   v1:= temp  @type object;
#L08bd08.   v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v1 @type object;
#L08bd0c.   v1:= 0  @length 4;
#L08bd0e.   v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v1 @boolean;
#L08bd12.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFields.put|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|double|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;D)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bd24.   v1:= @@[|java:lang:Double.TYPE|]   @type object;
#L08bd28.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bd2e.   v0:= temp  @type object;
#L08bd30.   call temp:=  [|java:lang:Double.valueOf|](v4, v5) @signature [|Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;|] @classDescriptor [|java:lang:Double|] @type static;
#L08bd36.   v1:= temp  @type object;
#L08bd38.   v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v1 @type object;
#L08bd3c.   v1:= 0  @length 4;
#L08bd3e.   v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v1 @boolean;
#L08bd42.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFields.put|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|float|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;F)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bd54.   v1:= @@[|java:lang:Float.TYPE|]   @type object;
#L08bd58.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bd5e.   v0:= temp  @type object;
#L08bd60.   call temp:=  [|java:lang:Float.valueOf|](v4) @signature [|Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;|] @classDescriptor [|java:lang:Float|] @type static;
#L08bd66.   v1:= temp  @type object;
#L08bd68.   v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v1 @type object;
#L08bd6c.   v1:= 0  @length 4;
#L08bd6e.   v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v1 @boolean;
#L08bd72.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFields.put|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bd84.   v1:= @@[|java:lang:Integer.TYPE|]   @type object;
#L08bd88.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bd8e.   v0:= temp  @type object;
#L08bd90.   call temp:=  [|java:lang:Integer.valueOf|](v4) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L08bd96.   v1:= temp  @type object;
#L08bd98.   v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v1 @type object;
#L08bd9c.   v1:= 0  @length 4;
#L08bd9e.   v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v1 @boolean;
#L08bda2.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFields.put|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|long|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08bdb4.   v1:= @@[|java:lang:Long.TYPE|]   @type object;
#L08bdb8.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bdbe.   v0:= temp  @type object;
#L08bdc0.   call temp:=  [|java:lang:Long.valueOf|](v4, v5) @signature [|Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;|] @classDescriptor [|java:lang:Long|] @type static;
#L08bdc6.   v1:= temp  @type object;
#L08bdc8.   v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v1 @type object;
#L08bdcc.   v1:= 0  @length 4;
#L08bdce.   v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v1 @boolean;
#L08bdd2.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFields.put|] ([|java:io:EmulatedFields|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08bde4.   v1:= 0  @length 4;
#L08bde6.   if v5 == 0 then goto L08bdf2;
#L08bdea.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L08bdf0.   v1:= temp  @type object;
#L08bdf2.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v3, v4, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08bdf8.   v0:= temp  @type object;
#L08bdfa.   v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v5 @type object;
#L08bdfe.   v2:= 0  @length 4;
#L08be00.   v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v2 @boolean;
#L08be04.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFields.put|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|short|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;S)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08be18.   v1:= @@[|java:lang:Short.TYPE|]   @type object;
#L08be1c.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08be22.   v0:= temp  @type object;
#L08be24.   call temp:=  [|java:lang:Short.valueOf|](v4) @signature [|Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;|] @classDescriptor [|java:lang:Short|] @type static;
#L08be2a.   v1:= temp  @type object;
#L08be2c.   v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v1 @type object;
#L08be30.   v1:= 0  @length 4;
#L08be32.   v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v1 @boolean;
#L08be36.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFields.put|] ([|java:io:EmulatedFields|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|boolean|] v4) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08be48.   v1:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L08be4c.   call temp:=  [|java:io:EmulatedFields.findMandatorySlot|](v2, v3, v1) @signature [|Ljava/io/EmulatedFields;.findMandatorySlot:(Ljava/lang/String;Ljava/lang/Class;)Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08be52.   v0:= temp  @type object;
#L08be54.   call temp:=  [|java:lang:Boolean.valueOf|](v4) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L08be5a.   v1:= temp  @type object;
#L08be5c.   v0.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v1 @type object;
#L08be60.   v1:= 0  @length 4;
#L08be62.   v0.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v1 @boolean;
#L08be66.   return @void ;

   }
    procedure [|java:io:EmulatedFields$ObjectSlot|][] [|java:io:EmulatedFields.slots|] ([|java:io:EmulatedFields|] v1 @type (this)) @owner [|java:io:EmulatedFields|] @signature [|Ljava/io/EmulatedFields;.slots:()[Ljava/io/EmulatedFields$ObjectSlot;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08be78.   v0:= v1.[|java:io:EmulatedFields.slotsToSerialize|]   @type object;
#L08be7c.   return v0  @type object;

   }
record [|java:io:ObjectOutputStream$PutField|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.<init>|] ([|java:io:ObjectOutputStream$PutField|] v0 @type (this)) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08be90.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08be96.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.put|] ([|java:lang:String|] v0 @type (object), [|byte|] v1) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.put|] ([|java:lang:String|] v0 @type (object), [|char|] v1) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.put|] ([|java:lang:String|] v0 @type (object), [|double|] v1) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;D)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.put|] ([|java:lang:String|] v0 @type (object), [|float|] v1) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;F)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.put|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.put|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.put|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.put|] ([|java:lang:String|] v0 @type (object), [|short|] v1) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;S)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.put|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutputStream$PutField.write|] ([|java:io:ObjectOutput|] v0 @type (object)) @owner [|java:io:ObjectOutputStream$PutField|] @signature [|Ljava/io/ObjectOutputStream$PutField;.write:(Ljava/io/ObjectOutput;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:EmulatedFieldsForDumping|]  @type class @AccessFlag   extends [|java:io:ObjectOutputStream$PutField|] {
      [|java:io:EmulatedFields|] [|java:io:EmulatedFieldsForDumping.emulatedFields|]    @AccessFlag PRIVATE;
      [|java:io:ObjectOutputStream|] [|java:io:EmulatedFieldsForDumping.oos|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.<init>|] ([|java:io:EmulatedFieldsForDumping|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object), [|java:io:ObjectStreamClass|] v5 @type (object)) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.<init>:(Ljava/io/ObjectOutputStream;Ljava/io/ObjectStreamClass;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08bea8.   call temp:=  [|java:io:ObjectOutputStream$PutField.<init>|](v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.<init>:()V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type direct;
#L08beae.   v3.[|java:io:EmulatedFieldsForDumping.oos|]  := v4 @type object;
#L08beb2.   v1:= new [|java:io:EmulatedFields|];
#L08beb6.   call temp:=  [|java:io:ObjectStreamClass.fields|](v5) @signature [|Ljava/io/ObjectStreamClass;.fields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L08bebc.   v2:= temp  @type object;
#L08bebe.   v0:= 0  @length 4;
#L08bec0.   v0:= ([|java:io:ObjectStreamField|][])v0;
#L08bec4.   call temp:=  [|java:io:EmulatedFields.<init>|](v1, v2, v0) @signature [|Ljava/io/EmulatedFields;.<init>:([Ljava/io/ObjectStreamField;[Ljava/io/ObjectStreamField;)V|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08beca.   v3.[|java:io:EmulatedFieldsForDumping.emulatedFields|]  := v1 @type object;
#L08bece.   return @void ;

   }
    procedure [|java:io:EmulatedFields|] [|java:io:EmulatedFieldsForDumping.emulatedFields|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this)) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.emulatedFields:()Ljava/io/EmulatedFields;|] @Access  {
      local temp ;
        v0;
      
#L08bee0.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08bee4.   return v0  @type object;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.put|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|byte|] v3) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.put:(Ljava/lang/String;B)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08bef8.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08befc.   call temp:=  [|java:io:EmulatedFields.put|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;B)V|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08bf02.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.put|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|char|] v3) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.put:(Ljava/lang/String;C)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08bf14.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08bf18.   call temp:=  [|java:io:EmulatedFields.put|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08bf1e.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.put|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|double|] v3) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.put:(Ljava/lang/String;D)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08bf30.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08bf34.   call temp:=  [|java:io:EmulatedFields.put|](v0, v2, v3, v4) @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;D)V|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08bf3a.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.put|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|float|] v3) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.put:(Ljava/lang/String;F)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08bf4c.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08bf50.   call temp:=  [|java:io:EmulatedFields.put|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;F)V|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08bf56.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.put|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.put:(Ljava/lang/String;I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08bf68.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08bf6c.   call temp:=  [|java:io:EmulatedFields.put|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08bf72.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.put|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|long|] v3) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.put:(Ljava/lang/String;J)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08bf84.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08bf88.   call temp:=  [|java:io:EmulatedFields.put|](v0, v2, v3, v4) @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;J)V|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08bf8e.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.put|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08bfa0.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08bfa4.   call temp:=  [|java:io:EmulatedFields.put|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08bfaa.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.put|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|short|] v3) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.put:(Ljava/lang/String;S)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08bfbc.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08bfc0.   call temp:=  [|java:io:EmulatedFields.put|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;S)V|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08bfc6.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.put|] ([|java:io:EmulatedFieldsForDumping|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|boolean|] v3) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.put:(Ljava/lang/String;Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08bfd8.   v0:= v1.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08bfdc.   call temp:=  [|java:io:EmulatedFields.put|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.put:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08bfe2.   return @void ;

   }
    procedure [|void|] [|java:io:EmulatedFieldsForDumping.write|] ([|java:io:EmulatedFieldsForDumping|] v10 @type (this), [|java:io:ObjectOutput|] v11 @type (object)) @owner [|java:io:EmulatedFieldsForDumping|] @signature [|Ljava/io/EmulatedFieldsForDumping;.write:(Ljava/io/ObjectOutput;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L08bff4.   v7:= 0  @length 4;
#L08bff6.   v6:= v10.[|java:io:EmulatedFieldsForDumping.oos|]   @type object;
#L08bffa.   call temp:=  [|java:lang:Object.equals|](v11, v6) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L08c000.   v6:= temp;
#L08c002.   if v6 != 0 then goto L08c016;
#L08c006.   v6:= new [|java:lang:IllegalArgumentException|];
#L08c00a.   v7:= "Attempting to write to a different stream than the one that created this PutField" @type (object, string);
#L08c00e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08c014.   throw v6;
#L08c016.   v6:= v10.[|java:io:EmulatedFieldsForDumping.emulatedFields|]   @type object;
#L08c01a.   call temp:=  [|java:io:EmulatedFields.slots|](v6) @signature [|Ljava/io/EmulatedFields;.slots:()[Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c020.   v0:= temp  @type object;
#L08c022.   v3:= v0.length;
#L08c024.   v2:= 0  @length 4;
#L08c026.   if v2 >= v3 then goto L08c17a;
#L08c02a.   v4:= v0[v2]  @type object;
#L08c02e.   call temp:=  [|java:io:EmulatedFields$ObjectSlot.getFieldValue|](v4) @signature [|Ljava/io/EmulatedFields$ObjectSlot;.getFieldValue:()Ljava/lang/Object;|] @classDescriptor [|java:io:EmulatedFields$ObjectSlot|] @type virtual;
#L08c034.   v1:= temp  @type object;
#L08c036.   call temp:=  [|java:io:EmulatedFields$ObjectSlot.getField|](v4) @signature [|Ljava/io/EmulatedFields$ObjectSlot;.getField:()Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:EmulatedFields$ObjectSlot|] @type virtual;
#L08c03c.   v6:= temp  @type object;
#L08c03e.   call temp:=  [|java:io:ObjectStreamField.getType|](v6) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L08c044.   v5:= temp  @type object;
#L08c046.   v6:= @@[|java:lang:Integer.TYPE|]   @type object;
#L08c04a.   if v5 != v6 then goto L08c06e;
#L08c04e.   if v1 == 0 then goto L08c06a;
#L08c052.   v1:= ([|java:lang:Integer|])v1;
#L08c056.   call temp:=  [|java:lang:Integer.intValue|](v1) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L08c05c.   v6:= temp;
#L08c05e.   call temp:=  [|java:io:ObjectOutput.writeInt|](v11, v6) @signature [|Ljava/io/ObjectOutput;.writeInt:(I)V|] @classDescriptor [|java:io:ObjectOutput|] @type interface;
#L08c064.   v2:= v2 + 1;
#L08c068.   goto L08c026;
#L08c06a.   v6:= v7;
#L08c06c.   goto L08c05e;
#L08c06e.   v6:= @@[|java:lang:Byte.TYPE|]   @type object;
#L08c072.   if v5 != v6 then goto L08c092;
#L08c076.   if v1 == 0 then goto L08c08e;
#L08c07a.   v1:= ([|java:lang:Byte|])v1;
#L08c07e.   call temp:=  [|java:lang:Byte.byteValue|](v1) @signature [|Ljava/lang/Byte;.byteValue:()B|] @classDescriptor [|java:lang:Byte|] @type virtual;
#L08c084.   v6:= temp;
#L08c086.   call temp:=  [|java:io:ObjectOutput.writeByte|](v11, v6) @signature [|Ljava/io/ObjectOutput;.writeByte:(I)V|] @classDescriptor [|java:io:ObjectOutput|] @type interface;
#L08c08c.   goto L08c064;
#L08c08e.   v6:= v7;
#L08c090.   goto L08c086;
#L08c092.   v6:= @@[|java:lang:Character.TYPE|]   @type object;
#L08c096.   if v5 != v6 then goto L08c0b6;
#L08c09a.   if v1 == 0 then goto L08c0b2;
#L08c09e.   v1:= ([|java:lang:Character|])v1;
#L08c0a2.   call temp:=  [|java:lang:Character.charValue|](v1) @signature [|Ljava/lang/Character;.charValue:()C|] @classDescriptor [|java:lang:Character|] @type virtual;
#L08c0a8.   v6:= temp;
#L08c0aa.   call temp:=  [|java:io:ObjectOutput.writeChar|](v11, v6) @signature [|Ljava/io/ObjectOutput;.writeChar:(I)V|] @classDescriptor [|java:io:ObjectOutput|] @type interface;
#L08c0b0.   goto L08c064;
#L08c0b2.   v6:= v7;
#L08c0b4.   goto L08c0aa;
#L08c0b6.   v6:= @@[|java:lang:Short.TYPE|]   @type object;
#L08c0ba.   if v5 != v6 then goto L08c0da;
#L08c0be.   if v1 == 0 then goto L08c0d6;
#L08c0c2.   v1:= ([|java:lang:Short|])v1;
#L08c0c6.   call temp:=  [|java:lang:Short.shortValue|](v1) @signature [|Ljava/lang/Short;.shortValue:()S|] @classDescriptor [|java:lang:Short|] @type virtual;
#L08c0cc.   v6:= temp;
#L08c0ce.   call temp:=  [|java:io:ObjectOutput.writeShort|](v11, v6) @signature [|Ljava/io/ObjectOutput;.writeShort:(I)V|] @classDescriptor [|java:io:ObjectOutput|] @type interface;
#L08c0d4.   goto L08c064;
#L08c0d6.   v6:= v7;
#L08c0d8.   goto L08c0ce;
#L08c0da.   v6:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L08c0de.   if v5 != v6 then goto L08c0fe;
#L08c0e2.   if v1 == 0 then goto L08c0fa;
#L08c0e6.   v1:= ([|java:lang:Boolean|])v1;
#L08c0ea.   call temp:=  [|java:lang:Boolean.booleanValue|](v1) @signature [|Ljava/lang/Boolean;.booleanValue:()Z|] @classDescriptor [|java:lang:Boolean|] @type virtual;
#L08c0f0.   v6:= temp;
#L08c0f2.   call temp:=  [|java:io:ObjectOutput.writeBoolean|](v11, v6) @signature [|Ljava/io/ObjectOutput;.writeBoolean:(Z)V|] @classDescriptor [|java:io:ObjectOutput|] @type interface;
#L08c0f8.   goto L08c064;
#L08c0fa.   v6:= v7;
#L08c0fc.   goto L08c0f2;
#L08c0fe.   v6:= @@[|java:lang:Long.TYPE|]   @type object;
#L08c102.   if v5 != v6 then goto L08c124;
#L08c106.   if v1 == 0 then goto L08c11e;
#L08c10a.   v1:= ([|java:lang:Long|])v1;
#L08c10e.   call temp:=  [|java:lang:Long.longValue|](v1) @signature [|Ljava/lang/Long;.longValue:()J|] @classDescriptor [|java:lang:Long|] @type virtual;
#L08c114.   v8:= temp  @type wide;
#L08c116.   call temp:=  [|java:io:ObjectOutput.writeLong|](v11, v8, v9) @signature [|Ljava/io/ObjectOutput;.writeLong:(J)V|] @classDescriptor [|java:io:ObjectOutput|] @type interface;
#L08c11c.   goto L08c064;
#L08c11e.   v8:= 0  @length wide16;
#L08c122.   goto L08c116;
#L08c124.   v6:= @@[|java:lang:Float.TYPE|]   @type object;
#L08c128.   if v5 != v6 then goto L08c148;
#L08c12c.   if v1 == 0 then goto L08c144;
#L08c130.   v1:= ([|java:lang:Float|])v1;
#L08c134.   call temp:=  [|java:lang:Float.floatValue|](v1) @signature [|Ljava/lang/Float;.floatValue:()F|] @classDescriptor [|java:lang:Float|] @type virtual;
#L08c13a.   v6:= temp;
#L08c13c.   call temp:=  [|java:io:ObjectOutput.writeFloat|](v11, v6) @signature [|Ljava/io/ObjectOutput;.writeFloat:(F)V|] @classDescriptor [|java:io:ObjectOutput|] @type interface;
#L08c142.   goto L08c064;
#L08c144.   v6:= 0  @length 4;
#L08c146.   goto L08c13c;
#L08c148.   v6:= @@[|java:lang:Double.TYPE|]   @type object;
#L08c14c.   if v5 != v6 then goto L08c170;
#L08c150.   if v1 == 0 then goto L08c16a;
#L08c154.   v1:= ([|java:lang:Double|])v1;
#L08c158.   call temp:=  [|java:lang:Double.doubleValue|](v1) @signature [|Ljava/lang/Double;.doubleValue:()D|] @classDescriptor [|java:lang:Double|] @type virtual;
#L08c15e.   v8:= temp  @type wide;
#L08c160.   call temp:=  [|java:io:ObjectOutput.writeDouble|](v11, v8, v9) @signature [|Ljava/io/ObjectOutput;.writeDouble:(D)V|] @classDescriptor [|java:io:ObjectOutput|] @type interface;
#L08c166.   goto L08c064;
#L08c16a.   v8:= 0  @length wide16;
#L08c16e.   goto L08c160;
#L08c170.   call temp:=  [|java:io:ObjectOutput.writeObject|](v11, v1) @signature [|Ljava/io/ObjectOutput;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutput|] @type interface;
#L08c176.   goto L08c064;
#L08c17a.   return @void ;

   }
record [|java:io:ObjectInputStream$GetField|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:io:ObjectInputStream$GetField.<init>|] ([|java:io:ObjectInputStream$GetField|] v0 @type (this)) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08c18c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08c192.   return @void ;

   }
    procedure [|boolean|] [|java:io:ObjectInputStream$GetField.defaulted|] ([|java:lang:String|] v0 @type (object)) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.defaulted:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|] [|java:io:ObjectInputStream$GetField.get|] ([|java:lang:String|] v0 @type (object), [|byte|] v1) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;B)B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|char|] [|java:io:ObjectInputStream$GetField.get|] ([|java:lang:String|] v0 @type (object), [|char|] v1) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|double|] [|java:io:ObjectInputStream$GetField.get|] ([|java:lang:String|] v0 @type (object), [|double|] v1) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;D)D|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|float|] [|java:io:ObjectInputStream$GetField.get|] ([|java:lang:String|] v0 @type (object), [|float|] v1) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;F)F|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:io:ObjectInputStream$GetField.get|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:io:ObjectInputStream$GetField.get|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;J)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream$GetField.get|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|short|] [|java:io:ObjectInputStream$GetField.get|] ([|java:lang:String|] v0 @type (object), [|short|] v1) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;S)S|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:io:ObjectInputStream$GetField.get|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1) @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Z)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectInputStream$GetField.getObjectStreamClass|] () @owner [|java:io:ObjectInputStream$GetField|] @signature [|Ljava/io/ObjectInputStream$GetField;.getObjectStreamClass:()Ljava/io/ObjectStreamClass;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:EmulatedFieldsForLoading|]  @type class @AccessFlag   extends [|java:io:ObjectInputStream$GetField|] {
      [|java:io:EmulatedFields|] [|java:io:EmulatedFieldsForLoading.emulatedFields|]    @AccessFlag PRIVATE;
      [|java:io:ObjectStreamClass|] [|java:io:EmulatedFieldsForLoading.streamClass|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:EmulatedFieldsForLoading.<init>|] ([|java:io:EmulatedFieldsForLoading|] v3 @type (this), [|java:io:ObjectStreamClass|] v4 @type (object)) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.<init>:(Ljava/io/ObjectStreamClass;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08c1a4.   call temp:=  [|java:io:ObjectInputStream$GetField.<init>|](v3) @signature [|Ljava/io/ObjectInputStream$GetField;.<init>:()V|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type direct;
#L08c1aa.   v3.[|java:io:EmulatedFieldsForLoading.streamClass|]  := v4 @type object;
#L08c1ae.   v0:= new [|java:io:EmulatedFields|];
#L08c1b2.   call temp:=  [|java:io:ObjectStreamClass.getLoadFields|](v4) @signature [|Ljava/io/ObjectStreamClass;.getLoadFields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L08c1b8.   v1:= temp  @type object;
#L08c1ba.   call temp:=  [|java:io:ObjectStreamClass.fields|](v4) @signature [|Ljava/io/ObjectStreamClass;.fields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L08c1c0.   v2:= temp  @type object;
#L08c1c2.   call temp:=  [|java:io:EmulatedFields.<init>|](v0, v1, v2) @signature [|Ljava/io/EmulatedFields;.<init>:([Ljava/io/ObjectStreamField;[Ljava/io/ObjectStreamField;)V|] @classDescriptor [|java:io:EmulatedFields|] @type direct;
#L08c1c8.   v3.[|java:io:EmulatedFieldsForLoading.emulatedFields|]  := v0 @type object;
#L08c1cc.   return @void ;

   }
    procedure [|boolean|] [|java:io:EmulatedFieldsForLoading.defaulted|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.defaulted:(Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08c1e0.   v0:= v1.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c1e4.   call temp:=  [|java:io:EmulatedFields.defaulted|](v0, v2) @signature [|Ljava/io/EmulatedFields;.defaulted:(Ljava/lang/String;)Z|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c1ea.   v0:= temp;
#L08c1ec.   return v0;

   }
    procedure [|java:io:EmulatedFields|] [|java:io:EmulatedFieldsForLoading.emulatedFields|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this)) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.emulatedFields:()Ljava/io/EmulatedFields;|] @Access  {
      local temp ;
        v0;
      
#L08c200.   v0:= v1.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c204.   return v0  @type object;

   }
    procedure [|byte|] [|java:io:EmulatedFieldsForLoading.get|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|byte|] v3) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.get:(Ljava/lang/String;B)B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08c218.   v0:= v1.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c21c.   call temp:=  [|java:io:EmulatedFields.get|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;B)B|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c222.   v0:= temp;
#L08c224.   return v0;

   }
    procedure [|char|] [|java:io:EmulatedFieldsForLoading.get|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|char|] v3) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.get:(Ljava/lang/String;C)C|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08c238.   v0:= v1.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c23c.   call temp:=  [|java:io:EmulatedFields.get|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c242.   v0:= temp;
#L08c244.   return v0;

   }
    procedure [|double|] [|java:io:EmulatedFieldsForLoading.get|] ([|java:io:EmulatedFieldsForLoading|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|double|] v4) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.get:(Ljava/lang/String;D)D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08c258.   v0:= v2.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c25c.   call temp:=  [|java:io:EmulatedFields.get|](v0, v3, v4, v5) @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;D)D|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c262.   v0:= temp  @type wide;
#L08c264.   return v0  @type wide;

   }
    procedure [|float|] [|java:io:EmulatedFieldsForLoading.get|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|float|] v3) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.get:(Ljava/lang/String;F)F|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08c278.   v0:= v1.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c27c.   call temp:=  [|java:io:EmulatedFields.get|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;F)F|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c282.   v0:= temp;
#L08c284.   return v0;

   }
    procedure [|int|] [|java:io:EmulatedFieldsForLoading.get|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.get:(Ljava/lang/String;I)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08c298.   v0:= v1.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c29c.   call temp:=  [|java:io:EmulatedFields.get|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c2a2.   v0:= temp;
#L08c2a4.   return v0;

   }
    procedure [|long|] [|java:io:EmulatedFieldsForLoading.get|] ([|java:io:EmulatedFieldsForLoading|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|long|] v4) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.get:(Ljava/lang/String;J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08c2b8.   v0:= v2.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c2bc.   call temp:=  [|java:io:EmulatedFields.get|](v0, v3, v4, v5) @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;J)J|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c2c2.   v0:= temp  @type wide;
#L08c2c4.   return v0  @type wide;

   }
    procedure [|java:lang:Object|] [|java:io:EmulatedFieldsForLoading.get|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08c2d8.   v0:= v1.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c2dc.   call temp:=  [|java:io:EmulatedFields.get|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c2e2.   v0:= temp  @type object;
#L08c2e4.   return v0  @type object;

   }
    procedure [|short|] [|java:io:EmulatedFieldsForLoading.get|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|short|] v3) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.get:(Ljava/lang/String;S)S|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08c2f8.   v0:= v1.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c2fc.   call temp:=  [|java:io:EmulatedFields.get|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;S)S|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c302.   v0:= temp;
#L08c304.   return v0;

   }
    procedure [|boolean|] [|java:io:EmulatedFieldsForLoading.get|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|boolean|] v3) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.get:(Ljava/lang/String;Z)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08c318.   v0:= v1.[|java:io:EmulatedFieldsForLoading.emulatedFields|]   @type object;
#L08c31c.   call temp:=  [|java:io:EmulatedFields.get|](v0, v2, v3) @signature [|Ljava/io/EmulatedFields;.get:(Ljava/lang/String;Z)Z|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L08c322.   v0:= temp;
#L08c324.   return v0;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:EmulatedFieldsForLoading.getObjectStreamClass|] ([|java:io:EmulatedFieldsForLoading|] v1 @type (this)) @owner [|java:io:EmulatedFieldsForLoading|] @signature [|Ljava/io/EmulatedFieldsForLoading;.getObjectStreamClass:()Ljava/io/ObjectStreamClass;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08c338.   v0:= v1.[|java:io:EmulatedFieldsForLoading.streamClass|]   @type object;
#L08c33c.   return v0  @type object;

   }
record [|java:io:Externalizable|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:io:Serializable|] {
   }
    procedure [|void|] [|java:io:Externalizable.readExternal|] ([|java:io:ObjectInput|] v0 @type (object)) @owner [|java:io:Externalizable|] @signature [|Ljava/io/Externalizable;.readExternal:(Ljava/io/ObjectInput;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:Externalizable.writeExternal|] ([|java:io:ObjectOutput|] v0 @type (object)) @owner [|java:io:Externalizable|] @signature [|Ljava/io/Externalizable;.writeExternal:(Ljava/io/ObjectOutput;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:File|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|], [|java:lang:Comparable|] {
      [|java:lang:String|] [|java:io:File.path|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:String|] @@[|java:io:File.pathSeparator|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|char|] @@[|java:io:File.pathSeparatorChar|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:io:File.separator|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|char|] @@[|java:io:File.separatorChar|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:io:File.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:Random|] @@[|java:io:File.tempFileRandom|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:File.<clinit>|] () @owner [|java:io:File|] @signature [|Ljava/io/File;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08c350.   v2:= 0  @length 4;
#L08c352.   v0:= new [|java:util:Random|];
#L08c356.   call temp:=  [|java:util:Random.<init>|](v0) @signature [|Ljava/util/Random;.<init>:()V|] @classDescriptor [|java:util:Random|] @type direct;
#L08c35c.   @@[|java:io:File.tempFileRandom|] := v0  @type object;
#L08c360.   v0:= "file.separator" @type (object, string);
#L08c364.   v1:= "/" @type (object, string);
#L08c368.   call temp:=  [|java:lang:System.getProperty|](v0, v1) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L08c36e.   v0:= temp  @type object;
#L08c370.   call temp:=  [|java:lang:String.charAt|](v0, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c376.   v0:= temp;
#L08c378.   @@[|java:io:File.separatorChar|] := v0  @char;
#L08c37c.   v0:= "path.separator" @type (object, string);
#L08c380.   v1:= ":" @type (object, string);
#L08c384.   call temp:=  [|java:lang:System.getProperty|](v0, v1) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L08c38a.   v0:= temp  @type object;
#L08c38c.   call temp:=  [|java:lang:String.charAt|](v0, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c392.   v0:= temp;
#L08c394.   @@[|java:io:File.pathSeparatorChar|] := v0  @char;
#L08c398.   v0:= @@[|java:io:File.separatorChar|]   @char;
#L08c39c.   call temp:=  [|java:lang:String.valueOf|](v0) @signature [|Ljava/lang/String;.valueOf:(C)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08c3a2.   v0:= temp  @type object;
#L08c3a4.   @@[|java:io:File.separator|] := v0  @type object;
#L08c3a8.   v0:= @@[|java:io:File.pathSeparatorChar|]   @char;
#L08c3ac.   call temp:=  [|java:lang:String.valueOf|](v0) @signature [|Ljava/lang/String;.valueOf:(C)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L08c3b2.   v0:= temp  @type object;
#L08c3b4.   @@[|java:io:File.pathSeparator|] := v0  @type object;
#L08c3b8.   return @void ;

   }
    procedure [|void|] [|java:io:File.<init>|] ([|java:io:File|] v1 @type (this), [|java:io:File|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08c3cc.   if v2 != 0 then goto L08c3da;
#L08c3d0.   v0:= 0  @length 4;
#L08c3d2.   call temp:=  [|java:io:File.<init>|](v1, v0, v3) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08c3d8.   return @void ;
#L08c3da.   call temp:=  [|java:io:File.getPath|](v2) @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08c3e0.   v0:= temp  @type object;
#L08c3e2.   goto L08c3d2;

   }
    procedure [|void|] [|java:io:File.<init>|] ([|java:io:File|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08c3f4.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08c3fa.   call temp:=  [|java:io:File.fixSlashes|](v2) @signature [|Ljava/io/File;.fixSlashes:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08c400.   v0:= temp  @type object;
#L08c402.   v1.[|java:io:File.path|]  := v0 @type object;
#L08c406.   return @void ;

   }
    procedure [|void|] [|java:io:File.<init>|] ([|java:io:File|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08c418.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08c41e.   if v4 != 0 then goto L08c432;
#L08c422.   v0:= new [|java:lang:NullPointerException|];
#L08c426.   v1:= "name == null" @type (object, string);
#L08c42a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08c430.   throw v0;
#L08c432.   if v3 == 0 then goto L08c442;
#L08c436.   call temp:=  [|java:lang:String.isEmpty|](v3) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c43c.   v0:= temp;
#L08c43e.   if v0 == 0 then goto L08c450;
#L08c442.   call temp:=  [|java:io:File.fixSlashes|](v4) @signature [|Ljava/io/File;.fixSlashes:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08c448.   v0:= temp  @type object;
#L08c44a.   v2.[|java:io:File.path|]  := v0 @type object;
#L08c44e.   return @void ;
#L08c450.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c456.   v0:= temp;
#L08c458.   if v0 == 0 then goto L08c46a;
#L08c45c.   call temp:=  [|java:io:File.fixSlashes|](v3) @signature [|Ljava/io/File;.fixSlashes:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08c462.   v0:= temp  @type object;
#L08c464.   v2.[|java:io:File.path|]  := v0 @type object;
#L08c468.   goto L08c44e;
#L08c46a.   call temp:=  [|java:io:File.join|](v3, v4) @signature [|Ljava/io/File;.join:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08c470.   v0:= temp  @type object;
#L08c472.   call temp:=  [|java:io:File.fixSlashes|](v0) @signature [|Ljava/io/File;.fixSlashes:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08c478.   v0:= temp  @type object;
#L08c47a.   v2.[|java:io:File.path|]  := v0 @type object;
#L08c47e.   goto L08c44e;

   }
    procedure [|void|] [|java:io:File.<init>|] ([|java:io:File|] v1 @type (this), [|java:net:URI|] v2 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.<init>:(Ljava/net/URI;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08c490.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08c496.   call temp:=  [|java:io:File.checkURI|](v2) @signature [|Ljava/io/File;.checkURI:(Ljava/net/URI;)V|] @classDescriptor [|java:io:File|] @type static;
#L08c49c.   call temp:=  [|java:net:URI.getPath|](v2) @signature [|Ljava/net/URI;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L08c4a2.   v0:= temp  @type object;
#L08c4a4.   call temp:=  [|java:io:File.fixSlashes|](v0) @signature [|Ljava/io/File;.fixSlashes:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08c4aa.   v0:= temp  @type object;
#L08c4ac.   v1.[|java:io:File.path|]  := v0 @type object;
#L08c4b0.   return @void ;

   }
    procedure [|void|] [|java:io:File.checkURI|] ([|java:net:URI|] v4 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.checkURI:(Ljava/net/URI;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08c4c4.   call temp:=  [|java:net:URI.isAbsolute|](v4) @signature [|Ljava/net/URI;.isAbsolute:()Z|] @classDescriptor [|java:net:URI|] @type virtual;
#L08c4ca.   v1:= temp;
#L08c4cc.   if v1 != 0 then goto L08c502;
#L08c4d0.   v1:= new [|java:lang:IllegalArgumentException|];
#L08c4d4.   v2:= new [|java:lang:StringBuilder|];
#L08c4d8.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c4de.   v3:= "URI is not absolute: " @type (object, string);
#L08c4e2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c4e8.   v2:= temp  @type object;
#L08c4ea.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c4f0.   v2:= temp  @type object;
#L08c4f2.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c4f8.   v2:= temp  @type object;
#L08c4fa.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08c500.   throw v1;
#L08c502.   call temp:=  [|java:net:URI.getRawSchemeSpecificPart|](v4) @signature [|Ljava/net/URI;.getRawSchemeSpecificPart:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L08c508.   v1:= temp  @type object;
#L08c50a.   v2:= "/" @type (object, string);
#L08c50e.   call temp:=  [|java:lang:String.startsWith|](v1, v2) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c514.   v1:= temp;
#L08c516.   if v1 != 0 then goto L08c54c;
#L08c51a.   v1:= new [|java:lang:IllegalArgumentException|];
#L08c51e.   v2:= new [|java:lang:StringBuilder|];
#L08c522.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c528.   v3:= "URI is not hierarchical: " @type (object, string);
#L08c52c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c532.   v2:= temp  @type object;
#L08c534.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c53a.   v2:= temp  @type object;
#L08c53c.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c542.   v2:= temp  @type object;
#L08c544.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08c54a.   throw v1;
#L08c54c.   v1:= "file" @type (object, string);
#L08c550.   call temp:=  [|java:net:URI.getScheme|](v4) @signature [|Ljava/net/URI;.getScheme:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L08c556.   v2:= temp  @type object;
#L08c558.   call temp:=  [|java:lang:String.equals|](v1, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c55e.   v1:= temp;
#L08c560.   if v1 != 0 then goto L08c596;
#L08c564.   v1:= new [|java:lang:IllegalArgumentException|];
#L08c568.   v2:= new [|java:lang:StringBuilder|];
#L08c56c.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c572.   v3:= "Expected file scheme in URI: " @type (object, string);
#L08c576.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c57c.   v2:= temp  @type object;
#L08c57e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c584.   v2:= temp  @type object;
#L08c586.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c58c.   v2:= temp  @type object;
#L08c58e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08c594.   throw v1;
#L08c596.   call temp:=  [|java:net:URI.getRawPath|](v4) @signature [|Ljava/net/URI;.getRawPath:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L08c59c.   v0:= temp  @type object;
#L08c59e.   if v0 == 0 then goto L08c5ae;
#L08c5a2.   call temp:=  [|java:lang:String.isEmpty|](v0) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c5a8.   v1:= temp;
#L08c5aa.   if v1 == 0 then goto L08c5e0;
#L08c5ae.   v1:= new [|java:lang:IllegalArgumentException|];
#L08c5b2.   v2:= new [|java:lang:StringBuilder|];
#L08c5b6.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c5bc.   v3:= "Expected non-empty path in URI: " @type (object, string);
#L08c5c0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c5c6.   v2:= temp  @type object;
#L08c5c8.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c5ce.   v2:= temp  @type object;
#L08c5d0.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c5d6.   v2:= temp  @type object;
#L08c5d8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08c5de.   throw v1;
#L08c5e0.   call temp:=  [|java:net:URI.getRawAuthority|](v4) @signature [|Ljava/net/URI;.getRawAuthority:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L08c5e6.   v1:= temp  @type object;
#L08c5e8.   if v1 == 0 then goto L08c61e;
#L08c5ec.   v1:= new [|java:lang:IllegalArgumentException|];
#L08c5f0.   v2:= new [|java:lang:StringBuilder|];
#L08c5f4.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c5fa.   v3:= "Found authority in URI: " @type (object, string);
#L08c5fe.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c604.   v2:= temp  @type object;
#L08c606.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c60c.   v2:= temp  @type object;
#L08c60e.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c614.   v2:= temp  @type object;
#L08c616.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08c61c.   throw v1;
#L08c61e.   call temp:=  [|java:net:URI.getRawQuery|](v4) @signature [|Ljava/net/URI;.getRawQuery:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L08c624.   v1:= temp  @type object;
#L08c626.   if v1 == 0 then goto L08c65c;
#L08c62a.   v1:= new [|java:lang:IllegalArgumentException|];
#L08c62e.   v2:= new [|java:lang:StringBuilder|];
#L08c632.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c638.   v3:= "Found query in URI: " @type (object, string);
#L08c63c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c642.   v2:= temp  @type object;
#L08c644.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c64a.   v2:= temp  @type object;
#L08c64c.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c652.   v2:= temp  @type object;
#L08c654.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08c65a.   throw v1;
#L08c65c.   call temp:=  [|java:net:URI.getRawFragment|](v4) @signature [|Ljava/net/URI;.getRawFragment:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L08c662.   v1:= temp  @type object;
#L08c664.   if v1 == 0 then goto L08c69a;
#L08c668.   v1:= new [|java:lang:IllegalArgumentException|];
#L08c66c.   v2:= new [|java:lang:StringBuilder|];
#L08c670.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c676.   v3:= "Found fragment in URI: " @type (object, string);
#L08c67a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c680.   v2:= temp  @type object;
#L08c682.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c688.   v2:= temp  @type object;
#L08c68a.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c690.   v2:= temp  @type object;
#L08c692.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08c698.   throw v1;
#L08c69a.   return @void ;

   }
    procedure [|java:io:File|] [|java:io:File.createTempFile|] ([|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L08c6ac.   v0:= 0  @length 4;
#L08c6ae.   call temp:=  [|java:io:File.createTempFile|](v1, v2, v0) @signature [|Ljava/io/File;.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;|] @classDescriptor [|java:io:File|] @type static;
#L08c6b4.   v0:= temp  @type object;
#L08c6b6.   return v0  @type object;

   }
    procedure [|java:io:File|] [|java:io:File.createTempFile|] ([|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:io:File|] v7 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08c6c8.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c6ce.   v3:= temp;
#L08c6d0.   v4:= 3  @length 4;
#L08c6d2.   if v3 >= v4 then goto L08c6e6;
#L08c6d6.   v3:= new [|java:lang:IllegalArgumentException|];
#L08c6da.   v4:= "prefix must be at least 3 characters" @type (object, string);
#L08c6de.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08c6e4.   throw v3;
#L08c6e6.   if v6 != 0 then goto L08c6ee;
#L08c6ea.   v6:= ".tmp" @type (object, string);
#L08c6ee.   v2:= v7  @type object;
#L08c6f0.   if v2 != 0 then goto L08c70e;
#L08c6f4.   v3:= "java.io.tmpdir" @type (object, string);
#L08c6f8.   v4:= "." @type (object, string);
#L08c6fc.   call temp:=  [|java:lang:System.getProperty|](v3, v4) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L08c702.   v1:= temp  @type object;
#L08c704.   v2:= new [|java:io:File|];
#L08c708.   call temp:=  [|java:io:File.<init>|](v2, v1) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08c70e.   v0:= new [|java:io:File|];
#L08c712.   v3:= new [|java:lang:StringBuilder|];
#L08c716.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c71c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c722.   v3:= temp  @type object;
#L08c724.   v4:= @@[|java:io:File.tempFileRandom|]   @type object;
#L08c728.   call temp:=  [|java:util:Random.nextInt|](v4) @signature [|Ljava/util/Random;.nextInt:()I|] @classDescriptor [|java:util:Random|] @type virtual;
#L08c72e.   v4:= temp;
#L08c730.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c736.   v3:= temp  @type object;
#L08c738.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c73e.   v3:= temp  @type object;
#L08c740.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c746.   v3:= temp  @type object;
#L08c748.   call temp:=  [|java:io:File.<init>|](v0, v2, v3) @signature [|Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08c74e.   call temp:=  [|java:io:File.createNewFile|](v0) @signature [|Ljava/io/File;.createNewFile:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L08c754.   v3:= temp;
#L08c756.   if v3 == 0 then goto L08c70e;
#L08c75a.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:File.doAccess|] ([|java:io:File|] v3 @type (this), [|int|] v4) @owner [|java:io:File|] @signature [|Ljava/io/File;.doAccess:(I)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L08c76c.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08c770.   v2:= v3.[|java:io:File.path|]   @type object;
#L08c774.   call temp:=  [|libcore:io:Os.access|](v1, v2, v4) @signature [|Llibcore/io/Os;.access:(Ljava/lang/String;I)Z|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08c77a.   v1:= temp;
#L08c77c.   return v1;
#L08c77e.   v0:= Exception  @type object;
#L08c780.   v1:= 0  @length 4;
#L08c782.   goto L08c77c;
  catch  [|libcore:io:ErrnoException|] @[L08c76c..L08c77a] goto L08c77e;

   }
    procedure [|boolean|] [|java:io:File.doChmod|] ([|java:io:File|] v5 @type (this), [|int|] v6, [|boolean|] v7) @owner [|java:io:File|] @signature [|Ljava/io/File;.doChmod:(IZ)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08c7a4.   v3:= @@[|libcore:io:Libcore.os|]   @type object;
#L08c7a8.   v4:= v5.[|java:io:File.path|]   @type object;
#L08c7ac.   call temp:=  [|libcore:io:Os.stat|](v3, v4) @signature [|Llibcore/io/Os;.stat:(Ljava/lang/String;)Llibcore/io/StructStat;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08c7b2.   v2:= temp  @type object;
#L08c7b4.   if v7 == 0 then goto L08c7d2;
#L08c7b8.   v3:= v2.[|libcore:io:StructStat.st_mode|] ;
#L08c7bc.   v1:= v3 ^| v6  @type int;
#L08c7c0.   v3:= @@[|libcore:io:Libcore.os|]   @type object;
#L08c7c4.   v4:= v5.[|java:io:File.path|]   @type object;
#L08c7c8.   call temp:=  [|libcore:io:Os.chmod|](v3, v4, v1) @signature [|Llibcore/io/Os;.chmod:(Ljava/lang/String;I)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08c7ce.   v3:= 1  @length 4;
#L08c7d0.   return v3;
#L08c7d2.   v3:= v2.[|libcore:io:StructStat.st_mode|] ;
#L08c7d6.   v4:= v6 ^~ -1;
#L08c7da.   v1:= v3 ^& v4  @type int;
#L08c7de.   goto L08c7c0;
#L08c7e0.   v0:= Exception  @type object;
#L08c7e2.   v3:= 0  @length 4;
#L08c7e4.   goto L08c7d0;
  catch  [|libcore:io:ErrnoException|] @[L08c7a4..L08c7d6] goto L08c7e0;

   }
    procedure [|java:io:File|][] [|java:io:File.filenamesToFiles|] ([|java:io:File|] v5 @type (this), [|java:lang:String|][] v6 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.filenamesToFiles:([Ljava/lang/String;)[Ljava/io/File;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08c808.   if v6 != 0 then goto L08c810;
#L08c80c.   v2:= 0  @length 4;
#L08c80e.   return v2  @type object;
#L08c810.   v0:= v6.length;
#L08c812.   v2:= new [|java:io:File|][v0];
#L08c816.   v1:= 0  @length 4;
#L08c818.   if v1 >= v0 then goto L08c80e;
#L08c81c.   v3:= new [|java:io:File|];
#L08c820.   v4:= v6[v1]  @type object;
#L08c824.   call temp:=  [|java:io:File.<init>|](v3, v5, v4) @signature [|Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08c82a.   v2[v1]:= v3  @type object;
#L08c82e.   v1:= v1 + 1;
#L08c832.   goto L08c818;

   }
    procedure [|java:lang:String|] [|java:io:File.fixSlashes|] ([|java:lang:String|] v8 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.fixSlashes:(Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L08c844.   v2:= 0  @length 4;
#L08c846.   call temp:=  [|java:lang:String.toCharArray|](v8) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c84c.   v6:= temp  @type object;
#L08c84e.   v3:= v6.length;
#L08c850.   v4:= 0  @length 4;
#L08c852.   v1:= 0  @length 4;
#L08c854.   v5:= v4;
#L08c856.   if v1 >= v3 then goto L08c88c;
#L08c85a.   v0:= v6[v1]  @char;
#L08c85e.   v7:= 47  @length 16;
#L08c862.   if v0 != v7 then goto L08c880;
#L08c866.   if v2 != 0 then goto L08c8b0;
#L08c86a.   v4:= v5 + 1;
#L08c86e.   v7:= @@[|java:io:File.separatorChar|]   @char;
#L08c872.   v6[v5]:= v7  @char;
#L08c876.   v2:= 1  @length 4;
#L08c878.   v1:= v1 + 1;
#L08c87c.   v5:= v4;
#L08c87e.   goto L08c856;
#L08c880.   v4:= v5 + 1;
#L08c884.   v6[v5]:= v0  @char;
#L08c888.   v2:= 0  @length 4;
#L08c88a.   goto L08c878;
#L08c88c.   if v2 == 0 then goto L08c8ac;
#L08c890.   v7:= 1  @length 4;
#L08c892.   if v5 <= v7 then goto L08c8ac;
#L08c896.   v4:= v5 + -1;
#L08c89a.   if v4 == v3 then goto L08c8aa;
#L08c89e.   v8:= new [|java:lang:String|];
#L08c8a2.   v7:= 0  @length 4;
#L08c8a4.   call temp:=  [|java:lang:String.<init>|](v8, v6, v7, v4) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L08c8aa.   return v8  @type object;
#L08c8ac.   v4:= v5;
#L08c8ae.   goto L08c89a;
#L08c8b0.   v4:= v5;
#L08c8b2.   goto L08c878;

   }
    procedure [|java:lang:String|] [|java:io:File.getAbsoluteName|] ([|java:io:File|] v5 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getAbsoluteName:()Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08c8c4.   v4:= 47  @length 16;
#L08c8c8.   call temp:=  [|java:io:File.getAbsoluteFile|](v5) @signature [|Ljava/io/File;.getAbsoluteFile:()Ljava/io/File;|] @classDescriptor [|java:io:File|] @type virtual;
#L08c8ce.   v0:= temp  @type object;
#L08c8d0.   call temp:=  [|java:io:File.getPath|](v0) @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08c8d6.   v1:= temp  @type object;
#L08c8d8.   call temp:=  [|java:io:File.isDirectory|](v0) @signature [|Ljava/io/File;.isDirectory:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L08c8de.   v2:= temp;
#L08c8e0.   if v2 == 0 then goto L08c926;
#L08c8e4.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c8ea.   v2:= temp;
#L08c8ec.   v2:= v2 + -1;
#L08c8f0.   call temp:=  [|java:lang:String.charAt|](v1, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c8f6.   v2:= temp;
#L08c8f8.   v3:= @@[|java:io:File.separatorChar|]   @char;
#L08c8fc.   if v2 == v3 then goto L08c926;
#L08c900.   v2:= new [|java:lang:StringBuilder|];
#L08c904.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c90a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c910.   v2:= temp  @type object;
#L08c912.   v3:= "/" @type (object, string);
#L08c916.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c91c.   v2:= temp  @type object;
#L08c91e.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c924.   v1:= temp  @type object;
#L08c926.   v2:= @@[|java:io:File.separatorChar|]   @char;
#L08c92a.   if v2 == v4 then goto L08c93a;
#L08c92e.   v2:= @@[|java:io:File.separatorChar|]   @char;
#L08c932.   call temp:=  [|java:lang:String.replace|](v1, v2, v4) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c938.   v1:= temp  @type object;
#L08c93a.   return v1  @type object;

   }
    procedure [|java:lang:String|] [|java:io:File.join|] ([|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.join:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08c94c.   v2:= 1  @length 4;
#L08c94e.   v3:= 0  @length 4;
#L08c950.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c956.   v1:= temp;
#L08c958.   if v1 <= 0 then goto L08c9bc;
#L08c95c.   v4:= v1 + -1;
#L08c960.   call temp:=  [|java:lang:String.charAt|](v6, v4) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c966.   v4:= temp;
#L08c968.   v5:= @@[|java:io:File.separatorChar|]   @char;
#L08c96c.   if v4 != v5 then goto L08c9bc;
#L08c970.   v0:= v2;
#L08c972.   if v0 != 0 then goto L08c994;
#L08c976.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c97c.   v4:= temp;
#L08c97e.   if v4 <= 0 then goto L08c9c0;
#L08c982.   call temp:=  [|java:lang:String.charAt|](v7, v3) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08c988.   v4:= temp;
#L08c98a.   v5:= @@[|java:io:File.separatorChar|]   @char;
#L08c98e.   if v4 != v5 then goto L08c9c0;
#L08c992.   v0:= v2;
#L08c994.   if v0 == 0 then goto L08c9c4;
#L08c998.   v2:= new [|java:lang:StringBuilder|];
#L08c99c.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c9a2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c9a8.   v2:= temp  @type object;
#L08c9aa.   call temp:=  [|java:lang:StringBuilder.append|](v2, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c9b0.   v2:= temp  @type object;
#L08c9b2.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c9b8.   v2:= temp  @type object;
#L08c9ba.   return v2  @type object;
#L08c9bc.   v0:= v3;
#L08c9be.   goto L08c972;
#L08c9c0.   v0:= v3;
#L08c9c2.   goto L08c994;
#L08c9c4.   v2:= new [|java:lang:StringBuilder|];
#L08c9c8.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08c9ce.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c9d4.   v2:= temp  @type object;
#L08c9d6.   v3:= @@[|java:io:File.separatorChar|]   @char;
#L08c9da.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c9e0.   v2:= temp  @type object;
#L08c9e2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c9e8.   v2:= temp  @type object;
#L08c9ea.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08c9f0.   v2:= temp  @type object;
#L08c9f2.   goto L08c9ba;

   }
    procedure [|java:lang:String|][] [|java:io:File.listImpl|] ([|java:lang:String|] v0 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.listImpl:(Ljava/lang/String;)[Ljava/lang/String;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:io:File|][] [|java:io:File.listRoots|] () @owner [|java:io:File|] @signature [|Ljava/io/File;.listRoots:()[Ljava/io/File;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08ca04.   v0:= 1  @length 4;
#L08ca06.   v0:= new [|java:io:File|][v0];
#L08ca0a.   v1:= 0  @length 4;
#L08ca0c.   v2:= new [|java:io:File|];
#L08ca10.   v3:= "/" @type (object, string);
#L08ca14.   call temp:=  [|java:io:File.<init>|](v2, v3) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08ca1a.   v0[v1]:= v2  @type object;
#L08ca1e.   return v0  @type object;

   }
    procedure [|void|] [|java:io:File.mkdirErrno|] ([|java:io:File|] v3 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.mkdirErrno:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L08ca30.   v0:= @@[|libcore:io:Libcore.os|]   @type object;
#L08ca34.   v1:= v3.[|java:io:File.path|]   @type object;
#L08ca38.   v2:= @@[|libcore:io:OsConstants.S_IRWXU|] ;
#L08ca3c.   call temp:=  [|libcore:io:Os.mkdir|](v0, v1, v2) @signature [|Llibcore/io/Os;.mkdir:(Ljava/lang/String;I)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08ca42.   return @void ;

   }
    procedure [|boolean|] [|java:io:File.mkdirs|] ([|java:io:File|] v6 @type (this), [|boolean|] v7) @owner [|java:io:File|] @signature [|Ljava/io/File;.mkdirs:(Z)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08ca54.   v3:= 0  @length 4;
#L08ca56.   v2:= 1  @length 4;
#L08ca58.   call temp:=  [|java:io:File.mkdirErrno|](v6) @signature [|Ljava/io/File;.mkdirErrno:()V|] @classDescriptor [|java:io:File|] @type direct;
#L08ca5e.   return v2;
#L08ca60.   v0:= Exception  @type object;
#L08ca62.   v4:= v0.[|libcore:io:ErrnoException.errno|] ;
#L08ca66.   v5:= @@[|libcore:io:OsConstants.ENOENT|] ;
#L08ca6a.   if v4 != v5 then goto L08ca96;
#L08ca6e.   call temp:=  [|java:io:File.getParentFile|](v6) @signature [|Ljava/io/File;.getParentFile:()Ljava/io/File;|] @classDescriptor [|java:io:File|] @type virtual;
#L08ca74.   v1:= temp  @type object;
#L08ca76.   if v1 == 0 then goto L08ca92;
#L08ca7a.   call temp:=  [|java:io:File.mkdirs|](v1, v2) @signature [|Ljava/io/File;.mkdirs:(Z)Z|] @classDescriptor [|java:io:File|] @type direct;
#L08ca80.   v4:= temp;
#L08ca82.   if v4 == 0 then goto L08ca92;
#L08ca86.   call temp:=  [|java:io:File.mkdir|](v6) @signature [|Ljava/io/File;.mkdir:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L08ca8c.   v4:= temp;
#L08ca8e.   if v4 != 0 then goto L08ca5e;
#L08ca92.   v2:= v3;
#L08ca94.   goto L08ca5e;
#L08ca96.   v2:= v0.[|libcore:io:ErrnoException.errno|] ;
#L08ca9a.   v4:= @@[|libcore:io:OsConstants.EEXIST|] ;
#L08ca9e.   if v2 != v4 then goto L08caa6;
#L08caa2.   v2:= v7;
#L08caa4.   goto L08ca5e;
#L08caa6.   v2:= v3;
#L08caa8.   goto L08ca5e;
  catch  [|libcore:io:ErrnoException|] @[L08ca58..L08ca5e] goto L08ca60;

   }
    procedure [|void|] [|java:io:File.readObject|] ([|java:io:File|] v3 @type (this), [|java:io:ObjectInputStream|] v4 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L08cacc.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v4) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L08cad2.   call temp:=  [|java:io:ObjectInputStream.readChar|](v4) @signature [|Ljava/io/ObjectInputStream;.readChar:()C|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L08cad8.   v0:= temp;
#L08cada.   v1:= v3.[|java:io:File.path|]   @type object;
#L08cade.   v2:= @@[|java:io:File.separatorChar|]   @char;
#L08cae2.   call temp:=  [|java:lang:String.replace|](v1, v0, v2) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L08cae8.   v1:= temp  @type object;
#L08caea.   call temp:=  [|java:io:File.fixSlashes|](v1) @signature [|Ljava/io/File;.fixSlashes:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08caf0.   v1:= temp  @type object;
#L08caf2.   v3.[|java:io:File.path|]  := v1 @type object;
#L08caf6.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:File.readlink|] ([|java:lang:String|] v0 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.readlink:(Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:io:File.realpath|] ([|java:lang:String|] v0 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.realpath:(Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:io:File.setLastModifiedImpl|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|java:io:File|] @signature [|Ljava/io/File;.setLastModifiedImpl:(Ljava/lang/String;J)Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:io:File.writeObject|] ([|java:io:File|] v1 @type (this), [|java:io:ObjectOutputStream|] v2 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L08cb08.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v2) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L08cb0e.   v0:= @@[|java:io:File.separatorChar|]   @char;
#L08cb12.   call temp:=  [|java:io:ObjectOutputStream.writeChar|](v2, v0) @signature [|Ljava/io/ObjectOutputStream;.writeChar:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L08cb18.   return @void ;

   }
    procedure [|boolean|] [|java:io:File.canExecute|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.canExecute:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08cb2c.   v0:= @@[|libcore:io:OsConstants.X_OK|] ;
#L08cb30.   call temp:=  [|java:io:File.doAccess|](v1, v0) @signature [|Ljava/io/File;.doAccess:(I)Z|] @classDescriptor [|java:io:File|] @type direct;
#L08cb36.   v0:= temp;
#L08cb38.   return v0;

   }
    procedure [|boolean|] [|java:io:File.canRead|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.canRead:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08cb4c.   v0:= @@[|libcore:io:OsConstants.R_OK|] ;
#L08cb50.   call temp:=  [|java:io:File.doAccess|](v1, v0) @signature [|Ljava/io/File;.doAccess:(I)Z|] @classDescriptor [|java:io:File|] @type direct;
#L08cb56.   v0:= temp;
#L08cb58.   return v0;

   }
    procedure [|boolean|] [|java:io:File.canWrite|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.canWrite:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08cb6c.   v0:= @@[|libcore:io:OsConstants.W_OK|] ;
#L08cb70.   call temp:=  [|java:io:File.doAccess|](v1, v0) @signature [|Ljava/io/File;.doAccess:(I)Z|] @classDescriptor [|java:io:File|] @type direct;
#L08cb76.   v0:= temp;
#L08cb78.   return v0;

   }
    procedure [|int|] [|java:io:File.compareTo|] ([|java:io:File|] v2 @type (this), [|java:io:File|] v3 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.compareTo:(Ljava/io/File;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08cb8c.   call temp:=  [|java:io:File.getPath|](v2) @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08cb92.   v0:= temp  @type object;
#L08cb94.   call temp:=  [|java:io:File.getPath|](v3) @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08cb9a.   v1:= temp  @type object;
#L08cb9c.   call temp:=  [|java:lang:String.compareTo|](v0, v1) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08cba2.   v0:= temp;
#L08cba4.   return v0;

   }
    procedure [|int|] [|java:io:File.compareTo|] ([|java:io:File|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L08cbb8.   v2:= ([|java:io:File|])v2;
#L08cbbc.   call temp:=  [|java:io:File.compareTo|](v1, v2) @signature [|Ljava/io/File;.compareTo:(Ljava/io/File;)I|] @classDescriptor [|java:io:File|] @type virtual;
#L08cbc2.   v0:= temp;
#L08cbc4.   return v0;

   }
    procedure [|boolean|] [|java:io:File.createNewFile|] ([|java:io:File|] v6 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.createNewFile:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08cbd8.   v1:= 0  @length 4;
#L08cbda.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L08cbde.   v3:= v6.[|java:io:File.path|]   @type object;
#L08cbe2.   v4:= @@[|libcore:io:OsConstants.O_RDWR|] ;
#L08cbe6.   v5:= @@[|libcore:io:OsConstants.O_CREAT|] ;
#L08cbea.   v4:= v4 ^| v5  @type int;
#L08cbec.   v5:= @@[|libcore:io:OsConstants.O_EXCL|] ;
#L08cbf0.   v4:= v4 ^| v5  @type int;
#L08cbf2.   v5:= 384  @length 16;
#L08cbf6.   call temp:=  [|libcore:io:Os.open|](v2, v3, v4, v5) @signature [|Llibcore/io/Os;.open:(Ljava/lang/String;II)Ljava/io/FileDescriptor;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08cbfc.   v1:= temp  @type object;
#L08cbfe.   v2:= 1  @length 4;
#L08cc00.   call temp:=  [|libcore:io:IoUtils.close|](v1) @signature [|Llibcore/io/IoUtils;.close:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L08cc06.   return v2;
#L08cc08.   v0:= Exception  @type object;
#L08cc0a.   v2:= v0.[|libcore:io:ErrnoException.errno|] ;
#L08cc0e.   v3:= @@[|libcore:io:OsConstants.EEXIST|] ;
#L08cc12.   if v2 != v3 then goto L08cc20;
#L08cc16.   v2:= 0  @length 4;
#L08cc18.   call temp:=  [|libcore:io:IoUtils.close|](v1) @signature [|Llibcore/io/IoUtils;.close:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L08cc1e.   goto L08cc06;
#L08cc20.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L08cc26.   v2:= temp  @type object;
#L08cc28.   throw v2;
#L08cc2a.   v2:= Exception  @type object;
#L08cc2c.   call temp:=  [|libcore:io:IoUtils.close|](v1) @signature [|Llibcore/io/IoUtils;.close:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L08cc32.   throw v2;
  catch  [|libcore:io:ErrnoException|] @[L08cbda..L08cbfc] goto L08cc08;
  catch  [|any|] @[L08cbda..L08cbfc] goto L08cc2a;
  catch  [|any|] @[L08cc0a..L08cc12] goto L08cc2a;
  catch  [|any|] @[L08cc20..L08cc2a] goto L08cc2a;

   }
    procedure [|boolean|] [|java:io:File.delete|] ([|java:io:File|] v3 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.delete:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08cc64.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08cc68.   v2:= v3.[|java:io:File.path|]   @type object;
#L08cc6c.   call temp:=  [|libcore:io:Os.remove|](v1, v2) @signature [|Llibcore/io/Os;.remove:(Ljava/lang/String;)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08cc72.   v1:= 1  @length 4;
#L08cc74.   return v1;
#L08cc76.   v0:= Exception  @type object;
#L08cc78.   v1:= 0  @length 4;
#L08cc7a.   goto L08cc74;
  catch  [|libcore:io:ErrnoException|] @[L08cc64..L08cc72] goto L08cc76;

   }
    procedure [|void|] [|java:io:File.deleteOnExit|] ([|java:io:File|] v2 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.deleteOnExit:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08cc9c.   call temp:=  [|org:apache:harmony:luni:util:DeleteOnExit.getInstance|]() @signature [|Lorg/apache/harmony/luni/util/DeleteOnExit;.getInstance:()Lorg/apache/harmony/luni/util/DeleteOnExit;|] @classDescriptor [|org:apache:harmony:luni:util:DeleteOnExit|] @type static;
#L08cca2.   v0:= temp  @type object;
#L08cca4.   call temp:=  [|java:io:File.getAbsolutePath|](v2) @signature [|Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08ccaa.   v1:= temp  @type object;
#L08ccac.   call temp:=  [|org:apache:harmony:luni:util:DeleteOnExit.addFile|](v0, v1) @signature [|Lorg/apache/harmony/luni/util/DeleteOnExit;.addFile:(Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:luni:util:DeleteOnExit|] @type virtual;
#L08ccb2.   return @void ;

   }
    procedure [|boolean|] [|java:io:File.equals|] ([|java:io:File|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ccc4.   v0:= instanceof @varname v3 @type [|java:io:File|];
#L08ccc8.   if v0 != 0 then goto L08ccd0;
#L08cccc.   v0:= 0  @length 4;
#L08ccce.   return v0;
#L08ccd0.   v0:= v2.[|java:io:File.path|]   @type object;
#L08ccd4.   v3:= ([|java:io:File|])v3;
#L08ccd8.   call temp:=  [|java:io:File.getPath|](v3) @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08ccde.   v1:= temp  @type object;
#L08cce0.   call temp:=  [|java:lang:String.equals|](v0, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08cce6.   v0:= temp;
#L08cce8.   goto L08ccce;

   }
    procedure [|boolean|] [|java:io:File.exists|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.exists:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08ccfc.   v0:= @@[|libcore:io:OsConstants.F_OK|] ;
#L08cd00.   call temp:=  [|java:io:File.doAccess|](v1, v0) @signature [|Ljava/io/File;.doAccess:(I)Z|] @classDescriptor [|java:io:File|] @type direct;
#L08cd06.   v0:= temp;
#L08cd08.   return v0;

   }
    procedure [|java:io:File|] [|java:io:File.getAbsoluteFile|] ([|java:io:File|] v2 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getAbsoluteFile:()Ljava/io/File;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08cd1c.   v0:= new [|java:io:File|];
#L08cd20.   call temp:=  [|java:io:File.getAbsolutePath|](v2) @signature [|Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08cd26.   v1:= temp  @type object;
#L08cd28.   call temp:=  [|java:io:File.<init>|](v0, v1) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08cd2e.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:io:File.getAbsolutePath|] ([|java:io:File|] v2 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08cd40.   call temp:=  [|java:io:File.isAbsolute|](v2) @signature [|Ljava/io/File;.isAbsolute:()Z|] @classDescriptor [|java:io:File|] @type virtual;
#L08cd46.   v1:= temp;
#L08cd48.   if v1 == 0 then goto L08cd52;
#L08cd4c.   v0:= v2.[|java:io:File.path|]   @type object;
#L08cd50.   return v0  @type object;
#L08cd52.   v1:= "user.dir" @type (object, string);
#L08cd56.   call temp:=  [|java:lang:System.getProperty|](v1) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L08cd5c.   v0:= temp  @type object;
#L08cd5e.   v1:= v2.[|java:io:File.path|]   @type object;
#L08cd62.   call temp:=  [|java:lang:String.isEmpty|](v1) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08cd68.   v1:= temp;
#L08cd6a.   if v1 != 0 then goto L08cd50;
#L08cd6e.   v1:= v2.[|java:io:File.path|]   @type object;
#L08cd72.   call temp:=  [|java:io:File.join|](v0, v1) @signature [|Ljava/io/File;.join:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08cd78.   v0:= temp  @type object;
#L08cd7a.   goto L08cd50;

   }
    procedure [|java:io:File|] [|java:io:File.getCanonicalFile|] ([|java:io:File|] v2 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getCanonicalFile:()Ljava/io/File;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08cd8c.   v0:= new [|java:io:File|];
#L08cd90.   call temp:=  [|java:io:File.getCanonicalPath|](v2) @signature [|Ljava/io/File;.getCanonicalPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08cd96.   v1:= temp  @type object;
#L08cd98.   call temp:=  [|java:io:File.<init>|](v0, v1) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08cd9e.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:io:File.getCanonicalPath|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getCanonicalPath:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08cdb0.   call temp:=  [|java:io:File.getAbsolutePath|](v1) @signature [|Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08cdb6.   v0:= temp  @type object;
#L08cdb8.   call temp:=  [|java:io:File.realpath|](v0) @signature [|Ljava/io/File;.realpath:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08cdbe.   v0:= temp  @type object;
#L08cdc0.   return v0  @type object;

   }
    procedure [|long|] [|java:io:File.getFreeSpace|] ([|java:io:File|] v6 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getFreeSpace:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08cdd4.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L08cdd8.   v3:= v6.[|java:io:File.path|]   @type object;
#L08cddc.   call temp:=  [|libcore:io:Os.statfs|](v2, v3) @signature [|Llibcore/io/Os;.statfs:(Ljava/lang/String;)Llibcore/io/StructStatFs;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08cde2.   v1:= temp  @type object;
#L08cde4.   v2:= v1.[|libcore:io:StructStatFs.f_bfree|]   @wide;
#L08cde8.   v4:= v1.[|libcore:io:StructStatFs.f_bsize|]   @wide;
#L08cdec.   v2:= v2 * v4  @type long;
#L08cdee.   return v2  @type wide;
#L08cdf0.   v0:= Exception  @type object;
#L08cdf2.   v2:= 0  @length wide16;
#L08cdf6.   goto L08cdee;
  catch  [|libcore:io:ErrnoException|] @[L08cdd4..L08cdec] goto L08cdf0;

   }
    procedure [|java:lang:String|] [|java:io:File.getName|] ([|java:io:File|] v4 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08ce18.   v1:= v4.[|java:io:File.path|]   @type object;
#L08ce1c.   v2:= @@[|java:io:File.separator|]   @type object;
#L08ce20.   call temp:=  [|java:lang:String.lastIndexOf|](v1, v2) @signature [|Ljava/lang/String;.lastIndexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ce26.   v0:= temp;
#L08ce28.   if v0 >= 0 then goto L08ce32;
#L08ce2c.   v1:= v4.[|java:io:File.path|]   @type object;
#L08ce30.   return v1  @type object;
#L08ce32.   v1:= v4.[|java:io:File.path|]   @type object;
#L08ce36.   v2:= v0 + 1;
#L08ce3a.   v3:= v4.[|java:io:File.path|]   @type object;
#L08ce3e.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ce44.   v3:= temp;
#L08ce46.   call temp:=  [|java:lang:String.substring|](v1, v2, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ce4c.   v1:= temp  @type object;
#L08ce4e.   goto L08ce30;

   }
    procedure [|java:lang:String|] [|java:io:File.getParent|] ([|java:io:File|] v7 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getParent:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L08ce60.   v6:= 0  @length 4;
#L08ce62.   v5:= -1  @length 4;
#L08ce64.   v3:= v7.[|java:io:File.path|]   @type object;
#L08ce68.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ce6e.   v2:= temp;
#L08ce70.   v0:= 0  @length 4;
#L08ce72.   v3:= @@[|java:io:File.separatorChar|]   @char;
#L08ce76.   v4:= 92  @length 16;
#L08ce7a.   if v3 != v4 then goto L08ce9c;
#L08ce7e.   v3:= 2  @length 4;
#L08ce80.   if v2 <= v3 then goto L08ce9c;
#L08ce84.   v3:= v7.[|java:io:File.path|]   @type object;
#L08ce88.   v4:= 1  @length 4;
#L08ce8a.   call temp:=  [|java:lang:String.charAt|](v3, v4) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ce90.   v3:= temp;
#L08ce92.   v4:= 58  @length 16;
#L08ce96.   if v3 != v4 then goto L08ce9c;
#L08ce9a.   v0:= 2  @length 4;
#L08ce9c.   v3:= v7.[|java:io:File.path|]   @type object;
#L08cea0.   v4:= @@[|java:io:File.separatorChar|]   @char;
#L08cea4.   call temp:=  [|java:lang:String.lastIndexOf|](v3, v4) @signature [|Ljava/lang/String;.lastIndexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08ceaa.   v1:= temp;
#L08ceac.   if v1 != v5 then goto L08ceb6;
#L08ceb0.   if v0 <= 0 then goto L08ceb6;
#L08ceb4.   v1:= 2  @length 4;
#L08ceb6.   if v1 == v5 then goto L08ced2;
#L08ceba.   v3:= v7.[|java:io:File.path|]   @type object;
#L08cebe.   v4:= v2 + -1;
#L08cec2.   call temp:=  [|java:lang:String.charAt|](v3, v4) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08cec8.   v3:= temp;
#L08ceca.   v4:= @@[|java:io:File.separatorChar|]   @char;
#L08cece.   if v3 != v4 then goto L08ced6;
#L08ced2.   v3:= 0  @length 4;
#L08ced4.   return v3  @type object;
#L08ced6.   v3:= v7.[|java:io:File.path|]   @type object;
#L08ceda.   v4:= @@[|java:io:File.separatorChar|]   @char;
#L08cede.   call temp:=  [|java:lang:String.indexOf|](v3, v4) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08cee4.   v3:= temp;
#L08cee6.   if v3 != v1 then goto L08cf10;
#L08ceea.   v3:= v7.[|java:io:File.path|]   @type object;
#L08ceee.   call temp:=  [|java:lang:String.charAt|](v3, v0) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08cef4.   v3:= temp;
#L08cef6.   v4:= @@[|java:io:File.separatorChar|]   @char;
#L08cefa.   if v3 != v4 then goto L08cf10;
#L08cefe.   v3:= v7.[|java:io:File.path|]   @type object;
#L08cf02.   v4:= v1 + 1;
#L08cf06.   call temp:=  [|java:lang:String.substring|](v3, v6, v4) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L08cf0c.   v3:= temp  @type object;
#L08cf0e.   goto L08ced4;
#L08cf10.   v3:= v7.[|java:io:File.path|]   @type object;
#L08cf14.   call temp:=  [|java:lang:String.substring|](v3, v6, v1) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L08cf1a.   v3:= temp  @type object;
#L08cf1c.   goto L08ced4;

   }
    procedure [|java:io:File|] [|java:io:File.getParentFile|] ([|java:io:File|] v2 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getParentFile:()Ljava/io/File;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08cf30.   call temp:=  [|java:io:File.getParent|](v2) @signature [|Ljava/io/File;.getParent:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08cf36.   v0:= temp  @type object;
#L08cf38.   if v0 != 0 then goto L08cf40;
#L08cf3c.   v1:= 0  @length 4;
#L08cf3e.   return v1  @type object;
#L08cf40.   v1:= new [|java:io:File|];
#L08cf44.   call temp:=  [|java:io:File.<init>|](v1, v0) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08cf4a.   goto L08cf3e;

   }
    procedure [|java:lang:String|] [|java:io:File.getPath|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08cf5c.   v0:= v1.[|java:io:File.path|]   @type object;
#L08cf60.   return v0  @type object;

   }
    procedure [|long|] [|java:io:File.getTotalSpace|] ([|java:io:File|] v6 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getTotalSpace:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08cf74.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L08cf78.   v3:= v6.[|java:io:File.path|]   @type object;
#L08cf7c.   call temp:=  [|libcore:io:Os.statfs|](v2, v3) @signature [|Llibcore/io/Os;.statfs:(Ljava/lang/String;)Llibcore/io/StructStatFs;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08cf82.   v1:= temp  @type object;
#L08cf84.   v2:= v1.[|libcore:io:StructStatFs.f_blocks|]   @wide;
#L08cf88.   v4:= v1.[|libcore:io:StructStatFs.f_bsize|]   @wide;
#L08cf8c.   v2:= v2 * v4  @type long;
#L08cf8e.   return v2  @type wide;
#L08cf90.   v0:= Exception  @type object;
#L08cf92.   v2:= 0  @length wide16;
#L08cf96.   goto L08cf8e;
  catch  [|libcore:io:ErrnoException|] @[L08cf74..L08cf8c] goto L08cf90;

   }
    procedure [|long|] [|java:io:File.getUsableSpace|] ([|java:io:File|] v6 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.getUsableSpace:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08cfb8.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L08cfbc.   v3:= v6.[|java:io:File.path|]   @type object;
#L08cfc0.   call temp:=  [|libcore:io:Os.statfs|](v2, v3) @signature [|Llibcore/io/Os;.statfs:(Ljava/lang/String;)Llibcore/io/StructStatFs;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08cfc6.   v1:= temp  @type object;
#L08cfc8.   v2:= v1.[|libcore:io:StructStatFs.f_bavail|]   @wide;
#L08cfcc.   v4:= v1.[|libcore:io:StructStatFs.f_bsize|]   @wide;
#L08cfd0.   v2:= v2 * v4  @type long;
#L08cfd2.   return v2  @type wide;
#L08cfd4.   v0:= Exception  @type object;
#L08cfd6.   v2:= 0  @length wide16;
#L08cfda.   goto L08cfd2;
  catch  [|libcore:io:ErrnoException|] @[L08cfb8..L08cfd0] goto L08cfd4;

   }
    procedure [|int|] [|java:io:File.hashCode|] ([|java:io:File|] v2 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08cffc.   call temp:=  [|java:io:File.getPath|](v2) @signature [|Ljava/io/File;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08d002.   v0:= temp  @type object;
#L08d004.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08d00a.   v0:= temp;
#L08d00c.    v1:= 0.000000;
#L08d012.   v0:= v0 ^~ v1  @type int;
#L08d014.   return v0;

   }
    procedure [|boolean|] [|java:io:File.isAbsolute|] ([|java:io:File|] v3 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.isAbsolute:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08d028.   v0:= 0  @length 4;
#L08d02a.   v1:= v3.[|java:io:File.path|]   @type object;
#L08d02e.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08d034.   v1:= temp;
#L08d036.   if v1 <= 0 then goto L08d050;
#L08d03a.   v1:= v3.[|java:io:File.path|]   @type object;
#L08d03e.   call temp:=  [|java:lang:String.charAt|](v1, v0) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L08d044.   v1:= temp;
#L08d046.   v2:= @@[|java:io:File.separatorChar|]   @char;
#L08d04a.   if v1 != v2 then goto L08d050;
#L08d04e.   v0:= 1  @length 4;
#L08d050.   return v0;

   }
    procedure [|boolean|] [|java:io:File.isDirectory|] ([|java:io:File|] v3 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.isDirectory:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08d064.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08d068.   v2:= v3.[|java:io:File.path|]   @type object;
#L08d06c.   call temp:=  [|libcore:io:Os.stat|](v1, v2) @signature [|Llibcore/io/Os;.stat:(Ljava/lang/String;)Llibcore/io/StructStat;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08d072.   v1:= temp  @type object;
#L08d074.   v1:= v1.[|libcore:io:StructStat.st_mode|] ;
#L08d078.   call temp:=  [|libcore:io:OsConstants.S_ISDIR|](v1) @signature [|Llibcore/io/OsConstants;.S_ISDIR:(I)Z|] @classDescriptor [|libcore:io:OsConstants|] @type static;
#L08d07e.   v1:= temp;
#L08d080.   return v1;
#L08d082.   v0:= Exception  @type object;
#L08d084.   v1:= 0  @length 4;
#L08d086.   goto L08d080;
  catch  [|libcore:io:ErrnoException|] @[L08d064..L08d07e] goto L08d082;

   }
    procedure [|boolean|] [|java:io:File.isFile|] ([|java:io:File|] v3 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.isFile:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08d0a8.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08d0ac.   v2:= v3.[|java:io:File.path|]   @type object;
#L08d0b0.   call temp:=  [|libcore:io:Os.stat|](v1, v2) @signature [|Llibcore/io/Os;.stat:(Ljava/lang/String;)Llibcore/io/StructStat;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08d0b6.   v1:= temp  @type object;
#L08d0b8.   v1:= v1.[|libcore:io:StructStat.st_mode|] ;
#L08d0bc.   call temp:=  [|libcore:io:OsConstants.S_ISREG|](v1) @signature [|Llibcore/io/OsConstants;.S_ISREG:(I)Z|] @classDescriptor [|libcore:io:OsConstants|] @type static;
#L08d0c2.   v1:= temp;
#L08d0c4.   return v1;
#L08d0c6.   v0:= Exception  @type object;
#L08d0c8.   v1:= 0  @length 4;
#L08d0ca.   goto L08d0c4;
  catch  [|libcore:io:ErrnoException|] @[L08d0a8..L08d0c2] goto L08d0c6;

   }
    procedure [|boolean|] [|java:io:File.isHidden|] ([|java:io:File|] v2 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.isHidden:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08d0ec.   v0:= v2.[|java:io:File.path|]   @type object;
#L08d0f0.   call temp:=  [|java:lang:String.isEmpty|](v0) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08d0f6.   v0:= temp;
#L08d0f8.   if v0 == 0 then goto L08d100;
#L08d0fc.   v0:= 0  @length 4;
#L08d0fe.   return v0;
#L08d100.   call temp:=  [|java:io:File.getName|](v2) @signature [|Ljava/io/File;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08d106.   v0:= temp  @type object;
#L08d108.   v1:= "." @type (object, string);
#L08d10c.   call temp:=  [|java:lang:String.startsWith|](v0, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08d112.   v0:= temp;
#L08d114.   goto L08d0fe;

   }
    procedure [|long|] [|java:io:File.lastModified|] ([|java:io:File|] v5 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.lastModified:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08d128.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08d12c.   v2:= v5.[|java:io:File.path|]   @type object;
#L08d130.   call temp:=  [|libcore:io:Os.stat|](v1, v2) @signature [|Llibcore/io/Os;.stat:(Ljava/lang/String;)Llibcore/io/StructStat;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08d136.   v1:= temp  @type object;
#L08d138.   v1:= v1.[|libcore:io:StructStat.st_mtime|]   @wide;
#L08d13c.   v3:= 1000  @length wide16;
#L08d140.   v1:= v1 * v3  @type long;
#L08d142.   return v1  @type wide;
#L08d144.   v0:= Exception  @type object;
#L08d146.   v1:= 0  @length wide16;
#L08d14a.   goto L08d142;
  catch  [|libcore:io:ErrnoException|] @[L08d128..L08d13c] goto L08d144;

   }
    procedure [|long|] [|java:io:File.length|] ([|java:io:File|] v3 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.length:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08d16c.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08d170.   v2:= v3.[|java:io:File.path|]   @type object;
#L08d174.   call temp:=  [|libcore:io:Os.stat|](v1, v2) @signature [|Llibcore/io/Os;.stat:(Ljava/lang/String;)Llibcore/io/StructStat;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08d17a.   v1:= temp  @type object;
#L08d17c.   v1:= v1.[|libcore:io:StructStat.st_size|]   @wide;
#L08d180.   return v1  @type wide;
#L08d182.   v0:= Exception  @type object;
#L08d184.   v1:= 0  @length wide16;
#L08d188.   goto L08d180;
  catch  [|libcore:io:ErrnoException|] @[L08d16c..L08d180] goto L08d182;

   }
    procedure [|java:lang:String|][] [|java:io:File.list|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.list:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d1ac.   v0:= v1.[|java:io:File.path|]   @type object;
#L08d1b0.   call temp:=  [|java:io:File.listImpl|](v0) @signature [|Ljava/io/File;.listImpl:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type static;
#L08d1b6.   v0:= temp  @type object;
#L08d1b8.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|java:io:File.list|] ([|java:io:File|] v7 @type (this), [|java:io:FilenameFilter|] v8 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.list:(Ljava/io/FilenameFilter;)[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L08d1cc.   call temp:=  [|java:io:File.list|](v7) @signature [|Ljava/io/File;.list:()[Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08d1d2.   v2:= temp  @type object;
#L08d1d4.   if v8 == 0 then goto L08d1dc;
#L08d1d8.   if v2 != 0 then goto L08d1e0;
#L08d1dc.   v6:= v2  @type object;
#L08d1de.   return v6  @type object;
#L08d1e0.   v5:= new [|java:util:ArrayList|];
#L08d1e4.   v6:= v2.length;
#L08d1e6.   call temp:=  [|java:util:ArrayList.<init>|](v5, v6) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L08d1ec.   v0:= v2  @type object;
#L08d1ee.   v4:= v0.length;
#L08d1f0.   v3:= 0  @length 4;
#L08d1f2.   if v3 >= v4 then goto L08d212;
#L08d1f6.   v1:= v0[v3]  @type object;
#L08d1fa.   call temp:=  [|java:io:FilenameFilter.accept|](v8, v7, v1) @signature [|Ljava/io/FilenameFilter;.accept:(Ljava/io/File;Ljava/lang/String;)Z|] @classDescriptor [|java:io:FilenameFilter|] @type interface;
#L08d200.   v6:= temp;
#L08d202.   if v6 == 0 then goto L08d20c;
#L08d206.   call temp:=  [|java:util:List.add|](v5, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L08d20c.   v3:= v3 + 1;
#L08d210.   goto L08d1f2;
#L08d212.   call temp:=  [|java:util:List.size|](v5) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L08d218.   v6:= temp;
#L08d21a.   v6:= new [|java:lang:String|][v6];
#L08d21e.   call temp:=  [|java:util:List.toArray|](v5, v6) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L08d224.   v6:= temp  @type object;
#L08d226.   v6:= ([|java:lang:String|][])v6;
#L08d22a.   goto L08d1de;

   }
    procedure [|java:io:File|][] [|java:io:File.listFiles|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.listFiles:()[Ljava/io/File;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d23c.   call temp:=  [|java:io:File.list|](v1) @signature [|Ljava/io/File;.list:()[Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08d242.   v0:= temp  @type object;
#L08d244.   call temp:=  [|java:io:File.filenamesToFiles|](v1, v0) @signature [|Ljava/io/File;.filenamesToFiles:([Ljava/lang/String;)[Ljava/io/File;|] @classDescriptor [|java:io:File|] @type direct;
#L08d24a.   v0:= temp  @type object;
#L08d24c.   return v0  @type object;

   }
    procedure [|java:io:File|][] [|java:io:File.listFiles|] ([|java:io:File|] v7 @type (this), [|java:io:FileFilter|] v8 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L08d260.   call temp:=  [|java:io:File.listFiles|](v7) @signature [|Ljava/io/File;.listFiles:()[Ljava/io/File;|] @classDescriptor [|java:io:File|] @type virtual;
#L08d266.   v2:= temp  @type object;
#L08d268.   if v8 == 0 then goto L08d270;
#L08d26c.   if v2 != 0 then goto L08d274;
#L08d270.   v6:= v2  @type object;
#L08d272.   return v6  @type object;
#L08d274.   v5:= new [|java:util:ArrayList|];
#L08d278.   v6:= v2.length;
#L08d27a.   call temp:=  [|java:util:ArrayList.<init>|](v5, v6) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L08d280.   v0:= v2  @type object;
#L08d282.   v4:= v0.length;
#L08d284.   v3:= 0  @length 4;
#L08d286.   if v3 >= v4 then goto L08d2a6;
#L08d28a.   v1:= v0[v3]  @type object;
#L08d28e.   call temp:=  [|java:io:FileFilter.accept|](v8, v1) @signature [|Ljava/io/FileFilter;.accept:(Ljava/io/File;)Z|] @classDescriptor [|java:io:FileFilter|] @type interface;
#L08d294.   v6:= temp;
#L08d296.   if v6 == 0 then goto L08d2a0;
#L08d29a.   call temp:=  [|java:util:List.add|](v5, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L08d2a0.   v3:= v3 + 1;
#L08d2a4.   goto L08d286;
#L08d2a6.   call temp:=  [|java:util:List.size|](v5) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L08d2ac.   v6:= temp;
#L08d2ae.   v6:= new [|java:io:File|][v6];
#L08d2b2.   call temp:=  [|java:util:List.toArray|](v5, v6) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L08d2b8.   v6:= temp  @type object;
#L08d2ba.   v6:= ([|java:io:File|][])v6;
#L08d2be.   goto L08d272;

   }
    procedure [|java:io:File|][] [|java:io:File.listFiles|] ([|java:io:File|] v1 @type (this), [|java:io:FilenameFilter|] v2 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.listFiles:(Ljava/io/FilenameFilter;)[Ljava/io/File;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d2d0.   call temp:=  [|java:io:File.list|](v1, v2) @signature [|Ljava/io/File;.list:(Ljava/io/FilenameFilter;)[Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08d2d6.   v0:= temp  @type object;
#L08d2d8.   call temp:=  [|java:io:File.filenamesToFiles|](v1, v0) @signature [|Ljava/io/File;.filenamesToFiles:([Ljava/lang/String;)[Ljava/io/File;|] @classDescriptor [|java:io:File|] @type direct;
#L08d2de.   v0:= temp  @type object;
#L08d2e0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:File.mkdir|] ([|java:io:File|] v2 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.mkdir:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08d2f4.   call temp:=  [|java:io:File.mkdirErrno|](v2) @signature [|Ljava/io/File;.mkdirErrno:()V|] @classDescriptor [|java:io:File|] @type direct;
#L08d2fa.   v1:= 1  @length 4;
#L08d2fc.   return v1;
#L08d2fe.   v0:= Exception  @type object;
#L08d300.   v1:= 0  @length 4;
#L08d302.   goto L08d2fc;
  catch  [|libcore:io:ErrnoException|] @[L08d2f4..L08d2fa] goto L08d2fe;

   }
    procedure [|boolean|] [|java:io:File.mkdirs|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.mkdirs:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d324.   v0:= 0  @length 4;
#L08d326.   call temp:=  [|java:io:File.mkdirs|](v1, v0) @signature [|Ljava/io/File;.mkdirs:(Z)Z|] @classDescriptor [|java:io:File|] @type direct;
#L08d32c.   v0:= temp;
#L08d32e.   return v0;

   }
    procedure [|boolean|] [|java:io:File.renameTo|] ([|java:io:File|] v4 @type (this), [|java:io:File|] v5 @type (object)) @owner [|java:io:File|] @signature [|Ljava/io/File;.renameTo:(Ljava/io/File;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08d340.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08d344.   v2:= v4.[|java:io:File.path|]   @type object;
#L08d348.   v3:= v5.[|java:io:File.path|]   @type object;
#L08d34c.   call temp:=  [|libcore:io:Os.rename|](v1, v2, v3) @signature [|Llibcore/io/Os;.rename:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08d352.   v1:= 1  @length 4;
#L08d354.   return v1;
#L08d356.   v0:= Exception  @type object;
#L08d358.   v1:= 0  @length 4;
#L08d35a.   goto L08d354;
  catch  [|libcore:io:ErrnoException|] @[L08d340..L08d352] goto L08d356;

   }
    procedure [|boolean|] [|java:io:File.setExecutable|] ([|java:io:File|] v1 @type (this), [|boolean|] v2) @owner [|java:io:File|] @signature [|Ljava/io/File;.setExecutable:(Z)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d37c.   v0:= 1  @length 4;
#L08d37e.   call temp:=  [|java:io:File.setExecutable|](v1, v2, v0) @signature [|Ljava/io/File;.setExecutable:(ZZ)Z|] @classDescriptor [|java:io:File|] @type virtual;
#L08d384.   v0:= temp;
#L08d386.   return v0;

   }
    procedure [|boolean|] [|java:io:File.setExecutable|] ([|java:io:File|] v2 @type (this), [|boolean|] v3, [|boolean|] v4) @owner [|java:io:File|] @signature [|Ljava/io/File;.setExecutable:(ZZ)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08d398.   if v4 == 0 then goto L08d3aa;
#L08d39c.   v0:= @@[|libcore:io:OsConstants.S_IXUSR|] ;
#L08d3a0.   call temp:=  [|java:io:File.doChmod|](v2, v0, v3) @signature [|Ljava/io/File;.doChmod:(IZ)Z|] @classDescriptor [|java:io:File|] @type direct;
#L08d3a6.   v0:= temp;
#L08d3a8.   return v0;
#L08d3aa.   v0:= @@[|libcore:io:OsConstants.S_IXUSR|] ;
#L08d3ae.   v1:= @@[|libcore:io:OsConstants.S_IXGRP|] ;
#L08d3b2.   v0:= v0 ^| v1  @type int;
#L08d3b4.   v1:= @@[|libcore:io:OsConstants.S_IXOTH|] ;
#L08d3b8.   v0:= v0 ^| v1  @type int;
#L08d3ba.   goto L08d3a0;

   }
    procedure [|boolean|] [|java:io:File.setLastModified|] ([|java:io:File|] v2 @type (this), [|long|] v3) @owner [|java:io:File|] @signature [|Ljava/io/File;.setLastModified:(J)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08d3cc.   v0:= 0  @length wide16;
#L08d3d0.   v0:= cmp(v3,v0);
#L08d3d4.   if v0 >= 0 then goto L08d3e8;
#L08d3d8.   v0:= new [|java:lang:IllegalArgumentException|];
#L08d3dc.   v1:= "time < 0" @type (object, string);
#L08d3e0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08d3e6.   throw v0;
#L08d3e8.   v0:= v2.[|java:io:File.path|]   @type object;
#L08d3ec.   call temp:=  [|java:io:File.setLastModifiedImpl|](v0, v3, v4) @signature [|Ljava/io/File;.setLastModifiedImpl:(Ljava/lang/String;J)Z|] @classDescriptor [|java:io:File|] @type static;
#L08d3f2.   v0:= temp;
#L08d3f4.   return v0;

   }
    procedure [|boolean|] [|java:io:File.setReadOnly|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.setReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d408.   v0:= 0  @length 4;
#L08d40a.   call temp:=  [|java:io:File.setWritable|](v1, v0, v0) @signature [|Ljava/io/File;.setWritable:(ZZ)Z|] @classDescriptor [|java:io:File|] @type virtual;
#L08d410.   v0:= temp;
#L08d412.   return v0;

   }
    procedure [|boolean|] [|java:io:File.setReadable|] ([|java:io:File|] v1 @type (this), [|boolean|] v2) @owner [|java:io:File|] @signature [|Ljava/io/File;.setReadable:(Z)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d424.   v0:= 1  @length 4;
#L08d426.   call temp:=  [|java:io:File.setReadable|](v1, v2, v0) @signature [|Ljava/io/File;.setReadable:(ZZ)Z|] @classDescriptor [|java:io:File|] @type virtual;
#L08d42c.   v0:= temp;
#L08d42e.   return v0;

   }
    procedure [|boolean|] [|java:io:File.setReadable|] ([|java:io:File|] v2 @type (this), [|boolean|] v3, [|boolean|] v4) @owner [|java:io:File|] @signature [|Ljava/io/File;.setReadable:(ZZ)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08d440.   if v4 == 0 then goto L08d452;
#L08d444.   v0:= @@[|libcore:io:OsConstants.S_IRUSR|] ;
#L08d448.   call temp:=  [|java:io:File.doChmod|](v2, v0, v3) @signature [|Ljava/io/File;.doChmod:(IZ)Z|] @classDescriptor [|java:io:File|] @type direct;
#L08d44e.   v0:= temp;
#L08d450.   return v0;
#L08d452.   v0:= @@[|libcore:io:OsConstants.S_IRUSR|] ;
#L08d456.   v1:= @@[|libcore:io:OsConstants.S_IRGRP|] ;
#L08d45a.   v0:= v0 ^| v1  @type int;
#L08d45c.   v1:= @@[|libcore:io:OsConstants.S_IROTH|] ;
#L08d460.   v0:= v0 ^| v1  @type int;
#L08d462.   goto L08d448;

   }
    procedure [|boolean|] [|java:io:File.setWritable|] ([|java:io:File|] v1 @type (this), [|boolean|] v2) @owner [|java:io:File|] @signature [|Ljava/io/File;.setWritable:(Z)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d474.   v0:= 1  @length 4;
#L08d476.   call temp:=  [|java:io:File.setWritable|](v1, v2, v0) @signature [|Ljava/io/File;.setWritable:(ZZ)Z|] @classDescriptor [|java:io:File|] @type virtual;
#L08d47c.   v0:= temp;
#L08d47e.   return v0;

   }
    procedure [|boolean|] [|java:io:File.setWritable|] ([|java:io:File|] v2 @type (this), [|boolean|] v3, [|boolean|] v4) @owner [|java:io:File|] @signature [|Ljava/io/File;.setWritable:(ZZ)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08d490.   if v4 == 0 then goto L08d4a2;
#L08d494.   v0:= @@[|libcore:io:OsConstants.S_IWUSR|] ;
#L08d498.   call temp:=  [|java:io:File.doChmod|](v2, v0, v3) @signature [|Ljava/io/File;.doChmod:(IZ)Z|] @classDescriptor [|java:io:File|] @type direct;
#L08d49e.   v0:= temp;
#L08d4a0.   return v0;
#L08d4a2.   v0:= @@[|libcore:io:OsConstants.S_IWUSR|] ;
#L08d4a6.   v1:= @@[|libcore:io:OsConstants.S_IWGRP|] ;
#L08d4aa.   v0:= v0 ^| v1  @type int;
#L08d4ac.   v1:= @@[|libcore:io:OsConstants.S_IWOTH|] ;
#L08d4b0.   v0:= v0 ^| v1  @type int;
#L08d4b2.   goto L08d498;

   }
    procedure [|java:lang:String|] [|java:io:File.toString|] ([|java:io:File|] v1 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d4c4.   v0:= v1.[|java:io:File.path|]   @type object;
#L08d4c8.   return v0  @type object;

   }
    procedure [|java:net:URI|] [|java:io:File.toURI|] ([|java:io:File|] v8 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.toURI:()Ljava/net/URI;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L08d4dc.   v7:= 0  @length 4;
#L08d4de.   call temp:=  [|java:io:File.getAbsoluteName|](v8) @signature [|Ljava/io/File;.getAbsoluteName:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type direct;
#L08d4e4.   v3:= temp  @type object;
#L08d4e6.   v0:= "/" @type (object, string);
#L08d4ea.   call temp:=  [|java:lang:String.startsWith|](v3, v0) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08d4f0.   v0:= temp;
#L08d4f2.   if v0 != 0 then goto L08d532;
#L08d4f6.   v0:= new [|java:net:URI|];
#L08d4fa.   v1:= "file" @type (object, string);
#L08d4fe.   v2:= 0  @length 4;
#L08d500.   v4:= new [|java:lang:StringBuilder|];
#L08d504.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08d50a.   v5:= "/" @type (object, string);
#L08d50e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d514.   v4:= temp  @type object;
#L08d516.   call temp:=  [|java:lang:StringBuilder.append|](v4, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d51c.   v4:= temp  @type object;
#L08d51e.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d524.   v3:= temp  @type object;
#L08d526.   v4:= 0  @length 4;
#L08d528.   v5:= 0  @length 4;
#L08d52a.   call temp:=  [|java:net:URI.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L08d530.   return v0  @type object;
#L08d532.   v0:= "//" @type (object, string);
#L08d536.   call temp:=  [|java:lang:String.startsWith|](v3, v0) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08d53c.   v0:= temp;
#L08d53e.   if v0 == 0 then goto L08d55e;
#L08d542.   v0:= new [|java:net:URI|];
#L08d546.   v1:= "file" @type (object, string);
#L08d54a.   v2:= "" @type (object, string);
#L08d54e.   v4:= 0  @length 4;
#L08d550.   call temp:=  [|java:net:URI.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L08d556.   goto L08d530;
#L08d558.   v6:= Exception  @type object;
#L08d55a.   v0:= v7  @type object;
#L08d55c.   goto L08d530;
#L08d55e.   v0:= new [|java:net:URI|];
#L08d562.   v1:= "file" @type (object, string);
#L08d566.   v2:= 0  @length 4;
#L08d568.   v4:= 0  @length 4;
#L08d56a.   v5:= 0  @length 4;
#L08d56c.   call temp:=  [|java:net:URI.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L08d572.   goto L08d530;
  catch  [|java:net:URISyntaxException|] @[L08d4e6..L08d572] goto L08d558;

   }
    procedure [|java:net:URL|] [|java:io:File.toURL|] ([|java:io:File|] v8 @type (this)) @owner [|java:io:File|] @signature [|Ljava/io/File;.toURL:()Ljava/net/URL;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L08d594.   v5:= 0  @length 4;
#L08d596.   v3:= -1  @length 4;
#L08d598.   call temp:=  [|java:io:File.getAbsoluteName|](v8) @signature [|Ljava/io/File;.getAbsoluteName:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type direct;
#L08d59e.   v4:= temp  @type object;
#L08d5a0.   v0:= "/" @type (object, string);
#L08d5a4.   call temp:=  [|java:lang:String.startsWith|](v4, v0) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08d5aa.   v0:= temp;
#L08d5ac.   if v0 != 0 then goto L08d5ea;
#L08d5b0.   v0:= new [|java:net:URL|];
#L08d5b4.   v1:= "file" @type (object, string);
#L08d5b8.   v2:= "" @type (object, string);
#L08d5bc.   v6:= new [|java:lang:StringBuilder|];
#L08d5c0.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08d5c6.   v7:= "/" @type (object, string);
#L08d5ca.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d5d0.   v6:= temp  @type object;
#L08d5d2.   call temp:=  [|java:lang:StringBuilder.append|](v6, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d5d8.   v6:= temp  @type object;
#L08d5da.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d5e0.   v4:= temp  @type object;
#L08d5e2.   call temp:=  [|java:net:URL.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/net/URL;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V|] @classDescriptor [|java:net:URL|] @type direct;
#L08d5e8.   return v0  @type object;
#L08d5ea.   v0:= "//" @type (object, string);
#L08d5ee.   call temp:=  [|java:lang:String.startsWith|](v4, v0) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L08d5f4.   v0:= temp;
#L08d5f6.   if v0 == 0 then goto L08d62c;
#L08d5fa.   v0:= new [|java:net:URL|];
#L08d5fe.   v1:= new [|java:lang:StringBuilder|];
#L08d602.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08d608.   v2:= "file:" @type (object, string);
#L08d60c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d612.   v1:= temp  @type object;
#L08d614.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d61a.   v1:= temp  @type object;
#L08d61c.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d622.   v1:= temp  @type object;
#L08d624.   call temp:=  [|java:net:URL.<init>|](v0, v1) @signature [|Ljava/net/URL;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:URL|] @type direct;
#L08d62a.   goto L08d5e8;
#L08d62c.   v0:= new [|java:net:URL|];
#L08d630.   v1:= "file" @type (object, string);
#L08d634.   v2:= "" @type (object, string);
#L08d638.   call temp:=  [|java:net:URL.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/net/URL;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V|] @classDescriptor [|java:net:URL|] @type direct;
#L08d63e.   goto L08d5e8;

   }
record [|java:io:FileDescriptor|]  @type class @AccessFlag PUBLIC_FINAL  {
      [|int|] [|java:io:FileDescriptor.descriptor|]    @AccessFlag PRIVATE;
   }
      global [|java:io:FileDescriptor|] @@[|java:io:FileDescriptor.err|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:io:FileDescriptor|] @@[|java:io:FileDescriptor.in|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:io:FileDescriptor|] @@[|java:io:FileDescriptor.out|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:io:FileDescriptor.<clinit>|] () @owner [|java:io:FileDescriptor|] @signature [|Ljava/io/FileDescriptor;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08d650.   v0:= new [|java:io:FileDescriptor|];
#L08d654.   call temp:=  [|java:io:FileDescriptor.<init>|](v0) @signature [|Ljava/io/FileDescriptor;.<init>:()V|] @classDescriptor [|java:io:FileDescriptor|] @type direct;
#L08d65a.   @@[|java:io:FileDescriptor.in|] := v0  @type object;
#L08d65e.   v0:= new [|java:io:FileDescriptor|];
#L08d662.   call temp:=  [|java:io:FileDescriptor.<init>|](v0) @signature [|Ljava/io/FileDescriptor;.<init>:()V|] @classDescriptor [|java:io:FileDescriptor|] @type direct;
#L08d668.   @@[|java:io:FileDescriptor.out|] := v0  @type object;
#L08d66c.   v0:= new [|java:io:FileDescriptor|];
#L08d670.   call temp:=  [|java:io:FileDescriptor.<init>|](v0) @signature [|Ljava/io/FileDescriptor;.<init>:()V|] @classDescriptor [|java:io:FileDescriptor|] @type direct;
#L08d676.   @@[|java:io:FileDescriptor.err|] := v0  @type object;
#L08d67a.   v0:= @@[|java:io:FileDescriptor.in|]   @type object;
#L08d67e.   v1:= @@[|libcore:io:OsConstants.STDIN_FILENO|] ;
#L08d682.   v0.[|java:io:FileDescriptor.descriptor|]  := v1;
#L08d686.   v0:= @@[|java:io:FileDescriptor.out|]   @type object;
#L08d68a.   v1:= @@[|libcore:io:OsConstants.STDOUT_FILENO|] ;
#L08d68e.   v0.[|java:io:FileDescriptor.descriptor|]  := v1;
#L08d692.   v0:= @@[|java:io:FileDescriptor.err|]   @type object;
#L08d696.   v1:= @@[|libcore:io:OsConstants.STDERR_FILENO|] ;
#L08d69a.   v0.[|java:io:FileDescriptor.descriptor|]  := v1;
#L08d69e.   return @void ;

   }
    procedure [|void|] [|java:io:FileDescriptor.<init>|] ([|java:io:FileDescriptor|] v1 @type (this)) @owner [|java:io:FileDescriptor|] @signature [|Ljava/io/FileDescriptor;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08d6b0.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08d6b6.   v0:= -1  @length 4;
#L08d6b8.   v1.[|java:io:FileDescriptor.descriptor|]  := v0;
#L08d6bc.   return @void ;

   }
    procedure [|int|] [|java:io:FileDescriptor.getInt$|] ([|java:io:FileDescriptor|] v1 @type (this)) @owner [|java:io:FileDescriptor|] @signature [|Ljava/io/FileDescriptor;.getInt$:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08d6d0.   v0:= v1.[|java:io:FileDescriptor.descriptor|] ;
#L08d6d4.   return v0;

   }
    procedure [|void|] [|java:io:FileDescriptor.setInt$|] ([|java:io:FileDescriptor|] v0 @type (this), [|int|] v1) @owner [|java:io:FileDescriptor|] @signature [|Ljava/io/FileDescriptor;.setInt$:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L08d6e8.   v0.[|java:io:FileDescriptor.descriptor|]  := v1;
#L08d6ec.   return @void ;

   }
    procedure [|void|] [|java:io:FileDescriptor.sync|] ([|java:io:FileDescriptor|] v3 @type (this)) @owner [|java:io:FileDescriptor|] @signature [|Ljava/io/FileDescriptor;.sync:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08d700.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L08d704.   call temp:=  [|libcore:io:Os.isatty|](v2, v3) @signature [|Llibcore/io/Os;.isatty:(Ljava/io/FileDescriptor;)Z|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08d70a.   v2:= temp;
#L08d70c.   if v2 == 0 then goto L08d71c;
#L08d710.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L08d714.   call temp:=  [|libcore:io:Os.tcdrain|](v2, v3) @signature [|Llibcore/io/Os;.tcdrain:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08d71a.   return @void ;
#L08d71c.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L08d720.   call temp:=  [|libcore:io:Os.fsync|](v2, v3) @signature [|Llibcore/io/Os;.fsync:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08d726.   goto L08d71a;
#L08d728.   v0:= Exception  @type object;
#L08d72a.   v1:= new [|java:io:SyncFailedException|];
#L08d72e.   call temp:=  [|libcore:io:ErrnoException.getMessage|](v0) @signature [|Llibcore/io/ErrnoException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L08d734.   v2:= temp  @type object;
#L08d736.   call temp:=  [|java:io:SyncFailedException.<init>|](v1, v2) @signature [|Ljava/io/SyncFailedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:SyncFailedException|] @type direct;
#L08d73c.   call temp:=  [|java:io:SyncFailedException.initCause|](v1, v0) @signature [|Ljava/io/SyncFailedException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:io:SyncFailedException|] @type virtual;
#L08d742.   throw v1;
  catch  [|libcore:io:ErrnoException|] @[L08d700..L08d726] goto L08d728;

   }
    procedure [|java:lang:String|] [|java:io:FileDescriptor.toString|] ([|java:io:FileDescriptor|] v2 @type (this)) @owner [|java:io:FileDescriptor|] @signature [|Ljava/io/FileDescriptor;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08d764.   v0:= new [|java:lang:StringBuilder|];
#L08d768.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08d76e.   v1:= "FileDescriptor[" @type (object, string);
#L08d772.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d778.   v0:= temp  @type object;
#L08d77a.   v1:= v2.[|java:io:FileDescriptor.descriptor|] ;
#L08d77e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d784.   v0:= temp  @type object;
#L08d786.   v1:= "]" @type (object, string);
#L08d78a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d790.   v0:= temp  @type object;
#L08d792.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08d798.   v0:= temp  @type object;
#L08d79a.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:FileDescriptor.valid|] ([|java:io:FileDescriptor|] v2 @type (this)) @owner [|java:io:FileDescriptor|] @signature [|Ljava/io/FileDescriptor;.valid:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08d7ac.   v0:= v2.[|java:io:FileDescriptor.descriptor|] ;
#L08d7b0.   v1:= -1  @length 4;
#L08d7b2.   if v0 == v1 then goto L08d7ba;
#L08d7b6.   v0:= 1  @length 4;
#L08d7b8.   return v0;
#L08d7ba.   v0:= 0  @length 4;
#L08d7bc.   goto L08d7b8;

   }
record [|java:io:FileFilter|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|java:io:FileFilter.accept|] ([|java:io:File|] v0 @type (object)) @owner [|java:io:FileFilter|] @signature [|Ljava/io/FileFilter;.accept:(Ljava/io/File;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:FileInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:InputStream|], [|java:io:Closeable|] {
      [|java:nio:channels:FileChannel|] [|java:io:FileInputStream.channel|]    @AccessFlag PRIVATE;
      [|java:io:FileDescriptor|] [|java:io:FileInputStream.fd|]    @AccessFlag PRIVATE;
      [|dalvik:system:CloseGuard|] [|java:io:FileInputStream.guard|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:io:FileInputStream.shouldClose|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:io:FileInputStream.<init>|] ([|java:io:FileInputStream|] v2 @type (this), [|java:io:File|] v3 @type (object)) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08d7d0.   call temp:=  [|java:io:InputStream.<init>|](v2) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L08d7d6.   call temp:=  [|dalvik:system:CloseGuard.get|]() @signature [|Ldalvik/system/CloseGuard;.get:()Ldalvik/system/CloseGuard;|] @classDescriptor [|dalvik:system:CloseGuard|] @type static;
#L08d7dc.   v0:= temp  @type object;
#L08d7de.   v2.[|java:io:FileInputStream.guard|]  := v0 @type object;
#L08d7e2.   if v3 != 0 then goto L08d7f6;
#L08d7e6.   v0:= new [|java:lang:NullPointerException|];
#L08d7ea.   v1:= "file == null" @type (object, string);
#L08d7ee.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08d7f4.   throw v0;
#L08d7f6.   call temp:=  [|java:io:File.getAbsolutePath|](v3) @signature [|Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08d7fc.   v0:= temp  @type object;
#L08d7fe.   v1:= @@[|libcore:io:OsConstants.O_RDONLY|] ;
#L08d802.   call temp:=  [|libcore:io:IoBridge.open|](v0, v1) @signature [|Llibcore/io/IoBridge;.open:(Ljava/lang/String;I)Ljava/io/FileDescriptor;|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L08d808.   v0:= temp  @type object;
#L08d80a.   v2.[|java:io:FileInputStream.fd|]  := v0 @type object;
#L08d80e.   v0:= 1  @length 4;
#L08d810.   v2.[|java:io:FileInputStream.shouldClose|]  := v0 @boolean;
#L08d814.   v0:= v2.[|java:io:FileInputStream.guard|]   @type object;
#L08d818.   v1:= "close" @type (object, string);
#L08d81c.   call temp:=  [|dalvik:system:CloseGuard.open|](v0, v1) @signature [|Ldalvik/system/CloseGuard;.open:(Ljava/lang/String;)V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L08d822.   return @void ;

   }
    procedure [|void|] [|java:io:FileInputStream.<init>|] ([|java:io:FileInputStream|] v2 @type (this), [|java:io:FileDescriptor|] v3 @type (object)) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/FileDescriptor;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08d834.   call temp:=  [|java:io:InputStream.<init>|](v2) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L08d83a.   call temp:=  [|dalvik:system:CloseGuard.get|]() @signature [|Ldalvik/system/CloseGuard;.get:()Ldalvik/system/CloseGuard;|] @classDescriptor [|dalvik:system:CloseGuard|] @type static;
#L08d840.   v0:= temp  @type object;
#L08d842.   v2.[|java:io:FileInputStream.guard|]  := v0 @type object;
#L08d846.   if v3 != 0 then goto L08d85a;
#L08d84a.   v0:= new [|java:lang:NullPointerException|];
#L08d84e.   v1:= "fd == null" @type (object, string);
#L08d852.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08d858.   throw v0;
#L08d85a.   v2.[|java:io:FileInputStream.fd|]  := v3 @type object;
#L08d85e.   v0:= 0  @length 4;
#L08d860.   v2.[|java:io:FileInputStream.shouldClose|]  := v0 @boolean;
#L08d864.   return @void ;

   }
    procedure [|void|] [|java:io:FileInputStream.<init>|] ([|java:io:FileInputStream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08d878.   v0:= new [|java:io:File|];
#L08d87c.   call temp:=  [|java:io:File.<init>|](v0, v2) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08d882.   call temp:=  [|java:io:FileInputStream.<init>|](v1, v0) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L08d888.   return @void ;

   }
    procedure [|int|] [|java:io:FileInputStream.available|] ([|java:io:FileInputStream|] v1 @type (this)) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d89c.   v0:= v1.[|java:io:FileInputStream.fd|]   @type object;
#L08d8a0.   call temp:=  [|libcore:io:IoBridge.available|](v0) @signature [|Llibcore/io/IoBridge;.available:(Ljava/io/FileDescriptor;)I|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L08d8a6.   v0:= temp;
#L08d8a8.   return v0;

   }
    procedure [|void|] [|java:io:FileInputStream.close|] ([|java:io:FileInputStream|] v1 @type (this)) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08d8bc.   v0:= v1.[|java:io:FileInputStream.guard|]   @type object;
#L08d8c0.   call temp:=  [|dalvik:system:CloseGuard.close|](v0) @signature [|Ldalvik/system/CloseGuard;.close:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L08d8c6.   (@monitorenter v1)
#L08d8c8.   v0:= v1.[|java:io:FileInputStream.channel|]   @type object;
#L08d8cc.   if v0 == 0 then goto L08d8da;
#L08d8d0.   v0:= v1.[|java:io:FileInputStream.channel|]   @type object;
#L08d8d4.   call temp:=  [|java:nio:channels:FileChannel.close|](v0) @signature [|Ljava/nio/channels/FileChannel;.close:()V|] @classDescriptor [|java:nio:channels:FileChannel|] @type virtual;
#L08d8da.   v0:= v1.[|java:io:FileInputStream.shouldClose|]   @boolean;
#L08d8de.   if v0 == 0 then goto L08d8f0;
#L08d8e2.   v0:= v1.[|java:io:FileInputStream.fd|]   @type object;
#L08d8e6.   call temp:=  [|libcore:io:IoUtils.close|](v0) @signature [|Llibcore/io/IoUtils;.close:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L08d8ec.   (@monitorexit v1)
#L08d8ee.   return @void ;
#L08d8f0.   v0:= new [|java:io:FileDescriptor|];
#L08d8f4.   call temp:=  [|java:io:FileDescriptor.<init>|](v0) @signature [|Ljava/io/FileDescriptor;.<init>:()V|] @classDescriptor [|java:io:FileDescriptor|] @type direct;
#L08d8fa.   v1.[|java:io:FileInputStream.fd|]  := v0 @type object;
#L08d8fe.   goto L08d8ec;
#L08d900.   v0:= Exception  @type object;
#L08d902.   (@monitorexit v1)
#L08d904.   throw v0;
  catch  [|any|] @[L08d8c8..L08d904] goto L08d900;

   }
    procedure [|void|] [|java:io:FileInputStream.finalize|] ([|java:io:FileInputStream|] v2 @type (this)) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L08d924.   v1:= v2.[|java:io:FileInputStream.guard|]   @type object;
#L08d928.   if v1 == 0 then goto L08d936;
#L08d92c.   v1:= v2.[|java:io:FileInputStream.guard|]   @type object;
#L08d930.   call temp:=  [|dalvik:system:CloseGuard.warnIfOpen|](v1) @signature [|Ldalvik/system/CloseGuard;.warnIfOpen:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L08d936.   call temp:=  [|java:io:FileInputStream.close|](v2) @signature [|Ljava/io/FileInputStream;.close:()V|] @classDescriptor [|java:io:FileInputStream|] @type virtual;
#L08d93c.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L08d942.   return @void ;
#L08d944.   v0:= Exception  @type object;
#L08d946.   v1:= new [|java:lang:AssertionError|];
#L08d94a.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L08d950.   throw v1;
#L08d952.   v1:= Exception  @type object;
#L08d954.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L08d95a.   throw v1;
#L08d95c.   v0:= Exception  @type object;
#L08d95e.   v1:= new [|java:lang:AssertionError|];
#L08d962.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L08d968.   throw v1;
  catch  [|any|] @[L08d924..L08d93c] goto L08d952;
  catch  [|java:lang:Throwable|] @[L08d93c..L08d942] goto L08d944;
  catch  [|java:lang:Throwable|] @[L08d954..L08d95a] goto L08d95c;

   }
    procedure [|java:nio:channels:FileChannel|] [|java:io:FileInputStream.getChannel|] ([|java:io:FileInputStream|] v2 @type (this)) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.getChannel:()Ljava/nio/channels/FileChannel;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08d9a0.   (@monitorenter v2)
#L08d9a2.   v0:= v2.[|java:io:FileInputStream.channel|]   @type object;
#L08d9a6.   if v0 != 0 then goto L08d9be;
#L08d9aa.   v0:= v2.[|java:io:FileInputStream.fd|]   @type object;
#L08d9ae.   v1:= @@[|libcore:io:OsConstants.O_RDONLY|] ;
#L08d9b2.   call temp:=  [|java:nio:NioUtils.newFileChannel|](v2, v0, v1) @signature [|Ljava/nio/NioUtils;.newFileChannel:(Ljava/lang/Object;Ljava/io/FileDescriptor;I)Ljava/nio/channels/FileChannel;|] @classDescriptor [|java:nio:NioUtils|] @type static;
#L08d9b8.   v0:= temp  @type object;
#L08d9ba.   v2.[|java:io:FileInputStream.channel|]  := v0 @type object;
#L08d9be.   v0:= v2.[|java:io:FileInputStream.channel|]   @type object;
#L08d9c2.   (@monitorexit v2)
#L08d9c4.   return v0  @type object;
#L08d9c6.   v0:= Exception  @type object;
#L08d9c8.   (@monitorexit v2)
#L08d9ca.   throw v0;
  catch  [|any|] @[L08d9a2..L08d9ca] goto L08d9c6;

   }
    procedure [|java:io:FileDescriptor|] [|java:io:FileInputStream.getFD|] ([|java:io:FileInputStream|] v1 @type (this)) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.getFD:()Ljava/io/FileDescriptor;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08d9e8.   v0:= v1.[|java:io:FileInputStream.fd|]   @type object;
#L08d9ec.   return v0  @type object;

   }
    procedure [|int|] [|java:io:FileInputStream.read|] ([|java:io:FileInputStream|] v1 @type (this)) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08da00.   call temp:=  [|libcore:io:Streams.readSingleByte|](v1) @signature [|Llibcore/io/Streams;.readSingleByte:(Ljava/io/InputStream;)I|] @classDescriptor [|libcore:io:Streams|] @type static;
#L08da06.   v0:= temp;
#L08da08.   return v0;

   }
    procedure [|int|] [|java:io:FileInputStream.read|] ([|java:io:FileInputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08da1c.   v0:= v1.[|java:io:FileInputStream.fd|]   @type object;
#L08da20.   call temp:=  [|libcore:io:IoBridge.read|](v0, v2, v3, v4) @signature [|Llibcore/io/IoBridge;.read:(Ljava/io/FileDescriptor;[BII)I|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L08da26.   v0:= temp;
#L08da28.   return v0;

   }
    procedure [|long|] [|java:io:FileInputStream.skip|] ([|java:io:FileInputStream|] v4 @type (this), [|long|] v5) @owner [|java:io:FileInputStream|] @signature [|Ljava/io/FileInputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08da3c.   v1:= 0  @length wide16;
#L08da40.   v1:= cmp(v5,v1);
#L08da44.   if v1 >= 0 then goto L08da7a;
#L08da48.   v1:= new [|java:io:IOException|];
#L08da4c.   v2:= new [|java:lang:StringBuilder|];
#L08da50.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08da56.   v3:= "byteCount < 0: " @type (object, string);
#L08da5a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08da60.   v2:= temp  @type object;
#L08da62.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08da68.   v2:= temp  @type object;
#L08da6a.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08da70.   v2:= temp  @type object;
#L08da72.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08da78.   throw v1;
#L08da7a.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L08da7e.   v2:= v4.[|java:io:FileInputStream.fd|]   @type object;
#L08da82.   v3:= @@[|libcore:io:OsConstants.SEEK_CUR|] ;
#L08da86.   call temp:=  [|libcore:io:Os.lseek|](v1, v2, v5, v6, v3) @signature [|Llibcore/io/Os;.lseek:(Ljava/io/FileDescriptor;JI)J|] @classDescriptor [|libcore:io:Os|] @type interface;
#L08da8c.   return v5  @type wide;
#L08da8e.   v0:= Exception  @type object;
#L08da90.   v1:= v0.[|libcore:io:ErrnoException.errno|] ;
#L08da94.   v2:= @@[|libcore:io:OsConstants.ESPIPE|] ;
#L08da98.   if v1 != v2 then goto L08daa6;
#L08da9c.   call temp:=  [|java:io:InputStream.skip|](v4, v5, v6) @signature [|Ljava/io/InputStream;.skip:(J)J|] @classDescriptor [|java:io:InputStream|] @type super;
#L08daa2.   v5:= temp  @type wide;
#L08daa4.   goto L08da8c;
#L08daa6.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L08daac.   v1:= temp  @type object;
#L08daae.   throw v1;
  catch  [|libcore:io:ErrnoException|] @[L08da7a..L08da8c] goto L08da8e;

   }
record [|java:io:FileNotFoundException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:io:FileNotFoundException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:FileNotFoundException.<init>|] ([|java:io:FileNotFoundException|] v0 @type (this)) @owner [|java:io:FileNotFoundException|] @signature [|Ljava/io/FileNotFoundException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08dad0.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08dad6.   return @void ;

   }
    procedure [|void|] [|java:io:FileNotFoundException.<init>|] ([|java:io:FileNotFoundException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:FileNotFoundException|] @signature [|Ljava/io/FileNotFoundException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08dae8.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08daee.   return @void ;

   }
record [|java:io:FileOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:OutputStream|], [|java:io:Closeable|] {
      [|java:nio:channels:FileChannel|] [|java:io:FileOutputStream.channel|]    @AccessFlag PRIVATE;
      [|java:io:FileDescriptor|] [|java:io:FileOutputStream.fd|]    @AccessFlag PRIVATE;
      [|dalvik:system:CloseGuard|] [|java:io:FileOutputStream.guard|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:io:FileOutputStream.mode|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:io:FileOutputStream.shouldClose|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:io:FileOutputStream.<init>|] ([|java:io:FileOutputStream|] v1 @type (this), [|java:io:File|] v2 @type (object)) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08db00.   v0:= 0  @length 4;
#L08db02.   call temp:=  [|java:io:FileOutputStream.<init>|](v1, v2, v0) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08db08.   return @void ;

   }
    procedure [|void|] [|java:io:FileOutputStream.<init>|] ([|java:io:FileOutputStream|] v2 @type (this), [|java:io:File|] v3 @type (object), [|boolean|] v4) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08db1c.   call temp:=  [|java:io:OutputStream.<init>|](v2) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L08db22.   call temp:=  [|dalvik:system:CloseGuard.get|]() @signature [|Ldalvik/system/CloseGuard;.get:()Ldalvik/system/CloseGuard;|] @classDescriptor [|dalvik:system:CloseGuard|] @type static;
#L08db28.   v0:= temp  @type object;
#L08db2a.   v2.[|java:io:FileOutputStream.guard|]  := v0 @type object;
#L08db2e.   if v3 != 0 then goto L08db42;
#L08db32.   v0:= new [|java:lang:NullPointerException|];
#L08db36.   v1:= "file == null" @type (object, string);
#L08db3a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08db40.   throw v0;
#L08db42.   v0:= @@[|libcore:io:OsConstants.O_WRONLY|] ;
#L08db46.   v1:= @@[|libcore:io:OsConstants.O_CREAT|] ;
#L08db4a.   v1:= v1 ^| v0  @type int;
#L08db4c.   if v4 == 0 then goto L08db88;
#L08db50.   v0:= @@[|libcore:io:OsConstants.O_APPEND|] ;
#L08db54.   v0:= v0 ^| v1  @type int;
#L08db56.   v2.[|java:io:FileOutputStream.mode|]  := v0;
#L08db5a.   call temp:=  [|java:io:File.getAbsolutePath|](v3) @signature [|Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L08db60.   v0:= temp  @type object;
#L08db62.   v1:= v2.[|java:io:FileOutputStream.mode|] ;
#L08db66.   call temp:=  [|libcore:io:IoBridge.open|](v0, v1) @signature [|Llibcore/io/IoBridge;.open:(Ljava/lang/String;I)Ljava/io/FileDescriptor;|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L08db6c.   v0:= temp  @type object;
#L08db6e.   v2.[|java:io:FileOutputStream.fd|]  := v0 @type object;
#L08db72.   v0:= 1  @length 4;
#L08db74.   v2.[|java:io:FileOutputStream.shouldClose|]  := v0 @boolean;
#L08db78.   v0:= v2.[|java:io:FileOutputStream.guard|]   @type object;
#L08db7c.   v1:= "close" @type (object, string);
#L08db80.   call temp:=  [|dalvik:system:CloseGuard.open|](v0, v1) @signature [|Ldalvik/system/CloseGuard;.open:(Ljava/lang/String;)V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L08db86.   return @void ;
#L08db88.   v0:= @@[|libcore:io:OsConstants.O_TRUNC|] ;
#L08db8c.   goto L08db54;

   }
    procedure [|void|] [|java:io:FileOutputStream.<init>|] ([|java:io:FileOutputStream|] v2 @type (this), [|java:io:FileDescriptor|] v3 @type (object)) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/FileDescriptor;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08dba0.   call temp:=  [|java:io:OutputStream.<init>|](v2) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L08dba6.   call temp:=  [|dalvik:system:CloseGuard.get|]() @signature [|Ldalvik/system/CloseGuard;.get:()Ldalvik/system/CloseGuard;|] @classDescriptor [|dalvik:system:CloseGuard|] @type static;
#L08dbac.   v0:= temp  @type object;
#L08dbae.   v2.[|java:io:FileOutputStream.guard|]  := v0 @type object;
#L08dbb2.   if v3 != 0 then goto L08dbc6;
#L08dbb6.   v0:= new [|java:lang:NullPointerException|];
#L08dbba.   v1:= "fd == null" @type (object, string);
#L08dbbe.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08dbc4.   throw v0;
#L08dbc6.   v2.[|java:io:FileOutputStream.fd|]  := v3 @type object;
#L08dbca.   v0:= 0  @length 4;
#L08dbcc.   v2.[|java:io:FileOutputStream.shouldClose|]  := v0 @boolean;
#L08dbd0.   v0:= @@[|libcore:io:OsConstants.O_WRONLY|] ;
#L08dbd4.   v2.[|java:io:FileOutputStream.mode|]  := v0;
#L08dbd8.   v0:= v2.[|java:io:FileOutputStream.mode|] ;
#L08dbdc.   call temp:=  [|java:nio:NioUtils.newFileChannel|](v2, v3, v0) @signature [|Ljava/nio/NioUtils;.newFileChannel:(Ljava/lang/Object;Ljava/io/FileDescriptor;I)Ljava/nio/channels/FileChannel;|] @classDescriptor [|java:nio:NioUtils|] @type static;
#L08dbe2.   v0:= temp  @type object;
#L08dbe4.   v2.[|java:io:FileOutputStream.channel|]  := v0 @type object;
#L08dbe8.   return @void ;

   }
    procedure [|void|] [|java:io:FileOutputStream.<init>|] ([|java:io:FileOutputStream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08dbfc.   v0:= 0  @length 4;
#L08dbfe.   call temp:=  [|java:io:FileOutputStream.<init>|](v1, v2, v0) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08dc04.   return @void ;

   }
    procedure [|void|] [|java:io:FileOutputStream.<init>|] ([|java:io:FileOutputStream|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|boolean|] v3) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08dc18.   v0:= new [|java:io:File|];
#L08dc1c.   call temp:=  [|java:io:File.<init>|](v0, v2) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08dc22.   call temp:=  [|java:io:FileOutputStream.<init>|](v1, v0, v3) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08dc28.   return @void ;

   }
    procedure [|void|] [|java:io:FileOutputStream.close|] ([|java:io:FileOutputStream|] v1 @type (this)) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08dc3c.   v0:= v1.[|java:io:FileOutputStream.guard|]   @type object;
#L08dc40.   call temp:=  [|dalvik:system:CloseGuard.close|](v0) @signature [|Ldalvik/system/CloseGuard;.close:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L08dc46.   (@monitorenter v1)
#L08dc48.   v0:= v1.[|java:io:FileOutputStream.channel|]   @type object;
#L08dc4c.   if v0 == 0 then goto L08dc5a;
#L08dc50.   v0:= v1.[|java:io:FileOutputStream.channel|]   @type object;
#L08dc54.   call temp:=  [|java:nio:channels:FileChannel.close|](v0) @signature [|Ljava/nio/channels/FileChannel;.close:()V|] @classDescriptor [|java:nio:channels:FileChannel|] @type virtual;
#L08dc5a.   v0:= v1.[|java:io:FileOutputStream.shouldClose|]   @boolean;
#L08dc5e.   if v0 == 0 then goto L08dc70;
#L08dc62.   v0:= v1.[|java:io:FileOutputStream.fd|]   @type object;
#L08dc66.   call temp:=  [|libcore:io:IoUtils.close|](v0) @signature [|Llibcore/io/IoUtils;.close:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L08dc6c.   (@monitorexit v1)
#L08dc6e.   return @void ;
#L08dc70.   v0:= new [|java:io:FileDescriptor|];
#L08dc74.   call temp:=  [|java:io:FileDescriptor.<init>|](v0) @signature [|Ljava/io/FileDescriptor;.<init>:()V|] @classDescriptor [|java:io:FileDescriptor|] @type direct;
#L08dc7a.   v1.[|java:io:FileOutputStream.fd|]  := v0 @type object;
#L08dc7e.   goto L08dc6c;
#L08dc80.   v0:= Exception  @type object;
#L08dc82.   (@monitorexit v1)
#L08dc84.   throw v0;
  catch  [|any|] @[L08dc48..L08dc84] goto L08dc80;

   }
    procedure [|void|] [|java:io:FileOutputStream.finalize|] ([|java:io:FileOutputStream|] v2 @type (this)) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L08dca4.   v1:= v2.[|java:io:FileOutputStream.guard|]   @type object;
#L08dca8.   if v1 == 0 then goto L08dcb6;
#L08dcac.   v1:= v2.[|java:io:FileOutputStream.guard|]   @type object;
#L08dcb0.   call temp:=  [|dalvik:system:CloseGuard.warnIfOpen|](v1) @signature [|Ldalvik/system/CloseGuard;.warnIfOpen:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L08dcb6.   call temp:=  [|java:io:FileOutputStream.close|](v2) @signature [|Ljava/io/FileOutputStream;.close:()V|] @classDescriptor [|java:io:FileOutputStream|] @type virtual;
#L08dcbc.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L08dcc2.   return @void ;
#L08dcc4.   v0:= Exception  @type object;
#L08dcc6.   v1:= new [|java:lang:AssertionError|];
#L08dcca.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L08dcd0.   throw v1;
#L08dcd2.   v1:= Exception  @type object;
#L08dcd4.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L08dcda.   throw v1;
#L08dcdc.   v0:= Exception  @type object;
#L08dcde.   v1:= new [|java:lang:AssertionError|];
#L08dce2.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L08dce8.   throw v1;
  catch  [|any|] @[L08dca4..L08dcbc] goto L08dcd2;
  catch  [|java:lang:Throwable|] @[L08dcbc..L08dcc2] goto L08dcc4;
  catch  [|java:lang:Throwable|] @[L08dcd4..L08dcda] goto L08dcdc;

   }
    procedure [|java:nio:channels:FileChannel|] [|java:io:FileOutputStream.getChannel|] ([|java:io:FileOutputStream|] v2 @type (this)) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.getChannel:()Ljava/nio/channels/FileChannel;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08dd20.   (@monitorenter v2)
#L08dd22.   v0:= v2.[|java:io:FileOutputStream.channel|]   @type object;
#L08dd26.   if v0 != 0 then goto L08dd3e;
#L08dd2a.   v0:= v2.[|java:io:FileOutputStream.fd|]   @type object;
#L08dd2e.   v1:= v2.[|java:io:FileOutputStream.mode|] ;
#L08dd32.   call temp:=  [|java:nio:NioUtils.newFileChannel|](v2, v0, v1) @signature [|Ljava/nio/NioUtils;.newFileChannel:(Ljava/lang/Object;Ljava/io/FileDescriptor;I)Ljava/nio/channels/FileChannel;|] @classDescriptor [|java:nio:NioUtils|] @type static;
#L08dd38.   v0:= temp  @type object;
#L08dd3a.   v2.[|java:io:FileOutputStream.channel|]  := v0 @type object;
#L08dd3e.   v0:= v2.[|java:io:FileOutputStream.channel|]   @type object;
#L08dd42.   (@monitorexit v2)
#L08dd44.   return v0  @type object;
#L08dd46.   v0:= Exception  @type object;
#L08dd48.   (@monitorexit v2)
#L08dd4a.   throw v0;
  catch  [|any|] @[L08dd22..L08dd4a] goto L08dd46;

   }
    procedure [|java:io:FileDescriptor|] [|java:io:FileOutputStream.getFD|] ([|java:io:FileOutputStream|] v1 @type (this)) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.getFD:()Ljava/io/FileDescriptor;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08dd68.   v0:= v1.[|java:io:FileOutputStream.fd|]   @type object;
#L08dd6c.   return v0  @type object;

   }
    procedure [|void|] [|java:io:FileOutputStream.write|] ([|java:io:FileOutputStream|] v4 @type (this), [|int|] v5) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08dd80.   v3:= 1  @length 4;
#L08dd82.   v2:= 0  @length 4;
#L08dd84.   v0:= new [|byte|][v3];
#L08dd88.   v1:= (byte)v5  @type i2b;
#L08dd8a.   v0[v2]:= v1  @byte;
#L08dd8e.   call temp:=  [|java:io:FileOutputStream.write|](v4, v0, v2, v3) @signature [|Ljava/io/FileOutputStream;.write:([BII)V|] @classDescriptor [|java:io:FileOutputStream|] @type virtual;
#L08dd94.   return @void ;

   }
    procedure [|void|] [|java:io:FileOutputStream.write|] ([|java:io:FileOutputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:FileOutputStream|] @signature [|Ljava/io/FileOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08dda8.   v0:= v1.[|java:io:FileOutputStream.fd|]   @type object;
#L08ddac.   call temp:=  [|libcore:io:IoBridge.write|](v0, v2, v3, v4) @signature [|Llibcore/io/IoBridge;.write:(Ljava/io/FileDescriptor;[BII)V|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L08ddb2.   return @void ;

   }
record [|java:security:Guard|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:security:Guard.checkGuard|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:security:Guard|] @signature [|Ljava/security/Guard;.checkGuard:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:security:Permission|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:security:Guard|], [|java:io:Serializable|] {
   }
    procedure [|void|] [|java:security:Permission.<init>|] ([|java:security:Permission|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:security:Permission|] @signature [|Ljava/security/Permission;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08ddc4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08ddca.   return @void ;

   }
    procedure [|void|] [|java:security:Permission.checkGuard|] ([|java:security:Permission|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:security:Permission|] @signature [|Ljava/security/Permission;.checkGuard:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
      
#L08dddc.   return @void ;

   }
    procedure [|java:lang:String|] [|java:security:Permission.getActions|] () @owner [|java:security:Permission|] @signature [|Ljava/security/Permission;.getActions:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:security:Permission.getName|] ([|java:security:Permission|] v1 @type (this)) @owner [|java:security:Permission|] @signature [|Ljava/security/Permission;.getName:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L08ddf0.   v0:= 0  @length 4;
#L08ddf2.   return v0  @type object;

   }
    procedure [|boolean|] [|java:security:Permission.implies|] ([|java:security:Permission|] v0 @type (object)) @owner [|java:security:Permission|] @signature [|Ljava/security/Permission;.implies:(Ljava/security/Permission;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:security:PermissionCollection|] [|java:security:Permission.newPermissionCollection|] ([|java:security:Permission|] v1 @type (this)) @owner [|java:security:Permission|] @signature [|Ljava/security/Permission;.newPermissionCollection:()Ljava/security/PermissionCollection;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08de04.   v0:= new [|java:security:AllPermissionCollection|];
#L08de08.   call temp:=  [|java:security:AllPermissionCollection.<init>|](v0) @signature [|Ljava/security/AllPermissionCollection;.<init>:()V|] @classDescriptor [|java:security:AllPermissionCollection|] @type direct;
#L08de0e.   return v0  @type object;

   }
record [|java:io:FilePermission|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:security:Permission|], [|java:io:Serializable|] {
   }
    procedure [|void|] [|java:io:FilePermission.<init>|] ([|java:io:FilePermission|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:io:FilePermission|] @signature [|Ljava/io/FilePermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08de20.   v0:= "" @type (object, string);
#L08de24.   call temp:=  [|java:security:Permission.<init>|](v1, v0) @signature [|Ljava/security/Permission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:Permission|] @type direct;
#L08de2a.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:FilePermission.getActions|] ([|java:io:FilePermission|] v1 @type (this)) @owner [|java:io:FilePermission|] @signature [|Ljava/io/FilePermission;.getActions:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08de3c.   v0:= 0  @length 4;
#L08de3e.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:FilePermission.implies|] ([|java:io:FilePermission|] v1 @type (this), [|java:security:Permission|] v2 @type (object)) @owner [|java:io:FilePermission|] @signature [|Ljava/io/FilePermission;.implies:(Ljava/security/Permission;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08de50.   v0:= 1  @length 4;
#L08de52.   return v0;

   }
record [|java:io:InputStreamReader|]  @type class @AccessFlag PUBLIC  extends [|java:io:Reader|] {
      [|java:nio:ByteBuffer|] [|java:io:InputStreamReader.bytes|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:charset:CharsetDecoder|] [|java:io:InputStreamReader.decoder|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:InputStreamReader.endOfInput|]    @AccessFlag PRIVATE;
      [|java:io:InputStream|] [|java:io:InputStreamReader.in|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:InputStreamReader.<init>|] ([|java:io:InputStreamReader|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08de64.   call temp:=  [|java:nio:charset:Charset.defaultCharset|]() @signature [|Ljava/nio/charset/Charset;.defaultCharset:()Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L08de6a.   v0:= temp  @type object;
#L08de6c.   call temp:=  [|java:io:InputStreamReader.<init>|](v1, v2, v0) @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L08de72.   return @void ;

   }
    procedure [|void|] [|java:io:InputStreamReader.<init>|] ([|java:io:InputStreamReader|] v4 @type (this), [|java:io:InputStream|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08de84.   v3:= 0  @length 4;
#L08de86.   call temp:=  [|java:io:Reader.<init>|](v4, v5) @signature [|Ljava/io/Reader;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Reader|] @type direct;
#L08de8c.   v4.[|java:io:InputStreamReader.endOfInput|]  := v3 @boolean;
#L08de90.   v1:= 8192  @length 16;
#L08de94.   call temp:=  [|java:nio:ByteBuffer.allocate|](v1) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L08de9a.   v1:= temp  @type object;
#L08de9c.   v4.[|java:io:InputStreamReader.bytes|]  := v1 @type object;
#L08dea0.   if v6 != 0 then goto L08deb4;
#L08dea4.   v1:= new [|java:lang:NullPointerException|];
#L08dea8.   v2:= "charsetName == null" @type (object, string);
#L08deac.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08deb2.   throw v1;
#L08deb4.   v4.[|java:io:InputStreamReader.in|]  := v5 @type object;
#L08deb8.   call temp:=  [|java:nio:charset:Charset.forName|](v6) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L08debe.   v1:= temp  @type object;
#L08dec0.   call temp:=  [|java:nio:charset:Charset.newDecoder|](v1) @signature [|Ljava/nio/charset/Charset;.newDecoder:()Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L08dec6.   v1:= temp  @type object;
#L08dec8.   v2:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L08decc.   call temp:=  [|java:nio:charset:CharsetDecoder.onMalformedInput|](v1, v2) @signature [|Ljava/nio/charset/CharsetDecoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08ded2.   v1:= temp  @type object;
#L08ded4.   v2:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L08ded8.   call temp:=  [|java:nio:charset:CharsetDecoder.onUnmappableCharacter|](v1, v2) @signature [|Ljava/nio/charset/CharsetDecoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08dede.   v1:= temp  @type object;
#L08dee0.   v4.[|java:io:InputStreamReader.decoder|]  := v1 @type object;
#L08dee4.   v1:= v4.[|java:io:InputStreamReader.bytes|]   @type object;
#L08dee8.   call temp:=  [|java:nio:ByteBuffer.limit|](v1, v3) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08deee.   return @void ;
#L08def0.   v0:= Exception  @type object;
#L08def2.   v1:= new [|java:io:UnsupportedEncodingException|];
#L08def6.   call temp:=  [|java:io:UnsupportedEncodingException.<init>|](v1, v6) @signature [|Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:UnsupportedEncodingException|] @type direct;
#L08defc.   call temp:=  [|java:io:UnsupportedEncodingException.initCause|](v1, v0) @signature [|Ljava/io/UnsupportedEncodingException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:io:UnsupportedEncodingException|] @type virtual;
#L08df02.   v1:= temp  @type object;
#L08df04.   v1:= ([|java:io:UnsupportedEncodingException|])v1;
#L08df08.   throw v1;
  catch  [|java:lang:IllegalArgumentException|] @[L08deb8..L08dee4] goto L08def0;

   }
    procedure [|void|] [|java:io:InputStreamReader.<init>|] ([|java:io:InputStreamReader|] v3 @type (this), [|java:io:InputStream|] v4 @type (object), [|java:nio:charset:Charset|] v5 @type (object)) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08df2c.   v2:= 0  @length 4;
#L08df2e.   call temp:=  [|java:io:Reader.<init>|](v3, v4) @signature [|Ljava/io/Reader;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Reader|] @type direct;
#L08df34.   v3.[|java:io:InputStreamReader.endOfInput|]  := v2 @boolean;
#L08df38.   v0:= 8192  @length 16;
#L08df3c.   call temp:=  [|java:nio:ByteBuffer.allocate|](v0) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L08df42.   v0:= temp  @type object;
#L08df44.   v3.[|java:io:InputStreamReader.bytes|]  := v0 @type object;
#L08df48.   v3.[|java:io:InputStreamReader.in|]  := v4 @type object;
#L08df4c.   call temp:=  [|java:nio:charset:Charset.newDecoder|](v5) @signature [|Ljava/nio/charset/Charset;.newDecoder:()Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L08df52.   v0:= temp  @type object;
#L08df54.   v1:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L08df58.   call temp:=  [|java:nio:charset:CharsetDecoder.onMalformedInput|](v0, v1) @signature [|Ljava/nio/charset/CharsetDecoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08df5e.   v0:= temp  @type object;
#L08df60.   v1:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L08df64.   call temp:=  [|java:nio:charset:CharsetDecoder.onUnmappableCharacter|](v0, v1) @signature [|Ljava/nio/charset/CharsetDecoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08df6a.   v0:= temp  @type object;
#L08df6c.   v3.[|java:io:InputStreamReader.decoder|]  := v0 @type object;
#L08df70.   v0:= v3.[|java:io:InputStreamReader.bytes|]   @type object;
#L08df74.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v2) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08df7a.   return @void ;

   }
    procedure [|void|] [|java:io:InputStreamReader.<init>|] ([|java:io:InputStreamReader|] v2 @type (this), [|java:io:InputStream|] v3 @type (object), [|java:nio:charset:CharsetDecoder|] v4 @type (object)) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08df8c.   v1:= 0  @length 4;
#L08df8e.   call temp:=  [|java:io:Reader.<init>|](v2, v3) @signature [|Ljava/io/Reader;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Reader|] @type direct;
#L08df94.   v2.[|java:io:InputStreamReader.endOfInput|]  := v1 @boolean;
#L08df98.   v0:= 8192  @length 16;
#L08df9c.   call temp:=  [|java:nio:ByteBuffer.allocate|](v0) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L08dfa2.   v0:= temp  @type object;
#L08dfa4.   v2.[|java:io:InputStreamReader.bytes|]  := v0 @type object;
#L08dfa8.   call temp:=  [|java:nio:charset:CharsetDecoder.averageCharsPerByte|](v4) @signature [|Ljava/nio/charset/CharsetDecoder;.averageCharsPerByte:()F|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08dfae.   v2.[|java:io:InputStreamReader.in|]  := v3 @type object;
#L08dfb2.   v2.[|java:io:InputStreamReader.decoder|]  := v4 @type object;
#L08dfb6.   v0:= v2.[|java:io:InputStreamReader.bytes|]   @type object;
#L08dfba.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08dfc0.   return @void ;

   }
    procedure [|boolean|] [|java:io:InputStreamReader.isOpen|] ([|java:io:InputStreamReader|] v1 @type (this)) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.isOpen:()Z|] @Access PRIVATE {
      local temp ;
        v0;
      
#L08dfd4.   v0:= v1.[|java:io:InputStreamReader.in|]   @type object;
#L08dfd8.   if v0 == 0 then goto L08dfe0;
#L08dfdc.   v0:= 1  @length 4;
#L08dfde.   return v0;
#L08dfe0.   v0:= 0  @length 4;
#L08dfe2.   goto L08dfde;

   }
    procedure [|void|] [|java:io:InputStreamReader.close|] ([|java:io:InputStreamReader|] v2 @type (this)) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08dff4.   v1:= v2.[|java:io:InputStreamReader.lock|]   @type object;
#L08dff8.   (@monitorenter v1)
#L08dffa.   v0:= v2.[|java:io:InputStreamReader.decoder|]   @type object;
#L08dffe.   if v0 == 0 then goto L08e00c;
#L08e002.   v0:= v2.[|java:io:InputStreamReader.decoder|]   @type object;
#L08e006.   call temp:=  [|java:nio:charset:CharsetDecoder.reset|](v0) @signature [|Ljava/nio/charset/CharsetDecoder;.reset:()Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08e00c.   v0:= 0  @length 4;
#L08e00e.   v2.[|java:io:InputStreamReader.decoder|]  := v0 @type object;
#L08e012.   v0:= v2.[|java:io:InputStreamReader.in|]   @type object;
#L08e016.   if v0 == 0 then goto L08e02a;
#L08e01a.   v0:= v2.[|java:io:InputStreamReader.in|]   @type object;
#L08e01e.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08e024.   v0:= 0  @length 4;
#L08e026.   v2.[|java:io:InputStreamReader.in|]  := v0 @type object;
#L08e02a.   (@monitorexit v1)
#L08e02c.   return @void ;
#L08e02e.   v0:= Exception  @type object;
#L08e030.   (@monitorexit v1)
#L08e032.   throw v0;
  catch  [|any|] @[L08dffa..L08e032] goto L08e02e;

   }
    procedure [|java:lang:String|] [|java:io:InputStreamReader.getEncoding|] ([|java:io:InputStreamReader|] v1 @type (this)) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.getEncoding:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08e050.   call temp:=  [|java:io:InputStreamReader.isOpen|](v1) @signature [|Ljava/io/InputStreamReader;.isOpen:()Z|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L08e056.   v0:= temp;
#L08e058.   if v0 != 0 then goto L08e060;
#L08e05c.   v0:= 0  @length 4;
#L08e05e.   return v0  @type object;
#L08e060.   v0:= v1.[|java:io:InputStreamReader.decoder|]   @type object;
#L08e064.   call temp:=  [|java:nio:charset:CharsetDecoder.charset|](v0) @signature [|Ljava/nio/charset/CharsetDecoder;.charset:()Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08e06a.   v0:= temp  @type object;
#L08e06c.   call temp:=  [|java:io:HistoricalCharsetNames.get|](v0) @signature [|Ljava/io/HistoricalCharsetNames;.get:(Ljava/nio/charset/Charset;)Ljava/lang/String;|] @classDescriptor [|java:io:HistoricalCharsetNames|] @type static;
#L08e072.   v0:= temp  @type object;
#L08e074.   goto L08e05e;

   }
    procedure [|int|] [|java:io:InputStreamReader.read|] ([|java:io:InputStreamReader|] v5 @type (this)) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08e088.   v1:= -1  @length 4;
#L08e08a.   v2:= v5.[|java:io:InputStreamReader.lock|]   @type object;
#L08e08e.   (@monitorenter v2)
#L08e090.   call temp:=  [|java:io:InputStreamReader.isOpen|](v5) @signature [|Ljava/io/InputStreamReader;.isOpen:()Z|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L08e096.   v3:= temp;
#L08e098.   if v3 != 0 then goto L08e0b2;
#L08e09c.   v1:= new [|java:io:IOException|];
#L08e0a0.   v3:= "InputStreamReader is closed" @type (object, string);
#L08e0a4.   call temp:=  [|java:io:IOException.<init>|](v1, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08e0aa.   throw v1;
#L08e0ac.   v1:= Exception  @type object;
#L08e0ae.   (@monitorexit v2)
#L08e0b0.   throw v1;
#L08e0b2.   v3:= 1  @length 4;
#L08e0b4.   v0:= new [|char|][v3];
#L08e0b8.   v3:= 0  @length 4;
#L08e0ba.   v4:= 1  @length 4;
#L08e0bc.   call temp:=  [|java:io:InputStreamReader.read|](v5, v0, v3, v4) @signature [|Ljava/io/InputStreamReader;.read:([CII)I|] @classDescriptor [|java:io:InputStreamReader|] @type virtual;
#L08e0c2.   v3:= temp;
#L08e0c4.   if v3 == v1 then goto L08e0ce;
#L08e0c8.   v1:= 0  @length 4;
#L08e0ca.   v1:= v0[v1]  @char;
#L08e0ce.   (@monitorexit v2)
#L08e0d0.   return v1;
  catch  [|any|] @[L08e090..L08e0b0] goto L08e0ac;
  catch  [|any|] @[L08e0b4..L08e0d0] goto L08e0ac;

   }
    procedure [|int|] [|java:io:InputStreamReader.read|] ([|java:io:InputStreamReader|] v11 @type (this), [|char|][] v12, [|int|] v13, [|int|] v14) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.read:([CII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L08e0f8.   v7:= -1  @length 4;
#L08e0fa.   v2:= 1  @length 4;
#L08e0fc.   v6:= 0  @length 4;
#L08e0fe.   v8:= v11.[|java:io:InputStreamReader.lock|]   @type object;
#L08e102.   (@monitorenter v8)
#L08e104.   call temp:=  [|java:io:InputStreamReader.isOpen|](v11) @signature [|Ljava/io/InputStreamReader;.isOpen:()Z|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L08e10a.   v9:= temp;
#L08e10c.   if v9 != 0 then goto L08e126;
#L08e110.   v6:= new [|java:io:IOException|];
#L08e114.   v7:= "InputStreamReader is closed" @type (object, string);
#L08e118.   call temp:=  [|java:io:IOException.<init>|](v6, v7) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08e11e.   throw v6;
#L08e120.   v6:= Exception  @type object;
#L08e122.   (@monitorexit v8)
#L08e124.   throw v6;
#L08e126.   v9:= v12.length;
#L08e128.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v9, v13, v14) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L08e12e.   if v14 != 0 then goto L08e136;
#L08e132.   (@monitorexit v8)
#L08e134.   return v6;
#L08e136.   call temp:=  [|java:nio:CharBuffer.wrap|](v12, v13, v14) @signature [|Ljava/nio/CharBuffer;.wrap:([CII)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L08e13c.   v4:= temp  @type object;
#L08e13e.   v5:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L08e142.   v9:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e146.   call temp:=  [|java:nio:ByteBuffer.hasRemaining|](v9) @signature [|Ljava/nio/ByteBuffer;.hasRemaining:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e14c.   v9:= temp;
#L08e14e.   if v9 != 0 then goto L08e1e6;
#L08e152.   call temp:=  [|java:nio:CharBuffer.hasRemaining|](v4) @signature [|Ljava/nio/CharBuffer;.hasRemaining:()Z|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L08e158.   v6:= temp;
#L08e15a.   if v6 == 0 then goto L08e17e;
#L08e15e.   if v2 == 0 then goto L08e266;
#L08e162.   v6:= v11.[|java:io:InputStreamReader.in|]   @type object;
#L08e166.   call temp:=  [|java:io:InputStream.available|](v6) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08e16c.   v6:= temp;
#L08e16e.   if v6 != 0 then goto L08e1ec;
#L08e172.   call temp:=  [|java:nio:CharBuffer.position|](v4) @signature [|Ljava/nio/CharBuffer;.position:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L08e178.   v6:= temp;
#L08e17a.   if v6 <= v13 then goto L08e1ec;
#L08e17e.   v6:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L08e182.   if v5 != v6 then goto L08e1b4;
#L08e186.   v6:= v11.[|java:io:InputStreamReader.endOfInput|]   @boolean;
#L08e18a.   if v6 == 0 then goto L08e1b4;
#L08e18e.   v6:= v11.[|java:io:InputStreamReader.decoder|]   @type object;
#L08e192.   v9:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e196.   v10:= 1  @length 4;
#L08e198.   call temp:=  [|java:nio:charset:CharsetDecoder.decode|](v6, v9, v4, v10) @signature [|Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08e19e.   v5:= temp  @type object;
#L08e1a0.   v6:= v11.[|java:io:InputStreamReader.decoder|]   @type object;
#L08e1a4.   call temp:=  [|java:nio:charset:CharsetDecoder.flush|](v6, v4) @signature [|Ljava/nio/charset/CharsetDecoder;.flush:(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08e1aa.   v6:= v11.[|java:io:InputStreamReader.decoder|]   @type object;
#L08e1ae.   call temp:=  [|java:nio:charset:CharsetDecoder.reset|](v6) @signature [|Ljava/nio/charset/CharsetDecoder;.reset:()Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08e1b4.   call temp:=  [|java:nio:charset:CoderResult.isMalformed|](v5) @signature [|Ljava/nio/charset/CoderResult;.isMalformed:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e1ba.   v6:= temp;
#L08e1bc.   if v6 != 0 then goto L08e1cc;
#L08e1c0.   call temp:=  [|java:nio:charset:CoderResult.isUnmappable|](v5) @signature [|Ljava/nio/charset/CoderResult;.isUnmappable:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e1c6.   v6:= temp;
#L08e1c8.   if v6 == 0 then goto L08e1d2;
#L08e1cc.   call temp:=  [|java:nio:charset:CoderResult.throwException|](v5) @signature [|Ljava/nio/charset/CoderResult;.throwException:()V|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e1d2.   call temp:=  [|java:nio:CharBuffer.position|](v4) @signature [|Ljava/nio/CharBuffer;.position:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L08e1d8.   v6:= temp;
#L08e1da.   v6:= v6 - v13  @type int;
#L08e1dc.   if v6 != 0 then goto L08e2d2;
#L08e1e0.   v6:= v7;
#L08e1e2.   (@monitorexit v8)
#L08e1e4.   goto L08e134;
#L08e1e6.   v2:= v6;
#L08e1e8.   goto L08e152;
#L08e1ea.   v6:= Exception  @type object;
#L08e1ec.   v6:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e1f0.   call temp:=  [|java:nio:ByteBuffer.capacity|](v6) @signature [|Ljava/nio/ByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e1f6.   v6:= temp;
#L08e1f8.   v9:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e1fc.   call temp:=  [|java:nio:ByteBuffer.limit|](v9) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e202.   v9:= temp;
#L08e204.   v1:= v6 - v9  @type int;
#L08e208.   v6:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e20c.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v6) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e212.   v6:= temp;
#L08e214.   v9:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e218.   call temp:=  [|java:nio:ByteBuffer.limit|](v9) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e21e.   v9:= temp;
#L08e220.   v3:= v6 + v9  @type int;
#L08e224.   v6:= v11.[|java:io:InputStreamReader.in|]   @type object;
#L08e228.   v9:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e22c.   call temp:=  [|java:nio:ByteBuffer.array|](v9) @signature [|Ljava/nio/ByteBuffer;.array:()[B|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e232.   v9:= temp  @type object;
#L08e234.   call temp:=  [|java:io:InputStream.read|](v6, v9, v3, v1) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08e23a.   v0:= temp;
#L08e23c.   if v0 != v7 then goto L08e248;
#L08e240.   v6:= 1  @length 4;
#L08e242.   v11.[|java:io:InputStreamReader.endOfInput|]  := v6 @boolean;
#L08e246.   goto L08e17e;
#L08e248.   if v0 == 0 then goto L08e17e;
#L08e24c.   v6:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e250.   v9:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e254.   call temp:=  [|java:nio:ByteBuffer.limit|](v9) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e25a.   v9:= temp;
#L08e25c.   v9:= v9 + v0  @type int;
#L08e25e.   call temp:=  [|java:nio:ByteBuffer.limit|](v6, v9) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e264.   v2:= 0  @length 4;
#L08e266.   v6:= v11.[|java:io:InputStreamReader.decoder|]   @type object;
#L08e26a.   v9:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e26e.   v10:= 0  @length 4;
#L08e270.   call temp:=  [|java:nio:charset:CharsetDecoder.decode|](v6, v9, v4, v10) @signature [|Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L08e276.   v5:= temp  @type object;
#L08e278.   call temp:=  [|java:nio:charset:CoderResult.isUnderflow|](v5) @signature [|Ljava/nio/charset/CoderResult;.isUnderflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e27e.   v6:= temp;
#L08e280.   if v6 == 0 then goto L08e17e;
#L08e284.   v6:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e288.   call temp:=  [|java:nio:ByteBuffer.limit|](v6) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e28e.   v6:= temp;
#L08e290.   v9:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e294.   call temp:=  [|java:nio:ByteBuffer.capacity|](v9) @signature [|Ljava/nio/ByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e29a.   v9:= temp;
#L08e29c.   if v6 != v9 then goto L08e2cc;
#L08e2a0.   v6:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e2a4.   call temp:=  [|java:nio:ByteBuffer.compact|](v6) @signature [|Ljava/nio/ByteBuffer;.compact:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e2aa.   v6:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e2ae.   v9:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e2b2.   call temp:=  [|java:nio:ByteBuffer.position|](v9) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e2b8.   v9:= temp;
#L08e2ba.   call temp:=  [|java:nio:ByteBuffer.limit|](v6, v9) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e2c0.   v6:= v11.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e2c4.   v9:= 0  @length 4;
#L08e2c6.   call temp:=  [|java:nio:ByteBuffer.position|](v6, v9) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e2cc.   v2:= 1  @length 4;
#L08e2ce.   goto L08e152;
#L08e2d2.   call temp:=  [|java:nio:CharBuffer.position|](v4) @signature [|Ljava/nio/CharBuffer;.position:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L08e2d8.   v6:= temp;
#L08e2da.   v6:= v6 - v13  @type int;
#L08e2dc.   goto L08e1e2;
  catch  [|any|] @[L08e104..L08e124] goto L08e120;
  catch  [|any|] @[L08e126..L08e158] goto L08e120;
  catch  [|java:io:IOException|] @[L08e162..L08e178] goto L08e1ea;
  catch  [|any|] @[L08e162..L08e178] goto L08e120;
  catch  [|any|] @[L08e17e..L08e2d8] goto L08e120;

   }
    procedure [|boolean|] [|java:io:InputStreamReader.ready|] ([|java:io:InputStreamReader|] v4 @type (this)) @owner [|java:io:InputStreamReader|] @signature [|Ljava/io/InputStreamReader;.ready:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08e318.   v1:= 0  @length 4;
#L08e31a.   v2:= v4.[|java:io:InputStreamReader.lock|]   @type object;
#L08e31e.   (@monitorenter v2)
#L08e320.   v3:= v4.[|java:io:InputStreamReader.in|]   @type object;
#L08e324.   if v3 != 0 then goto L08e33e;
#L08e328.   v1:= new [|java:io:IOException|];
#L08e32c.   v3:= "InputStreamReader is closed" @type (object, string);
#L08e330.   call temp:=  [|java:io:IOException.<init>|](v1, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08e336.   throw v1;
#L08e338.   v1:= Exception  @type object;
#L08e33a.   (@monitorexit v2)
#L08e33c.   throw v1;
#L08e33e.   v3:= v4.[|java:io:InputStreamReader.bytes|]   @type object;
#L08e342.   call temp:=  [|java:nio:ByteBuffer.hasRemaining|](v3) @signature [|Ljava/nio/ByteBuffer;.hasRemaining:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e348.   v3:= temp;
#L08e34a.   if v3 != 0 then goto L08e35e;
#L08e34e.   v3:= v4.[|java:io:InputStreamReader.in|]   @type object;
#L08e352.   call temp:=  [|java:io:InputStream.available|](v3) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08e358.   v3:= temp;
#L08e35a.   if v3 <= 0 then goto L08e360;
#L08e35e.   v1:= 1  @length 4;
#L08e360.   (@monitorexit v2)
#L08e362.   return v1;
#L08e364.   v0:= Exception  @type object;
#L08e366.   (@monitorexit v2)
#L08e368.   goto L08e362;
  catch  [|any|] @[L08e320..L08e33c] goto L08e338;
  catch  [|java:io:IOException|] @[L08e33e..L08e358] goto L08e364;
  catch  [|any|] @[L08e33e..L08e358] goto L08e338;
  catch  [|any|] @[L08e360..L08e368] goto L08e338;

   }
record [|java:io:FileReader|]  @type class @AccessFlag PUBLIC  extends [|java:io:InputStreamReader|] {
   }
    procedure [|void|] [|java:io:FileReader.<init>|] ([|java:io:FileReader|] v1 @type (this), [|java:io:File|] v2 @type (object)) @owner [|java:io:FileReader|] @signature [|Ljava/io/FileReader;.<init>:(Ljava/io/File;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08e39c.   v0:= new [|java:io:FileInputStream|];
#L08e3a0.   call temp:=  [|java:io:FileInputStream.<init>|](v0, v2) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L08e3a6.   call temp:=  [|java:io:InputStreamReader.<init>|](v1, v0) @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L08e3ac.   return @void ;

   }
    procedure [|void|] [|java:io:FileReader.<init>|] ([|java:io:FileReader|] v1 @type (this), [|java:io:FileDescriptor|] v2 @type (object)) @owner [|java:io:FileReader|] @signature [|Ljava/io/FileReader;.<init>:(Ljava/io/FileDescriptor;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08e3c0.   v0:= new [|java:io:FileInputStream|];
#L08e3c4.   call temp:=  [|java:io:FileInputStream.<init>|](v0, v2) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L08e3ca.   call temp:=  [|java:io:InputStreamReader.<init>|](v1, v0) @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L08e3d0.   return @void ;

   }
    procedure [|void|] [|java:io:FileReader.<init>|] ([|java:io:FileReader|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:FileReader|] @signature [|Ljava/io/FileReader;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08e3e4.   v0:= new [|java:io:FileInputStream|];
#L08e3e8.   call temp:=  [|java:io:FileInputStream.<init>|](v0, v2) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L08e3ee.   call temp:=  [|java:io:InputStreamReader.<init>|](v1, v0) @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L08e3f4.   return @void ;

   }
record [|java:io:OutputStreamWriter|]  @type class @AccessFlag PUBLIC  extends [|java:io:Writer|] {
      [|java:nio:ByteBuffer|] [|java:io:OutputStreamWriter.bytes|]    @AccessFlag PRIVATE;
      [|java:nio:charset:CharsetEncoder|] [|java:io:OutputStreamWriter.encoder|]    @AccessFlag PRIVATE;
      [|java:io:OutputStream|] [|java:io:OutputStreamWriter.out|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:io:OutputStreamWriter.<init>|] ([|java:io:OutputStreamWriter|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08e408.   call temp:=  [|java:nio:charset:Charset.defaultCharset|]() @signature [|Ljava/nio/charset/Charset;.defaultCharset:()Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L08e40e.   v0:= temp  @type object;
#L08e410.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v1, v2, v0) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e416.   return @void ;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.<init>|] ([|java:io:OutputStreamWriter|] v3 @type (this), [|java:io:OutputStream|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08e428.   call temp:=  [|java:io:Writer.<init>|](v3, v4) @signature [|Ljava/io/Writer;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Writer|] @type direct;
#L08e42e.   v1:= 8192  @length 16;
#L08e432.   call temp:=  [|java:nio:ByteBuffer.allocate|](v1) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L08e438.   v1:= temp  @type object;
#L08e43a.   v3.[|java:io:OutputStreamWriter.bytes|]  := v1 @type object;
#L08e43e.   if v5 != 0 then goto L08e452;
#L08e442.   v1:= new [|java:lang:NullPointerException|];
#L08e446.   v2:= "charsetName == null" @type (object, string);
#L08e44a.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08e450.   throw v1;
#L08e452.   v3.[|java:io:OutputStreamWriter.out|]  := v4 @type object;
#L08e456.   call temp:=  [|java:nio:charset:Charset.forName|](v5) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L08e45c.   v1:= temp  @type object;
#L08e45e.   call temp:=  [|java:nio:charset:Charset.newEncoder|](v1) @signature [|Ljava/nio/charset/Charset;.newEncoder:()Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L08e464.   v1:= temp  @type object;
#L08e466.   v3.[|java:io:OutputStreamWriter.encoder|]  := v1 @type object;
#L08e46a.   v1:= v3.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e46e.   v2:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L08e472.   call temp:=  [|java:nio:charset:CharsetEncoder.onMalformedInput|](v1, v2) @signature [|Ljava/nio/charset/CharsetEncoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e478.   v1:= v3.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e47c.   v2:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L08e480.   call temp:=  [|java:nio:charset:CharsetEncoder.onUnmappableCharacter|](v1, v2) @signature [|Ljava/nio/charset/CharsetEncoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e486.   return @void ;
#L08e488.   v0:= Exception  @type object;
#L08e48a.   v1:= new [|java:io:UnsupportedEncodingException|];
#L08e48e.   call temp:=  [|java:io:UnsupportedEncodingException.<init>|](v1, v5) @signature [|Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:UnsupportedEncodingException|] @type direct;
#L08e494.   throw v1;
  catch  [|java:lang:Exception|] @[L08e456..L08e46a] goto L08e488;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.<init>|] ([|java:io:OutputStreamWriter|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object), [|java:nio:charset:Charset|] v4 @type (object)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08e4b8.   call temp:=  [|java:io:Writer.<init>|](v2, v3) @signature [|Ljava/io/Writer;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Writer|] @type direct;
#L08e4be.   v0:= 8192  @length 16;
#L08e4c2.   call temp:=  [|java:nio:ByteBuffer.allocate|](v0) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L08e4c8.   v0:= temp  @type object;
#L08e4ca.   v2.[|java:io:OutputStreamWriter.bytes|]  := v0 @type object;
#L08e4ce.   v2.[|java:io:OutputStreamWriter.out|]  := v3 @type object;
#L08e4d2.   call temp:=  [|java:nio:charset:Charset.newEncoder|](v4) @signature [|Ljava/nio/charset/Charset;.newEncoder:()Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L08e4d8.   v0:= temp  @type object;
#L08e4da.   v2.[|java:io:OutputStreamWriter.encoder|]  := v0 @type object;
#L08e4de.   v0:= v2.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e4e2.   v1:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L08e4e6.   call temp:=  [|java:nio:charset:CharsetEncoder.onMalformedInput|](v0, v1) @signature [|Ljava/nio/charset/CharsetEncoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e4ec.   v0:= v2.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e4f0.   v1:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L08e4f4.   call temp:=  [|java:nio:charset:CharsetEncoder.onUnmappableCharacter|](v0, v1) @signature [|Ljava/nio/charset/CharsetEncoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e4fa.   return @void ;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.<init>|] ([|java:io:OutputStreamWriter|] v1 @type (this), [|java:io:OutputStream|] v2 @type (object), [|java:nio:charset:CharsetEncoder|] v3 @type (object)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08e50c.   call temp:=  [|java:io:Writer.<init>|](v1, v2) @signature [|Ljava/io/Writer;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Writer|] @type direct;
#L08e512.   v0:= 8192  @length 16;
#L08e516.   call temp:=  [|java:nio:ByteBuffer.allocate|](v0) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L08e51c.   v0:= temp  @type object;
#L08e51e.   v1.[|java:io:OutputStreamWriter.bytes|]  := v0 @type object;
#L08e522.   call temp:=  [|java:nio:charset:CharsetEncoder.charset|](v3) @signature [|Ljava/nio/charset/CharsetEncoder;.charset:()Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e528.   v1.[|java:io:OutputStreamWriter.out|]  := v2 @type object;
#L08e52c.   v1.[|java:io:OutputStreamWriter.encoder|]  := v3 @type object;
#L08e530.   return @void ;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.checkStatus|] ([|java:io:OutputStreamWriter|] v2 @type (this)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.checkStatus:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L08e544.   v0:= v2.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e548.   if v0 != 0 then goto L08e55c;
#L08e54c.   v0:= new [|java:io:IOException|];
#L08e550.   v1:= "OutputStreamWriter is closed" @type (object, string);
#L08e554.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08e55a.   throw v0;
#L08e55c.   return @void ;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.convert|] ([|java:io:OutputStreamWriter|] v4 @type (this), [|java:nio:CharBuffer|] v5 @type (object)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.convert:(Ljava/nio/CharBuffer;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08e570.   v3:= 0  @length 4;
#L08e572.   v1:= v4.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e576.   v2:= v4.[|java:io:OutputStreamWriter.bytes|]   @type object;
#L08e57a.   call temp:=  [|java:nio:charset:CharsetEncoder.encode|](v1, v5, v2, v3) @signature [|Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e580.   v0:= temp  @type object;
#L08e582.   call temp:=  [|java:nio:charset:CoderResult.isOverflow|](v0) @signature [|Ljava/nio/charset/CoderResult;.isOverflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e588.   v1:= temp;
#L08e58a.   if v1 == 0 then goto L08e596;
#L08e58e.   call temp:=  [|java:io:OutputStreamWriter.flushBytes|](v4, v3) @signature [|Ljava/io/OutputStreamWriter;.flushBytes:(Z)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e594.   goto L08e572;
#L08e596.   call temp:=  [|java:nio:charset:CoderResult.isError|](v0) @signature [|Ljava/nio/charset/CoderResult;.isError:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e59c.   v1:= temp;
#L08e59e.   if v1 == 0 then goto L08e5a8;
#L08e5a2.   call temp:=  [|java:nio:charset:CoderResult.throwException|](v0) @signature [|Ljava/nio/charset/CoderResult;.throwException:()V|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e5a8.   return @void ;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.drainEncoder|] ([|java:io:OutputStreamWriter|] v6 @type (this)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.drainEncoder:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08e5bc.   v5:= 0  @length 4;
#L08e5be.   call temp:=  [|java:nio:CharBuffer.allocate|](v5) @signature [|Ljava/nio/CharBuffer;.allocate:(I)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L08e5c4.   v0:= temp  @type object;
#L08e5c6.   v2:= v6.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e5ca.   v3:= v6.[|java:io:OutputStreamWriter.bytes|]   @type object;
#L08e5ce.   v4:= 1  @length 4;
#L08e5d0.   call temp:=  [|java:nio:charset:CharsetEncoder.encode|](v2, v0, v3, v4) @signature [|Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e5d6.   v1:= temp  @type object;
#L08e5d8.   call temp:=  [|java:nio:charset:CoderResult.isError|](v1) @signature [|Ljava/nio/charset/CoderResult;.isError:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e5de.   v2:= temp;
#L08e5e0.   if v2 == 0 then goto L08e62a;
#L08e5e4.   call temp:=  [|java:nio:charset:CoderResult.throwException|](v1) @signature [|Ljava/nio/charset/CoderResult;.throwException:()V|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e5ea.   v2:= v6.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e5ee.   v3:= v6.[|java:io:OutputStreamWriter.bytes|]   @type object;
#L08e5f2.   call temp:=  [|java:nio:charset:CharsetEncoder.flush|](v2, v3) @signature [|Ljava/nio/charset/CharsetEncoder;.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e5f8.   v1:= temp  @type object;
#L08e5fa.   call temp:=  [|java:nio:charset:CoderResult.isUnderflow|](v1) @signature [|Ljava/nio/charset/CoderResult;.isUnderflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e600.   v2:= temp;
#L08e602.   if v2 != 0 then goto L08e646;
#L08e606.   call temp:=  [|java:nio:charset:CoderResult.isOverflow|](v1) @signature [|Ljava/nio/charset/CoderResult;.isOverflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e60c.   v2:= temp;
#L08e60e.   if v2 == 0 then goto L08e63e;
#L08e612.   call temp:=  [|java:io:OutputStreamWriter.flushBytes|](v6, v5) @signature [|Ljava/io/OutputStreamWriter;.flushBytes:(Z)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e618.   v2:= v6.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e61c.   v3:= v6.[|java:io:OutputStreamWriter.bytes|]   @type object;
#L08e620.   call temp:=  [|java:nio:charset:CharsetEncoder.flush|](v2, v3) @signature [|Ljava/nio/charset/CharsetEncoder;.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e626.   v1:= temp  @type object;
#L08e628.   goto L08e5fa;
#L08e62a.   call temp:=  [|java:nio:charset:CoderResult.isOverflow|](v1) @signature [|Ljava/nio/charset/CoderResult;.isOverflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e630.   v2:= temp;
#L08e632.   if v2 == 0 then goto L08e5ea;
#L08e636.   call temp:=  [|java:io:OutputStreamWriter.flushBytes|](v6, v5) @signature [|Ljava/io/OutputStreamWriter;.flushBytes:(Z)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e63c.   goto L08e5c6;
#L08e63e.   call temp:=  [|java:nio:charset:CoderResult.throwException|](v1) @signature [|Ljava/nio/charset/CoderResult;.throwException:()V|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L08e644.   goto L08e5fa;
#L08e646.   return @void ;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.flushBytes|] ([|java:io:OutputStreamWriter|] v5 @type (this), [|boolean|] v6) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.flushBytes:(Z)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08e658.   v2:= v5.[|java:io:OutputStreamWriter.lock|]   @type object;
#L08e65c.   (@monitorenter v2)
#L08e65e.   call temp:=  [|java:io:OutputStreamWriter.checkStatus|](v5) @signature [|Ljava/io/OutputStreamWriter;.checkStatus:()V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e664.   v1:= v5.[|java:io:OutputStreamWriter.bytes|]   @type object;
#L08e668.   call temp:=  [|java:nio:ByteBuffer.position|](v1) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e66e.   v0:= temp;
#L08e670.   if v0 <= 0 then goto L08e6aa;
#L08e674.   v1:= v5.[|java:io:OutputStreamWriter.bytes|]   @type object;
#L08e678.   call temp:=  [|java:nio:ByteBuffer.flip|](v1) @signature [|Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e67e.   v1:= v5.[|java:io:OutputStreamWriter.out|]   @type object;
#L08e682.   v3:= v5.[|java:io:OutputStreamWriter.bytes|]   @type object;
#L08e686.   call temp:=  [|java:nio:ByteBuffer.array|](v3) @signature [|Ljava/nio/ByteBuffer;.array:()[B|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e68c.   v3:= temp  @type object;
#L08e68e.   v4:= v5.[|java:io:OutputStreamWriter.bytes|]   @type object;
#L08e692.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v4) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e698.   v4:= temp;
#L08e69a.   call temp:=  [|java:io:OutputStream.write|](v1, v3, v4, v0) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08e6a0.   v1:= v5.[|java:io:OutputStreamWriter.bytes|]   @type object;
#L08e6a4.   call temp:=  [|java:nio:ByteBuffer.clear|](v1) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L08e6aa.   if v6 == 0 then goto L08e6b8;
#L08e6ae.   v1:= v5.[|java:io:OutputStreamWriter.out|]   @type object;
#L08e6b2.   call temp:=  [|java:io:OutputStream.flush|](v1) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08e6b8.   (@monitorexit v2)
#L08e6ba.   return @void ;
#L08e6bc.   v1:= Exception  @type object;
#L08e6be.   (@monitorexit v2)
#L08e6c0.   throw v1;
  catch  [|any|] @[L08e65e..L08e6c0] goto L08e6bc;

   }
    procedure [|boolean|] [|java:io:OutputStreamWriter.checkError|] ([|java:io:OutputStreamWriter|] v1 @type (this)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.checkError:()Z|] @Access  {
      local temp ;
        v0;
      
#L08e6e0.   v0:= v1.[|java:io:OutputStreamWriter.out|]   @type object;
#L08e6e4.   call temp:=  [|java:io:OutputStream.checkError|](v0) @signature [|Ljava/io/OutputStream;.checkError:()Z|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08e6ea.   v0:= temp;
#L08e6ec.   return v0;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.close|] ([|java:io:OutputStreamWriter|] v2 @type (this)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08e700.   v1:= v2.[|java:io:OutputStreamWriter.lock|]   @type object;
#L08e704.   (@monitorenter v1)
#L08e706.   v0:= v2.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e70a.   if v0 == 0 then goto L08e732;
#L08e70e.   call temp:=  [|java:io:OutputStreamWriter.drainEncoder|](v2) @signature [|Ljava/io/OutputStreamWriter;.drainEncoder:()V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e714.   v0:= 0  @length 4;
#L08e716.   call temp:=  [|java:io:OutputStreamWriter.flushBytes|](v2, v0) @signature [|Ljava/io/OutputStreamWriter;.flushBytes:(Z)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e71c.   v0:= v2.[|java:io:OutputStreamWriter.out|]   @type object;
#L08e720.   call temp:=  [|java:io:OutputStream.close|](v0) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L08e726.   v0:= 0  @length 4;
#L08e728.   v2.[|java:io:OutputStreamWriter.encoder|]  := v0 @type object;
#L08e72c.   v0:= 0  @length 4;
#L08e72e.   v2.[|java:io:OutputStreamWriter.bytes|]  := v0 @type object;
#L08e732.   (@monitorexit v1)
#L08e734.   return @void ;
#L08e736.   v0:= Exception  @type object;
#L08e738.   (@monitorexit v1)
#L08e73a.   throw v0;
  catch  [|any|] @[L08e706..L08e73a] goto L08e736;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.flush|] ([|java:io:OutputStreamWriter|] v1 @type (this)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08e758.   v0:= 1  @length 4;
#L08e75a.   call temp:=  [|java:io:OutputStreamWriter.flushBytes|](v1, v0) @signature [|Ljava/io/OutputStreamWriter;.flushBytes:(Z)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e760.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:OutputStreamWriter.getEncoding|] ([|java:io:OutputStreamWriter|] v1 @type (this)) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.getEncoding:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08e774.   v0:= v1.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e778.   if v0 != 0 then goto L08e780;
#L08e77c.   v0:= 0  @length 4;
#L08e77e.   return v0  @type object;
#L08e780.   v0:= v1.[|java:io:OutputStreamWriter.encoder|]   @type object;
#L08e784.   call temp:=  [|java:nio:charset:CharsetEncoder.charset|](v0) @signature [|Ljava/nio/charset/CharsetEncoder;.charset:()Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L08e78a.   v0:= temp  @type object;
#L08e78c.   call temp:=  [|java:io:HistoricalCharsetNames.get|](v0) @signature [|Ljava/io/HistoricalCharsetNames;.get:(Ljava/nio/charset/Charset;)Ljava/lang/String;|] @classDescriptor [|java:io:HistoricalCharsetNames|] @type static;
#L08e792.   v0:= temp  @type object;
#L08e794.   goto L08e77e;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.write|] ([|java:io:OutputStreamWriter|] v5 @type (this), [|int|] v6) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08e7a8.   v2:= v5.[|java:io:OutputStreamWriter.lock|]   @type object;
#L08e7ac.   (@monitorenter v2)
#L08e7ae.   call temp:=  [|java:io:OutputStreamWriter.checkStatus|](v5) @signature [|Ljava/io/OutputStreamWriter;.checkStatus:()V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e7b4.   v1:= 1  @length 4;
#L08e7b6.   v1:= new [|char|][v1];
#L08e7ba.   v3:= 0  @length 4;
#L08e7bc.   v4:= (char)v6  @type i2c;
#L08e7be.   v1[v3]:= v4  @char;
#L08e7c2.   call temp:=  [|java:nio:CharBuffer.wrap|](v1) @signature [|Ljava/nio/CharBuffer;.wrap:([C)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L08e7c8.   v0:= temp  @type object;
#L08e7ca.   call temp:=  [|java:io:OutputStreamWriter.convert|](v5, v0) @signature [|Ljava/io/OutputStreamWriter;.convert:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e7d0.   (@monitorexit v2)
#L08e7d2.   return @void ;
#L08e7d4.   v1:= Exception  @type object;
#L08e7d6.   (@monitorexit v2)
#L08e7d8.   throw v1;
  catch  [|any|] @[L08e7ae..L08e7d8] goto L08e7d4;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.write|] ([|java:io:OutputStreamWriter|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|int|] v6, [|int|] v7) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.write:(Ljava/lang/String;II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08e7f8.   v2:= v4.[|java:io:OutputStreamWriter.lock|]   @type object;
#L08e7fc.   (@monitorenter v2)
#L08e7fe.   if v7 >= 0 then goto L08e814;
#L08e802.   v1:= new [|java:lang:StringIndexOutOfBoundsException|];
#L08e806.   call temp:=  [|java:lang:StringIndexOutOfBoundsException.<init>|](v1, v5, v6, v7) @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:lang:StringIndexOutOfBoundsException|] @type direct;
#L08e80c.   throw v1;
#L08e80e.   v1:= Exception  @type object;
#L08e810.   (@monitorexit v2)
#L08e812.   throw v1;
#L08e814.   if v5 != 0 then goto L08e828;
#L08e818.   v1:= new [|java:lang:NullPointerException|];
#L08e81c.   v3:= "str == null" @type (object, string);
#L08e820.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L08e826.   throw v1;
#L08e828.   v1:= v6 ^| v7  @type int;
#L08e82c.   if v1 < 0 then goto L08e83e;
#L08e830.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L08e836.   v1:= temp;
#L08e838.   v1:= v1 - v7  @type int;
#L08e83a.   if v6 <= v1 then goto L08e84a;
#L08e83e.   v1:= new [|java:lang:StringIndexOutOfBoundsException|];
#L08e842.   call temp:=  [|java:lang:StringIndexOutOfBoundsException.<init>|](v1, v5, v6, v7) @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:lang:StringIndexOutOfBoundsException|] @type direct;
#L08e848.   throw v1;
#L08e84a.   call temp:=  [|java:io:OutputStreamWriter.checkStatus|](v4) @signature [|Ljava/io/OutputStreamWriter;.checkStatus:()V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e850.   v1:= v7 + v6  @type int;
#L08e854.   call temp:=  [|java:nio:CharBuffer.wrap|](v5, v6, v1) @signature [|Ljava/nio/CharBuffer;.wrap:(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L08e85a.   v0:= temp  @type object;
#L08e85c.   call temp:=  [|java:io:OutputStreamWriter.convert|](v4, v0) @signature [|Ljava/io/OutputStreamWriter;.convert:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e862.   (@monitorexit v2)
#L08e864.   return @void ;
  catch  [|any|] @[L08e802..L08e812] goto L08e80e;
  catch  [|any|] @[L08e818..L08e864] goto L08e80e;

   }
    procedure [|void|] [|java:io:OutputStreamWriter.write|] ([|java:io:OutputStreamWriter|] v3 @type (this), [|char|][] v4, [|int|] v5, [|int|] v6) @owner [|java:io:OutputStreamWriter|] @signature [|Ljava/io/OutputStreamWriter;.write:([CII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08e88c.   v2:= v3.[|java:io:OutputStreamWriter.lock|]   @type object;
#L08e890.   (@monitorenter v2)
#L08e892.   call temp:=  [|java:io:OutputStreamWriter.checkStatus|](v3) @signature [|Ljava/io/OutputStreamWriter;.checkStatus:()V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e898.   v1:= v4.length;
#L08e89a.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v5, v6) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L08e8a0.   call temp:=  [|java:nio:CharBuffer.wrap|](v4, v5, v6) @signature [|Ljava/nio/CharBuffer;.wrap:([CII)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L08e8a6.   v0:= temp  @type object;
#L08e8a8.   call temp:=  [|java:io:OutputStreamWriter.convert|](v3, v0) @signature [|Ljava/io/OutputStreamWriter;.convert:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e8ae.   (@monitorexit v2)
#L08e8b0.   return @void ;
#L08e8b2.   v1:= Exception  @type object;
#L08e8b4.   (@monitorexit v2)
#L08e8b6.   throw v1;
  catch  [|any|] @[L08e892..L08e8b6] goto L08e8b2;

   }
record [|java:io:FileWriter|]  @type class @AccessFlag PUBLIC  extends [|java:io:OutputStreamWriter|] {
   }
    procedure [|void|] [|java:io:FileWriter.<init>|] ([|java:io:FileWriter|] v1 @type (this), [|java:io:File|] v2 @type (object)) @owner [|java:io:FileWriter|] @signature [|Ljava/io/FileWriter;.<init>:(Ljava/io/File;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08e8d4.   v0:= new [|java:io:FileOutputStream|];
#L08e8d8.   call temp:=  [|java:io:FileOutputStream.<init>|](v0, v2) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08e8de.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v1, v0) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e8e4.   return @void ;

   }
    procedure [|void|] [|java:io:FileWriter.<init>|] ([|java:io:FileWriter|] v1 @type (this), [|java:io:File|] v2 @type (object), [|boolean|] v3) @owner [|java:io:FileWriter|] @signature [|Ljava/io/FileWriter;.<init>:(Ljava/io/File;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08e8f8.   v0:= new [|java:io:FileOutputStream|];
#L08e8fc.   call temp:=  [|java:io:FileOutputStream.<init>|](v0, v2, v3) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08e902.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v1, v0) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e908.   return @void ;

   }
    procedure [|void|] [|java:io:FileWriter.<init>|] ([|java:io:FileWriter|] v1 @type (this), [|java:io:FileDescriptor|] v2 @type (object)) @owner [|java:io:FileWriter|] @signature [|Ljava/io/FileWriter;.<init>:(Ljava/io/FileDescriptor;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08e91c.   v0:= new [|java:io:FileOutputStream|];
#L08e920.   call temp:=  [|java:io:FileOutputStream.<init>|](v0, v2) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08e926.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v1, v0) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e92c.   return @void ;

   }
    procedure [|void|] [|java:io:FileWriter.<init>|] ([|java:io:FileWriter|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:io:FileWriter|] @signature [|Ljava/io/FileWriter;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08e940.   v0:= new [|java:io:FileOutputStream|];
#L08e944.   v1:= new [|java:io:File|];
#L08e948.   call temp:=  [|java:io:File.<init>|](v1, v3) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L08e94e.   call temp:=  [|java:io:FileOutputStream.<init>|](v0, v1) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08e954.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v2, v0) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e95a.   return @void ;

   }
    procedure [|void|] [|java:io:FileWriter.<init>|] ([|java:io:FileWriter|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|boolean|] v3) @owner [|java:io:FileWriter|] @signature [|Ljava/io/FileWriter;.<init>:(Ljava/lang/String;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08e96c.   v0:= new [|java:io:FileOutputStream|];
#L08e970.   call temp:=  [|java:io:FileOutputStream.<init>|](v0, v2, v3) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L08e976.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v1, v0) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L08e97c.   return @void ;

   }
record [|java:io:FilenameFilter|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|java:io:FilenameFilter.accept|] ([|java:io:File|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:io:FilenameFilter|] @signature [|Ljava/io/FilenameFilter;.accept:(Ljava/io/File;Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:FilterReader|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:io:Reader|] {
      [|java:io:Reader|] [|java:io:FilterReader.in|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:FilterReader.<init>|] ([|java:io:FilterReader|] v0 @type (this), [|java:io:Reader|] v1 @type (object)) @owner [|java:io:FilterReader|] @signature [|Ljava/io/FilterReader;.<init>:(Ljava/io/Reader;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L08e990.   call temp:=  [|java:io:Reader.<init>|](v0, v1) @signature [|Ljava/io/Reader;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Reader|] @type direct;
#L08e996.   v0.[|java:io:FilterReader.in|]  := v1 @type object;
#L08e99a.   return @void ;

   }
    procedure [|void|] [|java:io:FilterReader.close|] ([|java:io:FilterReader|] v2 @type (this)) @owner [|java:io:FilterReader|] @signature [|Ljava/io/FilterReader;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08e9ac.   v1:= v2.[|java:io:FilterReader.lock|]   @type object;
#L08e9b0.   (@monitorenter v1)
#L08e9b2.   v0:= v2.[|java:io:FilterReader.in|]   @type object;
#L08e9b6.   call temp:=  [|java:io:Reader.close|](v0) @signature [|Ljava/io/Reader;.close:()V|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08e9bc.   (@monitorexit v1)
#L08e9be.   return @void ;
#L08e9c0.   v0:= Exception  @type object;
#L08e9c2.   (@monitorexit v1)
#L08e9c4.   throw v0;
  catch  [|any|] @[L08e9b2..L08e9c4] goto L08e9c0;

   }
    procedure [|void|] [|java:io:FilterReader.mark|] ([|java:io:FilterReader|] v2 @type (this), [|int|] v3) @owner [|java:io:FilterReader|] @signature [|Ljava/io/FilterReader;.mark:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L08e9e4.   (@monitorenter v2)
#L08e9e6.   v1:= v2.[|java:io:FilterReader.lock|]   @type object;
#L08e9ea.   (@monitorenter v1)
#L08e9ec.   v0:= v2.[|java:io:FilterReader.in|]   @type object;
#L08e9f0.   call temp:=  [|java:io:Reader.mark|](v0, v3) @signature [|Ljava/io/Reader;.mark:(I)V|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08e9f6.   (@monitorexit v1)
#L08e9f8.   (@monitorexit v2)
#L08e9fa.   return @void ;
#L08e9fc.   v0:= Exception  @type object;
#L08e9fe.   (@monitorexit v1)
#L08ea00.   throw v0;
#L08ea02.   v0:= Exception  @type object;
#L08ea04.   (@monitorexit v2)
#L08ea06.   throw v0;
  catch  [|any|] @[L08e9e6..L08e9ec] goto L08ea02;
  catch  [|any|] @[L08e9ec..L08e9f8] goto L08e9fc;
  catch  [|any|] @[L08e9fe..L08ea00] goto L08e9fc;
  catch  [|any|] @[L08ea00..L08ea02] goto L08ea02;

   }
    procedure [|boolean|] [|java:io:FilterReader.markSupported|] ([|java:io:FilterReader|] v2 @type (this)) @owner [|java:io:FilterReader|] @signature [|Ljava/io/FilterReader;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ea40.   v1:= v2.[|java:io:FilterReader.lock|]   @type object;
#L08ea44.   (@monitorenter v1)
#L08ea46.   v0:= v2.[|java:io:FilterReader.in|]   @type object;
#L08ea4a.   call temp:=  [|java:io:Reader.markSupported|](v0) @signature [|Ljava/io/Reader;.markSupported:()Z|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08ea50.   v0:= temp;
#L08ea52.   (@monitorexit v1)
#L08ea54.   return v0;
#L08ea56.   v0:= Exception  @type object;
#L08ea58.   (@monitorexit v1)
#L08ea5a.   throw v0;
  catch  [|any|] @[L08ea46..L08ea5a] goto L08ea56;

   }
    procedure [|int|] [|java:io:FilterReader.read|] ([|java:io:FilterReader|] v2 @type (this)) @owner [|java:io:FilterReader|] @signature [|Ljava/io/FilterReader;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ea78.   v1:= v2.[|java:io:FilterReader.lock|]   @type object;
#L08ea7c.   (@monitorenter v1)
#L08ea7e.   v0:= v2.[|java:io:FilterReader.in|]   @type object;
#L08ea82.   call temp:=  [|java:io:Reader.read|](v0) @signature [|Ljava/io/Reader;.read:()I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08ea88.   v0:= temp;
#L08ea8a.   (@monitorexit v1)
#L08ea8c.   return v0;
#L08ea8e.   v0:= Exception  @type object;
#L08ea90.   (@monitorexit v1)
#L08ea92.   throw v0;
  catch  [|any|] @[L08ea7e..L08ea92] goto L08ea8e;

   }
    procedure [|int|] [|java:io:FilterReader.read|] ([|java:io:FilterReader|] v2 @type (this), [|char|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:FilterReader|] @signature [|Ljava/io/FilterReader;.read:([CII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08eab0.   v1:= v2.[|java:io:FilterReader.lock|]   @type object;
#L08eab4.   (@monitorenter v1)
#L08eab6.   v0:= v2.[|java:io:FilterReader.in|]   @type object;
#L08eaba.   call temp:=  [|java:io:Reader.read|](v0, v3, v4, v5) @signature [|Ljava/io/Reader;.read:([CII)I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08eac0.   v0:= temp;
#L08eac2.   (@monitorexit v1)
#L08eac4.   return v0;
#L08eac6.   v0:= Exception  @type object;
#L08eac8.   (@monitorexit v1)
#L08eaca.   throw v0;
  catch  [|any|] @[L08eab6..L08eaca] goto L08eac6;

   }
    procedure [|boolean|] [|java:io:FilterReader.ready|] ([|java:io:FilterReader|] v2 @type (this)) @owner [|java:io:FilterReader|] @signature [|Ljava/io/FilterReader;.ready:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08eae8.   v1:= v2.[|java:io:FilterReader.lock|]   @type object;
#L08eaec.   (@monitorenter v1)
#L08eaee.   v0:= v2.[|java:io:FilterReader.in|]   @type object;
#L08eaf2.   call temp:=  [|java:io:Reader.ready|](v0) @signature [|Ljava/io/Reader;.ready:()Z|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08eaf8.   v0:= temp;
#L08eafa.   (@monitorexit v1)
#L08eafc.   return v0;
#L08eafe.   v0:= Exception  @type object;
#L08eb00.   (@monitorexit v1)
#L08eb02.   throw v0;
  catch  [|any|] @[L08eaee..L08eb02] goto L08eafe;

   }
    procedure [|void|] [|java:io:FilterReader.reset|] ([|java:io:FilterReader|] v2 @type (this)) @owner [|java:io:FilterReader|] @signature [|Ljava/io/FilterReader;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08eb20.   v1:= v2.[|java:io:FilterReader.lock|]   @type object;
#L08eb24.   (@monitorenter v1)
#L08eb26.   v0:= v2.[|java:io:FilterReader.in|]   @type object;
#L08eb2a.   call temp:=  [|java:io:Reader.reset|](v0) @signature [|Ljava/io/Reader;.reset:()V|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08eb30.   (@monitorexit v1)
#L08eb32.   return @void ;
#L08eb34.   v0:= Exception  @type object;
#L08eb36.   (@monitorexit v1)
#L08eb38.   throw v0;
  catch  [|any|] @[L08eb26..L08eb38] goto L08eb34;

   }
    procedure [|long|] [|java:io:FilterReader.skip|] ([|java:io:FilterReader|] v4 @type (this), [|long|] v5) @owner [|java:io:FilterReader|] @signature [|Ljava/io/FilterReader;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08eb58.   v1:= v4.[|java:io:FilterReader.lock|]   @type object;
#L08eb5c.   (@monitorenter v1)
#L08eb5e.   v0:= v4.[|java:io:FilterReader.in|]   @type object;
#L08eb62.   call temp:=  [|java:io:Reader.skip|](v0, v5, v6) @signature [|Ljava/io/Reader;.skip:(J)J|] @classDescriptor [|java:io:Reader|] @type virtual;
#L08eb68.   v2:= temp  @type wide;
#L08eb6a.   (@monitorexit v1)
#L08eb6c.   return v2  @type wide;
#L08eb6e.   v0:= Exception  @type object;
#L08eb70.   (@monitorexit v1)
#L08eb72.   throw v0;
  catch  [|any|] @[L08eb5e..L08eb72] goto L08eb6e;

   }
record [|java:io:FilterWriter|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:io:Writer|] {
      [|java:io:Writer|] [|java:io:FilterWriter.out|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:FilterWriter.<init>|] ([|java:io:FilterWriter|] v0 @type (this), [|java:io:Writer|] v1 @type (object)) @owner [|java:io:FilterWriter|] @signature [|Ljava/io/FilterWriter;.<init>:(Ljava/io/Writer;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L08eb90.   call temp:=  [|java:io:Writer.<init>|](v0, v1) @signature [|Ljava/io/Writer;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Writer|] @type direct;
#L08eb96.   v0.[|java:io:FilterWriter.out|]  := v1 @type object;
#L08eb9a.   return @void ;

   }
    procedure [|void|] [|java:io:FilterWriter.close|] ([|java:io:FilterWriter|] v2 @type (this)) @owner [|java:io:FilterWriter|] @signature [|Ljava/io/FilterWriter;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ebac.   v1:= v2.[|java:io:FilterWriter.lock|]   @type object;
#L08ebb0.   (@monitorenter v1)
#L08ebb2.   v0:= v2.[|java:io:FilterWriter.out|]   @type object;
#L08ebb6.   call temp:=  [|java:io:Writer.close|](v0) @signature [|Ljava/io/Writer;.close:()V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08ebbc.   (@monitorexit v1)
#L08ebbe.   return @void ;
#L08ebc0.   v0:= Exception  @type object;
#L08ebc2.   (@monitorexit v1)
#L08ebc4.   throw v0;
  catch  [|any|] @[L08ebb2..L08ebc4] goto L08ebc0;

   }
    procedure [|void|] [|java:io:FilterWriter.flush|] ([|java:io:FilterWriter|] v2 @type (this)) @owner [|java:io:FilterWriter|] @signature [|Ljava/io/FilterWriter;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ebe4.   v1:= v2.[|java:io:FilterWriter.lock|]   @type object;
#L08ebe8.   (@monitorenter v1)
#L08ebea.   v0:= v2.[|java:io:FilterWriter.out|]   @type object;
#L08ebee.   call temp:=  [|java:io:Writer.flush|](v0) @signature [|Ljava/io/Writer;.flush:()V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08ebf4.   (@monitorexit v1)
#L08ebf6.   return @void ;
#L08ebf8.   v0:= Exception  @type object;
#L08ebfa.   (@monitorexit v1)
#L08ebfc.   throw v0;
  catch  [|any|] @[L08ebea..L08ebfc] goto L08ebf8;

   }
    procedure [|void|] [|java:io:FilterWriter.write|] ([|java:io:FilterWriter|] v2 @type (this), [|int|] v3) @owner [|java:io:FilterWriter|] @signature [|Ljava/io/FilterWriter;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ec1c.   v1:= v2.[|java:io:FilterWriter.lock|]   @type object;
#L08ec20.   (@monitorenter v1)
#L08ec22.   v0:= v2.[|java:io:FilterWriter.out|]   @type object;
#L08ec26.   call temp:=  [|java:io:Writer.write|](v0, v3) @signature [|Ljava/io/Writer;.write:(I)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08ec2c.   (@monitorexit v1)
#L08ec2e.   return @void ;
#L08ec30.   v0:= Exception  @type object;
#L08ec32.   (@monitorexit v1)
#L08ec34.   throw v0;
  catch  [|any|] @[L08ec22..L08ec34] goto L08ec30;

   }
    procedure [|void|] [|java:io:FilterWriter.write|] ([|java:io:FilterWriter|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:io:FilterWriter|] @signature [|Ljava/io/FilterWriter;.write:(Ljava/lang/String;II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ec54.   v1:= v2.[|java:io:FilterWriter.lock|]   @type object;
#L08ec58.   (@monitorenter v1)
#L08ec5a.   v0:= v2.[|java:io:FilterWriter.out|]   @type object;
#L08ec5e.   call temp:=  [|java:io:Writer.write|](v0, v3, v4, v5) @signature [|Ljava/io/Writer;.write:(Ljava/lang/String;II)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08ec64.   (@monitorexit v1)
#L08ec66.   return @void ;
#L08ec68.   v0:= Exception  @type object;
#L08ec6a.   (@monitorexit v1)
#L08ec6c.   throw v0;
  catch  [|any|] @[L08ec5a..L08ec6c] goto L08ec68;

   }
    procedure [|void|] [|java:io:FilterWriter.write|] ([|java:io:FilterWriter|] v2 @type (this), [|char|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:FilterWriter|] @signature [|Ljava/io/FilterWriter;.write:([CII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08ec8c.   v1:= v2.[|java:io:FilterWriter.lock|]   @type object;
#L08ec90.   (@monitorenter v1)
#L08ec92.   v0:= v2.[|java:io:FilterWriter.out|]   @type object;
#L08ec96.   call temp:=  [|java:io:Writer.write|](v0, v3, v4, v5) @signature [|Ljava/io/Writer;.write:([CII)V|] @classDescriptor [|java:io:Writer|] @type virtual;
#L08ec9c.   (@monitorexit v1)
#L08ec9e.   return @void ;
#L08eca0.   v0:= Exception  @type object;
#L08eca2.   (@monitorexit v1)
#L08eca4.   throw v0;
  catch  [|any|] @[L08ec92..L08eca4] goto L08eca0;

   }
record [|java:io:HistoricalCharsetNames|]  @type class @AccessFlag   {
   }
      global [|java:util:HashMap|] @@[|java:io:HistoricalCharsetNames.historicalNames|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:HistoricalCharsetNames.<clinit>|] () @owner [|java:io:HistoricalCharsetNames|] @signature [|Ljava/io/HistoricalCharsetNames;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08ecc4.   v0:= new [|java:util:HashMap|];
#L08ecc8.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L08ecce.   @@[|java:io:HistoricalCharsetNames.historicalNames|] := v0  @type object;
#L08ecd2.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ecd6.   v1:= "Big5-HKSCS" @type (object, string);
#L08ecda.   v2:= "Big5_HKSCS" @type (object, string);
#L08ecde.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ece4.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ece8.   v1:= "EUC-JP" @type (object, string);
#L08ecec.   v2:= "EUC_JP" @type (object, string);
#L08ecf0.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ecf6.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ecfa.   v1:= "EUC-KR" @type (object, string);
#L08ecfe.   v2:= "EUC_KR" @type (object, string);
#L08ed02.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ed08.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ed0c.   v1:= "GB2312" @type (object, string);
#L08ed10.   v2:= "EUC_CN" @type (object, string);
#L08ed14.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ed1a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ed1e.   v1:= "IBM-Thai" @type (object, string);
#L08ed22.   v2:= "Cp838" @type (object, string);
#L08ed26.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ed2c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ed30.   v1:= "IBM00858" @type (object, string);
#L08ed34.   v2:= "Cp858" @type (object, string);
#L08ed38.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ed3e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ed42.   v1:= "IBM01140" @type (object, string);
#L08ed46.   v2:= "Cp1140" @type (object, string);
#L08ed4a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ed50.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ed54.   v1:= "IBM01141" @type (object, string);
#L08ed58.   v2:= "Cp1141" @type (object, string);
#L08ed5c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ed62.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ed66.   v1:= "IBM01142" @type (object, string);
#L08ed6a.   v2:= "Cp1142" @type (object, string);
#L08ed6e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ed74.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ed78.   v1:= "IBM01143" @type (object, string);
#L08ed7c.   v2:= "Cp1143" @type (object, string);
#L08ed80.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ed86.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ed8a.   v1:= "IBM01144" @type (object, string);
#L08ed8e.   v2:= "Cp1144" @type (object, string);
#L08ed92.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ed98.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ed9c.   v1:= "IBM01145" @type (object, string);
#L08eda0.   v2:= "Cp1145" @type (object, string);
#L08eda4.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08edaa.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08edae.   v1:= "IBM01146" @type (object, string);
#L08edb2.   v2:= "Cp1146" @type (object, string);
#L08edb6.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08edbc.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08edc0.   v1:= "IBM01147" @type (object, string);
#L08edc4.   v2:= "Cp1147" @type (object, string);
#L08edc8.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08edce.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08edd2.   v1:= "IBM01148" @type (object, string);
#L08edd6.   v2:= "Cp1148" @type (object, string);
#L08edda.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ede0.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ede4.   v1:= "IBM01149" @type (object, string);
#L08ede8.   v2:= "Cp1149" @type (object, string);
#L08edec.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08edf2.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08edf6.   v1:= "IBM037" @type (object, string);
#L08edfa.   v2:= "Cp037" @type (object, string);
#L08edfe.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ee04.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ee08.   v1:= "IBM1026" @type (object, string);
#L08ee0c.   v2:= "Cp1026" @type (object, string);
#L08ee10.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ee16.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ee1a.   v1:= "IBM1047" @type (object, string);
#L08ee1e.   v2:= "Cp1047" @type (object, string);
#L08ee22.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ee28.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ee2c.   v1:= "IBM273" @type (object, string);
#L08ee30.   v2:= "Cp273" @type (object, string);
#L08ee34.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ee3a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ee3e.   v1:= "IBM277" @type (object, string);
#L08ee42.   v2:= "Cp277" @type (object, string);
#L08ee46.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ee4c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ee50.   v1:= "IBM278" @type (object, string);
#L08ee54.   v2:= "Cp278" @type (object, string);
#L08ee58.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ee5e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ee62.   v1:= "IBM280" @type (object, string);
#L08ee66.   v2:= "Cp280" @type (object, string);
#L08ee6a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ee70.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ee74.   v1:= "IBM284" @type (object, string);
#L08ee78.   v2:= "Cp284" @type (object, string);
#L08ee7c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ee82.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ee86.   v1:= "IBM285" @type (object, string);
#L08ee8a.   v2:= "Cp285" @type (object, string);
#L08ee8e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ee94.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ee98.   v1:= "IBM297" @type (object, string);
#L08ee9c.   v2:= "Cp297" @type (object, string);
#L08eea0.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08eea6.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08eeaa.   v1:= "IBM420" @type (object, string);
#L08eeae.   v2:= "Cp420" @type (object, string);
#L08eeb2.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08eeb8.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08eebc.   v1:= "IBM424" @type (object, string);
#L08eec0.   v2:= "Cp424" @type (object, string);
#L08eec4.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08eeca.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08eece.   v1:= "IBM437" @type (object, string);
#L08eed2.   v2:= "Cp437" @type (object, string);
#L08eed6.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08eedc.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08eee0.   v1:= "IBM500" @type (object, string);
#L08eee4.   v2:= "Cp500" @type (object, string);
#L08eee8.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08eeee.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08eef2.   v1:= "IBM775" @type (object, string);
#L08eef6.   v2:= "Cp775" @type (object, string);
#L08eefa.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ef00.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ef04.   v1:= "IBM850" @type (object, string);
#L08ef08.   v2:= "Cp850" @type (object, string);
#L08ef0c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ef12.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ef16.   v1:= "IBM852" @type (object, string);
#L08ef1a.   v2:= "Cp852" @type (object, string);
#L08ef1e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ef24.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ef28.   v1:= "IBM855" @type (object, string);
#L08ef2c.   v2:= "Cp855" @type (object, string);
#L08ef30.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ef36.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ef3a.   v1:= "IBM857" @type (object, string);
#L08ef3e.   v2:= "Cp857" @type (object, string);
#L08ef42.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ef48.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ef4c.   v1:= "IBM860" @type (object, string);
#L08ef50.   v2:= "Cp860" @type (object, string);
#L08ef54.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ef5a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ef5e.   v1:= "IBM861" @type (object, string);
#L08ef62.   v2:= "Cp861" @type (object, string);
#L08ef66.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ef6c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ef70.   v1:= "IBM862" @type (object, string);
#L08ef74.   v2:= "Cp862" @type (object, string);
#L08ef78.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ef7e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ef82.   v1:= "IBM863" @type (object, string);
#L08ef86.   v2:= "Cp863" @type (object, string);
#L08ef8a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08ef90.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08ef94.   v1:= "IBM864" @type (object, string);
#L08ef98.   v2:= "Cp864" @type (object, string);
#L08ef9c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08efa2.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08efa6.   v1:= "IBM865" @type (object, string);
#L08efaa.   v2:= "Cp865" @type (object, string);
#L08efae.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08efb4.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08efb8.   v1:= "IBM866" @type (object, string);
#L08efbc.   v2:= "Cp866" @type (object, string);
#L08efc0.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08efc6.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08efca.   v1:= "IBM868" @type (object, string);
#L08efce.   v2:= "Cp868" @type (object, string);
#L08efd2.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08efd8.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08efdc.   v1:= "IBM869" @type (object, string);
#L08efe0.   v2:= "Cp869" @type (object, string);
#L08efe4.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08efea.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08efee.   v1:= "IBM870" @type (object, string);
#L08eff2.   v2:= "Cp870" @type (object, string);
#L08eff6.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08effc.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f000.   v1:= "IBM871" @type (object, string);
#L08f004.   v2:= "Cp871" @type (object, string);
#L08f008.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f00e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f012.   v1:= "IBM918" @type (object, string);
#L08f016.   v2:= "Cp918" @type (object, string);
#L08f01a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f020.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f024.   v1:= "ISO-2022-CN" @type (object, string);
#L08f028.   v2:= "ISO2022CN" @type (object, string);
#L08f02c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f032.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f036.   v1:= "ISO-2022-JP" @type (object, string);
#L08f03a.   v2:= "ISO2022JP" @type (object, string);
#L08f03e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f044.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f048.   v1:= "ISO-2022-KR" @type (object, string);
#L08f04c.   v2:= "ISO2022KR" @type (object, string);
#L08f050.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f056.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f05a.   v1:= "ISO-8859-1" @type (object, string);
#L08f05e.   v2:= "ISO8859_1" @type (object, string);
#L08f062.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f068.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f06c.   v1:= "ISO-8859-13" @type (object, string);
#L08f070.   v2:= "ISO8859_13" @type (object, string);
#L08f074.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f07a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f07e.   v1:= "ISO-8859-15" @type (object, string);
#L08f082.   v2:= "ISO8859_15" @type (object, string);
#L08f086.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f08c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f090.   v1:= "ISO-8859-2" @type (object, string);
#L08f094.   v2:= "ISO8859_2" @type (object, string);
#L08f098.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f09e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f0a2.   v1:= "ISO-8859-3" @type (object, string);
#L08f0a6.   v2:= "ISO8859_3" @type (object, string);
#L08f0aa.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f0b0.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f0b4.   v1:= "ISO-8859-4" @type (object, string);
#L08f0b8.   v2:= "ISO8859_4" @type (object, string);
#L08f0bc.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f0c2.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f0c6.   v1:= "ISO-8859-5" @type (object, string);
#L08f0ca.   v2:= "ISO8859_5" @type (object, string);
#L08f0ce.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f0d4.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f0d8.   v1:= "ISO-8859-6" @type (object, string);
#L08f0dc.   v2:= "ISO8859_6" @type (object, string);
#L08f0e0.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f0e6.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f0ea.   v1:= "ISO-8859-7" @type (object, string);
#L08f0ee.   v2:= "ISO8859_7" @type (object, string);
#L08f0f2.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f0f8.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f0fc.   v1:= "ISO-8859-8" @type (object, string);
#L08f100.   v2:= "ISO8859_8" @type (object, string);
#L08f104.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f10a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f10e.   v1:= "ISO-8859-9" @type (object, string);
#L08f112.   v2:= "ISO8859_9" @type (object, string);
#L08f116.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f11c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f120.   v1:= "KOI8-R" @type (object, string);
#L08f124.   v2:= "KOI8_R" @type (object, string);
#L08f128.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f12e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f132.   v1:= "Shift_JIS" @type (object, string);
#L08f136.   v2:= "SJIS" @type (object, string);
#L08f13a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f140.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f144.   v1:= "TIS-620" @type (object, string);
#L08f148.   v2:= "TIS620" @type (object, string);
#L08f14c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f152.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f156.   v1:= "US-ASCII" @type (object, string);
#L08f15a.   v2:= "ASCII" @type (object, string);
#L08f15e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f164.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f168.   v1:= "UTF-16BE" @type (object, string);
#L08f16c.   v2:= "UnicodeBigUnmarked" @type (object, string);
#L08f170.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f176.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f17a.   v1:= "UTF-16LE" @type (object, string);
#L08f17e.   v2:= "UnicodeLittleUnmarked" @type (object, string);
#L08f182.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f188.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f18c.   v1:= "UTF-8" @type (object, string);
#L08f190.   v2:= "UTF8" @type (object, string);
#L08f194.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f19a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f19e.   v1:= "windows-1250" @type (object, string);
#L08f1a2.   v2:= "Cp1250" @type (object, string);
#L08f1a6.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f1ac.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f1b0.   v1:= "windows-1251" @type (object, string);
#L08f1b4.   v2:= "Cp1251" @type (object, string);
#L08f1b8.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f1be.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f1c2.   v1:= "windows-1252" @type (object, string);
#L08f1c6.   v2:= "Cp1252" @type (object, string);
#L08f1ca.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f1d0.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f1d4.   v1:= "windows-1253" @type (object, string);
#L08f1d8.   v2:= "Cp1253" @type (object, string);
#L08f1dc.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f1e2.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f1e6.   v1:= "windows-1254" @type (object, string);
#L08f1ea.   v2:= "Cp1254" @type (object, string);
#L08f1ee.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f1f4.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f1f8.   v1:= "windows-1255" @type (object, string);
#L08f1fc.   v2:= "Cp1255" @type (object, string);
#L08f200.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f206.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f20a.   v1:= "windows-1256" @type (object, string);
#L08f20e.   v2:= "Cp1256" @type (object, string);
#L08f212.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f218.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f21c.   v1:= "windows-1257" @type (object, string);
#L08f220.   v2:= "Cp1257" @type (object, string);
#L08f224.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f22a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f22e.   v1:= "windows-1258" @type (object, string);
#L08f232.   v2:= "Cp1258" @type (object, string);
#L08f236.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f23c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f240.   v1:= "windows-31j" @type (object, string);
#L08f244.   v2:= "MS932" @type (object, string);
#L08f248.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f24e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f252.   v1:= "x-Big5-Solaris" @type (object, string);
#L08f256.   v2:= "Big5_Solaris" @type (object, string);
#L08f25a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f260.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f264.   v1:= "x-euc-jp-linux" @type (object, string);
#L08f268.   v2:= "EUC_JP_LINUX" @type (object, string);
#L08f26c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f272.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f276.   v1:= "x-EUC-TW" @type (object, string);
#L08f27a.   v2:= "EUC_TW" @type (object, string);
#L08f27e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f284.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f288.   v1:= "x-eucJP-Open" @type (object, string);
#L08f28c.   v2:= "EUC_JP_Solaris" @type (object, string);
#L08f290.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f296.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f29a.   v1:= "x-IBM1006" @type (object, string);
#L08f29e.   v2:= "Cp1006" @type (object, string);
#L08f2a2.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f2a8.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f2ac.   v1:= "x-IBM1025" @type (object, string);
#L08f2b0.   v2:= "Cp1025" @type (object, string);
#L08f2b4.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f2ba.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f2be.   v1:= "x-IBM1046" @type (object, string);
#L08f2c2.   v2:= "Cp1046" @type (object, string);
#L08f2c6.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f2cc.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f2d0.   v1:= "x-IBM1097" @type (object, string);
#L08f2d4.   v2:= "Cp1097" @type (object, string);
#L08f2d8.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f2de.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f2e2.   v1:= "x-IBM1098" @type (object, string);
#L08f2e6.   v2:= "Cp1098" @type (object, string);
#L08f2ea.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f2f0.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f2f4.   v1:= "x-IBM1112" @type (object, string);
#L08f2f8.   v2:= "Cp1112" @type (object, string);
#L08f2fc.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f302.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f306.   v1:= "x-IBM1122" @type (object, string);
#L08f30a.   v2:= "Cp1122" @type (object, string);
#L08f30e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f314.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f318.   v1:= "x-IBM1123" @type (object, string);
#L08f31c.   v2:= "Cp1123" @type (object, string);
#L08f320.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f326.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f32a.   v1:= "x-IBM1124" @type (object, string);
#L08f32e.   v2:= "Cp1124" @type (object, string);
#L08f332.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f338.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f33c.   v1:= "x-IBM1381" @type (object, string);
#L08f340.   v2:= "Cp1381" @type (object, string);
#L08f344.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f34a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f34e.   v1:= "x-IBM1383" @type (object, string);
#L08f352.   v2:= "Cp1383" @type (object, string);
#L08f356.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f35c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f360.   v1:= "x-IBM33722" @type (object, string);
#L08f364.   v2:= "Cp33722" @type (object, string);
#L08f368.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f36e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f372.   v1:= "x-IBM737" @type (object, string);
#L08f376.   v2:= "Cp737" @type (object, string);
#L08f37a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f380.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f384.   v1:= "x-IBM856" @type (object, string);
#L08f388.   v2:= "Cp856" @type (object, string);
#L08f38c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f392.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f396.   v1:= "x-IBM874" @type (object, string);
#L08f39a.   v2:= "Cp874" @type (object, string);
#L08f39e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f3a4.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f3a8.   v1:= "x-IBM875" @type (object, string);
#L08f3ac.   v2:= "Cp875" @type (object, string);
#L08f3b0.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f3b6.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f3ba.   v1:= "x-IBM921" @type (object, string);
#L08f3be.   v2:= "Cp921" @type (object, string);
#L08f3c2.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f3c8.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f3cc.   v1:= "x-IBM922" @type (object, string);
#L08f3d0.   v2:= "Cp922" @type (object, string);
#L08f3d4.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f3da.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f3de.   v1:= "x-IBM930" @type (object, string);
#L08f3e2.   v2:= "Cp930" @type (object, string);
#L08f3e6.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f3ec.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f3f0.   v1:= "x-IBM933" @type (object, string);
#L08f3f4.   v2:= "Cp933" @type (object, string);
#L08f3f8.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f3fe.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f402.   v1:= "x-IBM935" @type (object, string);
#L08f406.   v2:= "Cp935" @type (object, string);
#L08f40a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f410.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f414.   v1:= "x-IBM937" @type (object, string);
#L08f418.   v2:= "Cp937" @type (object, string);
#L08f41c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f422.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f426.   v1:= "x-IBM939" @type (object, string);
#L08f42a.   v2:= "Cp939" @type (object, string);
#L08f42e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f434.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f438.   v1:= "x-IBM942" @type (object, string);
#L08f43c.   v2:= "Cp942" @type (object, string);
#L08f440.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f446.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f44a.   v1:= "x-IBM942C" @type (object, string);
#L08f44e.   v2:= "Cp942C" @type (object, string);
#L08f452.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f458.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f45c.   v1:= "x-IBM943" @type (object, string);
#L08f460.   v2:= "Cp943" @type (object, string);
#L08f464.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f46a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f46e.   v1:= "x-IBM943C" @type (object, string);
#L08f472.   v2:= "Cp943C" @type (object, string);
#L08f476.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f47c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f480.   v1:= "x-IBM948" @type (object, string);
#L08f484.   v2:= "Cp948" @type (object, string);
#L08f488.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f48e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f492.   v1:= "x-IBM949" @type (object, string);
#L08f496.   v2:= "Cp949" @type (object, string);
#L08f49a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f4a0.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f4a4.   v1:= "x-IBM949C" @type (object, string);
#L08f4a8.   v2:= "Cp949C" @type (object, string);
#L08f4ac.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f4b2.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f4b6.   v1:= "x-IBM950" @type (object, string);
#L08f4ba.   v2:= "Cp950" @type (object, string);
#L08f4be.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f4c4.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f4c8.   v1:= "x-IBM964" @type (object, string);
#L08f4cc.   v2:= "Cp964" @type (object, string);
#L08f4d0.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f4d6.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f4da.   v1:= "x-IBM970" @type (object, string);
#L08f4de.   v2:= "Cp970" @type (object, string);
#L08f4e2.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f4e8.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f4ec.   v1:= "x-ISCII91" @type (object, string);
#L08f4f0.   v2:= "ISCII91" @type (object, string);
#L08f4f4.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f4fa.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f4fe.   v1:= "x-ISO-2022-CN-CNS" @type (object, string);
#L08f502.   v2:= "ISO2022CN" @type (object, string);
#L08f506.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f50c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f510.   v1:= "x-ISO-2022-CN-GB" @type (object, string);
#L08f514.   v2:= "ISO2022CN" @type (object, string);
#L08f518.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f51e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f522.   v1:= "x-JISAutoDetect" @type (object, string);
#L08f526.   v2:= "JISAutoDetect" @type (object, string);
#L08f52a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f530.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f534.   v1:= "x-MacArabic" @type (object, string);
#L08f538.   v2:= "MacArabic" @type (object, string);
#L08f53c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f542.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f546.   v1:= "x-MacCentralEurope" @type (object, string);
#L08f54a.   v2:= "MacCentralEurope" @type (object, string);
#L08f54e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f554.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f558.   v1:= "x-MacCroatian" @type (object, string);
#L08f55c.   v2:= "MacCroatian" @type (object, string);
#L08f560.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f566.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f56a.   v1:= "x-MacCyrillic" @type (object, string);
#L08f56e.   v2:= "MacCyrillic" @type (object, string);
#L08f572.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f578.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f57c.   v1:= "x-MacDingbat" @type (object, string);
#L08f580.   v2:= "MacDingbat" @type (object, string);
#L08f584.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f58a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f58e.   v1:= "x-MacGreek" @type (object, string);
#L08f592.   v2:= "MacGreek" @type (object, string);
#L08f596.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f59c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f5a0.   v1:= "x-MacHebrew" @type (object, string);
#L08f5a4.   v2:= "MacHebrew" @type (object, string);
#L08f5a8.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f5ae.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f5b2.   v1:= "x-MacIceland" @type (object, string);
#L08f5b6.   v2:= "MacIceland" @type (object, string);
#L08f5ba.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f5c0.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f5c4.   v1:= "x-MacRoman" @type (object, string);
#L08f5c8.   v2:= "MacRoman" @type (object, string);
#L08f5cc.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f5d2.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f5d6.   v1:= "x-MacRomania" @type (object, string);
#L08f5da.   v2:= "MacRomania" @type (object, string);
#L08f5de.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f5e4.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f5e8.   v1:= "x-MacSymbol" @type (object, string);
#L08f5ec.   v2:= "MacSymbol" @type (object, string);
#L08f5f0.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f5f6.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f5fa.   v1:= "x-MacThai" @type (object, string);
#L08f5fe.   v2:= "MacThai" @type (object, string);
#L08f602.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f608.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f60c.   v1:= "x-MacTurkish" @type (object, string);
#L08f610.   v2:= "MacTurkish" @type (object, string);
#L08f614.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f61a.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f61e.   v1:= "x-MacUkraine" @type (object, string);
#L08f622.   v2:= "MacUkraine" @type (object, string);
#L08f626.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f62c.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f630.   v1:= "x-MS950-HKSCS" @type (object, string);
#L08f634.   v2:= "MS950_HKSCS" @type (object, string);
#L08f638.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f63e.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f642.   v1:= "x-mswin-936" @type (object, string);
#L08f646.   v2:= "MS936" @type (object, string);
#L08f64a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f650.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f654.   v1:= "x-PCK" @type (object, string);
#L08f658.   v2:= "PCK" @type (object, string);
#L08f65c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f662.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f666.   v1:= "x-windows-874" @type (object, string);
#L08f66a.   v2:= "MS874" @type (object, string);
#L08f66e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f674.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f678.   v1:= "x-windows-949" @type (object, string);
#L08f67c.   v2:= "MS949" @type (object, string);
#L08f680.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f686.   v0:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f68a.   v1:= "x-windows-950" @type (object, string);
#L08f68e.   v2:= "MS950" @type (object, string);
#L08f692.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f698.   return @void ;

   }
    procedure [|void|] [|java:io:HistoricalCharsetNames.<init>|] ([|java:io:HistoricalCharsetNames|] v0 @type (this)) @owner [|java:io:HistoricalCharsetNames|] @signature [|Ljava/io/HistoricalCharsetNames;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L08f6ac.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08f6b2.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:HistoricalCharsetNames.get|] ([|java:nio:charset:Charset|] v3 @type (object)) @owner [|java:io:HistoricalCharsetNames|] @signature [|Ljava/io/HistoricalCharsetNames;.get:(Ljava/nio/charset/Charset;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08f6c4.   call temp:=  [|java:nio:charset:Charset.name|](v3) @signature [|Ljava/nio/charset/Charset;.name:()Ljava/lang/String;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L08f6ca.   v0:= temp  @type object;
#L08f6cc.   v2:= @@[|java:io:HistoricalCharsetNames.historicalNames|]   @type object;
#L08f6d0.   call temp:=  [|java:util:HashMap.get|](v2, v0) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08f6d6.   v1:= temp  @type object;
#L08f6d8.   v1:= ([|java:lang:String|])v1;
#L08f6dc.   if v1 == 0 then goto L08f6e2;
#L08f6e0.   return v1  @type object;
#L08f6e2.   v1:= v0  @type object;
#L08f6e4.   goto L08f6e0;

   }
record [|java:io:IOError|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Error|] {
   }
      global [|long|] @@[|java:io:IOError.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:IOError.<init>|] ([|java:io:IOError|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:io:IOError|] @signature [|Ljava/io/IOError;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08f6f8.   call temp:=  [|java:lang:Error.<init>|](v0, v1) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L08f6fe.   return @void ;

   }
record [|java:io:InterruptedIOException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
      [|int|] [|java:io:InterruptedIOException.bytesTransferred|]    @AccessFlag PUBLIC;
   }
      global [|long|] @@[|java:io:InterruptedIOException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:InterruptedIOException.<init>|] ([|java:io:InterruptedIOException|] v0 @type (this)) @owner [|java:io:InterruptedIOException|] @signature [|Ljava/io/InterruptedIOException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08f710.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08f716.   return @void ;

   }
    procedure [|void|] [|java:io:InterruptedIOException.<init>|] ([|java:io:InterruptedIOException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:InterruptedIOException|] @signature [|Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08f728.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08f72e.   return @void ;

   }
    procedure [|void|] [|java:io:InterruptedIOException.<init>|] ([|java:io:InterruptedIOException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:io:InterruptedIOException|] @signature [|Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08f740.   call temp:=  [|java:io:IOException.<init>|](v0, v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08f746.   return @void ;

   }
record [|java:io:ObjectStreamException|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:io:ObjectStreamException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:ObjectStreamException.<init>|] ([|java:io:ObjectStreamException|] v0 @type (this)) @owner [|java:io:ObjectStreamException|] @signature [|Ljava/io/ObjectStreamException;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L08f758.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08f75e.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamException.<init>|] ([|java:io:ObjectStreamException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:ObjectStreamException|] @signature [|Ljava/io/ObjectStreamException;.<init>:(Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L08f770.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L08f776.   return @void ;

   }
record [|java:io:InvalidClassException|]  @type class @AccessFlag PUBLIC  extends [|java:io:ObjectStreamException|] {
      [|java:lang:String|] [|java:io:InvalidClassException.classname|]    @AccessFlag PUBLIC;
   }
      global [|long|] @@[|java:io:InvalidClassException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:InvalidClassException.<init>|] ([|java:io:InvalidClassException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:InvalidClassException|] @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08f788.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0, v1) @signature [|Ljava/io/ObjectStreamException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L08f78e.   return @void ;

   }
    procedure [|void|] [|java:io:InvalidClassException.<init>|] ([|java:io:InvalidClassException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:io:InvalidClassException|] @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08f7a0.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0, v2) @signature [|Ljava/io/ObjectStreamException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L08f7a6.   v0.[|java:io:InvalidClassException.classname|]  := v1 @type object;
#L08f7aa.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:InvalidClassException.getMessage|] ([|java:io:InvalidClassException|] v3 @type (this)) @owner [|java:io:InvalidClassException|] @signature [|Ljava/io/InvalidClassException;.getMessage:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08f7bc.   call temp:=  [|java:io:ObjectStreamException.getMessage|](v3) @signature [|Ljava/io/ObjectStreamException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamException|] @type super;
#L08f7c2.   v0:= temp  @type object;
#L08f7c4.   v1:= v3.[|java:io:InvalidClassException.classname|]   @type object;
#L08f7c8.   if v1 == 0 then goto L08f7fe;
#L08f7cc.   v1:= new [|java:lang:StringBuilder|];
#L08f7d0.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08f7d6.   v2:= v3.[|java:io:InvalidClassException.classname|]   @type object;
#L08f7da.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08f7e0.   v1:= temp  @type object;
#L08f7e2.   v2:= "; " @type (object, string);
#L08f7e6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08f7ec.   v1:= temp  @type object;
#L08f7ee.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08f7f4.   v1:= temp  @type object;
#L08f7f6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08f7fc.   v0:= temp  @type object;
#L08f7fe.   return v0  @type object;

   }
record [|java:io:InvalidObjectException|]  @type class @AccessFlag PUBLIC  extends [|java:io:ObjectStreamException|] {
   }
      global [|long|] @@[|java:io:InvalidObjectException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:InvalidObjectException.<init>|] ([|java:io:InvalidObjectException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:InvalidObjectException|] @signature [|Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08f810.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0, v1) @signature [|Ljava/io/ObjectStreamException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L08f816.   return @void ;

   }
record [|java:io:LineNumberInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterInputStream|] {
      [|int|] [|java:io:LineNumberInputStream.lastChar|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:LineNumberInputStream.lineNumber|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:LineNumberInputStream.markedLastChar|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:LineNumberInputStream.markedLineNumber|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:LineNumberInputStream.<init>|] ([|java:io:LineNumberInputStream|] v1 @type (this), [|java:io:InputStream|] v2 @type (object)) @owner [|java:io:LineNumberInputStream|] @signature [|Ljava/io/LineNumberInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08f828.   v0:= -1  @length 4;
#L08f82a.   call temp:=  [|java:io:FilterInputStream.<init>|](v1, v2) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L08f830.   v1.[|java:io:LineNumberInputStream.markedLineNumber|]  := v0;
#L08f834.   v1.[|java:io:LineNumberInputStream.lastChar|]  := v0;
#L08f838.   return @void ;

   }
    procedure [|int|] [|java:io:LineNumberInputStream.available|] ([|java:io:LineNumberInputStream|] v3 @type (this)) @owner [|java:io:LineNumberInputStream|] @signature [|Ljava/io/LineNumberInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08f84c.   v0:= v3.[|java:io:LineNumberInputStream.in|]   @type object;
#L08f850.   call temp:=  [|java:io:InputStream.available|](v0) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08f856.   v0:= temp;
#L08f858.   v1:= v0 / 2;
#L08f85c.   v0:= v3.[|java:io:LineNumberInputStream.lastChar|] ;
#L08f860.   v2:= -1  @length 4;
#L08f862.   if v0 != v2 then goto L08f86c;
#L08f866.   v0:= 0  @length 4;
#L08f868.   v0:= v0 + v1  @type int;
#L08f86a.   return v0;
#L08f86c.   v0:= 1  @length 4;
#L08f86e.   goto L08f868;

   }
    procedure [|int|] [|java:io:LineNumberInputStream.getLineNumber|] ([|java:io:LineNumberInputStream|] v1 @type (this)) @owner [|java:io:LineNumberInputStream|] @signature [|Ljava/io/LineNumberInputStream;.getLineNumber:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08f880.   v0:= v1.[|java:io:LineNumberInputStream.lineNumber|] ;
#L08f884.   return v0;

   }
    procedure [|void|] [|java:io:LineNumberInputStream.mark|] ([|java:io:LineNumberInputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:LineNumberInputStream|] @signature [|Ljava/io/LineNumberInputStream;.mark:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08f898.   v0:= v1.[|java:io:LineNumberInputStream.in|]   @type object;
#L08f89c.   call temp:=  [|java:io:InputStream.mark|](v0, v2) @signature [|Ljava/io/InputStream;.mark:(I)V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08f8a2.   v0:= v1.[|java:io:LineNumberInputStream.lineNumber|] ;
#L08f8a6.   v1.[|java:io:LineNumberInputStream.markedLineNumber|]  := v0;
#L08f8aa.   v0:= v1.[|java:io:LineNumberInputStream.lastChar|] ;
#L08f8ae.   v1.[|java:io:LineNumberInputStream.markedLastChar|]  := v0;
#L08f8b2.   return @void ;

   }
    procedure [|int|] [|java:io:LineNumberInputStream.read|] ([|java:io:LineNumberInputStream|] v4 @type (this)) @owner [|java:io:LineNumberInputStream|] @signature [|Ljava/io/LineNumberInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08f8c4.   v3:= -1  @length 4;
#L08f8c6.   v0:= v4.[|java:io:LineNumberInputStream.lastChar|] ;
#L08f8ca.   if v0 != v3 then goto L08f8e2;
#L08f8ce.   v1:= v4.[|java:io:LineNumberInputStream.in|]   @type object;
#L08f8d2.   call temp:=  [|java:io:InputStream.read|](v1) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08f8d8.   v0:= temp;
#L08f8da.   goto L08f91c;
#L08f8e0.   return v0;
#L08f8e2.   v4.[|java:io:LineNumberInputStream.lastChar|]  := v3;
#L08f8e6.   goto L08f8da;
#L08f8e8.   v0:= 10  @length 16;
#L08f8ec.   v1:= v4.[|java:io:LineNumberInputStream.in|]   @type object;
#L08f8f0.   call temp:=  [|java:io:InputStream.read|](v1) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08f8f6.   v1:= temp;
#L08f8f8.   v4.[|java:io:LineNumberInputStream.lastChar|]  := v1;
#L08f8fc.   v1:= v4.[|java:io:LineNumberInputStream.lastChar|] ;
#L08f900.   v2:= 10  @length 16;
#L08f904.   if v1 != v2 then goto L08f90c;
#L08f908.   v4.[|java:io:LineNumberInputStream.lastChar|]  := v3;
#L08f90c.   v1:= v4.[|java:io:LineNumberInputStream.lineNumber|] ;
#L08f910.   v1:= v1 + 1;
#L08f914.   v4.[|java:io:LineNumberInputStream.lineNumber|]  := v1;
#L08f918.   goto L08f8e0;
#L08f91a.   
#L08f91c.   switch  v0
                 | 10 => goto L08f90c
                 | 11 => goto L08f8e0
                 | 12 => goto L08f8e0
                 | 13 => goto L08f8e8
                 | => goto L08f8e0;

   }
    procedure [|int|] [|java:io:LineNumberInputStream.read|] ([|java:io:LineNumberInputStream|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:io:LineNumberInputStream|] @signature [|Ljava/io/LineNumberInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L08f944.   v3:= -1  @length 4;
#L08f946.   v4:= v7.length;
#L08f948.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v4, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L08f94e.   v2:= 0  @length 4;
#L08f950.   if v2 >= v9 then goto L08f980;
#L08f954.   call temp:=  [|java:io:LineNumberInputStream.read|](v6) @signature [|Ljava/io/LineNumberInputStream;.read:()I|] @classDescriptor [|java:io:LineNumberInputStream|] @type virtual;
#L08f95a.   v0:= temp;
#L08f95c.   if v0 != v3 then goto L08f970;
#L08f960.   if v2 != 0 then goto L08f966;
#L08f964.   v2:= v3;
#L08f966.   return v2;
#L08f968.   v1:= Exception  @type object;
#L08f96a.   if v2 != 0 then goto L08f966;
#L08f96e.   throw v1;
#L08f970.   v4:= v8 + v2  @type int;
#L08f974.   v5:= (byte)v0  @type i2b;
#L08f976.   v7[v4]:= v5  @byte;
#L08f97a.   v2:= v2 + 1;
#L08f97e.   goto L08f950;
#L08f980.   v2:= v9;
#L08f982.   goto L08f966;
  catch  [|java:io:IOException|] @[L08f954..L08f95a] goto L08f968;

   }
    procedure [|void|] [|java:io:LineNumberInputStream.reset|] ([|java:io:LineNumberInputStream|] v1 @type (this)) @owner [|java:io:LineNumberInputStream|] @signature [|Ljava/io/LineNumberInputStream;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L08f9a0.   v0:= v1.[|java:io:LineNumberInputStream.in|]   @type object;
#L08f9a4.   call temp:=  [|java:io:InputStream.reset|](v0) @signature [|Ljava/io/InputStream;.reset:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L08f9aa.   v0:= v1.[|java:io:LineNumberInputStream.markedLineNumber|] ;
#L08f9ae.   v1.[|java:io:LineNumberInputStream.lineNumber|]  := v0;
#L08f9b2.   v0:= v1.[|java:io:LineNumberInputStream.markedLastChar|] ;
#L08f9b6.   v1.[|java:io:LineNumberInputStream.lastChar|]  := v0;
#L08f9ba.   return @void ;

   }
    procedure [|void|] [|java:io:LineNumberInputStream.setLineNumber|] ([|java:io:LineNumberInputStream|] v0 @type (this), [|int|] v1) @owner [|java:io:LineNumberInputStream|] @signature [|Ljava/io/LineNumberInputStream;.setLineNumber:(I)V|] @Access PUBLIC {
      local temp ;
      
#L08f9cc.   v0.[|java:io:LineNumberInputStream.lineNumber|]  := v1;
#L08f9d0.   return @void ;

   }
    procedure [|long|] [|java:io:LineNumberInputStream.skip|] ([|java:io:LineNumberInputStream|] v2 @type (this), [|long|] v3) @owner [|java:io:LineNumberInputStream|] @signature [|Ljava/io/LineNumberInputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08f9e4.   call temp:=  [|libcore:io:Streams.skipByReading|](v2, v3, v4) @signature [|Llibcore/io/Streams;.skipByReading:(Ljava/io/InputStream;J)J|] @classDescriptor [|libcore:io:Streams|] @type static;
#L08f9ea.   v0:= temp  @type wide;
#L08f9ec.   return v0  @type wide;

   }
record [|java:io:LineNumberReader|]  @type class @AccessFlag PUBLIC  extends [|java:io:BufferedReader|] {
      [|boolean|] [|java:io:LineNumberReader.lastWasCR|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:LineNumberReader.lineNumber|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:LineNumberReader.markedLastWasCR|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:LineNumberReader.markedLineNumber|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:LineNumberReader.<init>|] ([|java:io:LineNumberReader|] v1 @type (this), [|java:io:Reader|] v2 @type (object)) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.<init>:(Ljava/io/Reader;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08fa00.   call temp:=  [|java:io:BufferedReader.<init>|](v1, v2) @signature [|Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L08fa06.   v0:= -1  @length 4;
#L08fa08.   v1.[|java:io:LineNumberReader.markedLineNumber|]  := v0;
#L08fa0c.   return @void ;

   }
    procedure [|void|] [|java:io:LineNumberReader.<init>|] ([|java:io:LineNumberReader|] v1 @type (this), [|java:io:Reader|] v2 @type (object), [|int|] v3) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.<init>:(Ljava/io/Reader;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L08fa20.   call temp:=  [|java:io:BufferedReader.<init>|](v1, v2, v3) @signature [|Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;I)V|] @classDescriptor [|java:io:BufferedReader|] @type direct;
#L08fa26.   v0:= -1  @length 4;
#L08fa28.   v1.[|java:io:LineNumberReader.markedLineNumber|]  := v0;
#L08fa2c.   return @void ;

   }
    procedure [|int|] [|java:io:LineNumberReader.getLineNumber|] ([|java:io:LineNumberReader|] v2 @type (this)) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.getLineNumber:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08fa40.   v1:= v2.[|java:io:LineNumberReader.lock|]   @type object;
#L08fa44.   (@monitorenter v1)
#L08fa46.   v0:= v2.[|java:io:LineNumberReader.lineNumber|] ;
#L08fa4a.   (@monitorexit v1)
#L08fa4c.   return v0;
#L08fa4e.   v0:= Exception  @type object;
#L08fa50.   (@monitorexit v1)
#L08fa52.   throw v0;
  catch  [|any|] @[L08fa46..L08fa52] goto L08fa4e;

   }
    procedure [|void|] [|java:io:LineNumberReader.mark|] ([|java:io:LineNumberReader|] v2 @type (this), [|int|] v3) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.mark:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08fa70.   v1:= v2.[|java:io:LineNumberReader.lock|]   @type object;
#L08fa74.   (@monitorenter v1)
#L08fa76.   call temp:=  [|java:io:BufferedReader.mark|](v2, v3) @signature [|Ljava/io/BufferedReader;.mark:(I)V|] @classDescriptor [|java:io:BufferedReader|] @type super;
#L08fa7c.   v0:= v2.[|java:io:LineNumberReader.lineNumber|] ;
#L08fa80.   v2.[|java:io:LineNumberReader.markedLineNumber|]  := v0;
#L08fa84.   v0:= v2.[|java:io:LineNumberReader.lastWasCR|]   @boolean;
#L08fa88.   v2.[|java:io:LineNumberReader.markedLastWasCR|]  := v0 @boolean;
#L08fa8c.   (@monitorexit v1)
#L08fa8e.   return @void ;
#L08fa90.   v0:= Exception  @type object;
#L08fa92.   (@monitorexit v1)
#L08fa94.   throw v0;
  catch  [|any|] @[L08fa76..L08fa94] goto L08fa90;

   }
    procedure [|int|] [|java:io:LineNumberReader.read|] ([|java:io:LineNumberReader|] v3 @type (this)) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08fab4.   v2:= v3.[|java:io:LineNumberReader.lock|]   @type object;
#L08fab8.   (@monitorenter v2)
#L08faba.   call temp:=  [|java:io:BufferedReader.read|](v3) @signature [|Ljava/io/BufferedReader;.read:()I|] @classDescriptor [|java:io:BufferedReader|] @type super;
#L08fac0.   v0:= temp;
#L08fac2.   v1:= 10  @length 16;
#L08fac6.   if v0 != v1 then goto L08fada;
#L08faca.   v1:= v3.[|java:io:LineNumberReader.lastWasCR|]   @boolean;
#L08face.   if v1 == 0 then goto L08fada;
#L08fad2.   call temp:=  [|java:io:BufferedReader.read|](v3) @signature [|Ljava/io/BufferedReader;.read:()I|] @classDescriptor [|java:io:BufferedReader|] @type super;
#L08fad8.   v0:= temp;
#L08fada.   v1:= 0  @length 4;
#L08fadc.   v3.[|java:io:LineNumberReader.lastWasCR|]  := v1 @boolean;
#L08fae0.   goto L08fb08;
#L08fae6.   (@monitorexit v2)
#L08fae8.   return v0;
#L08faea.   v0:= 10  @length 16;
#L08faee.   v1:= 1  @length 4;
#L08faf0.   v3.[|java:io:LineNumberReader.lastWasCR|]  := v1 @boolean;
#L08faf4.   v1:= v3.[|java:io:LineNumberReader.lineNumber|] ;
#L08faf8.   v1:= v1 + 1;
#L08fafc.   v3.[|java:io:LineNumberReader.lineNumber|]  := v1;
#L08fb00.   goto L08fae6;
#L08fb02.   v1:= Exception  @type object;
#L08fb04.   (@monitorexit v2)
#L08fb06.   throw v1;
#L08fb08.   switch  v0
                 | 10 => goto L08faf4
                 | 11 => goto L08fae6
                 | 12 => goto L08fae6
                 | 13 => goto L08faea
                 | => goto L08fae6;
  catch  [|any|] @[L08faba..L08fb06] goto L08fb02;

   }
    procedure [|int|] [|java:io:LineNumberReader.read|] ([|java:io:LineNumberReader|] v5 @type (this), [|char|][] v6, [|int|] v7, [|int|] v8) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.read:([CII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08fb3c.   v3:= -1  @length 4;
#L08fb3e.   v4:= v5.[|java:io:LineNumberReader.lock|]   @type object;
#L08fb42.   (@monitorenter v4)
#L08fb44.   call temp:=  [|java:io:BufferedReader.read|](v5, v6, v7, v8) @signature [|Ljava/io/BufferedReader;.read:([CII)I|] @classDescriptor [|java:io:BufferedReader|] @type super;
#L08fb4a.   v2:= temp;
#L08fb4c.   if v2 != v3 then goto L08fb56;
#L08fb50.   (@monitorexit v4)
#L08fb52.   v2:= v3;
#L08fb54.   return v2;
#L08fb56.   v1:= 0  @length 4;
#L08fb58.   if v1 >= v2 then goto L08fbb6;
#L08fb5c.   v3:= v7 + v1  @type int;
#L08fb60.   v0:= v6[v3]  @char;
#L08fb64.   v3:= 13  @length 16;
#L08fb68.   if v0 != v3 then goto L08fb84;
#L08fb6c.   v3:= v5.[|java:io:LineNumberReader.lineNumber|] ;
#L08fb70.   v3:= v3 + 1;
#L08fb74.   v5.[|java:io:LineNumberReader.lineNumber|]  := v3;
#L08fb78.   v3:= 1  @length 4;
#L08fb7a.   v5.[|java:io:LineNumberReader.lastWasCR|]  := v3 @boolean;
#L08fb7e.   v1:= v1 + 1;
#L08fb82.   goto L08fb58;
#L08fb84.   v3:= 10  @length 16;
#L08fb88.   if v0 != v3 then goto L08fbae;
#L08fb8c.   v3:= v5.[|java:io:LineNumberReader.lastWasCR|]   @boolean;
#L08fb90.   if v3 != 0 then goto L08fba0;
#L08fb94.   v3:= v5.[|java:io:LineNumberReader.lineNumber|] ;
#L08fb98.   v3:= v3 + 1;
#L08fb9c.   v5.[|java:io:LineNumberReader.lineNumber|]  := v3;
#L08fba0.   v3:= 0  @length 4;
#L08fba2.   v5.[|java:io:LineNumberReader.lastWasCR|]  := v3 @boolean;
#L08fba6.   goto L08fb7e;
#L08fba8.   v3:= Exception  @type object;
#L08fbaa.   (@monitorexit v4)
#L08fbac.   throw v3;
#L08fbae.   v3:= 0  @length 4;
#L08fbb0.   v5.[|java:io:LineNumberReader.lastWasCR|]  := v3 @boolean;
#L08fbb4.   goto L08fb7e;
#L08fbb6.   (@monitorexit v4)
#L08fbb8.   goto L08fb54;
  catch  [|any|] @[L08fb44..L08fbac] goto L08fba8;
  catch  [|any|] @[L08fbb0..L08fbb8] goto L08fba8;

   }
    procedure [|java:lang:String|] [|java:io:LineNumberReader.readLine|] ([|java:io:LineNumberReader|] v3 @type (this)) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.readLine:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L08fbe0.   v2:= v3.[|java:io:LineNumberReader.lock|]   @type object;
#L08fbe4.   (@monitorenter v2)
#L08fbe6.   v1:= v3.[|java:io:LineNumberReader.lastWasCR|]   @boolean;
#L08fbea.   if v1 == 0 then goto L08fbfa;
#L08fbee.   call temp:=  [|java:io:LineNumberReader.chompNewline|](v3) @signature [|Ljava/io/LineNumberReader;.chompNewline:()V|] @classDescriptor [|java:io:LineNumberReader|] @type virtual;
#L08fbf4.   v1:= 0  @length 4;
#L08fbf6.   v3.[|java:io:LineNumberReader.lastWasCR|]  := v1 @boolean;
#L08fbfa.   call temp:=  [|java:io:BufferedReader.readLine|](v3) @signature [|Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;|] @classDescriptor [|java:io:BufferedReader|] @type super;
#L08fc00.   v0:= temp  @type object;
#L08fc02.   if v0 == 0 then goto L08fc12;
#L08fc06.   v1:= v3.[|java:io:LineNumberReader.lineNumber|] ;
#L08fc0a.   v1:= v1 + 1;
#L08fc0e.   v3.[|java:io:LineNumberReader.lineNumber|]  := v1;
#L08fc12.   (@monitorexit v2)
#L08fc14.   return v0  @type object;
#L08fc16.   v1:= Exception  @type object;
#L08fc18.   (@monitorexit v2)
#L08fc1a.   throw v1;
  catch  [|any|] @[L08fbe6..L08fc1a] goto L08fc16;

   }
    procedure [|void|] [|java:io:LineNumberReader.reset|] ([|java:io:LineNumberReader|] v2 @type (this)) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08fc38.   v1:= v2.[|java:io:LineNumberReader.lock|]   @type object;
#L08fc3c.   (@monitorenter v1)
#L08fc3e.   call temp:=  [|java:io:BufferedReader.reset|](v2) @signature [|Ljava/io/BufferedReader;.reset:()V|] @classDescriptor [|java:io:BufferedReader|] @type super;
#L08fc44.   v0:= v2.[|java:io:LineNumberReader.markedLineNumber|] ;
#L08fc48.   v2.[|java:io:LineNumberReader.lineNumber|]  := v0;
#L08fc4c.   v0:= v2.[|java:io:LineNumberReader.markedLastWasCR|]   @boolean;
#L08fc50.   v2.[|java:io:LineNumberReader.lastWasCR|]  := v0 @boolean;
#L08fc54.   (@monitorexit v1)
#L08fc56.   return @void ;
#L08fc58.   v0:= Exception  @type object;
#L08fc5a.   (@monitorexit v1)
#L08fc5c.   throw v0;
  catch  [|any|] @[L08fc3e..L08fc5c] goto L08fc58;

   }
    procedure [|void|] [|java:io:LineNumberReader.setLineNumber|] ([|java:io:LineNumberReader|] v2 @type (this), [|int|] v3) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.setLineNumber:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L08fc7c.   v1:= v2.[|java:io:LineNumberReader.lock|]   @type object;
#L08fc80.   (@monitorenter v1)
#L08fc82.   v2.[|java:io:LineNumberReader.lineNumber|]  := v3;
#L08fc86.   (@monitorexit v1)
#L08fc88.   return @void ;
#L08fc8a.   v0:= Exception  @type object;
#L08fc8c.   (@monitorexit v1)
#L08fc8e.   throw v0;
  catch  [|any|] @[L08fc82..L08fc8e] goto L08fc8a;

   }
    procedure [|long|] [|java:io:LineNumberReader.skip|] ([|java:io:LineNumberReader|] v5 @type (this), [|long|] v6) @owner [|java:io:LineNumberReader|] @signature [|Ljava/io/LineNumberReader;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L08fcac.   v1:= 0  @length wide16;
#L08fcb0.   v1:= cmp(v6,v1);
#L08fcb4.   if v1 >= 0 then goto L08fcea;
#L08fcb8.   v1:= new [|java:lang:IllegalArgumentException|];
#L08fcbc.   v2:= new [|java:lang:StringBuilder|];
#L08fcc0.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L08fcc6.   v3:= "charCount < 0: " @type (object, string);
#L08fcca.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08fcd0.   v2:= temp  @type object;
#L08fcd2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08fcd8.   v2:= temp  @type object;
#L08fcda.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L08fce0.   v2:= temp  @type object;
#L08fce2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L08fce8.   throw v1;
#L08fcea.   v2:= v5.[|java:io:LineNumberReader.lock|]   @type object;
#L08fcee.   (@monitorenter v2)
#L08fcf0.   v0:= 0  @length 4;
#L08fcf2.   v3:= (long)v0  @type i2l;
#L08fcf4.   v1:= cmp(v3,v6);
#L08fcf8.   if v1 >= 0 then goto L08fd16;
#L08fcfc.   call temp:=  [|java:io:LineNumberReader.read|](v5) @signature [|Ljava/io/LineNumberReader;.read:()I|] @classDescriptor [|java:io:LineNumberReader|] @type virtual;
#L08fd02.   v1:= temp;
#L08fd04.   v3:= -1  @length 4;
#L08fd06.   if v1 != v3 then goto L08fd10;
#L08fd0a.   v6:= (long)v0  @type i2l;
#L08fd0c.   (@monitorexit v2)
#L08fd0e.   return v6  @type wide;
#L08fd10.   v0:= v0 + 1;
#L08fd14.   goto L08fcf2;
#L08fd16.   (@monitorexit v2)
#L08fd18.   goto L08fd0e;
#L08fd1a.   v1:= Exception  @type object;
#L08fd1c.   (@monitorexit v2)
#L08fd1e.   throw v1;
  catch  [|any|] @[L08fcfc..L08fd1e] goto L08fd1a;

   }
record [|java:io:NotActiveException|]  @type class @AccessFlag PUBLIC  extends [|java:io:ObjectStreamException|] {
   }
      global [|long|] @@[|java:io:NotActiveException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:NotActiveException.<init>|] ([|java:io:NotActiveException|] v0 @type (this)) @owner [|java:io:NotActiveException|] @signature [|Ljava/io/NotActiveException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08fd3c.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0) @signature [|Ljava/io/ObjectStreamException;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L08fd42.   return @void ;

   }
    procedure [|void|] [|java:io:NotActiveException.<init>|] ([|java:io:NotActiveException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:NotActiveException|] @signature [|Ljava/io/NotActiveException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08fd54.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0, v1) @signature [|Ljava/io/ObjectStreamException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L08fd5a.   return @void ;

   }
record [|java:io:NotSerializableException|]  @type class @AccessFlag PUBLIC  extends [|java:io:ObjectStreamException|] {
   }
      global [|long|] @@[|java:io:NotSerializableException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:NotSerializableException.<init>|] ([|java:io:NotSerializableException|] v0 @type (this)) @owner [|java:io:NotSerializableException|] @signature [|Ljava/io/NotSerializableException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08fd6c.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0) @signature [|Ljava/io/ObjectStreamException;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L08fd72.   return @void ;

   }
    procedure [|void|] [|java:io:NotSerializableException.<init>|] ([|java:io:NotSerializableException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:NotSerializableException|] @signature [|Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L08fd84.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0, v1) @signature [|Ljava/io/ObjectStreamException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L08fd8a.   return @void ;

   }
record [|java:io:ObjectInput|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:io:DataInput|], [|java:lang:AutoCloseable|] {
   }
    procedure [|int|] [|java:io:ObjectInput.available|] () @owner [|java:io:ObjectInput|] @signature [|Ljava/io/ObjectInput;.available:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectInput.close|] () @owner [|java:io:ObjectInput|] @signature [|Ljava/io/ObjectInput;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:io:ObjectInput.read|] () @owner [|java:io:ObjectInput|] @signature [|Ljava/io/ObjectInput;.read:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:io:ObjectInput.read|] ([|byte|][] v0) @owner [|java:io:ObjectInput|] @signature [|Ljava/io/ObjectInput;.read:([B)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:io:ObjectInput.read|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|java:io:ObjectInput|] @signature [|Ljava/io/ObjectInput;.read:([BII)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:io:ObjectInput.readObject|] () @owner [|java:io:ObjectInput|] @signature [|Ljava/io/ObjectInput;.readObject:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:io:ObjectInput.skip|] ([|long|] v0) @owner [|java:io:ObjectInput|] @signature [|Ljava/io/ObjectInput;.skip:(J)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:ObjectInputStream$InputValidationDesc|]  @type class @AccessFlag   {
      [|int|] [|java:io:ObjectInputStream$InputValidationDesc.priority|]    @AccessFlag ;
      [|java:io:ObjectInputValidation|] [|java:io:ObjectInputStream$InputValidationDesc.validator|]    @AccessFlag ;
   }
    procedure [|void|] [|java:io:ObjectInputStream$InputValidationDesc.<init>|] ([|java:io:ObjectInputStream$InputValidationDesc|] v0 @type (this)) @owner [|java:io:ObjectInputStream$InputValidationDesc|] @signature [|Ljava/io/ObjectInputStream$InputValidationDesc;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L08fd9c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08fda2.   return @void ;

   }
record [|java:io:ObjectStreamConstants|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|int|] @@[|java:io:ObjectStreamConstants.PROTOCOL_VERSION_1|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:io:ObjectStreamConstants.PROTOCOL_VERSION_2|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.SC_BLOCK_DATA|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.SC_ENUM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.SC_EXTERNALIZABLE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.SC_SERIALIZABLE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.SC_WRITE_METHOD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|short|] @@[|java:io:ObjectStreamConstants.STREAM_MAGIC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|short|] @@[|java:io:ObjectStreamConstants.STREAM_VERSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:io:SerializablePermission|] @@[|java:io:ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:io:SerializablePermission|] @@[|java:io:ObjectStreamConstants.SUBSTITUTION_PERMISSION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_ARRAY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_BASE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_BLOCKDATA|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_BLOCKDATALONG|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_CLASS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_CLASSDESC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_ENDBLOCKDATA|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_ENUM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_EXCEPTION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_LONGSTRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_MAX|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_NULL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_OBJECT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_PROXYCLASSDESC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_REFERENCE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_RESET|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|byte|] @@[|java:io:ObjectStreamConstants.TC_STRING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:io:ObjectStreamConstants.baseWireHandle|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:io:ObjectStreamConstants.<clinit>|] () @owner [|java:io:ObjectStreamConstants|] @signature [|Ljava/io/ObjectStreamConstants;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L08fdb4.   v0:= new [|java:io:SerializablePermission|];
#L08fdb8.   v1:= "enableSubclassImplementation" @type (object, string);
#L08fdbc.   call temp:=  [|java:io:SerializablePermission.<init>|](v0, v1) @signature [|Ljava/io/SerializablePermission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:SerializablePermission|] @type direct;
#L08fdc2.   @@[|java:io:ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION|] := v0  @type object;
#L08fdc6.   v0:= new [|java:io:SerializablePermission|];
#L08fdca.   v1:= "enableSubstitution" @type (object, string);
#L08fdce.   call temp:=  [|java:io:SerializablePermission.<init>|](v0, v1) @signature [|Ljava/io/SerializablePermission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:SerializablePermission|] @type direct;
#L08fdd4.   @@[|java:io:ObjectStreamConstants.SUBSTITUTION_PERMISSION|] := v0  @type object;
#L08fdd8.   return @void ;

   }
record [|java:io:ObjectInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:InputStream|], [|java:io:ObjectInput|], [|java:io:ObjectStreamConstants|] {
      [|java:util:HashMap|] [|java:io:ObjectInputStream.cachedSuperclasses|]    @AccessFlag PRIVATE;
      [|java:lang:ClassLoader|] [|java:io:ObjectInputStream.callerClassLoader|]    @AccessFlag PRIVATE;
      [|java:io:ObjectStreamClass|] [|java:io:ObjectInputStream.currentClass|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:io:ObjectInputStream.currentObject|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:ObjectInputStream.descriptorHandle|]    @AccessFlag PRIVATE;
      [|java:io:InputStream|] [|java:io:ObjectInputStream.emptyStream|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:ObjectInputStream.enableResolve|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:ObjectInputStream.hasPushbackTC|]    @AccessFlag PRIVATE;
      [|java:io:DataInputStream|] [|java:io:ObjectInputStream.input|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:ObjectInputStream.mustResolve|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:ObjectInputStream.nestedLevels|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:ObjectInputStream.nextHandle|]    @AccessFlag PRIVATE;
      [|java:util:ArrayList|] [|java:io:ObjectInputStream.objectsRead|]    @AccessFlag PRIVATE;
      [|java:io:InputStream|] [|java:io:ObjectInputStream.primitiveData|]    @AccessFlag PRIVATE;
      [|java:io:DataInputStream|] [|java:io:ObjectInputStream.primitiveTypes|]    @AccessFlag PRIVATE;
      [|byte|] [|java:io:ObjectInputStream.pushbackTC|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:ObjectInputStream.subclassOverridingImplementation|]    @AccessFlag PRIVATE;
      [|java:io:ObjectInputStream$InputValidationDesc|][] [|java:io:ObjectInputStream.validations|]    @AccessFlag PRIVATE;
   }
      global [|java:util:HashMap|] @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:Object|] @@[|java:io:ObjectInputStream.UNSHARED_OBJ|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:ClassLoader|] @@[|java:io:ObjectInputStream.bootstrapLoader|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:ClassLoader|] @@[|java:io:ObjectInputStream.systemLoader|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:ObjectInputStream.<clinit>|] () @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08fdec.   v0:= new [|java:lang:Object|];
#L08fdf0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L08fdf6.   @@[|java:io:ObjectInputStream.UNSHARED_OBJ|] := v0  @type object;
#L08fdfa.   v0:= new [|java:util:HashMap|];
#L08fdfe.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L08fe04.   @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|] := v0  @type object;
#L08fe08.   v0:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L08fe0c.   v1:= "boolean" @type (object, string);
#L08fe10.   v2:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L08fe14.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08fe1a.   v0:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L08fe1e.   v1:= "byte" @type (object, string);
#L08fe22.   v2:= @@[|java:lang:Byte.TYPE|]   @type object;
#L08fe26.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08fe2c.   v0:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L08fe30.   v1:= "char" @type (object, string);
#L08fe34.   v2:= @@[|java:lang:Character.TYPE|]   @type object;
#L08fe38.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08fe3e.   v0:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L08fe42.   v1:= "double" @type (object, string);
#L08fe46.   v2:= @@[|java:lang:Double.TYPE|]   @type object;
#L08fe4a.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08fe50.   v0:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L08fe54.   v1:= "float" @type (object, string);
#L08fe58.   v2:= @@[|java:lang:Float.TYPE|]   @type object;
#L08fe5c.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08fe62.   v0:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L08fe66.   v1:= "int" @type (object, string);
#L08fe6a.   v2:= @@[|java:lang:Integer.TYPE|]   @type object;
#L08fe6e.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08fe74.   v0:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L08fe78.   v1:= "long" @type (object, string);
#L08fe7c.   v2:= @@[|java:lang:Long.TYPE|]   @type object;
#L08fe80.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08fe86.   v0:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L08fe8a.   v1:= "short" @type (object, string);
#L08fe8e.   v2:= @@[|java:lang:Short.TYPE|]   @type object;
#L08fe92.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08fe98.   v0:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L08fe9c.   v1:= "void" @type (object, string);
#L08fea0.   v2:= @@[|java:lang:Void.TYPE|]   @type object;
#L08fea4.   call temp:=  [|java:util:HashMap.put|](v0, v1, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08feaa.   v0:= new [|java:lang:Object|];
#L08feae.   call temp:=  [|java:lang:Class.getClassLoader|](v0) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L08feb4.   v0:= temp  @type object;
#L08feb6.   @@[|java:io:ObjectInputStream.bootstrapLoader|] := v0  @type object;
#L08feba.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L08fec0.   v0:= temp  @type object;
#L08fec2.   @@[|java:io:ObjectInputStream.systemLoader|] := v0  @type object;
#L08fec6.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectInputStream.<init>|] ([|java:io:ObjectInputStream|] v3 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08fed8.   v2:= 1  @length 4;
#L08feda.   call temp:=  [|java:io:InputStream.<init>|](v3) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L08fee0.   v0:= new [|java:io:ByteArrayInputStream|];
#L08fee4.   v1:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L08fee8.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v0, v1) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L08feee.   v3.[|java:io:ObjectInputStream.emptyStream|]  := v0 @type object;
#L08fef2.   v0:= v3.[|java:io:ObjectInputStream.emptyStream|]   @type object;
#L08fef6.   v3.[|java:io:ObjectInputStream.primitiveData|]  := v0 @type object;
#L08fefa.   v3.[|java:io:ObjectInputStream.mustResolve|]  := v2 @boolean;
#L08fefe.   v0:= -1  @length 4;
#L08ff00.   v3.[|java:io:ObjectInputStream.descriptorHandle|]  := v0;
#L08ff04.   v0:= new [|java:util:HashMap|];
#L08ff08.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L08ff0e.   v3.[|java:io:ObjectInputStream.cachedSuperclasses|]  := v0 @type object;
#L08ff12.   v3.[|java:io:ObjectInputStream.subclassOverridingImplementation|]  := v2 @boolean;
#L08ff16.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectInputStream.<init>|] ([|java:io:ObjectInputStream|] v3 @type (this), [|java:io:InputStream|] v4 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L08ff28.   v2:= 0  @length 4;
#L08ff2a.   call temp:=  [|java:io:InputStream.<init>|](v3) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L08ff30.   v0:= new [|java:io:ByteArrayInputStream|];
#L08ff34.   v1:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L08ff38.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v0, v1) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L08ff3e.   v3.[|java:io:ObjectInputStream.emptyStream|]  := v0 @type object;
#L08ff42.   v0:= v3.[|java:io:ObjectInputStream.emptyStream|]   @type object;
#L08ff46.   v3.[|java:io:ObjectInputStream.primitiveData|]  := v0 @type object;
#L08ff4a.   v0:= 1  @length 4;
#L08ff4c.   v3.[|java:io:ObjectInputStream.mustResolve|]  := v0 @boolean;
#L08ff50.   v0:= -1  @length 4;
#L08ff52.   v3.[|java:io:ObjectInputStream.descriptorHandle|]  := v0;
#L08ff56.   v0:= new [|java:util:HashMap|];
#L08ff5a.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L08ff60.   v3.[|java:io:ObjectInputStream.cachedSuperclasses|]  := v0 @type object;
#L08ff64.   v0:= instanceof @varname v4 @type [|java:io:DataInputStream|];
#L08ff68.   if v0 == 0 then goto L08ffac;
#L08ff6c.   v4:= ([|java:io:DataInputStream|])v4;
#L08ff70.   v3.[|java:io:ObjectInputStream.input|]  := v4 @type object;
#L08ff74.   v0:= new [|java:io:DataInputStream|];
#L08ff78.   call temp:=  [|java:io:DataInputStream.<init>|](v0, v3) @signature [|Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:DataInputStream|] @type direct;
#L08ff7e.   v3.[|java:io:ObjectInputStream.primitiveTypes|]  := v0 @type object;
#L08ff82.   v3.[|java:io:ObjectInputStream.enableResolve|]  := v2 @boolean;
#L08ff86.   v3.[|java:io:ObjectInputStream.subclassOverridingImplementation|]  := v2 @boolean;
#L08ff8a.   call temp:=  [|java:io:ObjectInputStream.resetState|](v3) @signature [|Ljava/io/ObjectInputStream;.resetState:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L08ff90.   v3.[|java:io:ObjectInputStream.nestedLevels|]  := v2;
#L08ff94.   v0:= v3.[|java:io:ObjectInputStream.input|]   @type object;
#L08ff98.   v3.[|java:io:ObjectInputStream.primitiveData|]  := v0 @type object;
#L08ff9c.   call temp:=  [|java:io:ObjectInputStream.readStreamHeader|](v3) @signature [|Ljava/io/ObjectInputStream;.readStreamHeader:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L08ffa2.   v0:= v3.[|java:io:ObjectInputStream.emptyStream|]   @type object;
#L08ffa6.   v3.[|java:io:ObjectInputStream.primitiveData|]  := v0 @type object;
#L08ffaa.   return @void ;
#L08ffac.   v0:= new [|java:io:DataInputStream|];
#L08ffb0.   call temp:=  [|java:io:DataInputStream.<init>|](v0, v4) @signature [|Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:DataInputStream|] @type direct;
#L08ffb6.   v4:= v0  @type object;
#L08ffb8.   goto L08ff70;

   }
    procedure [|java:util:List|] [|java:io:ObjectInputStream.cacheSuperclassesFor|] ([|java:io:ObjectInputStream|] v4 @type (this), [|java:lang:Class|] v5 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.cacheSuperclassesFor:(Ljava/lang/Class;)Ljava/util/List;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L08ffcc.   v1:= new [|java:util:ArrayList|];
#L08ffd0.   call temp:=  [|java:util:ArrayList.<init>|](v1) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L08ffd6.   v0:= v5  @type object;
#L08ffd8.   if v0 == 0 then goto L08fff4;
#L08ffdc.   call temp:=  [|java:lang:Class.getSuperclass|](v0) @signature [|Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L08ffe2.   v2:= temp  @type object;
#L08ffe4.   if v2 == 0 then goto L08fff0;
#L08ffe8.   v3:= 0  @length 4;
#L08ffea.   call temp:=  [|java:util:ArrayList.add|](v1, v3, v0) @signature [|Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L08fff0.   v0:= v2  @type object;
#L08fff2.   goto L08ffd8;
#L08fff4.   v3:= v4.[|java:io:ObjectInputStream.cachedSuperclasses|]   @type object;
#L08fff8.   call temp:=  [|java:util:HashMap.put|](v3, v5, v1) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L08fffe.   return v1  @type object;

   }
    procedure [|void|] [|java:io:ObjectInputStream.checkReadPrimitiveTypes|] ([|java:io:ObjectInputStream|] v3 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.checkReadPrimitiveTypes:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L090010.   v1:= v3.[|java:io:ObjectInputStream.primitiveData|]   @type object;
#L090014.   v2:= v3.[|java:io:ObjectInputStream.input|]   @type object;
#L090018.   if v1 == v2 then goto L09002c;
#L09001c.   v1:= v3.[|java:io:ObjectInputStream.primitiveData|]   @type object;
#L090020.   call temp:=  [|java:io:InputStream.available|](v1) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L090026.   v1:= temp;
#L090028.   if v1 <= 0 then goto L090034;
#L09002c.   return @void ;
#L09002e.   call temp:=  [|java:io:ObjectInputStream.resetState|](v3) @signature [|Ljava/io/ObjectInputStream;.resetState:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090034.   v0:= 0  @length 4;
#L090036.   v1:= v3.[|java:io:ObjectInputStream.hasPushbackTC|]   @boolean;
#L09003a.   if v1 == 0 then goto L09005c;
#L09003e.   v1:= 0  @length 4;
#L090040.   v3.[|java:io:ObjectInputStream.hasPushbackTC|]  := v1 @boolean;
#L090044.   v1:= v3.[|java:io:ObjectInputStream.pushbackTC|]   @byte;
#L090048.   goto L0900a0;
#L09004e.   v1:= -1  @length 4;
#L090050.   if v0 == v1 then goto L09002c;
#L090054.   call temp:=  [|java:io:ObjectInputStream.pushbackTC|](v3) @signature [|Ljava/io/ObjectInputStream;.pushbackTC:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09005a.   goto L09002c;
#L09005c.   v1:= v3.[|java:io:ObjectInputStream.input|]   @type object;
#L090060.   call temp:=  [|java:io:DataInputStream.read|](v1) @signature [|Ljava/io/DataInputStream;.read:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090066.   v0:= temp;
#L090068.   v1:= (byte)v0  @type i2b;
#L09006a.   v3.[|java:io:ObjectInputStream.pushbackTC|]  := v1 @byte;
#L09006e.   goto L090044;
#L090070.   v1:= new [|java:io:ByteArrayInputStream|];
#L090074.   call temp:=  [|java:io:ObjectInputStream.readBlockData|](v3) @signature [|Ljava/io/ObjectInputStream;.readBlockData:()[B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09007a.   v2:= temp  @type object;
#L09007c.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v1, v2) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L090082.   v3.[|java:io:ObjectInputStream.primitiveData|]  := v1 @type object;
#L090086.   goto L09002c;
#L090088.   v1:= new [|java:io:ByteArrayInputStream|];
#L09008c.   call temp:=  [|java:io:ObjectInputStream.readBlockDataLong|](v3) @signature [|Ljava/io/ObjectInputStream;.readBlockDataLong:()[B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090092.   v2:= temp  @type object;
#L090094.   call temp:=  [|java:io:ByteArrayInputStream.<init>|](v1, v2) @signature [|Ljava/io/ByteArrayInputStream;.<init>:([B)V|] @classDescriptor [|java:io:ByteArrayInputStream|] @type direct;
#L09009a.   v3.[|java:io:ObjectInputStream.primitiveData|]  := v1 @type object;
#L09009e.   goto L09002c;
#L0900a0.   switch  v1
                 | 119 => goto L090070
                 | 120 => goto L09004e
                 | 121 => goto L09002e
                 | 122 => goto L090088
                 | => goto L09004e;

   }
    procedure [|void|] [|java:io:ObjectInputStream.checkedSetSuperClassDesc|] ([|java:io:ObjectStreamClass|] v1 @type (object), [|java:io:ObjectStreamClass|] v2 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.checkedSetSuperClassDesc:(Ljava/io/ObjectStreamClass;Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L0900c8.   call temp:=  [|java:lang:Object.equals|](v1, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0900ce.   v0:= temp;
#L0900d0.   if v0 == 0 then goto L0900e0;
#L0900d4.   v0:= new [|java:io:StreamCorruptedException|];
#L0900d8.   call temp:=  [|java:io:StreamCorruptedException.<init>|](v0) @signature [|Ljava/io/StreamCorruptedException;.<init>:()V|] @classDescriptor [|java:io:StreamCorruptedException|] @type direct;
#L0900de.   throw v0;
#L0900e0.   call temp:=  [|java:io:ObjectStreamClass.setSuperclass|](v1, v2) @signature [|Ljava/io/ObjectStreamClass;.setSuperclass:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0900e6.   return @void ;

   }
    procedure [|java:io:StreamCorruptedException|] [|java:io:ObjectInputStream.corruptStream|] ([|java:io:ObjectInputStream|] v3 @type (this), [|byte|] v4) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.corruptStream:(B)Ljava/io/StreamCorruptedException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0900f8.   v0:= new [|java:io:StreamCorruptedException|];
#L0900fc.   v1:= new [|java:lang:StringBuilder|];
#L090100.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L090106.   v2:= "Wrong format: " @type (object, string);
#L09010a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090110.   v1:= temp  @type object;
#L090112.   v2:= v4 ^& 255;
#L090116.   call temp:=  [|java:lang:Integer.toHexString|](v2) @signature [|Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L09011c.   v2:= temp  @type object;
#L09011e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090124.   v1:= temp  @type object;
#L090126.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09012c.   v1:= temp  @type object;
#L09012e.   call temp:=  [|java:io:StreamCorruptedException.<init>|](v0, v1) @signature [|Ljava/io/StreamCorruptedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:StreamCorruptedException|] @type direct;
#L090134.   throw v0;

   }
    procedure [|void|] [|java:io:ObjectInputStream.discardData|] ([|java:io:ObjectInputStream|] v3 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.discardData:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L090148.   v2:= v3.[|java:io:ObjectInputStream.emptyStream|]   @type object;
#L09014c.   v3.[|java:io:ObjectInputStream.primitiveData|]  := v2 @type object;
#L090150.   v0:= v3.[|java:io:ObjectInputStream.mustResolve|]   @boolean;
#L090154.   v2:= 0  @length 4;
#L090156.   v3.[|java:io:ObjectInputStream.mustResolve|]  := v2 @boolean;
#L09015a.   call temp:=  [|java:io:ObjectInputStream.nextTC|](v3) @signature [|Ljava/io/ObjectInputStream;.nextTC:()B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090160.   v1:= temp;
#L090162.   v2:= 120  @length 16;
#L090166.   if v1 != v2 then goto L090170;
#L09016a.   v3.[|java:io:ObjectInputStream.mustResolve|]  := v0 @boolean;
#L09016e.   return @void ;
#L090170.   call temp:=  [|java:io:ObjectInputStream.readContent|](v3, v1) @signature [|Ljava/io/ObjectInputStream;.readContent:(B)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090176.   goto L09015a;

   }
    procedure [|int|] [|java:io:ObjectInputStream.findStreamSuperclass|] ([|java:io:ObjectInputStream|] v6 @type (this), [|java:lang:Class|] v7 @type (object), [|java:util:List|] v8 @type (object), [|int|] v9) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.findStreamSuperclass:(Ljava/lang/Class;Ljava/util/List;I)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L090188.   v2:= v9;
#L09018a.   call temp:=  [|java:util:List.size|](v8) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L090190.   v0:= temp;
#L090192.   if v2 >= v0 then goto L0901fe;
#L090196.   call temp:=  [|java:util:List.get|](v8, v2) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L09019c.   v3:= temp  @type object;
#L09019e.   v3:= ([|java:io:ObjectStreamClass|])v3;
#L0901a2.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v3) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0901a8.   v4:= temp  @type object;
#L0901aa.   call temp:=  [|java:lang:Class.getName|](v4) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0901b0.   v1:= temp  @type object;
#L0901b2.   call temp:=  [|java:io:ObjectStreamClass.getName|](v3) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0901b8.   v4:= temp  @type object;
#L0901ba.   call temp:=  [|java:lang:String.equals|](v4, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0901c0.   v4:= temp;
#L0901c2.   if v4 == 0 then goto L0901e4;
#L0901c6.   call temp:=  [|java:lang:Class.getName|](v7) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0901cc.   v4:= temp  @type object;
#L0901ce.   call temp:=  [|java:io:ObjectStreamClass.getName|](v3) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0901d4.   v5:= temp  @type object;
#L0901d6.   call temp:=  [|java:lang:String.equals|](v4, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0901dc.   v4:= temp;
#L0901de.   if v4 == 0 then goto L0901f8;
#L0901e2.   return v2;
#L0901e4.   call temp:=  [|java:lang:Class.getName|](v7) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0901ea.   v4:= temp  @type object;
#L0901ec.   call temp:=  [|java:lang:String.equals|](v4, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0901f2.   v4:= temp;
#L0901f4.   if v4 != 0 then goto L0901e2;
#L0901f8.   v2:= v2 + 1;
#L0901fc.   goto L090192;
#L0901fe.   v2:= -1  @length 4;
#L090200.   goto L0901e2;

   }
    procedure [|java:lang:String|] [|java:io:ObjectInputStream.formatClassSig|] ([|java:lang:String|] v4 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.formatClassSig:(Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L090214.   v1:= 0  @length 4;
#L090216.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09021c.   v0:= temp;
#L09021e.   if v0 > 0 then goto L090224;
#L090222.   return v4  @type object;
#L090224.   v2:= "[L" @type (object, string);
#L090228.   call temp:=  [|java:lang:String.startsWith|](v4, v2, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;I)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L09022e.   v2:= temp;
#L090230.   if v2 == 0 then goto L090252;
#L090234.   v2:= v0 + -1;
#L090238.   call temp:=  [|java:lang:String.charAt|](v4, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L09023e.   v2:= temp;
#L090240.   v3:= 59  @length 16;
#L090244.   if v2 != v3 then goto L090252;
#L090248.   v1:= v1 + 2;
#L09024c.   v0:= v0 + -1;
#L090250.   goto L090224;
#L090252.   if v1 <= 0 then goto L090222;
#L090256.   v1:= v1 + -2;
#L09025a.   v0:= v0 + 1;
#L09025e.   call temp:=  [|java:lang:String.substring|](v4, v1, v0) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L090264.   v4:= temp  @type object;
#L090266.   goto L090222;

   }
    procedure [|java:lang:String|] [|java:io:ObjectInputStream.getBaseName|] ([|java:lang:String|] v2 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.getBaseName:(Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L090278.   v1:= 46  @length 16;
#L09027c.   call temp:=  [|java:lang:String.lastIndexOf|](v2, v1) @signature [|Ljava/lang/String;.lastIndexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L090282.   v0:= temp;
#L090284.   v1:= -1  @length 4;
#L090286.   if v0 == v1 then goto L09029a;
#L09028a.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L090290.   v1:= temp;
#L090292.   v1:= v1 + -1;
#L090296.   if v0 != v1 then goto L09029c;
#L09029a.   return v2  @type object;
#L09029c.   v1:= v0 + 1;
#L0902a0.   call temp:=  [|java:lang:String.substring|](v2, v1) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0902a6.   v2:= temp  @type object;
#L0902a8.   goto L09029a;

   }
    procedure [|java:lang:ClassLoader|] [|java:io:ObjectInputStream.getClosestUserClassLoader|] () @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.getClosestUserClassLoader:()Ljava/lang/ClassLoader;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0902bc.   v6:= -1  @length 4;
#L0902be.   call temp:=  [|dalvik:system:VMStack.getClasses|](v6) @signature [|Ldalvik/system/VMStack;.getClasses:(I)[Ljava/lang/Class;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L0902c4.   v5:= temp  @type object;
#L0902c6.   v0:= v5  @type object;
#L0902c8.   v2:= v0.length;
#L0902ca.   v1:= 0  @length 4;
#L0902cc.   if v1 >= v2 then goto L0902f8;
#L0902d0.   v4:= v0[v1]  @type object;
#L0902d4.   call temp:=  [|java:lang:Class.getClassLoader|](v4) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0902da.   v3:= temp  @type object;
#L0902dc.   if v3 == 0 then goto L0902f2;
#L0902e0.   v6:= @@[|java:io:ObjectInputStream.bootstrapLoader|]   @type object;
#L0902e4.   if v3 == v6 then goto L0902f2;
#L0902e8.   v6:= @@[|java:io:ObjectInputStream.systemLoader|]   @type object;
#L0902ec.   if v3 == v6 then goto L0902f2;
#L0902f0.   return v3  @type object;
#L0902f2.   v1:= v1 + 1;
#L0902f6.   goto L0902cc;
#L0902f8.   v3:= 0  @length 4;
#L0902fa.   goto L0902f0;

   }
    procedure [|java:io:InvalidClassException|] [|java:io:ObjectInputStream.missingClassDescriptor|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.missingClassDescriptor:()Ljava/io/InvalidClassException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L09030c.   v0:= new [|java:io:InvalidClassException|];
#L090310.   v1:= "Read null attempting to read class descriptor for object" @type (object, string);
#L090314.   call temp:=  [|java:io:InvalidClassException.<init>|](v0, v1) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L09031a.   throw v0;

   }
    procedure [|int|] [|java:io:ObjectInputStream.nextHandle|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L09032c.   v0:= v2.[|java:io:ObjectInputStream.nextHandle|] ;
#L090330.   v1:= v0 + 1;
#L090334.   v2.[|java:io:ObjectInputStream.nextHandle|]  := v1;
#L090338.   return v0;

   }
    procedure [|byte|] [|java:io:ObjectInputStream.nextTC|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.nextTC:()B|] @Access PRIVATE {
      local temp ;
        v0;
      
#L09034c.   v0:= v1.[|java:io:ObjectInputStream.hasPushbackTC|]   @boolean;
#L090350.   if v0 == 0 then goto L090360;
#L090354.   v0:= 0  @length 4;
#L090356.   v1.[|java:io:ObjectInputStream.hasPushbackTC|]  := v0 @boolean;
#L09035a.   v0:= v1.[|java:io:ObjectInputStream.pushbackTC|]   @byte;
#L09035e.   return v0;
#L090360.   v0:= v1.[|java:io:ObjectInputStream.input|]   @type object;
#L090364.   call temp:=  [|java:io:DataInputStream.readByte|](v0) @signature [|Ljava/io/DataInputStream;.readByte:()B|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L09036a.   v0:= temp;
#L09036c.   v1.[|java:io:ObjectInputStream.pushbackTC|]  := v0 @byte;
#L090370.   goto L09035a;

   }
    procedure [|void|] [|java:io:ObjectInputStream.pushbackTC|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.pushbackTC:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L090384.   v0:= 1  @length 4;
#L090386.   v1.[|java:io:ObjectInputStream.hasPushbackTC|]  := v0 @boolean;
#L09038a.   return @void ;

   }
    procedure [|byte|][] [|java:io:ObjectInputStream.readBlockData|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readBlockData:()[B|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L09039c.   v1:= v2.[|java:io:ObjectInputStream.input|]   @type object;
#L0903a0.   call temp:=  [|java:io:DataInputStream.readByte|](v1) @signature [|Ljava/io/DataInputStream;.readByte:()B|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0903a6.   v1:= temp;
#L0903a8.   v1:= v1 ^& 255;
#L0903ac.   v0:= new [|byte|][v1];
#L0903b0.   v1:= v2.[|java:io:ObjectInputStream.input|]   @type object;
#L0903b4.   call temp:=  [|java:io:DataInputStream.readFully|](v1, v0) @signature [|Ljava/io/DataInputStream;.readFully:([B)V|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0903ba.   return v0  @type object;

   }
    procedure [|byte|][] [|java:io:ObjectInputStream.readBlockDataLong|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readBlockDataLong:()[B|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0903cc.   v1:= v2.[|java:io:ObjectInputStream.input|]   @type object;
#L0903d0.   call temp:=  [|java:io:DataInputStream.readInt|](v1) @signature [|Ljava/io/DataInputStream;.readInt:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0903d6.   v1:= temp;
#L0903d8.   v0:= new [|byte|][v1];
#L0903dc.   v1:= v2.[|java:io:ObjectInputStream.input|]   @type object;
#L0903e0.   call temp:=  [|java:io:DataInputStream.readFully|](v1, v0) @signature [|Ljava/io/DataInputStream;.readFully:([B)V|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0903e6.   return v0  @type object;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectInputStream.readClassDesc|] ([|java:io:ObjectInputStream|] v5 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readClassDesc:()Ljava/io/ObjectStreamClass;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0903f8.   v4:= 0  @length 4;
#L0903fa.   call temp:=  [|java:io:ObjectInputStream.nextTC|](v5) @signature [|Ljava/io/ObjectInputStream;.nextTC:()B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090400.   v2:= temp;
#L090402.   goto L090468;
#L090408.   call temp:=  [|java:io:ObjectInputStream.corruptStream|](v5, v2) @signature [|Ljava/io/ObjectInputStream;.corruptStream:(B)Ljava/io/StreamCorruptedException;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09040e.   v3:= temp  @type object;
#L090410.   throw v3;
#L090412.   call temp:=  [|java:io:ObjectInputStream.readNewClassDesc|](v5, v4) @signature [|Ljava/io/ObjectInputStream;.readNewClassDesc:(Z)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090418.   v1:= temp  @type object;
#L09041a.   return v1  @type object;
#L09041c.   call temp:=  [|java:io:ObjectInputStream.readNewProxyClassDesc|](v5) @signature [|Ljava/io/ObjectInputStream;.readNewProxyClassDesc:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090422.   v0:= temp  @type object;
#L090424.   call temp:=  [|java:io:ObjectStreamClass.lookup|](v0) @signature [|Ljava/io/ObjectStreamClass;.lookup:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L09042a.   v1:= temp  @type object;
#L09042c.   v3:= @@[|java:io:ObjectStreamClass.NO_FIELDS|]   @type object;
#L090430.   call temp:=  [|java:io:ObjectStreamClass.setLoadFields|](v1, v3) @signature [|Ljava/io/ObjectStreamClass;.setLoadFields:([Ljava/io/ObjectStreamField;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090436.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v5) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09043c.   v3:= temp;
#L09043e.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v5, v1, v3, v4) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090444.   call temp:=  [|java:io:ObjectInputStream.readClassDesc|](v5) @signature [|Ljava/io/ObjectInputStream;.readClassDesc:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09044a.   v3:= temp  @type object;
#L09044c.   call temp:=  [|java:io:ObjectInputStream.checkedSetSuperClassDesc|](v1, v3) @signature [|Ljava/io/ObjectInputStream;.checkedSetSuperClassDesc:(Ljava/io/ObjectStreamClass;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type static;
#L090452.   goto L09041a;
#L090454.   call temp:=  [|java:io:ObjectInputStream.readCyclicReference|](v5) @signature [|Ljava/io/ObjectInputStream;.readCyclicReference:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09045a.   v3:= temp  @type object;
#L09045c.   v3:= ([|java:io:ObjectStreamClass|])v3;
#L090460.   v1:= v3  @type object;
#L090462.   goto L09041a;
#L090464.   v1:= 0  @length 4;
#L090466.   goto L09041a;
#L090468.   switch v2
                 | 112 => goto L090464
                 | 113 => goto L090454
                 | 114 => goto L090412
                 | 125 => goto L09041c
                 | => goto L090408;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readContent|] ([|java:io:ObjectInputStream|] v3 @type (this), [|byte|] v4) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readContent:(B)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L09049c.   v1:= 0  @length 4;
#L09049e.   v2:= 0  @length 4;
#L0904a0.   goto L09052c;
#L0904a6.   call temp:=  [|java:io:ObjectInputStream.corruptStream|](v3, v4) @signature [|Ljava/io/ObjectInputStream;.corruptStream:(B)Ljava/io/StreamCorruptedException;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0904ac.   v1:= temp  @type object;
#L0904ae.   throw v1;
#L0904b0.   call temp:=  [|java:io:ObjectInputStream.readBlockData|](v3) @signature [|Ljava/io/ObjectInputStream;.readBlockData:()[B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0904b6.   v1:= temp  @type object;
#L0904b8.   return v1  @type object;
#L0904ba.   call temp:=  [|java:io:ObjectInputStream.readBlockDataLong|](v3) @signature [|Ljava/io/ObjectInputStream;.readBlockDataLong:()[B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0904c0.   v1:= temp  @type object;
#L0904c2.   goto L0904b8;
#L0904c4.   call temp:=  [|java:io:ObjectInputStream.readNewClass|](v3, v2) @signature [|Ljava/io/ObjectInputStream;.readNewClass:(Z)Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0904ca.   v1:= temp  @type object;
#L0904cc.   goto L0904b8;
#L0904ce.   call temp:=  [|java:io:ObjectInputStream.readNewClassDesc|](v3, v2) @signature [|Ljava/io/ObjectInputStream;.readNewClassDesc:(Z)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0904d4.   v1:= temp  @type object;
#L0904d6.   goto L0904b8;
#L0904d8.   call temp:=  [|java:io:ObjectInputStream.readNewArray|](v3, v2) @signature [|Ljava/io/ObjectInputStream;.readNewArray:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0904de.   v1:= temp  @type object;
#L0904e0.   goto L0904b8;
#L0904e2.   call temp:=  [|java:io:ObjectInputStream.readNewObject|](v3, v2) @signature [|Ljava/io/ObjectInputStream;.readNewObject:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0904e8.   v1:= temp  @type object;
#L0904ea.   goto L0904b8;
#L0904ec.   call temp:=  [|java:io:ObjectInputStream.readNewString|](v3, v2) @signature [|Ljava/io/ObjectInputStream;.readNewString:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0904f2.   v1:= temp  @type object;
#L0904f4.   goto L0904b8;
#L0904f6.   call temp:=  [|java:io:ObjectInputStream.readNewLongString|](v3, v2) @signature [|Ljava/io/ObjectInputStream;.readNewLongString:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0904fc.   v1:= temp  @type object;
#L0904fe.   goto L0904b8;
#L090500.   call temp:=  [|java:io:ObjectInputStream.readCyclicReference|](v3) @signature [|Ljava/io/ObjectInputStream;.readCyclicReference:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090506.   v1:= temp  @type object;
#L090508.   goto L0904b8;
#L09050a.   call temp:=  [|java:io:ObjectInputStream.readException|](v3) @signature [|Ljava/io/ObjectInputStream;.readException:()Ljava/lang/Exception;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090510.   v0:= temp  @type object;
#L090512.   v1:= new [|java:io:WriteAbortedException|];
#L090516.   v2:= "Read an exception" @type (object, string);
#L09051a.   call temp:=  [|java:io:WriteAbortedException.<init>|](v1, v2, v0) @signature [|Ljava/io/WriteAbortedException;.<init>:(Ljava/lang/String;Ljava/lang/Exception;)V|] @classDescriptor [|java:io:WriteAbortedException|] @type direct;
#L090520.   throw v1;
#L090522.   call temp:=  [|java:io:ObjectInputStream.resetState|](v3) @signature [|Ljava/io/ObjectInputStream;.resetState:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090528.   goto L0904b8;
#L09052a.   
#L09052c.   switch  v4
                 | 112 => goto L0904b8
                 | 113 => goto L090500
                 | 114 => goto L0904ce
                 | 115 => goto L0904e2
                 | 116 => goto L0904ec
                 | 117 => goto L0904d8
                 | 118 => goto L0904c4
                 | 119 => goto L0904b0
                 | 120 => goto L0904a6
                 | 121 => goto L090522
                 | 122 => goto L0904ba
                 | 123 => goto L09050a
                 | 124 => goto L0904f6
                 | => goto L0904a6;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readCyclicReference|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readCyclicReference:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
      
#L090578.   call temp:=  [|java:io:ObjectInputStream.readNewHandle|](v1) @signature [|Ljava/io/ObjectInputStream;.readNewHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09057e.   v0:= temp;
#L090580.   call temp:=  [|java:io:ObjectInputStream.registeredObjectRead|](v1, v0) @signature [|Ljava/io/ObjectInputStream;.registeredObjectRead:(I)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090586.   v0:= temp  @type object;
#L090588.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readEnum|] ([|java:io:ObjectInputStream|] v8 @type (this), [|boolean|] v9) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readEnum:(Z)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L09059c.   call temp:=  [|java:io:ObjectInputStream.readEnumDesc|](v8) @signature [|Ljava/io/ObjectInputStream;.readEnumDesc:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0905a2.   v0:= temp  @type object;
#L0905a4.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v8) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0905aa.   v3:= temp;
#L0905ac.   call temp:=  [|java:io:ObjectInputStream.nextTC|](v8) @signature [|Ljava/io/ObjectInputStream;.nextTC:()B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0905b2.   v5:= temp;
#L0905b4.   goto L090628;
#L0905ba.   call temp:=  [|java:io:ObjectInputStream.corruptStream|](v8, v5) @signature [|Ljava/io/ObjectInputStream;.corruptStream:(B)Ljava/io/StreamCorruptedException;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0905c0.   v6:= temp  @type object;
#L0905c2.   throw v6;
#L0905c4.   if v9 == 0 then goto L0905de;
#L0905c8.   call temp:=  [|java:io:ObjectInputStream.readNewHandle|](v8) @signature [|Ljava/io/ObjectInputStream;.readNewHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0905ce.   v6:= new [|java:io:InvalidObjectException|];
#L0905d2.   v7:= "Unshared read of back reference" @type (object, string);
#L0905d6.   call temp:=  [|java:io:InvalidObjectException.<init>|](v6, v7) @signature [|Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidObjectException|] @type direct;
#L0905dc.   throw v6;
#L0905de.   call temp:=  [|java:io:ObjectInputStream.readCyclicReference|](v8) @signature [|Ljava/io/ObjectInputStream;.readCyclicReference:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0905e4.   v2:= temp  @type object;
#L0905e6.   v2:= ([|java:lang:String|])v2;
#L0905ea.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v0) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0905f0.   v6:= temp  @type object;
#L0905f2.   call temp:=  [|java:lang:Enum.valueOf|](v6, v2) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0905f8.   v4:= temp  @type object;
#L0905fa.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v8, v4, v3, v9) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090600.   return v4  @type object;
#L090602.   call temp:=  [|java:io:ObjectInputStream.readNewString|](v8, v9) @signature [|Ljava/io/ObjectInputStream;.readNewString:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090608.   v2:= temp  @type object;
#L09060a.   v2:= ([|java:lang:String|])v2;
#L09060e.   goto L0905ea;
#L090610.   v1:= Exception  @type object;
#L090612.   v6:= new [|java:io:InvalidObjectException|];
#L090616.   call temp:=  [|java:lang:IllegalArgumentException.getMessage|](v1) @signature [|Ljava/lang/IllegalArgumentException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalArgumentException|] @type virtual;
#L09061c.   v7:= temp  @type object;
#L09061e.   call temp:=  [|java:io:InvalidObjectException.<init>|](v6, v7) @signature [|Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidObjectException|] @type direct;
#L090624.   throw v6;
#L090626.   
#L090628.   switch  v5
                 | 113 => goto L0905c4
                 | 114 => goto L0905ba
                 | 115 => goto L0905ba
                 | 116 => goto L090602
                 | => goto L0905ba;
  catch  [|java:lang:IllegalArgumentException|] @[L0905ea..L0905f8] goto L090610;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectInputStream.readEnumDesc|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readEnumDesc:()Ljava/io/ObjectStreamClass;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L090660.   call temp:=  [|java:io:ObjectInputStream.nextTC|](v2) @signature [|Ljava/io/ObjectInputStream;.nextTC:()B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090666.   v0:= temp;
#L090668.   goto L090694;
#L09066e.   call temp:=  [|java:io:ObjectInputStream.corruptStream|](v2, v0) @signature [|Ljava/io/ObjectInputStream;.corruptStream:(B)Ljava/io/StreamCorruptedException;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090674.   v1:= temp  @type object;
#L090676.   throw v1;
#L090678.   call temp:=  [|java:io:ObjectInputStream.readEnumDescInternal|](v2) @signature [|Ljava/io/ObjectInputStream;.readEnumDescInternal:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09067e.   v1:= temp  @type object;
#L090680.   return v1  @type object;
#L090682.   call temp:=  [|java:io:ObjectInputStream.readCyclicReference|](v2) @signature [|Ljava/io/ObjectInputStream;.readCyclicReference:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090688.   v1:= temp  @type object;
#L09068a.   v1:= ([|java:io:ObjectStreamClass|])v1;
#L09068e.   goto L090680;
#L090690.   v1:= 0  @length 4;
#L090692.   goto L090680;
#L090694.   switch  v0
                 | 112 => goto L090690
                 | 113 => goto L090682
                 | 114 => goto L090678
                 | => goto L09066e;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectInputStream.readEnumDescInternal|] ([|java:io:ObjectInputStream|] v8 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readEnumDescInternal:()Ljava/io/ObjectStreamClass;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0906b8.   v6:= 0  @length wide16;
#L0906bc.   v4:= v8.[|java:io:ObjectInputStream.input|]   @type object;
#L0906c0.   v8.[|java:io:ObjectInputStream.primitiveData|]  := v4 @type object;
#L0906c4.   v1:= v8.[|java:io:ObjectInputStream.descriptorHandle|] ;
#L0906c8.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v8) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0906ce.   v4:= temp;
#L0906d0.   v8.[|java:io:ObjectInputStream.descriptorHandle|]  := v4;
#L0906d4.   call temp:=  [|java:io:ObjectInputStream.readClassDescriptor|](v8) @signature [|Ljava/io/ObjectInputStream;.readClassDescriptor:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0906da.   v0:= temp  @type object;
#L0906dc.   v4:= v8.[|java:io:ObjectInputStream.descriptorHandle|] ;
#L0906e0.   v5:= 0  @length 4;
#L0906e2.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v8, v0, v4, v5) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0906e8.   v8.[|java:io:ObjectInputStream.descriptorHandle|]  := v1;
#L0906ec.   v4:= v8.[|java:io:ObjectInputStream.emptyStream|]   @type object;
#L0906f0.   v8.[|java:io:ObjectInputStream.primitiveData|]  := v4 @type object;
#L0906f4.   call temp:=  [|java:io:ObjectInputStream.resolveClass|](v8, v0) @signature [|Ljava/io/ObjectInputStream;.resolveClass:(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0906fa.   v4:= temp  @type object;
#L0906fc.   call temp:=  [|java:io:ObjectStreamClass.setClass|](v0, v4) @signature [|Ljava/io/ObjectStreamClass;.setClass:(Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090702.   call temp:=  [|java:io:ObjectInputStream.discardData|](v8) @signature [|Ljava/io/ObjectInputStream;.discardData:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090708.   call temp:=  [|java:io:ObjectInputStream.readClassDesc|](v8) @signature [|Ljava/io/ObjectInputStream;.readClassDesc:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09070e.   v2:= temp  @type object;
#L090710.   call temp:=  [|java:io:ObjectInputStream.checkedSetSuperClassDesc|](v0, v2) @signature [|Ljava/io/ObjectInputStream;.checkedSetSuperClassDesc:(Ljava/io/ObjectStreamClass;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type static;
#L090716.   call temp:=  [|java:io:ObjectStreamClass.getSerialVersionUID|](v0) @signature [|Ljava/io/ObjectStreamClass;.getSerialVersionUID:()J|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09071c.   v4:= temp  @type wide;
#L09071e.   v4:= cmp(v6,v4);
#L090722.   if v4 != 0 then goto L090736;
#L090726.   call temp:=  [|java:io:ObjectStreamClass.getSerialVersionUID|](v2) @signature [|Ljava/io/ObjectStreamClass;.getSerialVersionUID:()J|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09072c.   v4:= temp  @type wide;
#L09072e.   v4:= cmp(v6,v4);
#L090732.   if v4 == 0 then goto L090784;
#L090736.   v4:= new [|java:io:InvalidClassException|];
#L09073a.   call temp:=  [|java:io:ObjectStreamClass.getName|](v2) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090740.   v5:= temp  @type object;
#L090742.   v6:= new [|java:lang:StringBuilder|];
#L090746.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09074c.   v7:= "Incompatible class (SUID): " @type (object, string);
#L090750.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090756.   v6:= temp  @type object;
#L090758.   call temp:=  [|java:lang:StringBuilder.append|](v6, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09075e.   v6:= temp  @type object;
#L090760.   v7:= " but expected " @type (object, string);
#L090764.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09076a.   v6:= temp  @type object;
#L09076c.   call temp:=  [|java:lang:StringBuilder.append|](v6, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090772.   v6:= temp  @type object;
#L090774.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09077a.   v6:= temp  @type object;
#L09077c.   call temp:=  [|java:io:InvalidClassException.<init>|](v4, v5, v6) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L090782.   throw v4;
#L090784.   call temp:=  [|java:io:ObjectInputStream.nextTC|](v8) @signature [|Ljava/io/ObjectInputStream;.nextTC:()B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09078a.   v3:= temp;
#L09078c.   v4:= 120  @length 16;
#L090790.   if v3 != v4 then goto L0907a4;
#L090794.   call temp:=  [|java:io:ObjectInputStream.readClassDesc|](v8) @signature [|Ljava/io/ObjectInputStream;.readClassDesc:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09079a.   v4:= temp  @type object;
#L09079c.   call temp:=  [|java:io:ObjectStreamClass.setSuperclass|](v2, v4) @signature [|Ljava/io/ObjectStreamClass;.setSuperclass:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0907a2.   return v0  @type object;
#L0907a4.   call temp:=  [|java:io:ObjectInputStream.pushbackTC|](v8) @signature [|Ljava/io/ObjectInputStream;.pushbackTC:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0907aa.   goto L0907a2;

   }
    procedure [|java:lang:Exception|] [|java:io:ObjectInputStream.readException|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readException:()Ljava/lang/Exception;|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0907bc.   call temp:=  [|java:io:ObjectInputStream.resetSeenObjects|](v1) @signature [|Ljava/io/ObjectInputStream;.resetSeenObjects:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0907c2.   call temp:=  [|java:io:ObjectInputStream.readObject|](v1) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0907c8.   v0:= temp  @type object;
#L0907ca.   v0:= ([|java:lang:Exception|])v0;
#L0907ce.   call temp:=  [|java:io:ObjectInputStream.resetSeenObjects|](v1) @signature [|Ljava/io/ObjectInputStream;.resetSeenObjects:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0907d4.   return v0  @type object;

   }
    procedure [|void|] [|java:io:ObjectInputStream.readFieldDescriptors|] ([|java:io:ObjectInputStream|] v10 @type (this), [|java:io:ObjectStreamClass|] v11 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readFieldDescriptors:(Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0907e8.   v9:= v10.[|java:io:ObjectInputStream.input|]   @type object;
#L0907ec.   call temp:=  [|java:io:DataInputStream.readShort|](v9) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0907f2.   v6:= temp;
#L0907f4.   v3:= new [|java:io:ObjectStreamField|][v6];
#L0907f8.   call temp:=  [|java:io:ObjectStreamClass.setLoadFields|](v11, v3) @signature [|Ljava/io/ObjectStreamClass;.setLoadFields:([Ljava/io/ObjectStreamField;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0907fe.   v4:= 0  @length 4;
#L090800.   if v4 >= v6 then goto L090874;
#L090804.   v9:= v10.[|java:io:ObjectInputStream.input|]   @type object;
#L090808.   call temp:=  [|java:io:DataInputStream.readByte|](v9) @signature [|Ljava/io/DataInputStream;.readByte:()B|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L09080e.   v9:= temp;
#L090810.   v8:= (char)v9  @type i2c;
#L090812.   v9:= v10.[|java:io:ObjectInputStream.input|]   @type object;
#L090816.   call temp:=  [|java:io:DataInputStream.readUTF|](v9) @signature [|Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L09081c.   v2:= temp  @type object;
#L09081e.   call temp:=  [|java:io:ObjectStreamClass.isPrimitiveType|](v8) @signature [|Ljava/io/ObjectStreamClass;.isPrimitiveType:(C)Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L090824.   v5:= temp;
#L090826.   if v5 == 0 then goto L090850;
#L09082a.   call temp:=  [|java:lang:String.valueOf|](v8) @signature [|Ljava/lang/String;.valueOf:(C)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L090830.   v0:= temp  @type object;
#L090832.   call temp:=  [|java:io:ObjectInputStream.formatClassSig|](v0) @signature [|Ljava/io/ObjectInputStream;.formatClassSig:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectInputStream|] @type static;
#L090838.   v0:= temp  @type object;
#L09083a.   v1:= new [|java:io:ObjectStreamField|];
#L09083e.   call temp:=  [|java:io:ObjectStreamField.<init>|](v1, v0, v2) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L090844.   v3[v4]:= v1  @type object;
#L090848.   v9:= v4 + 1;
#L09084c.   v4:= (short)v9  @type i2s;
#L09084e.   goto L090800;
#L090850.   v7:= v10.[|java:io:ObjectInputStream.enableResolve|]   @boolean;
#L090854.   v9:= 0  @length 4;
#L090856.   v10.[|java:io:ObjectInputStream.enableResolve|]  := v9 @boolean;
#L09085a.   call temp:=  [|java:io:ObjectInputStream.readObject|](v10) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L090860.   v0:= temp  @type object;
#L090862.   v0:= ([|java:lang:String|])v0;
#L090866.   v10.[|java:io:ObjectInputStream.enableResolve|]  := v7 @boolean;
#L09086a.   goto L090832;
#L09086c.   v9:= Exception  @type object;
#L09086e.   v10.[|java:io:ObjectInputStream.enableResolve|]  := v7 @boolean;
#L090872.   throw v9;
#L090874.   return @void ;
  catch  [|any|] @[L090856..L090866] goto L09086c;

   }
    procedure [|void|] [|java:io:ObjectInputStream.readFieldValues|] ([|java:io:ObjectInputStream|] v9 @type (this), [|java:io:EmulatedFieldsForLoading|] v10 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readFieldValues:(Ljava/io/EmulatedFieldsForLoading;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L090894.   call temp:=  [|java:io:EmulatedFieldsForLoading.emulatedFields|](v10) @signature [|Ljava/io/EmulatedFieldsForLoading;.emulatedFields:()Ljava/io/EmulatedFields;|] @classDescriptor [|java:io:EmulatedFieldsForLoading|] @type virtual;
#L09089a.   v7:= temp  @type object;
#L09089c.   call temp:=  [|java:io:EmulatedFields.slots|](v7) @signature [|Ljava/io/EmulatedFields;.slots:()[Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L0908a2.   v5:= temp  @type object;
#L0908a4.   v0:= v5  @type object;
#L0908a6.   v4:= v0.length;
#L0908a8.   v3:= 0  @length 4;
#L0908aa.   if v3 >= v4 then goto L0909fc;
#L0908ae.   v2:= v0[v3]  @type object;
#L0908b2.   v7:= 0  @length 4;
#L0908b4.   v2.[|java:io:EmulatedFields$ObjectSlot.defaulted|]  := v7 @boolean;
#L0908b8.   v7:= v2.[|java:io:EmulatedFields$ObjectSlot.field|]   @type object;
#L0908bc.   call temp:=  [|java:io:ObjectStreamField.getType|](v7) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0908c2.   v6:= temp  @type object;
#L0908c4.   v7:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0908c8.   if v6 != v7 then goto L0908ea;
#L0908cc.   v7:= v9.[|java:io:ObjectInputStream.input|]   @type object;
#L0908d0.   call temp:=  [|java:io:DataInputStream.readInt|](v7) @signature [|Ljava/io/DataInputStream;.readInt:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0908d6.   v7:= temp;
#L0908d8.   call temp:=  [|java:lang:Integer.valueOf|](v7) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0908de.   v7:= temp  @type object;
#L0908e0.   v2.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v7 @type object;
#L0908e4.   v3:= v3 + 1;
#L0908e8.   goto L0908aa;
#L0908ea.   v7:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0908ee.   if v6 != v7 then goto L09090c;
#L0908f2.   v7:= v9.[|java:io:ObjectInputStream.input|]   @type object;
#L0908f6.   call temp:=  [|java:io:DataInputStream.readByte|](v7) @signature [|Ljava/io/DataInputStream;.readByte:()B|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0908fc.   v7:= temp;
#L0908fe.   call temp:=  [|java:lang:Byte.valueOf|](v7) @signature [|Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;|] @classDescriptor [|java:lang:Byte|] @type static;
#L090904.   v7:= temp  @type object;
#L090906.   v2.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v7 @type object;
#L09090a.   goto L0908e4;
#L09090c.   v7:= @@[|java:lang:Character.TYPE|]   @type object;
#L090910.   if v6 != v7 then goto L09092e;
#L090914.   v7:= v9.[|java:io:ObjectInputStream.input|]   @type object;
#L090918.   call temp:=  [|java:io:DataInputStream.readChar|](v7) @signature [|Ljava/io/DataInputStream;.readChar:()C|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L09091e.   v7:= temp;
#L090920.   call temp:=  [|java:lang:Character.valueOf|](v7) @signature [|Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;|] @classDescriptor [|java:lang:Character|] @type static;
#L090926.   v7:= temp  @type object;
#L090928.   v2.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v7 @type object;
#L09092c.   goto L0908e4;
#L09092e.   v7:= @@[|java:lang:Short.TYPE|]   @type object;
#L090932.   if v6 != v7 then goto L090950;
#L090936.   v7:= v9.[|java:io:ObjectInputStream.input|]   @type object;
#L09093a.   call temp:=  [|java:io:DataInputStream.readShort|](v7) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090940.   v7:= temp;
#L090942.   call temp:=  [|java:lang:Short.valueOf|](v7) @signature [|Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;|] @classDescriptor [|java:lang:Short|] @type static;
#L090948.   v7:= temp  @type object;
#L09094a.   v2.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v7 @type object;
#L09094e.   goto L0908e4;
#L090950.   v7:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L090954.   if v6 != v7 then goto L090972;
#L090958.   v7:= v9.[|java:io:ObjectInputStream.input|]   @type object;
#L09095c.   call temp:=  [|java:io:DataInputStream.readBoolean|](v7) @signature [|Ljava/io/DataInputStream;.readBoolean:()Z|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090962.   v7:= temp;
#L090964.   call temp:=  [|java:lang:Boolean.valueOf|](v7) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L09096a.   v7:= temp  @type object;
#L09096c.   v2.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v7 @type object;
#L090970.   goto L0908e4;
#L090972.   v7:= @@[|java:lang:Long.TYPE|]   @type object;
#L090976.   if v6 != v7 then goto L090994;
#L09097a.   v7:= v9.[|java:io:ObjectInputStream.input|]   @type object;
#L09097e.   call temp:=  [|java:io:DataInputStream.readLong|](v7) @signature [|Ljava/io/DataInputStream;.readLong:()J|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090984.   v7:= temp  @type wide;
#L090986.   call temp:=  [|java:lang:Long.valueOf|](v7, v8) @signature [|Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;|] @classDescriptor [|java:lang:Long|] @type static;
#L09098c.   v7:= temp  @type object;
#L09098e.   v2.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v7 @type object;
#L090992.   goto L0908e4;
#L090994.   v7:= @@[|java:lang:Float.TYPE|]   @type object;
#L090998.   if v6 != v7 then goto L0909b6;
#L09099c.   v7:= v9.[|java:io:ObjectInputStream.input|]   @type object;
#L0909a0.   call temp:=  [|java:io:DataInputStream.readFloat|](v7) @signature [|Ljava/io/DataInputStream;.readFloat:()F|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0909a6.   v7:= temp;
#L0909a8.   call temp:=  [|java:lang:Float.valueOf|](v7) @signature [|Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;|] @classDescriptor [|java:lang:Float|] @type static;
#L0909ae.   v7:= temp  @type object;
#L0909b0.   v2.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v7 @type object;
#L0909b4.   goto L0908e4;
#L0909b6.   v7:= @@[|java:lang:Double.TYPE|]   @type object;
#L0909ba.   if v6 != v7 then goto L0909d8;
#L0909be.   v7:= v9.[|java:io:ObjectInputStream.input|]   @type object;
#L0909c2.   call temp:=  [|java:io:DataInputStream.readDouble|](v7) @signature [|Ljava/io/DataInputStream;.readDouble:()D|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0909c8.   v7:= temp  @type wide;
#L0909ca.   call temp:=  [|java:lang:Double.valueOf|](v7, v8) @signature [|Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;|] @classDescriptor [|java:lang:Double|] @type static;
#L0909d0.   v7:= temp  @type object;
#L0909d2.   v2.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v7 @type object;
#L0909d6.   goto L0908e4;
#L0909d8.   call temp:=  [|java:io:ObjectInputStream.readObject|](v9) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0909de.   v7:= temp  @type object;
#L0909e0.   v2.[|java:io:EmulatedFields$ObjectSlot.fieldValue|]  := v7 @type object;
#L0909e4.   goto L0908e4;
#L0909e6.   v1:= Exception  @type object;
#L0909e8.   v7:= new [|java:io:InvalidClassException|];
#L0909ec.   call temp:=  [|java:lang:ClassNotFoundException.toString|](v1) @signature [|Ljava/lang/ClassNotFoundException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:ClassNotFoundException|] @type virtual;
#L0909f2.   v8:= temp  @type object;
#L0909f4.   call temp:=  [|java:io:InvalidClassException.<init>|](v7, v8) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L0909fa.   throw v7;
#L0909fc.   return @void ;
  catch  [|java:lang:ClassNotFoundException|] @[L0909d8..L0909e4] goto L0909e6;

   }
    procedure [|void|] [|java:io:ObjectInputStream.readFieldValues|] ([|java:io:ObjectInputStream|] v30 @type (this), [|java:lang:Object|] v31 @type (object), [|java:io:ObjectStreamClass|] v32 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readFieldValues:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
        v25;
        v26;
        v27;
        v28;
        v29;
      
#L090a20.   call temp:=  [|java:io:ObjectStreamClass.getLoadFields|](v32) @signature [|Ljava/io/ObjectStreamClass;.getLoadFields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090a26.   v14:= temp  @type object;
#L090a28.   if v14 != 0 then goto L090a30;
#L090a2c.   v14:= @@[|java:io:ObjectStreamClass.NO_FIELDS|]   @type object;
#L090a30.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v32) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090a36.   v8:= temp  @type object;
#L090a38.   if v8 != 0 then goto L090a60;
#L090a3c.   v0:= v30  @type object;
#L090a40.   v0:= v0.[|java:io:ObjectInputStream.mustResolve|]   @boolean;
#L090a44.   v27:= v0;
#L090a48.   if v27 == 0 then goto L090a60;
#L090a4c.   v27:= new [|java:lang:ClassNotFoundException|];
#L090a50.   call temp:=  [|java:io:ObjectStreamClass.getName|](v32) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090a56.   v28:= temp  @type object;
#L090a58.   call temp:=  [|java:lang:ClassNotFoundException.<init>|](v27, v28) @signature [|Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ClassNotFoundException|] @type direct;
#L090a5e.   throw v27;
#L090a60.   v3:= v14  @type object;
#L090a62.   v0:= v3.length;
#L090a64.   v20:= v0;
#L090a68.   v16:= 0  @length 16;
#L090a6c.   v0:= v16;
#L090a70.   v1:= v20;
#L090a74.   if v0 >= v1 then goto L090d60;
#L090a78.   v11:= v3[v16]  @type object;
#L090a7c.   v0:= v32  @type object;
#L090a80.   call temp:=  [|java:io:ObjectStreamClass.getReflectionField|](v0, v11) @signature [|Ljava/io/ObjectStreamClass;.getReflectionField:(Ljava/io/ObjectStreamField;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090a86.   v10:= temp  @type object;
#L090a88.   if v10 == 0 then goto L090aa2;
#L090a8c.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v10) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090a92.   v27:= temp;
#L090a94.   call temp:=  [|java:lang:reflect:Modifier.isTransient|](v27) @signature [|Ljava/lang/reflect/Modifier;.isTransient:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L090a9a.   v27:= temp;
#L090a9c.   if v27 == 0 then goto L090aa2;
#L090aa0.   v10:= 0  @length 4;
#L090aa2.   call temp:=  [|java:io:ObjectStreamField.getTypeInternal|](v11) @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L090aa8.   v24:= temp  @type object;
#L090aaa.   v27:= @@[|java:lang:Byte.TYPE|]   @type object;
#L090aae.   v0:= v24  @type object;
#L090ab2.   v1:= v27  @type object;
#L090ab6.   if v0 != v1 then goto L090ae2;
#L090aba.   v0:= v30  @type object;
#L090abe.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090ac2.   v27:= v0  @type object;
#L090ac6.   call temp:=  [|java:io:DataInputStream.readByte|](v27) @signature [|Ljava/io/DataInputStream;.readByte:()B|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090acc.   v4:= temp;
#L090ace.   if v10 == 0 then goto L090adc;
#L090ad2.   v0:= v31  @type object;
#L090ad6.   call temp:=  [|java:lang:reflect:Field.setByte|](v10, v0, v4) @signature [|Ljava/lang/reflect/Field;.setByte:(Ljava/lang/Object;B)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090adc.   v16:= v16 + 1;
#L090ae0.   goto L090a6c;
#L090ae2.   v27:= @@[|java:lang:Character.TYPE|]   @type object;
#L090ae6.   v0:= v24  @type object;
#L090aea.   v1:= v27  @type object;
#L090aee.   if v0 != v1 then goto L090b2c;
#L090af2.   v0:= v30  @type object;
#L090af6.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090afa.   v27:= v0  @type object;
#L090afe.   call temp:=  [|java:io:DataInputStream.readChar|](v27) @signature [|Ljava/io/DataInputStream;.readChar:()C|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090b04.   v5:= temp;
#L090b06.   if v10 == 0 then goto L090adc;
#L090b0a.   v0:= v31  @type object;
#L090b0e.   call temp:=  [|java:lang:reflect:Field.setChar|](v10, v0, v5) @signature [|Ljava/lang/reflect/Field;.setChar:(Ljava/lang/Object;C)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090b14.   goto L090adc;
#L090b16.   v17:= Exception  @type object;
#L090b18.   v27:= new [|java:lang:AssertionError|];
#L090b1c.   v0:= v27  @type object;
#L090b20.   v1:= v17  @type object;
#L090b24.   call temp:=  [|java:lang:AssertionError.<init>|](v0, v1) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L090b2a.   throw v27;
#L090b2c.   v27:= @@[|java:lang:Double.TYPE|]   @type object;
#L090b30.   v0:= v24  @type object;
#L090b34.   v1:= v27  @type object;
#L090b38.   if v0 != v1 then goto L090b64;
#L090b3c.   v0:= v30  @type object;
#L090b40.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090b44.   v27:= v0  @type object;
#L090b48.   call temp:=  [|java:io:DataInputStream.readDouble|](v27) @signature [|Ljava/io/DataInputStream;.readDouble:()D|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090b4e.   v6:= temp  @type wide;
#L090b50.   if v10 == 0 then goto L090adc;
#L090b54.   v0:= v31  @type object;
#L090b58.   call temp:=  [|java:lang:reflect:Field.setDouble|](v10, v0, v6, v7) @signature [|Ljava/lang/reflect/Field;.setDouble:(Ljava/lang/Object;D)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090b5e.   goto L090adc;
#L090b60.   v27:= Exception  @type object;
#L090b62.   goto L090adc;
#L090b64.   v27:= @@[|java:lang:Float.TYPE|]   @type object;
#L090b68.   v0:= v24  @type object;
#L090b6c.   v1:= v27  @type object;
#L090b70.   if v0 != v1 then goto L090b98;
#L090b74.   v0:= v30  @type object;
#L090b78.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090b7c.   v27:= v0  @type object;
#L090b80.   call temp:=  [|java:io:DataInputStream.readFloat|](v27) @signature [|Ljava/io/DataInputStream;.readFloat:()F|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090b86.   v9:= temp;
#L090b88.   if v10 == 0 then goto L090adc;
#L090b8c.   v0:= v31  @type object;
#L090b90.   call temp:=  [|java:lang:reflect:Field.setFloat|](v10, v0, v9) @signature [|Ljava/lang/reflect/Field;.setFloat:(Ljava/lang/Object;F)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090b96.   goto L090adc;
#L090b98.   v27:= @@[|java:lang:Integer.TYPE|]   @type object;
#L090b9c.   v0:= v24  @type object;
#L090ba0.   v1:= v27  @type object;
#L090ba4.   if v0 != v1 then goto L090bcc;
#L090ba8.   v0:= v30  @type object;
#L090bac.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090bb0.   v27:= v0  @type object;
#L090bb4.   call temp:=  [|java:io:DataInputStream.readInt|](v27) @signature [|Ljava/io/DataInputStream;.readInt:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090bba.   v15:= temp;
#L090bbc.   if v10 == 0 then goto L090adc;
#L090bc0.   v0:= v31  @type object;
#L090bc4.   call temp:=  [|java:lang:reflect:Field.setInt|](v10, v0, v15) @signature [|Ljava/lang/reflect/Field;.setInt:(Ljava/lang/Object;I)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090bca.   goto L090adc;
#L090bcc.   v27:= @@[|java:lang:Long.TYPE|]   @type object;
#L090bd0.   v0:= v24  @type object;
#L090bd4.   v1:= v27  @type object;
#L090bd8.   if v0 != v1 then goto L090c06;
#L090bdc.   v0:= v30  @type object;
#L090be0.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090be4.   v27:= v0  @type object;
#L090be8.   call temp:=  [|java:io:DataInputStream.readLong|](v27) @signature [|Ljava/io/DataInputStream;.readLong:()J|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090bee.   v18:= temp  @type wide;
#L090bf0.   if v10 == 0 then goto L090adc;
#L090bf4.   v0:= v31  @type object;
#L090bf8.   v1:= v18  @type wide;
#L090bfc.   call temp:=  [|java:lang:reflect:Field.setLong|](v10, v0, v1, v2) @signature [|Ljava/lang/reflect/Field;.setLong:(Ljava/lang/Object;J)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090c02.   goto L090adc;
#L090c06.   v27:= @@[|java:lang:Short.TYPE|]   @type object;
#L090c0a.   v0:= v24  @type object;
#L090c0e.   v1:= v27  @type object;
#L090c12.   if v0 != v1 then goto L090c40;
#L090c16.   v0:= v30  @type object;
#L090c1a.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090c1e.   v27:= v0  @type object;
#L090c22.   call temp:=  [|java:io:DataInputStream.readShort|](v27) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090c28.   v22:= temp;
#L090c2a.   if v10 == 0 then goto L090adc;
#L090c2e.   v0:= v31  @type object;
#L090c32.   v1:= v22;
#L090c36.   call temp:=  [|java:lang:reflect:Field.setShort|](v10, v0, v1) @signature [|Ljava/lang/reflect/Field;.setShort:(Ljava/lang/Object;S)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090c3c.   goto L090adc;
#L090c40.   v27:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L090c44.   v0:= v24  @type object;
#L090c48.   v1:= v27  @type object;
#L090c4c.   if v0 != v1 then goto L090c7a;
#L090c50.   v0:= v30  @type object;
#L090c54.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090c58.   v27:= v0  @type object;
#L090c5c.   call temp:=  [|java:io:DataInputStream.readBoolean|](v27) @signature [|Ljava/io/DataInputStream;.readBoolean:()Z|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090c62.   v26:= temp;
#L090c64.   if v10 == 0 then goto L090adc;
#L090c68.   v0:= v31  @type object;
#L090c6c.   v1:= v26;
#L090c70.   call temp:=  [|java:lang:reflect:Field.setBoolean|](v10, v0, v1) @signature [|Ljava/lang/reflect/Field;.setBoolean:(Ljava/lang/Object;Z)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090c76.   goto L090adc;
#L090c7a.   call temp:=  [|java:io:ObjectStreamField.isUnshared|](v11) @signature [|Ljava/io/ObjectStreamField;.isUnshared:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L090c80.   v27:= temp;
#L090c82.   if v27 == 0 then goto L090d40;
#L090c86.   call temp:=  [|java:io:ObjectInputStream.readUnshared|](v30) @signature [|Ljava/io/ObjectInputStream;.readUnshared:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L090c8c.   v23:= temp  @type object;
#L090c8e.   if v23 == 0 then goto L090adc;
#L090c92.   call temp:=  [|java:io:ObjectStreamField.getName|](v11) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L090c98.   v12:= temp  @type object;
#L090c9a.   v0:= v32  @type object;
#L090c9e.   call temp:=  [|java:io:ObjectStreamClass.getField|](v0, v12) @signature [|Ljava/io/ObjectStreamClass;.getField:(Ljava/lang/String;)Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090ca4.   v21:= temp  @type object;
#L090ca6.   call temp:=  [|java:io:ObjectStreamField.getTypeInternal|](v21) @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L090cac.   v13:= temp  @type object;
#L090cae.   call temp:=  [|java:lang:Object.getClass|](v23) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L090cb4.   v25:= temp  @type object;
#L090cb6.   v0:= v25  @type object;
#L090cba.   call temp:=  [|java:lang:Class.isAssignableFrom|](v13, v0) @signature [|Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L090cc0.   v27:= temp;
#L090cc2.   if v27 != 0 then goto L090d4a;
#L090cc6.   v27:= new [|java:lang:ClassCastException|];
#L090cca.   v28:= new [|java:lang:StringBuilder|];
#L090cce.   call temp:=  [|java:lang:StringBuilder.<init>|](v28) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L090cd4.   call temp:=  [|java:io:ObjectStreamClass.getName|](v32) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090cda.   v29:= temp  @type object;
#L090cdc.   call temp:=  [|java:lang:StringBuilder.append|](v28, v29) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090ce2.   v28:= temp  @type object;
#L090ce4.   v29:= "." @type (object, string);
#L090ce8.   call temp:=  [|java:lang:StringBuilder.append|](v28, v29) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090cee.   v28:= temp  @type object;
#L090cf0.   v0:= v28  @type object;
#L090cf4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090cfa.   v28:= temp  @type object;
#L090cfc.   v29:= " - " @type (object, string);
#L090d00.   call temp:=  [|java:lang:StringBuilder.append|](v28, v29) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090d06.   v28:= temp  @type object;
#L090d08.   v0:= v28  @type object;
#L090d0c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v13) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090d12.   v28:= temp  @type object;
#L090d14.   v29:= " not compatible with " @type (object, string);
#L090d18.   call temp:=  [|java:lang:StringBuilder.append|](v28, v29) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090d1e.   v28:= temp  @type object;
#L090d20.   v0:= v28  @type object;
#L090d24.   v1:= v25  @type object;
#L090d28.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090d2e.   v28:= temp  @type object;
#L090d30.   call temp:=  [|java:lang:StringBuilder.toString|](v28) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L090d36.   v28:= temp  @type object;
#L090d38.   call temp:=  [|java:lang:ClassCastException.<init>|](v27, v28) @signature [|Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ClassCastException|] @type direct;
#L090d3e.   throw v27;
#L090d40.   call temp:=  [|java:io:ObjectInputStream.readObject|](v30) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L090d46.   v23:= temp  @type object;
#L090d48.   goto L090c8e;
#L090d4a.   if v10 == 0 then goto L090adc;
#L090d4e.   v0:= v31  @type object;
#L090d52.   v1:= v23  @type object;
#L090d56.   call temp:=  [|java:lang:reflect:Field.set|](v10, v0, v1) @signature [|Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L090d5c.   goto L090adc;
#L090d60.   return @void ;
  catch  [|java:lang:IllegalAccessException|] @[L090aa2..L090b14] goto L090b16;
  catch  [|java:lang:NoSuchFieldError|] @[L090aa2..L090b14] goto L090b60;
  catch  [|java:lang:IllegalAccessException|] @[L090b2c..L090d5c] goto L090b16;
  catch  [|java:lang:NoSuchFieldError|] @[L090b2c..L090d5c] goto L090b60;

   }
    procedure [|void|] [|java:io:ObjectInputStream.readHierarchy|] ([|java:io:ObjectInputStream|] v12 @type (this), [|java:lang:Object|] v13 @type (object), [|java:io:ObjectStreamClass|] v14 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readHierarchy:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L090d90.   if v13 != 0 then goto L090da8;
#L090d94.   v10:= v12.[|java:io:ObjectInputStream.mustResolve|]   @boolean;
#L090d98.   if v10 == 0 then goto L090da8;
#L090d9c.   v10:= new [|java:io:NotActiveException|];
#L090da0.   call temp:=  [|java:io:NotActiveException.<init>|](v10) @signature [|Ljava/io/NotActiveException;.<init>:()V|] @classDescriptor [|java:io:NotActiveException|] @type direct;
#L090da6.   throw v10;
#L090da8.   call temp:=  [|java:io:ObjectStreamClass.getHierarchy|](v14) @signature [|Ljava/io/ObjectStreamClass;.getHierarchy:()Ljava/util/List;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090dae.   v7:= temp  @type object;
#L090db0.   if v13 != 0 then goto L090dde;
#L090db4.   call temp:=  [|java:util:List.iterator|](v7) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L090dba.   v2:= temp  @type object;
#L090dbc.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L090dc2.   v10:= temp;
#L090dc4.   if v10 == 0 then goto L090e6c;
#L090dc8.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L090dce.   v6:= temp  @type object;
#L090dd0.   v6:= ([|java:io:ObjectStreamClass|])v6;
#L090dd4.   v10:= 0  @length 4;
#L090dd6.   call temp:=  [|java:io:ObjectInputStream.readObjectForClass|](v12, v10, v6) @signature [|Ljava/io/ObjectInputStream;.readObjectForClass:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090ddc.   goto L090dbc;
#L090dde.   v10:= v12.[|java:io:ObjectInputStream.cachedSuperclasses|]   @type object;
#L090de2.   call temp:=  [|java:lang:Object.getClass|](v13) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L090de8.   v11:= temp  @type object;
#L090dea.   call temp:=  [|java:util:HashMap.get|](v10, v11) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L090df0.   v9:= temp  @type object;
#L090df2.   v9:= ([|java:util:List|])v9;
#L090df6.   if v9 != 0 then goto L090e0a;
#L090dfa.   call temp:=  [|java:lang:Object.getClass|](v13) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L090e00.   v10:= temp  @type object;
#L090e02.   call temp:=  [|java:io:ObjectInputStream.cacheSuperclassesFor|](v12, v10) @signature [|Ljava/io/ObjectInputStream;.cacheSuperclassesFor:(Ljava/lang/Class;)Ljava/util/List;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090e08.   v9:= temp  @type object;
#L090e0a.   v5:= 0  @length 4;
#L090e0c.   v1:= 0  @length 4;
#L090e0e.   call temp:=  [|java:util:List.size|](v9) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L090e14.   v0:= temp;
#L090e16.   if v1 >= v0 then goto L090e6c;
#L090e1a.   call temp:=  [|java:util:List.get|](v9, v1) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L090e20.   v8:= temp  @type object;
#L090e22.   v8:= ([|java:lang:Class|])v8;
#L090e26.   call temp:=  [|java:io:ObjectInputStream.findStreamSuperclass|](v12, v8, v7, v5) @signature [|Ljava/io/ObjectInputStream;.findStreamSuperclass:(Ljava/lang/Class;Ljava/util/List;I)I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090e2c.   v3:= temp;
#L090e2e.   v10:= -1  @length 4;
#L090e30.   if v3 != v10 then goto L090e48;
#L090e34.   call temp:=  [|java:io:ObjectStreamClass.lookupStreamClass|](v8) @signature [|Ljava/io/ObjectStreamClass;.lookupStreamClass:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L090e3a.   v10:= temp  @type object;
#L090e3c.   call temp:=  [|java:io:ObjectInputStream.readObjectNoData|](v12, v13, v8, v10) @signature [|Ljava/io/ObjectInputStream;.readObjectNoData:(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090e42.   v1:= v1 + 1;
#L090e46.   goto L090e16;
#L090e48.   v4:= v5;
#L090e4a.   if v4 > v3 then goto L090e66;
#L090e4e.   call temp:=  [|java:util:List.get|](v7, v4) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L090e54.   v10:= temp  @type object;
#L090e56.   v10:= ([|java:io:ObjectStreamClass|])v10;
#L090e5a.   call temp:=  [|java:io:ObjectInputStream.readObjectForClass|](v12, v13, v10) @signature [|Ljava/io/ObjectInputStream;.readObjectForClass:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090e60.   v4:= v4 + 1;
#L090e64.   goto L090e4a;
#L090e66.   v5:= v3 + 1;
#L090e6a.   goto L090e42;
#L090e6c.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readNewArray|] ([|java:io:ObjectInputStream|] v22 @type (this), [|boolean|] v23) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readNewArray:(Z)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
      
#L090e80.   call temp:=  [|java:io:ObjectInputStream.readClassDesc|](v22) @signature [|Ljava/io/ObjectInputStream;.readClassDesc:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090e86.   v7:= temp  @type object;
#L090e88.   if v7 != 0 then goto L090e96;
#L090e8c.   call temp:=  [|java:io:ObjectInputStream.missingClassDescriptor|](v22) @signature [|Ljava/io/ObjectInputStream;.missingClassDescriptor:()Ljava/io/InvalidClassException;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090e92.   v19:= temp  @type object;
#L090e94.   throw v19;
#L090e96.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v22) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090e9c.   v14:= temp;
#L090e9e.   v0:= v22  @type object;
#L090ea2.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090ea6.   v19:= v0  @type object;
#L090eaa.   call temp:=  [|java:io:DataInputStream.readInt|](v19) @signature [|Ljava/io/DataInputStream;.readInt:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090eb0.   v18:= temp;
#L090eb2.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v7) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L090eb8.   v3:= temp  @type object;
#L090eba.   call temp:=  [|java:lang:Class.getComponentType|](v3) @signature [|Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L090ec0.   v8:= temp  @type object;
#L090ec2.   v0:= v18;
#L090ec6.   call temp:=  [|java:lang:reflect:Array.newInstance|](v8, v0) @signature [|Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L090ecc.   v16:= temp  @type object;
#L090ece.   v0:= v22  @type object;
#L090ed2.   v1:= v16  @type object;
#L090ed6.   v2:= v23;
#L090eda.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v0, v1, v14, v2) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090ee0.   call temp:=  [|java:lang:Class.isPrimitive|](v8) @signature [|Ljava/lang/Class;.isPrimitive:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L090ee6.   v19:= temp;
#L090ee8.   if v19 == 0 then goto L091178;
#L090eec.   v19:= @@[|java:lang:Integer.TYPE|]   @type object;
#L090ef0.   v0:= v19  @type object;
#L090ef4.   if v8 != v0 then goto L090f30;
#L090ef8.   v19:= v16  @type object;
#L090efc.   v19:= ([|int|][])v19;
#L090f00.   v12:= v19  @type object;
#L090f04.   v12:= ([|int|][])v12;
#L090f08.   v11:= 0  @length 4;
#L090f0a.   v0:= v18;
#L090f0e.   if v11 >= v0 then goto L090f6e;
#L090f12.   v0:= v22  @type object;
#L090f16.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090f1a.   v19:= v0  @type object;
#L090f1e.   call temp:=  [|java:io:DataInputStream.readInt|](v19) @signature [|Ljava/io/DataInputStream;.readInt:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090f24.   v19:= temp;
#L090f26.   v12[v11]:= v19;
#L090f2a.   v11:= v11 + 1;
#L090f2e.   goto L090f0a;
#L090f30.   v19:= @@[|java:lang:Byte.TYPE|]   @type object;
#L090f34.   v0:= v19  @type object;
#L090f38.   if v8 != v0 then goto L090fa6;
#L090f3c.   v19:= v16  @type object;
#L090f40.   v19:= ([|byte|][])v19;
#L090f44.   v5:= v19  @type object;
#L090f48.   v5:= ([|byte|][])v5;
#L090f4c.   v0:= v22  @type object;
#L090f50.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090f54.   v19:= v0  @type object;
#L090f58.   v20:= 0  @length 16;
#L090f5c.   v0:= v19  @type object;
#L090f60.   v1:= v20;
#L090f64.   v2:= v18;
#L090f68.   call temp:=  [|java:io:DataInputStream.readFully|](v0, v5, v1, v2) @signature [|Ljava/io/DataInputStream;.readFully:([BII)V|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090f6e.   v0:= v22  @type object;
#L090f72.   v0:= v0.[|java:io:ObjectInputStream.enableResolve|]   @boolean;
#L090f76.   v19:= v0;
#L090f7a.   if v19 == 0 then goto L090fa4;
#L090f7e.   v0:= v22  @type object;
#L090f82.   v1:= v16  @type object;
#L090f86.   call temp:=  [|java:io:ObjectInputStream.resolveObject|](v0, v1) @signature [|Ljava/io/ObjectInputStream;.resolveObject:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L090f8c.   v16:= temp  @type object;
#L090f8e.   v19:= 0  @length 16;
#L090f92.   v0:= v22  @type object;
#L090f96.   v1:= v16  @type object;
#L090f9a.   v2:= v19;
#L090f9e.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v0, v1, v14, v2) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L090fa4.   return v16  @type object;
#L090fa6.   v19:= @@[|java:lang:Character.TYPE|]   @type object;
#L090faa.   v0:= v19  @type object;
#L090fae.   if v8 != v0 then goto L090fea;
#L090fb2.   v19:= v16  @type object;
#L090fb6.   v19:= ([|char|][])v19;
#L090fba.   v6:= v19  @type object;
#L090fbe.   v6:= ([|char|][])v6;
#L090fc2.   v11:= 0  @length 4;
#L090fc4.   v0:= v18;
#L090fc8.   if v11 >= v0 then goto L090f6e;
#L090fcc.   v0:= v22  @type object;
#L090fd0.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L090fd4.   v19:= v0  @type object;
#L090fd8.   call temp:=  [|java:io:DataInputStream.readChar|](v19) @signature [|Ljava/io/DataInputStream;.readChar:()C|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L090fde.   v19:= temp;
#L090fe0.   v6[v11]:= v19  @char;
#L090fe4.   v11:= v11 + 1;
#L090fe8.   goto L090fc4;
#L090fea.   v19:= @@[|java:lang:Short.TYPE|]   @type object;
#L090fee.   v0:= v19  @type object;
#L090ff2.   if v8 != v0 then goto L09102e;
#L090ff6.   v19:= v16  @type object;
#L090ffa.   v19:= ([|short|][])v19;
#L090ffe.   v17:= v19  @type object;
#L091002.   v17:= ([|short|][])v17;
#L091006.   v11:= 0  @length 4;
#L091008.   v0:= v18;
#L09100c.   if v11 >= v0 then goto L090f6e;
#L091010.   v0:= v22  @type object;
#L091014.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L091018.   v19:= v0  @type object;
#L09101c.   call temp:=  [|java:io:DataInputStream.readShort|](v19) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091022.   v19:= temp;
#L091024.   v17[v11]:= v19  @short;
#L091028.   v11:= v11 + 1;
#L09102c.   goto L091008;
#L09102e.   v19:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L091032.   v0:= v19  @type object;
#L091036.   if v8 != v0 then goto L091072;
#L09103a.   v19:= v16  @type object;
#L09103e.   v19:= ([|boolean|][])v19;
#L091042.   v4:= v19  @type object;
#L091046.   v4:= ([|boolean|][])v4;
#L09104a.   v11:= 0  @length 4;
#L09104c.   v0:= v18;
#L091050.   if v11 >= v0 then goto L090f6e;
#L091054.   v0:= v22  @type object;
#L091058.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L09105c.   v19:= v0  @type object;
#L091060.   call temp:=  [|java:io:DataInputStream.readBoolean|](v19) @signature [|Ljava/io/DataInputStream;.readBoolean:()Z|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091066.   v19:= temp;
#L091068.   v4[v11]:= v19  @boolean;
#L09106c.   v11:= v11 + 1;
#L091070.   goto L09104c;
#L091072.   v19:= @@[|java:lang:Long.TYPE|]   @type object;
#L091076.   v0:= v19  @type object;
#L09107a.   if v8 != v0 then goto L0910b6;
#L09107e.   v19:= v16  @type object;
#L091082.   v19:= ([|long|][])v19;
#L091086.   v13:= v19  @type object;
#L09108a.   v13:= ([|long|][])v13;
#L09108e.   v11:= 0  @length 4;
#L091090.   v0:= v18;
#L091094.   if v11 >= v0 then goto L090f6e;
#L091098.   v0:= v22  @type object;
#L09109c.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L0910a0.   v19:= v0  @type object;
#L0910a4.   call temp:=  [|java:io:DataInputStream.readLong|](v19) @signature [|Ljava/io/DataInputStream;.readLong:()J|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0910aa.   v19:= temp  @type wide;
#L0910ac.   v13[v11]:= v19  @wide;
#L0910b0.   v11:= v11 + 1;
#L0910b4.   goto L091090;
#L0910b6.   v19:= @@[|java:lang:Float.TYPE|]   @type object;
#L0910ba.   v0:= v19  @type object;
#L0910be.   if v8 != v0 then goto L0910fa;
#L0910c2.   v19:= v16  @type object;
#L0910c6.   v19:= ([|float|][])v19;
#L0910ca.   v10:= v19  @type object;
#L0910ce.   v10:= ([|float|][])v10;
#L0910d2.   v11:= 0  @length 4;
#L0910d4.   v0:= v18;
#L0910d8.   if v11 >= v0 then goto L090f6e;
#L0910dc.   v0:= v22  @type object;
#L0910e0.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L0910e4.   v19:= v0  @type object;
#L0910e8.   call temp:=  [|java:io:DataInputStream.readFloat|](v19) @signature [|Ljava/io/DataInputStream;.readFloat:()F|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0910ee.   v19:= temp;
#L0910f0.   v10[v11]:= v19;
#L0910f4.   v11:= v11 + 1;
#L0910f8.   goto L0910d4;
#L0910fa.   v19:= @@[|java:lang:Double.TYPE|]   @type object;
#L0910fe.   v0:= v19  @type object;
#L091102.   if v8 != v0 then goto L09113e;
#L091106.   v19:= v16  @type object;
#L09110a.   v19:= ([|double|][])v19;
#L09110e.   v9:= v19  @type object;
#L091112.   v9:= ([|double|][])v9;
#L091116.   v11:= 0  @length 4;
#L091118.   v0:= v18;
#L09111c.   if v11 >= v0 then goto L090f6e;
#L091120.   v0:= v22  @type object;
#L091124.   v0:= v0.[|java:io:ObjectInputStream.input|]   @type object;
#L091128.   v19:= v0  @type object;
#L09112c.   call temp:=  [|java:io:DataInputStream.readDouble|](v19) @signature [|Ljava/io/DataInputStream;.readDouble:()D|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091132.   v19:= temp  @type wide;
#L091134.   v9[v11]:= v19  @wide;
#L091138.   v11:= v11 + 1;
#L09113c.   goto L091118;
#L09113e.   v19:= new [|java:lang:ClassNotFoundException|];
#L091142.   v20:= new [|java:lang:StringBuilder|];
#L091146.   call temp:=  [|java:lang:StringBuilder.<init>|](v20) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09114c.   v21:= "Wrong base type in " @type (object, string);
#L091150.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L091156.   v20:= temp  @type object;
#L091158.   call temp:=  [|java:io:ObjectStreamClass.getName|](v7) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09115e.   v21:= temp  @type object;
#L091160.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L091166.   v20:= temp  @type object;
#L091168.   call temp:=  [|java:lang:StringBuilder.toString|](v20) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09116e.   v20:= temp  @type object;
#L091170.   call temp:=  [|java:lang:ClassNotFoundException.<init>|](v19, v20) @signature [|Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ClassNotFoundException|] @type direct;
#L091176.   throw v19;
#L091178.   v19:= v16  @type object;
#L09117c.   v19:= ([|java:lang:Object|][])v19;
#L091180.   v15:= v19  @type object;
#L091184.   v15:= ([|java:lang:Object|][])v15;
#L091188.   v11:= 0  @length 4;
#L09118a.   v0:= v18;
#L09118e.   if v11 >= v0 then goto L090f6e;
#L091192.   call temp:=  [|java:io:ObjectInputStream.readObject|](v22) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L091198.   v19:= temp  @type object;
#L09119a.   v15[v11]:= v19  @type object;
#L09119e.   v11:= v11 + 1;
#L0911a2.   goto L09118a;

   }
    procedure [|java:lang:Class|] [|java:io:ObjectInputStream.readNewClass|] ([|java:io:ObjectInputStream|] v3 @type (this), [|boolean|] v4) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readNewClass:(Z)Ljava/lang/Class;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0911b4.   call temp:=  [|java:io:ObjectInputStream.readClassDesc|](v3) @signature [|Ljava/io/ObjectInputStream;.readClassDesc:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0911ba.   v0:= temp  @type object;
#L0911bc.   if v0 != 0 then goto L0911ca;
#L0911c0.   call temp:=  [|java:io:ObjectInputStream.missingClassDescriptor|](v3) @signature [|Ljava/io/ObjectInputStream;.missingClassDescriptor:()Ljava/io/InvalidClassException;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0911c6.   v2:= temp  @type object;
#L0911c8.   throw v2;
#L0911ca.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v0) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0911d0.   v1:= temp  @type object;
#L0911d2.   if v1 == 0 then goto L0911e4;
#L0911d6.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v3) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0911dc.   v2:= temp;
#L0911de.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v3, v1, v2, v4) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0911e4.   return v1  @type object;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectInputStream.readNewClassDesc|] ([|java:io:ObjectInputStream|] v10 @type (this), [|boolean|] v11) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readNewClassDesc:(Z)Ljava/io/ObjectStreamClass;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0911f8.   v9:= v10.[|java:io:ObjectInputStream.input|]   @type object;
#L0911fc.   v10.[|java:io:ObjectInputStream.primitiveData|]  := v9 @type object;
#L091200.   v8:= v10.[|java:io:ObjectInputStream.descriptorHandle|] ;
#L091204.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v10) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09120a.   v9:= temp;
#L09120c.   v10.[|java:io:ObjectInputStream.descriptorHandle|]  := v9;
#L091210.   call temp:=  [|java:io:ObjectInputStream.readClassDescriptor|](v10) @signature [|Ljava/io/ObjectInputStream;.readClassDescriptor:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L091216.   v7:= temp  @type object;
#L091218.   v9:= v10.[|java:io:ObjectInputStream.descriptorHandle|] ;
#L09121c.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v10, v7, v9, v11) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091222.   v10.[|java:io:ObjectInputStream.descriptorHandle|]  := v8;
#L091226.   v9:= v10.[|java:io:ObjectInputStream.emptyStream|]   @type object;
#L09122a.   v10.[|java:io:ObjectInputStream.primitiveData|]  := v9 @type object;
#L09122e.   call temp:=  [|java:io:ObjectInputStream.resolveClass|](v10, v7) @signature [|Ljava/io/ObjectInputStream;.resolveClass:(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L091234.   v9:= temp  @type object;
#L091236.   call temp:=  [|java:io:ObjectStreamClass.setClass|](v7, v9) @signature [|Ljava/io/ObjectStreamClass;.setClass:(Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09123c.   call temp:=  [|java:io:ObjectInputStream.verifyAndInit|](v10, v7) @signature [|Ljava/io/ObjectInputStream;.verifyAndInit:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091242.   call temp:=  [|java:io:ObjectStreamClass.getLoadFields|](v7) @signature [|Ljava/io/ObjectStreamClass;.getLoadFields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091248.   v3:= temp  @type object;
#L09124a.   if v3 != 0 then goto L091252;
#L09124e.   v3:= @@[|java:io:ObjectStreamClass.NO_FIELDS|]   @type object;
#L091252.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v7) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091258.   v9:= temp  @type object;
#L09125a.   if v9 != 0 then goto L091288;
#L09125e.   v6:= v10.[|java:io:ObjectInputStream.callerClassLoader|]   @type object;
#L091262.   v0:= v3  @type object;
#L091264.   v5:= v0.length;
#L091266.   v4:= 0  @length 4;
#L091268.   if v4 >= v5 then goto L09129a;
#L09126c.   v2:= v0[v4]  @type object;
#L091270.   call temp:=  [|java:io:ObjectStreamField.resolve|](v2, v6) @signature [|Ljava/io/ObjectStreamField;.resolve:(Ljava/lang/ClassLoader;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L091276.   v4:= v4 + 1;
#L09127a.   goto L091268;
#L09127c.   v1:= Exception  @type object;
#L09127e.   v9:= v10.[|java:io:ObjectInputStream.mustResolve|]   @boolean;
#L091282.   if v9 == 0 then goto L091242;
#L091286.   throw v1;
#L091288.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v7) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09128e.   v9:= temp  @type object;
#L091290.   call temp:=  [|java:lang:Class.getClassLoader|](v9) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L091296.   v6:= temp  @type object;
#L091298.   goto L091262;
#L09129a.   call temp:=  [|java:io:ObjectInputStream.discardData|](v10) @signature [|Ljava/io/ObjectInputStream;.discardData:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0912a0.   call temp:=  [|java:io:ObjectInputStream.readClassDesc|](v10) @signature [|Ljava/io/ObjectInputStream;.readClassDesc:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0912a6.   v9:= temp  @type object;
#L0912a8.   call temp:=  [|java:io:ObjectInputStream.checkedSetSuperClassDesc|](v7, v9) @signature [|Ljava/io/ObjectInputStream;.checkedSetSuperClassDesc:(Ljava/io/ObjectStreamClass;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type static;
#L0912ae.   return v7  @type object;
  catch  [|java:lang:ClassNotFoundException|] @[L09122e..L091242] goto L09127c;

   }
    procedure [|int|] [|java:io:ObjectInputStream.readNewHandle|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readNewHandle:()I|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0912d0.   v0:= v1.[|java:io:ObjectInputStream.input|]   @type object;
#L0912d4.   call temp:=  [|java:io:DataInputStream.readInt|](v0) @signature [|Ljava/io/DataInputStream;.readInt:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0912da.   v0:= temp;
#L0912dc.   return v0;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readNewLongString|] ([|java:io:ObjectInputStream|] v5 @type (this), [|boolean|] v6) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readNewLongString:(Z)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0912f0.   v3:= v5.[|java:io:ObjectInputStream.input|]   @type object;
#L0912f4.   call temp:=  [|java:io:DataInputStream.readLong|](v3) @signature [|Ljava/io/DataInputStream;.readLong:()J|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0912fa.   v0:= temp  @type wide;
#L0912fc.   v3:= v5.[|java:io:ObjectInputStream.input|]   @type object;
#L091300.   v4:= (int)v0  @type l2i;
#L091302.   call temp:=  [|java:io:DataInputStream.decodeUTF|](v3, v4) @signature [|Ljava/io/DataInputStream;.decodeUTF:(I)Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091308.   v2:= temp  @type object;
#L09130a.   v3:= v5.[|java:io:ObjectInputStream.enableResolve|]   @boolean;
#L09130e.   if v3 == 0 then goto L09131a;
#L091312.   call temp:=  [|java:io:ObjectInputStream.resolveObject|](v5, v2) @signature [|Ljava/io/ObjectInputStream;.resolveObject:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L091318.   v2:= temp  @type object;
#L09131a.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v5) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091320.   v3:= temp;
#L091322.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v5, v2, v3, v6) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091328.   return v2  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readNewObject|] ([|java:io:ObjectInputStream|] v15 @type (this), [|boolean|] v16) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readNewObject:(Z)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L09133c.   v1:= 1  @length 4;
#L09133e.   v12:= 0  @length 4;
#L091340.   v14:= 0  @length 4;
#L091342.   call temp:=  [|java:io:ObjectInputStream.readClassDesc|](v15) @signature [|Ljava/io/ObjectInputStream;.readClassDesc:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091348.   v2:= temp  @type object;
#L09134a.   if v2 != 0 then goto L091358;
#L09134e.   call temp:=  [|java:io:ObjectInputStream.missingClassDescriptor|](v15) @signature [|Ljava/io/ObjectInputStream;.missingClassDescriptor:()Ljava/io/InvalidClassException;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091354.   v12:= temp  @type object;
#L091356.   throw v12;
#L091358.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v15) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09135e.   v6:= temp;
#L091360.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v2) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091366.   v7:= temp  @type object;
#L091368.   v9:= 0  @length 4;
#L09136a.   v8:= 0  @length 4;
#L09136c.   if v7 == 0 then goto L091430;
#L091370.   call temp:=  [|java:io:ObjectStreamClass.newInstance|](v2, v7) @signature [|Ljava/io/ObjectStreamClass;.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091376.   v9:= temp  @type object;
#L091378.   v0:= v16;
#L09137c.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v15, v9, v6, v0) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091382.   v8:= v9  @type object;
#L091384.   v15.[|java:io:ObjectInputStream.currentObject|]  := v9 @type object;
#L091388.   v15.[|java:io:ObjectInputStream.currentClass|]  := v2 @type object;
#L09138c.   call temp:=  [|java:io:ObjectStreamClass.getFlags|](v2) @signature [|Ljava/io/ObjectStreamClass;.getFlags:()B|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091392.   v13:= temp;
#L091394.   v13:= v13 ^& 4;
#L091398.   if v13 == 0 then goto L091434;
#L09139c.   v11:= v1;
#L09139e.   if v11 == 0 then goto L091452;
#L0913a2.   call temp:=  [|java:io:ObjectStreamClass.getFlags|](v2) @signature [|Ljava/io/ObjectStreamClass;.getFlags:()B|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0913a8.   v13:= temp;
#L0913aa.   v13:= v13 ^& 8;
#L0913ae.   if v13 == 0 then goto L091438;
#L0913b2.   if v1 != 0 then goto L0913be;
#L0913b6.   v12:= v15.[|java:io:ObjectInputStream.input|]   @type object;
#L0913ba.   v15.[|java:io:ObjectInputStream.primitiveData|]  := v12 @type object;
#L0913be.   v12:= v15.[|java:io:ObjectInputStream.mustResolve|]   @boolean;
#L0913c2.   if v12 == 0 then goto L0913d4;
#L0913c6.   v0:= v9  @type object;
#L0913c8.   v0:= ([|java:io:Externalizable|])v0;
#L0913cc.   v3:= v0  @type object;
#L0913ce.   call temp:=  [|java:io:Externalizable.readExternal|](v3, v15) @signature [|Ljava/io/Externalizable;.readExternal:(Ljava/io/ObjectInput;)V|] @classDescriptor [|java:io:Externalizable|] @type interface;
#L0913d4.   if v1 == 0 then goto L09143c;
#L0913d8.   call temp:=  [|java:io:ObjectInputStream.discardData|](v15) @signature [|Ljava/io/ObjectInputStream;.discardData:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0913de.   v15.[|java:io:ObjectInputStream.currentObject|]  := v14 @type object;
#L0913e2.   v15.[|java:io:ObjectInputStream.currentClass|]  := v14 @type object;
#L0913e6.   if v7 == 0 then goto L09140c;
#L0913ea.   call temp:=  [|java:io:ObjectStreamClass.hasMethodReadResolve|](v2) @signature [|Ljava/io/ObjectStreamClass;.hasMethodReadResolve:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0913f0.   v12:= temp;
#L0913f2.   if v12 == 0 then goto L09140c;
#L0913f6.   call temp:=  [|java:io:ObjectStreamClass.getMethodReadResolve|](v2) @signature [|Ljava/io/ObjectStreamClass;.getMethodReadResolve:()Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0913fc.   v5:= temp  @type object;
#L0913fe.   v12:= 0  @length 4;
#L091400.   v12:= ([|java:lang:Object|][])v12;
#L091404.   call temp:=  [|java:lang:reflect:Method.invoke|](v5, v9, v12) @signature [|Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L09140a.   v9:= temp  @type object;
#L09140c.   if v9 == 0 then goto L091420;
#L091410.   v12:= v15.[|java:io:ObjectInputStream.enableResolve|]   @boolean;
#L091414.   if v12 == 0 then goto L091420;
#L091418.   call temp:=  [|java:io:ObjectInputStream.resolveObject|](v15, v9) @signature [|Ljava/io/ObjectInputStream;.resolveObject:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L09141e.   v9:= temp  @type object;
#L091420.   if v8 == v9 then goto L09142e;
#L091424.   v0:= v16;
#L091428.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v15, v9, v6, v0) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09142e.   return v9  @type object;
#L091430.   v9:= 0  @length 4;
#L091432.   goto L091384;
#L091434.   v11:= v12;
#L091436.   goto L09139e;
#L091438.   v1:= v12;
#L09143a.   goto L0913b2;
#L09143c.   v12:= v15.[|java:io:ObjectInputStream.emptyStream|]   @type object;
#L091440.   v15.[|java:io:ObjectInputStream.primitiveData|]  := v12 @type object;
#L091444.   goto L0913de;
#L091446.   v12:= Exception  @type object;
#L091448.   v15.[|java:io:ObjectInputStream.currentObject|]  := v14 @type object;
#L09144c.   v15.[|java:io:ObjectInputStream.currentClass|]  := v14 @type object;
#L091450.   throw v12;
#L091452.   call temp:=  [|java:io:ObjectInputStream.readHierarchy|](v15, v9, v2) @signature [|Ljava/io/ObjectInputStream;.readHierarchy:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091458.   goto L0913de;
#L09145a.   v4:= Exception  @type object;
#L09145c.   call temp:=  [|java:lang:reflect:InvocationTargetException.getTargetException|](v4) @signature [|Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;|] @classDescriptor [|java:lang:reflect:InvocationTargetException|] @type virtual;
#L091462.   v10:= temp  @type object;
#L091464.   v12:= instanceof @varname v10 @type [|java:io:ObjectStreamException|];
#L091468.   if v12 == 0 then goto L091472;
#L09146c.   v10:= ([|java:io:ObjectStreamException|])v10;
#L091470.   throw v10;
#L091472.   v12:= instanceof @varname v10 @type [|java:lang:Error|];
#L091476.   if v12 == 0 then goto L091480;
#L09147a.   v10:= ([|java:lang:Error|])v10;
#L09147e.   throw v10;
#L091480.   v10:= ([|java:lang:RuntimeException|])v10;
#L091484.   throw v10;
#L091486.   v12:= Exception  @type object;
#L091488.   goto L09140c;
  catch  [|any|] @[L091384..L0913de] goto L091446;
  catch  [|java:lang:IllegalAccessException|] @[L091400..L09140a] goto L091486;
  catch  [|java:lang:reflect:InvocationTargetException|] @[L091400..L09140a] goto L09145a;
  catch  [|any|] @[L09143c..L091444] goto L091446;
  catch  [|any|] @[L091452..L091458] goto L091446;

   }
    procedure [|java:lang:Class|] [|java:io:ObjectInputStream.readNewProxyClassDesc|] ([|java:io:ObjectInputStream|] v5 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readNewProxyClassDesc:()Ljava/lang/Class;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0914cc.   v4:= v5.[|java:io:ObjectInputStream.input|]   @type object;
#L0914d0.   call temp:=  [|java:io:DataInputStream.readInt|](v4) @signature [|Ljava/io/DataInputStream;.readInt:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0914d6.   v0:= temp;
#L0914d8.   v2:= new [|java:lang:String|][v0];
#L0914dc.   v1:= 0  @length 4;
#L0914de.   if v1 >= v0 then goto L0914f8;
#L0914e2.   v4:= v5.[|java:io:ObjectInputStream.input|]   @type object;
#L0914e6.   call temp:=  [|java:io:DataInputStream.readUTF|](v4) @signature [|Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L0914ec.   v4:= temp  @type object;
#L0914ee.   v2[v1]:= v4  @type object;
#L0914f2.   v1:= v1 + 1;
#L0914f6.   goto L0914de;
#L0914f8.   call temp:=  [|java:io:ObjectInputStream.resolveProxyClass|](v5, v2) @signature [|Ljava/io/ObjectInputStream;.resolveProxyClass:([Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0914fe.   v3:= temp  @type object;
#L091500.   call temp:=  [|java:io:ObjectInputStream.discardData|](v5) @signature [|Ljava/io/ObjectInputStream;.discardData:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091506.   return v3  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readNewString|] ([|java:io:ObjectInputStream|] v2 @type (this), [|boolean|] v3) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readNewString:(Z)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L091518.   v1:= v2.[|java:io:ObjectInputStream.input|]   @type object;
#L09151c.   call temp:=  [|java:io:DataInputStream.readUTF|](v1) @signature [|Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091522.   v0:= temp  @type object;
#L091524.   v1:= v2.[|java:io:ObjectInputStream.enableResolve|]   @boolean;
#L091528.   if v1 == 0 then goto L091534;
#L09152c.   call temp:=  [|java:io:ObjectInputStream.resolveObject|](v2, v0) @signature [|Ljava/io/ObjectInputStream;.resolveObject:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L091532.   v0:= temp  @type object;
#L091534.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v2) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09153a.   v1:= temp;
#L09153c.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v2, v0, v1, v3) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091542.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readNonPrimitiveContent|] ([|java:io:ObjectInputStream|] v5 @type (this), [|boolean|] v6) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readNonPrimitiveContent:(Z)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L091554.   call temp:=  [|java:io:ObjectInputStream.checkReadPrimitiveTypes|](v5) @signature [|Ljava/io/ObjectInputStream;.checkReadPrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09155a.   v3:= v5.[|java:io:ObjectInputStream.primitiveData|]   @type object;
#L09155e.   call temp:=  [|java:io:InputStream.available|](v3) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L091564.   v3:= temp;
#L091566.   if v3 <= 0 then goto L09158c;
#L09156a.   v0:= new [|java:io:OptionalDataException|];
#L09156e.   call temp:=  [|java:io:OptionalDataException.<init>|](v0) @signature [|Ljava/io/OptionalDataException;.<init>:()V|] @classDescriptor [|java:io:OptionalDataException|] @type direct;
#L091574.   v3:= v5.[|java:io:ObjectInputStream.primitiveData|]   @type object;
#L091578.   call temp:=  [|java:io:InputStream.available|](v3) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09157e.   v3:= temp;
#L091580.   v0.[|java:io:OptionalDataException.length|]  := v3;
#L091584.   throw v0;
#L091586.   call temp:=  [|java:io:ObjectInputStream.resetState|](v5) @signature [|Ljava/io/ObjectInputStream;.resetState:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09158c.   call temp:=  [|java:io:ObjectInputStream.nextTC|](v5) @signature [|Ljava/io/ObjectInputStream;.nextTC:()B|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091592.   v2:= temp;
#L091594.   goto L091644;
#L09159a.   call temp:=  [|java:io:ObjectInputStream.corruptStream|](v5, v2) @signature [|Ljava/io/ObjectInputStream;.corruptStream:(B)Ljava/io/StreamCorruptedException;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0915a0.   v3:= temp  @type object;
#L0915a2.   throw v3;
#L0915a4.   call temp:=  [|java:io:ObjectInputStream.readNewClass|](v5, v6) @signature [|Ljava/io/ObjectInputStream;.readNewClass:(Z)Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0915aa.   v3:= temp  @type object;
#L0915ac.   return v3  @type object;
#L0915ae.   call temp:=  [|java:io:ObjectInputStream.readNewClassDesc|](v5, v6) @signature [|Ljava/io/ObjectInputStream;.readNewClassDesc:(Z)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0915b4.   v3:= temp  @type object;
#L0915b6.   goto L0915ac;
#L0915b8.   call temp:=  [|java:io:ObjectInputStream.readNewArray|](v5, v6) @signature [|Ljava/io/ObjectInputStream;.readNewArray:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0915be.   v3:= temp  @type object;
#L0915c0.   goto L0915ac;
#L0915c2.   call temp:=  [|java:io:ObjectInputStream.readNewObject|](v5, v6) @signature [|Ljava/io/ObjectInputStream;.readNewObject:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0915c8.   v3:= temp  @type object;
#L0915ca.   goto L0915ac;
#L0915cc.   call temp:=  [|java:io:ObjectInputStream.readNewString|](v5, v6) @signature [|Ljava/io/ObjectInputStream;.readNewString:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0915d2.   v3:= temp  @type object;
#L0915d4.   goto L0915ac;
#L0915d6.   call temp:=  [|java:io:ObjectInputStream.readNewLongString|](v5, v6) @signature [|Ljava/io/ObjectInputStream;.readNewLongString:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0915dc.   v3:= temp  @type object;
#L0915de.   goto L0915ac;
#L0915e0.   call temp:=  [|java:io:ObjectInputStream.readEnum|](v5, v6) @signature [|Ljava/io/ObjectInputStream;.readEnum:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0915e6.   v3:= temp  @type object;
#L0915e8.   goto L0915ac;
#L0915ea.   if v6 == 0 then goto L091604;
#L0915ee.   call temp:=  [|java:io:ObjectInputStream.readNewHandle|](v5) @signature [|Ljava/io/ObjectInputStream;.readNewHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0915f4.   v3:= new [|java:io:InvalidObjectException|];
#L0915f8.   v4:= "Unshared read of back reference" @type (object, string);
#L0915fc.   call temp:=  [|java:io:InvalidObjectException.<init>|](v3, v4) @signature [|Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidObjectException|] @type direct;
#L091602.   throw v3;
#L091604.   call temp:=  [|java:io:ObjectInputStream.readCyclicReference|](v5) @signature [|Ljava/io/ObjectInputStream;.readCyclicReference:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L09160a.   v3:= temp  @type object;
#L09160c.   goto L0915ac;
#L09160e.   v3:= 0  @length 4;
#L091610.   goto L0915ac;
#L091612.   call temp:=  [|java:io:ObjectInputStream.readException|](v5) @signature [|Ljava/io/ObjectInputStream;.readException:()Ljava/lang/Exception;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091618.   v1:= temp  @type object;
#L09161a.   v3:= new [|java:io:WriteAbortedException|];
#L09161e.   v4:= "Read an exception" @type (object, string);
#L091622.   call temp:=  [|java:io:WriteAbortedException.<init>|](v3, v4, v1) @signature [|Ljava/io/WriteAbortedException;.<init>:(Ljava/lang/String;Ljava/lang/Exception;)V|] @classDescriptor [|java:io:WriteAbortedException|] @type direct;
#L091628.   throw v3;
#L09162a.   call temp:=  [|java:io:ObjectInputStream.pushbackTC|](v5) @signature [|Ljava/io/ObjectInputStream;.pushbackTC:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091630.   v0:= new [|java:io:OptionalDataException|];
#L091634.   call temp:=  [|java:io:OptionalDataException.<init>|](v0) @signature [|Ljava/io/OptionalDataException;.<init>:()V|] @classDescriptor [|java:io:OptionalDataException|] @type direct;
#L09163a.   v3:= 1  @length 4;
#L09163c.   v0.[|java:io:OptionalDataException.eof|]  := v3 @boolean;
#L091640.   throw v0;
#L091642.   
#L091644.   switch  v2
                 | 112 => goto L09160e
                 | 113 => goto L0915ea
                 | 114 => goto L0915ae
                 | 115 => goto L0915c2
                 | 116 => goto L0915cc
                 | 117 => goto L0915b8
                 | 118 => goto L0915a4
                 | 119 => goto L09159a
                 | 120 => goto L09162a
                 | 121 => goto L091586
                 | 122 => goto L09159a
                 | 123 => goto L091612
                 | 124 => goto L0915d6
                 | 125 => goto L09159a
                 | 126 => goto L0915e0
                 | => goto L09159a;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readObject|] ([|java:io:ObjectInputStream|] v10 @type (this), [|boolean|] v11) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readObject:(Z)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L091698.   v6:= 1  @length 4;
#L09169a.   v9:= 0  @length 4;
#L09169c.   v7:= v10.[|java:io:ObjectInputStream.primitiveData|]   @type object;
#L0916a0.   v8:= v10.[|java:io:ObjectInputStream.input|]   @type object;
#L0916a4.   if v7 != v8 then goto L0916cc;
#L0916a8.   v4:= v6;
#L0916aa.   if v4 == 0 then goto L0916b6;
#L0916ae.   v7:= v10.[|java:io:ObjectInputStream.emptyStream|]   @type object;
#L0916b2.   v10.[|java:io:ObjectInputStream.primitiveData|]  := v7 @type object;
#L0916b6.   v7:= v10.[|java:io:ObjectInputStream.subclassOverridingImplementation|]   @boolean;
#L0916ba.   if v7 == 0 then goto L0916d0;
#L0916be.   if v11 != 0 then goto L0916d0;
#L0916c2.   call temp:=  [|java:io:ObjectInputStream.readObjectOverride|](v10) @signature [|Ljava/io/ObjectInputStream;.readObjectOverride:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0916c8.   v5:= temp  @type object;
#L0916ca.   return v5  @type object;
#L0916cc.   v4:= 0  @length 4;
#L0916ce.   goto L0916aa;
#L0916d0.   v7:= v10.[|java:io:ObjectInputStream.nestedLevels|] ;
#L0916d4.   v7:= v7 + 1;
#L0916d8.   v10.[|java:io:ObjectInputStream.nestedLevels|]  := v7;
#L0916dc.   if v7 != v6 then goto L0916ec;
#L0916e0.   call temp:=  [|java:io:ObjectInputStream.getClosestUserClassLoader|]() @signature [|Ljava/io/ObjectInputStream;.getClosestUserClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:io:ObjectInputStream|] @type static;
#L0916e6.   v6:= temp  @type object;
#L0916e8.   v10.[|java:io:ObjectInputStream.callerClassLoader|]  := v6 @type object;
#L0916ec.   call temp:=  [|java:io:ObjectInputStream.readNonPrimitiveContent|](v10, v11) @signature [|Ljava/io/ObjectInputStream;.readNonPrimitiveContent:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0916f2.   v5:= temp  @type object;
#L0916f4.   if v4 == 0 then goto L091700;
#L0916f8.   v6:= v10.[|java:io:ObjectInputStream.input|]   @type object;
#L0916fc.   v10.[|java:io:ObjectInputStream.primitiveData|]  := v6 @type object;
#L091700.   v6:= v10.[|java:io:ObjectInputStream.nestedLevels|] ;
#L091704.   v6:= v6 + -1;
#L091708.   v10.[|java:io:ObjectInputStream.nestedLevels|]  := v6;
#L09170c.   if v6 != 0 then goto L091714;
#L091710.   v10.[|java:io:ObjectInputStream.callerClassLoader|]  := v9 @type object;
#L091714.   v6:= v10.[|java:io:ObjectInputStream.nestedLevels|] ;
#L091718.   if v6 != 0 then goto L0916ca;
#L09171c.   v6:= v10.[|java:io:ObjectInputStream.validations|]   @type object;
#L091720.   if v6 == 0 then goto L0916ca;
#L091724.   v0:= v10.[|java:io:ObjectInputStream.validations|]   @type object;
#L091728.   v3:= v0.length;
#L09172a.   v2:= 0  @length 4;
#L09172c.   if v2 >= v3 then goto L091764;
#L091730.   v1:= v0[v2]  @type object;
#L091734.   v6:= v1.[|java:io:ObjectInputStream$InputValidationDesc.validator|]   @type object;
#L091738.   call temp:=  [|java:io:ObjectInputValidation.validateObject|](v6) @signature [|Ljava/io/ObjectInputValidation;.validateObject:()V|] @classDescriptor [|java:io:ObjectInputValidation|] @type interface;
#L09173e.   v2:= v2 + 1;
#L091742.   goto L09172c;
#L091744.   v6:= Exception  @type object;
#L091746.   v7:= v10.[|java:io:ObjectInputStream.nestedLevels|] ;
#L09174a.   v7:= v7 + -1;
#L09174e.   v10.[|java:io:ObjectInputStream.nestedLevels|]  := v7;
#L091752.   if v7 != 0 then goto L09175a;
#L091756.   v10.[|java:io:ObjectInputStream.callerClassLoader|]  := v9 @type object;
#L09175a.   throw v6;
#L09175c.   v6:= Exception  @type object;
#L09175e.   v10.[|java:io:ObjectInputStream.validations|]  := v9 @type object;
#L091762.   throw v6;
#L091764.   v10.[|java:io:ObjectInputStream.validations|]  := v9 @type object;
#L091768.   goto L0916ca;
  catch  [|any|] @[L0916d0..L091700] goto L091744;
  catch  [|any|] @[L091724..L09173e] goto L09175c;

   }
    procedure [|void|] [|java:io:ObjectInputStream.readObjectForClass|] ([|java:io:ObjectInputStream|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|java:io:ObjectStreamClass|] v10 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readObjectForClass:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L091794.   v5:= 0  @length 4;
#L091796.   v2:= 1  @length 4;
#L091798.   v7:= 0  @length 4;
#L09179a.   v8.[|java:io:ObjectInputStream.currentObject|]  := v9 @type object;
#L09179e.   v8.[|java:io:ObjectInputStream.currentClass|]  := v10 @type object;
#L0917a2.   call temp:=  [|java:io:ObjectStreamClass.getFlags|](v10) @signature [|Ljava/io/ObjectStreamClass;.getFlags:()B|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0917a8.   v6:= temp;
#L0917aa.   v6:= v6 ^& 1;
#L0917ae.   if v6 == 0 then goto L0917fa;
#L0917b2.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v10) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0917b8.   v4:= temp  @type object;
#L0917ba.   if v4 == 0 then goto L0917c6;
#L0917be.   v5:= v8.[|java:io:ObjectInputStream.mustResolve|]   @boolean;
#L0917c2.   if v5 != 0 then goto L0917fe;
#L0917c6.   v3:= 0  @length 4;
#L0917c8.   if v3 == 0 then goto L091864;
#L0917cc.   v5:= 1  @length 4;
#L0917ce.   call temp:=  [|java:lang:reflect:Method.setAccessible|](v3, v5) @signature [|Ljava/lang/reflect/Method;.setAccessible:(Z)V|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0917d4.   v5:= 1  @length 4;
#L0917d6.   v5:= new [|java:lang:Object|][v5];
#L0917da.   v6:= 0  @length 4;
#L0917dc.   v5[v6]:= v8  @type object;
#L0917e0.   call temp:=  [|java:lang:reflect:Method.invoke|](v3, v9, v5) @signature [|Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0917e6.   if v2 == 0 then goto L0917f0;
#L0917ea.   call temp:=  [|java:io:ObjectInputStream.discardData|](v8) @signature [|Ljava/io/ObjectInputStream;.discardData:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L0917f0.   v8.[|java:io:ObjectInputStream.currentObject|]  := v7 @type object;
#L0917f4.   v8.[|java:io:ObjectInputStream.currentClass|]  := v7 @type object;
#L0917f8.   return @void ;
#L0917fa.   v2:= v5;
#L0917fc.   goto L0917b2;
#L0917fe.   call temp:=  [|java:io:ObjectStreamClass.getMethodReadObject|](v10) @signature [|Ljava/io/ObjectStreamClass;.getMethodReadObject:()Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091804.   v3:= temp  @type object;
#L091806.   goto L0917c8;
#L091808.   v0:= Exception  @type object;
#L09180a.   call temp:=  [|java:lang:reflect:InvocationTargetException.getTargetException|](v0) @signature [|Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;|] @classDescriptor [|java:lang:reflect:InvocationTargetException|] @type virtual;
#L091810.   v1:= temp  @type object;
#L091812.   v5:= instanceof @varname v1 @type [|java:lang:ClassNotFoundException|];
#L091816.   if v5 == 0 then goto L09182c;
#L09181a.   v1:= ([|java:lang:ClassNotFoundException|])v1;
#L09181e.   throw v1;
#L091820.   v5:= Exception  @type object;
#L091822.   v8.[|java:io:ObjectInputStream.currentObject|]  := v7 @type object;
#L091826.   v8.[|java:io:ObjectInputStream.currentClass|]  := v7 @type object;
#L09182a.   throw v5;
#L09182c.   v5:= instanceof @varname v1 @type [|java:lang:RuntimeException|];
#L091830.   if v5 == 0 then goto L09183a;
#L091834.   v1:= ([|java:lang:RuntimeException|])v1;
#L091838.   throw v1;
#L09183a.   v5:= instanceof @varname v1 @type [|java:lang:Error|];
#L09183e.   if v5 == 0 then goto L091848;
#L091842.   v1:= ([|java:lang:Error|])v1;
#L091846.   throw v1;
#L091848.   v1:= ([|java:io:IOException|])v1;
#L09184c.   throw v1;
#L09184e.   v0:= Exception  @type object;
#L091850.   v5:= new [|java:lang:RuntimeException|];
#L091854.   call temp:=  [|java:lang:IllegalAccessException.toString|](v0) @signature [|Ljava/lang/IllegalAccessException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalAccessException|] @type virtual;
#L09185a.   v6:= temp  @type object;
#L09185c.   call temp:=  [|java:lang:RuntimeException.<init>|](v5, v6) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L091862.   throw v5;
#L091864.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v8) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L09186a.   goto L0917e6;
  catch  [|any|] @[L0917ce..L0917d4] goto L091820;
  catch  [|java:lang:reflect:InvocationTargetException|] @[L0917d6..L0917e6] goto L091808;
  catch  [|java:lang:IllegalAccessException|] @[L0917d6..L0917e6] goto L09184e;
  catch  [|any|] @[L0917d6..L0917e6] goto L091820;
  catch  [|any|] @[L0917ea..L0917f0] goto L091820;
  catch  [|any|] @[L09180a..L091820] goto L091820;
  catch  [|any|] @[L09182c..L09186a] goto L091820;

   }
    procedure [|void|] [|java:io:ObjectInputStream.readObjectNoData|] ([|java:io:ObjectInputStream|] v5 @type (this), [|java:lang:Object|] v6 @type (object), [|java:lang:Class|] v7 @type (object), [|java:io:ObjectStreamClass|] v8 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readObjectNoData:(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0918b0.   call temp:=  [|java:io:ObjectStreamClass.isSerializable|](v8) @signature [|Ljava/io/ObjectStreamClass;.isSerializable:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0918b6.   v3:= temp;
#L0918b8.   if v3 != 0 then goto L0918be;
#L0918bc.   return @void ;
#L0918be.   call temp:=  [|java:io:ObjectStreamClass.hasMethodReadObjectNoData|](v8) @signature [|Ljava/io/ObjectStreamClass;.hasMethodReadObjectNoData:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0918c4.   v3:= temp;
#L0918c6.   if v3 == 0 then goto L0918bc;
#L0918ca.   call temp:=  [|java:io:ObjectStreamClass.getMethodReadObjectNoData|](v8) @signature [|Ljava/io/ObjectStreamClass;.getMethodReadObjectNoData:()Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0918d0.   v2:= temp  @type object;
#L0918d2.   v3:= 0  @length 4;
#L0918d4.   v3:= new [|java:lang:Object|][v3];
#L0918d8.   call temp:=  [|java:lang:reflect:Method.invoke|](v2, v6, v3) @signature [|Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0918de.   goto L0918bc;
#L0918e0.   v0:= Exception  @type object;
#L0918e2.   call temp:=  [|java:lang:reflect:InvocationTargetException.getTargetException|](v0) @signature [|Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;|] @classDescriptor [|java:lang:reflect:InvocationTargetException|] @type virtual;
#L0918e8.   v1:= temp  @type object;
#L0918ea.   v3:= instanceof @varname v1 @type [|java:lang:RuntimeException|];
#L0918ee.   if v3 == 0 then goto L0918f8;
#L0918f2.   v1:= ([|java:lang:RuntimeException|])v1;
#L0918f6.   throw v1;
#L0918f8.   v3:= instanceof @varname v1 @type [|java:lang:Error|];
#L0918fc.   if v3 == 0 then goto L091906;
#L091900.   v1:= ([|java:lang:Error|])v1;
#L091904.   throw v1;
#L091906.   v1:= ([|java:io:ObjectStreamException|])v1;
#L09190a.   throw v1;
#L09190c.   v0:= Exception  @type object;
#L09190e.   v3:= new [|java:lang:RuntimeException|];
#L091912.   call temp:=  [|java:lang:IllegalAccessException.toString|](v0) @signature [|Ljava/lang/IllegalAccessException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalAccessException|] @type virtual;
#L091918.   v4:= temp  @type object;
#L09191a.   call temp:=  [|java:lang:RuntimeException.<init>|](v3, v4) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L091920.   throw v3;
  catch  [|java:lang:reflect:InvocationTargetException|] @[L0918d4..L0918de] goto L0918e0;
  catch  [|java:lang:IllegalAccessException|] @[L0918d4..L0918de] goto L09190c;

   }
    procedure [|void|] [|java:io:ObjectInputStream.registerObjectRead|] ([|java:io:ObjectInputStream|] v4 @type (this), [|java:lang:Object|] v5 @type (object), [|int|] v6, [|boolean|] v7) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L091944.   if v7 == 0 then goto L09194c;
#L091948.   v5:= @@[|java:io:ObjectInputStream.UNSHARED_OBJ|]   @type object;
#L09194c.   v2:= 8257536  @length high16;
#L091950.   v0:= v6 - v2  @type int;
#L091954.   v2:= v4.[|java:io:ObjectInputStream.objectsRead|]   @type object;
#L091958.   call temp:=  [|java:util:ArrayList.size|](v2) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L09195e.   v1:= temp;
#L091960.   if v0 <= v1 then goto L091976;
#L091964.   v2:= v4.[|java:io:ObjectInputStream.objectsRead|]   @type object;
#L091968.   v3:= 0  @length 4;
#L09196a.   call temp:=  [|java:util:ArrayList.add|](v2, v3) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L091970.   v1:= v1 + 1;
#L091974.   goto L091960;
#L091976.   if v0 != v1 then goto L091986;
#L09197a.   v2:= v4.[|java:io:ObjectInputStream.objectsRead|]   @type object;
#L09197e.   call temp:=  [|java:util:ArrayList.add|](v2, v5) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L091984.   return @void ;
#L091986.   v2:= v4.[|java:io:ObjectInputStream.objectsRead|]   @type object;
#L09198a.   call temp:=  [|java:util:ArrayList.set|](v2, v0, v5) @signature [|Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L091990.   goto L091984;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.registeredObjectRead|] ([|java:io:ObjectInputStream|] v3 @type (this), [|int|] v4) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.registeredObjectRead:(I)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0919a4.   v1:= v3.[|java:io:ObjectInputStream.objectsRead|]   @type object;
#L0919a8.   v2:= 8257536  @length high16;
#L0919ac.   v2:= v4 - v2  @type int;
#L0919b0.   call temp:=  [|java:util:ArrayList.get|](v1, v2) @signature [|Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0919b6.   v0:= temp  @type object;
#L0919b8.   v1:= @@[|java:io:ObjectInputStream.UNSHARED_OBJ|]   @type object;
#L0919bc.   if v0 != v1 then goto L0919d0;
#L0919c0.   v1:= new [|java:io:InvalidObjectException|];
#L0919c4.   v2:= "Cannot read back reference to unshared object" @type (object, string);
#L0919c8.   call temp:=  [|java:io:InvalidObjectException.<init>|](v1, v2) @signature [|Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidObjectException|] @type direct;
#L0919ce.   throw v1;
#L0919d0.   return v0  @type object;

   }
    procedure [|void|] [|java:io:ObjectInputStream.resetSeenObjects|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.resetSeenObjects:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0919e4.   v0:= new [|java:util:ArrayList|];
#L0919e8.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0919ee.   v1.[|java:io:ObjectInputStream.objectsRead|]  := v0 @type object;
#L0919f2.   v0:= 8257536  @length high16;
#L0919f6.   v1.[|java:io:ObjectInputStream.nextHandle|]  := v0;
#L0919fa.   v0:= v1.[|java:io:ObjectInputStream.emptyStream|]   @type object;
#L0919fe.   v1.[|java:io:ObjectInputStream.primitiveData|]  := v0 @type object;
#L091a02.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectInputStream.resetState|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.resetState:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L091a14.   v0:= 0  @length 4;
#L091a16.   call temp:=  [|java:io:ObjectInputStream.resetSeenObjects|](v1) @signature [|Ljava/io/ObjectInputStream;.resetSeenObjects:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091a1c.   v1.[|java:io:ObjectInputStream.hasPushbackTC|]  := v0 @boolean;
#L091a20.   v1.[|java:io:ObjectInputStream.pushbackTC|]  := v0 @byte;
#L091a24.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectInputStream.verifyAndInit|] ([|java:io:ObjectInputStream|] v9 @type (this), [|java:io:ObjectStreamClass|] v10 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.verifyAndInit:(Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L091a38.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v10) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091a3e.   v1:= temp  @type object;
#L091a40.   call temp:=  [|java:io:ObjectStreamClass.lookupStreamClass|](v1) @signature [|Ljava/io/ObjectStreamClass;.lookupStreamClass:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L091a46.   v3:= temp  @type object;
#L091a48.   call temp:=  [|java:io:ObjectStreamClass.getSerialVersionUID|](v10) @signature [|Ljava/io/ObjectStreamClass;.getSerialVersionUID:()J|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091a4e.   v4:= temp  @type wide;
#L091a50.   call temp:=  [|java:io:ObjectStreamClass.getSerialVersionUID|](v3) @signature [|Ljava/io/ObjectStreamClass;.getSerialVersionUID:()J|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091a56.   v6:= temp  @type wide;
#L091a58.   v4:= cmp(v4,v6);
#L091a5c.   if v4 == 0 then goto L091aae;
#L091a60.   v4:= new [|java:io:InvalidClassException|];
#L091a64.   call temp:=  [|java:io:ObjectStreamClass.getName|](v10) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091a6a.   v5:= temp  @type object;
#L091a6c.   v6:= new [|java:lang:StringBuilder|];
#L091a70.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L091a76.   v7:= "Incompatible class (SUID): " @type (object, string);
#L091a7a.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L091a80.   v6:= temp  @type object;
#L091a82.   call temp:=  [|java:lang:StringBuilder.append|](v6, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L091a88.   v6:= temp  @type object;
#L091a8a.   v7:= " but expected " @type (object, string);
#L091a8e.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L091a94.   v6:= temp  @type object;
#L091a96.   call temp:=  [|java:lang:StringBuilder.append|](v6, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L091a9c.   v6:= temp  @type object;
#L091a9e.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L091aa4.   v6:= temp  @type object;
#L091aa6.   call temp:=  [|java:io:InvalidClassException.<init>|](v4, v5, v6) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L091aac.   throw v4;
#L091aae.   call temp:=  [|java:io:ObjectStreamClass.getName|](v10) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091ab4.   v4:= temp  @type object;
#L091ab6.   call temp:=  [|java:io:ObjectInputStream.getBaseName|](v4) @signature [|Ljava/io/ObjectInputStream;.getBaseName:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectInputStream|] @type static;
#L091abc.   v0:= temp  @type object;
#L091abe.   call temp:=  [|java:io:ObjectStreamClass.getName|](v3) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091ac4.   v4:= temp  @type object;
#L091ac6.   call temp:=  [|java:io:ObjectInputStream.getBaseName|](v4) @signature [|Ljava/io/ObjectInputStream;.getBaseName:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectInputStream|] @type static;
#L091acc.   v2:= temp  @type object;
#L091ace.   call temp:=  [|java:lang:String.equals|](v0, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L091ad4.   v4:= temp;
#L091ad6.   if v4 != 0 then goto L091b0c;
#L091ada.   v4:= new [|java:io:InvalidClassException|];
#L091ade.   call temp:=  [|java:io:ObjectStreamClass.getName|](v10) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091ae4.   v5:= temp  @type object;
#L091ae6.   v6:= "Incompatible class (base name): %s but expected %s" @type (object, string);
#L091aea.   v7:= 2  @length 4;
#L091aec.   v7:= new [|java:lang:Object|][v7];
#L091af0.   v8:= 0  @length 4;
#L091af2.   v7[v8]:= v0  @type object;
#L091af6.   v8:= 1  @length 4;
#L091af8.   v7[v8]:= v2  @type object;
#L091afc.   call temp:=  [|java:lang:String.format|](v6, v7) @signature [|Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L091b02.   v6:= temp  @type object;
#L091b04.   call temp:=  [|java:io:InvalidClassException.<init>|](v4, v5, v6) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L091b0a.   throw v4;
#L091b0c.   call temp:=  [|java:io:ObjectStreamClass.initPrivateFields|](v10, v3) @signature [|Ljava/io/ObjectStreamClass;.initPrivateFields:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091b12.   return @void ;

   }
    procedure [|int|] [|java:io:ObjectInputStream.available|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091b24.   call temp:=  [|java:io:ObjectInputStream.checkReadPrimitiveTypes|](v1) @signature [|Ljava/io/ObjectInputStream;.checkReadPrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091b2a.   v0:= v1.[|java:io:ObjectInputStream.primitiveData|]   @type object;
#L091b2e.   call temp:=  [|java:io:InputStream.available|](v0) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L091b34.   v0:= temp;
#L091b36.   return v0;

   }
    procedure [|void|] [|java:io:ObjectInputStream.close|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091b48.   v0:= v1.[|java:io:ObjectInputStream.input|]   @type object;
#L091b4c.   call temp:=  [|java:io:DataInputStream.close|](v0) @signature [|Ljava/io/DataInputStream;.close:()V|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091b52.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectInputStream.defaultReadObject|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L091b64.   v0:= v2.[|java:io:ObjectInputStream.currentObject|]   @type object;
#L091b68.   if v0 != 0 then goto L091b74;
#L091b6c.   v0:= v2.[|java:io:ObjectInputStream.mustResolve|]   @boolean;
#L091b70.   if v0 != 0 then goto L091b84;
#L091b74.   v0:= v2.[|java:io:ObjectInputStream.currentObject|]   @type object;
#L091b78.   v1:= v2.[|java:io:ObjectInputStream.currentClass|]   @type object;
#L091b7c.   call temp:=  [|java:io:ObjectInputStream.readFieldValues|](v2, v0, v1) @signature [|Ljava/io/ObjectInputStream;.readFieldValues:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091b82.   return @void ;
#L091b84.   v0:= new [|java:io:NotActiveException|];
#L091b88.   call temp:=  [|java:io:NotActiveException.<init>|](v0) @signature [|Ljava/io/NotActiveException;.<init>:()V|] @classDescriptor [|java:io:NotActiveException|] @type direct;
#L091b8e.   throw v0;

   }
    procedure [|boolean|] [|java:io:ObjectInputStream.enableResolveObject|] ([|java:io:ObjectInputStream|] v1 @type (this), [|boolean|] v2) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.enableResolveObject:(Z)Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L091ba0.   v0:= v1.[|java:io:ObjectInputStream.enableResolve|]   @boolean;
#L091ba4.   v1.[|java:io:ObjectInputStream.enableResolve|]  := v2 @boolean;
#L091ba8.   return v0;

   }
    procedure [|int|] [|java:io:ObjectInputStream.read|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091bbc.   call temp:=  [|java:io:ObjectInputStream.checkReadPrimitiveTypes|](v1) @signature [|Ljava/io/ObjectInputStream;.checkReadPrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091bc2.   v0:= v1.[|java:io:ObjectInputStream.primitiveData|]   @type object;
#L091bc6.   call temp:=  [|java:io:InputStream.read|](v0) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L091bcc.   v0:= temp;
#L091bce.   return v0;

   }
    procedure [|int|] [|java:io:ObjectInputStream.read|] ([|java:io:ObjectInputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091be0.   v0:= v2.length;
#L091be2.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v3, v4) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L091be8.   if v4 != 0 then goto L091bf0;
#L091bec.   v0:= 0  @length 4;
#L091bee.   return v0;
#L091bf0.   call temp:=  [|java:io:ObjectInputStream.checkReadPrimitiveTypes|](v1) @signature [|Ljava/io/ObjectInputStream;.checkReadPrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091bf6.   v0:= v1.[|java:io:ObjectInputStream.primitiveData|]   @type object;
#L091bfa.   call temp:=  [|java:io:InputStream.read|](v0, v2, v3, v4) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L091c00.   v0:= temp;
#L091c02.   goto L091bee;

   }
    procedure [|boolean|] [|java:io:ObjectInputStream.readBoolean|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readBoolean:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091c14.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091c18.   call temp:=  [|java:io:DataInputStream.readBoolean|](v0) @signature [|Ljava/io/DataInputStream;.readBoolean:()Z|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091c1e.   v0:= temp;
#L091c20.   return v0;

   }
    procedure [|byte|] [|java:io:ObjectInputStream.readByte|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readByte:()B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091c34.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091c38.   call temp:=  [|java:io:DataInputStream.readByte|](v0) @signature [|Ljava/io/DataInputStream;.readByte:()B|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091c3e.   v0:= temp;
#L091c40.   return v0;

   }
    procedure [|char|] [|java:io:ObjectInputStream.readChar|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readChar:()C|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091c54.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091c58.   call temp:=  [|java:io:DataInputStream.readChar|](v0) @signature [|Ljava/io/DataInputStream;.readChar:()C|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091c5e.   v0:= temp;
#L091c60.   return v0;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectInputStream.readClassDescriptor|] ([|java:io:ObjectInputStream|] v4 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readClassDescriptor:()Ljava/io/ObjectStreamClass;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L091c74.   v1:= new [|java:io:ObjectStreamClass|];
#L091c78.   call temp:=  [|java:io:ObjectStreamClass.<init>|](v1) @signature [|Ljava/io/ObjectStreamClass;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L091c7e.   v2:= v4.[|java:io:ObjectInputStream.input|]   @type object;
#L091c82.   call temp:=  [|java:io:DataInputStream.readUTF|](v2) @signature [|Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091c88.   v0:= temp  @type object;
#L091c8a.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L091c90.   v2:= temp;
#L091c92.   if v2 != 0 then goto L091ca6;
#L091c96.   v2:= new [|java:io:IOException|];
#L091c9a.   v3:= "The stream is corrupted" @type (object, string);
#L091c9e.   call temp:=  [|java:io:IOException.<init>|](v2, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L091ca4.   throw v2;
#L091ca6.   call temp:=  [|java:io:ObjectStreamClass.setName|](v1, v0) @signature [|Ljava/io/ObjectStreamClass;.setName:(Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091cac.   v2:= v4.[|java:io:ObjectInputStream.input|]   @type object;
#L091cb0.   call temp:=  [|java:io:DataInputStream.readLong|](v2) @signature [|Ljava/io/DataInputStream;.readLong:()J|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091cb6.   v2:= temp  @type wide;
#L091cb8.   call temp:=  [|java:io:ObjectStreamClass.setSerialVersionUID|](v1, v2, v3) @signature [|Ljava/io/ObjectStreamClass;.setSerialVersionUID:(J)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091cbe.   v2:= v4.[|java:io:ObjectInputStream.input|]   @type object;
#L091cc2.   call temp:=  [|java:io:DataInputStream.readByte|](v2) @signature [|Ljava/io/DataInputStream;.readByte:()B|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091cc8.   v2:= temp;
#L091cca.   call temp:=  [|java:io:ObjectStreamClass.setFlags|](v1, v2) @signature [|Ljava/io/ObjectStreamClass;.setFlags:(B)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L091cd0.   v2:= v4.[|java:io:ObjectInputStream.descriptorHandle|] ;
#L091cd4.   v3:= -1  @length 4;
#L091cd6.   if v2 != v3 then goto L091ce6;
#L091cda.   call temp:=  [|java:io:ObjectInputStream.nextHandle|](v4) @signature [|Ljava/io/ObjectInputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091ce0.   v2:= temp;
#L091ce2.   v4.[|java:io:ObjectInputStream.descriptorHandle|]  := v2;
#L091ce6.   v2:= v4.[|java:io:ObjectInputStream.descriptorHandle|] ;
#L091cea.   v3:= 0  @length 4;
#L091cec.   call temp:=  [|java:io:ObjectInputStream.registerObjectRead|](v4, v1, v2, v3) @signature [|Ljava/io/ObjectInputStream;.registerObjectRead:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091cf2.   call temp:=  [|java:io:ObjectInputStream.readFieldDescriptors|](v4, v1) @signature [|Ljava/io/ObjectInputStream;.readFieldDescriptors:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091cf8.   return v1  @type object;

   }
    procedure [|double|] [|java:io:ObjectInputStream.readDouble|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readDouble:()D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L091d0c.   v0:= v2.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091d10.   call temp:=  [|java:io:DataInputStream.readDouble|](v0) @signature [|Ljava/io/DataInputStream;.readDouble:()D|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091d16.   v0:= temp  @type wide;
#L091d18.   return v0  @type wide;

   }
    procedure [|java:io:ObjectInputStream$GetField|] [|java:io:ObjectInputStream.readFields|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L091d2c.   v1:= v2.[|java:io:ObjectInputStream.currentObject|]   @type object;
#L091d30.   if v1 != 0 then goto L091d40;
#L091d34.   v1:= new [|java:io:NotActiveException|];
#L091d38.   call temp:=  [|java:io:NotActiveException.<init>|](v1) @signature [|Ljava/io/NotActiveException;.<init>:()V|] @classDescriptor [|java:io:NotActiveException|] @type direct;
#L091d3e.   throw v1;
#L091d40.   v0:= new [|java:io:EmulatedFieldsForLoading|];
#L091d44.   v1:= v2.[|java:io:ObjectInputStream.currentClass|]   @type object;
#L091d48.   call temp:=  [|java:io:EmulatedFieldsForLoading.<init>|](v0, v1) @signature [|Ljava/io/EmulatedFieldsForLoading;.<init>:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:EmulatedFieldsForLoading|] @type direct;
#L091d4e.   call temp:=  [|java:io:ObjectInputStream.readFieldValues|](v2, v0) @signature [|Ljava/io/ObjectInputStream;.readFieldValues:(Ljava/io/EmulatedFieldsForLoading;)V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091d54.   return v0  @type object;

   }
    procedure [|float|] [|java:io:ObjectInputStream.readFloat|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readFloat:()F|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091d68.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091d6c.   call temp:=  [|java:io:DataInputStream.readFloat|](v0) @signature [|Ljava/io/DataInputStream;.readFloat:()F|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091d72.   v0:= temp;
#L091d74.   return v0;

   }
    procedure [|void|] [|java:io:ObjectInputStream.readFully|] ([|java:io:ObjectInputStream|] v1 @type (this), [|byte|][] v2) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readFully:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091d88.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091d8c.   call temp:=  [|java:io:DataInputStream.readFully|](v0, v2) @signature [|Ljava/io/DataInputStream;.readFully:([B)V|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091d92.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectInputStream.readFully|] ([|java:io:ObjectInputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readFully:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091da4.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091da8.   call temp:=  [|java:io:DataInputStream.readFully|](v0, v2, v3, v4) @signature [|Ljava/io/DataInputStream;.readFully:([BII)V|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091dae.   return @void ;

   }
    procedure [|int|] [|java:io:ObjectInputStream.readInt|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readInt:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091dc0.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091dc4.   call temp:=  [|java:io:DataInputStream.readInt|](v0) @signature [|Ljava/io/DataInputStream;.readInt:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091dca.   v0:= temp;
#L091dcc.   return v0;

   }
    procedure [|java:lang:String|] [|java:io:ObjectInputStream.readLine|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readLine:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091de0.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091de4.   call temp:=  [|java:io:DataInputStream.readLine|](v0) @signature [|Ljava/io/DataInputStream;.readLine:()Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091dea.   v0:= temp  @type object;
#L091dec.   return v0  @type object;

   }
    procedure [|long|] [|java:io:ObjectInputStream.readLong|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readLong:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L091e00.   v0:= v2.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091e04.   call temp:=  [|java:io:DataInputStream.readLong|](v0) @signature [|Ljava/io/DataInputStream;.readLong:()J|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091e0a.   v0:= temp  @type wide;
#L091e0c.   return v0  @type wide;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readObject|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L091e20.   v0:= 0  @length 4;
#L091e22.   call temp:=  [|java:io:ObjectInputStream.readObject|](v1, v0) @signature [|Ljava/io/ObjectInputStream;.readObject:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091e28.   v0:= temp  @type object;
#L091e2a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readObjectOverride|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readObjectOverride:()Ljava/lang/Object;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L091e3c.   v0:= v1.[|java:io:ObjectInputStream.input|]   @type object;
#L091e40.   if v0 != 0 then goto L091e48;
#L091e44.   v0:= 0  @length 4;
#L091e46.   return v0  @type object;
#L091e48.   v0:= new [|java:io:IOException|];
#L091e4c.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L091e52.   throw v0;

   }
    procedure [|short|] [|java:io:ObjectInputStream.readShort|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readShort:()S|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091e64.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091e68.   call temp:=  [|java:io:DataInputStream.readShort|](v0) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091e6e.   v0:= temp;
#L091e70.   return v0;

   }
    procedure [|void|] [|java:io:ObjectInputStream.readStreamHeader|] ([|java:io:ObjectInputStream|] v2 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readStreamHeader:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L091e84.   v0:= v2.[|java:io:ObjectInputStream.input|]   @type object;
#L091e88.   call temp:=  [|java:io:DataInputStream.readShort|](v0) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091e8e.   v0:= temp;
#L091e90.   v1:= -21267  @length 16;
#L091e94.   if v0 != v1 then goto L091eac;
#L091e98.   v0:= v2.[|java:io:ObjectInputStream.input|]   @type object;
#L091e9c.   call temp:=  [|java:io:DataInputStream.readShort|](v0) @signature [|Ljava/io/DataInputStream;.readShort:()S|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091ea2.   v0:= temp;
#L091ea4.   v1:= 5  @length 4;
#L091ea6.   if v0 != v1 then goto L091eac;
#L091eaa.   return @void ;
#L091eac.   v0:= new [|java:io:StreamCorruptedException|];
#L091eb0.   call temp:=  [|java:io:StreamCorruptedException.<init>|](v0) @signature [|Ljava/io/StreamCorruptedException;.<init>:()V|] @classDescriptor [|java:io:StreamCorruptedException|] @type direct;
#L091eb6.   throw v0;

   }
    procedure [|java:lang:String|] [|java:io:ObjectInputStream.readUTF|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readUTF:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091ec8.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091ecc.   call temp:=  [|java:io:DataInputStream.readUTF|](v0) @signature [|Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091ed2.   v0:= temp  @type object;
#L091ed4.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.readUnshared|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readUnshared:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091ee8.   v0:= 1  @length 4;
#L091eea.   call temp:=  [|java:io:ObjectInputStream.readObject|](v1, v0) @signature [|Ljava/io/ObjectInputStream;.readObject:(Z)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L091ef0.   v0:= temp  @type object;
#L091ef2.   return v0  @type object;

   }
    procedure [|int|] [|java:io:ObjectInputStream.readUnsignedByte|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readUnsignedByte:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091f04.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091f08.   call temp:=  [|java:io:DataInputStream.readUnsignedByte|](v0) @signature [|Ljava/io/DataInputStream;.readUnsignedByte:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091f0e.   v0:= temp;
#L091f10.   return v0;

   }
    procedure [|int|] [|java:io:ObjectInputStream.readUnsignedShort|] ([|java:io:ObjectInputStream|] v1 @type (this)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.readUnsignedShort:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L091f24.   v0:= v1.[|java:io:ObjectInputStream.primitiveTypes|]   @type object;
#L091f28.   call temp:=  [|java:io:DataInputStream.readUnsignedShort|](v0) @signature [|Ljava/io/DataInputStream;.readUnsignedShort:()I|] @classDescriptor [|java:io:DataInputStream|] @type virtual;
#L091f2e.   v0:= temp;
#L091f30.   return v0;

   }
    procedure [|void|] [|java:io:ObjectInputStream.registerValidation|] ([|java:io:ObjectInputStream|] v9 @type (this), [|java:io:ObjectInputValidation|] v10 @type (object), [|int|] v11) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.registerValidation:(Ljava/io/ObjectInputValidation;I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L091f44.   (@monitorenter v9)
#L091f46.   v3:= v9.[|java:io:ObjectInputStream.currentObject|]   @type object;
#L091f4a.   if v3 != 0 then goto L091f68;
#L091f4e.   v6:= v9.[|java:io:ObjectInputStream.nestedLevels|] ;
#L091f52.   if v6 != 0 then goto L091f68;
#L091f56.   v6:= new [|java:io:NotActiveException|];
#L091f5a.   call temp:=  [|java:io:NotActiveException.<init>|](v6) @signature [|Ljava/io/NotActiveException;.<init>:()V|] @classDescriptor [|java:io:NotActiveException|] @type direct;
#L091f60.   throw v6;
#L091f62.   v6:= Exception  @type object;
#L091f64.   (@monitorexit v9)
#L091f66.   throw v6;
#L091f68.   if v10 != 0 then goto L091f7c;
#L091f6c.   v6:= new [|java:io:InvalidObjectException|];
#L091f70.   v7:= "Callback object cannot be null" @type (object, string);
#L091f74.   call temp:=  [|java:io:InvalidObjectException.<init>|](v6, v7) @signature [|Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidObjectException|] @type direct;
#L091f7a.   throw v6;
#L091f7c.   v1:= new [|java:io:ObjectInputStream$InputValidationDesc|];
#L091f80.   call temp:=  [|java:io:ObjectInputStream$InputValidationDesc.<init>|](v1) @signature [|Ljava/io/ObjectInputStream$InputValidationDesc;.<init>:()V|] @classDescriptor [|java:io:ObjectInputStream$InputValidationDesc|] @type direct;
#L091f86.   v1.[|java:io:ObjectInputStream$InputValidationDesc.validator|]  := v10 @type object;
#L091f8a.   v1.[|java:io:ObjectInputStream$InputValidationDesc.priority|]  := v11;
#L091f8e.   v6:= v9.[|java:io:ObjectInputStream.validations|]   @type object;
#L091f92.   if v6 != 0 then goto L091fae;
#L091f96.   v6:= 1  @length 4;
#L091f98.   v6:= new [|java:io:ObjectInputStream$InputValidationDesc|][v6];
#L091f9c.   v9.[|java:io:ObjectInputStream.validations|]  := v6 @type object;
#L091fa0.   v6:= v9.[|java:io:ObjectInputStream.validations|]   @type object;
#L091fa4.   v7:= 0  @length 4;
#L091fa6.   v6[v7]:= v1  @type object;
#L091faa.   (@monitorexit v9)
#L091fac.   return @void ;
#L091fae.   v2:= 0  @length 4;
#L091fb0.   v6:= v9.[|java:io:ObjectInputStream.validations|]   @type object;
#L091fb4.   v6:= v6.length;
#L091fb6.   if v2 >= v6 then goto L091fca;
#L091fba.   v6:= v9.[|java:io:ObjectInputStream.validations|]   @type object;
#L091fbe.   v5:= v6[v2]  @type object;
#L091fc2.   v6:= v5.[|java:io:ObjectInputStream$InputValidationDesc.priority|] ;
#L091fc6.   if v11 < v6 then goto L092006;
#L091fca.   v4:= v9.[|java:io:ObjectInputStream.validations|]   @type object;
#L091fce.   v0:= v4.length;
#L091fd0.   v6:= v0 + 1;
#L091fd4.   v6:= new [|java:io:ObjectInputStream$InputValidationDesc|][v6];
#L091fd8.   v9.[|java:io:ObjectInputStream.validations|]  := v6 @type object;
#L091fdc.   v6:= 0  @length 4;
#L091fde.   v7:= v9.[|java:io:ObjectInputStream.validations|]   @type object;
#L091fe2.   v8:= 0  @length 4;
#L091fe4.   call temp:=  [|java:lang:System.arraycopy|](v4, v6, v7, v8, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L091fea.   v6:= v9.[|java:io:ObjectInputStream.validations|]   @type object;
#L091fee.   v7:= v2 + 1;
#L091ff2.   v8:= v0 - v2  @type int;
#L091ff6.   call temp:=  [|java:lang:System.arraycopy|](v4, v2, v6, v7, v8) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L091ffc.   v6:= v9.[|java:io:ObjectInputStream.validations|]   @type object;
#L092000.   v6[v2]:= v1  @type object;
#L092004.   goto L091faa;
#L092006.   v2:= v2 + 1;
#L09200a.   goto L091fb0;
  catch  [|any|] @[L091f46..L091f62] goto L091f62;
  catch  [|any|] @[L091f6c..L091faa] goto L091f62;
  catch  [|any|] @[L091fb0..L092004] goto L091f62;

   }
    procedure [|java:lang:Class|] [|java:io:ObjectInputStream.resolveClass|] ([|java:io:ObjectInputStream|] v4 @type (this), [|java:io:ObjectStreamClass|] v5 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.resolveClass:(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L092038.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v5) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09203e.   v1:= temp  @type object;
#L092040.   if v1 != 0 then goto L09206e;
#L092044.   call temp:=  [|java:io:ObjectStreamClass.getName|](v5) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09204a.   v0:= temp  @type object;
#L09204c.   v2:= @@[|java:io:ObjectInputStream.PRIMITIVE_CLASSES|]   @type object;
#L092050.   call temp:=  [|java:util:HashMap.get|](v2, v0) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L092056.   v1:= temp  @type object;
#L092058.   v1:= ([|java:lang:Class|])v1;
#L09205c.   if v1 != 0 then goto L09206e;
#L092060.   v2:= 1  @length 4;
#L092062.   v3:= v4.[|java:io:ObjectInputStream.callerClassLoader|]   @type object;
#L092066.   call temp:=  [|java:lang:Class.forName|](v0, v2, v3) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L09206c.   v1:= temp  @type object;
#L09206e.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectInputStream.resolveObject|] ([|java:io:ObjectInputStream|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.resolveObject:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PROTECTED {
      local temp ;
      
#L092080.   return v1  @type object;

   }
    procedure [|java:lang:Class|] [|java:io:ObjectInputStream.resolveProxyClass|] ([|java:io:ObjectInputStream|] v6 @type (this), [|java:lang:String|][] v7 @type (object)) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.resolveProxyClass:([Ljava/lang/String;)Ljava/lang/Class;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L092094.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L09209a.   v3:= temp  @type object;
#L09209c.   v4:= v7.length;
#L09209e.   v2:= new [|java:lang:Class|][v4];
#L0920a2.   v1:= 0  @length 4;
#L0920a4.   v4:= v7.length;
#L0920a6.   if v1 >= v4 then goto L0920c2;
#L0920aa.   v4:= v7[v1]  @type object;
#L0920ae.   v5:= 0  @length 4;
#L0920b0.   call temp:=  [|java:lang:Class.forName|](v4, v5, v3) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L0920b6.   v4:= temp  @type object;
#L0920b8.   v2[v1]:= v4  @type object;
#L0920bc.   v1:= v1 + 1;
#L0920c0.   goto L0920a4;
#L0920c2.   call temp:=  [|java:lang:reflect:Proxy.getProxyClass|](v3, v2) @signature [|Ljava/lang/reflect/Proxy;.getProxyClass:(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Proxy|] @type static;
#L0920c8.   v4:= temp  @type object;
#L0920ca.   return v4  @type object;
#L0920cc.   v0:= Exception  @type object;
#L0920ce.   v4:= new [|java:lang:ClassNotFoundException|];
#L0920d2.   call temp:=  [|java:lang:IllegalArgumentException.toString|](v0) @signature [|Ljava/lang/IllegalArgumentException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalArgumentException|] @type virtual;
#L0920d8.   v5:= temp  @type object;
#L0920da.   call temp:=  [|java:lang:ClassNotFoundException.<init>|](v4, v5, v0) @signature [|Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:ClassNotFoundException|] @type direct;
#L0920e0.   throw v4;
  catch  [|java:lang:IllegalArgumentException|] @[L0920c2..L0920c8] goto L0920cc;

   }
    procedure [|int|] [|java:io:ObjectInputStream.skipBytes|] ([|java:io:ObjectInputStream|] v6 @type (this), [|int|] v7) @owner [|java:io:ObjectInputStream|] @signature [|Ljava/io/ObjectInputStream;.skipBytes:(I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L092104.   v3:= v6.[|java:io:ObjectInputStream.input|]   @type object;
#L092108.   if v3 != 0 then goto L09211c;
#L09210c.   v3:= new [|java:lang:NullPointerException|];
#L092110.   v4:= "source stream is null" @type (object, string);
#L092114.   call temp:=  [|java:lang:NullPointerException.<init>|](v3, v4) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L09211a.   throw v3;
#L09211c.   v0:= 0  @length 4;
#L09211e.   if v0 >= v7 then goto L09214e;
#L092122.   call temp:=  [|java:io:ObjectInputStream.checkReadPrimitiveTypes|](v6) @signature [|Ljava/io/ObjectInputStream;.checkReadPrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type direct;
#L092128.   v3:= v6.[|java:io:ObjectInputStream.primitiveData|]   @type object;
#L09212c.   v4:= v7 - v0  @type int;
#L092130.   v4:= (long)v4  @type i2l;
#L092132.   call temp:=  [|java:io:InputStream.skip|](v3, v4, v5) @signature [|Ljava/io/InputStream;.skip:(J)J|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L092138.   v1:= temp  @type wide;
#L09213a.   v3:= 0  @length wide16;
#L09213e.   v3:= cmp(v1,v3);
#L092142.   if v3 != 0 then goto L092148;
#L092146.   return v0;
#L092148.   v3:= (int)v1  @type l2i;
#L09214a.   v0:= v0 + v3  @type int;
#L09214c.   goto L09211e;
#L09214e.   v0:= v7;
#L092150.   goto L092146;

   }
record [|java:io:ObjectInputValidation|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:io:ObjectInputValidation.validateObject|] () @owner [|java:io:ObjectInputValidation|] @signature [|Ljava/io/ObjectInputValidation;.validateObject:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:ObjectOutput|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:io:DataOutput|], [|java:lang:AutoCloseable|] {
   }
    procedure [|void|] [|java:io:ObjectOutput.close|] () @owner [|java:io:ObjectOutput|] @signature [|Ljava/io/ObjectOutput;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutput.flush|] () @owner [|java:io:ObjectOutput|] @signature [|Ljava/io/ObjectOutput;.flush:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutput.write|] ([|int|] v0) @owner [|java:io:ObjectOutput|] @signature [|Ljava/io/ObjectOutput;.write:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutput.write|] ([|byte|][] v0) @owner [|java:io:ObjectOutput|] @signature [|Ljava/io/ObjectOutput;.write:([B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutput.write|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|java:io:ObjectOutput|] @signature [|Ljava/io/ObjectOutput;.write:([BII)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:io:ObjectOutput.writeObject|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:io:ObjectOutput|] @signature [|Ljava/io/ObjectOutput;.writeObject:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:io:ObjectOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:OutputStream|], [|java:io:ObjectOutput|], [|java:io:ObjectStreamConstants|] {
      [|java:io:ObjectStreamClass|] [|java:io:ObjectOutputStream.currentClass|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:ObjectOutputStream.currentHandle|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:io:ObjectOutputStream.currentObject|]    @AccessFlag PRIVATE;
      [|java:io:EmulatedFieldsForDumping|] [|java:io:ObjectOutputStream.currentPutField|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:ObjectOutputStream.enableReplace|]    @AccessFlag PRIVATE;
      [|java:io:StreamCorruptedException|] [|java:io:ObjectOutputStream.nestedException|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:ObjectOutputStream.nestedLevels|]    @AccessFlag PRIVATE;
      [|java:io:SerializationHandleMap|] [|java:io:ObjectOutputStream.objectsWritten|]    @AccessFlag PRIVATE;
      [|java:io:DataOutputStream|] [|java:io:ObjectOutputStream.output|]    @AccessFlag PRIVATE;
      [|java:io:DataOutputStream|] [|java:io:ObjectOutputStream.primitiveTypes|]    @AccessFlag PRIVATE;
      [|java:io:ByteArrayOutputStream|] [|java:io:ObjectOutputStream.primitiveTypesBuffer|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:ObjectOutputStream.protocolVersion|]    @AccessFlag PRIVATE;
      [|java:io:ObjectStreamClass|] [|java:io:ObjectOutputStream.proxyClassDesc|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:io:ObjectOutputStream.subclassOverridingImplementation|]    @AccessFlag PRIVATE;
   }
      global [|byte|] @@[|java:io:ObjectOutputStream.NOT_SC_BLOCK_DATA|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:Class|][] @@[|java:io:ObjectOutputStream.WRITE_UNSHARED_PARAM_TYPES|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:ObjectOutputStream.<clinit>|] () @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L092164.   v0:= 1  @length 4;
#L092166.   v0:= new [|java:lang:Class|][v0];
#L09216a.   v1:= 0  @length 4;
#L09216c.   v2:= new [|java:lang:Object|];
#L092170.   v0[v1]:= v2  @type object;
#L092174.   @@[|java:io:ObjectOutputStream.WRITE_UNSHARED_PARAM_TYPES|] := v0  @type object;
#L092178.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.<init>|] ([|java:io:ObjectOutputStream|] v1 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09218c.   call temp:=  [|java:io:OutputStream.<init>|](v1) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L092192.   v0:= new [|java:lang:reflect:Proxy|];
#L092196.   call temp:=  [|java:io:ObjectStreamClass.lookup|](v0) @signature [|Ljava/io/ObjectStreamClass;.lookup:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L09219c.   v0:= temp  @type object;
#L09219e.   v1.[|java:io:ObjectOutputStream.proxyClassDesc|]  := v0 @type object;
#L0921a2.   v0:= 1  @length 4;
#L0921a4.   v1.[|java:io:ObjectOutputStream.subclassOverridingImplementation|]  := v0 @boolean;
#L0921a8.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.<init>|] ([|java:io:ObjectOutputStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0921bc.   v1:= 0  @length 4;
#L0921be.   call temp:=  [|java:io:OutputStream.<init>|](v2) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L0921c4.   v0:= new [|java:lang:reflect:Proxy|];
#L0921c8.   call temp:=  [|java:io:ObjectStreamClass.lookup|](v0) @signature [|Ljava/io/ObjectStreamClass;.lookup:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0921ce.   v0:= temp  @type object;
#L0921d0.   v2.[|java:io:ObjectOutputStream.proxyClassDesc|]  := v0 @type object;
#L0921d4.   v0:= instanceof @varname v3 @type [|java:io:DataOutputStream|];
#L0921d8.   if v0 == 0 then goto L09221c;
#L0921dc.   v3:= ([|java:io:DataOutputStream|])v3;
#L0921e0.   v2.[|java:io:ObjectOutputStream.output|]  := v3 @type object;
#L0921e4.   v2.[|java:io:ObjectOutputStream.enableReplace|]  := v1 @boolean;
#L0921e8.   v0:= 2  @length 4;
#L0921ea.   v2.[|java:io:ObjectOutputStream.protocolVersion|]  := v0;
#L0921ee.   v2.[|java:io:ObjectOutputStream.subclassOverridingImplementation|]  := v1 @boolean;
#L0921f2.   call temp:=  [|java:io:ObjectOutputStream.resetState|](v2) @signature [|Ljava/io/ObjectOutputStream;.resetState:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0921f8.   v0:= new [|java:io:StreamCorruptedException|];
#L0921fc.   call temp:=  [|java:io:StreamCorruptedException.<init>|](v0) @signature [|Ljava/io/StreamCorruptedException;.<init>:()V|] @classDescriptor [|java:io:StreamCorruptedException|] @type direct;
#L092202.   v2.[|java:io:ObjectOutputStream.nestedException|]  := v0 @type object;
#L092206.   v0:= v2.[|java:io:ObjectOutputStream.output|]   @type object;
#L09220a.   v2.[|java:io:ObjectOutputStream.primitiveTypes|]  := v0 @type object;
#L09220e.   call temp:=  [|java:io:ObjectOutputStream.writeStreamHeader|](v2) @signature [|Ljava/io/ObjectOutputStream;.writeStreamHeader:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092214.   v0:= 0  @length 4;
#L092216.   v2.[|java:io:ObjectOutputStream.primitiveTypes|]  := v0 @type object;
#L09221a.   return @void ;
#L09221c.   v0:= new [|java:io:DataOutputStream|];
#L092220.   call temp:=  [|java:io:DataOutputStream.<init>|](v0, v3) @signature [|Ljava/io/DataOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:DataOutputStream|] @type direct;
#L092226.   v3:= v0  @type object;
#L092228.   goto L0921e0;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|] ([|java:io:ObjectOutputStream|] v2 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L09223c.   v0:= v2.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L092240.   if v0 != 0 then goto L092268;
#L092244.   v0:= new [|java:io:ByteArrayOutputStream|];
#L092248.   v1:= 128  @length 16;
#L09224c.   call temp:=  [|java:io:ByteArrayOutputStream.<init>|](v0, v1) @signature [|Ljava/io/ByteArrayOutputStream;.<init>:(I)V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type direct;
#L092252.   v2.[|java:io:ObjectOutputStream.primitiveTypesBuffer|]  := v0 @type object;
#L092256.   v0:= new [|java:io:DataOutputStream|];
#L09225a.   v1:= v2.[|java:io:ObjectOutputStream.primitiveTypesBuffer|]   @type object;
#L09225e.   call temp:=  [|java:io:DataOutputStream.<init>|](v0, v1) @signature [|Ljava/io/DataOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:DataOutputStream|] @type direct;
#L092264.   v2.[|java:io:ObjectOutputStream.primitiveTypes|]  := v0 @type object;
#L092268.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.computePutField|] ([|java:io:ObjectOutputStream|] v2 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.computePutField:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L09227c.   v0:= new [|java:io:EmulatedFieldsForDumping|];
#L092280.   v1:= v2.[|java:io:ObjectOutputStream.currentClass|]   @type object;
#L092284.   call temp:=  [|java:io:EmulatedFieldsForDumping.<init>|](v0, v2, v1) @signature [|Ljava/io/EmulatedFieldsForDumping;.<init>:(Ljava/io/ObjectOutputStream;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:EmulatedFieldsForDumping|] @type direct;
#L09228a.   v2.[|java:io:ObjectOutputStream.currentPutField|]  := v0 @type object;
#L09228e.   return @void ;

   }
    procedure [|int|] [|java:io:ObjectOutputStream.dumpCycle|] ([|java:io:ObjectOutputStream|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.dumpCycle:(Ljava/lang/Object;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0922a0.   v1:= -1  @length 4;
#L0922a2.   v2:= v3.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L0922a6.   call temp:=  [|java:io:SerializationHandleMap.get|](v2, v4) @signature [|Ljava/io/SerializationHandleMap;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L0922ac.   v0:= temp;
#L0922ae.   if v0 == v1 then goto L0922ba;
#L0922b2.   call temp:=  [|java:io:ObjectOutputStream.writeCyclicReference|](v3, v0) @signature [|Ljava/io/ObjectOutputStream;.writeCyclicReference:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0922b8.   return v0;
#L0922ba.   v0:= v1;
#L0922bc.   goto L0922b8;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectOutputStream.getFieldL|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.getFieldL:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:io:ObjectOutputStream.nextHandle|] ([|java:io:ObjectOutputStream|] v2 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.nextHandle:()I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0922d0.   v0:= v2.[|java:io:ObjectOutputStream.currentHandle|] ;
#L0922d4.   v1:= v0 + 1;
#L0922d8.   v2.[|java:io:ObjectOutputStream.currentHandle|]  := v1;
#L0922dc.   return v0;

   }
    procedure [|int|] [|java:io:ObjectOutputStream.registerObjectWritten|] ([|java:io:ObjectOutputStream|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.registerObjectWritten:(Ljava/lang/Object;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0922f0.   call temp:=  [|java:io:ObjectOutputStream.nextHandle|](v2) @signature [|Ljava/io/ObjectOutputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0922f6.   v0:= temp;
#L0922f8.   v1:= v2.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L0922fc.   call temp:=  [|java:io:SerializationHandleMap.put|](v1, v3, v0) @signature [|Ljava/io/SerializationHandleMap;.put:(Ljava/lang/Object;I)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L092302.   return v0;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.removeUnsharedReference|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|int|] v3) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.removeUnsharedReference:(Ljava/lang/Object;I)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L092314.   v0:= -1  @length 4;
#L092316.   if v3 == v0 then goto L092326;
#L09231a.   v0:= v1.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L09231e.   call temp:=  [|java:io:SerializationHandleMap.put|](v0, v2, v3) @signature [|Ljava/io/SerializationHandleMap;.put:(Ljava/lang/Object;I)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L092324.   return @void ;
#L092326.   v0:= v1.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L09232a.   call temp:=  [|java:io:SerializationHandleMap.remove|](v0, v2) @signature [|Ljava/io/SerializationHandleMap;.remove:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L092330.   goto L092324;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.resetSeenObjects|] ([|java:io:ObjectOutputStream|] v1 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.resetSeenObjects:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L092344.   v0:= new [|java:io:SerializationHandleMap|];
#L092348.   call temp:=  [|java:io:SerializationHandleMap.<init>|](v0) @signature [|Ljava/io/SerializationHandleMap;.<init>:()V|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L09234e.   v1.[|java:io:ObjectOutputStream.objectsWritten|]  := v0 @type object;
#L092352.   v0:= 8257536  @length high16;
#L092356.   v1.[|java:io:ObjectOutputStream.currentHandle|]  := v0;
#L09235a.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.resetState|] ([|java:io:ObjectOutputStream|] v1 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.resetState:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L09236c.   call temp:=  [|java:io:ObjectOutputStream.resetSeenObjects|](v1) @signature [|Ljava/io/ObjectOutputStream;.resetSeenObjects:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092372.   v0:= 0  @length 4;
#L092374.   v1.[|java:io:ObjectOutputStream.nestedLevels|]  := v0;
#L092378.   return @void ;

   }
    procedure [|int|] [|java:io:ObjectOutputStream.writeClassDesc|] ([|java:io:ObjectOutputStream|] v8 @type (this), [|java:io:ObjectStreamClass|] v9 @type (object), [|boolean|] v10) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeClassDesc:(Ljava/io/ObjectStreamClass;Z)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L09238c.   v7:= 120  @length 16;
#L092390.   v5:= -1  @length 4;
#L092392.   if v9 != 0 then goto L0923a0;
#L092396.   call temp:=  [|java:io:ObjectOutputStream.writeNull|](v8) @signature [|Ljava/io/ObjectOutputStream;.writeNull:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09239c.   v1:= v5;
#L09239e.   return v1;
#L0923a0.   v1:= -1  @length 4;
#L0923a2.   if v10 != 0 then goto L0923ae;
#L0923a6.   call temp:=  [|java:io:ObjectOutputStream.dumpCycle|](v8, v9) @signature [|Ljava/io/ObjectOutputStream;.dumpCycle:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0923ac.   v1:= temp;
#L0923ae.   if v1 != v5 then goto L09239e;
#L0923b2.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v9) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0923b8.   v0:= temp  @type object;
#L0923ba.   v4:= -1  @length 4;
#L0923bc.   if v10 == 0 then goto L0923cc;
#L0923c0.   v5:= v8.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L0923c4.   call temp:=  [|java:io:SerializationHandleMap.get|](v5, v9) @signature [|Ljava/io/SerializationHandleMap;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L0923ca.   v4:= temp;
#L0923cc.   call temp:=  [|java:io:ObjectOutputStream.registerObjectWritten|](v8, v9) @signature [|Ljava/io/ObjectOutputStream;.registerObjectWritten:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0923d2.   v1:= temp;
#L0923d4.   call temp:=  [|java:io:ObjectStreamClass.isProxy|](v9) @signature [|Ljava/io/ObjectStreamClass;.isProxy:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0923da.   v5:= temp;
#L0923dc.   if v5 == 0 then goto L09244e;
#L0923e0.   v5:= v8.[|java:io:ObjectOutputStream.output|]   @type object;
#L0923e4.   v6:= 125  @length 16;
#L0923e8.   call temp:=  [|java:io:DataOutputStream.writeByte|](v5, v6) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0923ee.   call temp:=  [|java:lang:Class.getInterfaces|](v0) @signature [|Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0923f4.   v3:= temp  @type object;
#L0923f6.   v5:= v8.[|java:io:ObjectOutputStream.output|]   @type object;
#L0923fa.   v6:= v3.length;
#L0923fc.   call temp:=  [|java:io:DataOutputStream.writeInt|](v5, v6) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092402.   v2:= 0  @length 4;
#L092404.   v5:= v3.length;
#L092406.   if v2 >= v5 then goto L092426;
#L09240a.   v5:= v8.[|java:io:ObjectOutputStream.output|]   @type object;
#L09240e.   v6:= v3[v2]  @type object;
#L092412.   call temp:=  [|java:lang:Class.getName|](v6) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L092418.   v6:= temp  @type object;
#L09241a.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v5, v6) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092420.   v2:= v2 + 1;
#L092424.   goto L092404;
#L092426.   call temp:=  [|java:io:ObjectOutputStream.annotateProxyClass|](v8, v0) @signature [|Ljava/io/ObjectOutputStream;.annotateProxyClass:(Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L09242c.   v5:= v8.[|java:io:ObjectOutputStream.output|]   @type object;
#L092430.   call temp:=  [|java:io:DataOutputStream.writeByte|](v5, v7) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092436.   v5:= v8.[|java:io:ObjectOutputStream.proxyClassDesc|]   @type object;
#L09243a.   v6:= 0  @length 4;
#L09243c.   call temp:=  [|java:io:ObjectOutputStream.writeClassDesc|](v8, v5, v6) @signature [|Ljava/io/ObjectOutputStream;.writeClassDesc:(Ljava/io/ObjectStreamClass;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092442.   if v10 == 0 then goto L09239e;
#L092446.   call temp:=  [|java:io:ObjectOutputStream.removeUnsharedReference|](v8, v9, v4) @signature [|Ljava/io/ObjectOutputStream;.removeUnsharedReference:(Ljava/lang/Object;I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09244c.   goto L09239e;
#L09244e.   v5:= v8.[|java:io:ObjectOutputStream.output|]   @type object;
#L092452.   v6:= 114  @length 16;
#L092456.   call temp:=  [|java:io:DataOutputStream.writeByte|](v5, v6) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09245c.   v5:= v8.[|java:io:ObjectOutputStream.protocolVersion|] ;
#L092460.   v6:= 1  @length 4;
#L092462.   if v5 != v6 then goto L09249c;
#L092466.   call temp:=  [|java:io:ObjectOutputStream.writeNewClassDesc|](v8, v9) @signature [|Ljava/io/ObjectOutputStream;.writeNewClassDesc:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09246c.   call temp:=  [|java:io:ObjectOutputStream.annotateClass|](v8, v0) @signature [|Ljava/io/ObjectOutputStream;.annotateClass:(Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092472.   call temp:=  [|java:io:ObjectOutputStream.drain|](v8) @signature [|Ljava/io/ObjectOutputStream;.drain:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092478.   v5:= v8.[|java:io:ObjectOutputStream.output|]   @type object;
#L09247c.   call temp:=  [|java:io:DataOutputStream.writeByte|](v5, v7) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092482.   call temp:=  [|java:io:ObjectStreamClass.getSuperclass|](v9) @signature [|Ljava/io/ObjectStreamClass;.getSuperclass:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092488.   v5:= temp  @type object;
#L09248a.   call temp:=  [|java:io:ObjectOutputStream.writeClassDesc|](v8, v5, v10) @signature [|Ljava/io/ObjectOutputStream;.writeClassDesc:(Ljava/io/ObjectStreamClass;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092490.   if v10 == 0 then goto L09239e;
#L092494.   call temp:=  [|java:io:ObjectOutputStream.removeUnsharedReference|](v8, v9, v4) @signature [|Ljava/io/ObjectOutputStream;.removeUnsharedReference:(Ljava/lang/Object;I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09249a.   goto L09239e;
#L09249c.   v5:= v8.[|java:io:ObjectOutputStream.output|]   @type object;
#L0924a0.   v8.[|java:io:ObjectOutputStream.primitiveTypes|]  := v5 @type object;
#L0924a4.   call temp:=  [|java:io:ObjectOutputStream.writeClassDescriptor|](v8, v9) @signature [|Ljava/io/ObjectOutputStream;.writeClassDescriptor:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0924aa.   v5:= 0  @length 4;
#L0924ac.   v8.[|java:io:ObjectOutputStream.primitiveTypes|]  := v5 @type object;
#L0924b0.   goto L09246c;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeCyclicReference|] ([|java:io:ObjectOutputStream|] v2 @type (this), [|int|] v3) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeCyclicReference:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0924c4.   v0:= v2.[|java:io:ObjectOutputStream.output|]   @type object;
#L0924c8.   v1:= 113  @length 16;
#L0924cc.   call temp:=  [|java:io:DataOutputStream.writeByte|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0924d2.   v0:= v2.[|java:io:ObjectOutputStream.output|]   @type object;
#L0924d6.   call temp:=  [|java:io:DataOutputStream.writeInt|](v0, v3) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0924dc.   return @void ;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectOutputStream.writeEnumDesc|] ([|java:io:ObjectOutputStream|] v7 @type (this), [|java:lang:Class|] v8 @type (object), [|java:io:ObjectStreamClass|] v9 @type (object), [|boolean|] v10) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeEnumDesc:(Ljava/lang/Class;Ljava/io/ObjectStreamClass;Z)Ljava/io/ObjectStreamClass;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0924f0.   v6:= 18  @length 16;
#L0924f4.   call temp:=  [|java:io:ObjectStreamClass.setFlags|](v9, v6) @signature [|Ljava/io/ObjectStreamClass;.setFlags:(B)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0924fa.   v2:= -1  @length 4;
#L0924fc.   if v10 == 0 then goto L09250c;
#L092500.   v4:= v7.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L092504.   call temp:=  [|java:io:SerializationHandleMap.get|](v4, v9) @signature [|Ljava/io/SerializationHandleMap;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L09250a.   v2:= temp;
#L09250c.   v1:= -1  @length 4;
#L09250e.   if v10 != 0 then goto L09251a;
#L092512.   call temp:=  [|java:io:ObjectOutputStream.dumpCycle|](v7, v9) @signature [|Ljava/io/ObjectOutputStream;.dumpCycle:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092518.   v1:= temp;
#L09251a.   v4:= -1  @length 4;
#L09251c.   if v1 != v4 then goto L092590;
#L092520.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v9) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092526.   v0:= temp  @type object;
#L092528.   call temp:=  [|java:io:ObjectOutputStream.registerObjectWritten|](v7, v9) @signature [|Ljava/io/ObjectOutputStream;.registerObjectWritten:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09252e.   v4:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L092532.   v5:= 114  @length 16;
#L092536.   call temp:=  [|java:io:DataOutputStream.writeByte|](v4, v5) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09253c.   v4:= v7.[|java:io:ObjectOutputStream.protocolVersion|] ;
#L092540.   v5:= 1  @length 4;
#L092542.   if v4 != v5 then goto L092592;
#L092546.   call temp:=  [|java:io:ObjectOutputStream.writeNewClassDesc|](v7, v9) @signature [|Ljava/io/ObjectOutputStream;.writeNewClassDesc:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09254c.   call temp:=  [|java:io:ObjectOutputStream.annotateClass|](v7, v0) @signature [|Ljava/io/ObjectOutputStream;.annotateClass:(Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092552.   call temp:=  [|java:io:ObjectOutputStream.drain|](v7) @signature [|Ljava/io/ObjectOutputStream;.drain:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092558.   v4:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L09255c.   v5:= 120  @length 16;
#L092560.   call temp:=  [|java:io:DataOutputStream.writeByte|](v4, v5) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092566.   call temp:=  [|java:io:ObjectStreamClass.getSuperclass|](v9) @signature [|Ljava/io/ObjectStreamClass;.getSuperclass:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09256c.   v3:= temp  @type object;
#L09256e.   if v3 == 0 then goto L0925a8;
#L092572.   call temp:=  [|java:io:ObjectStreamClass.setFlags|](v3, v6) @signature [|Ljava/io/ObjectStreamClass;.setFlags:(B)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092578.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v3) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09257e.   v4:= temp  @type object;
#L092580.   call temp:=  [|java:io:ObjectOutputStream.writeEnumDesc|](v7, v4, v3, v10) @signature [|Ljava/io/ObjectOutputStream;.writeEnumDesc:(Ljava/lang/Class;Ljava/io/ObjectStreamClass;Z)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092586.   if v10 == 0 then goto L092590;
#L09258a.   call temp:=  [|java:io:ObjectOutputStream.removeUnsharedReference|](v7, v9, v2) @signature [|Ljava/io/ObjectOutputStream;.removeUnsharedReference:(Ljava/lang/Object;I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092590.   return v9  @type object;
#L092592.   v4:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L092596.   v7.[|java:io:ObjectOutputStream.primitiveTypes|]  := v4 @type object;
#L09259a.   call temp:=  [|java:io:ObjectOutputStream.writeClassDescriptor|](v7, v9) @signature [|Ljava/io/ObjectOutputStream;.writeClassDescriptor:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0925a0.   v4:= 0  @length 4;
#L0925a2.   v7.[|java:io:ObjectOutputStream.primitiveTypes|]  := v4 @type object;
#L0925a6.   goto L09254c;
#L0925a8.   v4:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L0925ac.   v5:= 112  @length 16;
#L0925b0.   call temp:=  [|java:io:DataOutputStream.writeByte|](v4, v5) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0925b6.   goto L092586;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeFieldDescriptors|] ([|java:io:ObjectOutputStream|] v7 @type (this), [|java:io:ObjectStreamClass|] v8 @type (object), [|boolean|] v9) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeFieldDescriptors:(Ljava/io/ObjectStreamClass;Z)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0925c8.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v8) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0925ce.   v4:= temp  @type object;
#L0925d0.   v2:= 0  @length 4;
#L0925d2.   v1:= 0  @length 4;
#L0925d4.   if v9 != 0 then goto L0925ea;
#L0925d8.   v6:= @@[|java:io:ObjectStreamClass.STRINGCLASS|]   @type object;
#L0925dc.   if v4 == v6 then goto L0925ea;
#L0925e0.   call temp:=  [|java:io:ObjectStreamClass.fields|](v8) @signature [|Ljava/io/ObjectStreamClass;.fields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0925e6.   v2:= temp  @type object;
#L0925e8.   v1:= v2.length;
#L0925ea.   v6:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L0925ee.   call temp:=  [|java:io:DataOutputStream.writeShort|](v6, v1) @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0925f4.   v3:= 0  @length 4;
#L0925f6.   if v3 >= v1 then goto L092622;
#L0925fa.   v0:= v2[v3]  @type object;
#L0925fe.   v6:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L092602.   call temp:=  [|java:io:ObjectStreamField.writeField|](v0, v6) @signature [|Ljava/io/ObjectStreamField;.writeField:(Ljava/io/DataOutputStream;)Z|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L092608.   v5:= temp;
#L09260a.   if v5 != 0 then goto L09261c;
#L09260e.   call temp:=  [|java:io:ObjectStreamField.getTypeString|](v0) @signature [|Ljava/io/ObjectStreamField;.getTypeString:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L092614.   v6:= temp  @type object;
#L092616.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v7, v6) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L09261c.   v3:= v3 + 1;
#L092620.   goto L0925f6;
#L092622.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeFieldValues|] ([|java:io:ObjectOutputStream|] v11 @type (this), [|java:io:EmulatedFieldsForDumping|] v12 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeFieldValues:(Ljava/io/EmulatedFieldsForDumping;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L092634.   v8:= 0  @length 4;
#L092636.   call temp:=  [|java:io:EmulatedFieldsForDumping.emulatedFields|](v12) @signature [|Ljava/io/EmulatedFieldsForDumping;.emulatedFields:()Ljava/io/EmulatedFields;|] @classDescriptor [|java:io:EmulatedFieldsForDumping|] @type virtual;
#L09263c.   v0:= temp  @type object;
#L09263e.   call temp:=  [|java:io:EmulatedFields.slots|](v0) @signature [|Ljava/io/EmulatedFields;.slots:()[Ljava/io/EmulatedFields$ObjectSlot;|] @classDescriptor [|java:io:EmulatedFields|] @type virtual;
#L092644.   v1:= temp  @type object;
#L092646.   v4:= v1.length;
#L092648.   v3:= 0  @length 4;
#L09264a.   if v3 >= v4 then goto L0927be;
#L09264e.   v5:= v1[v3]  @type object;
#L092652.   call temp:=  [|java:io:EmulatedFields$ObjectSlot.getFieldValue|](v5) @signature [|Ljava/io/EmulatedFields$ObjectSlot;.getFieldValue:()Ljava/lang/Object;|] @classDescriptor [|java:io:EmulatedFields$ObjectSlot|] @type virtual;
#L092658.   v2:= temp  @type object;
#L09265a.   call temp:=  [|java:io:EmulatedFields$ObjectSlot.getField|](v5) @signature [|Ljava/io/EmulatedFields$ObjectSlot;.getField:()Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:EmulatedFields$ObjectSlot|] @type virtual;
#L092660.   v7:= temp  @type object;
#L092662.   call temp:=  [|java:io:ObjectStreamField.getType|](v7) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L092668.   v6:= temp  @type object;
#L09266a.   v7:= @@[|java:lang:Integer.TYPE|]   @type object;
#L09266e.   if v6 != v7 then goto L092696;
#L092672.   v9:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L092676.   if v2 == 0 then goto L092692;
#L09267a.   v2:= ([|java:lang:Integer|])v2;
#L09267e.   call temp:=  [|java:lang:Integer.intValue|](v2) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L092684.   v7:= temp;
#L092686.   call temp:=  [|java:io:DataOutputStream.writeInt|](v9, v7) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09268c.   v3:= v3 + 1;
#L092690.   goto L09264a;
#L092692.   v7:= v8;
#L092694.   goto L092686;
#L092696.   v7:= @@[|java:lang:Byte.TYPE|]   @type object;
#L09269a.   if v6 != v7 then goto L0926be;
#L09269e.   v9:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L0926a2.   if v2 == 0 then goto L0926ba;
#L0926a6.   v2:= ([|java:lang:Byte|])v2;
#L0926aa.   call temp:=  [|java:lang:Byte.byteValue|](v2) @signature [|Ljava/lang/Byte;.byteValue:()B|] @classDescriptor [|java:lang:Byte|] @type virtual;
#L0926b0.   v7:= temp;
#L0926b2.   call temp:=  [|java:io:DataOutputStream.writeByte|](v9, v7) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0926b8.   goto L09268c;
#L0926ba.   v7:= v8;
#L0926bc.   goto L0926b2;
#L0926be.   v7:= @@[|java:lang:Character.TYPE|]   @type object;
#L0926c2.   if v6 != v7 then goto L0926e6;
#L0926c6.   v9:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L0926ca.   if v2 == 0 then goto L0926e2;
#L0926ce.   v2:= ([|java:lang:Character|])v2;
#L0926d2.   call temp:=  [|java:lang:Character.charValue|](v2) @signature [|Ljava/lang/Character;.charValue:()C|] @classDescriptor [|java:lang:Character|] @type virtual;
#L0926d8.   v7:= temp;
#L0926da.   call temp:=  [|java:io:DataOutputStream.writeChar|](v9, v7) @signature [|Ljava/io/DataOutputStream;.writeChar:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0926e0.   goto L09268c;
#L0926e2.   v7:= v8;
#L0926e4.   goto L0926da;
#L0926e6.   v7:= @@[|java:lang:Short.TYPE|]   @type object;
#L0926ea.   if v6 != v7 then goto L09270e;
#L0926ee.   v9:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L0926f2.   if v2 == 0 then goto L09270a;
#L0926f6.   v2:= ([|java:lang:Short|])v2;
#L0926fa.   call temp:=  [|java:lang:Short.shortValue|](v2) @signature [|Ljava/lang/Short;.shortValue:()S|] @classDescriptor [|java:lang:Short|] @type virtual;
#L092700.   v7:= temp;
#L092702.   call temp:=  [|java:io:DataOutputStream.writeShort|](v9, v7) @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092708.   goto L09268c;
#L09270a.   v7:= v8;
#L09270c.   goto L092702;
#L09270e.   v7:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L092712.   if v6 != v7 then goto L092736;
#L092716.   v9:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L09271a.   if v2 == 0 then goto L092732;
#L09271e.   v2:= ([|java:lang:Boolean|])v2;
#L092722.   call temp:=  [|java:lang:Boolean.booleanValue|](v2) @signature [|Ljava/lang/Boolean;.booleanValue:()Z|] @classDescriptor [|java:lang:Boolean|] @type virtual;
#L092728.   v7:= temp;
#L09272a.   call temp:=  [|java:io:DataOutputStream.writeBoolean|](v9, v7) @signature [|Ljava/io/DataOutputStream;.writeBoolean:(Z)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092730.   goto L09268c;
#L092732.   v7:= v8;
#L092734.   goto L09272a;
#L092736.   v7:= @@[|java:lang:Long.TYPE|]   @type object;
#L09273a.   if v6 != v7 then goto L092760;
#L09273e.   v7:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L092742.   if v2 == 0 then goto L09275a;
#L092746.   v2:= ([|java:lang:Long|])v2;
#L09274a.   call temp:=  [|java:lang:Long.longValue|](v2) @signature [|Ljava/lang/Long;.longValue:()J|] @classDescriptor [|java:lang:Long|] @type virtual;
#L092750.   v9:= temp  @type wide;
#L092752.   call temp:=  [|java:io:DataOutputStream.writeLong|](v7, v9, v10) @signature [|Ljava/io/DataOutputStream;.writeLong:(J)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092758.   goto L09268c;
#L09275a.   v9:= 0  @length wide16;
#L09275e.   goto L092752;
#L092760.   v7:= @@[|java:lang:Float.TYPE|]   @type object;
#L092764.   if v6 != v7 then goto L092788;
#L092768.   v9:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L09276c.   if v2 == 0 then goto L092784;
#L092770.   v2:= ([|java:lang:Float|])v2;
#L092774.   call temp:=  [|java:lang:Float.floatValue|](v2) @signature [|Ljava/lang/Float;.floatValue:()F|] @classDescriptor [|java:lang:Float|] @type virtual;
#L09277a.   v7:= temp;
#L09277c.   call temp:=  [|java:io:DataOutputStream.writeFloat|](v9, v7) @signature [|Ljava/io/DataOutputStream;.writeFloat:(F)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092782.   goto L09268c;
#L092784.   v7:= 0  @length 4;
#L092786.   goto L09277c;
#L092788.   v7:= @@[|java:lang:Double.TYPE|]   @type object;
#L09278c.   if v6 != v7 then goto L0927b4;
#L092790.   v7:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L092794.   if v2 == 0 then goto L0927ae;
#L092798.   v2:= ([|java:lang:Double|])v2;
#L09279c.   call temp:=  [|java:lang:Double.doubleValue|](v2) @signature [|Ljava/lang/Double;.doubleValue:()D|] @classDescriptor [|java:lang:Double|] @type virtual;
#L0927a2.   v9:= temp  @type wide;
#L0927a4.   call temp:=  [|java:io:DataOutputStream.writeDouble|](v7, v9, v10) @signature [|Ljava/io/DataOutputStream;.writeDouble:(D)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0927aa.   goto L09268c;
#L0927ae.   v9:= 0  @length wide16;
#L0927b2.   goto L0927a4;
#L0927b4.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v11, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0927ba.   goto L09268c;
#L0927be.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeFieldValues|] ([|java:io:ObjectOutputStream|] v12 @type (this), [|java:lang:Object|] v13 @type (object), [|java:io:ObjectStreamClass|] v14 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeFieldValues:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L0927d0.   call temp:=  [|java:io:ObjectStreamClass.fields|](v14) @signature [|Ljava/io/ObjectStreamClass;.fields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0927d6.   v0:= temp  @type object;
#L0927d8.   v5:= v0.length;
#L0927da.   v3:= 0  @length 4;
#L0927dc.   if v3 >= v5 then goto L092984;
#L0927e0.   v2:= v0[v3]  @type object;
#L0927e4.   call temp:=  [|java:io:ObjectStreamField.getTypeInternal|](v2) @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0927ea.   v8:= temp  @type object;
#L0927ec.   call temp:=  [|java:io:ObjectStreamClass.getReflectionField|](v14, v2) @signature [|Ljava/io/ObjectStreamClass;.getReflectionField:(Ljava/io/ObjectStreamField;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0927f2.   v1:= temp  @type object;
#L0927f4.   if v1 != 0 then goto L092864;
#L0927f8.   v9:= new [|java:io:InvalidClassException|];
#L0927fc.   v10:= new [|java:lang:StringBuilder|];
#L092800.   call temp:=  [|java:lang:StringBuilder.<init>|](v10) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L092806.   call temp:=  [|java:io:ObjectStreamClass.getName|](v14) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09280c.   v11:= temp  @type object;
#L09280e.   call temp:=  [|java:lang:StringBuilder.append|](v10, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L092814.   v10:= temp  @type object;
#L092816.   v11:= " doesn't have a field " @type (object, string);
#L09281a.   call temp:=  [|java:lang:StringBuilder.append|](v10, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L092820.   v10:= temp  @type object;
#L092822.   call temp:=  [|java:io:ObjectStreamField.getName|](v2) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L092828.   v11:= temp  @type object;
#L09282a.   call temp:=  [|java:lang:StringBuilder.append|](v10, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L092830.   v10:= temp  @type object;
#L092832.   v11:= " of type " @type (object, string);
#L092836.   call temp:=  [|java:lang:StringBuilder.append|](v10, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09283c.   v10:= temp  @type object;
#L09283e.   call temp:=  [|java:lang:StringBuilder.append|](v10, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L092844.   v10:= temp  @type object;
#L092846.   call temp:=  [|java:lang:StringBuilder.toString|](v10) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09284c.   v10:= temp  @type object;
#L09284e.   call temp:=  [|java:io:InvalidClassException.<init>|](v9, v10) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L092854.   throw v9;
#L092856.   v4:= Exception  @type object;
#L092858.   v9:= new [|java:lang:AssertionError|];
#L09285c.   call temp:=  [|java:lang:AssertionError.<init>|](v9, v4) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L092862.   throw v9;
#L092864.   v9:= @@[|java:lang:Byte.TYPE|]   @type object;
#L092868.   if v8 != v9 then goto L092884;
#L09286c.   v9:= v12.[|java:io:ObjectOutputStream.output|]   @type object;
#L092870.   call temp:=  [|java:lang:reflect:Field.getByte|](v1, v13) @signature [|Ljava/lang/reflect/Field;.getByte:(Ljava/lang/Object;)B|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L092876.   v10:= temp;
#L092878.   call temp:=  [|java:io:DataOutputStream.writeByte|](v9, v10) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09287e.   v3:= v3 + 1;
#L092882.   goto L0927dc;
#L092884.   v9:= @@[|java:lang:Character.TYPE|]   @type object;
#L092888.   if v8 != v9 then goto L0928b6;
#L09288c.   v9:= v12.[|java:io:ObjectOutputStream.output|]   @type object;
#L092890.   call temp:=  [|java:lang:reflect:Field.getChar|](v1, v13) @signature [|Ljava/lang/reflect/Field;.getChar:(Ljava/lang/Object;)C|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L092896.   v10:= temp;
#L092898.   call temp:=  [|java:io:DataOutputStream.writeChar|](v9, v10) @signature [|Ljava/io/DataOutputStream;.writeChar:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09289e.   goto L09287e;
#L0928a0.   v6:= Exception  @type object;
#L0928a2.   v9:= new [|java:io:InvalidClassException|];
#L0928a6.   call temp:=  [|java:io:ObjectStreamClass.getName|](v14) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0928ac.   v10:= temp  @type object;
#L0928ae.   call temp:=  [|java:io:InvalidClassException.<init>|](v9, v10) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L0928b4.   throw v9;
#L0928b6.   v9:= @@[|java:lang:Double.TYPE|]   @type object;
#L0928ba.   if v8 != v9 then goto L0928d2;
#L0928be.   v9:= v12.[|java:io:ObjectOutputStream.output|]   @type object;
#L0928c2.   call temp:=  [|java:lang:reflect:Field.getDouble|](v1, v13) @signature [|Ljava/lang/reflect/Field;.getDouble:(Ljava/lang/Object;)D|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0928c8.   v10:= temp  @type wide;
#L0928ca.   call temp:=  [|java:io:DataOutputStream.writeDouble|](v9, v10, v11) @signature [|Ljava/io/DataOutputStream;.writeDouble:(D)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0928d0.   goto L09287e;
#L0928d2.   v9:= @@[|java:lang:Float.TYPE|]   @type object;
#L0928d6.   if v8 != v9 then goto L0928ee;
#L0928da.   v9:= v12.[|java:io:ObjectOutputStream.output|]   @type object;
#L0928de.   call temp:=  [|java:lang:reflect:Field.getFloat|](v1, v13) @signature [|Ljava/lang/reflect/Field;.getFloat:(Ljava/lang/Object;)F|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0928e4.   v10:= temp;
#L0928e6.   call temp:=  [|java:io:DataOutputStream.writeFloat|](v9, v10) @signature [|Ljava/io/DataOutputStream;.writeFloat:(F)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0928ec.   goto L09287e;
#L0928ee.   v9:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0928f2.   if v8 != v9 then goto L09290a;
#L0928f6.   v9:= v12.[|java:io:ObjectOutputStream.output|]   @type object;
#L0928fa.   call temp:=  [|java:lang:reflect:Field.getInt|](v1, v13) @signature [|Ljava/lang/reflect/Field;.getInt:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L092900.   v10:= temp;
#L092902.   call temp:=  [|java:io:DataOutputStream.writeInt|](v9, v10) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092908.   goto L09287e;
#L09290a.   v9:= @@[|java:lang:Long.TYPE|]   @type object;
#L09290e.   if v8 != v9 then goto L092926;
#L092912.   v9:= v12.[|java:io:ObjectOutputStream.output|]   @type object;
#L092916.   call temp:=  [|java:lang:reflect:Field.getLong|](v1, v13) @signature [|Ljava/lang/reflect/Field;.getLong:(Ljava/lang/Object;)J|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L09291c.   v10:= temp  @type wide;
#L09291e.   call temp:=  [|java:io:DataOutputStream.writeLong|](v9, v10, v11) @signature [|Ljava/io/DataOutputStream;.writeLong:(J)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092924.   goto L09287e;
#L092926.   v9:= @@[|java:lang:Short.TYPE|]   @type object;
#L09292a.   if v8 != v9 then goto L092942;
#L09292e.   v9:= v12.[|java:io:ObjectOutputStream.output|]   @type object;
#L092932.   call temp:=  [|java:lang:reflect:Field.getShort|](v1, v13) @signature [|Ljava/lang/reflect/Field;.getShort:(Ljava/lang/Object;)S|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L092938.   v10:= temp;
#L09293a.   call temp:=  [|java:io:DataOutputStream.writeShort|](v9, v10) @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092940.   goto L09287e;
#L092942.   v9:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L092946.   if v8 != v9 then goto L09295e;
#L09294a.   v9:= v12.[|java:io:ObjectOutputStream.output|]   @type object;
#L09294e.   call temp:=  [|java:lang:reflect:Field.getBoolean|](v1, v13) @signature [|Ljava/lang/reflect/Field;.getBoolean:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L092954.   v10:= temp;
#L092956.   call temp:=  [|java:io:DataOutputStream.writeBoolean|](v9, v10) @signature [|Ljava/io/DataOutputStream;.writeBoolean:(Z)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09295c.   goto L09287e;
#L09295e.   call temp:=  [|java:lang:reflect:Field.get|](v1, v13) @signature [|Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L092964.   v7:= temp  @type object;
#L092966.   call temp:=  [|java:io:ObjectStreamField.isUnshared|](v2) @signature [|Ljava/io/ObjectStreamField;.isUnshared:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L09296c.   v9:= temp;
#L09296e.   if v9 == 0 then goto L09297a;
#L092972.   call temp:=  [|java:io:ObjectOutputStream.writeUnshared|](v12, v7) @signature [|Ljava/io/ObjectOutputStream;.writeUnshared:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092978.   goto L09287e;
#L09297a.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v12, v7) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092980.   goto L09287e;
#L092984.   return @void ;
  catch  [|java:lang:IllegalAccessException|] @[L0927e4..L092856] goto L092856;
  catch  [|java:lang:NoSuchFieldError|] @[L0927e4..L092856] goto L0928a0;
  catch  [|java:lang:IllegalAccessException|] @[L092864..L09289e] goto L092856;
  catch  [|java:lang:NoSuchFieldError|] @[L092864..L09289e] goto L0928a0;
  catch  [|java:lang:IllegalAccessException|] @[L0928b6..L092980] goto L092856;
  catch  [|java:lang:NoSuchFieldError|] @[L0928b6..L092980] goto L0928a0;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeHierarchy|] ([|java:io:ObjectOutputStream|] v11 @type (this), [|java:lang:Object|] v12 @type (object), [|java:io:ObjectStreamClass|] v13 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeHierarchy:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0929b8.   v10:= 0  @length 4;
#L0929ba.   if v12 != 0 then goto L0929ca;
#L0929be.   v8:= new [|java:io:NotActiveException|];
#L0929c2.   call temp:=  [|java:io:NotActiveException.<init>|](v8) @signature [|Ljava/io/NotActiveException;.<init>:()V|] @classDescriptor [|java:io:NotActiveException|] @type direct;
#L0929c8.   throw v8;
#L0929ca.   call temp:=  [|java:io:ObjectStreamClass.getHierarchy|](v13) @signature [|Ljava/io/ObjectStreamClass;.getHierarchy:()Ljava/util/List;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0929d0.   v4:= temp  @type object;
#L0929d2.   v5:= 0  @length 4;
#L0929d4.   call temp:=  [|java:util:List.size|](v4) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0929da.   v1:= temp;
#L0929dc.   if v5 >= v1 then goto L092aa2;
#L0929e0.   call temp:=  [|java:util:List.get|](v4, v5) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0929e6.   v7:= temp  @type object;
#L0929e8.   v7:= ([|java:io:ObjectStreamClass|])v7;
#L0929ec.   v11.[|java:io:ObjectOutputStream.currentObject|]  := v12 @type object;
#L0929f0.   v11.[|java:io:ObjectOutputStream.currentClass|]  := v7 @type object;
#L0929f4.   v3:= 0  @length 4;
#L0929f6.   call temp:=  [|java:io:ObjectStreamClass.hasMethodWriteObject|](v7) @signature [|Ljava/io/ObjectStreamClass;.hasMethodWriteObject:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0929fc.   v8:= temp;
#L0929fe.   if v8 == 0 then goto L092a1e;
#L092a02.   call temp:=  [|java:io:ObjectStreamClass.getMethodWriteObject|](v7) @signature [|Ljava/io/ObjectStreamClass;.getMethodWriteObject:()Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092a08.   v6:= temp  @type object;
#L092a0a.   v8:= 1  @length 4;
#L092a0c.   v8:= new [|java:lang:Object|][v8];
#L092a10.   v9:= 0  @length 4;
#L092a12.   v8[v9]:= v11  @type object;
#L092a16.   call temp:=  [|java:lang:reflect:Method.invoke|](v6, v12, v8) @signature [|Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L092a1c.   v3:= 1  @length 4;
#L092a1e.   if v3 == 0 then goto L092a9a;
#L092a22.   call temp:=  [|java:io:ObjectOutputStream.drain|](v11) @signature [|Ljava/io/ObjectOutputStream;.drain:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092a28.   v8:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L092a2c.   v9:= 120  @length 16;
#L092a30.   call temp:=  [|java:io:DataOutputStream.writeByte|](v8, v9) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092a36.   v11.[|java:io:ObjectOutputStream.currentObject|]  := v10 @type object;
#L092a3a.   v11.[|java:io:ObjectOutputStream.currentClass|]  := v10 @type object;
#L092a3e.   v11.[|java:io:ObjectOutputStream.currentPutField|]  := v10 @type object;
#L092a42.   v5:= v5 + 1;
#L092a46.   goto L0929dc;
#L092a48.   v0:= Exception  @type object;
#L092a4a.   call temp:=  [|java:lang:reflect:InvocationTargetException.getTargetException|](v0) @signature [|Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;|] @classDescriptor [|java:lang:reflect:InvocationTargetException|] @type virtual;
#L092a50.   v2:= temp  @type object;
#L092a52.   v8:= instanceof @varname v2 @type [|java:lang:RuntimeException|];
#L092a56.   if v8 == 0 then goto L092a70;
#L092a5a.   v2:= ([|java:lang:RuntimeException|])v2;
#L092a5e.   throw v2;
#L092a60.   v8:= Exception  @type object;
#L092a62.   v11.[|java:io:ObjectOutputStream.currentObject|]  := v10 @type object;
#L092a66.   v11.[|java:io:ObjectOutputStream.currentClass|]  := v10 @type object;
#L092a6a.   v11.[|java:io:ObjectOutputStream.currentPutField|]  := v10 @type object;
#L092a6e.   throw v8;
#L092a70.   v8:= instanceof @varname v2 @type [|java:lang:Error|];
#L092a74.   if v8 == 0 then goto L092a7e;
#L092a78.   v2:= ([|java:lang:Error|])v2;
#L092a7c.   throw v2;
#L092a7e.   v2:= ([|java:io:IOException|])v2;
#L092a82.   throw v2;
#L092a84.   v0:= Exception  @type object;
#L092a86.   v8:= new [|java:lang:RuntimeException|];
#L092a8a.   call temp:=  [|java:lang:IllegalAccessException.toString|](v0) @signature [|Ljava/lang/IllegalAccessException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalAccessException|] @type virtual;
#L092a90.   v9:= temp  @type object;
#L092a92.   call temp:=  [|java:lang:RuntimeException.<init>|](v8, v9) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L092a98.   throw v8;
#L092a9a.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v11) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092aa0.   goto L092a36;
#L092aa2.   return @void ;
  catch  [|any|] @[L0929f6..L092a08] goto L092a60;
  catch  [|java:lang:reflect:InvocationTargetException|] @[L092a0c..L092a1c] goto L092a48;
  catch  [|java:lang:IllegalAccessException|] @[L092a0c..L092a1c] goto L092a84;
  catch  [|any|] @[L092a0c..L092a1c] goto L092a60;
  catch  [|any|] @[L092a22..L092a36] goto L092a60;
  catch  [|any|] @[L092a4a..L092a60] goto L092a60;
  catch  [|any|] @[L092a70..L092aa0] goto L092a60;

   }
    procedure [|int|] [|java:io:ObjectOutputStream.writeNewArray|] ([|java:io:ObjectOutputStream|] v15 @type (this), [|java:lang:Object|] v16 @type (object), [|java:lang:Class|] v17 @type (object), [|java:io:ObjectStreamClass|] v18 @type (object), [|java:lang:Class|] v19 @type (object), [|boolean|] v20) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeNewArray:(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/ObjectStreamClass;Ljava/lang/Class;Z)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L092ae8.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092aec.   v13:= 117  @length 16;
#L092af0.   call temp:=  [|java:io:DataOutputStream.writeByte|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092af6.   v12:= 0  @length 4;
#L092af8.   v0:= v18  @type object;
#L092afc.   call temp:=  [|java:io:ObjectOutputStream.writeClassDesc|](v15, v0, v12) @signature [|Ljava/io/ObjectOutputStream;.writeClassDesc:(Ljava/io/ObjectStreamClass;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092b02.   call temp:=  [|java:io:ObjectOutputStream.nextHandle|](v15) @signature [|Ljava/io/ObjectOutputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092b08.   v6:= temp;
#L092b0a.   if v20 != 0 then goto L092b1c;
#L092b0e.   v12:= v15.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L092b12.   v0:= v16  @type object;
#L092b16.   call temp:=  [|java:io:SerializationHandleMap.put|](v12, v0, v6) @signature [|Ljava/io/SerializationHandleMap;.put:(Ljava/lang/Object;I)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L092b1c.   call temp:=  [|java:lang:Class.isPrimitive|](v19) @signature [|Ljava/lang/Class;.isPrimitive:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L092b22.   v12:= temp;
#L092b24.   if v12 == 0 then goto L092d56;
#L092b28.   v12:= @@[|java:lang:Integer.TYPE|]   @type object;
#L092b2c.   v0:= v19  @type object;
#L092b30.   if v0 != v12 then goto L092b68;
#L092b34.   v16:= ([|int|][])v16;
#L092b38.   v8:= v16  @type object;
#L092b3c.   v8:= ([|int|][])v8;
#L092b40.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092b44.   v13:= v8.length;
#L092b46.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092b4c.   v7:= 0  @length 4;
#L092b4e.   v12:= v8.length;
#L092b50.   if v7 >= v12 then goto L092b9a;
#L092b54.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092b58.   v13:= v8[v7];
#L092b5c.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092b62.   v7:= v7 + 1;
#L092b66.   goto L092b4e;
#L092b68.   v12:= @@[|java:lang:Byte.TYPE|]   @type object;
#L092b6c.   v0:= v19  @type object;
#L092b70.   if v0 != v12 then goto L092b9c;
#L092b74.   v16:= ([|byte|][])v16;
#L092b78.   v2:= v16  @type object;
#L092b7c.   v2:= ([|byte|][])v2;
#L092b80.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092b84.   v13:= v2.length;
#L092b86.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092b8c.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092b90.   v13:= 0  @length 4;
#L092b92.   v14:= v2.length;
#L092b94.   call temp:=  [|java:io:DataOutputStream.write|](v12, v2, v13, v14) @signature [|Ljava/io/DataOutputStream;.write:([BII)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092b9a.   return v6;
#L092b9c.   v12:= @@[|java:lang:Character.TYPE|]   @type object;
#L092ba0.   v0:= v19  @type object;
#L092ba4.   if v0 != v12 then goto L092bdc;
#L092ba8.   v16:= ([|char|][])v16;
#L092bac.   v3:= v16  @type object;
#L092bb0.   v3:= ([|char|][])v3;
#L092bb4.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092bb8.   v13:= v3.length;
#L092bba.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092bc0.   v7:= 0  @length 4;
#L092bc2.   v12:= v3.length;
#L092bc4.   if v7 >= v12 then goto L092b9a;
#L092bc8.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092bcc.   v13:= v3[v7]  @char;
#L092bd0.   call temp:=  [|java:io:DataOutputStream.writeChar|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeChar:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092bd6.   v7:= v7 + 1;
#L092bda.   goto L092bc2;
#L092bdc.   v12:= @@[|java:lang:Short.TYPE|]   @type object;
#L092be0.   v0:= v19  @type object;
#L092be4.   if v0 != v12 then goto L092c1c;
#L092be8.   v16:= ([|short|][])v16;
#L092bec.   v11:= v16  @type object;
#L092bf0.   v11:= ([|short|][])v11;
#L092bf4.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092bf8.   v13:= v11.length;
#L092bfa.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092c00.   v7:= 0  @length 4;
#L092c02.   v12:= v11.length;
#L092c04.   if v7 >= v12 then goto L092b9a;
#L092c08.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092c0c.   v13:= v11[v7]  @short;
#L092c10.   call temp:=  [|java:io:DataOutputStream.writeShort|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092c16.   v7:= v7 + 1;
#L092c1a.   goto L092c02;
#L092c1c.   v12:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L092c20.   v0:= v19  @type object;
#L092c24.   if v0 != v12 then goto L092c5c;
#L092c28.   v16:= ([|boolean|][])v16;
#L092c2c.   v1:= v16  @type object;
#L092c30.   v1:= ([|boolean|][])v1;
#L092c34.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092c38.   v13:= v1.length;
#L092c3a.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092c40.   v7:= 0  @length 4;
#L092c42.   v12:= v1.length;
#L092c44.   if v7 >= v12 then goto L092b9a;
#L092c48.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092c4c.   v13:= v1[v7]  @boolean;
#L092c50.   call temp:=  [|java:io:DataOutputStream.writeBoolean|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeBoolean:(Z)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092c56.   v7:= v7 + 1;
#L092c5a.   goto L092c42;
#L092c5c.   v12:= @@[|java:lang:Long.TYPE|]   @type object;
#L092c60.   v0:= v19  @type object;
#L092c64.   if v0 != v12 then goto L092c9c;
#L092c68.   v16:= ([|long|][])v16;
#L092c6c.   v9:= v16  @type object;
#L092c70.   v9:= ([|long|][])v9;
#L092c74.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092c78.   v13:= v9.length;
#L092c7a.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092c80.   v7:= 0  @length 4;
#L092c82.   v12:= v9.length;
#L092c84.   if v7 >= v12 then goto L092b9a;
#L092c88.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092c8c.   v13:= v9[v7]  @wide;
#L092c90.   call temp:=  [|java:io:DataOutputStream.writeLong|](v12, v13, v14) @signature [|Ljava/io/DataOutputStream;.writeLong:(J)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092c96.   v7:= v7 + 1;
#L092c9a.   goto L092c82;
#L092c9c.   v12:= @@[|java:lang:Float.TYPE|]   @type object;
#L092ca0.   v0:= v19  @type object;
#L092ca4.   if v0 != v12 then goto L092cdc;
#L092ca8.   v16:= ([|float|][])v16;
#L092cac.   v5:= v16  @type object;
#L092cb0.   v5:= ([|float|][])v5;
#L092cb4.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092cb8.   v13:= v5.length;
#L092cba.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092cc0.   v7:= 0  @length 4;
#L092cc2.   v12:= v5.length;
#L092cc4.   if v7 >= v12 then goto L092b9a;
#L092cc8.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092ccc.   v13:= v5[v7];
#L092cd0.   call temp:=  [|java:io:DataOutputStream.writeFloat|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeFloat:(F)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092cd6.   v7:= v7 + 1;
#L092cda.   goto L092cc2;
#L092cdc.   v12:= @@[|java:lang:Double.TYPE|]   @type object;
#L092ce0.   v0:= v19  @type object;
#L092ce4.   if v0 != v12 then goto L092d1c;
#L092ce8.   v16:= ([|double|][])v16;
#L092cec.   v4:= v16  @type object;
#L092cf0.   v4:= ([|double|][])v4;
#L092cf4.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092cf8.   v13:= v4.length;
#L092cfa.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092d00.   v7:= 0  @length 4;
#L092d02.   v12:= v4.length;
#L092d04.   if v7 >= v12 then goto L092b9a;
#L092d08.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092d0c.   v13:= v4[v7]  @wide;
#L092d10.   call temp:=  [|java:io:DataOutputStream.writeDouble|](v12, v13, v14) @signature [|Ljava/io/DataOutputStream;.writeDouble:(D)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092d16.   v7:= v7 + 1;
#L092d1a.   goto L092d02;
#L092d1c.   v12:= new [|java:io:InvalidClassException|];
#L092d20.   v13:= new [|java:lang:StringBuilder|];
#L092d24.   call temp:=  [|java:lang:StringBuilder.<init>|](v13) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L092d2a.   v14:= "Wrong base type in " @type (object, string);
#L092d2e.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L092d34.   v13:= temp  @type object;
#L092d36.   call temp:=  [|java:lang:Class.getName|](v17) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L092d3c.   v14:= temp  @type object;
#L092d3e.   call temp:=  [|java:lang:StringBuilder.append|](v13, v14) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L092d44.   v13:= temp  @type object;
#L092d46.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L092d4c.   v13:= temp  @type object;
#L092d4e.   call temp:=  [|java:io:InvalidClassException.<init>|](v12, v13) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L092d54.   throw v12;
#L092d56.   v16:= ([|java:lang:Object|][])v16;
#L092d5a.   v10:= v16  @type object;
#L092d5e.   v10:= ([|java:lang:Object|][])v10;
#L092d62.   v12:= v15.[|java:io:ObjectOutputStream.output|]   @type object;
#L092d66.   v13:= v10.length;
#L092d68.   call temp:=  [|java:io:DataOutputStream.writeInt|](v12, v13) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092d6e.   v7:= 0  @length 4;
#L092d70.   v12:= v10.length;
#L092d72.   if v7 >= v12 then goto L092b9a;
#L092d76.   v12:= v10[v7]  @type object;
#L092d7a.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v15, v12) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L092d80.   v7:= v7 + 1;
#L092d84.   goto L092d70;

   }
    procedure [|int|] [|java:io:ObjectOutputStream.writeNewClass|] ([|java:io:ObjectOutputStream|] v4 @type (this), [|java:lang:Class|] v5 @type (object), [|boolean|] v6) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeNewClass:(Ljava/lang/Class;Z)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L092d98.   v2:= v4.[|java:io:ObjectOutputStream.output|]   @type object;
#L092d9c.   v3:= 118  @length 16;
#L092da0.   call temp:=  [|java:io:DataOutputStream.writeByte|](v2, v3) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092da6.   call temp:=  [|java:io:ObjectStreamClass.lookupStreamClass|](v5) @signature [|Ljava/io/ObjectStreamClass;.lookupStreamClass:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L092dac.   v0:= temp  @type object;
#L092dae.   call temp:=  [|java:io:ObjectStreamClass.isEnum|](v0) @signature [|Ljava/io/ObjectStreamClass;.isEnum:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092db4.   v2:= temp;
#L092db6.   if v2 == 0 then goto L092dd8;
#L092dba.   call temp:=  [|java:io:ObjectOutputStream.writeEnumDesc|](v4, v5, v0, v6) @signature [|Ljava/io/ObjectOutputStream;.writeEnumDesc:(Ljava/lang/Class;Ljava/io/ObjectStreamClass;Z)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092dc0.   call temp:=  [|java:io:ObjectOutputStream.nextHandle|](v4) @signature [|Ljava/io/ObjectOutputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092dc6.   v1:= temp;
#L092dc8.   if v6 != 0 then goto L092dd6;
#L092dcc.   v2:= v4.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L092dd0.   call temp:=  [|java:io:SerializationHandleMap.put|](v2, v5, v1) @signature [|Ljava/io/SerializationHandleMap;.put:(Ljava/lang/Object;I)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L092dd6.   return v1;
#L092dd8.   call temp:=  [|java:io:ObjectOutputStream.writeClassDesc|](v4, v0, v6) @signature [|Ljava/io/ObjectOutputStream;.writeClassDesc:(Ljava/io/ObjectStreamClass;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092dde.   goto L092dc0;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeNewClassDesc|] ([|java:io:ObjectOutputStream|] v5 @type (this), [|java:io:ObjectStreamClass|] v6 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeNewClassDesc:(Ljava/io/ObjectStreamClass;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L092df0.   v2:= v5.[|java:io:ObjectOutputStream.output|]   @type object;
#L092df4.   call temp:=  [|java:io:ObjectStreamClass.getName|](v6) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092dfa.   v3:= temp  @type object;
#L092dfc.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v2, v3) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092e02.   v2:= v5.[|java:io:ObjectOutputStream.output|]   @type object;
#L092e06.   call temp:=  [|java:io:ObjectStreamClass.getSerialVersionUID|](v6) @signature [|Ljava/io/ObjectStreamClass;.getSerialVersionUID:()J|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092e0c.   v3:= temp  @type wide;
#L092e0e.   call temp:=  [|java:io:DataOutputStream.writeLong|](v2, v3, v4) @signature [|Ljava/io/DataOutputStream;.writeLong:(J)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092e14.   call temp:=  [|java:io:ObjectStreamClass.getFlags|](v6) @signature [|Ljava/io/ObjectStreamClass;.getFlags:()B|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092e1a.   v1:= temp;
#L092e1c.   call temp:=  [|java:io:ObjectStreamClass.isExternalizable|](v6) @signature [|Ljava/io/ObjectStreamClass;.isExternalizable:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092e22.   v0:= temp;
#L092e24.   if v0 == 0 then goto L092e38;
#L092e28.   v2:= v5.[|java:io:ObjectOutputStream.protocolVersion|] ;
#L092e2c.   v3:= 1  @length 4;
#L092e2e.   if v2 != v3 then goto L092e5a;
#L092e32.   v2:= v1 ^& -9;
#L092e36.   v1:= (byte)v2  @type i2b;
#L092e38.   v2:= v5.[|java:io:ObjectOutputStream.output|]   @type object;
#L092e3c.   call temp:=  [|java:io:DataOutputStream.writeByte|](v2, v1) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092e42.   v2:= 18  @length 16;
#L092e46.   call temp:=  [|java:io:ObjectStreamClass.getFlags|](v6) @signature [|Ljava/io/ObjectStreamClass;.getFlags:()B|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092e4c.   v3:= temp;
#L092e4e.   if v2 == v3 then goto L092e62;
#L092e52.   call temp:=  [|java:io:ObjectOutputStream.writeFieldDescriptors|](v5, v6, v0) @signature [|Ljava/io/ObjectOutputStream;.writeFieldDescriptors:(Ljava/io/ObjectStreamClass;Z)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092e58.   return @void ;
#L092e5a.   v2:= v1 ^| 8;
#L092e5e.   v1:= (byte)v2  @type i2b;
#L092e60.   goto L092e38;
#L092e62.   v2:= v5.[|java:io:ObjectOutputStream.output|]   @type object;
#L092e66.   v3:= 0  @length 4;
#L092e68.   call temp:=  [|java:io:DataOutputStream.writeShort|](v2, v3) @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092e6e.   goto L092e58;

   }
    procedure [|int|] [|java:io:ObjectOutputStream.writeNewEnum|] ([|java:io:ObjectOutputStream|] v12 @type (this), [|java:lang:Object|] v13 @type (object), [|java:lang:Class|] v14 @type (object), [|boolean|] v15) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeNewEnum:(Ljava/lang/Object;Ljava/lang/Class;Z)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L092e80.   v11:= 1  @length 4;
#L092e82.   v5:= v12.[|java:io:ObjectOutputStream.currentPutField|]   @type object;
#L092e86.   v9:= 0  @length 4;
#L092e88.   v12.[|java:io:ObjectOutputStream.currentPutField|]  := v9 @type object;
#L092e8c.   v9:= v12.[|java:io:ObjectOutputStream.output|]   @type object;
#L092e90.   v10:= 126  @length 16;
#L092e94.   call temp:=  [|java:io:DataOutputStream.writeByte|](v9, v10) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092e9a.   if v14 == 0 then goto L092eb4;
#L092e9e.   call temp:=  [|java:lang:Class.isEnum|](v14) @signature [|Ljava/lang/Class;.isEnum:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L092ea4.   v9:= temp;
#L092ea6.   if v9 != 0 then goto L092eb4;
#L092eaa.   call temp:=  [|java:lang:Class.getSuperclass|](v14) @signature [|Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L092eb0.   v14:= temp  @type object;
#L092eb2.   goto L092e9a;
#L092eb4.   call temp:=  [|java:io:ObjectStreamClass.lookup|](v14) @signature [|Ljava/io/ObjectStreamClass;.lookup:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L092eba.   v0:= temp  @type object;
#L092ebc.   call temp:=  [|java:io:ObjectOutputStream.writeEnumDesc|](v12, v14, v0, v15) @signature [|Ljava/io/ObjectOutputStream;.writeEnumDesc:(Ljava/lang/Class;Ljava/io/ObjectStreamClass;Z)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092ec2.   v6:= -1  @length 4;
#L092ec4.   if v15 == 0 then goto L092ed4;
#L092ec8.   v9:= v12.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L092ecc.   call temp:=  [|java:io:SerializationHandleMap.get|](v9, v13) @signature [|Ljava/io/SerializationHandleMap;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L092ed2.   v6:= temp;
#L092ed4.   call temp:=  [|java:io:ObjectOutputStream.registerObjectWritten|](v12, v13) @signature [|Ljava/io/ObjectOutputStream;.registerObjectWritten:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092eda.   v3:= temp;
#L092edc.   call temp:=  [|java:io:ObjectStreamClass.getSuperclass|](v0) @signature [|Ljava/io/ObjectStreamClass;.getSuperclass:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092ee2.   v9:= temp  @type object;
#L092ee4.   call temp:=  [|java:io:ObjectStreamClass.fields|](v9) @signature [|Ljava/io/ObjectStreamClass;.fields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092eea.   v2:= temp  @type object;
#L092eec.   if v2 == 0 then goto L092f40;
#L092ef0.   v9:= v2.length;
#L092ef2.   if v9 <= v11 then goto L092f40;
#L092ef6.   call temp:=  [|java:io:ObjectStreamClass.getSuperclass|](v0) @signature [|Ljava/io/ObjectStreamClass;.getSuperclass:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092efc.   v9:= temp  @type object;
#L092efe.   v10:= v2[v11]  @type object;
#L092f02.   call temp:=  [|java:io:ObjectStreamClass.getReflectionField|](v9, v10) @signature [|Ljava/io/ObjectStreamClass;.getReflectionField:(Ljava/io/ObjectStreamField;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092f08.   v1:= temp  @type object;
#L092f0a.   if v1 != 0 then goto L092f1a;
#L092f0e.   v9:= new [|java:lang:NoSuchFieldError|];
#L092f12.   call temp:=  [|java:lang:NoSuchFieldError.<init>|](v9) @signature [|Ljava/lang/NoSuchFieldError;.<init>:()V|] @classDescriptor [|java:lang:NoSuchFieldError|] @type direct;
#L092f18.   throw v9;
#L092f1a.   call temp:=  [|java:lang:reflect:Field.get|](v1, v13) @signature [|Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L092f20.   v7:= temp  @type object;
#L092f22.   v7:= ([|java:lang:String|])v7;
#L092f26.   v8:= -1  @length 4;
#L092f28.   if v15 != 0 then goto L092f34;
#L092f2c.   call temp:=  [|java:io:ObjectOutputStream.dumpCycle|](v12, v7) @signature [|Ljava/io/ObjectOutputStream;.dumpCycle:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092f32.   v8:= temp;
#L092f34.   v9:= -1  @length 4;
#L092f36.   if v8 != v9 then goto L092f40;
#L092f3a.   call temp:=  [|java:io:ObjectOutputStream.writeNewString|](v12, v7, v15) @signature [|Ljava/io/ObjectOutputStream;.writeNewString:(Ljava/lang/String;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092f40.   if v15 == 0 then goto L092f4a;
#L092f44.   call temp:=  [|java:io:ObjectOutputStream.removeUnsharedReference|](v12, v13, v6) @signature [|Ljava/io/ObjectOutputStream;.removeUnsharedReference:(Ljava/lang/Object;I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092f4a.   v12.[|java:io:ObjectOutputStream.currentPutField|]  := v5 @type object;
#L092f4e.   return v3;
#L092f50.   v4:= Exception  @type object;
#L092f52.   v9:= new [|java:lang:AssertionError|];
#L092f56.   call temp:=  [|java:lang:AssertionError.<init>|](v9, v4) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L092f5c.   throw v9;
  catch  [|java:lang:IllegalAccessException|] @[L092f1a..L092f40] goto L092f50;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeNewException|] ([|java:io:ObjectOutputStream|] v3 @type (this), [|java:lang:Exception|] v4 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeNewException:(Ljava/lang/Exception;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L092f80.   v2:= 0  @length 4;
#L092f82.   v0:= v3.[|java:io:ObjectOutputStream.output|]   @type object;
#L092f86.   v1:= 123  @length 16;
#L092f8a.   call temp:=  [|java:io:DataOutputStream.writeByte|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092f90.   call temp:=  [|java:io:ObjectOutputStream.resetSeenObjects|](v3) @signature [|Ljava/io/ObjectOutputStream;.resetSeenObjects:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092f96.   call temp:=  [|java:io:ObjectOutputStream.writeObjectInternal|](v3, v4, v2, v2, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObjectInternal:(Ljava/lang/Object;ZZZ)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092f9c.   call temp:=  [|java:io:ObjectOutputStream.resetSeenObjects|](v3) @signature [|Ljava/io/ObjectOutputStream;.resetSeenObjects:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L092fa2.   return @void ;

   }
    procedure [|int|] [|java:io:ObjectOutputStream.writeNewObject|] ([|java:io:ObjectOutputStream|] v11 @type (this), [|java:lang:Object|] v12 @type (object), [|java:lang:Class|] v13 @type (object), [|java:io:ObjectStreamClass|] v14 @type (object), [|boolean|] v15) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeNewObject:(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/ObjectStreamClass;Z)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L092fb4.   v3:= 1  @length 4;
#L092fb6.   v7:= 0  @length 4;
#L092fb8.   v10:= 0  @length 4;
#L092fba.   v4:= v11.[|java:io:ObjectOutputStream.currentPutField|]   @type object;
#L092fbe.   v11.[|java:io:ObjectOutputStream.currentPutField|]  := v10 @type object;
#L092fc2.   call temp:=  [|java:io:ObjectStreamClass.isExternalizable|](v14) @signature [|Ljava/io/ObjectStreamClass;.isExternalizable:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092fc8.   v1:= temp;
#L092fca.   call temp:=  [|java:io:ObjectStreamClass.isSerializable|](v14) @signature [|Ljava/io/ObjectStreamClass;.isSerializable:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L092fd0.   v6:= temp;
#L092fd2.   if v1 != 0 then goto L092fee;
#L092fd6.   if v6 != 0 then goto L092fee;
#L092fda.   v7:= new [|java:io:NotSerializableException|];
#L092fde.   call temp:=  [|java:lang:Class.getName|](v13) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L092fe4.   v8:= temp  @type object;
#L092fe6.   call temp:=  [|java:io:NotSerializableException.<init>|](v7, v8) @signature [|Ljava/io/NotSerializableException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:NotSerializableException|] @type direct;
#L092fec.   throw v7;
#L092fee.   v8:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L092ff2.   v9:= 115  @length 16;
#L092ff6.   call temp:=  [|java:io:DataOutputStream.writeByte|](v8, v9) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L092ffc.   call temp:=  [|java:io:ObjectOutputStream.writeClassDesc|](v11, v14, v7) @signature [|Ljava/io/ObjectOutputStream;.writeClassDesc:(Ljava/io/ObjectStreamClass;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093002.   v5:= -1  @length 4;
#L093004.   if v15 == 0 then goto L093014;
#L093008.   v8:= v11.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L09300c.   call temp:=  [|java:io:SerializationHandleMap.get|](v8, v12) @signature [|Ljava/io/SerializationHandleMap;.get:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L093012.   v5:= temp;
#L093014.   call temp:=  [|java:io:ObjectOutputStream.registerObjectWritten|](v11, v12) @signature [|Ljava/io/ObjectOutputStream;.registerObjectWritten:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09301a.   v2:= temp;
#L09301c.   v11.[|java:io:ObjectOutputStream.currentObject|]  := v12 @type object;
#L093020.   v11.[|java:io:ObjectOutputStream.currentClass|]  := v14 @type object;
#L093024.   if v1 == 0 then goto L0930a0;
#L093028.   v8:= v11.[|java:io:ObjectOutputStream.protocolVersion|] ;
#L09302c.   if v8 != v3 then goto L09306c;
#L093030.   if v3 == 0 then goto L09303c;
#L093034.   v7:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L093038.   v11.[|java:io:ObjectOutputStream.primitiveTypes|]  := v7 @type object;
#L09303c.   v0:= v12  @type object;
#L09303e.   v0:= ([|java:io:Externalizable|])v0;
#L093042.   v7:= v0  @type object;
#L093044.   call temp:=  [|java:io:Externalizable.writeExternal|](v7, v11) @signature [|Ljava/io/Externalizable;.writeExternal:(Ljava/io/ObjectOutput;)V|] @classDescriptor [|java:io:Externalizable|] @type interface;
#L09304a.   if v3 == 0 then goto L093070;
#L09304e.   v7:= 0  @length 4;
#L093050.   v11.[|java:io:ObjectOutputStream.primitiveTypes|]  := v7 @type object;
#L093054.   if v15 == 0 then goto L09305e;
#L093058.   call temp:=  [|java:io:ObjectOutputStream.removeUnsharedReference|](v11, v12, v5) @signature [|Ljava/io/ObjectOutputStream;.removeUnsharedReference:(Ljava/lang/Object;I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09305e.   v11.[|java:io:ObjectOutputStream.currentObject|]  := v10 @type object;
#L093062.   v11.[|java:io:ObjectOutputStream.currentClass|]  := v10 @type object;
#L093066.   v11.[|java:io:ObjectOutputStream.currentPutField|]  := v4 @type object;
#L09306a.   return v2;
#L09306c.   v3:= v7;
#L09306e.   goto L093030;
#L093070.   call temp:=  [|java:io:ObjectOutputStream.drain|](v11) @signature [|Ljava/io/ObjectOutputStream;.drain:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L093076.   v7:= v11.[|java:io:ObjectOutputStream.output|]   @type object;
#L09307a.   v8:= 120  @length 16;
#L09307e.   call temp:=  [|java:io:DataOutputStream.writeByte|](v7, v8) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093084.   goto L093054;
#L093086.   v7:= Exception  @type object;
#L093088.   if v15 == 0 then goto L093092;
#L09308c.   call temp:=  [|java:io:ObjectOutputStream.removeUnsharedReference|](v11, v12, v5) @signature [|Ljava/io/ObjectOutputStream;.removeUnsharedReference:(Ljava/lang/Object;I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093092.   v11.[|java:io:ObjectOutputStream.currentObject|]  := v10 @type object;
#L093096.   v11.[|java:io:ObjectOutputStream.currentClass|]  := v10 @type object;
#L09309a.   v11.[|java:io:ObjectOutputStream.currentPutField|]  := v4 @type object;
#L09309e.   throw v7;
#L0930a0.   v7:= v11.[|java:io:ObjectOutputStream.currentClass|]   @type object;
#L0930a4.   call temp:=  [|java:io:ObjectOutputStream.writeHierarchy|](v11, v12, v7) @signature [|Ljava/io/ObjectOutputStream;.writeHierarchy:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0930aa.   goto L093054;
  catch  [|any|] @[L093028..L093054] goto L093086;
  catch  [|any|] @[L093070..L093084] goto L093086;
  catch  [|any|] @[L0930a0..L0930aa] goto L093086;

   }
    procedure [|int|] [|java:io:ObjectOutputStream.writeNewString|] ([|java:io:ObjectOutputStream|] v9 @type (this), [|java:lang:String|] v10 @type (object), [|boolean|] v11) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeNewString:(Ljava/lang/String;Z)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0930d8.   v8:= 0  @length 4;
#L0930da.   call temp:=  [|java:nio:charset:ModifiedUtf8.countBytes|](v10, v8) @signature [|Ljava/nio/charset/ModifiedUtf8;.countBytes:(Ljava/lang/String;Z)J|] @classDescriptor [|java:nio:charset:ModifiedUtf8|] @type static;
#L0930e0.   v1:= temp  @type wide;
#L0930e2.   v4:= 0  @length 4;
#L0930e4.    v6:= 0.000000  @length wide32;
#L0930ea.   v6:= cmp(v1,v6);
#L0930ee.   if v6 > 0 then goto L093144;
#L0930f2.   v6:= (int)v1  @type l2i;
#L0930f4.   v6:= v6 + 3;
#L0930f8.   v0:= new [|byte|][v6];
#L0930fc.   v5:= v4 + 1;
#L093100.   v6:= 116  @length 16;
#L093104.   v0[v4]:= v6  @byte;
#L093108.   v6:= (int)v1  @type l2i;
#L09310a.   v6:= (short)v6  @type i2s;
#L09310c.   v7:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L093110.   call temp:=  [|libcore:io:Memory.pokeShort|](v0, v5, v6, v7) @signature [|Llibcore/io/Memory;.pokeShort:([BISLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L093116.   v4:= v5 + 2;
#L09311a.   call temp:=  [|java:nio:charset:ModifiedUtf8.encode|](v0, v4, v10) @signature [|Ljava/nio/charset/ModifiedUtf8;.encode:([BILjava/lang/String;)V|] @classDescriptor [|java:nio:charset:ModifiedUtf8|] @type static;
#L093120.   v6:= v9.[|java:io:ObjectOutputStream.output|]   @type object;
#L093124.   v7:= v0.length;
#L093126.   call temp:=  [|java:io:DataOutputStream.write|](v6, v0, v8, v7) @signature [|Ljava/io/DataOutputStream;.write:([BII)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09312c.   call temp:=  [|java:io:ObjectOutputStream.nextHandle|](v9) @signature [|Ljava/io/ObjectOutputStream;.nextHandle:()I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093132.   v3:= temp;
#L093134.   if v11 != 0 then goto L093142;
#L093138.   v6:= v9.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L09313c.   call temp:=  [|java:io:SerializationHandleMap.put|](v6, v10, v3) @signature [|Ljava/io/SerializationHandleMap;.put:(Ljava/lang/Object;I)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L093142.   return v3;
#L093144.   v6:= (int)v1  @type l2i;
#L093146.   v6:= v6 + 9;
#L09314a.   v0:= new [|byte|][v6];
#L09314e.   v5:= v4 + 1;
#L093152.   v6:= 124  @length 16;
#L093156.   v0[v4]:= v6  @byte;
#L09315a.   v6:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L09315e.   call temp:=  [|libcore:io:Memory.pokeLong|](v0, v5, v1, v2, v6) @signature [|Llibcore/io/Memory;.pokeLong:([BIJLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L093164.   v4:= v5 + 8;
#L093168.   goto L09311a;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeNull|] ([|java:io:ObjectOutputStream|] v2 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeNull:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L09317c.   v0:= v2.[|java:io:ObjectOutputStream.output|]   @type object;
#L093180.   v1:= 112  @length 16;
#L093184.   call temp:=  [|java:io:DataOutputStream.writeByte|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09318a.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeObject|] ([|java:io:ObjectOutputStream|] v5 @type (this), [|java:lang:Object|] v6 @type (object), [|boolean|] v7) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;Z)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09319c.   v2:= 1  @length 4;
#L09319e.   v3:= v5.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L0931a2.   v4:= v5.[|java:io:ObjectOutputStream.output|]   @type object;
#L0931a6.   if v3 != v4 then goto L0931c8;
#L0931aa.   if v2 == 0 then goto L0931b4;
#L0931ae.   v3:= 0  @length 4;
#L0931b0.   v5.[|java:io:ObjectOutputStream.primitiveTypes|]  := v3 @type object;
#L0931b4.   v3:= v5.[|java:io:ObjectOutputStream.subclassOverridingImplementation|]   @boolean;
#L0931b8.   if v3 == 0 then goto L0931cc;
#L0931bc.   if v7 != 0 then goto L0931cc;
#L0931c0.   call temp:=  [|java:io:ObjectOutputStream.writeObjectOverride|](v5, v6) @signature [|Ljava/io/ObjectOutputStream;.writeObjectOverride:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0931c6.   return @void ;
#L0931c8.   v2:= 0  @length 4;
#L0931ca.   goto L0931aa;
#L0931cc.   call temp:=  [|java:io:ObjectOutputStream.drain|](v5) @signature [|Ljava/io/ObjectOutputStream;.drain:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0931d2.   v3:= 1  @length 4;
#L0931d4.   v4:= 1  @length 4;
#L0931d6.   call temp:=  [|java:io:ObjectOutputStream.writeObjectInternal|](v5, v6, v7, v3, v4) @signature [|Ljava/io/ObjectOutputStream;.writeObjectInternal:(Ljava/lang/Object;ZZZ)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0931dc.   if v2 == 0 then goto L0931c6;
#L0931e0.   v3:= v5.[|java:io:ObjectOutputStream.output|]   @type object;
#L0931e4.   v5.[|java:io:ObjectOutputStream.primitiveTypes|]  := v3 @type object;
#L0931e8.   goto L0931c6;
#L0931ea.   v0:= Exception  @type object;
#L0931ec.   v3:= v5.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L0931f0.   if v3 != 0 then goto L093202;
#L0931f4.   v3:= v5.[|java:io:ObjectOutputStream.nestedException|]   @type object;
#L0931f8.   if v0 == v3 then goto L093202;
#L0931fc.   call temp:=  [|java:io:ObjectOutputStream.writeNewException|](v5, v0) @signature [|Ljava/io/ObjectOutputStream;.writeNewException:(Ljava/lang/Exception;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093202.   throw v0;
#L093204.   v1:= Exception  @type object;
#L093206.   v3:= v5.[|java:io:ObjectOutputStream.nestedException|]   @type object;
#L09320a.   call temp:=  [|java:io:StreamCorruptedException.fillInStackTrace|](v3) @signature [|Ljava/io/StreamCorruptedException;.fillInStackTrace:()Ljava/lang/Throwable;|] @classDescriptor [|java:io:StreamCorruptedException|] @type virtual;
#L093210.   v3:= v5.[|java:io:ObjectOutputStream.nestedException|]   @type object;
#L093214.   throw v3;
  catch  [|java:io:IOException|] @[L0931cc..L0931e8] goto L0931ea;
  catch  [|java:io:IOException|] @[L0931fc..L093202] goto L093204;

   }
    procedure [|int|] [|java:io:ObjectOutputStream.writeObjectInternal|] ([|java:io:ObjectOutputStream|] v17 @type (this), [|java:lang:Object|] v18 @type (object), [|boolean|] v19, [|boolean|] v20, [|boolean|] v21) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeObjectInternal:(Ljava/lang/Object;ZZZ)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
      
#L093240.   if v18 != 0 then goto L09324e;
#L093244.   call temp:=  [|java:io:ObjectOutputStream.writeNull|](v17) @signature [|Ljava/io/ObjectOutputStream;.writeNull:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09324a.   v14:= -1  @length 4;
#L09324c.   return v14;
#L09324e.   v9:= -1  @length 4;
#L093250.   if v19 != 0 then goto L093266;
#L093254.   call temp:=  [|java:io:ObjectOutputStream.dumpCycle|](v17, v18) @signature [|Ljava/io/ObjectOutputStream;.dumpCycle:(Ljava/lang/Object;)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09325a.   v9:= temp;
#L09325c.   v3:= -1  @length 4;
#L09325e.   if v9 == v3 then goto L093266;
#L093262.   v14:= v9;
#L093264.   goto L09324c;
#L093266.   call temp:=  [|java:lang:Object.getClass|](v18) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09326c.   v5:= temp  @type object;
#L09326e.   call temp:=  [|java:io:ObjectStreamClass.lookupStreamClass|](v5) @signature [|Ljava/io/ObjectStreamClass;.lookupStreamClass:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L093274.   v6:= temp  @type object;
#L093276.   v0:= v17  @type object;
#L09327a.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L09327e.   v3:= v3 + 1;
#L093282.   v0:= v17  @type object;
#L093286.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L09328a.   v0:= v17  @type object;
#L09328e.   v3:= v0.[|java:io:ObjectOutputStream.enableReplace|]   @boolean;
#L093292.   if v3 == 0 then goto L09329a;
#L093296.   if v21 != 0 then goto L0932ee;
#L09329a.   v3:= @@[|java:io:ObjectStreamClass.CLASSCLASS|]   @type object;
#L09329e.   if v5 != v3 then goto L0932c4;
#L0932a2.   v18:= ([|java:lang:Class|])v18;
#L0932a6.   call temp:=  [|java:io:ObjectOutputStream.writeNewClass|](v17, v18, v19) @signature [|Ljava/io/ObjectOutputStream;.writeNewClass:(Ljava/lang/Class;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0932ac.   v14:= temp;
#L0932ae.   v0:= v17  @type object;
#L0932b2.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L0932b6.   v3:= v3 + -1;
#L0932ba.   v0:= v17  @type object;
#L0932be.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L0932c2.   goto L09324c;
#L0932c4.   v3:= @@[|java:io:ObjectStreamClass.OBJECTSTREAMCLASSCLASS|]   @type object;
#L0932c8.   if v5 != v3 then goto L0932ee;
#L0932cc.   v18:= ([|java:io:ObjectStreamClass|])v18;
#L0932d0.   call temp:=  [|java:io:ObjectOutputStream.writeClassDesc|](v17, v18, v19) @signature [|Ljava/io/ObjectOutputStream;.writeClassDesc:(Ljava/io/ObjectStreamClass;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0932d6.   v14:= temp;
#L0932d8.   v0:= v17  @type object;
#L0932dc.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L0932e0.   v3:= v3 + -1;
#L0932e4.   v0:= v17  @type object;
#L0932e8.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L0932ec.   goto L09324c;
#L0932ee.   call temp:=  [|java:io:ObjectStreamClass.isSerializable|](v6) @signature [|Ljava/io/ObjectStreamClass;.isSerializable:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0932f4.   v3:= temp;
#L0932f6.   if v3 == 0 then goto L0933c6;
#L0932fa.   if v20 == 0 then goto L0933c6;
#L0932fe.   call temp:=  [|java:io:ObjectStreamClass.hasMethodWriteReplace|](v6) @signature [|Ljava/io/ObjectStreamClass;.hasMethodWriteReplace:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L093304.   v3:= temp;
#L093306.   if v3 == 0 then goto L0933c6;
#L09330a.   call temp:=  [|java:io:ObjectStreamClass.getMethodWriteReplace|](v6) @signature [|Ljava/io/ObjectStreamClass;.getMethodWriteReplace:()Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L093310.   v12:= temp  @type object;
#L093312.   v13:= 0  @length 4;
#L093314.   v3:= 0  @length 4;
#L093316.   v3:= ([|java:lang:Object|][])v3;
#L09331a.   v0:= v18  @type object;
#L09331e.   call temp:=  [|java:lang:reflect:Method.invoke|](v12, v0, v3) @signature [|Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L093324.   v13:= temp  @type object;
#L093326.   v0:= v18  @type object;
#L09332a.   if v13 == v0 then goto L0933c6;
#L09332e.   v3:= 0  @length 4;
#L093330.   v4:= 0  @length 4;
#L093332.   v0:= v17  @type object;
#L093336.   v1:= v21;
#L09333a.   call temp:=  [|java:io:ObjectOutputStream.writeObjectInternal|](v0, v13, v3, v4, v1) @signature [|Ljava/io/ObjectOutputStream;.writeObjectInternal:(Ljava/lang/Object;ZZZ)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093340.   v14:= temp;
#L093342.   v3:= -1  @length 4;
#L093344.   if v14 == v3 then goto L09335a;
#L093348.   v0:= v17  @type object;
#L09334c.   v3:= v0.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L093350.   v0:= v18  @type object;
#L093354.   call temp:=  [|java:io:SerializationHandleMap.put|](v3, v0, v14) @signature [|Ljava/io/SerializationHandleMap;.put:(Ljava/lang/Object;I)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L09335a.   v0:= v17  @type object;
#L09335e.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L093362.   v3:= v3 + -1;
#L093366.   v0:= v17  @type object;
#L09336a.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L09336e.   goto L09324c;
#L093372.   v10:= Exception  @type object;
#L093374.   v13:= v18  @type object;
#L093378.   goto L093326;
#L09337a.   v11:= Exception  @type object;
#L09337c.   call temp:=  [|java:lang:reflect:InvocationTargetException.getTargetException|](v11) @signature [|Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;|] @classDescriptor [|java:lang:reflect:InvocationTargetException|] @type virtual;
#L093382.   v16:= temp  @type object;
#L093384.   v0:= v16  @type object;
#L093388.   v3:= instanceof @varname v0 @type [|java:io:ObjectStreamException|];
#L09338c.   if v3 == 0 then goto L0933ae;
#L093390.   v16:= ([|java:io:ObjectStreamException|])v16;
#L093394.   throw v16;
#L093396.   v3:= Exception  @type object;
#L093398.   v0:= v17  @type object;
#L09339c.   v4:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L0933a0.   v4:= v4 + -1;
#L0933a4.   v0:= v17  @type object;
#L0933a8.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v4;
#L0933ac.   throw v3;
#L0933ae.   v0:= v16  @type object;
#L0933b2.   v3:= instanceof @varname v0 @type [|java:lang:Error|];
#L0933b6.   if v3 == 0 then goto L0933c0;
#L0933ba.   v16:= ([|java:lang:Error|])v16;
#L0933be.   throw v16;
#L0933c0.   v16:= ([|java:lang:RuntimeException|])v16;
#L0933c4.   throw v16;
#L0933c6.   v0:= v17  @type object;
#L0933ca.   v3:= v0.[|java:io:ObjectOutputStream.enableReplace|]   @boolean;
#L0933ce.   if v3 == 0 then goto L09342a;
#L0933d2.   if v21 == 0 then goto L09342a;
#L0933d6.   call temp:=  [|java:io:ObjectOutputStream.replaceObject|](v17, v18) @signature [|Ljava/io/ObjectOutputStream;.replaceObject:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0933dc.   v15:= temp  @type object;
#L0933de.   v0:= v18  @type object;
#L0933e2.   if v15 == v0 then goto L09342a;
#L0933e6.   v3:= 0  @length 4;
#L0933e8.   v4:= 0  @length 4;
#L0933ea.   v0:= v17  @type object;
#L0933ee.   v1:= v20;
#L0933f2.   call temp:=  [|java:io:ObjectOutputStream.writeObjectInternal|](v0, v15, v3, v1, v4) @signature [|Ljava/io/ObjectOutputStream;.writeObjectInternal:(Ljava/lang/Object;ZZZ)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0933f8.   v14:= temp;
#L0933fa.   v3:= -1  @length 4;
#L0933fc.   if v14 == v3 then goto L093412;
#L093400.   v0:= v17  @type object;
#L093404.   v3:= v0.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L093408.   v0:= v18  @type object;
#L09340c.   call temp:=  [|java:io:SerializationHandleMap.put|](v3, v0, v14) @signature [|Ljava/io/SerializationHandleMap;.put:(Ljava/lang/Object;I)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L093412.   v0:= v17  @type object;
#L093416.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L09341a.   v3:= v3 + -1;
#L09341e.   v0:= v17  @type object;
#L093422.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L093426.   goto L09324c;
#L09342a.   v3:= @@[|java:io:ObjectStreamClass.CLASSCLASS|]   @type object;
#L09342e.   if v5 != v3 then goto L093456;
#L093432.   v18:= ([|java:lang:Class|])v18;
#L093436.   call temp:=  [|java:io:ObjectOutputStream.writeNewClass|](v17, v18, v19) @signature [|Ljava/io/ObjectOutputStream;.writeNewClass:(Ljava/lang/Class;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09343c.   v14:= temp;
#L09343e.   v0:= v17  @type object;
#L093442.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L093446.   v3:= v3 + -1;
#L09344a.   v0:= v17  @type object;
#L09344e.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L093452.   goto L09324c;
#L093456.   v3:= @@[|java:io:ObjectStreamClass.OBJECTSTREAMCLASSCLASS|]   @type object;
#L09345a.   if v5 != v3 then goto L093482;
#L09345e.   v18:= ([|java:io:ObjectStreamClass|])v18;
#L093462.   call temp:=  [|java:io:ObjectOutputStream.writeClassDesc|](v17, v18, v19) @signature [|Ljava/io/ObjectOutputStream;.writeClassDesc:(Ljava/io/ObjectStreamClass;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093468.   v14:= temp;
#L09346a.   v0:= v17  @type object;
#L09346e.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L093472.   v3:= v3 + -1;
#L093476.   v0:= v17  @type object;
#L09347a.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L09347e.   goto L09324c;
#L093482.   v3:= @@[|java:io:ObjectStreamClass.STRINGCLASS|]   @type object;
#L093486.   if v5 != v3 then goto L0934ae;
#L09348a.   v18:= ([|java:lang:String|])v18;
#L09348e.   call temp:=  [|java:io:ObjectOutputStream.writeNewString|](v17, v18, v19) @signature [|Ljava/io/ObjectOutputStream;.writeNewString:(Ljava/lang/String;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093494.   v14:= temp;
#L093496.   v0:= v17  @type object;
#L09349a.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L09349e.   v3:= v3 + -1;
#L0934a2.   v0:= v17  @type object;
#L0934a6.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L0934aa.   goto L09324c;
#L0934ae.   call temp:=  [|java:lang:Class.isArray|](v5) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0934b4.   v3:= temp;
#L0934b6.   if v3 == 0 then goto L0934ee;
#L0934ba.   call temp:=  [|java:lang:Class.getComponentType|](v5) @signature [|Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0934c0.   v7:= temp  @type object;
#L0934c2.   v3:= v17  @type object;
#L0934c6.   v4:= v18  @type object;
#L0934ca.   v8:= v19;
#L0934ce.   call temp:=  [|java:io:ObjectOutputStream.writeNewArray|](v3, v4, v5, v6, v7, v8) @signature [|Ljava/io/ObjectOutputStream;.writeNewArray:(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/ObjectStreamClass;Ljava/lang/Class;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0934d4.   v14:= temp;
#L0934d6.   v0:= v17  @type object;
#L0934da.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L0934de.   v3:= v3 + -1;
#L0934e2.   v0:= v17  @type object;
#L0934e6.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L0934ea.   goto L09324c;
#L0934ee.   v0:= v18  @type object;
#L0934f2.   v3:= instanceof @varname v0 @type [|java:lang:Enum|];
#L0934f6.   if v3 == 0 then goto L093526;
#L0934fa.   v0:= v17  @type object;
#L0934fe.   v1:= v18  @type object;
#L093502.   v2:= v19;
#L093506.   call temp:=  [|java:io:ObjectOutputStream.writeNewEnum|](v0, v1, v5, v2) @signature [|Ljava/io/ObjectOutputStream;.writeNewEnum:(Ljava/lang/Object;Ljava/lang/Class;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09350c.   v14:= temp;
#L09350e.   v0:= v17  @type object;
#L093512.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L093516.   v3:= v3 + -1;
#L09351a.   v0:= v17  @type object;
#L09351e.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L093522.   goto L09324c;
#L093526.   v0:= v17  @type object;
#L09352a.   v1:= v18  @type object;
#L09352e.   v2:= v19;
#L093532.   call temp:=  [|java:io:ObjectOutputStream.writeNewObject|](v0, v1, v5, v6, v2) @signature [|Ljava/io/ObjectOutputStream;.writeNewObject:(Ljava/lang/Object;Ljava/lang/Class;Ljava/io/ObjectStreamClass;Z)I|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093538.   v14:= temp;
#L09353a.   v0:= v17  @type object;
#L09353e.   v3:= v0.[|java:io:ObjectOutputStream.nestedLevels|] ;
#L093542.   v3:= v3 + -1;
#L093546.   v0:= v17  @type object;
#L09354a.   v0.[|java:io:ObjectOutputStream.nestedLevels|]  := v3;
#L09354e.   goto L09324c;
  catch  [|any|] @[L09328a..L0932ac] goto L093396;
  catch  [|any|] @[L0932c4..L0932d6] goto L093396;
  catch  [|any|] @[L0932ee..L093310] goto L093396;
  catch  [|java:lang:IllegalAccessException|] @[L093316..L093324] goto L093372;
  catch  [|java:lang:reflect:InvocationTargetException|] @[L093316..L093324] goto L09337a;
  catch  [|any|] @[L093316..L093324] goto L093396;
  catch  [|any|] @[L093332..L09335a] goto L093396;
  catch  [|any|] @[L09337c..L093396] goto L093396;
  catch  [|any|] @[L0933ae..L093412] goto L093396;
  catch  [|any|] @[L09342a..L09343c] goto L093396;
  catch  [|any|] @[L093456..L093468] goto L093396;
  catch  [|any|] @[L093482..L093494] goto L093396;
  catch  [|any|] @[L0934ae..L0934d4] goto L093396;
  catch  [|any|] @[L0934ee..L09350c] goto L093396;
  catch  [|any|] @[L093526..L093538] goto L093396;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.annotateClass|] ([|java:io:ObjectOutputStream|] v0 @type (this), [|java:lang:Class|] v1 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.annotateClass:(Ljava/lang/Class;)V|] @Access PROTECTED {
      local temp ;
      
#L0935dc.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.annotateProxyClass|] ([|java:io:ObjectOutputStream|] v0 @type (this), [|java:lang:Class|] v1 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.annotateProxyClass:(Ljava/lang/Class;)V|] @Access PROTECTED {
      local temp ;
      
#L0935f0.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.close|] ([|java:io:ObjectOutputStream|] v1 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093604.   call temp:=  [|java:io:ObjectOutputStream.flush|](v1) @signature [|Ljava/io/ObjectOutputStream;.flush:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L09360a.   v0:= v1.[|java:io:ObjectOutputStream.output|]   @type object;
#L09360e.   call temp:=  [|java:io:DataOutputStream.close|](v0) @signature [|Ljava/io/DataOutputStream;.close:()V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093614.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.defaultWriteObject|] ([|java:io:ObjectOutputStream|] v2 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L093628.   v0:= v2.[|java:io:ObjectOutputStream.currentObject|]   @type object;
#L09362c.   if v0 != 0 then goto L09363c;
#L093630.   v0:= new [|java:io:NotActiveException|];
#L093634.   call temp:=  [|java:io:NotActiveException.<init>|](v0) @signature [|Ljava/io/NotActiveException;.<init>:()V|] @classDescriptor [|java:io:NotActiveException|] @type direct;
#L09363a.   throw v0;
#L09363c.   v0:= v2.[|java:io:ObjectOutputStream.currentObject|]   @type object;
#L093640.   v1:= v2.[|java:io:ObjectOutputStream.currentClass|]   @type object;
#L093644.   call temp:=  [|java:io:ObjectOutputStream.writeFieldValues|](v2, v0, v1) @signature [|Ljava/io/ObjectOutputStream;.writeFieldValues:(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09364a.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.drain|] ([|java:io:ObjectOutputStream|] v7 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.drain:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L09365c.   v6:= 0  @length 4;
#L09365e.   v3:= 1024  @length 16;
#L093662.   v4:= v7.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L093666.   if v4 == 0 then goto L093672;
#L09366a.   v4:= v7.[|java:io:ObjectOutputStream.primitiveTypesBuffer|]   @type object;
#L09366e.   if v4 != 0 then goto L093674;
#L093672.   return @void ;
#L093674.   v0:= 0  @length 4;
#L093676.   v4:= v7.[|java:io:ObjectOutputStream.primitiveTypesBuffer|]   @type object;
#L09367a.   call temp:=  [|java:io:ByteArrayOutputStream.toByteArray|](v4) @signature [|Ljava/io/ByteArrayOutputStream;.toByteArray:()[B|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L093680.   v2:= temp  @type object;
#L093682.   v4:= v2.length;
#L093684.   if v0 >= v4 then goto L0936e4;
#L093688.   v4:= v2.length;
#L09368a.   v4:= v4 - v0  @type int;
#L09368c.   if v4 <= v3 then goto L0936c2;
#L093690.   v1:= v3;
#L093692.   v4:= 256  @length 16;
#L093696.   if v1 >= v4 then goto L0936ca;
#L09369a.   v4:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L09369e.   v5:= 119  @length 16;
#L0936a2.   call temp:=  [|java:io:DataOutputStream.writeByte|](v4, v5) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0936a8.   v4:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L0936ac.   v5:= (byte)v1  @type i2b;
#L0936ae.   call temp:=  [|java:io:DataOutputStream.writeByte|](v4, v5) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0936b4.   v4:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L0936b8.   call temp:=  [|java:io:DataOutputStream.write|](v4, v2, v0, v1) @signature [|Ljava/io/DataOutputStream;.write:([BII)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0936be.   v0:= v0 + v1  @type int;
#L0936c0.   goto L093682;
#L0936c2.   v4:= v2.length;
#L0936c4.   v1:= v4 - v0  @type int;
#L0936c8.   goto L093692;
#L0936ca.   v4:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L0936ce.   v5:= 122  @length 16;
#L0936d2.   call temp:=  [|java:io:DataOutputStream.writeByte|](v4, v5) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0936d8.   v4:= v7.[|java:io:ObjectOutputStream.output|]   @type object;
#L0936dc.   call temp:=  [|java:io:DataOutputStream.writeInt|](v4, v1) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0936e2.   goto L0936b4;
#L0936e4.   v7.[|java:io:ObjectOutputStream.primitiveTypes|]  := v6 @type object;
#L0936e8.   v7.[|java:io:ObjectOutputStream.primitiveTypesBuffer|]  := v6 @type object;
#L0936ec.   goto L093672;

   }
    procedure [|boolean|] [|java:io:ObjectOutputStream.enableReplaceObject|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|boolean|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.enableReplaceObject:(Z)Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L093700.   v0:= v1.[|java:io:ObjectOutputStream.enableReplace|]   @boolean;
#L093704.   v1.[|java:io:ObjectOutputStream.enableReplace|]  := v2 @boolean;
#L093708.   return v0;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.flush|] ([|java:io:ObjectOutputStream|] v1 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09371c.   call temp:=  [|java:io:ObjectOutputStream.drain|](v1) @signature [|Ljava/io/ObjectOutputStream;.drain:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L093722.   v0:= v1.[|java:io:ObjectOutputStream.output|]   @type object;
#L093726.   call temp:=  [|java:io:DataOutputStream.flush|](v0) @signature [|Ljava/io/DataOutputStream;.flush:()V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09372c.   return @void ;

   }
    procedure [|java:io:ObjectOutputStream$PutField|] [|java:io:ObjectOutputStream.putFields|] ([|java:io:ObjectOutputStream|] v1 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.putFields:()Ljava/io/ObjectOutputStream$PutField;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093740.   v0:= v1.[|java:io:ObjectOutputStream.currentObject|]   @type object;
#L093744.   if v0 != 0 then goto L093754;
#L093748.   v0:= new [|java:io:NotActiveException|];
#L09374c.   call temp:=  [|java:io:NotActiveException.<init>|](v0) @signature [|Ljava/io/NotActiveException;.<init>:()V|] @classDescriptor [|java:io:NotActiveException|] @type direct;
#L093752.   throw v0;
#L093754.   v0:= v1.[|java:io:ObjectOutputStream.currentPutField|]   @type object;
#L093758.   if v0 != 0 then goto L093762;
#L09375c.   call temp:=  [|java:io:ObjectOutputStream.computePutField|](v1) @signature [|Ljava/io/ObjectOutputStream;.computePutField:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093762.   v0:= v1.[|java:io:ObjectOutputStream.currentPutField|]   @type object;
#L093766.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectOutputStream.replaceObject|] ([|java:io:ObjectOutputStream|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.replaceObject:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PROTECTED {
      local temp ;
      
#L093778.   return v1  @type object;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.reset|] ([|java:io:ObjectOutputStream|] v2 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09378c.   call temp:=  [|java:io:ObjectOutputStream.drain|](v2) @signature [|Ljava/io/ObjectOutputStream;.drain:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L093792.   v0:= v2.[|java:io:ObjectOutputStream.output|]   @type object;
#L093796.   v1:= 121  @length 16;
#L09379a.   call temp:=  [|java:io:DataOutputStream.writeByte|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0937a0.   call temp:=  [|java:io:ObjectOutputStream.resetState|](v2) @signature [|Ljava/io/ObjectOutputStream;.resetState:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0937a6.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.useProtocolVersion|] ([|java:io:ObjectOutputStream|] v3 @type (this), [|int|] v4) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.useProtocolVersion:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0937b8.   v0:= v3.[|java:io:ObjectOutputStream.objectsWritten|]   @type object;
#L0937bc.   call temp:=  [|java:io:SerializationHandleMap.isEmpty|](v0) @signature [|Ljava/io/SerializationHandleMap;.isEmpty:()Z|] @classDescriptor [|java:io:SerializationHandleMap|] @type virtual;
#L0937c2.   v0:= temp;
#L0937c4.   if v0 != 0 then goto L0937d8;
#L0937c8.   v0:= new [|java:lang:IllegalStateException|];
#L0937cc.   v1:= "Cannot set protocol version when stream in use" @type (object, string);
#L0937d0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0937d6.   throw v0;
#L0937d8.   v0:= 1  @length 4;
#L0937da.   if v4 == v0 then goto L093816;
#L0937de.   v0:= 2  @length 4;
#L0937e0.   if v4 == v0 then goto L093816;
#L0937e4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0937e8.   v1:= new [|java:lang:StringBuilder|];
#L0937ec.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0937f2.   v2:= "Unknown protocol: " @type (object, string);
#L0937f6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0937fc.   v1:= temp  @type object;
#L0937fe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L093804.   v1:= temp  @type object;
#L093806.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09380c.   v1:= temp  @type object;
#L09380e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L093814.   throw v0;
#L093816.   v3.[|java:io:ObjectOutputStream.protocolVersion|]  := v4;
#L09381a.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.write|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09382c.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093832.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L093836.   call temp:=  [|java:io:DataOutputStream.write|](v0, v2) @signature [|Ljava/io/DataOutputStream;.write:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09383c.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.write|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093850.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093856.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L09385a.   call temp:=  [|java:io:DataOutputStream.write|](v0, v2, v3, v4) @signature [|Ljava/io/DataOutputStream;.write:([BII)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093860.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeBoolean|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|boolean|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeBoolean:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093874.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09387a.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L09387e.   call temp:=  [|java:io:DataOutputStream.writeBoolean|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeBoolean:(Z)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093884.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeByte|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeByte:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093898.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09389e.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L0938a2.   call temp:=  [|java:io:DataOutputStream.writeByte|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0938a8.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeBytes|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeBytes:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0938bc.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0938c2.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L0938c6.   call temp:=  [|java:io:DataOutputStream.writeBytes|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeBytes:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0938cc.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeChar|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeChar:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0938e0.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0938e6.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L0938ea.   call temp:=  [|java:io:DataOutputStream.writeChar|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeChar:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0938f0.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeChars|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeChars:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093904.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09390a.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L09390e.   call temp:=  [|java:io:DataOutputStream.writeChars|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeChars:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093914.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeClassDescriptor|] ([|java:io:ObjectOutputStream|] v0 @type (this), [|java:io:ObjectStreamClass|] v1 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeClassDescriptor:(Ljava/io/ObjectStreamClass;)V|] @Access PROTECTED {
      local temp ;
      
#L093928.   call temp:=  [|java:io:ObjectOutputStream.writeNewClassDesc|](v0, v1) @signature [|Ljava/io/ObjectOutputStream;.writeNewClassDesc:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09392e.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeDouble|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|double|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeDouble:(D)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093940.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093946.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L09394a.   call temp:=  [|java:io:DataOutputStream.writeDouble|](v0, v2, v3) @signature [|Ljava/io/DataOutputStream;.writeDouble:(D)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093950.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeFields|] ([|java:io:ObjectOutputStream|] v1 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeFields:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093964.   v0:= v1.[|java:io:ObjectOutputStream.currentPutField|]   @type object;
#L093968.   if v0 != 0 then goto L093978;
#L09396c.   v0:= new [|java:io:NotActiveException|];
#L093970.   call temp:=  [|java:io:NotActiveException.<init>|](v0) @signature [|Ljava/io/NotActiveException;.<init>:()V|] @classDescriptor [|java:io:NotActiveException|] @type direct;
#L093976.   throw v0;
#L093978.   v0:= v1.[|java:io:ObjectOutputStream.currentPutField|]   @type object;
#L09397c.   call temp:=  [|java:io:ObjectOutputStream.writeFieldValues|](v1, v0) @signature [|Ljava/io/ObjectOutputStream;.writeFieldValues:(Ljava/io/EmulatedFieldsForDumping;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093982.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeFloat|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|float|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeFloat:(F)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093994.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L09399a.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L09399e.   call temp:=  [|java:io:DataOutputStream.writeFloat|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeFloat:(F)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0939a4.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeInt|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeInt:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0939b8.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0939be.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L0939c2.   call temp:=  [|java:io:DataOutputStream.writeInt|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0939c8.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeLong|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|long|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeLong:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0939dc.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L0939e2.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L0939e6.   call temp:=  [|java:io:DataOutputStream.writeLong|](v0, v2, v3) @signature [|Ljava/io/DataOutputStream;.writeLong:(J)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0939ec.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeObject|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L093a00.   v0:= 0  @length 4;
#L093a02.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v1, v2, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;Z)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093a08.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeObjectOverride|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeObjectOverride:(Ljava/lang/Object;)V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L093a1c.   v0:= v1.[|java:io:ObjectOutputStream.subclassOverridingImplementation|]   @boolean;
#L093a20.   if v0 != 0 then goto L093a30;
#L093a24.   v0:= new [|java:io:IOException|];
#L093a28.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L093a2e.   throw v0;
#L093a30.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeShort|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|int|] v2) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeShort:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093a44.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093a4a.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L093a4e.   call temp:=  [|java:io:DataOutputStream.writeShort|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093a54.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeStreamHeader|] ([|java:io:ObjectOutputStream|] v2 @type (this)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeStreamHeader:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L093a68.   v0:= v2.[|java:io:ObjectOutputStream.output|]   @type object;
#L093a6c.   v1:= -21267  @length 16;
#L093a70.   call temp:=  [|java:io:DataOutputStream.writeShort|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093a76.   v0:= v2.[|java:io:ObjectOutputStream.output|]   @type object;
#L093a7a.   v1:= 5  @length 4;
#L093a7c.   call temp:=  [|java:io:DataOutputStream.writeShort|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeShort:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093a82.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeUTF|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeUTF:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093a94.   call temp:=  [|java:io:ObjectOutputStream.checkWritePrimitiveTypes|](v1) @signature [|Ljava/io/ObjectOutputStream;.checkWritePrimitiveTypes:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093a9a.   v0:= v1.[|java:io:ObjectOutputStream.primitiveTypes|]   @type object;
#L093a9e.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093aa4.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectOutputStream.writeUnshared|] ([|java:io:ObjectOutputStream|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:io:ObjectOutputStream|] @signature [|Ljava/io/ObjectOutputStream;.writeUnshared:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093ab8.   v0:= 1  @length 4;
#L093aba.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v1, v2, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;Z)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type direct;
#L093ac0.   return @void ;

   }
record [|java:io:ObjectStreamClass$1|]  @type class @AccessFlag FINAL extends  [|java:util:Comparator|] {
   }
    procedure [|void|] [|java:io:ObjectStreamClass$1.<init>|] ([|java:io:ObjectStreamClass$1|] v0 @type (this)) @owner [|java:io:ObjectStreamClass$1|] @signature [|Ljava/io/ObjectStreamClass$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L093ad4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L093ada.   return @void ;

   }
    procedure [|int|] [|java:io:ObjectStreamClass$1.compare|] ([|java:io:ObjectStreamClass$1|] v2 @type (this), [|java:lang:Class|] v3 @type (object), [|java:lang:Class|] v4 @type (object)) @owner [|java:io:ObjectStreamClass$1|] @signature [|Ljava/io/ObjectStreamClass$1;.compare:(Ljava/lang/Class;Ljava/lang/Class;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L093aec.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L093af2.   v0:= temp  @type object;
#L093af4.   call temp:=  [|java:lang:Class.getName|](v4) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L093afa.   v1:= temp  @type object;
#L093afc.   call temp:=  [|java:lang:String.compareTo|](v0, v1) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L093b02.   v0:= temp;
#L093b04.   return v0;

   }
    procedure [|int|] [|java:io:ObjectStreamClass$1.compare|] ([|java:io:ObjectStreamClass$1|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:ObjectStreamClass$1|] @signature [|Ljava/io/ObjectStreamClass$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L093b18.   v2:= ([|java:lang:Class|])v2;
#L093b1c.   v3:= ([|java:lang:Class|])v3;
#L093b20.   call temp:=  [|java:io:ObjectStreamClass$1.compare|](v1, v2, v3) @signature [|Ljava/io/ObjectStreamClass$1;.compare:(Ljava/lang/Class;Ljava/lang/Class;)I|] @classDescriptor [|java:io:ObjectStreamClass$1|] @type virtual;
#L093b26.   v0:= temp;
#L093b28.   return v0;

   }
record [|java:io:ObjectStreamClass$2|]  @type class @AccessFlag FINAL extends  [|java:util:Comparator|] {
   }
    procedure [|void|] [|java:io:ObjectStreamClass$2.<init>|] ([|java:io:ObjectStreamClass$2|] v0 @type (this)) @owner [|java:io:ObjectStreamClass$2|] @signature [|Ljava/io/ObjectStreamClass$2;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L093b3c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L093b42.   return @void ;

   }
    procedure [|int|] [|java:io:ObjectStreamClass$2.compare|] ([|java:io:ObjectStreamClass$2|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:ObjectStreamClass$2|] @signature [|Ljava/io/ObjectStreamClass$2;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L093b54.   v2:= ([|java:lang:reflect:Field|])v2;
#L093b58.   v3:= ([|java:lang:reflect:Field|])v3;
#L093b5c.   call temp:=  [|java:io:ObjectStreamClass$2.compare|](v1, v2, v3) @signature [|Ljava/io/ObjectStreamClass$2;.compare:(Ljava/lang/reflect/Field;Ljava/lang/reflect/Field;)I|] @classDescriptor [|java:io:ObjectStreamClass$2|] @type virtual;
#L093b62.   v0:= temp;
#L093b64.   return v0;

   }
    procedure [|int|] [|java:io:ObjectStreamClass$2.compare|] ([|java:io:ObjectStreamClass$2|] v2 @type (this), [|java:lang:reflect:Field|] v3 @type (object), [|java:lang:reflect:Field|] v4 @type (object)) @owner [|java:io:ObjectStreamClass$2|] @signature [|Ljava/io/ObjectStreamClass$2;.compare:(Ljava/lang/reflect/Field;Ljava/lang/reflect/Field;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L093b78.   call temp:=  [|java:lang:reflect:Field.getName|](v3) @signature [|Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L093b7e.   v0:= temp  @type object;
#L093b80.   call temp:=  [|java:lang:reflect:Field.getName|](v4) @signature [|Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L093b86.   v1:= temp  @type object;
#L093b88.   call temp:=  [|java:lang:String.compareTo|](v0, v1) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L093b8e.   v0:= temp;
#L093b90.   return v0;

   }
record [|java:io:ObjectStreamClass$3|]  @type class @AccessFlag FINAL extends  [|java:util:Comparator|] {
   }
    procedure [|void|] [|java:io:ObjectStreamClass$3.<init>|] ([|java:io:ObjectStreamClass$3|] v0 @type (this)) @owner [|java:io:ObjectStreamClass$3|] @signature [|Ljava/io/ObjectStreamClass$3;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L093ba4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L093baa.   return @void ;

   }
    procedure [|int|] [|java:io:ObjectStreamClass$3.compare|] ([|java:io:ObjectStreamClass$3|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:ObjectStreamClass$3|] @signature [|Ljava/io/ObjectStreamClass$3;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L093bbc.   v2:= ([|java:lang:reflect:Constructor|])v2;
#L093bc0.   v3:= ([|java:lang:reflect:Constructor|])v3;
#L093bc4.   call temp:=  [|java:io:ObjectStreamClass$3.compare|](v1, v2, v3) @signature [|Ljava/io/ObjectStreamClass$3;.compare:(Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Constructor;)I|] @classDescriptor [|java:io:ObjectStreamClass$3|] @type virtual;
#L093bca.   v0:= temp;
#L093bcc.   return v0;

   }
    procedure [|int|] [|java:io:ObjectStreamClass$3.compare|] ([|java:io:ObjectStreamClass$3|] v2 @type (this), [|java:lang:reflect:Constructor|] v3 @type (object), [|java:lang:reflect:Constructor|] v4 @type (object)) @owner [|java:io:ObjectStreamClass$3|] @signature [|Ljava/io/ObjectStreamClass$3;.compare:(Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Constructor;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L093be0.   call temp:=  [|java:io:ObjectStreamClass.getConstructorSignature|](v3) @signature [|Ljava/io/ObjectStreamClass;.getConstructorSignature:(Ljava/lang/reflect/Constructor;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L093be6.   v0:= temp  @type object;
#L093be8.   call temp:=  [|java:io:ObjectStreamClass.getConstructorSignature|](v4) @signature [|Ljava/io/ObjectStreamClass;.getConstructorSignature:(Ljava/lang/reflect/Constructor;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L093bee.   v1:= temp  @type object;
#L093bf0.   call temp:=  [|java:lang:String.compareTo|](v0, v1) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L093bf6.   v0:= temp;
#L093bf8.   return v0;

   }
record [|java:io:ObjectStreamClass$4|]  @type class @AccessFlag FINAL extends  [|java:util:Comparator|] {
   }
    procedure [|void|] [|java:io:ObjectStreamClass$4.<init>|] ([|java:io:ObjectStreamClass$4|] v0 @type (this)) @owner [|java:io:ObjectStreamClass$4|] @signature [|Ljava/io/ObjectStreamClass$4;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L093c0c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L093c12.   return @void ;

   }
    procedure [|int|] [|java:io:ObjectStreamClass$4.compare|] ([|java:io:ObjectStreamClass$4|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:ObjectStreamClass$4|] @signature [|Ljava/io/ObjectStreamClass$4;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L093c24.   v2:= ([|java:lang:reflect:Method|])v2;
#L093c28.   v3:= ([|java:lang:reflect:Method|])v3;
#L093c2c.   call temp:=  [|java:io:ObjectStreamClass$4.compare|](v1, v2, v3) @signature [|Ljava/io/ObjectStreamClass$4;.compare:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I|] @classDescriptor [|java:io:ObjectStreamClass$4|] @type virtual;
#L093c32.   v0:= temp;
#L093c34.   return v0;

   }
    procedure [|int|] [|java:io:ObjectStreamClass$4.compare|] ([|java:io:ObjectStreamClass$4|] v3 @type (this), [|java:lang:reflect:Method|] v4 @type (object), [|java:lang:reflect:Method|] v5 @type (object)) @owner [|java:io:ObjectStreamClass$4|] @signature [|Ljava/io/ObjectStreamClass$4;.compare:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L093c48.   call temp:=  [|java:lang:reflect:Method.getName|](v4) @signature [|Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L093c4e.   v1:= temp  @type object;
#L093c50.   call temp:=  [|java:lang:reflect:Method.getName|](v5) @signature [|Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L093c56.   v2:= temp  @type object;
#L093c58.   call temp:=  [|java:lang:String.compareTo|](v1, v2) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L093c5e.   v0:= temp;
#L093c60.   if v0 != 0 then goto L093c7c;
#L093c64.   call temp:=  [|java:io:ObjectStreamClass.getMethodSignature|](v4) @signature [|Ljava/io/ObjectStreamClass;.getMethodSignature:(Ljava/lang/reflect/Method;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L093c6a.   v1:= temp  @type object;
#L093c6c.   call temp:=  [|java:io:ObjectStreamClass.getMethodSignature|](v5) @signature [|Ljava/io/ObjectStreamClass;.getMethodSignature:(Ljava/lang/reflect/Method;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L093c72.   v2:= temp  @type object;
#L093c74.   call temp:=  [|java:lang:String.compareTo|](v1, v2) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L093c7a.   v0:= temp;
#L093c7c.   return v0;

   }
record [|java:io:ObjectStreamClass$5|]  @type class @AccessFlag FINAL  extends [|java:lang:ThreadLocal|] {
   }
    procedure [|void|] [|java:io:ObjectStreamClass$5.<init>|] ([|java:io:ObjectStreamClass$5|] v0 @type (this)) @owner [|java:io:ObjectStreamClass$5|] @signature [|Ljava/io/ObjectStreamClass$5;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L093c90.   call temp:=  [|java:lang:ThreadLocal.<init>|](v0) @signature [|Ljava/lang/ThreadLocal;.<init>:()V|] @classDescriptor [|java:lang:ThreadLocal|] @type direct;
#L093c96.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectStreamClass$5.initialValue|] ([|java:io:ObjectStreamClass$5|] v1 @type (this)) @owner [|java:io:ObjectStreamClass$5|] @signature [|Ljava/io/ObjectStreamClass$5;.initialValue:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L093ca8.   call temp:=  [|java:io:ObjectStreamClass$5.initialValue|](v1) @signature [|Ljava/io/ObjectStreamClass$5;.initialValue:()Ljava/util/WeakHashMap;|] @classDescriptor [|java:io:ObjectStreamClass$5|] @type virtual;
#L093cae.   v0:= temp  @type object;
#L093cb0.   return v0  @type object;

   }
    procedure [|java:util:WeakHashMap|] [|java:io:ObjectStreamClass$5.initialValue|] ([|java:io:ObjectStreamClass$5|] v1 @type (this)) @owner [|java:io:ObjectStreamClass$5|] @signature [|Ljava/io/ObjectStreamClass$5;.initialValue:()Ljava/util/WeakHashMap;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L093cc4.   v0:= new [|java:util:WeakHashMap|];
#L093cc8.   call temp:=  [|java:util:WeakHashMap.<init>|](v0) @signature [|Ljava/util/WeakHashMap;.<init>:()V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L093cce.   return v0  @type object;

   }
record [|java:io:ObjectStreamClass|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|boolean|] [|java:io:ObjectStreamClass.arePropertiesResolved|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:List|] [|java:io:ObjectStreamClass.cachedHierarchy|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
      [|java:lang:String|] [|java:io:ObjectStreamClass.className|]    @AccessFlag PRIVATE_TRANSIENT;
      [|long|] [|java:io:ObjectStreamClass.constructor|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:io:ObjectStreamField|][] [|java:io:ObjectStreamClass.fields|]    @AccessFlag PRIVATE_TRANSIENT;
      [|byte|] [|java:io:ObjectStreamClass.flags|]    @AccessFlag PRIVATE_TRANSIENT;
      [|boolean|] [|java:io:ObjectStreamClass.isEnum|]    @AccessFlag PRIVATE_TRANSIENT;
      [|boolean|] [|java:io:ObjectStreamClass.isExternalizable|]    @AccessFlag PRIVATE_TRANSIENT;
      [|boolean|] [|java:io:ObjectStreamClass.isProxy|]    @AccessFlag PRIVATE_TRANSIENT;
      [|boolean|] [|java:io:ObjectStreamClass.isSerializable|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:io:ObjectStreamField|][] [|java:io:ObjectStreamClass.loadFields|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.methodReadObject|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.methodReadObjectNoData|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.methodReadResolve|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.methodWriteObject|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.methodWriteReplace|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:HashMap|] [|java:io:ObjectStreamClass.reflectionFields|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:Class|] [|java:io:ObjectStreamClass.resolvedClass|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:Class|] [|java:io:ObjectStreamClass.resolvedConstructorClass|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:io:ObjectStreamClass.resolvedConstructorMethodId|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:io:ObjectStreamClass|] [|java:io:ObjectStreamClass.superclass|]    @AccessFlag PRIVATE_TRANSIENT;
      [|long|] [|java:io:ObjectStreamClass.svUID|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|java:lang:Class|] @@[|java:io:ObjectStreamClass.ARRAY_OF_FIELDS|]    @AccessFlag STATIC_FINAL;
      global [|java:lang:Class|] @@[|java:io:ObjectStreamClass.CLASSCLASS|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:io:ObjectStreamClass.CLASS_MODIFIERS_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:io:ObjectStreamClass.CLINIT_MODIFIERS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:io:ObjectStreamClass.CLINIT_NAME|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:io:ObjectStreamClass.CLINIT_SIGNATURE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:io:ObjectStreamClass.CONSTRUCTOR_IS_NOT_RESOLVED|]    @AccessFlag STATIC_FINAL;
      global [|java:lang:Class|] @@[|java:io:ObjectStreamClass.EXTERNALIZABLE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:io:ObjectStreamClass.FIELD_MODIFIERS_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:io:ObjectStreamClass.METHOD_MODIFIERS_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:io:ObjectStreamField|][] @@[|java:io:ObjectStreamClass.NO_FIELDS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:Class|] @@[|java:io:ObjectStreamClass.OBJECTSTREAMCLASSCLASS|]    @AccessFlag STATIC_FINAL;
      global [|java:lang:Class|][] @@[|java:io:ObjectStreamClass.READ_PARAM_TYPES|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:Class|] @@[|java:io:ObjectStreamClass.SERIALIZABLE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:Class|] @@[|java:io:ObjectStreamClass.STRINGCLASS|]    @AccessFlag STATIC_FINAL;
      global [|java:lang:String|] @@[|java:io:ObjectStreamClass.UID_FIELD_NAME|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:Class|][] @@[|java:io:ObjectStreamClass.WRITE_PARAM_TYPES|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:io:ObjectStreamClass.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:ref:SoftReference|] @@[|java:io:ObjectStreamClass.storage|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:io:ObjectStreamClass.<clinit>|] () @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L093ce0.   v4:= 1  @length 4;
#L093ce2.   v3:= 0  @length 4;
#L093ce4.   v1:= new [|java:lang:Class|][v4];
#L093ce8.   v2:= new [|java:io:ObjectInputStream|];
#L093cec.   v1[v3]:= v2  @type object;
#L093cf0.   @@[|java:io:ObjectStreamClass.READ_PARAM_TYPES|] := v1  @type object;
#L093cf4.   v1:= new [|java:lang:Class|][v4];
#L093cf8.   v2:= new [|java:io:ObjectOutputStream|];
#L093cfc.   v1[v3]:= v2  @type object;
#L093d00.   @@[|java:io:ObjectStreamClass.WRITE_PARAM_TYPES|] := v1  @type object;
#L093d04.   v1:= new [|java:io:ObjectStreamField|][v3];
#L093d08.   @@[|java:io:ObjectStreamClass.NO_FIELDS|] := v1  @type object;
#L093d0c.   v1:= "[Ljava.io.ObjectStreamField;" @type (object, string);
#L093d10.   call temp:=  [|java:lang:Class.forName|](v1) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L093d16.   v1:= temp  @type object;
#L093d18.   @@[|java:io:ObjectStreamClass.ARRAY_OF_FIELDS|] := v1  @type object;
#L093d1c.   v1:= new [|java:io:Serializable|];
#L093d20.   @@[|java:io:ObjectStreamClass.SERIALIZABLE|] := v1  @type object;
#L093d24.   v1:= new [|java:io:Externalizable|];
#L093d28.   @@[|java:io:ObjectStreamClass.EXTERNALIZABLE|] := v1  @type object;
#L093d2c.   v1:= new [|java:lang:String|];
#L093d30.   @@[|java:io:ObjectStreamClass.STRINGCLASS|] := v1  @type object;
#L093d34.   v1:= new [|java:lang:Class|];
#L093d38.   @@[|java:io:ObjectStreamClass.CLASSCLASS|] := v1  @type object;
#L093d3c.   v1:= new [|java:io:ObjectStreamClass|];
#L093d40.   @@[|java:io:ObjectStreamClass.OBJECTSTREAMCLASSCLASS|] := v1  @type object;
#L093d44.   v1:= new [|java:lang:ref:SoftReference|];
#L093d48.   v2:= 0  @length 4;
#L093d4a.   call temp:=  [|java:lang:ref:SoftReference.<init>|](v1, v2) @signature [|Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:SoftReference|] @type direct;
#L093d50.   @@[|java:io:ObjectStreamClass.storage|] := v1  @type object;
#L093d54.   return @void ;
#L093d56.   v0:= Exception  @type object;
#L093d58.   v1:= new [|java:lang:AssertionError|];
#L093d5c.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L093d62.   throw v1;
  catch  [|java:lang:ClassNotFoundException|] @[L093d0c..L093d1c] goto L093d56;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.<init>|] ([|java:io:ObjectStreamClass|] v2 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L093d84.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L093d8a.   v0:= new [|java:util:HashMap|];
#L093d8e.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L093d94.   v2.[|java:io:ObjectStreamClass.reflectionFields|]  := v0 @type object;
#L093d98.   v0:= -1  @length wide16;
#L093d9c.   v2.[|java:io:ObjectStreamClass.constructor|]  := v0 @wide;
#L093da0.   return @void ;

   }
    procedure [|long|] [|java:io:ObjectStreamClass.computeSerialVersionUID|] ([|java:lang:Class|] v27 @type (object), [|java:lang:reflect:Field|][] v28 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.computeSerialVersionUID:(Ljava/lang/Class;[Ljava/lang/reflect/Field;)J|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
        v25;
        v26;
      
#L093db4.   v11:= 0  @length 4;
#L093db6.   v0:= v28  @type object;
#L093dba.   v0:= v0.length;
#L093dbc.   v24:= v0;
#L093dc0.   v0:= v24;
#L093dc4.   if v11 >= v0 then goto L093e7a;
#L093dc8.   v8:= v28[v11]  @type object;
#L093dcc.   call temp:=  [|java:lang:reflect:Field.getType|](v8) @signature [|Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L093dd2.   v24:= temp  @type object;
#L093dd4.   v25:= @@[|java:lang:Long.TYPE|]   @type object;
#L093dd8.   v0:= v24  @type object;
#L093ddc.   v1:= v25  @type object;
#L093de0.   if v0 != v1 then goto L093e74;
#L093de4.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v8) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L093dea.   v20:= temp;
#L093dec.   call temp:=  [|java:lang:reflect:Modifier.isStatic|](v20) @signature [|Ljava/lang/reflect/Modifier;.isStatic:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L093df2.   v24:= temp;
#L093df4.   if v24 == 0 then goto L093e74;
#L093df8.   call temp:=  [|java:lang:reflect:Modifier.isFinal|](v20) @signature [|Ljava/lang/reflect/Modifier;.isFinal:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L093dfe.   v24:= temp;
#L093e00.   if v24 == 0 then goto L093e74;
#L093e04.   v24:= "serialVersionUID" @type (object, string);
#L093e08.   call temp:=  [|java:lang:reflect:Field.getName|](v8) @signature [|Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L093e0e.   v25:= temp  @type object;
#L093e10.   call temp:=  [|java:lang:String.equals|](v24, v25) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L093e16.   v24:= temp;
#L093e18.   if v24 == 0 then goto L093e74;
#L093e1c.   v24:= 1  @length 16;
#L093e20.   v0:= v24;
#L093e24.   call temp:=  [|java:lang:reflect:Field.setAccessible|](v8, v0) @signature [|Ljava/lang/reflect/Field;.setAccessible:(Z)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L093e2a.   v24:= 0  @length 16;
#L093e2e.   v0:= v24  @type object;
#L093e32.   call temp:=  [|java:lang:reflect:Field.getLong|](v8, v0) @signature [|Ljava/lang/reflect/Field;.getLong:(Ljava/lang/Object;)J|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L093e38.   v24:= temp  @type wide;
#L093e3a.   return v24  @type wide;
#L093e3c.   v12:= Exception  @type object;
#L093e3e.   v24:= new [|java:lang:RuntimeException|];
#L093e42.   v25:= new [|java:lang:StringBuilder|];
#L093e46.   call temp:=  [|java:lang:StringBuilder.<init>|](v25) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L093e4c.   v26:= "Error fetching SUID: " @type (object, string);
#L093e50.   call temp:=  [|java:lang:StringBuilder.append|](v25, v26) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L093e56.   v25:= temp  @type object;
#L093e58.   v0:= v25  @type object;
#L093e5c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L093e62.   v25:= temp  @type object;
#L093e64.   call temp:=  [|java:lang:StringBuilder.toString|](v25) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L093e6a.   v25:= temp  @type object;
#L093e6c.   call temp:=  [|java:lang:RuntimeException.<init>|](v24, v25) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L093e72.   throw v24;
#L093e74.   v11:= v11 + 1;
#L093e78.   goto L093db6;
#L093e7a.   v24:= "SHA" @type (object, string);
#L093e7e.   call temp:=  [|java:security:MessageDigest.getInstance|](v24) @signature [|Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L093e84.   v6:= temp  @type object;
#L093e86.   v22:= new [|java:io:ByteArrayOutputStream|];
#L093e8a.   call temp:=  [|java:io:ByteArrayOutputStream.<init>|](v22) @signature [|Ljava/io/ByteArrayOutputStream;.<init>:()V|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type direct;
#L093e90.   v21:= new [|java:io:DataOutputStream|];
#L093e94.   call temp:=  [|java:io:DataOutputStream.<init>|](v21, v22) @signature [|Ljava/io/DataOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:DataOutputStream|] @type direct;
#L093e9a.   call temp:=  [|java:lang:Class.getName|](v27) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L093ea0.   v24:= temp  @type object;
#L093ea2.   v0:= v21  @type object;
#L093ea6.   v1:= v24  @type object;
#L093eaa.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093eb0.   call temp:=  [|java:lang:Class.getModifiers|](v27) @signature [|Ljava/lang/Class;.getModifiers:()I|] @classDescriptor [|java:lang:Class|] @type virtual;
#L093eb6.   v24:= temp;
#L093eb8.   v0:= v24;
#L093ebc.   v2:= v0 ^& 1553;
#L093ec0.   call temp:=  [|java:lang:Class.isArray|](v27) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L093ec6.   v15:= temp;
#L093ec8.   if v15 == 0 then goto L093ed0;
#L093ecc.   v2:= v2 ^| 1024;
#L093ed0.   call temp:=  [|java:lang:Class.isInterface|](v27) @signature [|Ljava/lang/Class;.isInterface:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L093ed6.   v24:= temp;
#L093ed8.   if v24 == 0 then goto L093eec;
#L093edc.   call temp:=  [|java:lang:reflect:Modifier.isPublic|](v2) @signature [|Ljava/lang/reflect/Modifier;.isPublic:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L093ee2.   v24:= temp;
#L093ee4.   if v24 != 0 then goto L093eec;
#L093ee8.   v2:= v2 ^& -1025;
#L093eec.   v0:= v21  @type object;
#L093ef0.   call temp:=  [|java:io:DataOutputStream.writeInt|](v0, v2) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093ef6.   if v15 != 0 then goto L093f6a;
#L093efa.   call temp:=  [|java:lang:Class.getInterfaces|](v27) @signature [|Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L093f00.   v14:= temp  @type object;
#L093f02.   v0:= v14.length;
#L093f04.   v24:= v0;
#L093f08.   v25:= 1  @length 16;
#L093f0c.   v0:= v24;
#L093f10.   v1:= v25;
#L093f14.   if v0 <= v1 then goto L093f28;
#L093f18.   v13:= new [|java:io:ObjectStreamClass$1|];
#L093f1c.   call temp:=  [|java:io:ObjectStreamClass$1.<init>|](v13) @signature [|Ljava/io/ObjectStreamClass$1;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamClass$1|] @type direct;
#L093f22.   call temp:=  [|java:util:Arrays.sort|](v14, v13) @signature [|Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L093f28.   v11:= 0  @length 4;
#L093f2a.   v0:= v14.length;
#L093f2c.   v24:= v0;
#L093f30.   v0:= v24;
#L093f34.   if v11 >= v0 then goto L093f6a;
#L093f38.   v24:= v14[v11]  @type object;
#L093f3c.   call temp:=  [|java:lang:Class.getName|](v24) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L093f42.   v24:= temp  @type object;
#L093f44.   v0:= v21  @type object;
#L093f48.   v1:= v24  @type object;
#L093f4c.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L093f52.   v11:= v11 + 1;
#L093f56.   goto L093f2a;
#L093f58.   v7:= Exception  @type object;
#L093f5a.   v24:= new [|java:lang:Error|];
#L093f5e.   v0:= v24  @type object;
#L093f62.   call temp:=  [|java:lang:Error.<init>|](v0, v7) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L093f68.   throw v24;
#L093f6a.   v0:= v28  @type object;
#L093f6e.   v0:= v0.length;
#L093f70.   v24:= v0;
#L093f74.   v25:= 1  @length 16;
#L093f78.   v0:= v24;
#L093f7c.   v1:= v25;
#L093f80.   if v0 <= v1 then goto L093f98;
#L093f84.   v9:= new [|java:io:ObjectStreamClass$2|];
#L093f88.   call temp:=  [|java:io:ObjectStreamClass$2.<init>|](v9) @signature [|Ljava/io/ObjectStreamClass$2;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamClass$2|] @type direct;
#L093f8e.   v0:= v28  @type object;
#L093f92.   call temp:=  [|java:util:Arrays.sort|](v0, v9) @signature [|Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L093f98.   v11:= 0  @length 4;
#L093f9a.   v0:= v28  @type object;
#L093f9e.   v0:= v0.length;
#L093fa0.   v24:= v0;
#L093fa4.   v0:= v24;
#L093fa8.   if v11 >= v0 then goto L09403e;
#L093fac.   v8:= v28[v11]  @type object;
#L093fb0.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v8) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L093fb6.   v24:= temp;
#L093fb8.   v0:= v24;
#L093fbc.   v0:= v0 ^& 223;
#L093fc0.   v20:= v0;
#L093fc4.   call temp:=  [|java:lang:reflect:Modifier.isPrivate|](v20) @signature [|Ljava/lang/reflect/Modifier;.isPrivate:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L093fca.   v24:= temp;
#L093fcc.   if v24 == 0 then goto L094038;
#L093fd0.   call temp:=  [|java:lang:reflect:Modifier.isTransient|](v20) @signature [|Ljava/lang/reflect/Modifier;.isTransient:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L093fd6.   v24:= temp;
#L093fd8.   if v24 != 0 then goto L093fe8;
#L093fdc.   call temp:=  [|java:lang:reflect:Modifier.isStatic|](v20) @signature [|Ljava/lang/reflect/Modifier;.isStatic:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L093fe2.   v24:= temp;
#L093fe4.   if v24 == 0 then goto L094038;
#L093fe8.   v23:= 1  @length 16;
#L093fec.   if v23 != 0 then goto L094032;
#L093ff0.   call temp:=  [|java:lang:reflect:Field.getName|](v8) @signature [|Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L093ff6.   v24:= temp  @type object;
#L093ff8.   v0:= v21  @type object;
#L093ffc.   v1:= v24  @type object;
#L094000.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L094006.   v0:= v21  @type object;
#L09400a.   v1:= v20;
#L09400e.   call temp:=  [|java:io:DataOutputStream.writeInt|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L094014.   call temp:=  [|java:io:ObjectStreamClass.getFieldSignature|](v8) @signature [|Ljava/io/ObjectStreamClass;.getFieldSignature:(Ljava/lang/reflect/Field;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L09401a.   v24:= temp  @type object;
#L09401c.   call temp:=  [|java:io:ObjectStreamClass.descriptorForFieldSignature|](v24) @signature [|Ljava/io/ObjectStreamClass;.descriptorForFieldSignature:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094022.   v24:= temp  @type object;
#L094024.   v0:= v21  @type object;
#L094028.   v1:= v24  @type object;
#L09402c.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L094032.   v11:= v11 + 1;
#L094036.   goto L093f9a;
#L094038.   v23:= 0  @length 16;
#L09403c.   goto L093fec;
#L09403e.   call temp:=  [|java:io:ObjectStreamClass.hasClinit|](v27) @signature [|Ljava/io/ObjectStreamClass;.hasClinit:(Ljava/lang/Class;)Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094044.   v24:= temp;
#L094046.   if v24 == 0 then goto L094080;
#L09404a.   v24:= "<clinit>" @type (object, string);
#L09404e.   v0:= v21  @type object;
#L094052.   v1:= v24  @type object;
#L094056.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09405c.   v24:= 8  @length 16;
#L094060.   v0:= v21  @type object;
#L094064.   v1:= v24;
#L094068.   call temp:=  [|java:io:DataOutputStream.writeInt|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L09406e.   v24:= "()V" @type (object, string);
#L094072.   v0:= v21  @type object;
#L094076.   v1:= v24  @type object;
#L09407a.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L094080.   call temp:=  [|java:lang:Class.getDeclaredConstructors|](v27) @signature [|Ljava/lang/Class;.getDeclaredConstructors:()[Ljava/lang/reflect/Constructor;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094086.   v5:= temp  @type object;
#L094088.   v0:= v5.length;
#L09408a.   v24:= v0;
#L09408e.   v25:= 1  @length 16;
#L094092.   v0:= v24;
#L094096.   v1:= v25;
#L09409a.   if v0 <= v1 then goto L0940ae;
#L09409e.   v4:= new [|java:io:ObjectStreamClass$3|];
#L0940a2.   call temp:=  [|java:io:ObjectStreamClass$3.<init>|](v4) @signature [|Ljava/io/ObjectStreamClass$3;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamClass$3|] @type direct;
#L0940a8.   call temp:=  [|java:util:Arrays.sort|](v5, v4) @signature [|Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0940ae.   v11:= 0  @length 4;
#L0940b0.   v0:= v5.length;
#L0940b2.   v24:= v0;
#L0940b6.   v0:= v24;
#L0940ba.   if v11 >= v0 then goto L094136;
#L0940be.   v3:= v5[v11]  @type object;
#L0940c2.   call temp:=  [|java:lang:reflect:Constructor.getModifiers|](v3) @signature [|Ljava/lang/reflect/Constructor;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0940c8.   v24:= temp;
#L0940ca.   v0:= v24;
#L0940ce.   v0:= v0 ^& 3391;
#L0940d2.   v20:= v0;
#L0940d6.   call temp:=  [|java:lang:reflect:Modifier.isPrivate|](v20) @signature [|Ljava/lang/reflect/Modifier;.isPrivate:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0940dc.   v16:= temp;
#L0940de.   if v16 != 0 then goto L094130;
#L0940e2.   v24:= "<init>" @type (object, string);
#L0940e6.   v0:= v21  @type object;
#L0940ea.   v1:= v24  @type object;
#L0940ee.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0940f4.   v0:= v21  @type object;
#L0940f8.   v1:= v20;
#L0940fc.   call temp:=  [|java:io:DataOutputStream.writeInt|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L094102.   call temp:=  [|java:io:ObjectStreamClass.getConstructorSignature|](v3) @signature [|Ljava/io/ObjectStreamClass;.getConstructorSignature:(Ljava/lang/reflect/Constructor;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094108.   v24:= temp  @type object;
#L09410a.   call temp:=  [|java:io:ObjectStreamClass.descriptorForSignature|](v24) @signature [|Ljava/io/ObjectStreamClass;.descriptorForSignature:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094110.   v24:= temp  @type object;
#L094112.   v25:= 47  @length 16;
#L094116.   v26:= 46  @length 16;
#L09411a.   call temp:=  [|java:lang:String.replace|](v24, v25, v26) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L094120.   v24:= temp  @type object;
#L094122.   v0:= v21  @type object;
#L094126.   v1:= v24  @type object;
#L09412a.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L094130.   v11:= v11 + 1;
#L094134.   goto L0940b0;
#L094136.   call temp:=  [|java:lang:Class.getDeclaredMethods|](v27) @signature [|Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09413c.   v19:= temp  @type object;
#L09413e.   v0:= v19  @type object;
#L094142.   v0:= v0.length;
#L094144.   v24:= v0;
#L094148.   v25:= 1  @length 16;
#L09414c.   v0:= v24;
#L094150.   v1:= v25;
#L094154.   if v0 <= v1 then goto L094170;
#L094158.   v18:= new [|java:io:ObjectStreamClass$4|];
#L09415c.   call temp:=  [|java:io:ObjectStreamClass$4.<init>|](v18) @signature [|Ljava/io/ObjectStreamClass$4;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamClass$4|] @type direct;
#L094162.   v0:= v19  @type object;
#L094166.   v1:= v18  @type object;
#L09416a.   call temp:=  [|java:util:Arrays.sort|](v0, v1) @signature [|Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L094170.   v11:= 0  @length 4;
#L094172.   v0:= v19  @type object;
#L094176.   v0:= v0.length;
#L094178.   v24:= v0;
#L09417c.   v0:= v24;
#L094180.   if v11 >= v0 then goto L094238;
#L094184.   v17:= v19[v11]  @type object;
#L094188.   call temp:=  [|java:lang:reflect:Method.getModifiers|](v17) @signature [|Ljava/lang/reflect/Method;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L09418e.   v24:= temp;
#L094190.   v0:= v24;
#L094194.   v0:= v0 ^& 3391;
#L094198.   v20:= v0;
#L09419c.   call temp:=  [|java:lang:reflect:Modifier.isPrivate|](v20) @signature [|Ljava/lang/reflect/Modifier;.isPrivate:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0941a2.   v16:= temp;
#L0941a4.   if v16 != 0 then goto L0941fa;
#L0941a8.   call temp:=  [|java:lang:reflect:Method.getName|](v17) @signature [|Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0941ae.   v24:= temp  @type object;
#L0941b0.   v0:= v21  @type object;
#L0941b4.   v1:= v24  @type object;
#L0941b8.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0941be.   v0:= v21  @type object;
#L0941c2.   v1:= v20;
#L0941c6.   call temp:=  [|java:io:DataOutputStream.writeInt|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0941cc.   call temp:=  [|java:io:ObjectStreamClass.getMethodSignature|](v17) @signature [|Ljava/io/ObjectStreamClass;.getMethodSignature:(Ljava/lang/reflect/Method;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0941d2.   v24:= temp  @type object;
#L0941d4.   call temp:=  [|java:io:ObjectStreamClass.descriptorForSignature|](v24) @signature [|Ljava/io/ObjectStreamClass;.descriptorForSignature:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0941da.   v24:= temp  @type object;
#L0941dc.   v25:= 47  @length 16;
#L0941e0.   v26:= 46  @length 16;
#L0941e4.   call temp:=  [|java:lang:String.replace|](v24, v25, v26) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0941ea.   v24:= temp  @type object;
#L0941ec.   v0:= v21  @type object;
#L0941f0.   v1:= v24  @type object;
#L0941f4.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v0, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L0941fa.   v11:= v11 + 1;
#L0941fe.   goto L094172;
#L094200.   v7:= Exception  @type object;
#L094202.   v24:= new [|java:lang:RuntimeException|];
#L094206.   v25:= new [|java:lang:StringBuilder|];
#L09420a.   call temp:=  [|java:lang:StringBuilder.<init>|](v25) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L094210.   v0:= v25  @type object;
#L094214.   call temp:=  [|java:lang:StringBuilder.append|](v0, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09421a.   v25:= temp  @type object;
#L09421c.   v26:= " computing SHA-1/SUID" @type (object, string);
#L094220.   call temp:=  [|java:lang:StringBuilder.append|](v25, v26) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L094226.   v25:= temp  @type object;
#L094228.   call temp:=  [|java:lang:StringBuilder.toString|](v25) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09422e.   v25:= temp  @type object;
#L094230.   call temp:=  [|java:lang:RuntimeException.<init>|](v24, v25) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L094236.   throw v24;
#L094238.   call temp:=  [|java:io:ByteArrayOutputStream.toByteArray|](v22) @signature [|Ljava/io/ByteArrayOutputStream;.toByteArray:()[B|] @classDescriptor [|java:io:ByteArrayOutputStream|] @type virtual;
#L09423e.   v24:= temp  @type object;
#L094240.   v0:= v24  @type object;
#L094244.   call temp:=  [|java:security:MessageDigest.digest|](v6, v0) @signature [|Ljava/security/MessageDigest;.digest:([B)[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L09424a.   v10:= temp  @type object;
#L09424c.   v24:= 0  @length 16;
#L094250.   v25:= @@[|java:nio:ByteOrder.LITTLE_ENDIAN|]   @type object;
#L094254.   v0:= v24;
#L094258.   v1:= v25  @type object;
#L09425c.   call temp:=  [|libcore:io:Memory.peekLong|](v10, v0, v1) @signature [|Llibcore/io/Memory;.peekLong:([BILjava/nio/ByteOrder;)J|] @classDescriptor [|libcore:io:Memory|] @type static;
#L094262.   v24:= temp  @type wide;
#L094264.   goto L093e3a;
  catch  [|java:lang:IllegalAccessException|] @[L093e2e..L093e38] goto L093e3c;
  catch  [|java:security:NoSuchAlgorithmException|] @[L093e7a..L093e84] goto L093f58;
  catch  [|java:io:IOException|] @[L093e90..L093f52] goto L094200;
  catch  [|java:io:IOException|] @[L093f6a..L0941fa] goto L094200;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.copyFieldAttributes|] ([|java:io:ObjectStreamClass|] v6 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.copyFieldAttributes:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0942a8.   v5:= v6.[|java:io:ObjectStreamClass.loadFields|]   @type object;
#L0942ac.   if v5 == 0 then goto L0942b8;
#L0942b0.   v5:= v6.[|java:io:ObjectStreamClass.fields|]   @type object;
#L0942b4.   if v5 != 0 then goto L0942ba;
#L0942b8.   return @void ;
#L0942ba.   v1:= 0  @length 4;
#L0942bc.   v5:= v6.[|java:io:ObjectStreamClass.loadFields|]   @type object;
#L0942c0.   v5:= v5.length;
#L0942c2.   if v1 >= v5 then goto L0942b8;
#L0942c6.   v5:= v6.[|java:io:ObjectStreamClass.loadFields|]   @type object;
#L0942ca.   v3:= v5[v1]  @type object;
#L0942ce.   call temp:=  [|java:io:ObjectStreamField.getName|](v3) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0942d4.   v4:= temp  @type object;
#L0942d6.   v2:= 0  @length 4;
#L0942d8.   v5:= v6.[|java:io:ObjectStreamClass.fields|]   @type object;
#L0942dc.   v5:= v5.length;
#L0942de.   if v2 >= v5 then goto L09431a;
#L0942e2.   v5:= v6.[|java:io:ObjectStreamClass.fields|]   @type object;
#L0942e6.   v0:= v5[v2]  @type object;
#L0942ea.   call temp:=  [|java:io:ObjectStreamField.getName|](v0) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0942f0.   v5:= temp  @type object;
#L0942f2.   call temp:=  [|java:lang:String.equals|](v4, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0942f8.   v5:= temp;
#L0942fa.   if v5 == 0 then goto L094320;
#L0942fe.   call temp:=  [|java:io:ObjectStreamField.isUnshared|](v0) @signature [|Ljava/io/ObjectStreamField;.isUnshared:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L094304.   v5:= temp;
#L094306.   call temp:=  [|java:io:ObjectStreamField.setUnshared|](v3, v5) @signature [|Ljava/io/ObjectStreamField;.setUnshared:(Z)V|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L09430c.   call temp:=  [|java:io:ObjectStreamField.getOffset|](v0) @signature [|Ljava/io/ObjectStreamField;.getOffset:()I|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L094312.   v5:= temp;
#L094314.   call temp:=  [|java:io:ObjectStreamField.setOffset|](v3, v5) @signature [|Ljava/io/ObjectStreamField;.setOffset:(I)V|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L09431a.   v1:= v1 + 1;
#L09431e.   goto L0942bc;
#L094320.   v2:= v2 + 1;
#L094324.   goto L0942d8;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectStreamClass.createClassDesc|] ([|java:lang:Class|] v14 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.createClassDesc:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L094338.   v7:= new [|java:io:ObjectStreamClass|];
#L09433c.   call temp:=  [|java:io:ObjectStreamClass.<init>|](v7) @signature [|Ljava/io/ObjectStreamClass;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L094342.   call temp:=  [|java:lang:Class.isArray|](v14) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094348.   v5:= temp;
#L09434a.   call temp:=  [|java:io:ObjectStreamClass.isSerializable|](v14) @signature [|Ljava/io/ObjectStreamClass;.isSerializable:(Ljava/lang/Class;)Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094350.   v8:= temp;
#L094352.   call temp:=  [|java:io:ObjectStreamClass.isExternalizable|](v14) @signature [|Ljava/io/ObjectStreamClass;.isExternalizable:(Ljava/lang/Class;)Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094358.   v1:= temp;
#L09435a.   v7.[|java:io:ObjectStreamClass.isSerializable|]  := v8 @boolean;
#L09435e.   v7.[|java:io:ObjectStreamClass.isExternalizable|]  := v1 @boolean;
#L094362.   call temp:=  [|java:lang:Class.getName|](v14) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094368.   v10:= temp  @type object;
#L09436a.   call temp:=  [|java:io:ObjectStreamClass.setName|](v7, v10) @signature [|Ljava/io/ObjectStreamClass;.setName:(Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094370.   call temp:=  [|java:io:ObjectStreamClass.setClass|](v7, v14) @signature [|Ljava/io/ObjectStreamClass;.setClass:(Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094376.   call temp:=  [|java:lang:Class.getSuperclass|](v14) @signature [|Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09437c.   v9:= temp  @type object;
#L09437e.   if v9 == 0 then goto L094390;
#L094382.   call temp:=  [|java:io:ObjectStreamClass.lookup|](v9) @signature [|Ljava/io/ObjectStreamClass;.lookup:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094388.   v10:= temp  @type object;
#L09438a.   call temp:=  [|java:io:ObjectStreamClass.setSuperclass|](v7, v10) @signature [|Ljava/io/ObjectStreamClass;.setSuperclass:(Ljava/io/ObjectStreamClass;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094390.   v0:= 0  @length 4;
#L094392.   if v8 != 0 then goto L09439a;
#L094396.   if v1 == 0 then goto L0943bc;
#L09439a.   call temp:=  [|java:io:ObjectStreamClass.isEnum|](v7) @signature [|Ljava/io/ObjectStreamClass;.isEnum:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0943a0.   v10:= temp;
#L0943a2.   if v10 != 0 then goto L0943b2;
#L0943a6.   call temp:=  [|java:io:ObjectStreamClass.isProxy|](v7) @signature [|Ljava/io/ObjectStreamClass;.isProxy:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0943ac.   v10:= temp;
#L0943ae.   if v10 == 0 then goto L094432;
#L0943b2.   v10:= 0  @length wide16;
#L0943b6.   call temp:=  [|java:io:ObjectStreamClass.setSerialVersionUID|](v7, v10, v11) @signature [|Ljava/io/ObjectStreamClass;.setSerialVersionUID:(J)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0943bc.   if v8 == 0 then goto L09444a;
#L0943c0.   if v5 != 0 then goto L09444a;
#L0943c4.   if v0 != 0 then goto L0943d0;
#L0943c8.   call temp:=  [|java:lang:Class.getDeclaredFields|](v14) @signature [|Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0943ce.   v0:= temp  @type object;
#L0943d0.   call temp:=  [|java:io:ObjectStreamClass.buildFieldDescriptors|](v7, v0) @signature [|Ljava/io/ObjectStreamClass;.buildFieldDescriptors:([Ljava/lang/reflect/Field;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0943d6.   call temp:=  [|java:io:ObjectStreamClass.getFields|](v7) @signature [|Ljava/io/ObjectStreamClass;.getFields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0943dc.   v2:= temp  @type object;
#L0943de.   if v2 == 0 then goto L09445c;
#L0943e2.   v10:= v2.length;
#L0943e4.   v6:= new [|java:io:ObjectStreamField|][v10];
#L0943e8.   v4:= 0  @length 4;
#L0943ea.   v10:= v2.length;
#L0943ec.   if v4 >= v10 then goto L094456;
#L0943f0.   v10:= new [|java:io:ObjectStreamField|];
#L0943f4.   v11:= v2[v4]  @type object;
#L0943f8.   call temp:=  [|java:io:ObjectStreamField.getName|](v11) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0943fe.   v11:= temp  @type object;
#L094400.   v12:= v2[v4]  @type object;
#L094404.   call temp:=  [|java:io:ObjectStreamField.getType|](v12) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L09440a.   v12:= temp  @type object;
#L09440c.   v13:= v2[v4]  @type object;
#L094410.   call temp:=  [|java:io:ObjectStreamField.isUnshared|](v13) @signature [|Ljava/io/ObjectStreamField;.isUnshared:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L094416.   v13:= temp;
#L094418.   call temp:=  [|java:io:ObjectStreamField.<init>|](v10, v11, v12, v13) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;Z)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L09441e.   v6[v4]:= v10  @type object;
#L094422.   v10:= v6[v4]  @type object;
#L094426.   call temp:=  [|java:io:ObjectStreamField.getTypeString|](v10) @signature [|Ljava/io/ObjectStreamField;.getTypeString:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L09442c.   v4:= v4 + 1;
#L094430.   goto L0943ea;
#L094432.   call temp:=  [|java:lang:Class.getDeclaredFields|](v14) @signature [|Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094438.   v0:= temp  @type object;
#L09443a.   call temp:=  [|java:io:ObjectStreamClass.computeSerialVersionUID|](v14, v0) @signature [|Ljava/io/ObjectStreamClass;.computeSerialVersionUID:(Ljava/lang/Class;[Ljava/lang/reflect/Field;)J|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094440.   v10:= temp  @type wide;
#L094442.   call temp:=  [|java:io:ObjectStreamClass.setSerialVersionUID|](v7, v10, v11) @signature [|Ljava/io/ObjectStreamClass;.setSerialVersionUID:(J)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094448.   goto L0943bc;
#L09444a.   v10:= @@[|java:io:ObjectStreamClass.NO_FIELDS|]   @type object;
#L09444e.   call temp:=  [|java:io:ObjectStreamClass.setFields|](v7, v10) @signature [|Ljava/io/ObjectStreamClass;.setFields:([Ljava/io/ObjectStreamField;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094454.   goto L0943d6;
#L094456.   call temp:=  [|java:io:ObjectStreamClass.setLoadFields|](v7, v6) @signature [|Ljava/io/ObjectStreamClass;.setLoadFields:([Ljava/io/ObjectStreamField;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09445c.   v3:= 0  @length 4;
#L09445e.   if v1 == 0 then goto L0944e2;
#L094462.   v10:= 4  @length 4;
#L094464.   v3:= (byte)v10  @type i2b;
#L094466.   v10:= v3 ^| 8;
#L09446a.   v3:= (byte)v10  @type i2b;
#L09446c.   v10:= "writeReplace" @type (object, string);
#L094470.   call temp:=  [|java:io:ObjectStreamClass.findMethod|](v14, v10) @signature [|Ljava/io/ObjectStreamClass;.findMethod:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094476.   v10:= temp  @type object;
#L094478.   v7.[|java:io:ObjectStreamClass.methodWriteReplace|]  := v10 @type object;
#L09447c.   v10:= "readResolve" @type (object, string);
#L094480.   call temp:=  [|java:io:ObjectStreamClass.findMethod|](v14, v10) @signature [|Ljava/io/ObjectStreamClass;.findMethod:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094486.   v10:= temp  @type object;
#L094488.   v7.[|java:io:ObjectStreamClass.methodReadResolve|]  := v10 @type object;
#L09448c.   v10:= "writeObject" @type (object, string);
#L094490.   v11:= @@[|java:io:ObjectStreamClass.WRITE_PARAM_TYPES|]   @type object;
#L094494.   call temp:=  [|java:io:ObjectStreamClass.findPrivateMethod|](v14, v10, v11) @signature [|Ljava/io/ObjectStreamClass;.findPrivateMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L09449a.   v10:= temp  @type object;
#L09449c.   v7.[|java:io:ObjectStreamClass.methodWriteObject|]  := v10 @type object;
#L0944a0.   v10:= "readObject" @type (object, string);
#L0944a4.   v11:= @@[|java:io:ObjectStreamClass.READ_PARAM_TYPES|]   @type object;
#L0944a8.   call temp:=  [|java:io:ObjectStreamClass.findPrivateMethod|](v14, v10, v11) @signature [|Ljava/io/ObjectStreamClass;.findPrivateMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0944ae.   v10:= temp  @type object;
#L0944b0.   v7.[|java:io:ObjectStreamClass.methodReadObject|]  := v10 @type object;
#L0944b4.   v10:= "readObjectNoData" @type (object, string);
#L0944b8.   v11:= @@[|libcore:util:EmptyArray.CLASS|]   @type object;
#L0944bc.   call temp:=  [|java:io:ObjectStreamClass.findPrivateMethod|](v14, v10, v11) @signature [|Ljava/io/ObjectStreamClass;.findPrivateMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0944c2.   v10:= temp  @type object;
#L0944c4.   v7.[|java:io:ObjectStreamClass.methodReadObjectNoData|]  := v10 @type object;
#L0944c8.   call temp:=  [|java:io:ObjectStreamClass.hasMethodWriteObject|](v7) @signature [|Ljava/io/ObjectStreamClass;.hasMethodWriteObject:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0944ce.   v10:= temp;
#L0944d0.   if v10 == 0 then goto L0944da;
#L0944d4.   v10:= v3 ^| 1;
#L0944d8.   v3:= (byte)v10  @type i2b;
#L0944da.   call temp:=  [|java:io:ObjectStreamClass.setFlags|](v7, v3) @signature [|Ljava/io/ObjectStreamClass;.setFlags:(B)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0944e0.   return v7  @type object;
#L0944e2.   if v8 == 0 then goto L09446c;
#L0944e6.   v10:= 2  @length 4;
#L0944e8.   v3:= (byte)v10  @type i2b;
#L0944ea.   goto L09446c;

   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamClass.descriptorForFieldSignature|] ([|java:lang:String|] v2 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.descriptorForFieldSignature:(Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L0944fc.   v0:= 46  @length 16;
#L094500.   v1:= 47  @length 16;
#L094504.   call temp:=  [|java:lang:String.replace|](v2, v0, v1) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09450a.   v0:= temp  @type object;
#L09450c.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamClass.descriptorForSignature|] ([|java:lang:String|] v1 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.descriptorForSignature:(Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L094520.   v0:= "(" @type (object, string);
#L094524.   call temp:=  [|java:lang:String.indexOf|](v1, v0) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L09452a.   v0:= temp;
#L09452c.   call temp:=  [|java:lang:String.substring|](v1, v0) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L094532.   v0:= temp  @type object;
#L094534.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Field|] [|java:io:ObjectStreamClass.fieldSerialPersistentFields|] ([|java:lang:Class|] v4 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.fieldSerialPersistentFields:(Ljava/lang/Class;)Ljava/lang/reflect/Field;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L094548.   v2:= "serialPersistentFields" @type (object, string);
#L09454c.   call temp:=  [|java:lang:Class.getDeclaredField|](v4, v2) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094552.   v0:= temp  @type object;
#L094554.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v0) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L09455a.   v1:= temp;
#L09455c.   call temp:=  [|java:lang:reflect:Modifier.isStatic|](v1) @signature [|Ljava/lang/reflect/Modifier;.isStatic:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L094562.   v2:= temp;
#L094564.   if v2 == 0 then goto L094594;
#L094568.   call temp:=  [|java:lang:reflect:Modifier.isPrivate|](v1) @signature [|Ljava/lang/reflect/Modifier;.isPrivate:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L09456e.   v2:= temp;
#L094570.   if v2 == 0 then goto L094594;
#L094574.   call temp:=  [|java:lang:reflect:Modifier.isFinal|](v1) @signature [|Ljava/lang/reflect/Modifier;.isFinal:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L09457a.   v2:= temp;
#L09457c.   if v2 == 0 then goto L094594;
#L094580.   call temp:=  [|java:lang:reflect:Field.getType|](v0) @signature [|Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L094586.   v2:= temp  @type object;
#L094588.   v3:= @@[|java:io:ObjectStreamClass.ARRAY_OF_FIELDS|]   @type object;
#L09458c.   if v2 != v3 then goto L094594;
#L094590.   return v0  @type object;
#L094592.   v2:= Exception  @type object;
#L094594.   v0:= 0  @length 4;
#L094596.   goto L094590;
  catch  [|java:lang:NoSuchFieldException|] @[L094548..L09458c] goto L094592;

   }
    procedure [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.findMethod|] ([|java:lang:Class|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.findMethod:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Method;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0945b8.   v3:= 0  @length 4;
#L0945ba.   v1:= v4  @type object;
#L0945bc.   v0:= 0  @length 4;
#L0945be.   if v1 == 0 then goto L0945fc;
#L0945c2.   v2:= 0  @length 4;
#L0945c4.   v2:= ([|java:lang:Class|][])v2;
#L0945c8.   call temp:=  [|java:lang:Class.getDeclaredMethod|](v1, v5, v2) @signature [|Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0945ce.   v0:= temp  @type object;
#L0945d0.   if v1 == v4 then goto L0945e4;
#L0945d4.   call temp:=  [|java:lang:reflect:Method.getModifiers|](v0) @signature [|Ljava/lang/reflect/Method;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0945da.   v2:= temp;
#L0945dc.   v2:= v2 ^& 2;
#L0945e0.   if v2 != 0 then goto L0945f2;
#L0945e4.   v2:= 1  @length 4;
#L0945e6.   call temp:=  [|java:lang:reflect:Method.setAccessible|](v0, v2) @signature [|Ljava/lang/reflect/Method;.setAccessible:(Z)V|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0945ec.   v2:= v0  @type object;
#L0945ee.   return v2  @type object;
#L0945f0.   v2:= Exception  @type object;
#L0945f2.   call temp:=  [|java:lang:Class.getSuperclass|](v1) @signature [|Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0945f8.   v1:= temp  @type object;
#L0945fa.   goto L0945be;
#L0945fc.   v2:= v3  @type object;
#L0945fe.   goto L0945ee;
  catch  [|java:lang:NoSuchMethodException|] @[L0945c4..L0945ec] goto L0945f0;

   }
    procedure [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.findPrivateMethod|] ([|java:lang:Class|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:Class|][] v5 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.findPrivateMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L094620.   call temp:=  [|java:lang:Class.getDeclaredMethod|](v3, v4, v5) @signature [|Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094626.   v0:= temp  @type object;
#L094628.   call temp:=  [|java:lang:reflect:Method.getModifiers|](v0) @signature [|Ljava/lang/reflect/Method;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L09462e.   v1:= temp;
#L094630.   call temp:=  [|java:lang:reflect:Modifier.isPrivate|](v1) @signature [|Ljava/lang/reflect/Modifier;.isPrivate:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L094636.   v1:= temp;
#L094638.   if v1 == 0 then goto L094658;
#L09463c.   call temp:=  [|java:lang:reflect:Method.getReturnType|](v0) @signature [|Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L094642.   v1:= temp  @type object;
#L094644.   v2:= @@[|java:lang:Void.TYPE|]   @type object;
#L094648.   if v1 != v2 then goto L094658;
#L09464c.   v1:= 1  @length 4;
#L09464e.   call temp:=  [|java:lang:reflect:Method.setAccessible|](v0, v1) @signature [|Ljava/lang/reflect/Method;.setAccessible:(Z)V|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L094654.   return v0  @type object;
#L094656.   v1:= Exception  @type object;
#L094658.   v0:= 0  @length 4;
#L09465a.   goto L094654;
  catch  [|java:lang:NoSuchMethodException|] @[L094620..L094654] goto L094656;

   }
    procedure [|java:util:WeakHashMap|] [|java:io:ObjectStreamClass.getCache|] () @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getCache:()Ljava/util/WeakHashMap;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L09467c.   v1:= @@[|java:io:ObjectStreamClass.storage|]   @type object;
#L094680.   call temp:=  [|java:lang:ref:SoftReference.get|](v1) @signature [|Ljava/lang/ref/SoftReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:SoftReference|] @type virtual;
#L094686.   v0:= temp  @type object;
#L094688.   v0:= ([|java:lang:ThreadLocal|])v0;
#L09468c.   if v0 != 0 then goto L0946a8;
#L094690.   v0:= new [|java:io:ObjectStreamClass$5|];
#L094694.   call temp:=  [|java:io:ObjectStreamClass$5.<init>|](v0) @signature [|Ljava/io/ObjectStreamClass$5;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamClass$5|] @type direct;
#L09469a.   v1:= new [|java:lang:ref:SoftReference|];
#L09469e.   call temp:=  [|java:lang:ref:SoftReference.<init>|](v1, v0) @signature [|Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:SoftReference|] @type direct;
#L0946a4.   @@[|java:io:ObjectStreamClass.storage|] := v1  @type object;
#L0946a8.   call temp:=  [|java:lang:ThreadLocal.get|](v0) @signature [|Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ThreadLocal|] @type virtual;
#L0946ae.   v1:= temp  @type object;
#L0946b0.   v1:= ([|java:util:WeakHashMap|])v1;
#L0946b4.   return v1  @type object;

   }
    procedure [|int|] [|java:io:ObjectStreamClass.getConstructorId|] ([|java:lang:Class|] v0 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getConstructorId:(Ljava/lang/Class;)I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamClass.getConstructorSignature|] ([|java:lang:reflect:Constructor|] v0 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getConstructorSignature:(Ljava/lang/reflect/Constructor;)Ljava/lang/String;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamClass.getFieldSignature|] ([|java:lang:reflect:Field|] v0 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getFieldSignature:(Ljava/lang/reflect/Field;)Ljava/lang/String;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamClass.getMethodSignature|] ([|java:lang:reflect:Method|] v0 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getMethodSignature:(Ljava/lang/reflect/Method;)Ljava/lang/String;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.hasClinit|] ([|java:lang:Class|] v0 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.hasClinit:(Ljava/lang/Class;)Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.inSamePackage|] ([|java:io:ObjectStreamClass|] v6 @type (this), [|java:lang:Class|] v7 @type (object), [|java:lang:Class|] v8 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.inSamePackage:(Ljava/lang/Class;Ljava/lang/Class;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0946c8.   v5:= 46  @length 16;
#L0946cc.   v4:= 0  @length 4;
#L0946ce.   call temp:=  [|java:lang:Class.getName|](v7) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0946d4.   v2:= temp  @type object;
#L0946d6.   call temp:=  [|java:lang:Class.getName|](v8) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0946dc.   v3:= temp  @type object;
#L0946de.   call temp:=  [|java:lang:String.lastIndexOf|](v2, v5) @signature [|Ljava/lang/String;.lastIndexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0946e4.   v0:= temp;
#L0946e6.   call temp:=  [|java:lang:String.lastIndexOf|](v3, v5) @signature [|Ljava/lang/String;.lastIndexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0946ec.   v1:= temp;
#L0946ee.   if v0 == v1 then goto L0946f4;
#L0946f2.   return v4;
#L0946f4.   v5:= -1  @length 4;
#L0946f6.   if v0 != v5 then goto L0946fe;
#L0946fa.   v4:= 1  @length 4;
#L0946fc.   goto L0946f2;
#L0946fe.   call temp:=  [|java:lang:String.regionMatches|](v2, v4, v3, v4, v0) @signature [|Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L094704.   v4:= temp;
#L094706.   goto L0946f2;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.isExternalizable|] ([|java:lang:Class|] v1 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.isExternalizable:(Ljava/lang/Class;)Z|] @Access STATIC {
      local temp ;
        v0;
      
#L094718.   v0:= @@[|java:io:ObjectStreamClass.EXTERNALIZABLE|]   @type object;
#L09471c.   call temp:=  [|java:lang:Class.isAssignableFrom|](v0, v1) @signature [|Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094722.   v0:= temp;
#L094724.   return v0;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.isPrimitiveType|] ([|char|] v1) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.isPrimitiveType:(C)Z|] @Access STATIC {
      local temp ;
        v0;
      
#L094738.   v0:= 91  @length 16;
#L09473c.   if v1 == v0 then goto L09474c;
#L094740.   v0:= 76  @length 16;
#L094744.   if v1 == v0 then goto L09474c;
#L094748.   v0:= 1  @length 4;
#L09474a.   return v0;
#L09474c.   v0:= 0  @length 4;
#L09474e.   goto L09474a;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.isSerializable|] ([|java:lang:Class|] v1 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.isSerializable:(Ljava/lang/Class;)Z|] @Access STATIC {
      local temp ;
        v0;
      
#L094760.   v0:= @@[|java:io:ObjectStreamClass.SERIALIZABLE|]   @type object;
#L094764.   call temp:=  [|java:lang:Class.isAssignableFrom|](v0, v1) @signature [|Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09476a.   v0:= temp;
#L09476c.   return v0;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectStreamClass.lookup|] ([|java:lang:Class|] v2 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.lookup:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L094780.   call temp:=  [|java:io:ObjectStreamClass.lookupStreamClass|](v2) @signature [|Ljava/io/ObjectStreamClass;.lookupStreamClass:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094786.   v0:= temp  @type object;
#L094788.   call temp:=  [|java:io:ObjectStreamClass.isSerializable|](v0) @signature [|Ljava/io/ObjectStreamClass;.isSerializable:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09478e.   v1:= temp;
#L094790.   if v1 != 0 then goto L0947a0;
#L094794.   call temp:=  [|java:io:ObjectStreamClass.isExternalizable|](v0) @signature [|Ljava/io/ObjectStreamClass;.isExternalizable:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09479a.   v1:= temp;
#L09479c.   if v1 == 0 then goto L0947a2;
#L0947a0.   return v0  @type object;
#L0947a2.   v0:= 0  @length 4;
#L0947a4.   goto L0947a0;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectStreamClass.lookupAny|] ([|java:lang:Class|] v1 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.lookupAny:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0947b8.   call temp:=  [|java:io:ObjectStreamClass.lookupStreamClass|](v1) @signature [|Ljava/io/ObjectStreamClass;.lookupStreamClass:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0947be.   v0:= temp  @type object;
#L0947c0.   return v0  @type object;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectStreamClass.lookupStreamClass|] ([|java:lang:Class|] v2 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.lookupStreamClass:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0947d4.   call temp:=  [|java:io:ObjectStreamClass.getCache|]() @signature [|Ljava/io/ObjectStreamClass;.getCache:()Ljava/util/WeakHashMap;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0947da.   v1:= temp  @type object;
#L0947dc.   call temp:=  [|java:util:WeakHashMap.get|](v1, v2) @signature [|Ljava/util/WeakHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L0947e2.   v0:= temp  @type object;
#L0947e4.   v0:= ([|java:io:ObjectStreamClass|])v0;
#L0947e8.   if v0 != 0 then goto L0947fa;
#L0947ec.   call temp:=  [|java:io:ObjectStreamClass.createClassDesc|](v2) @signature [|Ljava/io/ObjectStreamClass;.createClassDesc:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0947f2.   v0:= temp  @type object;
#L0947f4.   call temp:=  [|java:util:WeakHashMap.put|](v1, v2, v0) @signature [|Ljava/util/WeakHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L0947fa.   return v0  @type object;

   }
    procedure [|java:util:List|] [|java:io:ObjectStreamClass.makeHierarchy|] ([|java:io:ObjectStreamClass|] v3 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.makeHierarchy:()Ljava/util/List;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L09480c.   v1:= new [|java:util:ArrayList|];
#L094810.   call temp:=  [|java:util:ArrayList.<init>|](v1) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L094816.   v0:= v3  @type object;
#L094818.   if v0 == 0 then goto L09482e;
#L09481c.   v2:= 0  @length 4;
#L09481e.   call temp:=  [|java:util:ArrayList.add|](v1, v2, v0) @signature [|Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L094824.   call temp:=  [|java:io:ObjectStreamClass.getSuperclass|](v0) @signature [|Ljava/io/ObjectStreamClass;.getSuperclass:()Ljava/io/ObjectStreamClass;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L09482a.   v0:= temp  @type object;
#L09482c.   goto L094818;
#L09482e.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectStreamClass.newInstance|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:io:ObjectStreamClass.primitiveSize|] ([|java:io:ObjectStreamClass|] v1 @type (this), [|java:lang:Class|] v2 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.primitiveSize:(Ljava/lang/Class;)I|] @Access PRIVATE {
      local temp ;
        v0;
      
#L094840.   v0:= @@[|java:lang:Byte.TYPE|]   @type object;
#L094844.   if v2 == v0 then goto L094850;
#L094848.   v0:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L09484c.   if v2 != v0 then goto L094854;
#L094850.   v0:= 1  @length 4;
#L094852.   return v0;
#L094854.   v0:= @@[|java:lang:Short.TYPE|]   @type object;
#L094858.   if v2 == v0 then goto L094864;
#L09485c.   v0:= @@[|java:lang:Character.TYPE|]   @type object;
#L094860.   if v2 != v0 then goto L094868;
#L094864.   v0:= 2  @length 4;
#L094866.   goto L094852;
#L094868.   v0:= @@[|java:lang:Integer.TYPE|]   @type object;
#L09486c.   if v2 == v0 then goto L094878;
#L094870.   v0:= @@[|java:lang:Float.TYPE|]   @type object;
#L094874.   if v2 != v0 then goto L09487c;
#L094878.   v0:= 4  @length 4;
#L09487a.   goto L094852;
#L09487c.   v0:= @@[|java:lang:Long.TYPE|]   @type object;
#L094880.   if v2 == v0 then goto L09488c;
#L094884.   v0:= @@[|java:lang:Double.TYPE|]   @type object;
#L094888.   if v2 != v0 then goto L094892;
#L09488c.   v0:= 8  @length 16;
#L094890.   goto L094852;
#L094892.   v0:= new [|java:lang:AssertionError|];
#L094896.   call temp:=  [|java:lang:AssertionError.<init>|](v0) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L09489c.   throw v0;

   }
    procedure [|java:lang:Class|] [|java:io:ObjectStreamClass.resolveConstructorClass|] ([|java:io:ObjectStreamClass|] v12 @type (this), [|java:lang:Class|] v13 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.resolveConstructorClass:(Ljava/lang/Class;)Ljava/lang/Class;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L0948b0.   v7:= 1  @length 4;
#L0948b2.   v9:= 0  @length 4;
#L0948b4.   v10:= v12.[|java:io:ObjectStreamClass.resolvedConstructorClass|]   @type object;
#L0948b8.   if v10 == 0 then goto L0948c2;
#L0948bc.   v2:= v12.[|java:io:ObjectStreamClass.resolvedConstructorClass|]   @type object;
#L0948c0.   return v2  @type object;
#L0948c2.   v2:= v13  @type object;
#L0948c4.   v10:= v12.[|java:io:ObjectStreamClass.flags|]   @byte;
#L0948c8.   v10:= v10 ^& 2;
#L0948cc.   if v10 == 0 then goto L0948f0;
#L0948d0.   v8:= v7;
#L0948d2.   if v8 == 0 then goto L0948f4;
#L0948d6.   if v2 == 0 then goto L0948f4;
#L0948da.   call temp:=  [|java:io:ObjectStreamClass.isSerializable|](v2) @signature [|Ljava/io/ObjectStreamClass;.isSerializable:(Ljava/lang/Class;)Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0948e0.   v10:= temp;
#L0948e2.   if v10 == 0 then goto L0948f4;
#L0948e6.   call temp:=  [|java:lang:Class.getSuperclass|](v2) @signature [|Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0948ec.   v2:= temp  @type object;
#L0948ee.   goto L0948d6;
#L0948f0.   v8:= v9;
#L0948f2.   goto L0948d2;
#L0948f4.   v1:= 0  @length 4;
#L0948f6.   if v2 == 0 then goto L094906;
#L0948fa.   v10:= @@[|libcore:util:EmptyArray.CLASS|]   @type object;
#L0948fe.   call temp:=  [|java:lang:Class.getDeclaredConstructor|](v2, v10) @signature [|Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094904.   v1:= temp  @type object;
#L094906.   if v1 != 0 then goto L09492a;
#L09490a.   if v2 == 0 then goto L094926;
#L09490e.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094914.   v0:= temp  @type object;
#L094916.   v9:= new [|java:io:InvalidClassException|];
#L09491a.   v10:= "IllegalAccessException" @type (object, string);
#L09491e.   call temp:=  [|java:io:InvalidClassException.<init>|](v9, v0, v10) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L094924.   throw v9;
#L094926.   v0:= 0  @length 4;
#L094928.   goto L094916;
#L09492a.   call temp:=  [|java:lang:reflect:Constructor.getModifiers|](v1) @signature [|Ljava/lang/reflect/Constructor;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L094930.   v3:= temp;
#L094932.   call temp:=  [|java:lang:reflect:Modifier.isPublic|](v3) @signature [|Ljava/lang/reflect/Modifier;.isPublic:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L094938.   v6:= temp;
#L09493a.   call temp:=  [|java:lang:reflect:Modifier.isProtected|](v3) @signature [|Ljava/lang/reflect/Modifier;.isProtected:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L094940.   v5:= temp;
#L094942.   call temp:=  [|java:lang:reflect:Modifier.isPrivate|](v3) @signature [|Ljava/lang/reflect/Modifier;.isPrivate:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L094948.   v4:= temp;
#L09494a.   v10:= v12.[|java:io:ObjectStreamClass.flags|]   @byte;
#L09494e.   v10:= v10 ^& 4;
#L094952.   if v10 == 0 then goto L09497a;
#L094956.   if v4 != 0 then goto L094962;
#L09495a.   if v7 == 0 then goto L09497e;
#L09495e.   if v6 != 0 then goto L09497e;
#L094962.   v9:= new [|java:io:InvalidClassException|];
#L094966.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09496c.   v10:= temp  @type object;
#L09496e.   v11:= "IllegalAccessException" @type (object, string);
#L094972.   call temp:=  [|java:io:InvalidClassException.<init>|](v9, v10, v11) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L094978.   throw v9;
#L09497a.   v7:= v9;
#L09497c.   goto L094956;
#L09497e.   if v6 != 0 then goto L0949aa;
#L094982.   if v5 != 0 then goto L0949aa;
#L094986.   call temp:=  [|java:io:ObjectStreamClass.inSamePackage|](v12, v2, v13) @signature [|Ljava/io/ObjectStreamClass;.inSamePackage:(Ljava/lang/Class;Ljava/lang/Class;)Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L09498c.   v9:= temp;
#L09498e.   if v9 != 0 then goto L0949aa;
#L094992.   v9:= new [|java:io:InvalidClassException|];
#L094996.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09499c.   v10:= temp  @type object;
#L09499e.   v11:= "IllegalAccessException" @type (object, string);
#L0949a2.   call temp:=  [|java:io:InvalidClassException.<init>|](v9, v10, v11) @signature [|Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidClassException|] @type direct;
#L0949a8.   throw v9;
#L0949aa.   v12.[|java:io:ObjectStreamClass.resolvedConstructorClass|]  := v2 @type object;
#L0949ae.   v9:= v12.[|java:io:ObjectStreamClass.resolvedConstructorClass|]   @type object;
#L0949b2.   call temp:=  [|java:io:ObjectStreamClass.getConstructorId|](v9) @signature [|Ljava/io/ObjectStreamClass;.getConstructorId:(Ljava/lang/Class;)I|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L0949b8.   v9:= temp;
#L0949ba.   v12.[|java:io:ObjectStreamClass.resolvedConstructorMethodId|]  := v9;
#L0949be.   goto L0948c0;
#L0949c0.   v10:= Exception  @type object;
#L0949c2.   goto L094906;
  catch  [|java:lang:NoSuchMethodException|] @[L0948fa..L094904] goto L0949c0;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.resolveProperties|] ([|java:io:ObjectStreamClass|] v2 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.resolveProperties:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0949e4.   v1:= v2.[|java:io:ObjectStreamClass.arePropertiesResolved|]   @boolean;
#L0949e8.   if v1 == 0 then goto L0949ee;
#L0949ec.   return @void ;
#L0949ee.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v2) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L0949f4.   v0:= temp  @type object;
#L0949f6.   call temp:=  [|java:lang:reflect:Proxy.isProxyClass|](v0) @signature [|Ljava/lang/reflect/Proxy;.isProxyClass:(Ljava/lang/Class;)Z|] @classDescriptor [|java:lang:reflect:Proxy|] @type static;
#L0949fc.   v1:= temp;
#L0949fe.   v2.[|java:io:ObjectStreamClass.isProxy|]  := v1 @boolean;
#L094a02.   v1:= new [|java:lang:Enum|];
#L094a06.   call temp:=  [|java:lang:Class.isAssignableFrom|](v1, v0) @signature [|Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094a0c.   v1:= temp;
#L094a0e.   v2.[|java:io:ObjectStreamClass.isEnum|]  := v1 @boolean;
#L094a12.   call temp:=  [|java:io:ObjectStreamClass.isSerializable|](v0) @signature [|Ljava/io/ObjectStreamClass;.isSerializable:(Ljava/lang/Class;)Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094a18.   v1:= temp;
#L094a1a.   v2.[|java:io:ObjectStreamClass.isSerializable|]  := v1 @boolean;
#L094a1e.   call temp:=  [|java:io:ObjectStreamClass.isExternalizable|](v0) @signature [|Ljava/io/ObjectStreamClass;.isExternalizable:(Ljava/lang/Class;)Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094a24.   v1:= temp;
#L094a26.   v2.[|java:io:ObjectStreamClass.isExternalizable|]  := v1 @boolean;
#L094a2a.   v1:= 1  @length 4;
#L094a2c.   v2.[|java:io:ObjectStreamClass.arePropertiesResolved|]  := v1 @boolean;
#L094a30.   goto L0949ec;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.buildFieldDescriptors|] ([|java:io:ObjectStreamClass|] v20 @type (this), [|java:lang:reflect:Field|][] v21 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.buildFieldDescriptors:([Ljava/lang/reflect/Field;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
      
#L094a44.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v20) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094a4a.   v18:= temp  @type object;
#L094a4c.   call temp:=  [|java:io:ObjectStreamClass.fieldSerialPersistentFields|](v18) @signature [|Ljava/io/ObjectStreamClass;.fieldSerialPersistentFields:(Ljava/lang/Class;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L094a52.   v6:= temp  @type object;
#L094a54.   if v6 != 0 then goto L094ae6;
#L094a58.   v17:= 1  @length 16;
#L094a5c.   v2:= 0  @length 4;
#L094a5e.   if v17 != 0 then goto L094afe;
#L094a62.   v18:= 1  @length 16;
#L094a66.   v0:= v18;
#L094a6a.   call temp:=  [|java:lang:reflect:Field.setAccessible|](v6, v0) @signature [|Ljava/lang/reflect/Field;.setAccessible:(Z)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L094a70.   v18:= 0  @length 16;
#L094a74.   v0:= v18  @type object;
#L094a78.   call temp:=  [|java:lang:reflect:Field.get|](v6, v0) @signature [|Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L094a7e.   v18:= temp  @type object;
#L094a80.   v18:= ([|java:io:ObjectStreamField|][])v18;
#L094a84.   v0:= v18  @type object;
#L094a88.   v0:= ([|java:io:ObjectStreamField|][])v0;
#L094a8c.   v2:= v0  @type object;
#L094a8e.   call temp:=  [|java:util:Arrays.sort|](v2) @signature [|Ljava/util/Arrays;.sort:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L094a94.   v14:= 0  @length 4;
#L094a96.   v12:= 0  @length 4;
#L094a98.   v8:= 0  @length 4;
#L094a9a.   v0:= v2.length;
#L094a9c.   v18:= v0;
#L094aa0.   v0:= v18;
#L094aa4.   if v8 >= v0 then goto L094bc2;
#L094aa8.   v18:= v2[v8]  @type object;
#L094aac.   call temp:=  [|java:io:ObjectStreamField.getType|](v18) @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L094ab2.   v16:= temp  @type object;
#L094ab4.   call temp:=  [|java:lang:Class.isPrimitive|](v16) @signature [|Ljava/lang/Class;.isPrimitive:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094aba.   v18:= temp;
#L094abc.   if v18 == 0 then goto L094bae;
#L094ac0.   v18:= v2[v8]  @type object;
#L094ac4.   v0:= v18  @type object;
#L094ac8.   v0.[|java:io:ObjectStreamField.offset|]  := v14;
#L094acc.   v0:= v20  @type object;
#L094ad0.   v1:= v16  @type object;
#L094ad4.   call temp:=  [|java:io:ObjectStreamClass.primitiveSize|](v0, v1) @signature [|Ljava/io/ObjectStreamClass;.primitiveSize:(Ljava/lang/Class;)I|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L094ada.   v18:= temp;
#L094adc.   v14:= v14 + v18  @type int;
#L094ae0.   v8:= v8 + 1;
#L094ae4.   goto L094a9a;
#L094ae6.   v17:= 0  @length 16;
#L094aea.   goto L094a5c;
#L094aec.   v5:= Exception  @type object;
#L094aee.   v18:= new [|java:lang:AssertionError|];
#L094af2.   v0:= v18  @type object;
#L094af6.   call temp:=  [|java:lang:AssertionError.<init>|](v0, v5) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L094afc.   throw v18;
#L094afe.   v15:= new [|java:util:ArrayList|];
#L094b02.   v0:= v21  @type object;
#L094b06.   v0:= v0.length;
#L094b08.   v18:= v0;
#L094b0c.   v0:= v18;
#L094b10.   call temp:=  [|java:util:ArrayList.<init>|](v15, v0) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L094b16.   v3:= v21  @type object;
#L094b1a.   v10:= v3.length;
#L094b1c.   v9:= 0  @length 4;
#L094b1e.   if v9 >= v10 then goto L094b74;
#L094b22.   v4:= v3[v9]  @type object;
#L094b26.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v4) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L094b2c.   v11:= temp;
#L094b2e.   call temp:=  [|java:lang:reflect:Modifier.isStatic|](v11) @signature [|Ljava/lang/reflect/Modifier;.isStatic:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L094b34.   v18:= temp;
#L094b36.   if v18 != 0 then goto L094b6e;
#L094b3a.   call temp:=  [|java:lang:reflect:Modifier.isTransient|](v11) @signature [|Ljava/lang/reflect/Modifier;.isTransient:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L094b40.   v18:= temp;
#L094b42.   if v18 != 0 then goto L094b6e;
#L094b46.   v7:= new [|java:io:ObjectStreamField|];
#L094b4a.   call temp:=  [|java:lang:reflect:Field.getName|](v4) @signature [|Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L094b50.   v18:= temp  @type object;
#L094b52.   call temp:=  [|java:lang:reflect:Field.getType|](v4) @signature [|Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L094b58.   v19:= temp  @type object;
#L094b5a.   v0:= v18  @type object;
#L094b5e.   v1:= v19  @type object;
#L094b62.   call temp:=  [|java:io:ObjectStreamField.<init>|](v7, v0, v1) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L094b68.   call temp:=  [|java:util:List.add|](v15, v7) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L094b6e.   v9:= v9 + 1;
#L094b72.   goto L094b1e;
#L094b74.   call temp:=  [|java:util:List.size|](v15) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L094b7a.   v18:= temp;
#L094b7c.   if v18 != 0 then goto L094b86;
#L094b80.   v2:= @@[|java:io:ObjectStreamClass.NO_FIELDS|]   @type object;
#L094b84.   goto L094a8e;
#L094b86.   call temp:=  [|java:util:List.size|](v15) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L094b8c.   v18:= temp;
#L094b8e.   v0:= v18;
#L094b92.   v0:= new [|java:io:ObjectStreamField|][v0];
#L094b96.   v18:= v0  @type object;
#L094b9a.   v0:= v18  @type object;
#L094b9e.   call temp:=  [|java:util:List.toArray|](v15, v0) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L094ba4.   v2:= temp  @type object;
#L094ba6.   v2:= ([|java:io:ObjectStreamField|][])v2;
#L094baa.   goto L094a8e;
#L094bae.   v18:= v2[v8]  @type object;
#L094bb2.   v13:= v12 + 1;
#L094bb6.   v0:= v18  @type object;
#L094bba.   v0.[|java:io:ObjectStreamField.offset|]  := v12;
#L094bbe.   v12:= v13;
#L094bc0.   goto L094ae0;
#L094bc2.   v0:= v20  @type object;
#L094bc6.   v0.[|java:io:ObjectStreamClass.fields|]  := v2 @type object;
#L094bca.   return @void ;
  catch  [|java:lang:IllegalAccessException|] @[L094a74..L094a8e] goto L094aec;

   }
    procedure [|java:io:ObjectStreamField|][] [|java:io:ObjectStreamClass.fields|] ([|java:io:ObjectStreamClass|] v2 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.fields:()[Ljava/io/ObjectStreamField;|] @Access  {
      local temp ;
        v0;
        v1;
      
#L094bec.   v1:= v2.[|java:io:ObjectStreamClass.fields|]   @type object;
#L094bf0.   if v1 != 0 then goto L094c26;
#L094bf4.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v2) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094bfa.   v0:= temp  @type object;
#L094bfc.   if v0 == 0 then goto L094c2c;
#L094c00.   call temp:=  [|java:io:ObjectStreamClass.isSerializable|](v2) @signature [|Ljava/io/ObjectStreamClass;.isSerializable:()Z|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094c06.   v1:= temp;
#L094c08.   if v1 == 0 then goto L094c2c;
#L094c0c.   call temp:=  [|java:lang:Class.isArray|](v0) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094c12.   v1:= temp;
#L094c14.   if v1 != 0 then goto L094c2c;
#L094c18.   call temp:=  [|java:lang:Class.getDeclaredFields|](v0) @signature [|Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094c1e.   v1:= temp  @type object;
#L094c20.   call temp:=  [|java:io:ObjectStreamClass.buildFieldDescriptors|](v2, v1) @signature [|Ljava/io/ObjectStreamClass;.buildFieldDescriptors:([Ljava/lang/reflect/Field;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094c26.   v1:= v2.[|java:io:ObjectStreamClass.fields|]   @type object;
#L094c2a.   return v1  @type object;
#L094c2c.   v1:= @@[|java:io:ObjectStreamClass.NO_FIELDS|]   @type object;
#L094c30.   call temp:=  [|java:io:ObjectStreamClass.setFields|](v2, v1) @signature [|Ljava/io/ObjectStreamClass;.setFields:([Ljava/io/ObjectStreamField;)V|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094c36.   goto L094c26;

   }
    procedure [|java:lang:Class|] [|java:io:ObjectStreamClass.forClass|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L094c48.   v0:= v1.[|java:io:ObjectStreamClass.resolvedClass|]   @type object;
#L094c4c.   return v0  @type object;

   }
    procedure [|long|] [|java:io:ObjectStreamClass.getConstructor|] ([|java:io:ObjectStreamClass|] v2 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getConstructor:()J|] @Access  {
      local temp ;
        v0;
        v1;
      
#L094c60.   v0:= v2.[|java:io:ObjectStreamClass.constructor|]   @wide;
#L094c64.   return v0  @type wide;

   }
    procedure [|java:io:ObjectStreamField|] [|java:io:ObjectStreamClass.getField|] ([|java:io:ObjectStreamClass|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getField:(Ljava/lang/String;)Ljava/io/ObjectStreamField;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L094c78.   call temp:=  [|java:io:ObjectStreamClass.getFields|](v4) @signature [|Ljava/io/ObjectStreamClass;.getFields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094c7e.   v0:= temp  @type object;
#L094c80.   v2:= 0  @length 4;
#L094c82.   v3:= v0.length;
#L094c84.   if v2 >= v3 then goto L094ca8;
#L094c88.   v1:= v0[v2]  @type object;
#L094c8c.   call temp:=  [|java:io:ObjectStreamField.getName|](v1) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L094c92.   v3:= temp  @type object;
#L094c94.   call temp:=  [|java:lang:String.equals|](v3, v5) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L094c9a.   v3:= temp;
#L094c9c.   if v3 == 0 then goto L094ca2;
#L094ca0.   return v1  @type object;
#L094ca2.   v2:= v2 + 1;
#L094ca6.   goto L094c82;
#L094ca8.   v1:= 0  @length 4;
#L094caa.   goto L094ca0;

   }
    procedure [|java:io:ObjectStreamField|][] [|java:io:ObjectStreamClass.getFields|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getFields:()[Ljava/io/ObjectStreamField;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L094cbc.   call temp:=  [|java:io:ObjectStreamClass.copyFieldAttributes|](v1) @signature [|Ljava/io/ObjectStreamClass;.copyFieldAttributes:()V|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L094cc2.   v0:= v1.[|java:io:ObjectStreamClass.loadFields|]   @type object;
#L094cc6.   if v0 != 0 then goto L094ce0;
#L094cca.   call temp:=  [|java:io:ObjectStreamClass.fields|](v1) @signature [|Ljava/io/ObjectStreamClass;.fields:()[Ljava/io/ObjectStreamField;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094cd0.   v0:= temp  @type object;
#L094cd2.   call temp:=  [|java:io:ObjectStreamField[].clone|](v0) @signature [|[Ljava/io/ObjectStreamField;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectStreamField[]|] @type virtual;
#L094cd8.   v0:= temp  @type object;
#L094cda.   v0:= ([|java:io:ObjectStreamField|][])v0;
#L094cde.   return v0  @type object;
#L094ce0.   v0:= v1.[|java:io:ObjectStreamClass.loadFields|]   @type object;
#L094ce4.   call temp:=  [|java:io:ObjectStreamField[].clone|](v0) @signature [|[Ljava/io/ObjectStreamField;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectStreamField[]|] @type virtual;
#L094cea.   v0:= temp  @type object;
#L094cec.   v0:= ([|java:io:ObjectStreamField|][])v0;
#L094cf0.   goto L094cde;

   }
    procedure [|byte|] [|java:io:ObjectStreamClass.getFlags|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getFlags:()B|] @Access  {
      local temp ;
        v0;
      
#L094d04.   v0:= v1.[|java:io:ObjectStreamClass.flags|]   @byte;
#L094d08.   return v0;

   }
    procedure [|java:util:List|] [|java:io:ObjectStreamClass.getHierarchy|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getHierarchy:()Ljava/util/List;|] @Access  {
      local temp ;
        v0;
      
#L094d1c.   v0:= v1.[|java:io:ObjectStreamClass.cachedHierarchy|]   @type object;
#L094d20.   if v0 != 0 then goto L094d30;
#L094d24.   call temp:=  [|java:io:ObjectStreamClass.makeHierarchy|](v1) @signature [|Ljava/io/ObjectStreamClass;.makeHierarchy:()Ljava/util/List;|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L094d2a.   v0:= temp  @type object;
#L094d2c.   v1.[|java:io:ObjectStreamClass.cachedHierarchy|]  := v0 @type object;
#L094d30.   return v0  @type object;

   }
    procedure [|java:io:ObjectStreamField|][] [|java:io:ObjectStreamClass.getLoadFields|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getLoadFields:()[Ljava/io/ObjectStreamField;|] @Access  {
      local temp ;
        v0;
      
#L094d44.   v0:= v1.[|java:io:ObjectStreamClass.loadFields|]   @type object;
#L094d48.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.getMethodReadObject|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getMethodReadObject:()Ljava/lang/reflect/Method;|] @Access  {
      local temp ;
        v0;
      
#L094d5c.   v0:= v1.[|java:io:ObjectStreamClass.methodReadObject|]   @type object;
#L094d60.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.getMethodReadObjectNoData|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getMethodReadObjectNoData:()Ljava/lang/reflect/Method;|] @Access  {
      local temp ;
        v0;
      
#L094d74.   v0:= v1.[|java:io:ObjectStreamClass.methodReadObjectNoData|]   @type object;
#L094d78.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.getMethodReadResolve|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getMethodReadResolve:()Ljava/lang/reflect/Method;|] @Access  {
      local temp ;
        v0;
      
#L094d8c.   v0:= v1.[|java:io:ObjectStreamClass.methodReadResolve|]   @type object;
#L094d90.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.getMethodWriteObject|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getMethodWriteObject:()Ljava/lang/reflect/Method;|] @Access  {
      local temp ;
        v0;
      
#L094da4.   v0:= v1.[|java:io:ObjectStreamClass.methodWriteObject|]   @type object;
#L094da8.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Method|] [|java:io:ObjectStreamClass.getMethodWriteReplace|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getMethodWriteReplace:()Ljava/lang/reflect/Method;|] @Access  {
      local temp ;
        v0;
      
#L094dbc.   v0:= v1.[|java:io:ObjectStreamClass.methodWriteReplace|]   @type object;
#L094dc0.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamClass.getName|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L094dd4.   v0:= v1.[|java:io:ObjectStreamClass.className|]   @type object;
#L094dd8.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Field|] [|java:io:ObjectStreamClass.getReflectionField|] ([|java:io:ObjectStreamClass|] v5 @type (this), [|java:io:ObjectStreamField|] v6 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getReflectionField:(Ljava/io/ObjectStreamField;)Ljava/lang/reflect/Field;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L094dec.   v4:= v5.[|java:io:ObjectStreamClass.reflectionFields|]   @type object;
#L094df0.   (@monitorenter v4)
#L094df2.   v3:= v5.[|java:io:ObjectStreamClass.reflectionFields|]   @type object;
#L094df6.   call temp:=  [|java:util:HashMap.get|](v3, v6) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L094dfc.   v2:= temp  @type object;
#L094dfe.   v2:= ([|java:lang:reflect:Field|])v2;
#L094e02.   if v2 == 0 then goto L094e0c;
#L094e06.   (@monitorexit v4)
#L094e08.   v3:= v2  @type object;
#L094e0a.   return v3  @type object;
#L094e0c.   (@monitorexit v4)
#L094e0e.   call temp:=  [|java:io:ObjectStreamClass.forClass|](v5) @signature [|Ljava/io/ObjectStreamClass;.forClass:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L094e14.   v0:= temp  @type object;
#L094e16.   call temp:=  [|java:io:ObjectStreamField.getName|](v6) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L094e1c.   v3:= temp  @type object;
#L094e1e.   call temp:=  [|java:lang:Class.getDeclaredField|](v0, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L094e24.   v2:= temp  @type object;
#L094e26.   v3:= 1  @length 4;
#L094e28.   call temp:=  [|java:lang:reflect:Field.setAccessible|](v2, v3) @signature [|Ljava/lang/reflect/Field;.setAccessible:(Z)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L094e2e.   v4:= v5.[|java:io:ObjectStreamClass.reflectionFields|]   @type object;
#L094e32.   (@monitorenter v4)
#L094e34.   v3:= v5.[|java:io:ObjectStreamClass.reflectionFields|]   @type object;
#L094e38.   call temp:=  [|java:util:HashMap.put|](v3, v6, v2) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L094e3e.   (@monitorexit v4)
#L094e40.   v3:= v5.[|java:io:ObjectStreamClass.reflectionFields|]   @type object;
#L094e44.   call temp:=  [|java:util:HashMap.get|](v3, v6) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L094e4a.   v3:= temp  @type object;
#L094e4c.   v3:= ([|java:lang:reflect:Field|])v3;
#L094e50.   goto L094e0a;
#L094e52.   v3:= Exception  @type object;
#L094e54.   (@monitorexit v4)
#L094e56.   throw v3;
#L094e58.   v3:= Exception  @type object;
#L094e5a.   (@monitorexit v4)
#L094e5c.   throw v3;
#L094e5e.   v1:= Exception  @type object;
#L094e60.   v3:= 0  @length 4;
#L094e62.   goto L094e0a;
  catch  [|any|] @[L094df2..L094e0e] goto L094e52;
  catch  [|java:lang:NoSuchFieldException|] @[L094e0e..L094e34] goto L094e5e;
  catch  [|any|] @[L094e34..L094e40] goto L094e58;
  catch  [|java:lang:NoSuchFieldException|] @[L094e40..L094e50] goto L094e5e;
  catch  [|any|] @[L094e54..L094e56] goto L094e52;
  catch  [|any|] @[L094e5a..L094e5c] goto L094e58;
  catch  [|java:lang:NoSuchFieldException|] @[L094e5c..L094e5e] goto L094e5e;

   }
    procedure [|long|] [|java:io:ObjectStreamClass.getSerialVersionUID|] ([|java:io:ObjectStreamClass|] v2 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getSerialVersionUID:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L094eb8.   v0:= v2.[|java:io:ObjectStreamClass.svUID|]   @wide;
#L094ebc.   return v0  @type wide;

   }
    procedure [|java:io:ObjectStreamClass|] [|java:io:ObjectStreamClass.getSuperclass|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.getSuperclass:()Ljava/io/ObjectStreamClass;|] @Access  {
      local temp ;
        v0;
      
#L094ed0.   v0:= v1.[|java:io:ObjectStreamClass.superclass|]   @type object;
#L094ed4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.hasMethodReadObject|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.hasMethodReadObject:()Z|] @Access  {
      local temp ;
        v0;
      
#L094ee8.   v0:= v1.[|java:io:ObjectStreamClass.methodReadObject|]   @type object;
#L094eec.   if v0 == 0 then goto L094ef4;
#L094ef0.   v0:= 1  @length 4;
#L094ef2.   return v0;
#L094ef4.   v0:= 0  @length 4;
#L094ef6.   goto L094ef2;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.hasMethodReadObjectNoData|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.hasMethodReadObjectNoData:()Z|] @Access  {
      local temp ;
        v0;
      
#L094f08.   v0:= v1.[|java:io:ObjectStreamClass.methodReadObjectNoData|]   @type object;
#L094f0c.   if v0 == 0 then goto L094f14;
#L094f10.   v0:= 1  @length 4;
#L094f12.   return v0;
#L094f14.   v0:= 0  @length 4;
#L094f16.   goto L094f12;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.hasMethodReadResolve|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.hasMethodReadResolve:()Z|] @Access  {
      local temp ;
        v0;
      
#L094f28.   v0:= v1.[|java:io:ObjectStreamClass.methodReadResolve|]   @type object;
#L094f2c.   if v0 == 0 then goto L094f34;
#L094f30.   v0:= 1  @length 4;
#L094f32.   return v0;
#L094f34.   v0:= 0  @length 4;
#L094f36.   goto L094f32;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.hasMethodWriteObject|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.hasMethodWriteObject:()Z|] @Access  {
      local temp ;
        v0;
      
#L094f48.   v0:= v1.[|java:io:ObjectStreamClass.methodWriteObject|]   @type object;
#L094f4c.   if v0 == 0 then goto L094f54;
#L094f50.   v0:= 1  @length 4;
#L094f52.   return v0;
#L094f54.   v0:= 0  @length 4;
#L094f56.   goto L094f52;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.hasMethodWriteReplace|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.hasMethodWriteReplace:()Z|] @Access  {
      local temp ;
        v0;
      
#L094f68.   v0:= v1.[|java:io:ObjectStreamClass.methodWriteReplace|]   @type object;
#L094f6c.   if v0 == 0 then goto L094f74;
#L094f70.   v0:= 1  @length 4;
#L094f72.   return v0;
#L094f74.   v0:= 0  @length 4;
#L094f76.   goto L094f72;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.initPrivateFields|] ([|java:io:ObjectStreamClass|] v1 @type (this), [|java:io:ObjectStreamClass|] v2 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.initPrivateFields:(Ljava/io/ObjectStreamClass;)V|] @Access  {
      local temp ;
        v0;
      
#L094f88.   v0:= v2.[|java:io:ObjectStreamClass.methodWriteReplace|]   @type object;
#L094f8c.   v1.[|java:io:ObjectStreamClass.methodWriteReplace|]  := v0 @type object;
#L094f90.   v0:= v2.[|java:io:ObjectStreamClass.methodReadResolve|]   @type object;
#L094f94.   v1.[|java:io:ObjectStreamClass.methodReadResolve|]  := v0 @type object;
#L094f98.   v0:= v2.[|java:io:ObjectStreamClass.methodWriteObject|]   @type object;
#L094f9c.   v1.[|java:io:ObjectStreamClass.methodWriteObject|]  := v0 @type object;
#L094fa0.   v0:= v2.[|java:io:ObjectStreamClass.methodReadObject|]   @type object;
#L094fa4.   v1.[|java:io:ObjectStreamClass.methodReadObject|]  := v0 @type object;
#L094fa8.   v0:= v2.[|java:io:ObjectStreamClass.methodReadObjectNoData|]   @type object;
#L094fac.   v1.[|java:io:ObjectStreamClass.methodReadObjectNoData|]  := v0 @type object;
#L094fb0.   return @void ;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.isEnum|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.isEnum:()Z|] @Access  {
      local temp ;
        v0;
      
#L094fc4.   call temp:=  [|java:io:ObjectStreamClass.resolveProperties|](v1) @signature [|Ljava/io/ObjectStreamClass;.resolveProperties:()V|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L094fca.   v0:= v1.[|java:io:ObjectStreamClass.isEnum|]   @boolean;
#L094fce.   return v0;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.isExternalizable|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.isExternalizable:()Z|] @Access  {
      local temp ;
        v0;
      
#L094fe0.   call temp:=  [|java:io:ObjectStreamClass.resolveProperties|](v1) @signature [|Ljava/io/ObjectStreamClass;.resolveProperties:()V|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L094fe6.   v0:= v1.[|java:io:ObjectStreamClass.isExternalizable|]   @boolean;
#L094fea.   return v0;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.isProxy|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.isProxy:()Z|] @Access  {
      local temp ;
        v0;
      
#L094ffc.   call temp:=  [|java:io:ObjectStreamClass.resolveProperties|](v1) @signature [|Ljava/io/ObjectStreamClass;.resolveProperties:()V|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L095002.   v0:= v1.[|java:io:ObjectStreamClass.isProxy|]   @boolean;
#L095006.   return v0;

   }
    procedure [|boolean|] [|java:io:ObjectStreamClass.isSerializable|] ([|java:io:ObjectStreamClass|] v1 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.isSerializable:()Z|] @Access  {
      local temp ;
        v0;
      
#L095018.   call temp:=  [|java:io:ObjectStreamClass.resolveProperties|](v1) @signature [|Ljava/io/ObjectStreamClass;.resolveProperties:()V|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L09501e.   v0:= v1.[|java:io:ObjectStreamClass.isSerializable|]   @boolean;
#L095022.   return v0;

   }
    procedure [|java:lang:Object|] [|java:io:ObjectStreamClass.newInstance|] ([|java:io:ObjectStreamClass|] v1 @type (this), [|java:lang:Class|] v2 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;|] @Access  {
      local temp ;
        v0;
      
#L095034.   call temp:=  [|java:io:ObjectStreamClass.resolveConstructorClass|](v1, v2) @signature [|Ljava/io/ObjectStreamClass;.resolveConstructorClass:(Ljava/lang/Class;)Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamClass|] @type direct;
#L09503a.   v0:= v1.[|java:io:ObjectStreamClass.resolvedConstructorMethodId|] ;
#L09503e.   call temp:=  [|java:io:ObjectStreamClass.newInstance|](v2, v0) @signature [|Ljava/io/ObjectStreamClass;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectStreamClass|] @type static;
#L095044.   v0:= temp  @type object;
#L095046.   return v0  @type object;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.setClass|] ([|java:io:ObjectStreamClass|] v0 @type (this), [|java:lang:Class|] v1 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.setClass:(Ljava/lang/Class;)V|] @Access  {
      local temp ;
      
#L095058.   v0.[|java:io:ObjectStreamClass.resolvedClass|]  := v1 @type object;
#L09505c.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.setConstructor|] ([|java:io:ObjectStreamClass|] v0 @type (this), [|long|] v1) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.setConstructor:(J)V|] @Access  {
      local temp ;
      
#L095070.   v0.[|java:io:ObjectStreamClass.constructor|]  := v1 @wide;
#L095074.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.setFields|] ([|java:io:ObjectStreamClass|] v0 @type (this), [|java:io:ObjectStreamField|][] v1 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.setFields:([Ljava/io/ObjectStreamField;)V|] @Access  {
      local temp ;
      
#L095088.   v0.[|java:io:ObjectStreamClass.fields|]  := v1 @type object;
#L09508c.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.setFlags|] ([|java:io:ObjectStreamClass|] v0 @type (this), [|byte|] v1) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.setFlags:(B)V|] @Access  {
      local temp ;
      
#L0950a0.   v0.[|java:io:ObjectStreamClass.flags|]  := v1 @byte;
#L0950a4.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.setLoadFields|] ([|java:io:ObjectStreamClass|] v0 @type (this), [|java:io:ObjectStreamField|][] v1 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.setLoadFields:([Ljava/io/ObjectStreamField;)V|] @Access  {
      local temp ;
      
#L0950b8.   v0.[|java:io:ObjectStreamClass.loadFields|]  := v1 @type object;
#L0950bc.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.setName|] ([|java:io:ObjectStreamClass|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.setName:(Ljava/lang/String;)V|] @Access  {
      local temp ;
      
#L0950d0.   v0.[|java:io:ObjectStreamClass.className|]  := v1 @type object;
#L0950d4.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.setSerialVersionUID|] ([|java:io:ObjectStreamClass|] v0 @type (this), [|long|] v1) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.setSerialVersionUID:(J)V|] @Access  {
      local temp ;
      
#L0950e8.   v0.[|java:io:ObjectStreamClass.svUID|]  := v1 @wide;
#L0950ec.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamClass.setSuperclass|] ([|java:io:ObjectStreamClass|] v0 @type (this), [|java:io:ObjectStreamClass|] v1 @type (object)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.setSuperclass:(Ljava/io/ObjectStreamClass;)V|] @Access  {
      local temp ;
      
#L095100.   v0.[|java:io:ObjectStreamClass.superclass|]  := v1 @type object;
#L095104.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamClass.toString|] ([|java:io:ObjectStreamClass|] v3 @type (this)) @owner [|java:io:ObjectStreamClass|] @signature [|Ljava/io/ObjectStreamClass;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L095118.   v0:= new [|java:lang:StringBuilder|];
#L09511c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L095122.   call temp:=  [|java:io:ObjectStreamClass.getName|](v3) @signature [|Ljava/io/ObjectStreamClass;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L095128.   v1:= temp  @type object;
#L09512a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095130.   v0:= temp  @type object;
#L095132.   v1:= ": static final long serialVersionUID =" @type (object, string);
#L095136.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09513c.   v0:= temp  @type object;
#L09513e.   call temp:=  [|java:io:ObjectStreamClass.getSerialVersionUID|](v3) @signature [|Ljava/io/ObjectStreamClass;.getSerialVersionUID:()J|] @classDescriptor [|java:io:ObjectStreamClass|] @type virtual;
#L095144.   v1:= temp  @type wide;
#L095146.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09514c.   v0:= temp  @type object;
#L09514e.   v1:= "L;" @type (object, string);
#L095152.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095158.   v0:= temp  @type object;
#L09515a.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095160.   v0:= temp  @type object;
#L095162.   return v0  @type object;

   }
record [|java:io:ObjectStreamField|]  @type class @AccessFlag PUBLIC extends  [|java:lang:Comparable|] {
      [|boolean|] [|java:io:ObjectStreamField.isDeserialized|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:io:ObjectStreamField.name|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:ObjectStreamField.offset|]    @AccessFlag ;
      [|java:lang:Object|] [|java:io:ObjectStreamField.type|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:io:ObjectStreamField.typeString|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:ObjectStreamField.unshared|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:ObjectStreamField.<init>|] ([|java:io:ObjectStreamField|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:Class|] v4 @type (object)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L095174.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L09517a.   if v3 != 0 then goto L09518e;
#L09517e.   v0:= new [|java:lang:NullPointerException|];
#L095182.   v1:= "name == null" @type (object, string);
#L095186.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L09518c.   throw v0;
#L09518e.   if v4 != 0 then goto L0951a2;
#L095192.   v0:= new [|java:lang:NullPointerException|];
#L095196.   v1:= "cl == null" @type (object, string);
#L09519a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0951a0.   throw v0;
#L0951a2.   v2.[|java:io:ObjectStreamField.name|]  := v3 @type object;
#L0951a6.   v0:= new [|java:lang:ref:WeakReference|];
#L0951aa.   call temp:=  [|java:lang:ref:WeakReference.<init>|](v0, v4) @signature [|Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:WeakReference|] @type direct;
#L0951b0.   v2.[|java:io:ObjectStreamField.type|]  := v0 @type object;
#L0951b4.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamField.<init>|] ([|java:io:ObjectStreamField|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:Class|] v4 @type (object), [|boolean|] v5) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0951c8.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0951ce.   if v3 != 0 then goto L0951e2;
#L0951d2.   v0:= new [|java:lang:NullPointerException|];
#L0951d6.   v1:= "name == null" @type (object, string);
#L0951da.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0951e0.   throw v0;
#L0951e2.   if v4 != 0 then goto L0951f6;
#L0951e6.   v0:= new [|java:lang:NullPointerException|];
#L0951ea.   v1:= "cl == null" @type (object, string);
#L0951ee.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0951f4.   throw v0;
#L0951f6.   v2.[|java:io:ObjectStreamField.name|]  := v3 @type object;
#L0951fa.   call temp:=  [|java:lang:Class.getClassLoader|](v4) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L095200.   v0:= temp  @type object;
#L095202.   if v0 != 0 then goto L095210;
#L095206.   v2.[|java:io:ObjectStreamField.type|]  := v4 @type object;
#L09520a.   v2.[|java:io:ObjectStreamField.unshared|]  := v5 @boolean;
#L09520e.   return @void ;
#L095210.   v0:= new [|java:lang:ref:WeakReference|];
#L095214.   call temp:=  [|java:lang:ref:WeakReference.<init>|](v0, v4) @signature [|Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:WeakReference|] @type direct;
#L09521a.   v4:= v0  @type object;
#L09521c.   goto L095206;

   }
    procedure [|void|] [|java:io:ObjectStreamField.<init>|] ([|java:io:ObjectStreamField|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L095230.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L095236.   if v4 != 0 then goto L09524a;
#L09523a.   v0:= new [|java:lang:NullPointerException|];
#L09523e.   v1:= "name == null" @type (object, string);
#L095242.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L095248.   throw v0;
#L09524a.   v2.[|java:io:ObjectStreamField.name|]  := v4 @type object;
#L09524e.   v0:= 46  @length 16;
#L095252.   v1:= 47  @length 16;
#L095256.   call temp:=  [|java:lang:String.replace|](v3, v0, v1) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09525c.   v0:= temp  @type object;
#L09525e.   call temp:=  [|java:lang:String.intern|](v0) @signature [|Ljava/lang/String;.intern:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L095264.   v0:= temp  @type object;
#L095266.   v2.[|java:io:ObjectStreamField.typeString|]  := v0 @type object;
#L09526a.   call temp:=  [|java:io:ObjectStreamField.defaultResolve|](v2) @signature [|Ljava/io/ObjectStreamField;.defaultResolve:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L095270.   v0:= 1  @length 4;
#L095272.   v2.[|java:io:ObjectStreamField.isDeserialized|]  := v0 @boolean;
#L095276.   return @void ;

   }
    procedure [|boolean|] [|java:io:ObjectStreamField.defaultResolve|] ([|java:io:ObjectStreamField|] v3 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.defaultResolve:()Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L095288.   v1:= 0  @length 4;
#L09528a.   v0:= 1  @length 4;
#L09528c.   v2:= v3.[|java:io:ObjectStreamField.typeString|]   @type object;
#L095290.   call temp:=  [|java:lang:String.charAt|](v2, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L095296.   v2:= temp;
#L095298.   goto L0952fc;
#L09529e.   v0:= new [|java:lang:Object|];
#L0952a2.   v3.[|java:io:ObjectStreamField.type|]  := v0 @type object;
#L0952a6.   v0:= v1;
#L0952a8.   return v0;
#L0952aa.   v1:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0952ae.   v3.[|java:io:ObjectStreamField.type|]  := v1 @type object;
#L0952b2.   goto L0952a8;
#L0952b4.   v1:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0952b8.   v3.[|java:io:ObjectStreamField.type|]  := v1 @type object;
#L0952bc.   goto L0952a8;
#L0952be.   v1:= @@[|java:lang:Character.TYPE|]   @type object;
#L0952c2.   v3.[|java:io:ObjectStreamField.type|]  := v1 @type object;
#L0952c6.   goto L0952a8;
#L0952c8.   v1:= @@[|java:lang:Short.TYPE|]   @type object;
#L0952cc.   v3.[|java:io:ObjectStreamField.type|]  := v1 @type object;
#L0952d0.   goto L0952a8;
#L0952d2.   v1:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L0952d6.   v3.[|java:io:ObjectStreamField.type|]  := v1 @type object;
#L0952da.   goto L0952a8;
#L0952dc.   v1:= @@[|java:lang:Long.TYPE|]   @type object;
#L0952e0.   v3.[|java:io:ObjectStreamField.type|]  := v1 @type object;
#L0952e4.   goto L0952a8;
#L0952e6.   v1:= @@[|java:lang:Float.TYPE|]   @type object;
#L0952ea.   v3.[|java:io:ObjectStreamField.type|]  := v1 @type object;
#L0952ee.   goto L0952a8;
#L0952f0.   v1:= @@[|java:lang:Double.TYPE|]   @type object;
#L0952f4.   v3.[|java:io:ObjectStreamField.type|]  := v1 @type object;
#L0952f8.   goto L0952a8;
#L0952fa.   
#L0952fc.   switch v2
                 | 66 => goto L0952b4
                 | 67 => goto L0952be
                 | 68 => goto L0952f0
                 | 70 => goto L0952e6
                 | 73 => goto L0952aa
                 | 74 => goto L0952dc
                 | 83 => goto L0952c8
                 | 90 => goto L0952d2
                 | => goto L09529e;

   }
    procedure [|char|] [|java:io:ObjectStreamField.typeCodeOf|] ([|java:io:ObjectStreamField|] v1 @type (this), [|java:lang:Class|] v2 @type (object)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.typeCodeOf:(Ljava/lang/Class;)C|] @Access PRIVATE {
      local temp ;
        v0;
      
#L095350.   v0:= @@[|java:lang:Integer.TYPE|]   @type object;
#L095354.   if v2 != v0 then goto L09535e;
#L095358.   v0:= 73  @length 16;
#L09535c.   return v0;
#L09535e.   v0:= @@[|java:lang:Byte.TYPE|]   @type object;
#L095362.   if v2 != v0 then goto L09536c;
#L095366.   v0:= 66  @length 16;
#L09536a.   goto L09535c;
#L09536c.   v0:= @@[|java:lang:Character.TYPE|]   @type object;
#L095370.   if v2 != v0 then goto L09537a;
#L095374.   v0:= 67  @length 16;
#L095378.   goto L09535c;
#L09537a.   v0:= @@[|java:lang:Short.TYPE|]   @type object;
#L09537e.   if v2 != v0 then goto L095388;
#L095382.   v0:= 83  @length 16;
#L095386.   goto L09535c;
#L095388.   v0:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L09538c.   if v2 != v0 then goto L095396;
#L095390.   v0:= 90  @length 16;
#L095394.   goto L09535c;
#L095396.   v0:= @@[|java:lang:Long.TYPE|]   @type object;
#L09539a.   if v2 != v0 then goto L0953a4;
#L09539e.   v0:= 74  @length 16;
#L0953a2.   goto L09535c;
#L0953a4.   v0:= @@[|java:lang:Float.TYPE|]   @type object;
#L0953a8.   if v2 != v0 then goto L0953b2;
#L0953ac.   v0:= 70  @length 16;
#L0953b0.   goto L09535c;
#L0953b2.   v0:= @@[|java:lang:Double.TYPE|]   @type object;
#L0953b6.   if v2 != v0 then goto L0953c0;
#L0953ba.   v0:= 68  @length 16;
#L0953be.   goto L09535c;
#L0953c0.   call temp:=  [|java:lang:Class.isArray|](v2) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0953c6.   v0:= temp;
#L0953c8.   if v0 == 0 then goto L0953d2;
#L0953cc.   v0:= 91  @length 16;
#L0953d0.   goto L09535c;
#L0953d2.   v0:= 76  @length 16;
#L0953d6.   goto L09535c;

   }
    procedure [|int|] [|java:io:ObjectStreamField.compareTo|] ([|java:io:ObjectStreamField|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0953e8.   v0:= v6  @type object;
#L0953ea.   v0:= ([|java:io:ObjectStreamField|])v0;
#L0953ee.   call temp:=  [|java:io:ObjectStreamField.isPrimitive|](v5) @signature [|Ljava/io/ObjectStreamField;.isPrimitive:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0953f4.   v2:= temp;
#L0953f6.   call temp:=  [|java:io:ObjectStreamField.isPrimitive|](v0) @signature [|Ljava/io/ObjectStreamField;.isPrimitive:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0953fc.   v1:= temp;
#L0953fe.   if v2 == v1 then goto L09540e;
#L095402.   if v2 == 0 then goto L09540a;
#L095406.   v3:= -1  @length 4;
#L095408.   return v3;
#L09540a.   v3:= 1  @length 4;
#L09540c.   goto L095408;
#L09540e.   call temp:=  [|java:io:ObjectStreamField.getName|](v5) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L095414.   v3:= temp  @type object;
#L095416.   call temp:=  [|java:io:ObjectStreamField.getName|](v0) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L09541c.   v4:= temp  @type object;
#L09541e.   call temp:=  [|java:lang:String.compareTo|](v3, v4) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L095424.   v3:= temp;
#L095426.   goto L095408;

   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamField.getName|] ([|java:io:ObjectStreamField|] v1 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L095438.   v0:= v1.[|java:io:ObjectStreamField.name|]   @type object;
#L09543c.   return v0  @type object;

   }
    procedure [|int|] [|java:io:ObjectStreamField.getOffset|] ([|java:io:ObjectStreamField|] v1 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.getOffset:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L095450.   v0:= v1.[|java:io:ObjectStreamField.offset|] ;
#L095454.   return v0;

   }
    procedure [|java:lang:Class|] [|java:io:ObjectStreamField.getType|] ([|java:io:ObjectStreamField|] v2 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.getType:()Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L095468.   call temp:=  [|java:io:ObjectStreamField.getTypeInternal|](v2) @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L09546e.   v0:= temp  @type object;
#L095470.   v1:= v2.[|java:io:ObjectStreamField.isDeserialized|]   @boolean;
#L095474.   if v1 == 0 then goto L095488;
#L095478.   call temp:=  [|java:lang:Class.isPrimitive|](v0) @signature [|Ljava/lang/Class;.isPrimitive:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09547e.   v1:= temp;
#L095480.   if v1 != 0 then goto L095488;
#L095484.   v0:= new [|java:lang:Object|];
#L095488.   return v0  @type object;

   }
    procedure [|char|] [|java:io:ObjectStreamField.getTypeCode|] ([|java:io:ObjectStreamField|] v1 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.getTypeCode:()C|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09549c.   call temp:=  [|java:io:ObjectStreamField.getTypeInternal|](v1) @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0954a2.   v0:= temp  @type object;
#L0954a4.   call temp:=  [|java:io:ObjectStreamField.typeCodeOf|](v1, v0) @signature [|Ljava/io/ObjectStreamField;.typeCodeOf:(Ljava/lang/Class;)C|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0954aa.   v0:= temp;
#L0954ac.   return v0;

   }
    procedure [|java:lang:Class|] [|java:io:ObjectStreamField.getTypeInternal|] ([|java:io:ObjectStreamField|] v1 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @Access  {
      local temp ;
        v0;
      
#L0954c0.   v0:= v1.[|java:io:ObjectStreamField.type|]   @type object;
#L0954c4.   v0:= instanceof @varname v0 @type [|java:lang:ref:WeakReference|];
#L0954c8.   if v0 == 0 then goto L0954e2;
#L0954cc.   v0:= v1.[|java:io:ObjectStreamField.type|]   @type object;
#L0954d0.   v0:= ([|java:lang:ref:WeakReference|])v0;
#L0954d4.   call temp:=  [|java:lang:ref:WeakReference.get|](v0) @signature [|Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:WeakReference|] @type virtual;
#L0954da.   v0:= temp  @type object;
#L0954dc.   v0:= ([|java:lang:Class|])v0;
#L0954e0.   return v0  @type object;
#L0954e2.   v0:= v1.[|java:io:ObjectStreamField.type|]   @type object;
#L0954e6.   v0:= ([|java:lang:Class|])v0;
#L0954ea.   goto L0954e0;

   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamField.getTypeString|] ([|java:io:ObjectStreamField|] v6 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.getTypeString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0954fc.   call temp:=  [|java:io:ObjectStreamField.isPrimitive|](v6) @signature [|Ljava/io/ObjectStreamField;.isPrimitive:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L095502.   v3:= temp;
#L095504.   if v3 == 0 then goto L09550c;
#L095508.   v3:= 0  @length 4;
#L09550a.   return v3  @type object;
#L09550c.   v3:= v6.[|java:io:ObjectStreamField.typeString|]   @type object;
#L095510.   if v3 != 0 then goto L09554e;
#L095514.   call temp:=  [|java:io:ObjectStreamField.getTypeInternal|](v6) @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L09551a.   v1:= temp  @type object;
#L09551c.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L095522.   v3:= temp  @type object;
#L095524.   v4:= 46  @length 16;
#L095528.   v5:= 47  @length 16;
#L09552c.   call temp:=  [|java:lang:String.replace|](v3, v4, v5) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L095532.   v2:= temp  @type object;
#L095534.   call temp:=  [|java:lang:Class.isArray|](v1) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09553a.   v3:= temp;
#L09553c.   if v3 == 0 then goto L095554;
#L095540.   v0:= v2  @type object;
#L095542.   call temp:=  [|java:lang:String.intern|](v0) @signature [|Ljava/lang/String;.intern:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L095548.   v3:= temp  @type object;
#L09554a.   v6.[|java:io:ObjectStreamField.typeString|]  := v3 @type object;
#L09554e.   v3:= v6.[|java:io:ObjectStreamField.typeString|]   @type object;
#L095552.   goto L09550a;
#L095554.   v3:= new [|java:lang:StringBuilder|];
#L095558.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L09555e.   v4:= "L" @type (object, string);
#L095562.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095568.   v3:= temp  @type object;
#L09556a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095570.   v3:= temp  @type object;
#L095572.   v4:= 59  @length 16;
#L095576.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09557c.   v3:= temp  @type object;
#L09557e.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095584.   v0:= temp  @type object;
#L095586.   goto L095542;

   }
    procedure [|boolean|] [|java:io:ObjectStreamField.isPrimitive|] ([|java:io:ObjectStreamField|] v2 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.isPrimitive:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L095598.   call temp:=  [|java:io:ObjectStreamField.getTypeInternal|](v2) @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L09559e.   v0:= temp  @type object;
#L0955a0.   if v0 == 0 then goto L0955b4;
#L0955a4.   call temp:=  [|java:lang:Class.isPrimitive|](v0) @signature [|Ljava/lang/Class;.isPrimitive:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0955aa.   v1:= temp;
#L0955ac.   if v1 == 0 then goto L0955b4;
#L0955b0.   v1:= 1  @length 4;
#L0955b2.   return v1;
#L0955b4.   v1:= 0  @length 4;
#L0955b6.   goto L0955b2;

   }
    procedure [|boolean|] [|java:io:ObjectStreamField.isUnshared|] ([|java:io:ObjectStreamField|] v1 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.isUnshared:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0955c8.   v0:= v1.[|java:io:ObjectStreamField.unshared|]   @boolean;
#L0955cc.   return v0;

   }
    procedure [|void|] [|java:io:ObjectStreamField.resolve|] ([|java:io:ObjectStreamField|] v7 @type (this), [|java:lang:ClassLoader|] v8 @type (object)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.resolve:(Ljava/lang/ClassLoader;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0955e0.   v6:= 1  @length 4;
#L0955e2.   v5:= 0  @length 4;
#L0955e4.   v2:= v7.[|java:io:ObjectStreamField.typeString|]   @type object;
#L0955e8.   if v2 != 0 then goto L09560c;
#L0955ec.   call temp:=  [|java:io:ObjectStreamField.isPrimitive|](v7) @signature [|Ljava/io/ObjectStreamField;.isPrimitive:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0955f2.   v2:= temp;
#L0955f4.   if v2 == 0 then goto L09560c;
#L0955f8.   call temp:=  [|java:io:ObjectStreamField.getTypeCode|](v7) @signature [|Ljava/io/ObjectStreamField;.getTypeCode:()C|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L0955fe.   v2:= temp;
#L095600.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(C)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L095606.   v2:= temp  @type object;
#L095608.   v7.[|java:io:ObjectStreamField.typeString|]  := v2 @type object;
#L09560c.   v2:= v7.[|java:io:ObjectStreamField.typeString|]   @type object;
#L095610.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L095616.   v2:= temp;
#L095618.   if v2 != v6 then goto L09562a;
#L09561c.   call temp:=  [|java:io:ObjectStreamField.defaultResolve|](v7) @signature [|Ljava/io/ObjectStreamField;.defaultResolve:()Z|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L095622.   v2:= temp;
#L095624.   if v2 == 0 then goto L09562a;
#L095628.   return @void ;
#L09562a.   v2:= v7.[|java:io:ObjectStreamField.typeString|]   @type object;
#L09562e.   v3:= 47  @length 16;
#L095632.   v4:= 46  @length 16;
#L095636.   call temp:=  [|java:lang:String.replace|](v2, v3, v4) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L09563c.   v1:= temp  @type object;
#L09563e.   call temp:=  [|java:lang:String.charAt|](v1, v5) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L095644.   v2:= temp;
#L095646.   v3:= 76  @length 16;
#L09564a.   if v2 != v3 then goto L095662;
#L09564e.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L095654.   v2:= temp;
#L095656.   v2:= v2 + -1;
#L09565a.   call temp:=  [|java:lang:String.substring|](v1, v6, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L095660.   v1:= temp  @type object;
#L095662.   v2:= 0  @length 4;
#L095664.   call temp:=  [|java:lang:Class.forName|](v1, v2, v8) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L09566a.   v0:= temp  @type object;
#L09566c.   call temp:=  [|java:lang:Class.getClassLoader|](v0) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L095672.   v2:= temp  @type object;
#L095674.   if v2 != 0 then goto L095682;
#L095678.   v7.[|java:io:ObjectStreamField.type|]  := v0 @type object;
#L09567c.   goto L095628;
#L09567e.   v2:= Exception  @type object;
#L095680.   goto L095628;
#L095682.   v2:= new [|java:lang:ref:WeakReference|];
#L095686.   call temp:=  [|java:lang:ref:WeakReference.<init>|](v2, v0) @signature [|Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:WeakReference|] @type direct;
#L09568c.   v0:= v2  @type object;
#L09568e.   goto L095678;
  catch  [|java:lang:ClassNotFoundException|] @[L095664..L09568c] goto L09567e;

   }
    procedure [|void|] [|java:io:ObjectStreamField.setOffset|] ([|java:io:ObjectStreamField|] v0 @type (this), [|int|] v1) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.setOffset:(I)V|] @Access PROTECTED {
      local temp ;
      
#L0956b0.   v0.[|java:io:ObjectStreamField.offset|]  := v1;
#L0956b4.   return @void ;

   }
    procedure [|void|] [|java:io:ObjectStreamField.setUnshared|] ([|java:io:ObjectStreamField|] v0 @type (this), [|boolean|] v1) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.setUnshared:(Z)V|] @Access  {
      local temp ;
      
#L0956c8.   v0.[|java:io:ObjectStreamField.unshared|]  := v1 @boolean;
#L0956cc.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:ObjectStreamField.toString|] ([|java:io:ObjectStreamField|] v2 @type (this)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0956e0.   v0:= new [|java:lang:StringBuilder|];
#L0956e4.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0956ea.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0956f0.   v1:= temp  @type object;
#L0956f2.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0956f8.   v1:= temp  @type object;
#L0956fa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095700.   v0:= temp  @type object;
#L095702.   v1:= 40  @length 16;
#L095706.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09570c.   v0:= temp  @type object;
#L09570e.   call temp:=  [|java:io:ObjectStreamField.getName|](v2) @signature [|Ljava/io/ObjectStreamField;.getName:()Ljava/lang/String;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L095714.   v1:= temp  @type object;
#L095716.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09571c.   v0:= temp  @type object;
#L09571e.   v1:= 58  @length 16;
#L095722.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095728.   v0:= temp  @type object;
#L09572a.   call temp:=  [|java:io:ObjectStreamField.getTypeInternal|](v2) @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L095730.   v1:= temp  @type object;
#L095732.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095738.   v0:= temp  @type object;
#L09573a.   v1:= 41  @length 16;
#L09573e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095744.   v0:= temp  @type object;
#L095746.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09574c.   v0:= temp  @type object;
#L09574e.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:ObjectStreamField.writeField|] ([|java:io:ObjectStreamField|] v2 @type (this), [|java:io:DataOutputStream|] v3 @type (object)) @owner [|java:io:ObjectStreamField|] @signature [|Ljava/io/ObjectStreamField;.writeField:(Ljava/io/DataOutputStream;)Z|] @Access  {
      local temp ;
        v0;
        v1;
      
#L095760.   call temp:=  [|java:io:ObjectStreamField.getTypeInternal|](v2) @signature [|Ljava/io/ObjectStreamField;.getTypeInternal:()Ljava/lang/Class;|] @classDescriptor [|java:io:ObjectStreamField|] @type virtual;
#L095766.   v0:= temp  @type object;
#L095768.   call temp:=  [|java:io:ObjectStreamField.typeCodeOf|](v2, v0) @signature [|Ljava/io/ObjectStreamField;.typeCodeOf:(Ljava/lang/Class;)C|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L09576e.   v1:= temp;
#L095770.   call temp:=  [|java:io:DataOutputStream.writeByte|](v3, v1) @signature [|Ljava/io/DataOutputStream;.writeByte:(I)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L095776.   v1:= v2.[|java:io:ObjectStreamField.name|]   @type object;
#L09577a.   call temp:=  [|java:io:DataOutputStream.writeUTF|](v3, v1) @signature [|Ljava/io/DataOutputStream;.writeUTF:(Ljava/lang/String;)V|] @classDescriptor [|java:io:DataOutputStream|] @type virtual;
#L095780.   if v0 == 0 then goto L095794;
#L095784.   call temp:=  [|java:lang:Class.isPrimitive|](v0) @signature [|Ljava/lang/Class;.isPrimitive:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L09578a.   v1:= temp;
#L09578c.   if v1 == 0 then goto L095794;
#L095790.   v1:= 1  @length 4;
#L095792.   return v1;
#L095794.   v1:= 0  @length 4;
#L095796.   goto L095792;

   }
record [|java:io:OptionalDataException|]  @type class @AccessFlag PUBLIC  extends [|java:io:ObjectStreamException|] {
      [|boolean|] [|java:io:OptionalDataException.eof|]    @AccessFlag PUBLIC;
      [|int|] [|java:io:OptionalDataException.length|]    @AccessFlag PUBLIC;
   }
      global [|long|] @@[|java:io:OptionalDataException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:OptionalDataException.<init>|] ([|java:io:OptionalDataException|] v0 @type (this)) @owner [|java:io:OptionalDataException|] @signature [|Ljava/io/OptionalDataException;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0957a8.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0) @signature [|Ljava/io/ObjectStreamException;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L0957ae.   return @void ;

   }
    procedure [|void|] [|java:io:OptionalDataException.<init>|] ([|java:io:OptionalDataException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:OptionalDataException|] @signature [|Ljava/io/OptionalDataException;.<init>:(Ljava/lang/String;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0957c0.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0, v1) @signature [|Ljava/io/ObjectStreamException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L0957c6.   return @void ;

   }
record [|java:io:PipedInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:InputStream|] {
      [|byte|][] [|java:io:PipedInputStream.buffer|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:PipedInputStream.in|]    @AccessFlag PROTECTED;
      [|boolean|] [|java:io:PipedInputStream.isClosed|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:PipedInputStream.isConnected|]    @AccessFlag ;
      [|java:lang:Thread|] [|java:io:PipedInputStream.lastReader|]    @AccessFlag PRIVATE;
      [|java:lang:Thread|] [|java:io:PipedInputStream.lastWriter|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:PipedInputStream.out|]    @AccessFlag PROTECTED;
   }
      global [|int|] @@[|java:io:PipedInputStream.PIPE_SIZE|]    @AccessFlag PROTECTED_STATIC_FINAL;
    procedure [|void|] [|java:io:PipedInputStream.<init>|] ([|java:io:PipedInputStream|] v1 @type (this)) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0957d8.   call temp:=  [|java:io:InputStream.<init>|](v1) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L0957de.   v0:= -1  @length 4;
#L0957e0.   v1.[|java:io:PipedInputStream.in|]  := v0;
#L0957e4.   return @void ;

   }
    procedure [|void|] [|java:io:PipedInputStream.<init>|] ([|java:io:PipedInputStream|] v3 @type (this), [|int|] v4) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0957f8.   call temp:=  [|java:io:InputStream.<init>|](v3) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L0957fe.   v0:= -1  @length 4;
#L095800.   v3.[|java:io:PipedInputStream.in|]  := v0;
#L095804.   if v4 > 0 then goto L095846;
#L095808.   v0:= new [|java:lang:IllegalArgumentException|];
#L09580c.   v1:= new [|java:lang:StringBuilder|];
#L095810.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L095816.   v2:= "pipe size " @type (object, string);
#L09581a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095820.   v1:= temp  @type object;
#L095822.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095828.   v1:= temp  @type object;
#L09582a.   v2:= " too small" @type (object, string);
#L09582e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L095834.   v1:= temp  @type object;
#L095836.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09583c.   v1:= temp  @type object;
#L09583e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L095844.   throw v0;
#L095846.   v0:= new [|byte|][v4];
#L09584a.   v3.[|java:io:PipedInputStream.buffer|]  := v0 @type object;
#L09584e.   return @void ;

   }
    procedure [|void|] [|java:io:PipedInputStream.<init>|] ([|java:io:PipedInputStream|] v1 @type (this), [|java:io:PipedOutputStream|] v2 @type (object)) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.<init>:(Ljava/io/PipedOutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L095860.   call temp:=  [|java:io:InputStream.<init>|](v1) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L095866.   v0:= -1  @length 4;
#L095868.   v1.[|java:io:PipedInputStream.in|]  := v0;
#L09586c.   call temp:=  [|java:io:PipedInputStream.connect|](v1, v2) @signature [|Ljava/io/PipedInputStream;.connect:(Ljava/io/PipedOutputStream;)V|] @classDescriptor [|java:io:PipedInputStream|] @type virtual;
#L095872.   return @void ;

   }
    procedure [|void|] [|java:io:PipedInputStream.<init>|] ([|java:io:PipedInputStream|] v0 @type (this), [|java:io:PipedOutputStream|] v1 @type (object), [|int|] v2) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.<init>:(Ljava/io/PipedOutputStream;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L095884.   call temp:=  [|java:io:PipedInputStream.<init>|](v0, v2) @signature [|Ljava/io/PipedInputStream;.<init>:(I)V|] @classDescriptor [|java:io:PipedInputStream|] @type direct;
#L09588a.   call temp:=  [|java:io:PipedInputStream.connect|](v0, v1) @signature [|Ljava/io/PipedInputStream;.connect:(Ljava/io/PipedOutputStream;)V|] @classDescriptor [|java:io:PipedInputStream|] @type virtual;
#L095890.   return @void ;

   }
    procedure [|int|] [|java:io:PipedInputStream.available|] ([|java:io:PipedInputStream|] v2 @type (this)) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.available:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0958a4.   (@monitorenter v2)
#L0958a6.   v0:= v2.[|java:io:PipedInputStream.buffer|]   @type object;
#L0958aa.   if v0 == 0 then goto L0958b8;
#L0958ae.   v0:= v2.[|java:io:PipedInputStream.in|] ;
#L0958b2.   v1:= -1  @length 4;
#L0958b4.   if v0 != v1 then goto L0958be;
#L0958b8.   v0:= 0  @length 4;
#L0958ba.   (@monitorexit v2)
#L0958bc.   return v0;
#L0958be.   v0:= v2.[|java:io:PipedInputStream.in|] ;
#L0958c2.   v1:= v2.[|java:io:PipedInputStream.out|] ;
#L0958c6.   if v0 > v1 then goto L0958de;
#L0958ca.   v0:= v2.[|java:io:PipedInputStream.buffer|]   @type object;
#L0958ce.   v0:= v0.length;
#L0958d0.   v1:= v2.[|java:io:PipedInputStream.out|] ;
#L0958d4.   v0:= v0 - v1  @type int;
#L0958d6.   v1:= v2.[|java:io:PipedInputStream.in|] ;
#L0958da.   v0:= v0 + v1  @type int;
#L0958dc.   goto L0958ba;
#L0958de.   v0:= v2.[|java:io:PipedInputStream.in|] ;
#L0958e2.   v1:= v2.[|java:io:PipedInputStream.out|] ;
#L0958e6.   v0:= v0 - v1  @type int;
#L0958e8.   goto L0958ba;
#L0958ea.   v0:= Exception  @type object;
#L0958ec.   (@monitorexit v2)
#L0958ee.   throw v0;
  catch  [|any|] @[L0958a6..L0958b2] goto L0958ea;
  catch  [|any|] @[L0958be..L0958e6] goto L0958ea;

   }
    procedure [|void|] [|java:io:PipedInputStream.close|] ([|java:io:PipedInputStream|] v1 @type (this)) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.close:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L095914.   (@monitorenter v1)
#L095916.   v0:= 0  @length 4;
#L095918.   v1.[|java:io:PipedInputStream.buffer|]  := v0 @type object;
#L09591c.   call temp:=  [|java:lang:Object.notifyAll|](v1) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095922.   (@monitorexit v1)
#L095924.   return @void ;
#L095926.   v0:= Exception  @type object;
#L095928.   (@monitorexit v1)
#L09592a.   throw v0;
  catch  [|any|] @[L095918..L095922] goto L095926;

   }
    procedure [|void|] [|java:io:PipedInputStream.connect|] ([|java:io:PipedInputStream|] v0 @type (this), [|java:io:PipedOutputStream|] v1 @type (object)) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.connect:(Ljava/io/PipedOutputStream;)V|] @Access PUBLIC {
      local temp ;
      
#L095948.   call temp:=  [|java:io:PipedOutputStream.connect|](v1, v0) @signature [|Ljava/io/PipedOutputStream;.connect:(Ljava/io/PipedInputStream;)V|] @classDescriptor [|java:io:PipedOutputStream|] @type virtual;
#L09594e.   return @void ;

   }
    procedure [|void|] [|java:io:PipedInputStream.done|] ([|java:io:PipedInputStream|] v1 @type (this)) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.done:()V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L095960.   (@monitorenter v1)
#L095962.   v0:= 1  @length 4;
#L095964.   v1.[|java:io:PipedInputStream.isClosed|]  := v0 @boolean;
#L095968.   call temp:=  [|java:lang:Object.notifyAll|](v1) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09596e.   (@monitorexit v1)
#L095970.   return @void ;
#L095972.   v0:= Exception  @type object;
#L095974.   (@monitorexit v1)
#L095976.   throw v0;
  catch  [|any|] @[L095964..L09596e] goto L095972;

   }
    procedure [|void|] [|java:io:PipedInputStream.establishConnection|] ([|java:io:PipedInputStream|] v2 @type (this)) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.establishConnection:()V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L095994.   (@monitorenter v2)
#L095996.   v0:= v2.[|java:io:PipedInputStream.isConnected|]   @boolean;
#L09599a.   if v0 == 0 then goto L0959b4;
#L09599e.   v0:= new [|java:io:IOException|];
#L0959a2.   v1:= "Pipe already connected" @type (object, string);
#L0959a6.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0959ac.   throw v0;
#L0959ae.   v0:= Exception  @type object;
#L0959b0.   (@monitorexit v2)
#L0959b2.   throw v0;
#L0959b4.   v0:= v2.[|java:io:PipedInputStream.buffer|]   @type object;
#L0959b8.   if v0 != 0 then goto L0959c8;
#L0959bc.   v0:= 1024  @length 16;
#L0959c0.   v0:= new [|byte|][v0];
#L0959c4.   v2.[|java:io:PipedInputStream.buffer|]  := v0 @type object;
#L0959c8.   v0:= 1  @length 4;
#L0959ca.   v2.[|java:io:PipedInputStream.isConnected|]  := v0 @boolean;
#L0959ce.   (@monitorexit v2)
#L0959d0.   return @void ;
  catch  [|any|] @[L095996..L0959ae] goto L0959ae;
  catch  [|any|] @[L0959b4..L0959ce] goto L0959ae;

   }
    procedure [|int|] [|java:io:PipedInputStream.read|] ([|java:io:PipedInputStream|] v7 @type (this)) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.read:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0959f8.   v3:= -1  @length 4;
#L0959fa.   (@monitorenter v7)
#L0959fc.   v4:= v7.[|java:io:PipedInputStream.isConnected|]   @boolean;
#L095a00.   if v4 != 0 then goto L095a1a;
#L095a04.   v4:= new [|java:io:IOException|];
#L095a08.   v5:= "Not connected" @type (object, string);
#L095a0c.   call temp:=  [|java:io:IOException.<init>|](v4, v5) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095a12.   throw v4;
#L095a14.   v4:= Exception  @type object;
#L095a16.   (@monitorexit v7)
#L095a18.   throw v4;
#L095a1a.   v4:= v7.[|java:io:PipedInputStream.buffer|]   @type object;
#L095a1e.   if v4 != 0 then goto L095a32;
#L095a22.   v4:= new [|java:io:IOException|];
#L095a26.   v5:= "InputStream is closed" @type (object, string);
#L095a2a.   call temp:=  [|java:io:IOException.<init>|](v4, v5) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095a30.   throw v4;
#L095a32.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L095a38.   v4:= temp  @type object;
#L095a3a.   v7.[|java:io:PipedInputStream.lastReader|]  := v4 @type object;
#L095a3e.   v0:= 3  @length 4;
#L095a40.   v1:= v0;
#L095a42.   v4:= v7.[|java:io:PipedInputStream.in|] ;
#L095a46.   if v4 != v3 then goto L095a8e;
#L095a4a.   v4:= v7.[|java:io:PipedInputStream.isClosed|]   @boolean;
#L095a4e.   if v4 == 0 then goto L095a56;
#L095a52.   (@monitorexit v7)
#L095a54.   return v3;
#L095a56.   v0:= v1 + -1;
#L095a5a.   if v1 > 0 then goto L095ada;
#L095a5e.   v4:= v7.[|java:io:PipedInputStream.lastWriter|]   @type object;
#L095a62.   if v4 == 0 then goto L095ada;
#L095a66.   v4:= v7.[|java:io:PipedInputStream.lastWriter|]   @type object;
#L095a6a.   call temp:=  [|java:lang:Thread.isAlive|](v4) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L095a70.   v4:= temp;
#L095a72.   if v4 != 0 then goto L095ada;
#L095a76.   v4:= new [|java:io:IOException|];
#L095a7a.   v5:= "Pipe broken" @type (object, string);
#L095a7e.   call temp:=  [|java:io:IOException.<init>|](v4, v5) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095a84.   throw v4;
#L095a86.   v2:= Exception  @type object;
#L095a88.   call temp:=  [|libcore:io:IoUtils.throwInterruptedIoException|]() @signature [|Llibcore/io/IoUtils;.throwInterruptedIoException:()V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L095a8e.   v4:= v7.[|java:io:PipedInputStream.buffer|]   @type object;
#L095a92.   v5:= v7.[|java:io:PipedInputStream.out|] ;
#L095a96.   v6:= v5 + 1;
#L095a9a.   v7.[|java:io:PipedInputStream.out|]  := v6;
#L095a9e.   v4:= v4[v5]  @byte;
#L095aa2.   v3:= v4 ^& 255;
#L095aa6.   v4:= v7.[|java:io:PipedInputStream.out|] ;
#L095aaa.   v5:= v7.[|java:io:PipedInputStream.buffer|]   @type object;
#L095aae.   v5:= v5.length;
#L095ab0.   if v4 != v5 then goto L095aba;
#L095ab4.   v4:= 0  @length 4;
#L095ab6.   v7.[|java:io:PipedInputStream.out|]  := v4;
#L095aba.   v4:= v7.[|java:io:PipedInputStream.out|] ;
#L095abe.   v5:= v7.[|java:io:PipedInputStream.in|] ;
#L095ac2.   if v4 != v5 then goto L095ad2;
#L095ac6.   v4:= -1  @length 4;
#L095ac8.   v7.[|java:io:PipedInputStream.in|]  := v4;
#L095acc.   v4:= 0  @length 4;
#L095ace.   v7.[|java:io:PipedInputStream.out|]  := v4;
#L095ad2.   call temp:=  [|java:lang:Object.notifyAll|](v7) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095ad8.   goto L095a52;
#L095ada.   call temp:=  [|java:lang:Object.notifyAll|](v7) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095ae0.   v4:= 1000  @length wide16;
#L095ae4.   call temp:=  [|java:lang:Object.wait|](v7, v4, v5) @signature [|Ljava/lang/Object;.wait:(J)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095aea.   v1:= v0;
#L095aec.   goto L095a42;
#L095aee.   v2:= Exception  @type object;
#L095af0.   v0:= v1;
#L095af2.   goto L095a88;
  catch  [|any|] @[L0959fc..L095a14] goto L095a14;
  catch  [|any|] @[L095a1a..L095a3e] goto L095a14;
  catch  [|java:lang:InterruptedException|] @[L095a42..L095a4e] goto L095aee;
  catch  [|any|] @[L095a42..L095a4e] goto L095a14;
  catch  [|java:lang:InterruptedException|] @[L095a5e..L095a86] goto L095a86;
  catch  [|any|] @[L095a5e..L095a86] goto L095a14;
  catch  [|any|] @[L095a88..L095ad8] goto L095a14;
  catch  [|java:lang:InterruptedException|] @[L095ada..L095aea] goto L095a86;
  catch  [|any|] @[L095ada..L095aea] goto L095a14;

   }
    procedure [|int|] [|java:io:PipedInputStream.read|] ([|java:io:PipedInputStream|] v10 @type (this), [|byte|][] v11, [|int|] v12, [|int|] v13) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.read:([BII)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L095b44.   v6:= 0  @length 4;
#L095b46.   v7:= -1  @length 4;
#L095b48.   (@monitorenter v10)
#L095b4a.   v8:= v11.length;
#L095b4c.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v8, v12, v13) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L095b52.   if v13 != 0 then goto L095b5a;
#L095b56.   (@monitorexit v10)
#L095b58.   return v6;
#L095b5a.   v8:= v10.[|java:io:PipedInputStream.isConnected|]   @boolean;
#L095b5e.   if v8 != 0 then goto L095b78;
#L095b62.   v7:= new [|java:io:IOException|];
#L095b66.   v8:= "Not connected" @type (object, string);
#L095b6a.   call temp:=  [|java:io:IOException.<init>|](v7, v8) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095b70.   throw v7;
#L095b72.   v7:= Exception  @type object;
#L095b74.   (@monitorexit v10)
#L095b76.   throw v7;
#L095b78.   v8:= v10.[|java:io:PipedInputStream.buffer|]   @type object;
#L095b7c.   if v8 != 0 then goto L095b90;
#L095b80.   v7:= new [|java:io:IOException|];
#L095b84.   v8:= "InputStream is closed" @type (object, string);
#L095b88.   call temp:=  [|java:io:IOException.<init>|](v7, v8) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095b8e.   throw v7;
#L095b90.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L095b96.   v8:= temp  @type object;
#L095b98.   v10.[|java:io:PipedInputStream.lastReader|]  := v8 @type object;
#L095b9c.   v0:= 3  @length 4;
#L095b9e.   v1:= v0;
#L095ba0.   v8:= v10.[|java:io:PipedInputStream.in|] ;
#L095ba4.   if v8 != v7 then goto L095bec;
#L095ba8.   v8:= v10.[|java:io:PipedInputStream.isClosed|]   @boolean;
#L095bac.   if v8 == 0 then goto L095bb4;
#L095bb0.   v6:= v7;
#L095bb2.   goto L095b56;
#L095bb4.   v0:= v1 + -1;
#L095bb8.   if v1 > 0 then goto L095cb6;
#L095bbc.   v8:= v10.[|java:io:PipedInputStream.lastWriter|]   @type object;
#L095bc0.   if v8 == 0 then goto L095cb6;
#L095bc4.   v8:= v10.[|java:io:PipedInputStream.lastWriter|]   @type object;
#L095bc8.   call temp:=  [|java:lang:Thread.isAlive|](v8) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L095bce.   v8:= temp;
#L095bd0.   if v8 != 0 then goto L095cb6;
#L095bd4.   v8:= new [|java:io:IOException|];
#L095bd8.   v9:= "Pipe broken" @type (object, string);
#L095bdc.   call temp:=  [|java:io:IOException.<init>|](v8, v9) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095be2.   throw v8;
#L095be4.   v2:= Exception  @type object;
#L095be6.   call temp:=  [|libcore:io:IoUtils.throwInterruptedIoException|]() @signature [|Llibcore/io/IoUtils;.throwInterruptedIoException:()V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L095bec.   v6:= 0  @length 4;
#L095bee.   v8:= v10.[|java:io:PipedInputStream.out|] ;
#L095bf2.   v9:= v10.[|java:io:PipedInputStream.in|] ;
#L095bf6.   if v8 < v9 then goto L095c54;
#L095bfa.   v8:= v10.[|java:io:PipedInputStream.buffer|]   @type object;
#L095bfe.   v8:= v8.length;
#L095c00.   v9:= v10.[|java:io:PipedInputStream.out|] ;
#L095c04.   v3:= v8 - v9  @type int;
#L095c08.   if v3 >= v13 then goto L095ccc;
#L095c0c.   v5:= v3;
#L095c0e.   v8:= v10.[|java:io:PipedInputStream.buffer|]   @type object;
#L095c12.   v9:= v10.[|java:io:PipedInputStream.out|] ;
#L095c16.   call temp:=  [|java:lang:System.arraycopy|](v8, v9, v11, v12, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L095c1c.   v8:= v10.[|java:io:PipedInputStream.out|] ;
#L095c20.   v8:= v8 + v5  @type int;
#L095c22.   v10.[|java:io:PipedInputStream.out|]  := v8;
#L095c26.   v8:= v10.[|java:io:PipedInputStream.out|] ;
#L095c2a.   v9:= v10.[|java:io:PipedInputStream.buffer|]   @type object;
#L095c2e.   v9:= v9.length;
#L095c30.   if v8 != v9 then goto L095c3a;
#L095c34.   v8:= 0  @length 4;
#L095c36.   v10.[|java:io:PipedInputStream.out|]  := v8;
#L095c3a.   v8:= v10.[|java:io:PipedInputStream.out|] ;
#L095c3e.   v9:= v10.[|java:io:PipedInputStream.in|] ;
#L095c42.   if v8 != v9 then goto L095c52;
#L095c46.   v8:= -1  @length 4;
#L095c48.   v10.[|java:io:PipedInputStream.in|]  := v8;
#L095c4c.   v8:= 0  @length 4;
#L095c4e.   v10.[|java:io:PipedInputStream.out|]  := v8;
#L095c52.   v6:= v6 + v5  @type int;
#L095c54.   if v6 >= v13 then goto L095cac;
#L095c58.   v8:= v10.[|java:io:PipedInputStream.in|] ;
#L095c5c.   if v8 == v7 then goto L095cac;
#L095c60.   v7:= v10.[|java:io:PipedInputStream.in|] ;
#L095c64.   v8:= v10.[|java:io:PipedInputStream.out|] ;
#L095c68.   v3:= v7 - v8  @type int;
#L095c6c.   v4:= v13 - v6  @type int;
#L095c70.   if v4 >= v3 then goto L095cd0;
#L095c74.   v5:= v4;
#L095c76.   v7:= v10.[|java:io:PipedInputStream.buffer|]   @type object;
#L095c7a.   v8:= v10.[|java:io:PipedInputStream.out|] ;
#L095c7e.   v9:= v12 + v6  @type int;
#L095c82.   call temp:=  [|java:lang:System.arraycopy|](v7, v8, v11, v9, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L095c88.   v7:= v10.[|java:io:PipedInputStream.out|] ;
#L095c8c.   v7:= v7 + v5  @type int;
#L095c8e.   v10.[|java:io:PipedInputStream.out|]  := v7;
#L095c92.   v7:= v10.[|java:io:PipedInputStream.out|] ;
#L095c96.   v8:= v10.[|java:io:PipedInputStream.in|] ;
#L095c9a.   if v7 != v8 then goto L095caa;
#L095c9e.   v7:= -1  @length 4;
#L095ca0.   v10.[|java:io:PipedInputStream.in|]  := v7;
#L095ca4.   v7:= 0  @length 4;
#L095ca6.   v10.[|java:io:PipedInputStream.out|]  := v7;
#L095caa.   v6:= v6 + v5  @type int;
#L095cac.   call temp:=  [|java:lang:Object.notifyAll|](v10) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095cb2.   goto L095b56;
#L095cb6.   call temp:=  [|java:lang:Object.notifyAll|](v10) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095cbc.   v8:= 1000  @length wide16;
#L095cc0.   call temp:=  [|java:lang:Object.wait|](v10, v8, v9) @signature [|Ljava/lang/Object;.wait:(J)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095cc6.   v1:= v0;
#L095cc8.   goto L095ba0;
#L095ccc.   v5:= v13;
#L095cce.   goto L095c0e;
#L095cd0.   v5:= v3;
#L095cd2.   goto L095c76;
#L095cd4.   v2:= Exception  @type object;
#L095cd6.   v0:= v1;
#L095cd8.   goto L095be6;
  catch  [|any|] @[L095b4a..L095b52] goto L095b72;
  catch  [|any|] @[L095b5a..L095b72] goto L095b72;
  catch  [|any|] @[L095b78..L095b9c] goto L095b72;
  catch  [|java:lang:InterruptedException|] @[L095ba0..L095bac] goto L095cd4;
  catch  [|any|] @[L095ba0..L095bac] goto L095b72;
  catch  [|java:lang:InterruptedException|] @[L095bbc..L095be4] goto L095be4;
  catch  [|any|] @[L095bbc..L095be4] goto L095b72;
  catch  [|any|] @[L095be6..L095cb2] goto L095b72;
  catch  [|java:lang:InterruptedException|] @[L095cb6..L095cc6] goto L095be4;
  catch  [|any|] @[L095cb6..L095cc6] goto L095b72;

   }
    procedure [|void|] [|java:io:PipedInputStream.receive|] ([|java:io:PipedInputStream|] v4 @type (this), [|int|] v5) @owner [|java:io:PipedInputStream|] @signature [|Ljava/io/PipedInputStream;.receive:(I)V|] @Access PROTECTED_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L095d34.   (@monitorenter v4)
#L095d36.   v1:= v4.[|java:io:PipedInputStream.buffer|]   @type object;
#L095d3a.   if v1 == 0 then goto L095d46;
#L095d3e.   v1:= v4.[|java:io:PipedInputStream.isClosed|]   @boolean;
#L095d42.   if v1 == 0 then goto L095d5c;
#L095d46.   v1:= new [|java:io:IOException|];
#L095d4a.   v2:= "Pipe is closed" @type (object, string);
#L095d4e.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095d54.   throw v1;
#L095d56.   v1:= Exception  @type object;
#L095d58.   (@monitorexit v4)
#L095d5a.   throw v1;
#L095d5c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L095d62.   v1:= temp  @type object;
#L095d64.   v4.[|java:io:PipedInputStream.lastWriter|]  := v1 @type object;
#L095d68.   v1:= v4.[|java:io:PipedInputStream.buffer|]   @type object;
#L095d6c.   if v1 == 0 then goto L095dac;
#L095d70.   v1:= v4.[|java:io:PipedInputStream.out|] ;
#L095d74.   v2:= v4.[|java:io:PipedInputStream.in|] ;
#L095d78.   if v1 != v2 then goto L095dac;
#L095d7c.   v1:= v4.[|java:io:PipedInputStream.lastReader|]   @type object;
#L095d80.   if v1 == 0 then goto L095dc4;
#L095d84.   v1:= v4.[|java:io:PipedInputStream.lastReader|]   @type object;
#L095d88.   call temp:=  [|java:lang:Thread.isAlive|](v1) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L095d8e.   v1:= temp;
#L095d90.   if v1 != 0 then goto L095dc4;
#L095d94.   v1:= new [|java:io:IOException|];
#L095d98.   v2:= "Pipe broken" @type (object, string);
#L095d9c.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095da2.   throw v1;
#L095da4.   v0:= Exception  @type object;
#L095da6.   call temp:=  [|libcore:io:IoUtils.throwInterruptedIoException|]() @signature [|Llibcore/io/IoUtils;.throwInterruptedIoException:()V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L095dac.   v1:= v4.[|java:io:PipedInputStream.buffer|]   @type object;
#L095db0.   if v1 != 0 then goto L095dd6;
#L095db4.   v1:= new [|java:io:IOException|];
#L095db8.   v2:= "Pipe is closed" @type (object, string);
#L095dbc.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095dc2.   throw v1;
#L095dc4.   call temp:=  [|java:lang:Object.notifyAll|](v4) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095dca.   v1:= 1000  @length wide16;
#L095dce.   call temp:=  [|java:lang:Object.wait|](v4, v1, v2) @signature [|Ljava/lang/Object;.wait:(J)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095dd4.   goto L095d68;
#L095dd6.   v1:= v4.[|java:io:PipedInputStream.in|] ;
#L095dda.   v2:= -1  @length 4;
#L095ddc.   if v1 != v2 then goto L095de6;
#L095de0.   v1:= 0  @length 4;
#L095de2.   v4.[|java:io:PipedInputStream.in|]  := v1;
#L095de6.   v1:= v4.[|java:io:PipedInputStream.buffer|]   @type object;
#L095dea.   v2:= v4.[|java:io:PipedInputStream.in|] ;
#L095dee.   v3:= v2 + 1;
#L095df2.   v4.[|java:io:PipedInputStream.in|]  := v3;
#L095df6.   v3:= (byte)v5  @type i2b;
#L095df8.   v1[v2]:= v3  @byte;
#L095dfc.   v1:= v4.[|java:io:PipedInputStream.in|] ;
#L095e00.   v2:= v4.[|java:io:PipedInputStream.buffer|]   @type object;
#L095e04.   v2:= v2.length;
#L095e06.   if v1 != v2 then goto L095e10;
#L095e0a.   v1:= 0  @length 4;
#L095e0c.   v4.[|java:io:PipedInputStream.in|]  := v1;
#L095e10.   call temp:=  [|java:lang:Object.notifyAll|](v4) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095e16.   (@monitorexit v4)
#L095e18.   return @void ;
  catch  [|any|] @[L095d36..L095d56] goto L095d56;
  catch  [|any|] @[L095d5c..L095d68] goto L095d56;
  catch  [|java:lang:InterruptedException|] @[L095d68..L095da4] goto L095da4;
  catch  [|any|] @[L095d68..L095da4] goto L095d56;
  catch  [|any|] @[L095da6..L095dc4] goto L095d56;
  catch  [|java:lang:InterruptedException|] @[L095dc4..L095dd4] goto L095da4;
  catch  [|any|] @[L095dc4..L095dd4] goto L095d56;
  catch  [|any|] @[L095dd6..L095e16] goto L095d56;

   }
record [|java:io:PipedOutputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:OutputStream|] {
      [|java:io:PipedInputStream|] [|java:io:PipedOutputStream.target|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:PipedOutputStream.<init>|] ([|java:io:PipedOutputStream|] v0 @type (this)) @owner [|java:io:PipedOutputStream|] @signature [|Ljava/io/PipedOutputStream;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L095e64.   call temp:=  [|java:io:OutputStream.<init>|](v0) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L095e6a.   return @void ;

   }
    procedure [|void|] [|java:io:PipedOutputStream.<init>|] ([|java:io:PipedOutputStream|] v0 @type (this), [|java:io:PipedInputStream|] v1 @type (object)) @owner [|java:io:PipedOutputStream|] @signature [|Ljava/io/PipedOutputStream;.<init>:(Ljava/io/PipedInputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L095e7c.   call temp:=  [|java:io:OutputStream.<init>|](v0) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L095e82.   call temp:=  [|java:io:PipedOutputStream.connect|](v0, v1) @signature [|Ljava/io/PipedOutputStream;.connect:(Ljava/io/PipedInputStream;)V|] @classDescriptor [|java:io:PipedOutputStream|] @type virtual;
#L095e88.   return @void ;

   }
    procedure [|void|] [|java:io:PipedOutputStream.close|] ([|java:io:PipedOutputStream|] v2 @type (this)) @owner [|java:io:PipedOutputStream|] @signature [|Ljava/io/PipedOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L095e9c.   v0:= v2.[|java:io:PipedOutputStream.target|]   @type object;
#L095ea0.   if v0 == 0 then goto L095eb0;
#L095ea4.   call temp:=  [|java:io:PipedInputStream.done|](v0) @signature [|Ljava/io/PipedInputStream;.done:()V|] @classDescriptor [|java:io:PipedInputStream|] @type virtual;
#L095eaa.   v1:= 0  @length 4;
#L095eac.   v2.[|java:io:PipedOutputStream.target|]  := v1 @type object;
#L095eb0.   return @void ;

   }
    procedure [|void|] [|java:io:PipedOutputStream.connect|] ([|java:io:PipedOutputStream|] v2 @type (this), [|java:io:PipedInputStream|] v3 @type (object)) @owner [|java:io:PipedOutputStream|] @signature [|Ljava/io/PipedOutputStream;.connect:(Ljava/io/PipedInputStream;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L095ec4.   if v3 != 0 then goto L095ed8;
#L095ec8.   v0:= new [|java:lang:NullPointerException|];
#L095ecc.   v1:= "stream == null" @type (object, string);
#L095ed0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L095ed6.   throw v0;
#L095ed8.   (@monitorenter v3)
#L095eda.   v0:= v2.[|java:io:PipedOutputStream.target|]   @type object;
#L095ede.   if v0 == 0 then goto L095ef8;
#L095ee2.   v0:= new [|java:io:IOException|];
#L095ee6.   v1:= "Already connected" @type (object, string);
#L095eea.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095ef0.   throw v0;
#L095ef2.   v0:= Exception  @type object;
#L095ef4.   (@monitorexit v3)
#L095ef6.   throw v0;
#L095ef8.   v0:= v3.[|java:io:PipedInputStream.isConnected|]   @boolean;
#L095efc.   if v0 == 0 then goto L095f10;
#L095f00.   v0:= new [|java:io:IOException|];
#L095f04.   v1:= "Pipe already connected" @type (object, string);
#L095f08.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095f0e.   throw v0;
#L095f10.   call temp:=  [|java:io:PipedInputStream.establishConnection|](v3) @signature [|Ljava/io/PipedInputStream;.establishConnection:()V|] @classDescriptor [|java:io:PipedInputStream|] @type virtual;
#L095f16.   v2.[|java:io:PipedOutputStream.target|]  := v3 @type object;
#L095f1a.   (@monitorexit v3)
#L095f1c.   return @void ;
  catch  [|any|] @[L095eda..L095ef6] goto L095ef2;
  catch  [|any|] @[L095ef8..L095f1c] goto L095ef2;

   }
    procedure [|void|] [|java:io:PipedOutputStream.flush|] ([|java:io:PipedOutputStream|] v2 @type (this)) @owner [|java:io:PipedOutputStream|] @signature [|Ljava/io/PipedOutputStream;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L095f44.   v0:= v2.[|java:io:PipedOutputStream.target|]   @type object;
#L095f48.   if v0 != 0 then goto L095f4e;
#L095f4c.   return @void ;
#L095f4e.   (@monitorenter v0)
#L095f50.   call temp:=  [|java:lang:Object.notifyAll|](v0) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L095f56.   (@monitorexit v0)
#L095f58.   goto L095f4c;
#L095f5a.   v1:= Exception  @type object;
#L095f5c.   (@monitorexit v0)
#L095f5e.   throw v1;
  catch  [|any|] @[L095f50..L095f5e] goto L095f5a;

   }
    procedure [|void|] [|java:io:PipedOutputStream.write|] ([|java:io:PipedOutputStream|] v3 @type (this), [|int|] v4) @owner [|java:io:PipedOutputStream|] @signature [|Ljava/io/PipedOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L095f7c.   v0:= v3.[|java:io:PipedOutputStream.target|]   @type object;
#L095f80.   if v0 != 0 then goto L095f94;
#L095f84.   v1:= new [|java:io:IOException|];
#L095f88.   v2:= "Pipe not connected" @type (object, string);
#L095f8c.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L095f92.   throw v1;
#L095f94.   call temp:=  [|java:io:PipedInputStream.receive|](v0, v4) @signature [|Ljava/io/PipedInputStream;.receive:(I)V|] @classDescriptor [|java:io:PipedInputStream|] @type virtual;
#L095f9a.   return @void ;

   }
    procedure [|void|] [|java:io:PipedOutputStream.write|] ([|java:io:PipedOutputStream|] v0 @type (this), [|byte|][] v1, [|int|] v2, [|int|] v3) @owner [|java:io:PipedOutputStream|] @signature [|Ljava/io/PipedOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
      
#L095fac.   call temp:=  [|java:io:OutputStream.write|](v0, v1, v2, v3) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type super;
#L095fb2.   return @void ;

   }
record [|java:io:PipedReader|]  @type class @AccessFlag PUBLIC  extends [|java:io:Reader|] {
      [|char|][] [|java:io:PipedReader.buffer|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:PipedReader.in|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:PipedReader.isClosed|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:PipedReader.isConnected|]    @AccessFlag ;
      [|java:lang:Thread|] [|java:io:PipedReader.lastReader|]    @AccessFlag PRIVATE;
      [|java:lang:Thread|] [|java:io:PipedReader.lastWriter|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:PipedReader.out|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:io:PipedReader.PIPE_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:PipedReader.<init>|] ([|java:io:PipedReader|] v1 @type (this)) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L095fc4.   call temp:=  [|java:io:Reader.<init>|](v1) @signature [|Ljava/io/Reader;.<init>:()V|] @classDescriptor [|java:io:Reader|] @type direct;
#L095fca.   v0:= -1  @length 4;
#L095fcc.   v1.[|java:io:PipedReader.in|]  := v0;
#L095fd0.   return @void ;

   }
    procedure [|void|] [|java:io:PipedReader.<init>|] ([|java:io:PipedReader|] v3 @type (this), [|int|] v4) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L095fe4.   call temp:=  [|java:io:Reader.<init>|](v3) @signature [|Ljava/io/Reader;.<init>:()V|] @classDescriptor [|java:io:Reader|] @type direct;
#L095fea.   v0:= -1  @length 4;
#L095fec.   v3.[|java:io:PipedReader.in|]  := v0;
#L095ff0.   if v4 > 0 then goto L096032;
#L095ff4.   v0:= new [|java:lang:IllegalArgumentException|];
#L095ff8.   v1:= new [|java:lang:StringBuilder|];
#L095ffc.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L096002.   v2:= "pipe size " @type (object, string);
#L096006.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09600c.   v1:= temp  @type object;
#L09600e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L096014.   v1:= temp  @type object;
#L096016.   v2:= " too small" @type (object, string);
#L09601a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L096020.   v1:= temp  @type object;
#L096022.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L096028.   v1:= temp  @type object;
#L09602a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L096030.   throw v0;
#L096032.   v0:= new [|char|][v4];
#L096036.   v3.[|java:io:PipedReader.buffer|]  := v0 @type object;
#L09603a.   return @void ;

   }
    procedure [|void|] [|java:io:PipedReader.<init>|] ([|java:io:PipedReader|] v1 @type (this), [|java:io:PipedWriter|] v2 @type (object)) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.<init>:(Ljava/io/PipedWriter;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09604c.   call temp:=  [|java:io:Reader.<init>|](v1) @signature [|Ljava/io/Reader;.<init>:()V|] @classDescriptor [|java:io:Reader|] @type direct;
#L096052.   v0:= -1  @length 4;
#L096054.   v1.[|java:io:PipedReader.in|]  := v0;
#L096058.   call temp:=  [|java:io:PipedReader.connect|](v1, v2) @signature [|Ljava/io/PipedReader;.connect:(Ljava/io/PipedWriter;)V|] @classDescriptor [|java:io:PipedReader|] @type virtual;
#L09605e.   return @void ;

   }
    procedure [|void|] [|java:io:PipedReader.<init>|] ([|java:io:PipedReader|] v0 @type (this), [|java:io:PipedWriter|] v1 @type (object), [|int|] v2) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.<init>:(Ljava/io/PipedWriter;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L096070.   call temp:=  [|java:io:PipedReader.<init>|](v0, v2) @signature [|Ljava/io/PipedReader;.<init>:(I)V|] @classDescriptor [|java:io:PipedReader|] @type direct;
#L096076.   call temp:=  [|java:io:PipedReader.connect|](v0, v1) @signature [|Ljava/io/PipedReader;.connect:(Ljava/io/PipedWriter;)V|] @classDescriptor [|java:io:PipedReader|] @type virtual;
#L09607c.   return @void ;

   }
    procedure [|void|] [|java:io:PipedReader.close|] ([|java:io:PipedReader|] v1 @type (this)) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.close:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L096090.   (@monitorenter v1)
#L096092.   v0:= 0  @length 4;
#L096094.   v1.[|java:io:PipedReader.buffer|]  := v0 @type object;
#L096098.   v0:= 1  @length 4;
#L09609a.   v1.[|java:io:PipedReader.isClosed|]  := v0 @boolean;
#L09609e.   call temp:=  [|java:lang:Object.notifyAll|](v1) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0960a4.   (@monitorexit v1)
#L0960a6.   return @void ;
#L0960a8.   v0:= Exception  @type object;
#L0960aa.   (@monitorexit v1)
#L0960ac.   throw v0;
  catch  [|any|] @[L096094..L0960a4] goto L0960a8;

   }
    procedure [|void|] [|java:io:PipedReader.connect|] ([|java:io:PipedReader|] v0 @type (this), [|java:io:PipedWriter|] v1 @type (object)) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.connect:(Ljava/io/PipedWriter;)V|] @Access PUBLIC {
      local temp ;
      
#L0960cc.   call temp:=  [|java:io:PipedWriter.connect|](v1, v0) @signature [|Ljava/io/PipedWriter;.connect:(Ljava/io/PipedReader;)V|] @classDescriptor [|java:io:PipedWriter|] @type virtual;
#L0960d2.   return @void ;

   }
    procedure [|void|] [|java:io:PipedReader.done|] ([|java:io:PipedReader|] v1 @type (this)) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.done:()V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0960e4.   (@monitorenter v1)
#L0960e6.   v0:= 1  @length 4;
#L0960e8.   v1.[|java:io:PipedReader.isClosed|]  := v0 @boolean;
#L0960ec.   call temp:=  [|java:lang:Object.notifyAll|](v1) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0960f2.   (@monitorexit v1)
#L0960f4.   return @void ;
#L0960f6.   v0:= Exception  @type object;
#L0960f8.   (@monitorexit v1)
#L0960fa.   throw v0;
  catch  [|any|] @[L0960e8..L0960f2] goto L0960f6;

   }
    procedure [|void|] [|java:io:PipedReader.establishConnection|] ([|java:io:PipedReader|] v2 @type (this)) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.establishConnection:()V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L096118.   (@monitorenter v2)
#L09611a.   v0:= v2.[|java:io:PipedReader.isConnected|]   @boolean;
#L09611e.   if v0 == 0 then goto L096138;
#L096122.   v0:= new [|java:io:IOException|];
#L096126.   v1:= "Pipe already connected" @type (object, string);
#L09612a.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L096130.   throw v0;
#L096132.   v0:= Exception  @type object;
#L096134.   (@monitorexit v2)
#L096136.   throw v0;
#L096138.   v0:= v2.[|java:io:PipedReader.isClosed|]   @boolean;
#L09613c.   if v0 == 0 then goto L096150;
#L096140.   v0:= new [|java:io:IOException|];
#L096144.   v1:= "Pipe is closed" @type (object, string);
#L096148.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09614e.   throw v0;
#L096150.   v0:= v2.[|java:io:PipedReader.buffer|]   @type object;
#L096154.   if v0 != 0 then goto L096164;
#L096158.   v0:= 1024  @length 16;
#L09615c.   v0:= new [|char|][v0];
#L096160.   v2.[|java:io:PipedReader.buffer|]  := v0 @type object;
#L096164.   v0:= 1  @length 4;
#L096166.   v2.[|java:io:PipedReader.isConnected|]  := v0 @boolean;
#L09616a.   (@monitorexit v2)
#L09616c.   return @void ;
  catch  [|any|] @[L09611a..L096132] goto L096132;
  catch  [|any|] @[L096138..L09616a] goto L096132;

   }
    procedure [|int|] [|java:io:PipedReader.read|] ([|java:io:PipedReader|] v4 @type (this)) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L096194.   v2:= 1  @length 4;
#L096196.   v3:= 0  @length 4;
#L096198.   v0:= new [|char|][v2];
#L09619c.   call temp:=  [|java:io:PipedReader.read|](v4, v0, v3, v2) @signature [|Ljava/io/PipedReader;.read:([CII)I|] @classDescriptor [|java:io:PipedReader|] @type virtual;
#L0961a2.   v1:= temp;
#L0961a4.   v2:= -1  @length 4;
#L0961a6.   if v1 == v2 then goto L0961ae;
#L0961aa.   v1:= v0[v3]  @char;
#L0961ae.   return v1;

   }
    procedure [|int|] [|java:io:PipedReader.read|] ([|java:io:PipedReader|] v7 @type (this), [|char|][] v8, [|int|] v9, [|int|] v10) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.read:([CII)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0961c0.   v1:= 0  @length 4;
#L0961c2.   v4:= -1  @length 4;
#L0961c4.   (@monitorenter v7)
#L0961c6.   v5:= v7.[|java:io:PipedReader.isConnected|]   @boolean;
#L0961ca.   if v5 != 0 then goto L0961e4;
#L0961ce.   v4:= new [|java:io:IOException|];
#L0961d2.   v5:= "Pipe not connected" @type (object, string);
#L0961d6.   call temp:=  [|java:io:IOException.<init>|](v4, v5) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0961dc.   throw v4;
#L0961de.   v4:= Exception  @type object;
#L0961e0.   (@monitorexit v7)
#L0961e2.   throw v4;
#L0961e4.   v5:= v7.[|java:io:PipedReader.buffer|]   @type object;
#L0961e8.   if v5 != 0 then goto L0961fc;
#L0961ec.   v4:= new [|java:io:IOException|];
#L0961f0.   v5:= "Pipe is closed" @type (object, string);
#L0961f4.   call temp:=  [|java:io:IOException.<init>|](v4, v5) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0961fa.   throw v4;
#L0961fc.   v5:= v8.length;
#L0961fe.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v5, v9, v10) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L096204.   if v10 != 0 then goto L09620c;
#L096208.   (@monitorexit v7)
#L09620a.   return v1;
#L09620c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L096212.   v5:= temp  @type object;
#L096214.   v7.[|java:io:PipedReader.lastReader|]  := v5 @type object;
#L096218.   v3:= 1  @length 4;
#L09621a.   v5:= v7.[|java:io:PipedReader.in|] ;
#L09621e.   if v5 != v4 then goto L096262;
#L096222.   v5:= v7.[|java:io:PipedReader.isClosed|]   @boolean;
#L096226.   if v5 == 0 then goto L09622e;
#L09622a.   v1:= v4;
#L09622c.   goto L096208;
#L09622e.   if v3 != 0 then goto L096330;
#L096232.   v5:= v7.[|java:io:PipedReader.lastWriter|]   @type object;
#L096236.   if v5 == 0 then goto L096330;
#L09623a.   v5:= v7.[|java:io:PipedReader.lastWriter|]   @type object;
#L09623e.   call temp:=  [|java:lang:Thread.isAlive|](v5) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L096244.   v5:= temp;
#L096246.   if v5 != 0 then goto L096330;
#L09624a.   v5:= new [|java:io:IOException|];
#L09624e.   v6:= "Pipe broken" @type (object, string);
#L096252.   call temp:=  [|java:io:IOException.<init>|](v5, v6) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L096258.   throw v5;
#L09625a.   v2:= Exception  @type object;
#L09625c.   call temp:=  [|libcore:io:IoUtils.throwInterruptedIoException|]() @signature [|Llibcore/io/IoUtils;.throwInterruptedIoException:()V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L096262.   v1:= 0  @length 4;
#L096264.   v5:= v7.[|java:io:PipedReader.out|] ;
#L096268.   v6:= v7.[|java:io:PipedReader.in|] ;
#L09626c.   if v5 < v6 then goto L0962d2;
#L096270.   v5:= v7.[|java:io:PipedReader.buffer|]   @type object;
#L096274.   v5:= v5.length;
#L096276.   v6:= v7.[|java:io:PipedReader.out|] ;
#L09627a.   v5:= v5 - v6  @type int;
#L09627c.   if v10 <= v5 then goto L096346;
#L096280.   v5:= v7.[|java:io:PipedReader.buffer|]   @type object;
#L096284.   v5:= v5.length;
#L096286.   v6:= v7.[|java:io:PipedReader.out|] ;
#L09628a.   v1:= v5 - v6  @type int;
#L09628e.   v5:= v7.[|java:io:PipedReader.buffer|]   @type object;
#L096292.   v6:= v7.[|java:io:PipedReader.out|] ;
#L096296.   call temp:=  [|java:lang:System.arraycopy|](v5, v6, v8, v9, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L09629c.   v5:= v7.[|java:io:PipedReader.out|] ;
#L0962a0.   v5:= v5 + v1  @type int;
#L0962a2.   v7.[|java:io:PipedReader.out|]  := v5;
#L0962a6.   v5:= v7.[|java:io:PipedReader.out|] ;
#L0962aa.   v6:= v7.[|java:io:PipedReader.buffer|]   @type object;
#L0962ae.   v6:= v6.length;
#L0962b0.   if v5 != v6 then goto L0962ba;
#L0962b4.   v5:= 0  @length 4;
#L0962b6.   v7.[|java:io:PipedReader.out|]  := v5;
#L0962ba.   v5:= v7.[|java:io:PipedReader.out|] ;
#L0962be.   v6:= v7.[|java:io:PipedReader.in|] ;
#L0962c2.   if v5 != v6 then goto L0962d2;
#L0962c6.   v5:= -1  @length 4;
#L0962c8.   v7.[|java:io:PipedReader.in|]  := v5;
#L0962cc.   v5:= 0  @length 4;
#L0962ce.   v7.[|java:io:PipedReader.out|]  := v5;
#L0962d2.   if v1 == v10 then goto L096208;
#L0962d6.   v5:= v7.[|java:io:PipedReader.in|] ;
#L0962da.   if v5 == v4 then goto L096208;
#L0962de.   v0:= v1;
#L0962e0.   v4:= v7.[|java:io:PipedReader.in|] ;
#L0962e4.   v5:= v7.[|java:io:PipedReader.out|] ;
#L0962e8.   v4:= v4 - v5  @type int;
#L0962ea.   v5:= v10 - v1  @type int;
#L0962ee.   if v4 <= v5 then goto L09634a;
#L0962f2.   v1:= v10 - v1  @type int;
#L0962f6.   v4:= v7.[|java:io:PipedReader.buffer|]   @type object;
#L0962fa.   v5:= v7.[|java:io:PipedReader.out|] ;
#L0962fe.   v6:= v9 + v0  @type int;
#L096302.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v8, v6, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L096308.   v4:= v7.[|java:io:PipedReader.out|] ;
#L09630c.   v4:= v4 + v1  @type int;
#L09630e.   v7.[|java:io:PipedReader.out|]  := v4;
#L096312.   v4:= v7.[|java:io:PipedReader.out|] ;
#L096316.   v5:= v7.[|java:io:PipedReader.in|] ;
#L09631a.   if v4 != v5 then goto L09632a;
#L09631e.   v4:= -1  @length 4;
#L096320.   v7.[|java:io:PipedReader.in|]  := v4;
#L096324.   v4:= 0  @length 4;
#L096326.   v7.[|java:io:PipedReader.out|]  := v4;
#L09632a.   v1:= v1 + v0  @type int;
#L09632c.   goto L096208;
#L096330.   v3:= 0  @length 4;
#L096332.   call temp:=  [|java:lang:Object.notifyAll|](v7) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L096338.   v5:= 1000  @length wide16;
#L09633c.   call temp:=  [|java:lang:Object.wait|](v7, v5, v6) @signature [|Ljava/lang/Object;.wait:(J)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L096342.   goto L09621a;
#L096346.   v1:= v10;
#L096348.   goto L09628e;
#L09634a.   v4:= v7.[|java:io:PipedReader.in|] ;
#L09634e.   v5:= v7.[|java:io:PipedReader.out|] ;
#L096352.   v1:= v4 - v5  @type int;
#L096356.   goto L0962f6;
  catch  [|any|] @[L0961c6..L0961de] goto L0961de;
  catch  [|any|] @[L0961e4..L096204] goto L0961de;
  catch  [|any|] @[L09620c..L096218] goto L0961de;
  catch  [|java:lang:InterruptedException|] @[L09621a..L09625a] goto L09625a;
  catch  [|any|] @[L09621a..L09625a] goto L0961de;
  catch  [|any|] @[L09625c..L09632a] goto L0961de;
  catch  [|java:lang:InterruptedException|] @[L096332..L096342] goto L09625a;
  catch  [|any|] @[L096332..L096342] goto L0961de;
  catch  [|any|] @[L09634a..L096352] goto L0961de;

   }
    procedure [|boolean|] [|java:io:PipedReader.ready|] ([|java:io:PipedReader|] v2 @type (this)) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.ready:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0963a8.   (@monitorenter v2)
#L0963aa.   v0:= v2.[|java:io:PipedReader.isConnected|]   @boolean;
#L0963ae.   if v0 != 0 then goto L0963c8;
#L0963b2.   v0:= new [|java:io:IOException|];
#L0963b6.   v1:= "Pipe not connected" @type (object, string);
#L0963ba.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0963c0.   throw v0;
#L0963c2.   v0:= Exception  @type object;
#L0963c4.   (@monitorexit v2)
#L0963c6.   throw v0;
#L0963c8.   v0:= v2.[|java:io:PipedReader.buffer|]   @type object;
#L0963cc.   if v0 != 0 then goto L0963e0;
#L0963d0.   v0:= new [|java:io:IOException|];
#L0963d4.   v1:= "Pipe is closed" @type (object, string);
#L0963d8.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0963de.   throw v0;
#L0963e0.   v0:= v2.[|java:io:PipedReader.in|] ;
#L0963e4.   v1:= -1  @length 4;
#L0963e6.   if v0 == v1 then goto L0963f0;
#L0963ea.   v0:= 1  @length 4;
#L0963ec.   (@monitorexit v2)
#L0963ee.   return v0;
#L0963f0.   v0:= 0  @length 4;
#L0963f2.   goto L0963ec;
  catch  [|any|] @[L0963aa..L0963c2] goto L0963c2;
  catch  [|any|] @[L0963c8..L0963e4] goto L0963c2;

   }
    procedure [|void|] [|java:io:PipedReader.receive|] ([|java:io:PipedReader|] v4 @type (this), [|char|] v5) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.receive:(C)V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L096418.   (@monitorenter v4)
#L09641a.   v1:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L09641e.   if v1 != 0 then goto L096438;
#L096422.   v1:= new [|java:io:IOException|];
#L096426.   v2:= "Pipe is closed" @type (object, string);
#L09642a.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L096430.   throw v1;
#L096432.   v1:= Exception  @type object;
#L096434.   (@monitorexit v4)
#L096436.   throw v1;
#L096438.   v1:= v4.[|java:io:PipedReader.lastReader|]   @type object;
#L09643c.   if v1 == 0 then goto L096460;
#L096440.   v1:= v4.[|java:io:PipedReader.lastReader|]   @type object;
#L096444.   call temp:=  [|java:lang:Thread.isAlive|](v1) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L09644a.   v1:= temp;
#L09644c.   if v1 != 0 then goto L096460;
#L096450.   v1:= new [|java:io:IOException|];
#L096454.   v2:= "Pipe broken" @type (object, string);
#L096458.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09645e.   throw v1;
#L096460.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L096466.   v1:= temp  @type object;
#L096468.   v4.[|java:io:PipedReader.lastWriter|]  := v1 @type object;
#L09646c.   v1:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L096470.   if v1 == 0 then goto L0964c0;
#L096474.   v1:= v4.[|java:io:PipedReader.out|] ;
#L096478.   v2:= v4.[|java:io:PipedReader.in|] ;
#L09647c.   if v1 != v2 then goto L0964c0;
#L096480.   call temp:=  [|java:lang:Object.notifyAll|](v4) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L096486.   v1:= 1000  @length wide16;
#L09648a.   call temp:=  [|java:lang:Object.wait|](v4, v1, v2) @signature [|Ljava/lang/Object;.wait:(J)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L096490.   v1:= v4.[|java:io:PipedReader.lastReader|]   @type object;
#L096494.   if v1 == 0 then goto L09646c;
#L096498.   v1:= v4.[|java:io:PipedReader.lastReader|]   @type object;
#L09649c.   call temp:=  [|java:lang:Thread.isAlive|](v1) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0964a2.   v1:= temp;
#L0964a4.   if v1 != 0 then goto L09646c;
#L0964a8.   v1:= new [|java:io:IOException|];
#L0964ac.   v2:= "Pipe broken" @type (object, string);
#L0964b0.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0964b6.   throw v1;
#L0964b8.   v0:= Exception  @type object;
#L0964ba.   call temp:=  [|libcore:io:IoUtils.throwInterruptedIoException|]() @signature [|Llibcore/io/IoUtils;.throwInterruptedIoException:()V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L0964c0.   v1:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L0964c4.   if v1 != 0 then goto L0964d8;
#L0964c8.   v1:= new [|java:io:IOException|];
#L0964cc.   v2:= "Pipe is closed" @type (object, string);
#L0964d0.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0964d6.   throw v1;
#L0964d8.   v1:= v4.[|java:io:PipedReader.in|] ;
#L0964dc.   v2:= -1  @length 4;
#L0964de.   if v1 != v2 then goto L0964e8;
#L0964e2.   v1:= 0  @length 4;
#L0964e4.   v4.[|java:io:PipedReader.in|]  := v1;
#L0964e8.   v1:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L0964ec.   v2:= v4.[|java:io:PipedReader.in|] ;
#L0964f0.   v3:= v2 + 1;
#L0964f4.   v4.[|java:io:PipedReader.in|]  := v3;
#L0964f8.   v1[v2]:= v5  @char;
#L0964fc.   v1:= v4.[|java:io:PipedReader.in|] ;
#L096500.   v2:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L096504.   v2:= v2.length;
#L096506.   if v1 != v2 then goto L096510;
#L09650a.   v1:= 0  @length 4;
#L09650c.   v4.[|java:io:PipedReader.in|]  := v1;
#L096510.   (@monitorexit v4)
#L096512.   return @void ;
  catch  [|any|] @[L09641a..L096432] goto L096432;
  catch  [|any|] @[L096438..L09646c] goto L096432;
  catch  [|java:lang:InterruptedException|] @[L09646c..L0964b8] goto L0964b8;
  catch  [|any|] @[L09646c..L0964b8] goto L096432;
  catch  [|any|] @[L0964ba..L096510] goto L096432;

   }
    procedure [|void|] [|java:io:PipedReader.receive|] ([|java:io:PipedReader|] v4 @type (this), [|char|][] v5, [|int|] v6, [|int|] v7) @owner [|java:io:PipedReader|] @signature [|Ljava/io/PipedReader;.receive:([CII)V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09654c.   (@monitorenter v4)
#L09654e.   v2:= v5.length;
#L096550.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v2, v6, v7) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L096556.   v2:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L09655a.   if v2 != 0 then goto L096574;
#L09655e.   v2:= new [|java:io:IOException|];
#L096562.   v3:= "Pipe is closed" @type (object, string);
#L096566.   call temp:=  [|java:io:IOException.<init>|](v2, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09656c.   throw v2;
#L09656e.   v2:= Exception  @type object;
#L096570.   (@monitorexit v4)
#L096572.   throw v2;
#L096574.   v2:= v4.[|java:io:PipedReader.lastReader|]   @type object;
#L096578.   if v2 == 0 then goto L09659c;
#L09657c.   v2:= v4.[|java:io:PipedReader.lastReader|]   @type object;
#L096580.   call temp:=  [|java:lang:Thread.isAlive|](v2) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L096586.   v2:= temp;
#L096588.   if v2 != 0 then goto L09659c;
#L09658c.   v2:= new [|java:io:IOException|];
#L096590.   v3:= "Pipe broken" @type (object, string);
#L096594.   call temp:=  [|java:io:IOException.<init>|](v2, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09659a.   throw v2;
#L09659c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0965a2.   v2:= temp  @type object;
#L0965a4.   v4.[|java:io:PipedReader.lastWriter|]  := v2 @type object;
#L0965a8.   if v7 <= 0 then goto L0966ba;
#L0965ac.   v2:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L0965b0.   if v2 == 0 then goto L096600;
#L0965b4.   v2:= v4.[|java:io:PipedReader.out|] ;
#L0965b8.   v3:= v4.[|java:io:PipedReader.in|] ;
#L0965bc.   if v2 != v3 then goto L096600;
#L0965c0.   call temp:=  [|java:lang:Object.notifyAll|](v4) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0965c6.   v2:= 1000  @length wide16;
#L0965ca.   call temp:=  [|java:lang:Object.wait|](v4, v2, v3) @signature [|Ljava/lang/Object;.wait:(J)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0965d0.   v2:= v4.[|java:io:PipedReader.lastReader|]   @type object;
#L0965d4.   if v2 == 0 then goto L0965ac;
#L0965d8.   v2:= v4.[|java:io:PipedReader.lastReader|]   @type object;
#L0965dc.   call temp:=  [|java:lang:Thread.isAlive|](v2) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0965e2.   v2:= temp;
#L0965e4.   if v2 != 0 then goto L0965ac;
#L0965e8.   v2:= new [|java:io:IOException|];
#L0965ec.   v3:= "Pipe broken" @type (object, string);
#L0965f0.   call temp:=  [|java:io:IOException.<init>|](v2, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0965f6.   throw v2;
#L0965f8.   v0:= Exception  @type object;
#L0965fa.   call temp:=  [|libcore:io:IoUtils.throwInterruptedIoException|]() @signature [|Llibcore/io/IoUtils;.throwInterruptedIoException:()V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L096600.   v2:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L096604.   if v2 != 0 then goto L096618;
#L096608.   v2:= new [|java:io:IOException|];
#L09660c.   v3:= "Pipe is closed" @type (object, string);
#L096610.   call temp:=  [|java:io:IOException.<init>|](v2, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L096616.   throw v2;
#L096618.   v2:= v4.[|java:io:PipedReader.in|] ;
#L09661c.   v3:= -1  @length 4;
#L09661e.   if v2 != v3 then goto L096628;
#L096622.   v2:= 0  @length 4;
#L096624.   v4.[|java:io:PipedReader.in|]  := v2;
#L096628.   v2:= v4.[|java:io:PipedReader.in|] ;
#L09662c.   v3:= v4.[|java:io:PipedReader.out|] ;
#L096630.   if v2 < v3 then goto L096678;
#L096634.   v2:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L096638.   v2:= v2.length;
#L09663a.   v3:= v4.[|java:io:PipedReader.in|] ;
#L09663e.   v1:= v2 - v3  @type int;
#L096642.   if v7 >= v1 then goto L096648;
#L096646.   v1:= v7;
#L096648.   v2:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L09664c.   v3:= v4.[|java:io:PipedReader.in|] ;
#L096650.   call temp:=  [|java:lang:System.arraycopy|](v5, v6, v2, v3, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L096656.   v6:= v6 + v1  @type int;
#L096658.   v7:= v7 - v1  @type int;
#L09665a.   v2:= v4.[|java:io:PipedReader.in|] ;
#L09665e.   v2:= v2 + v1  @type int;
#L096660.   v4.[|java:io:PipedReader.in|]  := v2;
#L096664.   v2:= v4.[|java:io:PipedReader.in|] ;
#L096668.   v3:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L09666c.   v3:= v3.length;
#L09666e.   if v2 != v3 then goto L096678;
#L096672.   v2:= 0  @length 4;
#L096674.   v4.[|java:io:PipedReader.in|]  := v2;
#L096678.   if v7 <= 0 then goto L0965a8;
#L09667c.   v2:= v4.[|java:io:PipedReader.in|] ;
#L096680.   v3:= v4.[|java:io:PipedReader.out|] ;
#L096684.   if v2 == v3 then goto L0965a8;
#L096688.   v2:= v4.[|java:io:PipedReader.out|] ;
#L09668c.   v3:= v4.[|java:io:PipedReader.in|] ;
#L096690.   v1:= v2 - v3  @type int;
#L096694.   if v7 >= v1 then goto L09669a;
#L096698.   v1:= v7;
#L09669a.   v2:= v4.[|java:io:PipedReader.buffer|]   @type object;
#L09669e.   v3:= v4.[|java:io:PipedReader.in|] ;
#L0966a2.   call temp:=  [|java:lang:System.arraycopy|](v5, v6, v2, v3, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0966a8.   v6:= v6 + v1  @type int;
#L0966aa.   v7:= v7 - v1  @type int;
#L0966ac.   v2:= v4.[|java:io:PipedReader.in|] ;
#L0966b0.   v2:= v2 + v1  @type int;
#L0966b2.   v4.[|java:io:PipedReader.in|]  := v2;
#L0966b6.   goto L0965a8;
#L0966ba.   (@monitorexit v4)
#L0966bc.   return @void ;
  catch  [|any|] @[L09654e..L09656e] goto L09656e;
  catch  [|any|] @[L096574..L0965a8] goto L09656e;
  catch  [|java:lang:InterruptedException|] @[L0965ac..L0965f8] goto L0965f8;
  catch  [|any|] @[L0965ac..L0965f8] goto L09656e;
  catch  [|any|] @[L0965fa..L0966b6] goto L09656e;

   }
record [|java:io:PipedWriter|]  @type class @AccessFlag PUBLIC  extends [|java:io:Writer|] {
      [|java:io:PipedReader|] [|java:io:PipedWriter.destination|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:PipedWriter.isClosed|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:PipedWriter.<init>|] ([|java:io:PipedWriter|] v0 @type (this)) @owner [|java:io:PipedWriter|] @signature [|Ljava/io/PipedWriter;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0966f8.   call temp:=  [|java:io:Writer.<init>|](v0) @signature [|Ljava/io/Writer;.<init>:()V|] @classDescriptor [|java:io:Writer|] @type direct;
#L0966fe.   return @void ;

   }
    procedure [|void|] [|java:io:PipedWriter.<init>|] ([|java:io:PipedWriter|] v0 @type (this), [|java:io:PipedReader|] v1 @type (object)) @owner [|java:io:PipedWriter|] @signature [|Ljava/io/PipedWriter;.<init>:(Ljava/io/PipedReader;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L096710.   call temp:=  [|java:io:Writer.<init>|](v0, v1) @signature [|Ljava/io/Writer;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:Writer|] @type direct;
#L096716.   call temp:=  [|java:io:PipedWriter.connect|](v0, v1) @signature [|Ljava/io/PipedWriter;.connect:(Ljava/io/PipedReader;)V|] @classDescriptor [|java:io:PipedWriter|] @type virtual;
#L09671c.   return @void ;

   }
    procedure [|void|] [|java:io:PipedWriter.close|] ([|java:io:PipedWriter|] v2 @type (this)) @owner [|java:io:PipedWriter|] @signature [|Ljava/io/PipedWriter;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L096730.   v0:= v2.[|java:io:PipedWriter.destination|]   @type object;
#L096734.   if v0 == 0 then goto L09674a;
#L096738.   call temp:=  [|java:io:PipedReader.done|](v0) @signature [|Ljava/io/PipedReader;.done:()V|] @classDescriptor [|java:io:PipedReader|] @type virtual;
#L09673e.   v1:= 1  @length 4;
#L096740.   v2.[|java:io:PipedWriter.isClosed|]  := v1 @boolean;
#L096744.   v1:= 0  @length 4;
#L096746.   v2.[|java:io:PipedWriter.destination|]  := v1 @type object;
#L09674a.   return @void ;

   }
    procedure [|void|] [|java:io:PipedWriter.connect|] ([|java:io:PipedWriter|] v2 @type (this), [|java:io:PipedReader|] v3 @type (object)) @owner [|java:io:PipedWriter|] @signature [|Ljava/io/PipedWriter;.connect:(Ljava/io/PipedReader;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09675c.   if v3 != 0 then goto L096770;
#L096760.   v0:= new [|java:lang:NullPointerException|];
#L096764.   v1:= "reader == null" @type (object, string);
#L096768.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L09676e.   throw v0;
#L096770.   (@monitorenter v3)
#L096772.   v0:= v2.[|java:io:PipedWriter.destination|]   @type object;
#L096776.   if v0 == 0 then goto L096790;
#L09677a.   v0:= new [|java:io:IOException|];
#L09677e.   v1:= "Pipe already connected" @type (object, string);
#L096782.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L096788.   throw v0;
#L09678a.   v0:= Exception  @type object;
#L09678c.   (@monitorexit v3)
#L09678e.   throw v0;
#L096790.   call temp:=  [|java:io:PipedReader.establishConnection|](v3) @signature [|Ljava/io/PipedReader;.establishConnection:()V|] @classDescriptor [|java:io:PipedReader|] @type virtual;
#L096796.   v2.[|java:io:PipedWriter.lock|]  := v3 @type object;
#L09679a.   v2.[|java:io:PipedWriter.destination|]  := v3 @type object;
#L09679e.   (@monitorexit v3)
#L0967a0.   return @void ;
  catch  [|any|] @[L096772..L09678e] goto L09678a;
  catch  [|any|] @[L096790..L0967a0] goto L09678a;

   }
    procedure [|void|] [|java:io:PipedWriter.flush|] ([|java:io:PipedWriter|] v3 @type (this)) @owner [|java:io:PipedWriter|] @signature [|Ljava/io/PipedWriter;.flush:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0967c8.   v0:= v3.[|java:io:PipedWriter.destination|]   @type object;
#L0967cc.   v1:= v3.[|java:io:PipedWriter.isClosed|]   @boolean;
#L0967d0.   if v1 == 0 then goto L0967e4;
#L0967d4.   v1:= new [|java:io:IOException|];
#L0967d8.   v2:= "Pipe is closed" @type (object, string);
#L0967dc.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0967e2.   throw v1;
#L0967e4.   if v0 != 0 then goto L0967ea;
#L0967e8.   return @void ;
#L0967ea.   (@monitorenter v0)
#L0967ec.   call temp:=  [|java:lang:Object.notifyAll|](v0) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0967f2.   (@monitorexit v0)
#L0967f4.   goto L0967e8;
#L0967f6.   v1:= Exception  @type object;
#L0967f8.   (@monitorexit v0)
#L0967fa.   throw v1;
  catch  [|any|] @[L0967ec..L0967fa] goto L0967f6;

   }
    procedure [|void|] [|java:io:PipedWriter.write|] ([|java:io:PipedWriter|] v3 @type (this), [|int|] v4) @owner [|java:io:PipedWriter|] @signature [|Ljava/io/PipedWriter;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L096818.   v0:= v3.[|java:io:PipedWriter.destination|]   @type object;
#L09681c.   if v0 != 0 then goto L096830;
#L096820.   v1:= new [|java:io:IOException|];
#L096824.   v2:= "Pipe not connected" @type (object, string);
#L096828.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09682e.   throw v1;
#L096830.   v1:= (char)v4  @type i2c;
#L096832.   call temp:=  [|java:io:PipedReader.receive|](v0, v1) @signature [|Ljava/io/PipedReader;.receive:(C)V|] @classDescriptor [|java:io:PipedReader|] @type virtual;
#L096838.   return @void ;

   }
    procedure [|void|] [|java:io:PipedWriter.write|] ([|java:io:PipedWriter|] v3 @type (this), [|char|][] v4, [|int|] v5, [|int|] v6) @owner [|java:io:PipedWriter|] @signature [|Ljava/io/PipedWriter;.write:([CII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09684c.   v0:= v3.[|java:io:PipedWriter.destination|]   @type object;
#L096850.   if v0 != 0 then goto L096864;
#L096854.   v1:= new [|java:io:IOException|];
#L096858.   v2:= "Pipe not connected" @type (object, string);
#L09685c.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L096862.   throw v1;
#L096864.   call temp:=  [|java:io:PipedReader.receive|](v0, v4, v5, v6) @signature [|Ljava/io/PipedReader;.receive:([CII)V|] @classDescriptor [|java:io:PipedReader|] @type virtual;
#L09686a.   return @void ;

   }
record [|java:io:PrintStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterOutputStream|], [|java:lang:Appendable|], [|java:io:Closeable|] {
      [|boolean|] [|java:io:PrintStream.autoFlush|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:io:PrintStream.encoding|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:PrintStream.ioError|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:PrintStream.<init>|] ([|java:io:PrintStream|] v1 @type (this), [|java:io:File|] v2 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/File;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09687c.   v0:= new [|java:io:FileOutputStream|];
#L096880.   call temp:=  [|java:io:FileOutputStream.<init>|](v0, v2) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L096886.   call temp:=  [|java:io:FilterOutputStream.<init>|](v1, v0) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L09688c.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.<init>|] ([|java:io:PrintStream|] v2 @type (this), [|java:io:File|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0968a0.   v0:= new [|java:io:FileOutputStream|];
#L0968a4.   call temp:=  [|java:io:FileOutputStream.<init>|](v0, v3) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L0968aa.   call temp:=  [|java:io:FilterOutputStream.<init>|](v2, v0) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L0968b0.   if v4 != 0 then goto L0968c4;
#L0968b4.   v0:= new [|java:lang:NullPointerException|];
#L0968b8.   v1:= "charsetName == null" @type (object, string);
#L0968bc.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0968c2.   throw v0;
#L0968c4.   call temp:=  [|java:nio:charset:Charset.isSupported|](v4) @signature [|Ljava/nio/charset/Charset;.isSupported:(Ljava/lang/String;)Z|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0968ca.   v0:= temp;
#L0968cc.   if v0 != 0 then goto L0968dc;
#L0968d0.   v0:= new [|java:io:UnsupportedEncodingException|];
#L0968d4.   call temp:=  [|java:io:UnsupportedEncodingException.<init>|](v0, v4) @signature [|Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:UnsupportedEncodingException|] @type direct;
#L0968da.   throw v0;
#L0968dc.   v2.[|java:io:PrintStream.encoding|]  := v4 @type object;
#L0968e0.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.<init>|] ([|java:io:PrintStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/OutputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0968f4.   call temp:=  [|java:io:FilterOutputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L0968fa.   if v3 != 0 then goto L09690e;
#L0968fe.   v0:= new [|java:lang:NullPointerException|];
#L096902.   v1:= "out == null" @type (object, string);
#L096906.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L09690c.   throw v0;
#L09690e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.<init>|] ([|java:io:PrintStream|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object), [|boolean|] v4) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/OutputStream;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L096920.   call temp:=  [|java:io:FilterOutputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L096926.   if v3 != 0 then goto L09693a;
#L09692a.   v0:= new [|java:lang:NullPointerException|];
#L09692e.   v1:= "out == null" @type (object, string);
#L096932.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L096938.   throw v0;
#L09693a.   v2.[|java:io:PrintStream.autoFlush|]  := v4 @boolean;
#L09693e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.<init>|] ([|java:io:PrintStream|] v3 @type (this), [|java:io:OutputStream|] v4 @type (object), [|boolean|] v5, [|java:lang:String|] v6 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/OutputStream;ZLjava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L096950.   call temp:=  [|java:io:FilterOutputStream.<init>|](v3, v4) @signature [|Ljava/io/FilterOutputStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:FilterOutputStream|] @type direct;
#L096956.   if v4 != 0 then goto L09696a;
#L09695a.   v1:= new [|java:lang:NullPointerException|];
#L09695e.   v2:= "out == null" @type (object, string);
#L096962.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L096968.   throw v1;
#L09696a.   if v6 != 0 then goto L09697e;
#L09696e.   v1:= new [|java:lang:NullPointerException|];
#L096972.   v2:= "charsetName == null" @type (object, string);
#L096976.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L09697c.   throw v1;
#L09697e.   v3.[|java:io:PrintStream.autoFlush|]  := v5 @boolean;
#L096982.   call temp:=  [|java:nio:charset:Charset.isSupported|](v6) @signature [|Ljava/nio/charset/Charset;.isSupported:(Ljava/lang/String;)Z|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L096988.   v1:= temp;
#L09698a.   if v1 != 0 then goto L0969a8;
#L09698e.   v1:= new [|java:io:UnsupportedEncodingException|];
#L096992.   call temp:=  [|java:io:UnsupportedEncodingException.<init>|](v1, v6) @signature [|Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:UnsupportedEncodingException|] @type direct;
#L096998.   throw v1;
#L09699a.   v0:= Exception  @type object;
#L09699c.   v1:= new [|java:io:UnsupportedEncodingException|];
#L0969a0.   call temp:=  [|java:io:UnsupportedEncodingException.<init>|](v1, v6) @signature [|Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:UnsupportedEncodingException|] @type direct;
#L0969a6.   throw v1;
#L0969a8.   v3.[|java:io:PrintStream.encoding|]  := v6 @type object;
#L0969ac.   return @void ;
  catch  [|java:nio:charset:IllegalCharsetNameException|] @[L096982..L09699a] goto L09699a;

   }
    procedure [|void|] [|java:io:PrintStream.<init>|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0969d0.   v0:= new [|java:io:File|];
#L0969d4.   call temp:=  [|java:io:File.<init>|](v0, v2) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L0969da.   call temp:=  [|java:io:PrintStream.<init>|](v1, v0) @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/File;)V|] @classDescriptor [|java:io:PrintStream|] @type direct;
#L0969e0.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.<init>|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0969f4.   v0:= new [|java:io:File|];
#L0969f8.   call temp:=  [|java:io:File.<init>|](v0, v2) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L0969fe.   call temp:=  [|java:io:PrintStream.<init>|](v1, v0, v3) @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type direct;
#L096a04.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.newline|] ([|java:io:PrintStream|] v1 @type (this)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.newline:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L096a18.   call temp:=  [|java:lang:System.lineSeparator|]() @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L096a1e.   v0:= temp  @type object;
#L096a20.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096a26.   return @void ;

   }
    procedure [|java:io:PrintStream|] [|java:io:PrintStream.append|] ([|java:io:PrintStream|] v0 @type (this), [|char|] v1) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.append:(C)Ljava/io/PrintStream;|] @Access PUBLIC {
      local temp ;
      
#L096a38.   call temp:=  [|java:io:PrintStream.print|](v0, v1) @signature [|Ljava/io/PrintStream;.print:(C)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096a3e.   return v0  @type object;

   }
    procedure [|java:io:PrintStream|] [|java:io:PrintStream.append|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.append:(Ljava/lang/CharSequence;)Ljava/io/PrintStream;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096a50.   if v2 != 0 then goto L096a60;
#L096a54.   v0:= "null" @type (object, string);
#L096a58.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096a5e.   return v1  @type object;
#L096a60.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L096a66.   v0:= temp  @type object;
#L096a68.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096a6e.   goto L096a5e;

   }
    procedure [|java:io:PrintStream|] [|java:io:PrintStream.append|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.append:(Ljava/lang/CharSequence;II)Ljava/io/PrintStream;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096a80.   if v2 != 0 then goto L096a88;
#L096a84.   v2:= "null" @type (object, string);
#L096a88.   call temp:=  [|java:lang:CharSequence.subSequence|](v2, v3, v4) @signature [|Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L096a8e.   v0:= temp  @type object;
#L096a90.   call temp:=  [|java:lang:Object.toString|](v0) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L096a96.   v0:= temp  @type object;
#L096a98.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096a9e.   return v1  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:PrintStream.append|] ([|java:io:PrintStream|] v1 @type (this), [|char|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.append:(C)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L096ab0.   call temp:=  [|java:io:PrintStream.append|](v1, v2) @signature [|Ljava/io/PrintStream;.append:(C)Ljava/io/PrintStream;|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096ab6.   v0:= temp  @type object;
#L096ab8.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:PrintStream.append|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L096acc.   call temp:=  [|java:io:PrintStream.append|](v1, v2) @signature [|Ljava/io/PrintStream;.append:(Ljava/lang/CharSequence;)Ljava/io/PrintStream;|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096ad2.   v0:= temp  @type object;
#L096ad4.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:PrintStream.append|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L096ae8.   call temp:=  [|java:io:PrintStream.append|](v1, v2, v3, v4) @signature [|Ljava/io/PrintStream;.append:(Ljava/lang/CharSequence;II)Ljava/io/PrintStream;|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096aee.   v0:= temp  @type object;
#L096af0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:PrintStream.checkError|] ([|java:io:PrintStream|] v2 @type (this)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.checkError:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L096b04.   v0:= v2.[|java:io:PrintStream.out|]   @type object;
#L096b08.   if v0 != 0 then goto L096b12;
#L096b0c.   v1:= v2.[|java:io:PrintStream.ioError|]   @boolean;
#L096b10.   return v1;
#L096b12.   call temp:=  [|java:io:PrintStream.flush|](v2) @signature [|Ljava/io/PrintStream;.flush:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096b18.   v1:= v2.[|java:io:PrintStream.ioError|]   @boolean;
#L096b1c.   if v1 != 0 then goto L096b2c;
#L096b20.   call temp:=  [|java:io:OutputStream.checkError|](v0) @signature [|Ljava/io/OutputStream;.checkError:()Z|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L096b26.   v1:= temp;
#L096b28.   if v1 == 0 then goto L096b30;
#L096b2c.   v1:= 1  @length 4;
#L096b2e.   goto L096b10;
#L096b30.   v1:= 0  @length 4;
#L096b32.   goto L096b10;

   }
    procedure [|void|] [|java:io:PrintStream.clearError|] ([|java:io:PrintStream|] v1 @type (this)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.clearError:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L096b44.   v0:= 0  @length 4;
#L096b46.   v1.[|java:io:PrintStream.ioError|]  := v0 @boolean;
#L096b4a.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.close|] ([|java:io:PrintStream|] v2 @type (this)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.close:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L096b5c.   (@monitorenter v2)
#L096b5e.   call temp:=  [|java:io:PrintStream.flush|](v2) @signature [|Ljava/io/PrintStream;.flush:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096b64.   v1:= v2.[|java:io:PrintStream.out|]   @type object;
#L096b68.   if v1 == 0 then goto L096b7c;
#L096b6c.   v1:= v2.[|java:io:PrintStream.out|]   @type object;
#L096b70.   call temp:=  [|java:io:OutputStream.close|](v1) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L096b76.   v1:= 0  @length 4;
#L096b78.   v2.[|java:io:PrintStream.out|]  := v1 @type object;
#L096b7c.   (@monitorexit v2)
#L096b7e.   return @void ;
#L096b80.   v0:= Exception  @type object;
#L096b82.   call temp:=  [|java:io:PrintStream.setError|](v2) @signature [|Ljava/io/PrintStream;.setError:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096b88.   goto L096b7c;
#L096b8a.   v1:= Exception  @type object;
#L096b8c.   (@monitorexit v2)
#L096b8e.   throw v1;
  catch  [|any|] @[L096b5e..L096b68] goto L096b8a;
  catch  [|java:io:IOException|] @[L096b6c..L096b7c] goto L096b80;
  catch  [|any|] @[L096b6c..L096b7c] goto L096b8a;
  catch  [|any|] @[L096b82..L096b88] goto L096b8a;

   }
    procedure [|void|] [|java:io:PrintStream.flush|] ([|java:io:PrintStream|] v1 @type (this)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.flush:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L096bc0.   (@monitorenter v1)
#L096bc2.   v0:= v1.[|java:io:PrintStream.out|]   @type object;
#L096bc6.   if v0 == 0 then goto L096bda;
#L096bca.   v0:= v1.[|java:io:PrintStream.out|]   @type object;
#L096bce.   call temp:=  [|java:io:OutputStream.flush|](v0) @signature [|Ljava/io/OutputStream;.flush:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L096bd4.   (@monitorexit v1)
#L096bd6.   return @void ;
#L096bd8.   v0:= Exception  @type object;
#L096bda.   call temp:=  [|java:io:PrintStream.setError|](v1) @signature [|Ljava/io/PrintStream;.setError:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096be0.   goto L096bd4;
#L096be2.   v0:= Exception  @type object;
#L096be4.   (@monitorexit v1)
#L096be6.   throw v0;
  catch  [|any|] @[L096bc2..L096bc6] goto L096be2;
  catch  [|java:io:IOException|] @[L096bca..L096bd4] goto L096bd8;
  catch  [|any|] @[L096bca..L096bd4] goto L096be2;
  catch  [|any|] @[L096bda..L096be0] goto L096be2;

   }
    procedure [|java:io:PrintStream|] [|java:io:PrintStream.format|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Object|][] v3 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
      
#L096c18.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L096c1e.   v0:= temp  @type object;
#L096c20.   call temp:=  [|java:io:PrintStream.format|](v1, v0, v2, v3) @signature [|Ljava/io/PrintStream;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096c26.   v0:= temp  @type object;
#L096c28.   return v0  @type object;

   }
    procedure [|java:io:PrintStream|] [|java:io:PrintStream.format|] ([|java:io:PrintStream|] v2 @type (this), [|java:util:Locale|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:Object|][] v5 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
        v1;
      
#L096c3c.   if v4 != 0 then goto L096c50;
#L096c40.   v0:= new [|java:lang:NullPointerException|];
#L096c44.   v1:= "format == null" @type (object, string);
#L096c48.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L096c4e.   throw v0;
#L096c50.   v0:= new [|java:util:Formatter|];
#L096c54.   call temp:=  [|java:util:Formatter.<init>|](v0, v2, v3) @signature [|Ljava/util/Formatter;.<init>:(Ljava/lang/Appendable;Ljava/util/Locale;)V|] @classDescriptor [|java:util:Formatter|] @type direct;
#L096c5a.   call temp:=  [|java:util:Formatter.format|](v0, v4, v5) @signature [|Ljava/util/Formatter;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;|] @classDescriptor [|java:util:Formatter|] @type virtual;
#L096c60.   return v2  @type object;

   }
    procedure [|void|] [|java:io:PrintStream.print|] ([|java:io:PrintStream|] v1 @type (this), [|char|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.print:(C)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096c74.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(C)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096c7a.   v0:= temp  @type object;
#L096c7c.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096c82.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.print|] ([|java:io:PrintStream|] v1 @type (this), [|double|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.print:(D)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096c94.   call temp:=  [|java:lang:String.valueOf|](v2, v3) @signature [|Ljava/lang/String;.valueOf:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096c9a.   v0:= temp  @type object;
#L096c9c.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096ca2.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.print|] ([|java:io:PrintStream|] v1 @type (this), [|float|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.print:(F)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096cb4.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(F)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096cba.   v0:= temp  @type object;
#L096cbc.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096cc2.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.print|] ([|java:io:PrintStream|] v1 @type (this), [|int|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.print:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096cd4.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096cda.   v0:= temp  @type object;
#L096cdc.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096ce2.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.print|] ([|java:io:PrintStream|] v1 @type (this), [|long|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.print:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096cf4.   call temp:=  [|java:lang:String.valueOf|](v2, v3) @signature [|Ljava/lang/String;.valueOf:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096cfa.   v0:= temp  @type object;
#L096cfc.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096d02.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.print|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096d14.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096d1a.   v0:= temp  @type object;
#L096d1c.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096d22.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.print|] ([|java:io:PrintStream|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L096d34.   (@monitorenter v2)
#L096d36.   v1:= v2.[|java:io:PrintStream.out|]   @type object;
#L096d3a.   if v1 != 0 then goto L096d48;
#L096d3e.   call temp:=  [|java:io:PrintStream.setError|](v2) @signature [|Ljava/io/PrintStream;.setError:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096d44.   (@monitorexit v2)
#L096d46.   return @void ;
#L096d48.   if v3 != 0 then goto L096d5e;
#L096d4c.   v1:= "null" @type (object, string);
#L096d50.   call temp:=  [|java:io:PrintStream.print|](v2, v1) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096d56.   goto L096d44;
#L096d58.   v1:= Exception  @type object;
#L096d5a.   (@monitorexit v2)
#L096d5c.   throw v1;
#L096d5e.   v1:= v2.[|java:io:PrintStream.encoding|]   @type object;
#L096d62.   if v1 != 0 then goto L096d80;
#L096d66.   call temp:=  [|java:lang:String.getBytes|](v3) @signature [|Ljava/lang/String;.getBytes:()[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L096d6c.   v1:= temp  @type object;
#L096d6e.   call temp:=  [|java:io:PrintStream.write|](v2, v1) @signature [|Ljava/io/PrintStream;.write:([B)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096d74.   goto L096d44;
#L096d76.   v0:= Exception  @type object;
#L096d78.   call temp:=  [|java:io:PrintStream.setError|](v2) @signature [|Ljava/io/PrintStream;.setError:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096d7e.   goto L096d44;
#L096d80.   v1:= v2.[|java:io:PrintStream.encoding|]   @type object;
#L096d84.   call temp:=  [|java:lang:String.getBytes|](v3, v1) @signature [|Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L096d8a.   v1:= temp  @type object;
#L096d8c.   call temp:=  [|java:io:PrintStream.write|](v2, v1) @signature [|Ljava/io/PrintStream;.write:([B)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096d92.   goto L096d44;
  catch  [|any|] @[L096d36..L096d44] goto L096d58;
  catch  [|any|] @[L096d4c..L096d56] goto L096d58;
  catch  [|java:io:IOException|] @[L096d5e..L096d74] goto L096d76;
  catch  [|any|] @[L096d5e..L096d74] goto L096d58;
  catch  [|any|] @[L096d78..L096d7e] goto L096d58;
  catch  [|java:io:IOException|] @[L096d80..L096d92] goto L096d76;
  catch  [|any|] @[L096d80..L096d92] goto L096d58;

   }
    procedure [|void|] [|java:io:PrintStream.print|] ([|java:io:PrintStream|] v1 @type (this), [|boolean|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.print:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096dd4.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(Z)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096dda.   v0:= temp  @type object;
#L096ddc.   call temp:=  [|java:io:PrintStream.print|](v1, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096de2.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.print|] ([|java:io:PrintStream|] v3 @type (this), [|char|][] v4) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.print:([C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L096df4.   v0:= new [|java:lang:String|];
#L096df8.   v1:= 0  @length 4;
#L096dfa.   v2:= v4.length;
#L096dfc.   call temp:=  [|java:lang:String.<init>|](v0, v4, v1, v2) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L096e02.   call temp:=  [|java:io:PrintStream.print|](v3, v0) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096e08.   return @void ;

   }
    procedure [|java:io:PrintStream|] [|java:io:PrintStream.printf|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:Object|][] v3 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.printf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
      
#L096e1c.   call temp:=  [|java:io:PrintStream.format|](v1, v2, v3) @signature [|Ljava/io/PrintStream;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096e22.   v0:= temp  @type object;
#L096e24.   return v0  @type object;

   }
    procedure [|java:io:PrintStream|] [|java:io:PrintStream.printf|] ([|java:io:PrintStream|] v1 @type (this), [|java:util:Locale|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|java:lang:Object|][] v4 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.printf:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
      
#L096e38.   call temp:=  [|java:io:PrintStream.format|](v1, v2, v3, v4) @signature [|Ljava/io/PrintStream;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096e3e.   v0:= temp  @type object;
#L096e40.   return v0  @type object;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v0 @type (this)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:()V|] @Access PUBLIC {
      local temp ;
      
#L096e54.   call temp:=  [|java:io:PrintStream.newline|](v0) @signature [|Ljava/io/PrintStream;.newline:()V|] @classDescriptor [|java:io:PrintStream|] @type direct;
#L096e5a.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v1 @type (this), [|char|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:(C)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096e6c.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(C)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096e72.   v0:= temp  @type object;
#L096e74.   call temp:=  [|java:io:PrintStream.println|](v1, v0) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096e7a.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v1 @type (this), [|double|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:(D)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096e8c.   call temp:=  [|java:lang:String.valueOf|](v2, v3) @signature [|Ljava/lang/String;.valueOf:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096e92.   v0:= temp  @type object;
#L096e94.   call temp:=  [|java:io:PrintStream.println|](v1, v0) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096e9a.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v1 @type (this), [|float|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:(F)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096eac.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(F)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096eb2.   v0:= temp  @type object;
#L096eb4.   call temp:=  [|java:io:PrintStream.println|](v1, v0) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096eba.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v1 @type (this), [|int|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096ecc.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096ed2.   v0:= temp  @type object;
#L096ed4.   call temp:=  [|java:io:PrintStream.println|](v1, v0) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096eda.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v1 @type (this), [|long|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096eec.   call temp:=  [|java:lang:String.valueOf|](v2, v3) @signature [|Ljava/lang/String;.valueOf:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096ef2.   v0:= temp  @type object;
#L096ef4.   call temp:=  [|java:io:PrintStream.println|](v1, v0) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096efa.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096f0c.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096f12.   v0:= temp  @type object;
#L096f14.   call temp:=  [|java:io:PrintStream.println|](v1, v0) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096f1a.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L096f2c.   (@monitorenter v1)
#L096f2e.   call temp:=  [|java:io:PrintStream.print|](v1, v2) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096f34.   call temp:=  [|java:io:PrintStream.newline|](v1) @signature [|Ljava/io/PrintStream;.newline:()V|] @classDescriptor [|java:io:PrintStream|] @type direct;
#L096f3a.   (@monitorexit v1)
#L096f3c.   return @void ;
#L096f3e.   v0:= Exception  @type object;
#L096f40.   (@monitorexit v1)
#L096f42.   throw v0;
  catch  [|any|] @[L096f2e..L096f3a] goto L096f3e;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v1 @type (this), [|boolean|] v2) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L096f60.   call temp:=  [|java:lang:String.valueOf|](v2) @signature [|Ljava/lang/String;.valueOf:(Z)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L096f66.   v0:= temp  @type object;
#L096f68.   call temp:=  [|java:io:PrintStream.println|](v1, v0) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096f6e.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.println|] ([|java:io:PrintStream|] v3 @type (this), [|char|][] v4) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.println:([C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L096f80.   v0:= new [|java:lang:String|];
#L096f84.   v1:= 0  @length 4;
#L096f86.   v2:= v4.length;
#L096f88.   call temp:=  [|java:lang:String.<init>|](v0, v4, v1, v2) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L096f8e.   call temp:=  [|java:io:PrintStream.println|](v3, v0) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096f94.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.setError|] ([|java:io:PrintStream|] v1 @type (this)) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.setError:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L096fa8.   v0:= 1  @length 4;
#L096faa.   v1.[|java:io:PrintStream.ioError|]  := v0 @boolean;
#L096fae.   return @void ;

   }
    procedure [|void|] [|java:io:PrintStream.write|] ([|java:io:PrintStream|] v4 @type (this), [|int|] v5) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.write:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L096fc0.   (@monitorenter v4)
#L096fc2.   v3:= v4.[|java:io:PrintStream.out|]   @type object;
#L096fc6.   if v3 != 0 then goto L096fd4;
#L096fca.   call temp:=  [|java:io:PrintStream.setError|](v4) @signature [|Ljava/io/PrintStream;.setError:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L096fd0.   (@monitorexit v4)
#L096fd2.   return @void ;
#L096fd4.   v3:= v4.[|java:io:PrintStream.out|]   @type object;
#L096fd8.   call temp:=  [|java:io:OutputStream.write|](v3, v5) @signature [|Ljava/io/OutputStream;.write:(I)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L096fde.   v0:= v5 ^& 255;
#L096fe2.   v3:= 10  @length 16;
#L096fe6.   if v0 == v3 then goto L096ff2;
#L096fea.   v3:= 21  @length 16;
#L096fee.   if v0 != v3 then goto L097018;
#L096ff2.   v2:= 1  @length 4;
#L096ff4.   v3:= v4.[|java:io:PrintStream.autoFlush|]   @boolean;
#L096ff8.   if v3 == 0 then goto L096fd0;
#L096ffc.   if v2 == 0 then goto L096fd0;
#L097000.   call temp:=  [|java:io:PrintStream.flush|](v4) @signature [|Ljava/io/PrintStream;.flush:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L097006.   goto L096fd0;
#L097008.   v1:= Exception  @type object;
#L09700a.   call temp:=  [|java:io:PrintStream.setError|](v4) @signature [|Ljava/io/PrintStream;.setError:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L097010.   goto L096fd0;
#L097012.   v3:= Exception  @type object;
#L097014.   (@monitorexit v4)
#L097016.   throw v3;
#L097018.   v2:= 0  @length 4;
#L09701a.   goto L096ff4;
  catch  [|any|] @[L096fc2..L096fd0] goto L097012;
  catch  [|java:io:IOException|] @[L096fd4..L097006] goto L097008;
  catch  [|any|] @[L096fd4..L097006] goto L097012;
  catch  [|any|] @[L09700a..L097010] goto L097012;

   }
    procedure [|void|] [|java:io:PrintStream.write|] ([|java:io:PrintStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:PrintStream|] @signature [|Ljava/io/PrintStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09704c.   v1:= v3.length;
#L09704e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L097054.   (@monitorenter v2)
#L097056.   v1:= v2.[|java:io:PrintStream.out|]   @type object;
#L09705a.   if v1 != 0 then goto L097068;
#L09705e.   call temp:=  [|java:io:PrintStream.setError|](v2) @signature [|Ljava/io/PrintStream;.setError:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L097064.   (@monitorexit v2)
#L097066.   return @void ;
#L097068.   v1:= v2.[|java:io:PrintStream.out|]   @type object;
#L09706c.   call temp:=  [|java:io:OutputStream.write|](v1, v3, v4, v5) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L097072.   v1:= v2.[|java:io:PrintStream.autoFlush|]   @boolean;
#L097076.   if v1 == 0 then goto L097080;
#L09707a.   call temp:=  [|java:io:PrintStream.flush|](v2) @signature [|Ljava/io/PrintStream;.flush:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L097080.   (@monitorexit v2)
#L097082.   goto L097066;
#L097084.   v1:= Exception  @type object;
#L097086.   (@monitorexit v2)
#L097088.   throw v1;
#L09708a.   v0:= Exception  @type object;
#L09708c.   call temp:=  [|java:io:PrintStream.setError|](v2) @signature [|Ljava/io/PrintStream;.setError:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L097092.   goto L097080;
  catch  [|any|] @[L097056..L097066] goto L097084;
  catch  [|java:io:IOException|] @[L097068..L097080] goto L09708a;
  catch  [|any|] @[L097068..L097080] goto L097084;
  catch  [|any|] @[L097080..L097088] goto L097084;
  catch  [|any|] @[L09708c..L097092] goto L097084;

   }
record [|java:io:PushbackInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterInputStream|] {
      [|byte|][] [|java:io:PushbackInputStream.buf|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:PushbackInputStream.pos|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:PushbackInputStream.<init>|] ([|java:io:PushbackInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0970cc.   v1:= 1  @length 4;
#L0970ce.   call temp:=  [|java:io:FilterInputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L0970d4.   if v3 != 0 then goto L0970e4;
#L0970d8.   v0:= 0  @length 4;
#L0970da.   v2.[|java:io:PushbackInputStream.buf|]  := v0 @type object;
#L0970de.   v2.[|java:io:PushbackInputStream.pos|]  := v1;
#L0970e2.   return @void ;
#L0970e4.   v0:= new [|byte|][v1];
#L0970e8.   goto L0970da;

   }
    procedure [|void|] [|java:io:PushbackInputStream.<init>|] ([|java:io:PushbackInputStream|] v2 @type (this), [|java:io:InputStream|] v3 @type (object), [|int|] v4) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.<init>:(Ljava/io/InputStream;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0970fc.   call temp:=  [|java:io:FilterInputStream.<init>|](v2, v3) @signature [|Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:FilterInputStream|] @type direct;
#L097102.   if v4 > 0 then goto L097116;
#L097106.   v0:= new [|java:lang:IllegalArgumentException|];
#L09710a.   v1:= "size <= 0" @type (object, string);
#L09710e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L097114.   throw v0;
#L097116.   if v3 != 0 then goto L097126;
#L09711a.   v0:= 0  @length 4;
#L09711c.   v2.[|java:io:PushbackInputStream.buf|]  := v0 @type object;
#L097120.   v2.[|java:io:PushbackInputStream.pos|]  := v4;
#L097124.   return @void ;
#L097126.   v0:= new [|byte|][v4];
#L09712a.   goto L09711c;

   }
    procedure [|java:io:IOException|] [|java:io:PushbackInputStream.streamClosed|] ([|java:io:PushbackInputStream|] v2 @type (this)) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.streamClosed:()Ljava/io/IOException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L09713c.   v0:= new [|java:io:IOException|];
#L097140.   v1:= "PushbackInputStream is closed" @type (object, string);
#L097144.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09714a.   throw v0;

   }
    procedure [|int|] [|java:io:PushbackInputStream.available|] ([|java:io:PushbackInputStream|] v2 @type (this)) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09715c.   v0:= v2.[|java:io:PushbackInputStream.buf|]   @type object;
#L097160.   if v0 != 0 then goto L097170;
#L097164.   v0:= new [|java:io:IOException|];
#L097168.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09716e.   throw v0;
#L097170.   v0:= v2.[|java:io:PushbackInputStream.buf|]   @type object;
#L097174.   v0:= v0.length;
#L097176.   v1:= v2.[|java:io:PushbackInputStream.pos|] ;
#L09717a.   v0:= v0 - v1  @type int;
#L09717c.   v1:= v2.[|java:io:PushbackInputStream.in|]   @type object;
#L097180.   call temp:=  [|java:io:InputStream.available|](v1) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L097186.   v1:= temp;
#L097188.   v0:= v0 + v1  @type int;
#L09718a.   return v0;

   }
    procedure [|void|] [|java:io:PushbackInputStream.close|] ([|java:io:PushbackInputStream|] v2 @type (this)) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09719c.   v1:= 0  @length 4;
#L09719e.   v0:= v2.[|java:io:PushbackInputStream.in|]   @type object;
#L0971a2.   if v0 == 0 then goto L0971b8;
#L0971a6.   v0:= v2.[|java:io:PushbackInputStream.in|]   @type object;
#L0971aa.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0971b0.   v2.[|java:io:PushbackInputStream.in|]  := v1 @type object;
#L0971b4.   v2.[|java:io:PushbackInputStream.buf|]  := v1 @type object;
#L0971b8.   return @void ;

   }
    procedure [|void|] [|java:io:PushbackInputStream.mark|] ([|java:io:PushbackInputStream|] v0 @type (this), [|int|] v1) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.mark:(I)V|] @Access PUBLIC {
      local temp ;
      
#L0971cc.   return @void ;

   }
    procedure [|boolean|] [|java:io:PushbackInputStream.markSupported|] ([|java:io:PushbackInputStream|] v1 @type (this)) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0971e0.   v0:= 0  @length 4;
#L0971e2.   return v0;

   }
    procedure [|int|] [|java:io:PushbackInputStream.read|] ([|java:io:PushbackInputStream|] v3 @type (this)) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0971f4.   v0:= v3.[|java:io:PushbackInputStream.buf|]   @type object;
#L0971f8.   if v0 != 0 then goto L097208;
#L0971fc.   v0:= new [|java:io:IOException|];
#L097200.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L097206.   throw v0;
#L097208.   v0:= v3.[|java:io:PushbackInputStream.pos|] ;
#L09720c.   v1:= v3.[|java:io:PushbackInputStream.buf|]   @type object;
#L097210.   v1:= v1.length;
#L097212.   if v0 >= v1 then goto L097230;
#L097216.   v0:= v3.[|java:io:PushbackInputStream.buf|]   @type object;
#L09721a.   v1:= v3.[|java:io:PushbackInputStream.pos|] ;
#L09721e.   v2:= v1 + 1;
#L097222.   v3.[|java:io:PushbackInputStream.pos|]  := v2;
#L097226.   v0:= v0[v1]  @byte;
#L09722a.   v0:= v0 ^& 255;
#L09722e.   return v0;
#L097230.   v0:= v3.[|java:io:PushbackInputStream.in|]   @type object;
#L097234.   call temp:=  [|java:io:InputStream.read|](v0) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09723a.   v0:= temp;
#L09723c.   goto L09722e;

   }
    procedure [|int|] [|java:io:PushbackInputStream.read|] ([|java:io:PushbackInputStream|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|int|] v9) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L097250.   v4:= v6.[|java:io:PushbackInputStream.buf|]   @type object;
#L097254.   if v4 != 0 then goto L097262;
#L097258.   call temp:=  [|java:io:PushbackInputStream.streamClosed|](v6) @signature [|Ljava/io/PushbackInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:PushbackInputStream|] @type direct;
#L09725e.   v4:= temp  @type object;
#L097260.   throw v4;
#L097262.   v4:= v7.length;
#L097264.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v4, v8, v9) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L09726a.   v0:= 0  @length 4;
#L09726c.   v1:= 0  @length 4;
#L09726e.   v3:= v8;
#L097270.   v4:= v6.[|java:io:PushbackInputStream.pos|] ;
#L097274.   v5:= v6.[|java:io:PushbackInputStream.buf|]   @type object;
#L097278.   v5:= v5.length;
#L09727a.   if v4 >= v5 then goto L0972ac;
#L09727e.   v4:= v6.[|java:io:PushbackInputStream.buf|]   @type object;
#L097282.   v4:= v4.length;
#L097284.   v5:= v6.[|java:io:PushbackInputStream.pos|] ;
#L097288.   v4:= v4 - v5  @type int;
#L09728a.   if v4 < v9 then goto L0972b2;
#L09728e.   v1:= v9;
#L097290.   v4:= v6.[|java:io:PushbackInputStream.buf|]   @type object;
#L097294.   v5:= v6.[|java:io:PushbackInputStream.pos|] ;
#L097298.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v7, v3, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L09729e.   v3:= v3 + v1  @type int;
#L0972a0.   v0:= v0 + v1  @type int;
#L0972a2.   v4:= v6.[|java:io:PushbackInputStream.pos|] ;
#L0972a6.   v4:= v4 + v1  @type int;
#L0972a8.   v6.[|java:io:PushbackInputStream.pos|]  := v4;
#L0972ac.   if v1 != v9 then goto L0972c2;
#L0972b0.   return v9;
#L0972b2.   v4:= v6.[|java:io:PushbackInputStream.buf|]   @type object;
#L0972b6.   v4:= v4.length;
#L0972b8.   v5:= v6.[|java:io:PushbackInputStream.pos|] ;
#L0972bc.   v1:= v4 - v5  @type int;
#L0972c0.   goto L097290;
#L0972c2.   v4:= v6.[|java:io:PushbackInputStream.in|]   @type object;
#L0972c6.   v5:= v9 - v0  @type int;
#L0972ca.   call temp:=  [|java:io:InputStream.read|](v4, v7, v3, v5) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0972d0.   v2:= temp;
#L0972d2.   if v2 <= 0 then goto L0972dc;
#L0972d6.   v9:= v2 + v0  @type int;
#L0972da.   goto L0972b0;
#L0972dc.   if v0 != 0 then goto L0972e4;
#L0972e0.   v9:= v2;
#L0972e2.   goto L0972b0;
#L0972e4.   v9:= v0;
#L0972e6.   goto L0972b0;

   }
    procedure [|void|] [|java:io:PushbackInputStream.reset|] ([|java:io:PushbackInputStream|] v1 @type (this)) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0972f8.   v0:= new [|java:io:IOException|];
#L0972fc.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L097302.   throw v0;

   }
    procedure [|long|] [|java:io:PushbackInputStream.skip|] ([|java:io:PushbackInputStream|] v6 @type (this), [|long|] v7) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L097314.   v1:= 0  @length wide16;
#L097318.   v3:= v6.[|java:io:PushbackInputStream.in|]   @type object;
#L09731c.   if v3 != 0 then goto L09732a;
#L097320.   call temp:=  [|java:io:PushbackInputStream.streamClosed|](v6) @signature [|Ljava/io/PushbackInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:PushbackInputStream|] @type direct;
#L097326.   v1:= temp  @type object;
#L097328.   throw v1;
#L09732a.   v3:= cmp(v7,v1);
#L09732e.   if v3 > 0 then goto L097334;
#L097332.   return v1  @type wide;
#L097334.   v0:= 0  @length 4;
#L097336.   v1:= v6.[|java:io:PushbackInputStream.pos|] ;
#L09733a.   v2:= v6.[|java:io:PushbackInputStream.buf|]   @type object;
#L09733e.   v2:= v2.length;
#L097340.   if v1 >= v2 then goto L09736c;
#L097344.   v3:= (long)v0  @type i2l;
#L097346.   v1:= v6.[|java:io:PushbackInputStream.buf|]   @type object;
#L09734a.   v1:= v1.length;
#L09734c.   v2:= v6.[|java:io:PushbackInputStream.pos|] ;
#L097350.   v1:= v1 - v2  @type int;
#L097352.   v1:= (long)v1  @type i2l;
#L097354.   v1:= cmp(v7,v1);
#L097358.   if v1 >= 0 then goto L097392;
#L09735c.   v1:= v7  @type wide;
#L09735e.   v1:= v1 + v3  @type long;
#L097360.   v0:= (int)v1  @type l2i;
#L097362.   v1:= v6.[|java:io:PushbackInputStream.pos|] ;
#L097366.   v1:= v1 + v0  @type int;
#L097368.   v6.[|java:io:PushbackInputStream.pos|]  := v1;
#L09736c.   v1:= (long)v0  @type i2l;
#L09736e.   v1:= cmp(v1,v7);
#L097372.   if v1 >= 0 then goto L09738e;
#L097376.   v1:= (long)v0  @type i2l;
#L097378.   v3:= v6.[|java:io:PushbackInputStream.in|]   @type object;
#L09737c.   v4:= (long)v0  @type i2l;
#L09737e.   v4:= v7 - v4  @type long;
#L097382.   call temp:=  [|java:io:InputStream.skip|](v3, v4, v5) @signature [|Ljava/io/InputStream;.skip:(J)J|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L097388.   v3:= temp  @type wide;
#L09738a.   v1:= v1 + v3  @type long;
#L09738c.   v0:= (int)v1  @type l2i;
#L09738e.   v1:= (long)v0  @type i2l;
#L097390.   goto L097332;
#L097392.   v1:= v6.[|java:io:PushbackInputStream.buf|]   @type object;
#L097396.   v1:= v1.length;
#L097398.   v2:= v6.[|java:io:PushbackInputStream.pos|] ;
#L09739c.   v1:= v1 - v2  @type int;
#L09739e.   v1:= (long)v1  @type i2l;
#L0973a0.   goto L09735e;

   }
    procedure [|void|] [|java:io:PushbackInputStream.unread|] ([|java:io:PushbackInputStream|] v3 @type (this), [|int|] v4) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.unread:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0973b4.   v0:= v3.[|java:io:PushbackInputStream.buf|]   @type object;
#L0973b8.   if v0 != 0 then goto L0973c8;
#L0973bc.   v0:= new [|java:io:IOException|];
#L0973c0.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0973c6.   throw v0;
#L0973c8.   v0:= v3.[|java:io:PushbackInputStream.pos|] ;
#L0973cc.   if v0 != 0 then goto L0973e0;
#L0973d0.   v0:= new [|java:io:IOException|];
#L0973d4.   v1:= "Pushback buffer full" @type (object, string);
#L0973d8.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0973de.   throw v0;
#L0973e0.   v0:= v3.[|java:io:PushbackInputStream.buf|]   @type object;
#L0973e4.   v1:= v3.[|java:io:PushbackInputStream.pos|] ;
#L0973e8.   v1:= v1 + -1;
#L0973ec.   v3.[|java:io:PushbackInputStream.pos|]  := v1;
#L0973f0.   v2:= (byte)v4  @type i2b;
#L0973f2.   v0[v1]:= v2  @byte;
#L0973f6.   return @void ;

   }
    procedure [|void|] [|java:io:PushbackInputStream.unread|] ([|java:io:PushbackInputStream|] v2 @type (this), [|byte|][] v3) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.unread:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L097408.   v0:= 0  @length 4;
#L09740a.   v1:= v3.length;
#L09740c.   call temp:=  [|java:io:PushbackInputStream.unread|](v2, v3, v0, v1) @signature [|Ljava/io/PushbackInputStream;.unread:([BII)V|] @classDescriptor [|java:io:PushbackInputStream|] @type virtual;
#L097412.   return @void ;

   }
    procedure [|void|] [|java:io:PushbackInputStream.unread|] ([|java:io:PushbackInputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:PushbackInputStream|] @signature [|Ljava/io/PushbackInputStream;.unread:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L097424.   v0:= v2.[|java:io:PushbackInputStream.pos|] ;
#L097428.   if v5 <= v0 then goto L09743c;
#L09742c.   v0:= new [|java:io:IOException|];
#L097430.   v1:= "Pushback buffer full" @type (object, string);
#L097434.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09743a.   throw v0;
#L09743c.   v0:= v3.length;
#L09743e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L097444.   v0:= v2.[|java:io:PushbackInputStream.buf|]   @type object;
#L097448.   if v0 != 0 then goto L097456;
#L09744c.   call temp:=  [|java:io:PushbackInputStream.streamClosed|](v2) @signature [|Ljava/io/PushbackInputStream;.streamClosed:()Ljava/io/IOException;|] @classDescriptor [|java:io:PushbackInputStream|] @type direct;
#L097452.   v0:= temp  @type object;
#L097454.   throw v0;
#L097456.   v0:= v2.[|java:io:PushbackInputStream.buf|]   @type object;
#L09745a.   v1:= v2.[|java:io:PushbackInputStream.pos|] ;
#L09745e.   v1:= v1 - v5  @type int;
#L097460.   call temp:=  [|java:lang:System.arraycopy|](v3, v4, v0, v1, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L097466.   v0:= v2.[|java:io:PushbackInputStream.pos|] ;
#L09746a.   v0:= v0 - v5  @type int;
#L09746c.   v2.[|java:io:PushbackInputStream.pos|]  := v0;
#L097470.   return @void ;

   }
record [|java:io:PushbackReader|]  @type class @AccessFlag PUBLIC  extends [|java:io:FilterReader|] {
      [|char|][] [|java:io:PushbackReader.buf|]    @AccessFlag ;
      [|int|] [|java:io:PushbackReader.pos|]    @AccessFlag ;
   }
    procedure [|void|] [|java:io:PushbackReader.<init>|] ([|java:io:PushbackReader|] v2 @type (this), [|java:io:Reader|] v3 @type (object)) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.<init>:(Ljava/io/Reader;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L097484.   v1:= 1  @length 4;
#L097486.   call temp:=  [|java:io:FilterReader.<init>|](v2, v3) @signature [|Ljava/io/FilterReader;.<init>:(Ljava/io/Reader;)V|] @classDescriptor [|java:io:FilterReader|] @type direct;
#L09748c.   v0:= new [|char|][v1];
#L097490.   v2.[|java:io:PushbackReader.buf|]  := v0 @type object;
#L097494.   v2.[|java:io:PushbackReader.pos|]  := v1;
#L097498.   return @void ;

   }
    procedure [|void|] [|java:io:PushbackReader.<init>|] ([|java:io:PushbackReader|] v2 @type (this), [|java:io:Reader|] v3 @type (object), [|int|] v4) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.<init>:(Ljava/io/Reader;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0974ac.   call temp:=  [|java:io:FilterReader.<init>|](v2, v3) @signature [|Ljava/io/FilterReader;.<init>:(Ljava/io/Reader;)V|] @classDescriptor [|java:io:FilterReader|] @type direct;
#L0974b2.   if v4 > 0 then goto L0974c6;
#L0974b6.   v0:= new [|java:lang:IllegalArgumentException|];
#L0974ba.   v1:= "size <= 0" @type (object, string);
#L0974be.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0974c4.   throw v0;
#L0974c6.   v0:= new [|char|][v4];
#L0974ca.   v2.[|java:io:PushbackReader.buf|]  := v0 @type object;
#L0974ce.   v2.[|java:io:PushbackReader.pos|]  := v4;
#L0974d2.   return @void ;

   }
    procedure [|void|] [|java:io:PushbackReader.checkNotClosed|] ([|java:io:PushbackReader|] v2 @type (this)) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.checkNotClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0974e4.   v0:= v2.[|java:io:PushbackReader.buf|]   @type object;
#L0974e8.   if v0 != 0 then goto L0974fc;
#L0974ec.   v0:= new [|java:io:IOException|];
#L0974f0.   v1:= "PushbackReader is closed" @type (object, string);
#L0974f4.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0974fa.   throw v0;
#L0974fc.   return @void ;

   }
    procedure [|void|] [|java:io:PushbackReader.close|] ([|java:io:PushbackReader|] v2 @type (this)) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L097510.   v1:= v2.[|java:io:PushbackReader.lock|]   @type object;
#L097514.   (@monitorenter v1)
#L097516.   v0:= 0  @length 4;
#L097518.   v2.[|java:io:PushbackReader.buf|]  := v0 @type object;
#L09751c.   v0:= v2.[|java:io:PushbackReader.in|]   @type object;
#L097520.   call temp:=  [|java:io:Reader.close|](v0) @signature [|Ljava/io/Reader;.close:()V|] @classDescriptor [|java:io:Reader|] @type virtual;
#L097526.   (@monitorexit v1)
#L097528.   return @void ;
#L09752a.   v0:= Exception  @type object;
#L09752c.   (@monitorexit v1)
#L09752e.   throw v0;
  catch  [|any|] @[L097518..L09752e] goto L09752a;

   }
    procedure [|void|] [|java:io:PushbackReader.mark|] ([|java:io:PushbackReader|] v2 @type (this), [|int|] v3) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.mark:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09754c.   v0:= new [|java:io:IOException|];
#L097550.   v1:= "mark/reset not supported" @type (object, string);
#L097554.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09755a.   throw v0;

   }
    procedure [|boolean|] [|java:io:PushbackReader.markSupported|] ([|java:io:PushbackReader|] v1 @type (this)) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09756c.   v0:= 0  @length 4;
#L09756e.   return v0;

   }
    procedure [|int|] [|java:io:PushbackReader.read|] ([|java:io:PushbackReader|] v4 @type (this)) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L097580.   v1:= v4.[|java:io:PushbackReader.lock|]   @type object;
#L097584.   (@monitorenter v1)
#L097586.   call temp:=  [|java:io:PushbackReader.checkNotClosed|](v4) @signature [|Ljava/io/PushbackReader;.checkNotClosed:()V|] @classDescriptor [|java:io:PushbackReader|] @type direct;
#L09758c.   v0:= v4.[|java:io:PushbackReader.pos|] ;
#L097590.   v2:= v4.[|java:io:PushbackReader.buf|]   @type object;
#L097594.   v2:= v2.length;
#L097596.   if v0 >= v2 then goto L0975b2;
#L09759a.   v0:= v4.[|java:io:PushbackReader.buf|]   @type object;
#L09759e.   v2:= v4.[|java:io:PushbackReader.pos|] ;
#L0975a2.   v3:= v2 + 1;
#L0975a6.   v4.[|java:io:PushbackReader.pos|]  := v3;
#L0975aa.   v0:= v0[v2]  @char;
#L0975ae.   (@monitorexit v1)
#L0975b0.   return v0;
#L0975b2.   v0:= v4.[|java:io:PushbackReader.in|]   @type object;
#L0975b6.   call temp:=  [|java:io:Reader.read|](v0) @signature [|Ljava/io/Reader;.read:()I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L0975bc.   v0:= temp;
#L0975be.   (@monitorexit v1)
#L0975c0.   goto L0975b0;
#L0975c2.   v0:= Exception  @type object;
#L0975c4.   (@monitorexit v1)
#L0975c6.   throw v0;
  catch  [|any|] @[L097586..L0975c6] goto L0975c2;

   }
    procedure [|int|] [|java:io:PushbackReader.read|] ([|java:io:PushbackReader|] v7 @type (this), [|char|][] v8, [|int|] v9, [|int|] v10) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.read:([CII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0975e4.   v5:= v7.[|java:io:PushbackReader.lock|]   @type object;
#L0975e8.   (@monitorenter v5)
#L0975ea.   call temp:=  [|java:io:PushbackReader.checkNotClosed|](v7) @signature [|Ljava/io/PushbackReader;.checkNotClosed:()V|] @classDescriptor [|java:io:PushbackReader|] @type direct;
#L0975f0.   v4:= v8.length;
#L0975f2.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v4, v9, v10) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0975f8.   v0:= 0  @length 4;
#L0975fa.   v1:= 0  @length 4;
#L0975fc.   v3:= v9;
#L0975fe.   v4:= v7.[|java:io:PushbackReader.pos|] ;
#L097602.   v6:= v7.[|java:io:PushbackReader.buf|]   @type object;
#L097606.   v6:= v6.length;
#L097608.   if v4 >= v6 then goto L09763a;
#L09760c.   v4:= v7.[|java:io:PushbackReader.buf|]   @type object;
#L097610.   v4:= v4.length;
#L097612.   v6:= v7.[|java:io:PushbackReader.pos|] ;
#L097616.   v4:= v4 - v6  @type int;
#L097618.   if v4 < v10 then goto L097642;
#L09761c.   v1:= v10;
#L09761e.   v4:= v7.[|java:io:PushbackReader.buf|]   @type object;
#L097622.   v6:= v7.[|java:io:PushbackReader.pos|] ;
#L097626.   call temp:=  [|java:lang:System.arraycopy|](v4, v6, v8, v3, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L09762c.   v3:= v3 + v1  @type int;
#L09762e.   v0:= v0 + v1  @type int;
#L097630.   v4:= v7.[|java:io:PushbackReader.pos|] ;
#L097634.   v4:= v4 + v1  @type int;
#L097636.   v7.[|java:io:PushbackReader.pos|]  := v4;
#L09763a.   if v1 != v10 then goto L097652;
#L09763e.   (@monitorexit v5)
#L097640.   return v10;
#L097642.   v4:= v7.[|java:io:PushbackReader.buf|]   @type object;
#L097646.   v4:= v4.length;
#L097648.   v6:= v7.[|java:io:PushbackReader.pos|] ;
#L09764c.   v1:= v4 - v6  @type int;
#L097650.   goto L09761e;
#L097652.   v4:= v7.[|java:io:PushbackReader.in|]   @type object;
#L097656.   v6:= v10 - v0  @type int;
#L09765a.   call temp:=  [|java:io:Reader.read|](v4, v8, v3, v6) @signature [|Ljava/io/Reader;.read:([CII)I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L097660.   v2:= temp;
#L097662.   if v2 <= 0 then goto L097674;
#L097666.   v10:= v2 + v0  @type int;
#L09766a.   (@monitorexit v5)
#L09766c.   goto L097640;
#L09766e.   v4:= Exception  @type object;
#L097670.   (@monitorexit v5)
#L097672.   throw v4;
#L097674.   if v0 != 0 then goto L09767e;
#L097678.   (@monitorexit v5)
#L09767a.   v10:= v2;
#L09767c.   goto L097640;
#L09767e.   (@monitorexit v5)
#L097680.   v10:= v0;
#L097682.   goto L097640;
  catch  [|any|] @[L0975ea..L097672] goto L09766e;
  catch  [|any|] @[L097678..L097680] goto L09766e;

   }
    procedure [|boolean|] [|java:io:PushbackReader.ready|] ([|java:io:PushbackReader|] v3 @type (this)) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.ready:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0976a8.   v1:= v3.[|java:io:PushbackReader.lock|]   @type object;
#L0976ac.   (@monitorenter v1)
#L0976ae.   v0:= v3.[|java:io:PushbackReader.buf|]   @type object;
#L0976b2.   if v0 != 0 then goto L0976cc;
#L0976b6.   v0:= new [|java:io:IOException|];
#L0976ba.   v2:= "Reader is closed" @type (object, string);
#L0976be.   call temp:=  [|java:io:IOException.<init>|](v0, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0976c4.   throw v0;
#L0976c6.   v0:= Exception  @type object;
#L0976c8.   (@monitorexit v1)
#L0976ca.   throw v0;
#L0976cc.   v0:= v3.[|java:io:PushbackReader.buf|]   @type object;
#L0976d0.   v0:= v0.length;
#L0976d2.   v2:= v3.[|java:io:PushbackReader.pos|] ;
#L0976d6.   v0:= v0 - v2  @type int;
#L0976d8.   if v0 > 0 then goto L0976ec;
#L0976dc.   v0:= v3.[|java:io:PushbackReader.in|]   @type object;
#L0976e0.   call temp:=  [|java:io:Reader.ready|](v0) @signature [|Ljava/io/Reader;.ready:()Z|] @classDescriptor [|java:io:Reader|] @type virtual;
#L0976e6.   v0:= temp;
#L0976e8.   if v0 == 0 then goto L0976f2;
#L0976ec.   v0:= 1  @length 4;
#L0976ee.   (@monitorexit v1)
#L0976f0.   return v0;
#L0976f2.   v0:= 0  @length 4;
#L0976f4.   goto L0976ee;
  catch  [|any|] @[L0976ae..L0976ca] goto L0976c6;
  catch  [|any|] @[L0976cc..L0976f0] goto L0976c6;

   }
    procedure [|void|] [|java:io:PushbackReader.reset|] ([|java:io:PushbackReader|] v2 @type (this)) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L09771c.   v0:= new [|java:io:IOException|];
#L097720.   v1:= "mark/reset not supported" @type (object, string);
#L097724.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L09772a.   throw v0;

   }
    procedure [|long|] [|java:io:PushbackReader.skip|] ([|java:io:PushbackReader|] v10 @type (this), [|long|] v11) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L09773c.   v5:= 0  @length wide16;
#L097740.   v7:= cmp(v11,v5);
#L097744.   if v7 >= 0 then goto L09777a;
#L097748.   v5:= new [|java:lang:IllegalArgumentException|];
#L09774c.   v6:= new [|java:lang:StringBuilder|];
#L097750.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L097756.   v7:= "charCount < 0: " @type (object, string);
#L09775a.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097760.   v6:= temp  @type object;
#L097762.   call temp:=  [|java:lang:StringBuilder.append|](v6, v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097768.   v6:= temp  @type object;
#L09776a.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097770.   v6:= temp  @type object;
#L097772.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5, v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L097778.   throw v5;
#L09777a.   v7:= v10.[|java:io:PushbackReader.lock|]   @type object;
#L09777e.   (@monitorenter v7)
#L097780.   call temp:=  [|java:io:PushbackReader.checkNotClosed|](v10) @signature [|Ljava/io/PushbackReader;.checkNotClosed:()V|] @classDescriptor [|java:io:PushbackReader|] @type direct;
#L097786.   v8:= cmp(v11,v5);
#L09778a.   if v8 != 0 then goto L097794;
#L09778e.   (@monitorexit v7)
#L097790.   v11:= v5  @type wide;
#L097792.   return v11  @type wide;
#L097794.   v8:= v10.[|java:io:PushbackReader.buf|]   @type object;
#L097798.   v8:= v8.length;
#L09779a.   v9:= v10.[|java:io:PushbackReader.pos|] ;
#L09779e.   v0:= v8 - v9  @type int;
#L0977a2.   if v0 <= 0 then goto L0977ec;
#L0977a6.   v8:= (long)v0  @type i2l;
#L0977a8.   v3:= v11 - v8  @type long;
#L0977ac.   v5:= cmp(v3,v5);
#L0977b0.   if v5 > 0 then goto L0977cc;
#L0977b4.   v5:= v10.[|java:io:PushbackReader.pos|] ;
#L0977b8.   v5:= (long)v5  @type i2l;
#L0977ba.   v5:= v5 + v11  @type long;
#L0977bc.   v5:= (int)v5  @type l2i;
#L0977be.   v10.[|java:io:PushbackReader.pos|]  := v5;
#L0977c2.   (@monitorexit v7)
#L0977c4.   goto L097792;
#L0977c6.   v5:= Exception  @type object;
#L0977c8.   (@monitorexit v7)
#L0977ca.   throw v5;
#L0977cc.   v5:= v10.[|java:io:PushbackReader.pos|] ;
#L0977d0.   v5:= v5 + v0  @type int;
#L0977d2.   v10.[|java:io:PushbackReader.pos|]  := v5;
#L0977d6.   v5:= v10.[|java:io:PushbackReader.in|]   @type object;
#L0977da.   call temp:=  [|java:io:Reader.skip|](v5, v3, v4) @signature [|Ljava/io/Reader;.skip:(J)J|] @classDescriptor [|java:io:Reader|] @type virtual;
#L0977e0.   v1:= temp  @type wide;
#L0977e2.   v5:= (long)v0  @type i2l;
#L0977e4.   v11:= v1 + v5  @type long;
#L0977e8.   (@monitorexit v7)
#L0977ea.   goto L097792;
#L0977ec.   v5:= v10.[|java:io:PushbackReader.in|]   @type object;
#L0977f0.   call temp:=  [|java:io:Reader.skip|](v5, v11, v12) @signature [|Ljava/io/Reader;.skip:(J)J|] @classDescriptor [|java:io:Reader|] @type virtual;
#L0977f6.   v1:= temp  @type wide;
#L0977f8.   goto L0977e2;
  catch  [|any|] @[L097780..L0977ca] goto L0977c6;
  catch  [|any|] @[L0977cc..L0977f6] goto L0977c6;

   }
    procedure [|void|] [|java:io:PushbackReader.unread|] ([|java:io:PushbackReader|] v4 @type (this), [|int|] v5) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.unread:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L097820.   v1:= v4.[|java:io:PushbackReader.lock|]   @type object;
#L097824.   (@monitorenter v1)
#L097826.   call temp:=  [|java:io:PushbackReader.checkNotClosed|](v4) @signature [|Ljava/io/PushbackReader;.checkNotClosed:()V|] @classDescriptor [|java:io:PushbackReader|] @type direct;
#L09782c.   v0:= v4.[|java:io:PushbackReader.pos|] ;
#L097830.   if v0 != 0 then goto L09784a;
#L097834.   v0:= new [|java:io:IOException|];
#L097838.   v2:= "Pushback buffer full" @type (object, string);
#L09783c.   call temp:=  [|java:io:IOException.<init>|](v0, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L097842.   throw v0;
#L097844.   v0:= Exception  @type object;
#L097846.   (@monitorexit v1)
#L097848.   throw v0;
#L09784a.   v0:= v4.[|java:io:PushbackReader.buf|]   @type object;
#L09784e.   v2:= v4.[|java:io:PushbackReader.pos|] ;
#L097852.   v2:= v2 + -1;
#L097856.   v4.[|java:io:PushbackReader.pos|]  := v2;
#L09785a.   v3:= (char)v5  @type i2c;
#L09785c.   v0[v2]:= v3  @char;
#L097860.   (@monitorexit v1)
#L097862.   return @void ;
  catch  [|any|] @[L097826..L097848] goto L097844;
  catch  [|any|] @[L09784a..L097862] goto L097844;

   }
    procedure [|void|] [|java:io:PushbackReader.unread|] ([|java:io:PushbackReader|] v2 @type (this), [|char|][] v3) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.unread:([C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L097888.   v0:= 0  @length 4;
#L09788a.   v1:= v3.length;
#L09788c.   call temp:=  [|java:io:PushbackReader.unread|](v2, v3, v0, v1) @signature [|Ljava/io/PushbackReader;.unread:([CII)V|] @classDescriptor [|java:io:PushbackReader|] @type virtual;
#L097892.   return @void ;

   }
    procedure [|void|] [|java:io:PushbackReader.unread|] ([|java:io:PushbackReader|] v4 @type (this), [|char|][] v5, [|int|] v6, [|int|] v7) @owner [|java:io:PushbackReader|] @signature [|Ljava/io/PushbackReader;.unread:([CII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0978a4.   v2:= v4.[|java:io:PushbackReader.lock|]   @type object;
#L0978a8.   (@monitorenter v2)
#L0978aa.   call temp:=  [|java:io:PushbackReader.checkNotClosed|](v4) @signature [|Ljava/io/PushbackReader;.checkNotClosed:()V|] @classDescriptor [|java:io:PushbackReader|] @type direct;
#L0978b0.   v1:= v4.[|java:io:PushbackReader.pos|] ;
#L0978b4.   if v7 <= v1 then goto L0978ce;
#L0978b8.   v1:= new [|java:io:IOException|];
#L0978bc.   v3:= "Pushback buffer full" @type (object, string);
#L0978c0.   call temp:=  [|java:io:IOException.<init>|](v1, v3) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0978c6.   throw v1;
#L0978c8.   v1:= Exception  @type object;
#L0978ca.   (@monitorexit v2)
#L0978cc.   throw v1;
#L0978ce.   v1:= v5.length;
#L0978d0.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v6, v7) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0978d6.   v1:= v6 + v7  @type int;
#L0978da.   v0:= v1 + -1;
#L0978de.   if v0 < v6 then goto L0978f2;
#L0978e2.   v1:= v5[v0]  @char;
#L0978e6.   call temp:=  [|java:io:PushbackReader.unread|](v4, v1) @signature [|Ljava/io/PushbackReader;.unread:(I)V|] @classDescriptor [|java:io:PushbackReader|] @type virtual;
#L0978ec.   v0:= v0 + -1;
#L0978f0.   goto L0978de;
#L0978f2.   (@monitorexit v2)
#L0978f4.   return @void ;
  catch  [|any|] @[L0978aa..L0978cc] goto L0978c8;
  catch  [|any|] @[L0978ce..L0978f4] goto L0978c8;

   }
record [|java:io:RandomAccessFile|]  @type class @AccessFlag PUBLIC extends  [|java:io:DataInput|], [|java:io:DataOutput|], [|java:io:Closeable|] {
      [|java:nio:channels:FileChannel|] [|java:io:RandomAccessFile.channel|]    @AccessFlag PRIVATE;
      [|java:io:FileDescriptor|] [|java:io:RandomAccessFile.fd|]    @AccessFlag PRIVATE;
      [|dalvik:system:CloseGuard|] [|java:io:RandomAccessFile.guard|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:io:RandomAccessFile.mode|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:io:RandomAccessFile.scratch|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:io:RandomAccessFile.syncMetadata|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:RandomAccessFile.<init>|] ([|java:io:RandomAccessFile|] v4 @type (this), [|java:io:File|] v5 @type (object), [|java:lang:String|] v6 @type (object)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L09791c.   call temp:=  [|java:lang:Object.<init>|](v4) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L097922.   v1:= 0  @length 4;
#L097924.   v4.[|java:io:RandomAccessFile.syncMetadata|]  := v1 @boolean;
#L097928.   call temp:=  [|dalvik:system:CloseGuard.get|]() @signature [|Ldalvik/system/CloseGuard;.get:()Ldalvik/system/CloseGuard;|] @classDescriptor [|dalvik:system:CloseGuard|] @type static;
#L09792e.   v1:= temp  @type object;
#L097930.   v4.[|java:io:RandomAccessFile.guard|]  := v1 @type object;
#L097934.   v1:= 8  @length 16;
#L097938.   v1:= new [|byte|][v1];
#L09793c.   v4.[|java:io:RandomAccessFile.scratch|]  := v1 @type object;
#L097940.   v1:= "r" @type (object, string);
#L097944.   call temp:=  [|java:lang:String.equals|](v6, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L09794a.   v1:= temp;
#L09794c.   if v1 == 0 then goto L09798e;
#L097950.   v0:= @@[|libcore:io:OsConstants.O_RDONLY|] ;
#L097954.   v4.[|java:io:RandomAccessFile.mode|]  := v0;
#L097958.   call temp:=  [|java:io:File.getAbsolutePath|](v5) @signature [|Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;|] @classDescriptor [|java:io:File|] @type virtual;
#L09795e.   v1:= temp  @type object;
#L097960.   call temp:=  [|libcore:io:IoBridge.open|](v1, v0) @signature [|Llibcore/io/IoBridge;.open:(Ljava/lang/String;I)Ljava/io/FileDescriptor;|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L097966.   v1:= temp  @type object;
#L097968.   v4.[|java:io:RandomAccessFile.fd|]  := v1 @type object;
#L09796c.   v1:= v4.[|java:io:RandomAccessFile.syncMetadata|]   @boolean;
#L097970.   if v1 == 0 then goto L09797e;
#L097974.   v1:= v4.[|java:io:RandomAccessFile.fd|]   @type object;
#L097978.   call temp:=  [|java:io:FileDescriptor.sync|](v1) @signature [|Ljava/io/FileDescriptor;.sync:()V|] @classDescriptor [|java:io:FileDescriptor|] @type virtual;
#L09797e.   v1:= v4.[|java:io:RandomAccessFile.guard|]   @type object;
#L097982.   v2:= "close" @type (object, string);
#L097986.   call temp:=  [|dalvik:system:CloseGuard.open|](v1, v2) @signature [|Ldalvik/system/CloseGuard;.open:(Ljava/lang/String;)V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L09798c.   return @void ;
#L09798e.   v1:= "rw" @type (object, string);
#L097992.   call temp:=  [|java:lang:String.equals|](v6, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L097998.   v1:= temp;
#L09799a.   if v1 != 0 then goto L0979be;
#L09799e.   v1:= "rws" @type (object, string);
#L0979a2.   call temp:=  [|java:lang:String.equals|](v6, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0979a8.   v1:= temp;
#L0979aa.   if v1 != 0 then goto L0979be;
#L0979ae.   v1:= "rwd" @type (object, string);
#L0979b2.   call temp:=  [|java:lang:String.equals|](v6, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0979b8.   v1:= temp;
#L0979ba.   if v1 == 0 then goto L0979fa;
#L0979be.   v1:= @@[|libcore:io:OsConstants.O_RDWR|] ;
#L0979c2.   v2:= @@[|libcore:io:OsConstants.O_CREAT|] ;
#L0979c6.   v0:= v1 ^| v2  @type int;
#L0979ca.   v1:= "rws" @type (object, string);
#L0979ce.   call temp:=  [|java:lang:String.equals|](v6, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0979d4.   v1:= temp;
#L0979d6.   if v1 == 0 then goto L0979e2;
#L0979da.   v1:= 1  @length 4;
#L0979dc.   v4.[|java:io:RandomAccessFile.syncMetadata|]  := v1 @boolean;
#L0979e0.   goto L097954;
#L0979e2.   v1:= "rwd" @type (object, string);
#L0979e6.   call temp:=  [|java:lang:String.equals|](v6, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0979ec.   v1:= temp;
#L0979ee.   if v1 == 0 then goto L097954;
#L0979f2.   v1:= @@[|libcore:io:OsConstants.O_SYNC|] ;
#L0979f6.   v0:= v0 ^| v1  @type int;
#L0979f8.   goto L097954;
#L0979fa.   v1:= new [|java:lang:IllegalArgumentException|];
#L0979fe.   v2:= new [|java:lang:StringBuilder|];
#L097a02.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L097a08.   v3:= "Invalid mode: " @type (object, string);
#L097a0c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097a12.   v2:= temp  @type object;
#L097a14.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097a1a.   v2:= temp  @type object;
#L097a1c.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097a22.   v2:= temp  @type object;
#L097a24.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L097a2a.   throw v1;
#L097a2c.   v1:= Exception  @type object;
#L097a2e.   goto L09797e;
  catch  [|java:io:IOException|] @[L097974..L09797e] goto L097a2c;

   }
    procedure [|void|] [|java:io:RandomAccessFile.<init>|] ([|java:io:RandomAccessFile|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L097a50.   v0:= new [|java:io:File|];
#L097a54.   call temp:=  [|java:io:File.<init>|](v0, v2) @signature [|Ljava/io/File;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:File|] @type direct;
#L097a5a.   call temp:=  [|java:io:RandomAccessFile.<init>|](v1, v0, v3) @signature [|Ljava/io/RandomAccessFile;.<init>:(Ljava/io/File;Ljava/lang/String;)V|] @classDescriptor [|java:io:RandomAccessFile|] @type direct;
#L097a60.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.close|] ([|java:io:RandomAccessFile|] v1 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L097a74.   v0:= v1.[|java:io:RandomAccessFile.guard|]   @type object;
#L097a78.   call temp:=  [|dalvik:system:CloseGuard.close|](v0) @signature [|Ldalvik/system/CloseGuard;.close:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L097a7e.   (@monitorenter v1)
#L097a80.   v0:= v1.[|java:io:RandomAccessFile.channel|]   @type object;
#L097a84.   if v0 == 0 then goto L097aa8;
#L097a88.   v0:= v1.[|java:io:RandomAccessFile.channel|]   @type object;
#L097a8c.   call temp:=  [|java:nio:channels:FileChannel.isOpen|](v0) @signature [|Ljava/nio/channels/FileChannel;.isOpen:()Z|] @classDescriptor [|java:nio:channels:FileChannel|] @type virtual;
#L097a92.   v0:= temp;
#L097a94.   if v0 == 0 then goto L097aa8;
#L097a98.   v0:= v1.[|java:io:RandomAccessFile.channel|]   @type object;
#L097a9c.   call temp:=  [|java:nio:channels:FileChannel.close|](v0) @signature [|Ljava/nio/channels/FileChannel;.close:()V|] @classDescriptor [|java:nio:channels:FileChannel|] @type virtual;
#L097aa2.   v0:= 0  @length 4;
#L097aa4.   v1.[|java:io:RandomAccessFile.channel|]  := v0 @type object;
#L097aa8.   v0:= v1.[|java:io:RandomAccessFile.fd|]   @type object;
#L097aac.   call temp:=  [|libcore:io:IoUtils.close|](v0) @signature [|Llibcore/io/IoUtils;.close:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L097ab2.   (@monitorexit v1)
#L097ab4.   return @void ;
#L097ab6.   v0:= Exception  @type object;
#L097ab8.   (@monitorexit v1)
#L097aba.   throw v0;
  catch  [|any|] @[L097a80..L097aba] goto L097ab6;

   }
    procedure [|void|] [|java:io:RandomAccessFile.finalize|] ([|java:io:RandomAccessFile|] v1 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L097ad8.   v0:= v1.[|java:io:RandomAccessFile.guard|]   @type object;
#L097adc.   if v0 == 0 then goto L097aea;
#L097ae0.   v0:= v1.[|java:io:RandomAccessFile.guard|]   @type object;
#L097ae4.   call temp:=  [|dalvik:system:CloseGuard.warnIfOpen|](v0) @signature [|Ldalvik/system/CloseGuard;.warnIfOpen:()V|] @classDescriptor [|dalvik:system:CloseGuard|] @type virtual;
#L097aea.   call temp:=  [|java:io:RandomAccessFile.close|](v1) @signature [|Ljava/io/RandomAccessFile;.close:()V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097af0.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L097af6.   return @void ;
#L097af8.   v0:= Exception  @type object;
#L097afa.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L097b00.   throw v0;
  catch  [|any|] @[L097ad8..L097af0] goto L097af8;

   }
    procedure [|java:nio:channels:FileChannel|] [|java:io:RandomAccessFile.getChannel|] ([|java:io:RandomAccessFile|] v2 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.getChannel:()Ljava/nio/channels/FileChannel;|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L097b20.   (@monitorenter v2)
#L097b22.   v0:= v2.[|java:io:RandomAccessFile.channel|]   @type object;
#L097b26.   if v0 != 0 then goto L097b3e;
#L097b2a.   v0:= v2.[|java:io:RandomAccessFile.fd|]   @type object;
#L097b2e.   v1:= v2.[|java:io:RandomAccessFile.mode|] ;
#L097b32.   call temp:=  [|java:nio:NioUtils.newFileChannel|](v2, v0, v1) @signature [|Ljava/nio/NioUtils;.newFileChannel:(Ljava/lang/Object;Ljava/io/FileDescriptor;I)Ljava/nio/channels/FileChannel;|] @classDescriptor [|java:nio:NioUtils|] @type static;
#L097b38.   v0:= temp  @type object;
#L097b3a.   v2.[|java:io:RandomAccessFile.channel|]  := v0 @type object;
#L097b3e.   v0:= v2.[|java:io:RandomAccessFile.channel|]   @type object;
#L097b42.   (@monitorexit v2)
#L097b44.   return v0  @type object;
#L097b46.   v0:= Exception  @type object;
#L097b48.   (@monitorexit v2)
#L097b4a.   throw v0;
  catch  [|any|] @[L097b22..L097b42] goto L097b46;

   }
    procedure [|java:io:FileDescriptor|] [|java:io:RandomAccessFile.getFD|] ([|java:io:RandomAccessFile|] v1 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.getFD:()Ljava/io/FileDescriptor;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L097b68.   v0:= v1.[|java:io:RandomAccessFile.fd|]   @type object;
#L097b6c.   return v0  @type object;

   }
    procedure [|long|] [|java:io:RandomAccessFile.getFilePointer|] ([|java:io:RandomAccessFile|] v6 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.getFilePointer:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L097b80.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L097b84.   v2:= v6.[|java:io:RandomAccessFile.fd|]   @type object;
#L097b88.   v3:= 0  @length wide16;
#L097b8c.   v5:= @@[|libcore:io:OsConstants.SEEK_CUR|] ;
#L097b90.   call temp:=  [|libcore:io:Os.lseek|](v1, v2, v3, v4, v5) @signature [|Llibcore/io/Os;.lseek:(Ljava/io/FileDescriptor;JI)J|] @classDescriptor [|libcore:io:Os|] @type interface;
#L097b96.   v1:= temp  @type wide;
#L097b98.   return v1  @type wide;
#L097b9a.   v0:= Exception  @type object;
#L097b9c.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L097ba2.   v1:= temp  @type object;
#L097ba4.   throw v1;
  catch  [|libcore:io:ErrnoException|] @[L097b80..L097b96] goto L097b9a;

   }
    procedure [|long|] [|java:io:RandomAccessFile.length|] ([|java:io:RandomAccessFile|] v3 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.length:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L097bc8.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L097bcc.   v2:= v3.[|java:io:RandomAccessFile.fd|]   @type object;
#L097bd0.   call temp:=  [|libcore:io:Os.fstat|](v1, v2) @signature [|Llibcore/io/Os;.fstat:(Ljava/io/FileDescriptor;)Llibcore/io/StructStat;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L097bd6.   v1:= temp  @type object;
#L097bd8.   v1:= v1.[|libcore:io:StructStat.st_size|]   @wide;
#L097bdc.   return v1  @type wide;
#L097bde.   v0:= Exception  @type object;
#L097be0.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L097be6.   v1:= temp  @type object;
#L097be8.   throw v1;
  catch  [|libcore:io:ErrnoException|] @[L097bc8..L097bdc] goto L097bde;

   }
    procedure [|int|] [|java:io:RandomAccessFile.read|] ([|java:io:RandomAccessFile|] v4 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L097c0c.   v3:= 0  @length 4;
#L097c0e.   v0:= -1  @length 4;
#L097c10.   v1:= v4.[|java:io:RandomAccessFile.scratch|]   @type object;
#L097c14.   v2:= 1  @length 4;
#L097c16.   call temp:=  [|java:io:RandomAccessFile.read|](v4, v1, v3, v2) @signature [|Ljava/io/RandomAccessFile;.read:([BII)I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097c1c.   v1:= temp;
#L097c1e.   if v1 == v0 then goto L097c2e;
#L097c22.   v0:= v4.[|java:io:RandomAccessFile.scratch|]   @type object;
#L097c26.   v0:= v0[v3]  @byte;
#L097c2a.   v0:= v0 ^& 255;
#L097c2e.   return v0;

   }
    procedure [|int|] [|java:io:RandomAccessFile.read|] ([|java:io:RandomAccessFile|] v2 @type (this), [|byte|][] v3) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.read:([B)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L097c40.   v0:= 0  @length 4;
#L097c42.   v1:= v3.length;
#L097c44.   call temp:=  [|java:io:RandomAccessFile.read|](v2, v3, v0, v1) @signature [|Ljava/io/RandomAccessFile;.read:([BII)I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097c4a.   v0:= temp;
#L097c4c.   return v0;

   }
    procedure [|int|] [|java:io:RandomAccessFile.read|] ([|java:io:RandomAccessFile|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L097c60.   v0:= v1.[|java:io:RandomAccessFile.fd|]   @type object;
#L097c64.   call temp:=  [|libcore:io:IoBridge.read|](v0, v2, v3, v4) @signature [|Llibcore/io/IoBridge;.read:(Ljava/io/FileDescriptor;[BII)I|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L097c6a.   v0:= temp;
#L097c6c.   return v0;

   }
    procedure [|boolean|] [|java:io:RandomAccessFile.readBoolean|] ([|java:io:RandomAccessFile|] v2 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readBoolean:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L097c80.   call temp:=  [|java:io:RandomAccessFile.read|](v2) @signature [|Ljava/io/RandomAccessFile;.read:()I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097c86.   v0:= temp;
#L097c88.   if v0 >= 0 then goto L097c98;
#L097c8c.   v1:= new [|java:io:EOFException|];
#L097c90.   call temp:=  [|java:io:EOFException.<init>|](v1) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L097c96.   throw v1;
#L097c98.   if v0 == 0 then goto L097ca0;
#L097c9c.   v1:= 1  @length 4;
#L097c9e.   return v1;
#L097ca0.   v1:= 0  @length 4;
#L097ca2.   goto L097c9e;

   }
    procedure [|byte|] [|java:io:RandomAccessFile.readByte|] ([|java:io:RandomAccessFile|] v2 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readByte:()B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L097cb4.   call temp:=  [|java:io:RandomAccessFile.read|](v2) @signature [|Ljava/io/RandomAccessFile;.read:()I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097cba.   v0:= temp;
#L097cbc.   if v0 >= 0 then goto L097ccc;
#L097cc0.   v1:= new [|java:io:EOFException|];
#L097cc4.   call temp:=  [|java:io:EOFException.<init>|](v1) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L097cca.   throw v1;
#L097ccc.   v1:= (byte)v0  @type i2b;
#L097cce.   return v1;

   }
    procedure [|char|] [|java:io:RandomAccessFile.readChar|] ([|java:io:RandomAccessFile|] v1 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readChar:()C|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L097ce0.   call temp:=  [|java:io:RandomAccessFile.readShort|](v1) @signature [|Ljava/io/RandomAccessFile;.readShort:()S|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097ce6.   v0:= temp;
#L097ce8.   v0:= (char)v0  @type i2c;
#L097cea.   return v0;

   }
    procedure [|double|] [|java:io:RandomAccessFile.readDouble|] ([|java:io:RandomAccessFile|] v2 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readDouble:()D|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L097cfc.   call temp:=  [|java:io:RandomAccessFile.readLong|](v2) @signature [|Ljava/io/RandomAccessFile;.readLong:()J|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097d02.   v0:= temp  @type wide;
#L097d04.   call temp:=  [|java:lang:Double.longBitsToDouble|](v0, v1) @signature [|Ljava/lang/Double;.longBitsToDouble:(J)D|] @classDescriptor [|java:lang:Double|] @type static;
#L097d0a.   v0:= temp  @type wide;
#L097d0c.   return v0  @type wide;

   }
    procedure [|float|] [|java:io:RandomAccessFile.readFloat|] ([|java:io:RandomAccessFile|] v1 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readFloat:()F|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L097d20.   call temp:=  [|java:io:RandomAccessFile.readInt|](v1) @signature [|Ljava/io/RandomAccessFile;.readInt:()I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097d26.   v0:= temp;
#L097d28.   call temp:=  [|java:lang:Float.intBitsToFloat|](v0) @signature [|Ljava/lang/Float;.intBitsToFloat:(I)F|] @classDescriptor [|java:lang:Float|] @type static;
#L097d2e.   v0:= temp;
#L097d30.   return v0;

   }
    procedure [|void|] [|java:io:RandomAccessFile.readFully|] ([|java:io:RandomAccessFile|] v2 @type (this), [|byte|][] v3) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readFully:([B)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L097d44.   v0:= 0  @length 4;
#L097d46.   v1:= v3.length;
#L097d48.   call temp:=  [|java:io:RandomAccessFile.readFully|](v2, v3, v0, v1) @signature [|Ljava/io/RandomAccessFile;.readFully:([BII)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097d4e.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.readFully|] ([|java:io:RandomAccessFile|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readFully:([BII)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L097d60.   v1:= v3.length;
#L097d62.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L097d68.   if v5 <= 0 then goto L097d8a;
#L097d6c.   call temp:=  [|java:io:RandomAccessFile.read|](v2, v3, v4, v5) @signature [|Ljava/io/RandomAccessFile;.read:([BII)I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097d72.   v0:= temp;
#L097d74.   if v0 >= 0 then goto L097d84;
#L097d78.   v1:= new [|java:io:EOFException|];
#L097d7c.   call temp:=  [|java:io:EOFException.<init>|](v1) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L097d82.   throw v1;
#L097d84.   v4:= v4 + v0  @type int;
#L097d86.   v5:= v5 - v0  @type int;
#L097d88.   goto L097d68;
#L097d8a.   return @void ;

   }
    procedure [|int|] [|java:io:RandomAccessFile.readInt|] ([|java:io:RandomAccessFile|] v3 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readInt:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L097d9c.   v2:= 0  @length 4;
#L097d9e.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L097da2.   v1:= 4  @length 4;
#L097da4.   call temp:=  [|java:io:RandomAccessFile.readFully|](v3, v0, v2, v1) @signature [|Ljava/io/RandomAccessFile;.readFully:([BII)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097daa.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L097dae.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L097db2.   call temp:=  [|libcore:io:Memory.peekInt|](v0, v2, v1) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L097db8.   v0:= temp;
#L097dba.   return v0;

   }
    procedure [|java:lang:String|] [|java:io:RandomAccessFile.readLine|] ([|java:io:RandomAccessFile|] v6 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readLine:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L097dcc.   v1:= new [|java:lang:StringBuilder|];
#L097dd0.   v5:= 80  @length 16;
#L097dd4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1, v5) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L097dda.   v0:= 0  @length 4;
#L097ddc.   v3:= 0  @length wide16;
#L097de0.   call temp:=  [|java:io:RandomAccessFile.read|](v6) @signature [|Ljava/io/RandomAccessFile;.read:()I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097de6.   v2:= temp;
#L097de8.   goto L097e50;
#L097dee.   if v0 == 0 then goto L097e46;
#L097df2.   call temp:=  [|java:io:RandomAccessFile.seek|](v6, v3, v4) @signature [|Ljava/io/RandomAccessFile;.seek:(J)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097df8.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097dfe.   v5:= temp  @type object;
#L097e00.   return v5  @type object;
#L097e02.   call temp:=  [|java:lang:StringBuilder.length|](v1) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097e08.   v5:= temp;
#L097e0a.   if v5 == 0 then goto L097e18;
#L097e0e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097e14.   v5:= temp  @type object;
#L097e16.   goto L097e00;
#L097e18.   v5:= 0  @length 4;
#L097e1a.   goto L097e00;
#L097e1c.   if v0 == 0 then goto L097e30;
#L097e20.   call temp:=  [|java:io:RandomAccessFile.seek|](v6, v3, v4) @signature [|Ljava/io/RandomAccessFile;.seek:(J)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097e26.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097e2c.   v5:= temp  @type object;
#L097e2e.   goto L097e00;
#L097e30.   v0:= 1  @length 4;
#L097e32.   call temp:=  [|java:io:RandomAccessFile.getFilePointer|](v6) @signature [|Ljava/io/RandomAccessFile;.getFilePointer:()J|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097e38.   v3:= temp  @type wide;
#L097e3a.   goto L097de0;
#L097e3c.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097e42.   v5:= temp  @type object;
#L097e44.   goto L097e00;
#L097e46.   v5:= (char)v2  @type i2c;
#L097e48.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097e4e.   goto L097de0;
#L097e50.   switch v2
                 | -1 => goto L097e02
                 | 10 => goto L097e3c
                 | 13 => goto L097e1c
                 | => goto L097dee;

   }
    procedure [|long|] [|java:io:RandomAccessFile.readLong|] ([|java:io:RandomAccessFile|] v3 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readLong:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L097e7c.   v2:= 0  @length 4;
#L097e7e.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L097e82.   v1:= 8  @length 16;
#L097e86.   call temp:=  [|java:io:RandomAccessFile.readFully|](v3, v0, v2, v1) @signature [|Ljava/io/RandomAccessFile;.readFully:([BII)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097e8c.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L097e90.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L097e94.   call temp:=  [|libcore:io:Memory.peekLong|](v0, v2, v1) @signature [|Llibcore/io/Memory;.peekLong:([BILjava/nio/ByteOrder;)J|] @classDescriptor [|libcore:io:Memory|] @type static;
#L097e9a.   v0:= temp  @type wide;
#L097e9c.   return v0  @type wide;

   }
    procedure [|short|] [|java:io:RandomAccessFile.readShort|] ([|java:io:RandomAccessFile|] v3 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readShort:()S|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L097eb0.   v2:= 0  @length 4;
#L097eb2.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L097eb6.   v1:= 2  @length 4;
#L097eb8.   call temp:=  [|java:io:RandomAccessFile.readFully|](v3, v0, v2, v1) @signature [|Ljava/io/RandomAccessFile;.readFully:([BII)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097ebe.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L097ec2.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L097ec6.   call temp:=  [|libcore:io:Memory.peekShort|](v0, v2, v1) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L097ecc.   v0:= temp;
#L097ece.   return v0;

   }
    procedure [|java:lang:String|] [|java:io:RandomAccessFile.readUTF|] ([|java:io:RandomAccessFile|] v5 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readUTF:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L097ee0.   v4:= 0  @length 4;
#L097ee2.   call temp:=  [|java:io:RandomAccessFile.readUnsignedShort|](v5) @signature [|Ljava/io/RandomAccessFile;.readUnsignedShort:()I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097ee8.   v1:= temp;
#L097eea.   if v1 != 0 then goto L097ef4;
#L097eee.   v2:= "" @type (object, string);
#L097ef2.   return v2  @type object;
#L097ef4.   v0:= new [|byte|][v1];
#L097ef8.   v2:= v0.length;
#L097efa.   call temp:=  [|java:io:RandomAccessFile.read|](v5, v0, v4, v2) @signature [|Ljava/io/RandomAccessFile;.read:([BII)I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097f00.   v2:= temp;
#L097f02.   v3:= v0.length;
#L097f04.   if v2 == v3 then goto L097f14;
#L097f08.   v2:= new [|java:io:EOFException|];
#L097f0c.   call temp:=  [|java:io:EOFException.<init>|](v2) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L097f12.   throw v2;
#L097f14.   v2:= new [|char|][v1];
#L097f18.   call temp:=  [|java:nio:charset:ModifiedUtf8.decode|](v0, v2, v4, v1) @signature [|Ljava/nio/charset/ModifiedUtf8;.decode:([B[CII)Ljava/lang/String;|] @classDescriptor [|java:nio:charset:ModifiedUtf8|] @type static;
#L097f1e.   v2:= temp  @type object;
#L097f20.   goto L097ef2;

   }
    procedure [|int|] [|java:io:RandomAccessFile.readUnsignedByte|] ([|java:io:RandomAccessFile|] v2 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readUnsignedByte:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L097f34.   call temp:=  [|java:io:RandomAccessFile.read|](v2) @signature [|Ljava/io/RandomAccessFile;.read:()I|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097f3a.   v0:= temp;
#L097f3c.   if v0 >= 0 then goto L097f4c;
#L097f40.   v1:= new [|java:io:EOFException|];
#L097f44.   call temp:=  [|java:io:EOFException.<init>|](v1) @signature [|Ljava/io/EOFException;.<init>:()V|] @classDescriptor [|java:io:EOFException|] @type direct;
#L097f4a.   throw v1;
#L097f4c.   return v0;

   }
    procedure [|int|] [|java:io:RandomAccessFile.readUnsignedShort|] ([|java:io:RandomAccessFile|] v2 @type (this)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.readUnsignedShort:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L097f60.   call temp:=  [|java:io:RandomAccessFile.readShort|](v2) @signature [|Ljava/io/RandomAccessFile;.readShort:()S|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L097f66.   v0:= temp;
#L097f68.    v1:= 0.000000;
#L097f6e.   v0:= v0 ^& v1  @type int;
#L097f70.   return v0;

   }
    procedure [|void|] [|java:io:RandomAccessFile.seek|] ([|java:io:RandomAccessFile|] v4 @type (this), [|long|] v5) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.seek:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L097f84.   v1:= 0  @length wide16;
#L097f88.   v1:= cmp(v5,v1);
#L097f8c.   if v1 >= 0 then goto L097fc2;
#L097f90.   v1:= new [|java:io:IOException|];
#L097f94.   v2:= new [|java:lang:StringBuilder|];
#L097f98.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L097f9e.   v3:= "offset < 0: " @type (object, string);
#L097fa2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097fa8.   v2:= temp  @type object;
#L097faa.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097fb0.   v2:= temp  @type object;
#L097fb2.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L097fb8.   v2:= temp  @type object;
#L097fba.   call temp:=  [|java:io:IOException.<init>|](v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L097fc0.   throw v1;
#L097fc2.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L097fc6.   v2:= v4.[|java:io:RandomAccessFile.fd|]   @type object;
#L097fca.   v3:= @@[|libcore:io:OsConstants.SEEK_SET|] ;
#L097fce.   call temp:=  [|libcore:io:Os.lseek|](v1, v2, v5, v6, v3) @signature [|Llibcore/io/Os;.lseek:(Ljava/io/FileDescriptor;JI)J|] @classDescriptor [|libcore:io:Os|] @type interface;
#L097fd4.   return @void ;
#L097fd6.   v0:= Exception  @type object;
#L097fd8.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L097fde.   v1:= temp  @type object;
#L097fe0.   throw v1;
  catch  [|libcore:io:ErrnoException|] @[L097fc2..L097fd4] goto L097fd6;

   }
    procedure [|void|] [|java:io:RandomAccessFile.setLength|] ([|java:io:RandomAccessFile|] v5 @type (this), [|long|] v6) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.setLength:(J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L098004.   v3:= 0  @length wide16;
#L098008.   v3:= cmp(v6,v3);
#L09800c.   if v3 >= 0 then goto L098020;
#L098010.   v3:= new [|java:lang:IllegalArgumentException|];
#L098014.   v4:= "newLength < 0" @type (object, string);
#L098018.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L09801e.   throw v3;
#L098020.   v3:= @@[|libcore:io:Libcore.os|]   @type object;
#L098024.   v4:= v5.[|java:io:RandomAccessFile.fd|]   @type object;
#L098028.   call temp:=  [|libcore:io:Os.ftruncate|](v3, v4, v6, v7) @signature [|Llibcore/io/Os;.ftruncate:(Ljava/io/FileDescriptor;J)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L09802e.   call temp:=  [|java:io:RandomAccessFile.getFilePointer|](v5) @signature [|Ljava/io/RandomAccessFile;.getFilePointer:()J|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L098034.   v1:= temp  @type wide;
#L098036.   v3:= cmp(v1,v6);
#L09803a.   if v3 <= 0 then goto L098044;
#L09803e.   call temp:=  [|java:io:RandomAccessFile.seek|](v5, v6, v7) @signature [|Ljava/io/RandomAccessFile;.seek:(J)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L098044.   v3:= v5.[|java:io:RandomAccessFile.syncMetadata|]   @boolean;
#L098048.   if v3 == 0 then goto L098056;
#L09804c.   v3:= v5.[|java:io:RandomAccessFile.fd|]   @type object;
#L098050.   call temp:=  [|java:io:FileDescriptor.sync|](v3) @signature [|Ljava/io/FileDescriptor;.sync:()V|] @classDescriptor [|java:io:FileDescriptor|] @type virtual;
#L098056.   return @void ;
#L098058.   v0:= Exception  @type object;
#L09805a.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L098060.   v3:= temp  @type object;
#L098062.   throw v3;
  catch  [|libcore:io:ErrnoException|] @[L098020..L09802e] goto L098058;

   }
    procedure [|int|] [|java:io:RandomAccessFile.skipBytes|] ([|java:io:RandomAccessFile|] v7 @type (this), [|int|] v8) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.skipBytes:(I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L098084.   if v8 <= 0 then goto L0980ba;
#L098088.   call temp:=  [|java:io:RandomAccessFile.getFilePointer|](v7) @signature [|Ljava/io/RandomAccessFile;.getFilePointer:()J|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L09808e.   v0:= temp  @type wide;
#L098090.   call temp:=  [|java:io:RandomAccessFile.length|](v7) @signature [|Ljava/io/RandomAccessFile;.length:()J|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L098096.   v2:= temp  @type wide;
#L098098.   v5:= (long)v8  @type i2l;
#L09809a.   v5:= v5 + v0  @type long;
#L09809c.   v5:= cmp(v5,v2);
#L0980a0.   if v5 <= 0 then goto L0980b6;
#L0980a4.   v5:= v2 - v0  @type long;
#L0980a8.   v4:= (int)v5  @type l2i;
#L0980aa.   v5:= (long)v4  @type i2l;
#L0980ac.   v5:= v5 + v0  @type long;
#L0980ae.   call temp:=  [|java:io:RandomAccessFile.seek|](v7, v5, v6) @signature [|Ljava/io/RandomAccessFile;.seek:(J)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L0980b4.   return v4;
#L0980b6.   v5:= (long)v8  @type i2l;
#L0980b8.   goto L0980a8;
#L0980ba.   v4:= 0  @length 4;
#L0980bc.   goto L0980b4;

   }
    procedure [|void|] [|java:io:RandomAccessFile.write|] ([|java:io:RandomAccessFile|] v3 @type (this), [|int|] v4) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0980d0.   v2:= 0  @length 4;
#L0980d2.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L0980d6.   v1:= v4 ^& 255;
#L0980da.   v1:= (byte)v1  @type i2b;
#L0980dc.   v0[v2]:= v1  @byte;
#L0980e0.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L0980e4.   v1:= 1  @length 4;
#L0980e6.   call temp:=  [|java:io:RandomAccessFile.write|](v3, v0, v2, v1) @signature [|Ljava/io/RandomAccessFile;.write:([BII)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L0980ec.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.write|] ([|java:io:RandomAccessFile|] v2 @type (this), [|byte|][] v3) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.write:([B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L098100.   v0:= 0  @length 4;
#L098102.   v1:= v3.length;
#L098104.   call temp:=  [|java:io:RandomAccessFile.write|](v2, v3, v0, v1) @signature [|Ljava/io/RandomAccessFile;.write:([BII)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L09810a.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.write|] ([|java:io:RandomAccessFile|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09811c.   v0:= v1.[|java:io:RandomAccessFile.fd|]   @type object;
#L098120.   call temp:=  [|libcore:io:IoBridge.write|](v0, v2, v3, v4) @signature [|Llibcore/io/IoBridge;.write:(Ljava/io/FileDescriptor;[BII)V|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L098126.   v0:= v1.[|java:io:RandomAccessFile.syncMetadata|]   @boolean;
#L09812a.   if v0 == 0 then goto L098138;
#L09812e.   v0:= v1.[|java:io:RandomAccessFile.fd|]   @type object;
#L098132.   call temp:=  [|java:io:FileDescriptor.sync|](v0) @signature [|Ljava/io/FileDescriptor;.sync:()V|] @classDescriptor [|java:io:FileDescriptor|] @type virtual;
#L098138.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeBoolean|] ([|java:io:RandomAccessFile|] v1 @type (this), [|boolean|] v2) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeBoolean:(Z)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L09814c.   if v2 == 0 then goto L09815a;
#L098150.   v0:= 1  @length 4;
#L098152.   call temp:=  [|java:io:RandomAccessFile.write|](v1, v0) @signature [|Ljava/io/RandomAccessFile;.write:(I)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L098158.   return @void ;
#L09815a.   v0:= 0  @length 4;
#L09815c.   goto L098152;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeByte|] ([|java:io:RandomAccessFile|] v1 @type (this), [|int|] v2) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeByte:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L098170.   v0:= v2 ^& 255;
#L098174.   call temp:=  [|java:io:RandomAccessFile.write|](v1, v0) @signature [|Ljava/io/RandomAccessFile;.write:(I)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L09817a.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeBytes|] ([|java:io:RandomAccessFile|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeBytes:(Ljava/lang/String;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L09818c.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L098192.   v2:= temp;
#L098194.   v0:= new [|byte|][v2];
#L098198.   v1:= 0  @length 4;
#L09819a.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0981a0.   v2:= temp;
#L0981a2.   if v1 >= v2 then goto L0981be;
#L0981a6.   call temp:=  [|java:lang:String.charAt|](v4, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0981ac.   v2:= temp;
#L0981ae.   v2:= v2 ^& 255;
#L0981b2.   v2:= (byte)v2  @type i2b;
#L0981b4.   v0[v1]:= v2  @byte;
#L0981b8.   v1:= v1 + 1;
#L0981bc.   goto L09819a;
#L0981be.   call temp:=  [|java:io:RandomAccessFile.write|](v3, v0) @signature [|Ljava/io/RandomAccessFile;.write:([B)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L0981c4.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeChar|] ([|java:io:RandomAccessFile|] v0 @type (this), [|int|] v1) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeChar:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L0981d8.   call temp:=  [|java:io:RandomAccessFile.writeShort|](v0, v1) @signature [|Ljava/io/RandomAccessFile;.writeShort:(I)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L0981de.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeChars|] ([|java:io:RandomAccessFile|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeChars:(Ljava/lang/String;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0981f0.   v0:= "UTF-16BE" @type (object, string);
#L0981f4.   call temp:=  [|java:lang:String.getBytes|](v2, v0) @signature [|Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B|] @classDescriptor [|java:lang:String|] @type virtual;
#L0981fa.   v0:= temp  @type object;
#L0981fc.   call temp:=  [|java:io:RandomAccessFile.write|](v1, v0) @signature [|Ljava/io/RandomAccessFile;.write:([B)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L098202.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeDouble|] ([|java:io:RandomAccessFile|] v2 @type (this), [|double|] v3) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeDouble:(D)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L098214.   call temp:=  [|java:lang:Double.doubleToLongBits|](v3, v4) @signature [|Ljava/lang/Double;.doubleToLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L09821a.   v0:= temp  @type wide;
#L09821c.   call temp:=  [|java:io:RandomAccessFile.writeLong|](v2, v0, v1) @signature [|Ljava/io/RandomAccessFile;.writeLong:(J)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L098222.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeFloat|] ([|java:io:RandomAccessFile|] v1 @type (this), [|float|] v2) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeFloat:(F)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L098234.   call temp:=  [|java:lang:Float.floatToIntBits|](v2) @signature [|Ljava/lang/Float;.floatToIntBits:(F)I|] @classDescriptor [|java:lang:Float|] @type static;
#L09823a.   v0:= temp;
#L09823c.   call temp:=  [|java:io:RandomAccessFile.writeInt|](v1, v0) @signature [|Ljava/io/RandomAccessFile;.writeInt:(I)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L098242.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeInt|] ([|java:io:RandomAccessFile|] v3 @type (this), [|int|] v4) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeInt:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L098254.   v2:= 0  @length 4;
#L098256.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L09825a.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L09825e.   call temp:=  [|libcore:io:Memory.pokeInt|](v0, v2, v4, v1) @signature [|Llibcore/io/Memory;.pokeInt:([BIILjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L098264.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L098268.   v1:= 4  @length 4;
#L09826a.   call temp:=  [|java:io:RandomAccessFile.write|](v3, v0, v2, v1) @signature [|Ljava/io/RandomAccessFile;.write:([BII)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L098270.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeLong|] ([|java:io:RandomAccessFile|] v3 @type (this), [|long|] v4) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeLong:(J)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L098284.   v2:= 0  @length 4;
#L098286.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L09828a.   v1:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L09828e.   call temp:=  [|libcore:io:Memory.pokeLong|](v0, v2, v4, v5, v1) @signature [|Llibcore/io/Memory;.pokeLong:([BIJLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L098294.   v0:= v3.[|java:io:RandomAccessFile.scratch|]   @type object;
#L098298.   v1:= 8  @length 16;
#L09829c.   call temp:=  [|java:io:RandomAccessFile.write|](v3, v0, v2, v1) @signature [|Ljava/io/RandomAccessFile;.write:([BII)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L0982a2.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeShort|] ([|java:io:RandomAccessFile|] v4 @type (this), [|int|] v5) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeShort:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0982b4.   v3:= 0  @length 4;
#L0982b6.   v0:= v4.[|java:io:RandomAccessFile.scratch|]   @type object;
#L0982ba.   v1:= (short)v5  @type i2s;
#L0982bc.   v2:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L0982c0.   call temp:=  [|libcore:io:Memory.pokeShort|](v0, v3, v1, v2) @signature [|Llibcore/io/Memory;.pokeShort:([BISLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0982c6.   v0:= v4.[|java:io:RandomAccessFile.scratch|]   @type object;
#L0982ca.   v1:= 2  @length 4;
#L0982cc.   call temp:=  [|java:io:RandomAccessFile.write|](v4, v0, v3, v1) @signature [|Ljava/io/RandomAccessFile;.write:([BII)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L0982d2.   return @void ;

   }
    procedure [|void|] [|java:io:RandomAccessFile.writeUTF|] ([|java:io:RandomAccessFile|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:RandomAccessFile|] @signature [|Ljava/io/RandomAccessFile;.writeUTF:(Ljava/lang/String;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0982e4.   call temp:=  [|java:nio:charset:ModifiedUtf8.encode|](v2) @signature [|Ljava/nio/charset/ModifiedUtf8;.encode:(Ljava/lang/String;)[B|] @classDescriptor [|java:nio:charset:ModifiedUtf8|] @type static;
#L0982ea.   v0:= temp  @type object;
#L0982ec.   call temp:=  [|java:io:RandomAccessFile.write|](v1, v0) @signature [|Ljava/io/RandomAccessFile;.write:([B)V|] @classDescriptor [|java:io:RandomAccessFile|] @type virtual;
#L0982f2.   return @void ;

   }
record [|java:io:SequenceInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:InputStream|] {
      [|java:util:Enumeration|] [|java:io:SequenceInputStream.e|]    @AccessFlag PRIVATE;
      [|java:io:InputStream|] [|java:io:SequenceInputStream.in|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:SequenceInputStream.<init>|] ([|java:io:SequenceInputStream|] v3 @type (this), [|java:io:InputStream|] v4 @type (object), [|java:io:InputStream|] v5 @type (object)) @owner [|java:io:SequenceInputStream|] @signature [|Ljava/io/SequenceInputStream;.<init>:(Ljava/io/InputStream;Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L098304.   call temp:=  [|java:io:InputStream.<init>|](v3) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L09830a.   if v4 != 0 then goto L09831e;
#L09830e.   v1:= new [|java:lang:NullPointerException|];
#L098312.   v2:= "s1 == null" @type (object, string);
#L098316.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L09831c.   throw v1;
#L09831e.   v0:= new [|java:util:Vector|];
#L098322.   v1:= 1  @length 4;
#L098324.   call temp:=  [|java:util:Vector.<init>|](v0, v1) @signature [|Ljava/util/Vector;.<init>:(I)V|] @classDescriptor [|java:util:Vector|] @type direct;
#L09832a.   call temp:=  [|java:util:Vector.addElement|](v0, v5) @signature [|Ljava/util/Vector;.addElement:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:Vector|] @type virtual;
#L098330.   call temp:=  [|java:util:Vector.elements|](v0) @signature [|Ljava/util/Vector;.elements:()Ljava/util/Enumeration;|] @classDescriptor [|java:util:Vector|] @type virtual;
#L098336.   v1:= temp  @type object;
#L098338.   v3.[|java:io:SequenceInputStream.e|]  := v1 @type object;
#L09833c.   v3.[|java:io:SequenceInputStream.in|]  := v4 @type object;
#L098340.   return @void ;

   }
    procedure [|void|] [|java:io:SequenceInputStream.<init>|] ([|java:io:SequenceInputStream|] v2 @type (this), [|java:util:Enumeration|] v3 @type (object)) @owner [|java:io:SequenceInputStream|] @signature [|Ljava/io/SequenceInputStream;.<init>:(Ljava/util/Enumeration;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L098354.   call temp:=  [|java:io:InputStream.<init>|](v2) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L09835a.   v2.[|java:io:SequenceInputStream.e|]  := v3 @type object;
#L09835e.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v3) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L098364.   v0:= temp;
#L098366.   if v0 == 0 then goto L098392;
#L09836a.   call temp:=  [|java:util:Enumeration.nextElement|](v3) @signature [|Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L098370.   v0:= temp  @type object;
#L098372.   v0:= ([|java:io:InputStream|])v0;
#L098376.   v2.[|java:io:SequenceInputStream.in|]  := v0 @type object;
#L09837a.   v0:= v2.[|java:io:SequenceInputStream.in|]   @type object;
#L09837e.   if v0 != 0 then goto L098392;
#L098382.   v0:= new [|java:lang:NullPointerException|];
#L098386.   v1:= "element is null" @type (object, string);
#L09838a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L098390.   throw v0;
#L098392.   return @void ;

   }
    procedure [|void|] [|java:io:SequenceInputStream.nextStream|] ([|java:io:SequenceInputStream|] v2 @type (this)) @owner [|java:io:SequenceInputStream|] @signature [|Ljava/io/SequenceInputStream;.nextStream:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0983a4.   v0:= v2.[|java:io:SequenceInputStream.in|]   @type object;
#L0983a8.   if v0 == 0 then goto L0983b6;
#L0983ac.   v0:= v2.[|java:io:SequenceInputStream.in|]   @type object;
#L0983b0.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0983b6.   v0:= v2.[|java:io:SequenceInputStream.e|]   @type object;
#L0983ba.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v0) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L0983c0.   v0:= temp;
#L0983c2.   if v0 == 0 then goto L0983f2;
#L0983c6.   v0:= v2.[|java:io:SequenceInputStream.e|]   @type object;
#L0983ca.   call temp:=  [|java:util:Enumeration.nextElement|](v0) @signature [|Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L0983d0.   v0:= temp  @type object;
#L0983d2.   v0:= ([|java:io:InputStream|])v0;
#L0983d6.   v2.[|java:io:SequenceInputStream.in|]  := v0 @type object;
#L0983da.   v0:= v2.[|java:io:SequenceInputStream.in|]   @type object;
#L0983de.   if v0 != 0 then goto L0983f8;
#L0983e2.   v0:= new [|java:lang:NullPointerException|];
#L0983e6.   v1:= "element is null" @type (object, string);
#L0983ea.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0983f0.   throw v0;
#L0983f2.   v0:= 0  @length 4;
#L0983f4.   v2.[|java:io:SequenceInputStream.in|]  := v0 @type object;
#L0983f8.   return @void ;

   }
    procedure [|int|] [|java:io:SequenceInputStream.available|] ([|java:io:SequenceInputStream|] v1 @type (this)) @owner [|java:io:SequenceInputStream|] @signature [|Ljava/io/SequenceInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09840c.   v0:= v1.[|java:io:SequenceInputStream.e|]   @type object;
#L098410.   if v0 == 0 then goto L09842a;
#L098414.   v0:= v1.[|java:io:SequenceInputStream.in|]   @type object;
#L098418.   if v0 == 0 then goto L09842a;
#L09841c.   v0:= v1.[|java:io:SequenceInputStream.in|]   @type object;
#L098420.   call temp:=  [|java:io:InputStream.available|](v0) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L098426.   v0:= temp;
#L098428.   return v0;
#L09842a.   v0:= 0  @length 4;
#L09842c.   goto L098428;

   }
    procedure [|void|] [|java:io:SequenceInputStream.close|] ([|java:io:SequenceInputStream|] v1 @type (this)) @owner [|java:io:SequenceInputStream|] @signature [|Ljava/io/SequenceInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L098440.   v0:= v1.[|java:io:SequenceInputStream.in|]   @type object;
#L098444.   if v0 == 0 then goto L098450;
#L098448.   call temp:=  [|java:io:SequenceInputStream.nextStream|](v1) @signature [|Ljava/io/SequenceInputStream;.nextStream:()V|] @classDescriptor [|java:io:SequenceInputStream|] @type direct;
#L09844e.   goto L098440;
#L098450.   v0:= 0  @length 4;
#L098452.   v1.[|java:io:SequenceInputStream.e|]  := v0 @type object;
#L098456.   return @void ;

   }
    procedure [|int|] [|java:io:SequenceInputStream.read|] ([|java:io:SequenceInputStream|] v2 @type (this)) @owner [|java:io:SequenceInputStream|] @signature [|Ljava/io/SequenceInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L098468.   v1:= v2.[|java:io:SequenceInputStream.in|]   @type object;
#L09846c.   if v1 == 0 then goto L09848a;
#L098470.   v1:= v2.[|java:io:SequenceInputStream.in|]   @type object;
#L098474.   call temp:=  [|java:io:InputStream.read|](v1) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L09847a.   v0:= temp;
#L09847c.   if v0 < 0 then goto L098482;
#L098480.   return v0;
#L098482.   call temp:=  [|java:io:SequenceInputStream.nextStream|](v2) @signature [|Ljava/io/SequenceInputStream;.nextStream:()V|] @classDescriptor [|java:io:SequenceInputStream|] @type direct;
#L098488.   goto L098468;
#L09848a.   v0:= -1  @length 4;
#L09848c.   goto L098480;

   }
    procedure [|int|] [|java:io:SequenceInputStream.read|] ([|java:io:SequenceInputStream|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|java:io:SequenceInputStream|] @signature [|Ljava/io/SequenceInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0984a0.   v1:= -1  @length 4;
#L0984a2.   v2:= v3.[|java:io:SequenceInputStream.in|]   @type object;
#L0984a6.   if v2 != 0 then goto L0984ae;
#L0984aa.   v0:= v1;
#L0984ac.   return v0;
#L0984ae.   v2:= v4.length;
#L0984b0.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v2, v5, v6) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0984b6.   v2:= v3.[|java:io:SequenceInputStream.in|]   @type object;
#L0984ba.   if v2 == 0 then goto L0984d6;
#L0984be.   v2:= v3.[|java:io:SequenceInputStream.in|]   @type object;
#L0984c2.   call temp:=  [|java:io:InputStream.read|](v2, v4, v5, v6) @signature [|Ljava/io/InputStream;.read:([BII)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0984c8.   v0:= temp;
#L0984ca.   if v0 >= 0 then goto L0984ac;
#L0984ce.   call temp:=  [|java:io:SequenceInputStream.nextStream|](v3) @signature [|Ljava/io/SequenceInputStream;.nextStream:()V|] @classDescriptor [|java:io:SequenceInputStream|] @type direct;
#L0984d4.   goto L0984b6;
#L0984d6.   v0:= v1;
#L0984d8.   goto L0984ac;

   }
record [|java:security:BasicPermission|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:security:Permission|], [|java:io:Serializable|] {
   }
    procedure [|void|] [|java:security:BasicPermission.<init>|] ([|java:security:BasicPermission|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:security:BasicPermission|] @signature [|Ljava/security/BasicPermission;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0984ec.   v0:= "" @type (object, string);
#L0984f0.   call temp:=  [|java:security:Permission.<init>|](v1, v0) @signature [|Ljava/security/Permission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:Permission|] @type direct;
#L0984f6.   return @void ;

   }
    procedure [|void|] [|java:security:BasicPermission.<init>|] ([|java:security:BasicPermission|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:security:BasicPermission|] @signature [|Ljava/security/BasicPermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L098508.   v0:= "" @type (object, string);
#L09850c.   call temp:=  [|java:security:Permission.<init>|](v1, v0) @signature [|Ljava/security/Permission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:Permission|] @type direct;
#L098512.   return @void ;

   }
    procedure [|java:lang:String|] [|java:security:BasicPermission.getActions|] ([|java:security:BasicPermission|] v1 @type (this)) @owner [|java:security:BasicPermission|] @signature [|Ljava/security/BasicPermission;.getActions:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L098524.   v0:= 0  @length 4;
#L098526.   return v0  @type object;

   }
    procedure [|boolean|] [|java:security:BasicPermission.implies|] ([|java:security:BasicPermission|] v1 @type (this), [|java:security:Permission|] v2 @type (object)) @owner [|java:security:BasicPermission|] @signature [|Ljava/security/BasicPermission;.implies:(Ljava/security/Permission;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L098538.   v0:= 1  @length 4;
#L09853a.   return v0;

   }
record [|java:io:SerializablePermission|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:security:BasicPermission|] {
   }
    procedure [|void|] [|java:io:SerializablePermission.<init>|] ([|java:io:SerializablePermission|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:SerializablePermission|] @signature [|Ljava/io/SerializablePermission;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L09854c.   v0:= "" @type (object, string);
#L098550.   call temp:=  [|java:security:BasicPermission.<init>|](v1, v0) @signature [|Ljava/security/BasicPermission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:BasicPermission|] @type direct;
#L098556.   return @void ;

   }
    procedure [|void|] [|java:io:SerializablePermission.<init>|] ([|java:io:SerializablePermission|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:io:SerializablePermission|] @signature [|Ljava/io/SerializablePermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L098568.   v0:= "" @type (object, string);
#L09856c.   v1:= "" @type (object, string);
#L098570.   call temp:=  [|java:security:BasicPermission.<init>|](v2, v0, v1) @signature [|Ljava/security/BasicPermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:security:BasicPermission|] @type direct;
#L098576.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:SerializablePermission.getActions|] ([|java:io:SerializablePermission|] v1 @type (this)) @owner [|java:io:SerializablePermission|] @signature [|Ljava/io/SerializablePermission;.getActions:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L098588.   v0:= 0  @length 4;
#L09858a.   return v0  @type object;

   }
    procedure [|boolean|] [|java:io:SerializablePermission.implies|] ([|java:io:SerializablePermission|] v1 @type (this), [|java:security:Permission|] v2 @type (object)) @owner [|java:io:SerializablePermission|] @signature [|Ljava/io/SerializablePermission;.implies:(Ljava/security/Permission;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09859c.   v0:= 1  @length 4;
#L09859e.   return v0;

   }
record [|java:io:SerializationHandleMap|]  @type class @AccessFlag FINAL  {
      [|java:lang:Object|][] [|java:io:SerializationHandleMap.keys|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:SerializationHandleMap.size|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:SerializationHandleMap.threshold|]    @AccessFlag PRIVATE;
      [|int|][] [|java:io:SerializationHandleMap.values|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:io:SerializationHandleMap.LOAD_FACTOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:SerializationHandleMap.<init>|] ([|java:io:SerializationHandleMap|] v5 @type (this)) @owner [|java:io:SerializationHandleMap|] @signature [|Ljava/io/SerializationHandleMap;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0985b0.   call temp:=  [|java:lang:Object.<init>|](v5) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0985b6.   v1:= 0  @length 4;
#L0985b8.   v5.[|java:io:SerializationHandleMap.size|]  := v1;
#L0985bc.   v1:= 21  @length 16;
#L0985c0.   v5.[|java:io:SerializationHandleMap.threshold|]  := v1;
#L0985c4.   v1:= v5.[|java:io:SerializationHandleMap.threshold|] ;
#L0985c8.   v1:= (long)v1  @type i2l;
#L0985ca.   v3:= 10000  @length wide16;
#L0985ce.   v1:= v1 * v3  @type long;
#L0985d0.   v3:= 7500  @length wide16;
#L0985d4.   v1:= v1 / v3  @type long;
#L0985d6.   v0:= (int)v1  @type l2i;
#L0985d8.   call temp:=  [|java:io:SerializationHandleMap.resizeArrays|](v5, v0) @signature [|Ljava/io/SerializationHandleMap;.resizeArrays:(I)V|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L0985de.   return @void ;

   }
    procedure [|int|] [|java:io:SerializationHandleMap.findIndex|] ([|java:io:SerializationHandleMap|] v4 @type (this), [|java:lang:Object|] v5 @type (object), [|java:lang:Object|][] v6 @type (object)) @owner [|java:io:SerializationHandleMap|] @signature [|Ljava/io/SerializationHandleMap;.findIndex:(Ljava/lang/Object;[Ljava/lang/Object;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0985f0.   v2:= v6.length;
#L0985f2.   call temp:=  [|java:io:SerializationHandleMap.getModuloHash|](v4, v5, v2) @signature [|Ljava/io/SerializationHandleMap;.getModuloHash:(Ljava/lang/Object;I)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L0985f8.   v0:= temp;
#L0985fa.   v3:= v0 + v2  @type int;
#L0985fe.   v3:= v3 + -1;
#L098602.   v1:= v3 % v2  @type int;
#L098606.   if v0 == v1 then goto L09861a;
#L09860a.   v3:= v6[v0]  @type object;
#L09860e.   if v3 == v5 then goto L09861a;
#L098612.   v3:= v6[v0]  @type object;
#L098616.   if v3 != 0 then goto L09861c;
#L09861a.   return v0;
#L09861c.   v3:= v0 + 1;
#L098620.   v0:= v3 % v2  @type int;
#L098624.   goto L098606;

   }
    procedure [|int|] [|java:io:SerializationHandleMap.getModuloHash|] ([|java:io:SerializationHandleMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|int|] v4) @owner [|java:io:SerializationHandleMap|] @signature [|Ljava/io/SerializationHandleMap;.getModuloHash:(Ljava/lang/Object;I)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L098638.   call temp:=  [|java:lang:System.identityHashCode|](v3) @signature [|Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:System|] @type static;
#L09863e.   v0:= temp;
#L098640.    v1:= nan;
#L098646.   v0:= v0 ^& v1  @type int;
#L098648.   v0:= v0 % v4  @type int;
#L09864a.   return v0;

   }
    procedure [|void|] [|java:io:SerializationHandleMap.rehash|] ([|java:io:SerializationHandleMap|] v5 @type (this)) @owner [|java:io:SerializationHandleMap|] @signature [|Ljava/io/SerializationHandleMap;.rehash:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09865c.   v1:= v5.[|java:io:SerializationHandleMap.keys|]   @type object;
#L098660.   v1:= v1.length;
#L098662.   v0:= v1 * 2;
#L098666.   call temp:=  [|java:io:SerializationHandleMap.resizeArrays|](v5, v0) @signature [|Ljava/io/SerializationHandleMap;.resizeArrays:(I)V|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L09866c.   v1:= v5.[|java:io:SerializationHandleMap.keys|]   @type object;
#L098670.   v1:= v1.length;
#L098672.   v1:= (long)v1  @type i2l;
#L098674.   v3:= 7500  @length wide16;
#L098678.   v1:= v1 * v3  @type long;
#L09867a.   v3:= 10000  @length wide16;
#L09867e.   v1:= v1 / v3  @type long;
#L098680.   v1:= (int)v1  @type l2i;
#L098682.   v5.[|java:io:SerializationHandleMap.threshold|]  := v1;
#L098686.   return @void ;

   }
    procedure [|void|] [|java:io:SerializationHandleMap.resizeArrays|] ([|java:io:SerializationHandleMap|] v7 @type (this), [|int|] v8) @owner [|java:io:SerializationHandleMap|] @signature [|Ljava/io/SerializationHandleMap;.resizeArrays:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L098698.   v3:= v7.[|java:io:SerializationHandleMap.keys|]   @type object;
#L09869c.   v4:= v7.[|java:io:SerializationHandleMap.values|]   @type object;
#L0986a0.   v6:= new [|java:lang:Object|][v8];
#L0986a4.   v7.[|java:io:SerializationHandleMap.keys|]  := v6 @type object;
#L0986a8.   v6:= new [|int|][v8];
#L0986ac.   v7.[|java:io:SerializationHandleMap.values|]  := v6 @type object;
#L0986b0.   if v3 == 0 then goto L0986e6;
#L0986b4.   v0:= 0  @length 4;
#L0986b6.   v6:= v3.length;
#L0986b8.   if v0 >= v6 then goto L0986e6;
#L0986bc.   v2:= v3[v0]  @type object;
#L0986c0.   v5:= v4[v0];
#L0986c4.   v6:= v7.[|java:io:SerializationHandleMap.keys|]   @type object;
#L0986c8.   call temp:=  [|java:io:SerializationHandleMap.findIndex|](v7, v2, v6) @signature [|Ljava/io/SerializationHandleMap;.findIndex:(Ljava/lang/Object;[Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L0986ce.   v1:= temp;
#L0986d0.   v6:= v7.[|java:io:SerializationHandleMap.keys|]   @type object;
#L0986d4.   v6[v1]:= v2  @type object;
#L0986d8.   v6:= v7.[|java:io:SerializationHandleMap.values|]   @type object;
#L0986dc.   v6[v1]:= v5;
#L0986e0.   v0:= v0 + 1;
#L0986e4.   goto L0986b6;
#L0986e6.   return @void ;

   }
    procedure [|int|] [|java:io:SerializationHandleMap.get|] ([|java:io:SerializationHandleMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:io:SerializationHandleMap|] @signature [|Ljava/io/SerializationHandleMap;.get:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0986f8.   v1:= v2.[|java:io:SerializationHandleMap.keys|]   @type object;
#L0986fc.   call temp:=  [|java:io:SerializationHandleMap.findIndex|](v2, v3, v1) @signature [|Ljava/io/SerializationHandleMap;.findIndex:(Ljava/lang/Object;[Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L098702.   v0:= temp;
#L098704.   v1:= v2.[|java:io:SerializationHandleMap.keys|]   @type object;
#L098708.   v1:= v1[v0]  @type object;
#L09870c.   if v1 != v3 then goto L09871a;
#L098710.   v1:= v2.[|java:io:SerializationHandleMap.values|]   @type object;
#L098714.   v1:= v1[v0];
#L098718.   return v1;
#L09871a.   v1:= -1  @length 4;
#L09871c.   goto L098718;

   }
    procedure [|boolean|] [|java:io:SerializationHandleMap.isEmpty|] ([|java:io:SerializationHandleMap|] v1 @type (this)) @owner [|java:io:SerializationHandleMap|] @signature [|Ljava/io/SerializationHandleMap;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L098730.   v0:= v1.[|java:io:SerializationHandleMap.size|] ;
#L098734.   if v0 != 0 then goto L09873c;
#L098738.   v0:= 1  @length 4;
#L09873a.   return v0;
#L09873c.   v0:= 0  @length 4;
#L09873e.   goto L09873a;

   }
    procedure [|int|] [|java:io:SerializationHandleMap.put|] ([|java:io:SerializationHandleMap|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|int|] v8) @owner [|java:io:SerializationHandleMap|] @signature [|Ljava/io/SerializationHandleMap;.put:(Ljava/lang/Object;I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L098750.   v0:= v7  @type object;
#L098752.   v1:= v8;
#L098754.   v4:= v6.[|java:io:SerializationHandleMap.keys|]   @type object;
#L098758.   call temp:=  [|java:io:SerializationHandleMap.findIndex|](v6, v0, v4) @signature [|Ljava/io/SerializationHandleMap;.findIndex:(Ljava/lang/Object;[Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L09875e.   v2:= temp;
#L098760.   v4:= v6.[|java:io:SerializationHandleMap.keys|]   @type object;
#L098764.   v4:= v4[v2]  @type object;
#L098768.   if v4 == v0 then goto L0987a4;
#L09876c.   v4:= v6.[|java:io:SerializationHandleMap.size|] ;
#L098770.   v4:= v4 + 1;
#L098774.   v6.[|java:io:SerializationHandleMap.size|]  := v4;
#L098778.   v5:= v6.[|java:io:SerializationHandleMap.threshold|] ;
#L09877c.   if v4 <= v5 then goto L098792;
#L098780.   call temp:=  [|java:io:SerializationHandleMap.rehash|](v6) @signature [|Ljava/io/SerializationHandleMap;.rehash:()V|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L098786.   v4:= v6.[|java:io:SerializationHandleMap.keys|]   @type object;
#L09878a.   call temp:=  [|java:io:SerializationHandleMap.findIndex|](v6, v0, v4) @signature [|Ljava/io/SerializationHandleMap;.findIndex:(Ljava/lang/Object;[Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L098790.   v2:= temp;
#L098792.   v4:= v6.[|java:io:SerializationHandleMap.keys|]   @type object;
#L098796.   v4[v2]:= v0  @type object;
#L09879a.   v4:= v6.[|java:io:SerializationHandleMap.values|]   @type object;
#L09879e.   v5:= -1  @length 4;
#L0987a0.   v4[v2]:= v5;
#L0987a4.   v4:= v6.[|java:io:SerializationHandleMap.values|]   @type object;
#L0987a8.   v3:= v4[v2];
#L0987ac.   v4:= v6.[|java:io:SerializationHandleMap.values|]   @type object;
#L0987b0.   v4[v2]:= v1;
#L0987b4.   return v3;

   }
    procedure [|int|] [|java:io:SerializationHandleMap.remove|] ([|java:io:SerializationHandleMap|] v12 @type (this), [|java:lang:Object|] v13 @type (object)) @owner [|java:io:SerializationHandleMap|] @signature [|Ljava/io/SerializationHandleMap;.remove:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L0987c8.   v9:= -1  @length 4;
#L0987ca.   v8:= 1  @length 4;
#L0987cc.   v7:= 0  @length 4;
#L0987ce.   v10:= v12.[|java:io:SerializationHandleMap.keys|]   @type object;
#L0987d2.   call temp:=  [|java:io:SerializationHandleMap.findIndex|](v12, v13, v10) @signature [|Ljava/io/SerializationHandleMap;.findIndex:(Ljava/lang/Object;[Ljava/lang/Object;)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L0987d8.   v4:= temp;
#L0987da.   v2:= v4;
#L0987dc.   v10:= v12.[|java:io:SerializationHandleMap.keys|]   @type object;
#L0987e0.   v10:= v10[v2]  @type object;
#L0987e4.   if v10 == v13 then goto L0987ec;
#L0987e8.   v6:= v9;
#L0987ea.   return v6;
#L0987ec.   v10:= v12.[|java:io:SerializationHandleMap.values|]   @type object;
#L0987f0.   v6:= v10[v2];
#L0987f4.   v10:= v12.[|java:io:SerializationHandleMap.keys|]   @type object;
#L0987f8.   v3:= v10.length;
#L0987fa.   v10:= v4 + 2;
#L0987fe.   v4:= v10 % v3  @type int;
#L098802.   v10:= v12.[|java:io:SerializationHandleMap.keys|]   @type object;
#L098806.   v5:= v10[v4]  @type object;
#L09880a.   if v5 != 0 then goto L09882e;
#L09880e.   v7:= v12.[|java:io:SerializationHandleMap.size|] ;
#L098812.   v7:= v7 + -1;
#L098816.   v12.[|java:io:SerializationHandleMap.size|]  := v7;
#L09881a.   v7:= v12.[|java:io:SerializationHandleMap.keys|]   @type object;
#L09881e.   v8:= 0  @length 4;
#L098820.   v7[v2]:= v8  @type object;
#L098824.   v7:= v12.[|java:io:SerializationHandleMap.values|]   @type object;
#L098828.   v7[v2]:= v9;
#L09882c.   goto L0987ea;
#L09882e.   call temp:=  [|java:io:SerializationHandleMap.getModuloHash|](v12, v5, v3) @signature [|Ljava/io/SerializationHandleMap;.getModuloHash:(Ljava/lang/Object;I)I|] @classDescriptor [|java:io:SerializationHandleMap|] @type direct;
#L098834.   v0:= temp;
#L098836.   if v0 <= v2 then goto L09886a;
#L09883a.   v1:= v8;
#L09883c.   if v4 >= v2 then goto L098872;
#L098840.   if v1 != 0 then goto L098848;
#L098844.   if v0 > v4 then goto L09886e;
#L098848.   v1:= v8;
#L09884a.   if v1 != 0 then goto L0987fa;
#L09884e.   v10:= v12.[|java:io:SerializationHandleMap.keys|]   @type object;
#L098852.   v10[v2]:= v5  @type object;
#L098856.   v10:= v12.[|java:io:SerializationHandleMap.values|]   @type object;
#L09885a.   v11:= v12.[|java:io:SerializationHandleMap.values|]   @type object;
#L09885e.   v11:= v11[v4];
#L098862.   v10[v2]:= v11;
#L098866.   v2:= v4;
#L098868.   goto L0987fa;
#L09886a.   v1:= v7;
#L09886c.   goto L09883c;
#L09886e.   v1:= v7;
#L098870.   goto L09884a;
#L098872.   if v1 == 0 then goto L09887e;
#L098876.   if v0 > v4 then goto L09887e;
#L09887a.   v1:= v8;
#L09887c.   goto L09884a;
#L09887e.   v1:= v7;
#L098880.   goto L09887c;

   }
record [|java:io:StreamCorruptedException|]  @type class @AccessFlag PUBLIC  extends [|java:io:ObjectStreamException|] {
   }
      global [|long|] @@[|java:io:StreamCorruptedException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:StreamCorruptedException.<init>|] ([|java:io:StreamCorruptedException|] v0 @type (this)) @owner [|java:io:StreamCorruptedException|] @signature [|Ljava/io/StreamCorruptedException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L098894.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0) @signature [|Ljava/io/ObjectStreamException;.<init>:()V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L09889a.   return @void ;

   }
    procedure [|void|] [|java:io:StreamCorruptedException.<init>|] ([|java:io:StreamCorruptedException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:StreamCorruptedException|] @signature [|Ljava/io/StreamCorruptedException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0988ac.   call temp:=  [|java:io:ObjectStreamException.<init>|](v0, v1) @signature [|Ljava/io/ObjectStreamException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:ObjectStreamException|] @type direct;
#L0988b2.   return @void ;

   }
record [|java:io:StreamTokenizer|]  @type class @AccessFlag PUBLIC  {
      [|boolean|] [|java:io:StreamTokenizer.forceLowercase|]    @AccessFlag PRIVATE;
      [|java:io:Reader|] [|java:io:StreamTokenizer.inReader|]    @AccessFlag PRIVATE;
      [|java:io:InputStream|] [|java:io:StreamTokenizer.inStream|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:StreamTokenizer.isEOLSignificant|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:StreamTokenizer.lastCr|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:StreamTokenizer.lineNumber|]    @AccessFlag PRIVATE;
      [|double|] [|java:io:StreamTokenizer.nval|]    @AccessFlag PUBLIC;
      [|int|] [|java:io:StreamTokenizer.peekChar|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:StreamTokenizer.pushBackToken|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:StreamTokenizer.slashSlashComments|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:io:StreamTokenizer.slashStarComments|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:io:StreamTokenizer.sval|]    @AccessFlag PUBLIC;
      [|byte|][] [|java:io:StreamTokenizer.tokenTypes|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:StreamTokenizer.ttype|]    @AccessFlag PUBLIC;
   }
      global [|byte|] @@[|java:io:StreamTokenizer.TOKEN_COMMENT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|byte|] @@[|java:io:StreamTokenizer.TOKEN_DIGIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|byte|] @@[|java:io:StreamTokenizer.TOKEN_QUOTE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|byte|] @@[|java:io:StreamTokenizer.TOKEN_WHITE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|byte|] @@[|java:io:StreamTokenizer.TOKEN_WORD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:io:StreamTokenizer.TT_EOF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:io:StreamTokenizer.TT_EOL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:io:StreamTokenizer.TT_NUMBER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:io:StreamTokenizer.TT_UNKNOWN|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:io:StreamTokenizer.TT_WORD|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:io:StreamTokenizer.<init>|] ([|java:io:StreamTokenizer|] v2 @type (this)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0988c4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0988ca.   v0:= -4  @length 4;
#L0988cc.   v2.[|java:io:StreamTokenizer.ttype|]  := v0;
#L0988d0.   v0:= 256  @length 16;
#L0988d4.   v0:= new [|byte|][v0];
#L0988d8.   v2.[|java:io:StreamTokenizer.tokenTypes|]  := v0 @type object;
#L0988dc.   v0:= 1  @length 4;
#L0988de.   v2.[|java:io:StreamTokenizer.lineNumber|]  := v0;
#L0988e2.   v0:= -2  @length 4;
#L0988e4.   v2.[|java:io:StreamTokenizer.peekChar|]  := v0;
#L0988e8.   v0:= 65  @length 16;
#L0988ec.   v1:= 90  @length 16;
#L0988f0.   call temp:=  [|java:io:StreamTokenizer.wordChars|](v2, v0, v1) @signature [|Ljava/io/StreamTokenizer;.wordChars:(II)V|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L0988f6.   v0:= 97  @length 16;
#L0988fa.   v1:= 122  @length 16;
#L0988fe.   call temp:=  [|java:io:StreamTokenizer.wordChars|](v2, v0, v1) @signature [|Ljava/io/StreamTokenizer;.wordChars:(II)V|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L098904.   v0:= 160  @length 16;
#L098908.   v1:= 255  @length 16;
#L09890c.   call temp:=  [|java:io:StreamTokenizer.wordChars|](v2, v0, v1) @signature [|Ljava/io/StreamTokenizer;.wordChars:(II)V|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L098912.   v0:= 0  @length 4;
#L098914.   v1:= 32  @length 16;
#L098918.   call temp:=  [|java:io:StreamTokenizer.whitespaceChars|](v2, v0, v1) @signature [|Ljava/io/StreamTokenizer;.whitespaceChars:(II)V|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L09891e.   v0:= 47  @length 16;
#L098922.   call temp:=  [|java:io:StreamTokenizer.commentChar|](v2, v0) @signature [|Ljava/io/StreamTokenizer;.commentChar:(I)V|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L098928.   v0:= 34  @length 16;
#L09892c.   call temp:=  [|java:io:StreamTokenizer.quoteChar|](v2, v0) @signature [|Ljava/io/StreamTokenizer;.quoteChar:(I)V|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L098932.   v0:= 39  @length 16;
#L098936.   call temp:=  [|java:io:StreamTokenizer.quoteChar|](v2, v0) @signature [|Ljava/io/StreamTokenizer;.quoteChar:(I)V|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L09893c.   call temp:=  [|java:io:StreamTokenizer.parseNumbers|](v2) @signature [|Ljava/io/StreamTokenizer;.parseNumbers:()V|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L098942.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.<init>|] ([|java:io:StreamTokenizer|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.<init>:(Ljava/io/InputStream;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L098954.   call temp:=  [|java:io:StreamTokenizer.<init>|](v2) @signature [|Ljava/io/StreamTokenizer;.<init>:()V|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L09895a.   if v3 != 0 then goto L09896e;
#L09895e.   v0:= new [|java:lang:NullPointerException|];
#L098962.   v1:= "is == null" @type (object, string);
#L098966.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L09896c.   throw v0;
#L09896e.   v2.[|java:io:StreamTokenizer.inStream|]  := v3 @type object;
#L098972.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.<init>|] ([|java:io:StreamTokenizer|] v2 @type (this), [|java:io:Reader|] v3 @type (object)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.<init>:(Ljava/io/Reader;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L098984.   call temp:=  [|java:io:StreamTokenizer.<init>|](v2) @signature [|Ljava/io/StreamTokenizer;.<init>:()V|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L09898a.   if v3 != 0 then goto L09899e;
#L09898e.   v0:= new [|java:lang:NullPointerException|];
#L098992.   v1:= "r == null" @type (object, string);
#L098996.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L09899c.   throw v0;
#L09899e.   v2.[|java:io:StreamTokenizer.inReader|]  := v3 @type object;
#L0989a2.   return @void ;

   }
    procedure [|int|] [|java:io:StreamTokenizer.read|] ([|java:io:StreamTokenizer|] v1 @type (this)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.read:()I|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0989b4.   v0:= v1.[|java:io:StreamTokenizer.inStream|]   @type object;
#L0989b8.   if v0 != 0 then goto L0989ca;
#L0989bc.   v0:= v1.[|java:io:StreamTokenizer.inReader|]   @type object;
#L0989c0.   call temp:=  [|java:io:Reader.read|](v0) @signature [|Ljava/io/Reader;.read:()I|] @classDescriptor [|java:io:Reader|] @type virtual;
#L0989c6.   v0:= temp;
#L0989c8.   return v0;
#L0989ca.   v0:= v1.[|java:io:StreamTokenizer.inStream|]   @type object;
#L0989ce.   call temp:=  [|java:io:InputStream.read|](v0) @signature [|Ljava/io/InputStream;.read:()I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0989d4.   v0:= temp;
#L0989d6.   goto L0989c8;

   }
    procedure [|void|] [|java:io:StreamTokenizer.commentChar|] ([|java:io:StreamTokenizer|] v2 @type (this), [|int|] v3) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.commentChar:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0989e8.   if v3 < 0 then goto L098a00;
#L0989ec.   v0:= v2.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L0989f0.   v0:= v0.length;
#L0989f2.   if v3 >= v0 then goto L098a00;
#L0989f6.   v0:= v2.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L0989fa.   v1:= 1  @length 4;
#L0989fc.   v0[v3]:= v1  @byte;
#L098a00.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.eolIsSignificant|] ([|java:io:StreamTokenizer|] v0 @type (this), [|boolean|] v1) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.eolIsSignificant:(Z)V|] @Access PUBLIC {
      local temp ;
      
#L098a14.   v0.[|java:io:StreamTokenizer.isEOLSignificant|]  := v1 @boolean;
#L098a18.   return @void ;

   }
    procedure [|int|] [|java:io:StreamTokenizer.lineno|] ([|java:io:StreamTokenizer|] v1 @type (this)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.lineno:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L098a2c.   v0:= v1.[|java:io:StreamTokenizer.lineNumber|] ;
#L098a30.   return v0;

   }
    procedure [|void|] [|java:io:StreamTokenizer.lowerCaseMode|] ([|java:io:StreamTokenizer|] v0 @type (this), [|boolean|] v1) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.lowerCaseMode:(Z)V|] @Access PUBLIC {
      local temp ;
      
#L098a44.   v0.[|java:io:StreamTokenizer.forceLowercase|]  := v1 @boolean;
#L098a48.   return @void ;

   }
    procedure [|int|] [|java:io:StreamTokenizer.nextToken|] ([|java:io:StreamTokenizer|] v15 @type (this)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.nextToken:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L098a5c.   v13:= v15.[|java:io:StreamTokenizer.pushBackToken|]   @boolean;
#L098a60.   if v13 == 0 then goto L098a7a;
#L098a64.   v13:= 0  @length 4;
#L098a66.   v15.[|java:io:StreamTokenizer.pushBackToken|]  := v13 @boolean;
#L098a6a.   v13:= v15.[|java:io:StreamTokenizer.ttype|] ;
#L098a6e.   v14:= -4  @length 4;
#L098a70.   if v13 == v14 then goto L098a7a;
#L098a74.   v2:= v15.[|java:io:StreamTokenizer.ttype|] ;
#L098a78.   return v2;
#L098a7a.   v13:= 0  @length 4;
#L098a7c.   v15.[|java:io:StreamTokenizer.sval|]  := v13 @type object;
#L098a80.   v13:= v15.[|java:io:StreamTokenizer.peekChar|] ;
#L098a84.   v14:= -2  @length 4;
#L098a86.   if v13 != v14 then goto L098abe;
#L098a8a.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098a90.   v2:= temp;
#L098a92.   v13:= v15.[|java:io:StreamTokenizer.lastCr|]   @boolean;
#L098a96.   if v13 == 0 then goto L098ab0;
#L098a9a.   v13:= 10  @length 16;
#L098a9e.   if v2 != v13 then goto L098ab0;
#L098aa2.   v13:= 0  @length 4;
#L098aa4.   v15.[|java:io:StreamTokenizer.lastCr|]  := v13 @boolean;
#L098aa8.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098aae.   v2:= temp;
#L098ab0.   v13:= -1  @length 4;
#L098ab2.   if v2 != v13 then goto L098ac4;
#L098ab6.   v2:= -1  @length 4;
#L098ab8.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098abc.   goto L098a78;
#L098abe.   v2:= v15.[|java:io:StreamTokenizer.peekChar|] ;
#L098ac2.   goto L098a92;
#L098ac4.   v13:= 255  @length 16;
#L098ac8.   if v2 <= v13 then goto L098b0a;
#L098acc.   v3:= 8  @length 16;
#L098ad0.   v13:= v3 ^& 4;
#L098ad4.   if v13 == 0 then goto L098b92;
#L098ad8.   v13:= 13  @length 16;
#L098adc.   if v2 != v13 then goto L098b3a;
#L098ae0.   v13:= v15.[|java:io:StreamTokenizer.lineNumber|] ;
#L098ae4.   v13:= v13 + 1;
#L098ae8.   v15.[|java:io:StreamTokenizer.lineNumber|]  := v13;
#L098aec.   v13:= v15.[|java:io:StreamTokenizer.isEOLSignificant|]   @boolean;
#L098af0.   if v13 == 0 then goto L098b14;
#L098af4.   v13:= 1  @length 4;
#L098af6.   v15.[|java:io:StreamTokenizer.lastCr|]  := v13 @boolean;
#L098afa.   v13:= -2  @length 4;
#L098afc.   v15.[|java:io:StreamTokenizer.peekChar|]  := v13;
#L098b00.   v2:= 10  @length 16;
#L098b04.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098b08.   goto L098a78;
#L098b0a.   v13:= v15.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L098b0e.   v3:= v13[v2]  @byte;
#L098b12.   goto L098ad0;
#L098b14.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098b1a.   v2:= temp;
#L098b1c.   v13:= 10  @length 16;
#L098b20.   if v2 != v13 then goto L098b2c;
#L098b24.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098b2a.   v2:= temp;
#L098b2c.   v13:= -1  @length 4;
#L098b2e.   if v2 != v13 then goto L098b7a;
#L098b32.   v2:= -1  @length 4;
#L098b34.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098b38.   goto L098a78;
#L098b3a.   v13:= 10  @length 16;
#L098b3e.   if v2 != v13 then goto L098b70;
#L098b42.   v13:= v15.[|java:io:StreamTokenizer.lineNumber|] ;
#L098b46.   v13:= v13 + 1;
#L098b4a.   v15.[|java:io:StreamTokenizer.lineNumber|]  := v13;
#L098b4e.   v13:= v15.[|java:io:StreamTokenizer.isEOLSignificant|]   @boolean;
#L098b52.   if v13 == 0 then goto L098b66;
#L098b56.   v13:= -2  @length 4;
#L098b58.   v15.[|java:io:StreamTokenizer.peekChar|]  := v13;
#L098b5c.   v2:= 10  @length 16;
#L098b60.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098b64.   goto L098a78;
#L098b66.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098b6c.   v2:= temp;
#L098b6e.   goto L098b2c;
#L098b70.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098b76.   v2:= temp;
#L098b78.   goto L098b2c;
#L098b7a.   v13:= 255  @length 16;
#L098b7e.   if v2 <= v13 then goto L098b88;
#L098b82.   v3:= 8  @length 16;
#L098b86.   goto L098ad0;
#L098b88.   v13:= v15.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L098b8c.   v3:= v13[v2]  @byte;
#L098b90.   goto L098b86;
#L098b92.   v13:= v3 ^& 16;
#L098b96.   if v13 == 0 then goto L098c42;
#L098b9a.   v5:= new [|java:lang:StringBuilder|];
#L098b9e.   v13:= 20  @length 16;
#L098ba2.   call temp:=  [|java:lang:StringBuilder.<init>|](v5, v13) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L098ba8.   v7:= 0  @length 4;
#L098baa.   v13:= 45  @length 16;
#L098bae.   if v2 != v13 then goto L098c0c;
#L098bb2.   v1:= 1  @length 4;
#L098bb4.   v13:= 46  @length 16;
#L098bb8.   if v2 != v13 then goto L098bbe;
#L098bbc.   v7:= 1  @length 4;
#L098bbe.   v13:= (char)v2  @type i2c;
#L098bc0.   call temp:=  [|java:lang:StringBuilder.append|](v5, v13) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L098bc6.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098bcc.   v2:= temp;
#L098bce.   v13:= 48  @length 16;
#L098bd2.   if v2 < v13 then goto L098bde;
#L098bd6.   v13:= 57  @length 16;
#L098bda.   if v2 <= v13 then goto L098bb4;
#L098bde.   if v7 != 0 then goto L098bea;
#L098be2.   v13:= 46  @length 16;
#L098be6.   if v2 == v13 then goto L098bb4;
#L098bea.   v15.[|java:io:StreamTokenizer.peekChar|]  := v2;
#L098bee.   if v1 == 0 then goto L098c10;
#L098bf2.   call temp:=  [|java:lang:StringBuilder.length|](v5) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L098bf8.   v13:= temp;
#L098bfa.   v14:= 1  @length 4;
#L098bfc.   if v13 != v14 then goto L098c10;
#L098c00.   v2:= 45  @length 16;
#L098c04.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098c08.   goto L098a78;
#L098c0c.   v1:= 0  @length 4;
#L098c0e.   goto L098bb4;
#L098c10.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L098c16.   v13:= temp  @type object;
#L098c18.   call temp:=  [|java:lang:Double.valueOf|](v13) @signature [|Ljava/lang/Double;.valueOf:(Ljava/lang/String;)Ljava/lang/Double;|] @classDescriptor [|java:lang:Double|] @type static;
#L098c1e.   v13:= temp  @type object;
#L098c20.   call temp:=  [|java:lang:Double.doubleValue|](v13) @signature [|Ljava/lang/Double;.doubleValue:()D|] @classDescriptor [|java:lang:Double|] @type virtual;
#L098c26.   v13:= temp  @type wide;
#L098c28.   v15.[|java:io:StreamTokenizer.nval|]  := v13 @wide;
#L098c2c.   v2:= -2  @length 4;
#L098c2e.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098c32.   goto L098a78;
#L098c36.   v6:= Exception  @type object;
#L098c38.   v13:= 0  @length wide16;
#L098c3c.   v15.[|java:io:StreamTokenizer.nval|]  := v13 @wide;
#L098c40.   goto L098c2c;
#L098c42.   v13:= v3 ^& 8;
#L098c46.   if v13 == 0 then goto L098cc0;
#L098c4a.   v12:= new [|java:lang:StringBuilder|];
#L098c4e.   v13:= 20  @length 16;
#L098c52.   call temp:=  [|java:lang:StringBuilder.<init>|](v12, v13) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L098c58.   v13:= (char)v2  @type i2c;
#L098c5a.   call temp:=  [|java:lang:StringBuilder.append|](v12, v13) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L098c60.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098c66.   v2:= temp;
#L098c68.   v13:= -1  @length 4;
#L098c6a.   if v2 == v13 then goto L098c86;
#L098c6e.   v13:= 256  @length 16;
#L098c72.   if v2 >= v13 then goto L098c58;
#L098c76.   v13:= v15.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L098c7a.   v13:= v13[v2]  @byte;
#L098c7e.   v13:= v13 ^& 24;
#L098c82.   if v13 != 0 then goto L098c58;
#L098c86.   v15.[|java:io:StreamTokenizer.peekChar|]  := v2;
#L098c8a.   call temp:=  [|java:lang:StringBuilder.toString|](v12) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L098c90.   v13:= temp  @type object;
#L098c92.   v15.[|java:io:StreamTokenizer.sval|]  := v13 @type object;
#L098c96.   v13:= v15.[|java:io:StreamTokenizer.forceLowercase|]   @boolean;
#L098c9a.   if v13 == 0 then goto L098cb6;
#L098c9e.   v13:= v15.[|java:io:StreamTokenizer.sval|]   @type object;
#L098ca2.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L098ca8.   v14:= temp  @type object;
#L098caa.   call temp:=  [|java:lang:String.toLowerCase|](v13, v14) @signature [|Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L098cb0.   v13:= temp  @type object;
#L098cb2.   v15.[|java:io:StreamTokenizer.sval|]  := v13 @type object;
#L098cb6.   v2:= -3  @length 4;
#L098cb8.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098cbc.   goto L098a78;
#L098cc0.   v13:= 2  @length 4;
#L098cc2.   if v3 != v13 then goto L098df2;
#L098cc6.   v8:= v2;
#L098cc8.   v10:= new [|java:lang:StringBuilder|];
#L098ccc.   call temp:=  [|java:lang:StringBuilder.<init>|](v10) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L098cd2.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098cd8.   v9:= temp;
#L098cda.   if v9 < 0 then goto L098dca;
#L098cde.   if v9 == v8 then goto L098dca;
#L098ce2.   v13:= 13  @length 16;
#L098ce6.   if v9 == v13 then goto L098dca;
#L098cea.   v13:= 10  @length 16;
#L098cee.   if v9 == v13 then goto L098dca;
#L098cf2.   v11:= 1  @length 4;
#L098cf4.   v13:= 92  @length 16;
#L098cf8.   if v9 != v13 then goto L098d40;
#L098cfc.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098d02.   v0:= temp;
#L098d04.   v13:= 55  @length 16;
#L098d08.   if v0 > v13 then goto L098d98;
#L098d0c.   v13:= 48  @length 16;
#L098d10.   if v0 < v13 then goto L098d98;
#L098d14.   v4:= v0 + -48;
#L098d18.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098d1e.   v0:= temp;
#L098d20.   v13:= 55  @length 16;
#L098d24.   if v0 > v13 then goto L098d30;
#L098d28.   v13:= 48  @length 16;
#L098d2c.   if v0 >= v13 then goto L098d56;
#L098d30.   v11:= 0  @length 4;
#L098d32.   if v11 != 0 then goto L098d94;
#L098d36.   v13:= (char)v4  @type i2c;
#L098d38.   call temp:=  [|java:lang:StringBuilder.append|](v10, v13) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L098d3e.   v9:= v0;
#L098d40.   if v11 == 0 then goto L098cda;
#L098d44.   v13:= (char)v9  @type i2c;
#L098d46.   call temp:=  [|java:lang:StringBuilder.append|](v10, v13) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L098d4c.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098d52.   v9:= temp;
#L098d54.   goto L098cda;
#L098d56.   v13:= v4 * 8;
#L098d5a.   v14:= v0 + -48;
#L098d5e.   v4:= v13 + v14  @type int;
#L098d62.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098d68.   v0:= temp;
#L098d6a.   v13:= 31  @length 16;
#L098d6e.   if v4 > v13 then goto L098d82;
#L098d72.   v13:= 55  @length 16;
#L098d76.   if v0 > v13 then goto L098d82;
#L098d7a.   v13:= 48  @length 16;
#L098d7e.   if v0 >= v13 then goto L098d86;
#L098d82.   v11:= 0  @length 4;
#L098d84.   goto L098d32;
#L098d86.   v13:= v4 * 8;
#L098d8a.   v14:= v0 + -48;
#L098d8e.   v4:= v13 + v14  @type int;
#L098d92.   goto L098d32;
#L098d94.   v9:= v4;
#L098d96.   goto L098d40;
#L098d98.   goto L098f48;
#L098d9e.   v9:= v0;
#L098da0.   goto L098d40;
#L098da2.   v9:= 7  @length 4;
#L098da4.   goto L098d40;
#L098da6.   v9:= 8  @length 16;
#L098daa.   goto L098d40;
#L098dac.   v9:= 12  @length 16;
#L098db0.   goto L098d40;
#L098db2.   v9:= 10  @length 16;
#L098db6.   goto L098d40;
#L098db8.   v9:= 13  @length 16;
#L098dbc.   goto L098d40;
#L098dbe.   v9:= 9  @length 16;
#L098dc2.   goto L098d40;
#L098dc4.   v9:= 11  @length 16;
#L098dc8.   goto L098d40;
#L098dca.   if v9 != v8 then goto L098dd6;
#L098dce.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098dd4.   v9:= temp;
#L098dd6.   v15.[|java:io:StreamTokenizer.peekChar|]  := v9;
#L098dda.   v15.[|java:io:StreamTokenizer.ttype|]  := v8;
#L098dde.   call temp:=  [|java:lang:StringBuilder.toString|](v10) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L098de4.   v13:= temp  @type object;
#L098de6.   v15.[|java:io:StreamTokenizer.sval|]  := v13 @type object;
#L098dea.   v2:= v15.[|java:io:StreamTokenizer.ttype|] ;
#L098dee.   goto L098a78;
#L098df2.   v13:= 47  @length 16;
#L098df6.   if v2 != v13 then goto L098f00;
#L098dfa.   v13:= v15.[|java:io:StreamTokenizer.slashSlashComments|]   @boolean;
#L098dfe.   if v13 != 0 then goto L098e0a;
#L098e02.   v13:= v15.[|java:io:StreamTokenizer.slashStarComments|]   @boolean;
#L098e06.   if v13 == 0 then goto L098f00;
#L098e0a.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098e10.   v2:= temp;
#L098e12.   v13:= 42  @length 16;
#L098e16.   if v2 != v13 then goto L098eae;
#L098e1a.   v13:= v15.[|java:io:StreamTokenizer.slashStarComments|]   @boolean;
#L098e1e.   if v13 == 0 then goto L098eae;
#L098e22.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098e28.   v9:= temp;
#L098e2a.   v2:= v9;
#L098e2c.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098e32.   v9:= temp;
#L098e34.   v13:= -1  @length 4;
#L098e36.   if v2 != v13 then goto L098e4a;
#L098e3a.   v13:= -1  @length 4;
#L098e3c.   v15.[|java:io:StreamTokenizer.peekChar|]  := v13;
#L098e40.   v2:= -1  @length 4;
#L098e42.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098e46.   goto L098a78;
#L098e4a.   v13:= 13  @length 16;
#L098e4e.   if v2 != v13 then goto L098e70;
#L098e52.   v13:= 10  @length 16;
#L098e56.   if v9 != v13 then goto L098e62;
#L098e5a.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098e60.   v9:= temp;
#L098e62.   v13:= v15.[|java:io:StreamTokenizer.lineNumber|] ;
#L098e66.   v13:= v13 + 1;
#L098e6a.   v15.[|java:io:StreamTokenizer.lineNumber|]  := v13;
#L098e6e.   goto L098e2a;
#L098e70.   v13:= 10  @length 16;
#L098e74.   if v2 != v13 then goto L098e86;
#L098e78.   v13:= v15.[|java:io:StreamTokenizer.lineNumber|] ;
#L098e7c.   v13:= v13 + 1;
#L098e80.   v15.[|java:io:StreamTokenizer.lineNumber|]  := v13;
#L098e84.   goto L098e2a;
#L098e86.   v13:= 42  @length 16;
#L098e8a.   if v2 != v13 then goto L098e2a;
#L098e8e.   v13:= 47  @length 16;
#L098e92.   if v9 != v13 then goto L098e2a;
#L098e96.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098e9c.   v13:= temp;
#L098e9e.   v15.[|java:io:StreamTokenizer.peekChar|]  := v13;
#L098ea2.   call temp:=  [|java:io:StreamTokenizer.nextToken|](v15) @signature [|Ljava/io/StreamTokenizer;.nextToken:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L098ea8.   v2:= temp;
#L098eaa.   goto L098a78;
#L098eae.   v13:= 47  @length 16;
#L098eb2.   if v2 != v13 then goto L098eea;
#L098eb6.   v13:= v15.[|java:io:StreamTokenizer.slashSlashComments|]   @boolean;
#L098eba.   if v13 == 0 then goto L098eea;
#L098ebe.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098ec4.   v2:= temp;
#L098ec6.   if v2 < 0 then goto L098eda;
#L098eca.   v13:= 13  @length 16;
#L098ece.   if v2 == v13 then goto L098eda;
#L098ed2.   v13:= 10  @length 16;
#L098ed6.   if v2 != v13 then goto L098ebe;
#L098eda.   v15.[|java:io:StreamTokenizer.peekChar|]  := v2;
#L098ede.   call temp:=  [|java:io:StreamTokenizer.nextToken|](v15) @signature [|Ljava/io/StreamTokenizer;.nextToken:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L098ee4.   v2:= temp;
#L098ee6.   goto L098a78;
#L098eea.   v13:= 1  @length 4;
#L098eec.   if v3 == v13 then goto L098f00;
#L098ef0.   v15.[|java:io:StreamTokenizer.peekChar|]  := v2;
#L098ef4.   v2:= 47  @length 16;
#L098ef8.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098efc.   goto L098a78;
#L098f00.   v13:= 1  @length 4;
#L098f02.   if v3 != v13 then goto L098f32;
#L098f06.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098f0c.   v2:= temp;
#L098f0e.   if v2 < 0 then goto L098f22;
#L098f12.   v13:= 13  @length 16;
#L098f16.   if v2 == v13 then goto L098f22;
#L098f1a.   v13:= 10  @length 16;
#L098f1e.   if v2 != v13 then goto L098f06;
#L098f22.   v15.[|java:io:StreamTokenizer.peekChar|]  := v2;
#L098f26.   call temp:=  [|java:io:StreamTokenizer.nextToken|](v15) @signature [|Ljava/io/StreamTokenizer;.nextToken:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type virtual;
#L098f2c.   v2:= temp;
#L098f2e.   goto L098a78;
#L098f32.   call temp:=  [|java:io:StreamTokenizer.read|](v15) @signature [|Ljava/io/StreamTokenizer;.read:()I|] @classDescriptor [|java:io:StreamTokenizer|] @type direct;
#L098f38.   v13:= temp;
#L098f3a.   v15.[|java:io:StreamTokenizer.peekChar|]  := v13;
#L098f3e.   v15.[|java:io:StreamTokenizer.ttype|]  := v2;
#L098f42.   goto L098a78;
#L098f46.   
#L098f48.   switch v0
                 | 97 => goto L098da2
                 | 98 => goto L098da6
                 | 102 => goto L098dac
                 | 110 => goto L098db2
                 | 114 => goto L098db8
                 | 116 => goto L098dbe
                 | 118 => goto L098dc4
                 | => goto L098d9e;
  catch  [|java:lang:NumberFormatException|] @[L098c10..L098c2c] goto L098c36;

   }
    procedure [|void|] [|java:io:StreamTokenizer.ordinaryChar|] ([|java:io:StreamTokenizer|] v2 @type (this), [|int|] v3) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.ordinaryChar:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L098fa4.   if v3 < 0 then goto L098fbc;
#L098fa8.   v0:= v2.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L098fac.   v0:= v0.length;
#L098fae.   if v3 >= v0 then goto L098fbc;
#L098fb2.   v0:= v2.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L098fb6.   v1:= 0  @length 4;
#L098fb8.   v0[v3]:= v1  @byte;
#L098fbc.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.ordinaryChars|] ([|java:io:StreamTokenizer|] v3 @type (this), [|int|] v4, [|int|] v5) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.ordinaryChars:(II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L098fd0.   if v4 >= 0 then goto L098fd6;
#L098fd4.   v4:= 0  @length 4;
#L098fd6.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L098fda.   v1:= v1.length;
#L098fdc.   if v5 <= v1 then goto L098fea;
#L098fe0.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L098fe4.   v1:= v1.length;
#L098fe6.   v5:= v1 + -1;
#L098fea.   v0:= v4;
#L098fec.   if v0 > v5 then goto L099000;
#L098ff0.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L098ff4.   v2:= 0  @length 4;
#L098ff6.   v1[v0]:= v2  @byte;
#L098ffa.   v0:= v0 + 1;
#L098ffe.   goto L098fec;
#L099000.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.parseNumbers|] ([|java:io:StreamTokenizer|] v4 @type (this)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.parseNumbers:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L099014.   v0:= 48  @length 16;
#L099018.   v1:= 57  @length 16;
#L09901c.   if v0 > v1 then goto L099038;
#L099020.   v1:= v4.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L099024.   v2:= v1[v0]  @byte;
#L099028.   v2:= v2 ^| 16;
#L09902c.   v2:= (byte)v2  @type i2b;
#L09902e.   v1[v0]:= v2  @byte;
#L099032.   v0:= v0 + 1;
#L099036.   goto L099018;
#L099038.   v1:= v4.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L09903c.   v2:= 46  @length 16;
#L099040.   v3:= v1[v2]  @byte;
#L099044.   v3:= v3 ^| 16;
#L099048.   v3:= (byte)v3  @type i2b;
#L09904a.   v1[v2]:= v3  @byte;
#L09904e.   v1:= v4.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L099052.   v2:= 45  @length 16;
#L099056.   v3:= v1[v2]  @byte;
#L09905a.   v3:= v3 ^| 16;
#L09905e.   v3:= (byte)v3  @type i2b;
#L099060.   v1[v2]:= v3  @byte;
#L099064.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.pushBack|] ([|java:io:StreamTokenizer|] v1 @type (this)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.pushBack:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L099078.   v0:= 1  @length 4;
#L09907a.   v1.[|java:io:StreamTokenizer.pushBackToken|]  := v0 @boolean;
#L09907e.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.quoteChar|] ([|java:io:StreamTokenizer|] v2 @type (this), [|int|] v3) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.quoteChar:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L099090.   if v3 < 0 then goto L0990a8;
#L099094.   v0:= v2.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L099098.   v0:= v0.length;
#L09909a.   if v3 >= v0 then goto L0990a8;
#L09909e.   v0:= v2.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L0990a2.   v1:= 2  @length 4;
#L0990a4.   v0[v3]:= v1  @byte;
#L0990a8.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.resetSyntax|] ([|java:io:StreamTokenizer|] v3 @type (this)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.resetSyntax:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0990bc.   v0:= 0  @length 4;
#L0990be.   v1:= 256  @length 16;
#L0990c2.   if v0 >= v1 then goto L0990d6;
#L0990c6.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L0990ca.   v2:= 0  @length 4;
#L0990cc.   v1[v0]:= v2  @byte;
#L0990d0.   v0:= v0 + 1;
#L0990d4.   goto L0990be;
#L0990d6.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.slashSlashComments|] ([|java:io:StreamTokenizer|] v0 @type (this), [|boolean|] v1) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.slashSlashComments:(Z)V|] @Access PUBLIC {
      local temp ;
      
#L0990e8.   v0.[|java:io:StreamTokenizer.slashSlashComments|]  := v1 @boolean;
#L0990ec.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.slashStarComments|] ([|java:io:StreamTokenizer|] v0 @type (this), [|boolean|] v1) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.slashStarComments:(Z)V|] @Access PUBLIC {
      local temp ;
      
#L099100.   v0.[|java:io:StreamTokenizer.slashStarComments|]  := v1 @boolean;
#L099104.   return @void ;

   }
    procedure [|java:lang:String|] [|java:io:StreamTokenizer.toString|] ([|java:io:StreamTokenizer|] v4 @type (this)) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L099118.   v3:= 39  @length 16;
#L09911c.   v0:= new [|java:lang:StringBuilder|];
#L099120.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L099126.   v1:= "Token[" @type (object, string);
#L09912a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L099130.   v1:= v4.[|java:io:StreamTokenizer.ttype|] ;
#L099134.   goto L0991d4;
#L09913a.   v1:= v4.[|java:io:StreamTokenizer.ttype|] ;
#L09913e.   v2:= -4  @length 4;
#L099140.   if v1 == v2 then goto L099156;
#L099144.   v1:= v4.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L099148.   v2:= v4.[|java:io:StreamTokenizer.ttype|] ;
#L09914c.   v1:= v1[v2]  @byte;
#L099150.   v2:= 2  @length 4;
#L099152.   if v1 != v2 then goto L0991b8;
#L099156.   v1:= v4.[|java:io:StreamTokenizer.sval|]   @type object;
#L09915a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L099160.   v1:= "], line " @type (object, string);
#L099164.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09916a.   v1:= v4.[|java:io:StreamTokenizer.lineNumber|] ;
#L09916e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L099174.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L09917a.   v1:= temp  @type object;
#L09917c.   return v1  @type object;
#L09917e.   v1:= "EOF" @type (object, string);
#L099182.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L099188.   goto L099160;
#L09918a.   v1:= "EOL" @type (object, string);
#L09918e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L099194.   goto L099160;
#L099196.   v1:= "n=" @type (object, string);
#L09919a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0991a0.   v1:= v4.[|java:io:StreamTokenizer.nval|]   @wide;
#L0991a4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0991aa.   goto L099160;
#L0991ac.   v1:= v4.[|java:io:StreamTokenizer.sval|]   @type object;
#L0991b0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0991b6.   goto L099160;
#L0991b8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0991be.   v1:= v4.[|java:io:StreamTokenizer.ttype|] ;
#L0991c2.   v1:= (char)v1  @type i2c;
#L0991c4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0991ca.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0991d0.   goto L099160;
#L0991d2.   
#L0991d4.   switch v1
                 | -3 => goto L0991ac
                 | -2 => goto L099196
                 | -1 => goto L09917e
                 | 10 => goto L09918a
                 | => goto L09913a;

   }
    procedure [|void|] [|java:io:StreamTokenizer.whitespaceChars|] ([|java:io:StreamTokenizer|] v3 @type (this), [|int|] v4, [|int|] v5) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.whitespaceChars:(II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L099208.   if v4 >= 0 then goto L09920e;
#L09920c.   v4:= 0  @length 4;
#L09920e.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L099212.   v1:= v1.length;
#L099214.   if v5 <= v1 then goto L099222;
#L099218.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L09921c.   v1:= v1.length;
#L09921e.   v5:= v1 + -1;
#L099222.   v0:= v4;
#L099224.   if v0 > v5 then goto L099238;
#L099228.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L09922c.   v2:= 4  @length 4;
#L09922e.   v1[v0]:= v2  @byte;
#L099232.   v0:= v0 + 1;
#L099236.   goto L099224;
#L099238.   return @void ;

   }
    procedure [|void|] [|java:io:StreamTokenizer.wordChars|] ([|java:io:StreamTokenizer|] v3 @type (this), [|int|] v4, [|int|] v5) @owner [|java:io:StreamTokenizer|] @signature [|Ljava/io/StreamTokenizer;.wordChars:(II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L09924c.   if v4 >= 0 then goto L099252;
#L099250.   v4:= 0  @length 4;
#L099252.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L099256.   v1:= v1.length;
#L099258.   if v5 <= v1 then goto L099266;
#L09925c.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L099260.   v1:= v1.length;
#L099262.   v5:= v1 + -1;
#L099266.   v0:= v4;
#L099268.   if v0 > v5 then goto L099284;
#L09926c.   v1:= v3.[|java:io:StreamTokenizer.tokenTypes|]   @type object;
#L099270.   v2:= v1[v0]  @byte;
#L099274.   v2:= v2 ^| 8;
#L099278.   v2:= (byte)v2  @type i2b;
#L09927a.   v1[v0]:= v2  @byte;
#L09927e.   v0:= v0 + 1;
#L099282.   goto L099268;
#L099284.   return @void ;

   }
record [|java:io:StringBufferInputStream|]  @type class @AccessFlag PUBLIC  extends [|java:io:InputStream|] {
      [|java:lang:String|] [|java:io:StringBufferInputStream.buffer|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:StringBufferInputStream.count|]    @AccessFlag PROTECTED;
      [|int|] [|java:io:StringBufferInputStream.pos|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:io:StringBufferInputStream.<init>|] ([|java:io:StringBufferInputStream|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:io:StringBufferInputStream|] @signature [|Ljava/io/StringBufferInputStream;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L099298.   call temp:=  [|java:io:InputStream.<init>|](v2) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L09929e.   if v3 != 0 then goto L0992b2;
#L0992a2.   v0:= new [|java:lang:NullPointerException|];
#L0992a6.   v1:= "str == null" @type (object, string);
#L0992aa.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0992b0.   throw v0;
#L0992b2.   v2.[|java:io:StringBufferInputStream.buffer|]  := v3 @type object;
#L0992b6.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0992bc.   v0:= temp;
#L0992be.   v2.[|java:io:StringBufferInputStream.count|]  := v0;
#L0992c2.   return @void ;

   }
    procedure [|int|] [|java:io:StringBufferInputStream.available|] ([|java:io:StringBufferInputStream|] v2 @type (this)) @owner [|java:io:StringBufferInputStream|] @signature [|Ljava/io/StringBufferInputStream;.available:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0992d4.   (@monitorenter v2)
#L0992d6.   v0:= v2.[|java:io:StringBufferInputStream.count|] ;
#L0992da.   v1:= v2.[|java:io:StringBufferInputStream.pos|] ;
#L0992de.   v0:= v0 - v1  @type int;
#L0992e0.   (@monitorexit v2)
#L0992e2.   return v0;
#L0992e4.   v0:= Exception  @type object;
#L0992e6.   (@monitorexit v2)
#L0992e8.   throw v0;
  catch  [|any|] @[L0992d6..L0992de] goto L0992e4;

   }
    procedure [|int|] [|java:io:StringBufferInputStream.read|] ([|java:io:StringBufferInputStream|] v3 @type (this)) @owner [|java:io:StringBufferInputStream|] @signature [|Ljava/io/StringBufferInputStream;.read:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L099308.   (@monitorenter v3)
#L09930a.   v0:= v3.[|java:io:StringBufferInputStream.pos|] ;
#L09930e.   v1:= v3.[|java:io:StringBufferInputStream.count|] ;
#L099312.   if v0 >= v1 then goto L099336;
#L099316.   v0:= v3.[|java:io:StringBufferInputStream.buffer|]   @type object;
#L09931a.   v1:= v3.[|java:io:StringBufferInputStream.pos|] ;
#L09931e.   v2:= v1 + 1;
#L099322.   v3.[|java:io:StringBufferInputStream.pos|]  := v2;
#L099326.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L09932c.   v0:= temp;
#L09932e.   v0:= v0 ^& 255;
#L099332.   (@monitorexit v3)
#L099334.   return v0;
#L099336.   v0:= -1  @length 4;
#L099338.   goto L099332;
#L09933a.   v0:= Exception  @type object;
#L09933c.   (@monitorexit v3)
#L09933e.   throw v0;
  catch  [|any|] @[L09930a..L09932c] goto L09933a;

   }
    procedure [|int|] [|java:io:StringBufferInputStream.read|] ([|java:io:StringBufferInputStream|] v5 @type (this), [|byte|][] v6, [|int|] v7, [|int|] v8) @owner [|java:io:StringBufferInputStream|] @signature [|Ljava/io/StringBufferInputStream;.read:([BII)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L09935c.   (@monitorenter v5)
#L09935e.   if v6 != 0 then goto L099378;
#L099362.   v2:= new [|java:lang:NullPointerException|];
#L099366.   v3:= "buffer == null" @type (object, string);
#L09936a.   call temp:=  [|java:lang:NullPointerException.<init>|](v2, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L099370.   throw v2;
#L099372.   v2:= Exception  @type object;
#L099374.   (@monitorexit v5)
#L099376.   throw v2;
#L099378.   v2:= v6.length;
#L09937a.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v2, v7, v8) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L099380.   if v8 != 0 then goto L09938a;
#L099384.   v0:= 0  @length 4;
#L099386.   (@monitorexit v5)
#L099388.   return v0;
#L09938a.   v2:= v5.[|java:io:StringBufferInputStream.count|] ;
#L09938e.   v3:= v5.[|java:io:StringBufferInputStream.pos|] ;
#L099392.   v2:= v2 - v3  @type int;
#L099394.   if v2 >= v8 then goto L0993cc;
#L099398.   v2:= v5.[|java:io:StringBufferInputStream.count|] ;
#L09939c.   v3:= v5.[|java:io:StringBufferInputStream.pos|] ;
#L0993a0.   v0:= v2 - v3  @type int;
#L0993a4.   v1:= 0  @length 4;
#L0993a6.   if v1 >= v0 then goto L0993d0;
#L0993aa.   v2:= v7 + v1  @type int;
#L0993ae.   v3:= v5.[|java:io:StringBufferInputStream.buffer|]   @type object;
#L0993b2.   v4:= v5.[|java:io:StringBufferInputStream.pos|] ;
#L0993b6.   v4:= v4 + v1  @type int;
#L0993b8.   call temp:=  [|java:lang:String.charAt|](v3, v4) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0993be.   v3:= temp;
#L0993c0.   v3:= (byte)v3  @type i2b;
#L0993c2.   v6[v2]:= v3  @byte;
#L0993c6.   v1:= v1 + 1;
#L0993ca.   goto L0993a6;
#L0993cc.   v0:= v8;
#L0993ce.   goto L0993a4;
#L0993d0.   v2:= v5.[|java:io:StringBufferInputStream.pos|] ;
#L0993d4.   v2:= v2 + v0  @type int;
#L0993d6.   v5.[|java:io:StringBufferInputStream.pos|]  := v2;
#L0993da.   goto L099386;
  catch  [|any|] @[L099362..L099372] goto L099372;
  catch  [|any|] @[L099378..L099380] goto L099372;
  catch  [|any|] @[L09938a..L0993da] goto L099372;

   }
    procedure [|void|] [|java:io:StringBufferInputStream.reset|] ([|java:io:StringBufferInputStream|] v1 @type (this)) @owner [|java:io:StringBufferInputStream|] @signature [|Ljava/io/StringBufferInputStream;.reset:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L099408.   (@monitorenter v1)
#L09940a.   v0:= 0  @length 4;
#L09940c.   v1.[|java:io:StringBufferInputStream.pos|]  := v0;
#L099410.   (@monitorexit v1)
#L099412.   return @void ;
#L099414.   v0:= Exception  @type object;
#L099416.   (@monitorexit v1)
#L099418.   throw v0;
  catch  [|any|] @[L09940c..L099410] goto L099414;

   }
    procedure [|long|] [|java:io:StringBufferInputStream.skip|] ([|java:io:StringBufferInputStream|] v4 @type (this), [|long|] v5) @owner [|java:io:StringBufferInputStream|] @signature [|Ljava/io/StringBufferInputStream;.skip:(J)J|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L099438.   v1:= 0  @length wide16;
#L09943c.   (@monitorenter v4)
#L09943e.   v3:= cmp(v5,v1);
#L099442.   if v3 > 0 then goto L09944a;
#L099446.   (@monitorexit v4)
#L099448.   return v1  @type wide;
#L09944a.   v1:= v4.[|java:io:StringBufferInputStream.count|] ;
#L09944e.   v2:= v4.[|java:io:StringBufferInputStream.pos|] ;
#L099452.   v1:= v1 - v2  @type int;
#L099454.   v1:= (long)v1  @type i2l;
#L099456.   v1:= cmp(v1,v5);
#L09945a.   if v1 >= 0 then goto L099476;
#L09945e.   v1:= v4.[|java:io:StringBufferInputStream.count|] ;
#L099462.   v2:= v4.[|java:io:StringBufferInputStream.pos|] ;
#L099466.   v0:= v1 - v2  @type int;
#L09946a.   v1:= v4.[|java:io:StringBufferInputStream.count|] ;
#L09946e.   v4.[|java:io:StringBufferInputStream.pos|]  := v1;
#L099472.   v1:= (long)v0  @type i2l;
#L099474.   goto L099446;
#L099476.   v0:= (int)v5  @type l2i;
#L099478.   v1:= v4.[|java:io:StringBufferInputStream.pos|] ;
#L09947c.   v1:= (long)v1  @type i2l;
#L09947e.   v1:= v1 + v5  @type long;
#L099480.   v1:= (int)v1  @type l2i;
#L099482.   v4.[|java:io:StringBufferInputStream.pos|]  := v1;
#L099486.   goto L099472;
#L099488.   v1:= Exception  @type object;
#L09948a.   (@monitorexit v4)
#L09948c.   throw v1;
  catch  [|any|] @[L09944a..L099486] goto L099488;

   }
record [|java:io:StringReader|]  @type class @AccessFlag PUBLIC  extends [|java:io:Reader|] {
      [|int|] [|java:io:StringReader.count|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:StringReader.markpos|]    @AccessFlag PRIVATE;
      [|int|] [|java:io:StringReader.pos|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:io:StringReader.str|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:StringReader.<init>|] ([|java:io:StringReader|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0994ac.   call temp:=  [|java:io:Reader.<init>|](v1) @signature [|Ljava/io/Reader;.<init>:()V|] @classDescriptor [|java:io:Reader|] @type direct;
#L0994b2.   v0:= -1  @length 4;
#L0994b4.   v1.[|java:io:StringReader.markpos|]  := v0;
#L0994b8.   v1.[|java:io:StringReader.str|]  := v2 @type object;
#L0994bc.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0994c2.   v0:= temp;
#L0994c4.   v1.[|java:io:StringReader.count|]  := v0;
#L0994c8.   return @void ;

   }
    procedure [|void|] [|java:io:StringReader.checkNotClosed|] ([|java:io:StringReader|] v2 @type (this)) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.checkNotClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0994dc.   call temp:=  [|java:io:StringReader.isClosed|](v2) @signature [|Ljava/io/StringReader;.isClosed:()Z|] @classDescriptor [|java:io:StringReader|] @type direct;
#L0994e2.   v0:= temp;
#L0994e4.   if v0 == 0 then goto L0994f8;
#L0994e8.   v0:= new [|java:io:IOException|];
#L0994ec.   v1:= "StringReader is closed" @type (object, string);
#L0994f0.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0994f6.   throw v0;
#L0994f8.   return @void ;

   }
    procedure [|boolean|] [|java:io:StringReader.isClosed|] ([|java:io:StringReader|] v1 @type (this)) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.isClosed:()Z|] @Access PRIVATE {
      local temp ;
        v0;
      
#L09950c.   v0:= v1.[|java:io:StringReader.str|]   @type object;
#L099510.   if v0 != 0 then goto L099518;
#L099514.   v0:= 1  @length 4;
#L099516.   return v0;
#L099518.   v0:= 0  @length 4;
#L09951a.   goto L099516;

   }
    procedure [|void|] [|java:io:StringReader.close|] ([|java:io:StringReader|] v1 @type (this)) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09952c.   v0:= 0  @length 4;
#L09952e.   v1.[|java:io:StringReader.str|]  := v0 @type object;
#L099532.   return @void ;

   }
    procedure [|void|] [|java:io:StringReader.mark|] ([|java:io:StringReader|] v2 @type (this), [|int|] v3) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.mark:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L099544.   if v3 >= 0 then goto L099554;
#L099548.   v0:= new [|java:lang:IllegalArgumentException|];
#L09954c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L099552.   throw v0;
#L099554.   v1:= v2.[|java:io:StringReader.lock|]   @type object;
#L099558.   (@monitorenter v1)
#L09955a.   call temp:=  [|java:io:StringReader.checkNotClosed|](v2) @signature [|Ljava/io/StringReader;.checkNotClosed:()V|] @classDescriptor [|java:io:StringReader|] @type direct;
#L099560.   v0:= v2.[|java:io:StringReader.pos|] ;
#L099564.   v2.[|java:io:StringReader.markpos|]  := v0;
#L099568.   (@monitorexit v1)
#L09956a.   return @void ;
#L09956c.   v0:= Exception  @type object;
#L09956e.   (@monitorexit v1)
#L099570.   throw v0;
  catch  [|any|] @[L09955a..L099570] goto L09956c;

   }
    procedure [|boolean|] [|java:io:StringReader.markSupported|] ([|java:io:StringReader|] v1 @type (this)) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.markSupported:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L099590.   v0:= 1  @length 4;
#L099592.   return v0;

   }
    procedure [|int|] [|java:io:StringReader.read|] ([|java:io:StringReader|] v4 @type (this)) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0995a4.   v1:= v4.[|java:io:StringReader.lock|]   @type object;
#L0995a8.   (@monitorenter v1)
#L0995aa.   call temp:=  [|java:io:StringReader.checkNotClosed|](v4) @signature [|Ljava/io/StringReader;.checkNotClosed:()V|] @classDescriptor [|java:io:StringReader|] @type direct;
#L0995b0.   v0:= v4.[|java:io:StringReader.pos|] ;
#L0995b4.   v2:= v4.[|java:io:StringReader.count|] ;
#L0995b8.   if v0 == v2 then goto L0995d8;
#L0995bc.   v0:= v4.[|java:io:StringReader.str|]   @type object;
#L0995c0.   v2:= v4.[|java:io:StringReader.pos|] ;
#L0995c4.   v3:= v2 + 1;
#L0995c8.   v4.[|java:io:StringReader.pos|]  := v3;
#L0995cc.   call temp:=  [|java:lang:String.charAt|](v0, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0995d2.   v0:= temp;
#L0995d4.   (@monitorexit v1)
#L0995d6.   return v0;
#L0995d8.   v0:= -1  @length 4;
#L0995da.   (@monitorexit v1)
#L0995dc.   goto L0995d6;
#L0995de.   v0:= Exception  @type object;
#L0995e0.   (@monitorexit v1)
#L0995e2.   throw v0;
  catch  [|any|] @[L0995aa..L0995e2] goto L0995de;

   }
    procedure [|int|] [|java:io:StringReader.read|] ([|java:io:StringReader|] v5 @type (this), [|char|][] v6, [|int|] v7, [|int|] v8) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.read:([CII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L099600.   v3:= v5.[|java:io:StringReader.lock|]   @type object;
#L099604.   (@monitorenter v3)
#L099606.   call temp:=  [|java:io:StringReader.checkNotClosed|](v5) @signature [|Ljava/io/StringReader;.checkNotClosed:()V|] @classDescriptor [|java:io:StringReader|] @type direct;
#L09960c.   v2:= v6.length;
#L09960e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v2, v7, v8) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L099614.   if v8 != 0 then goto L09961e;
#L099618.   v1:= 0  @length 4;
#L09961a.   (@monitorexit v3)
#L09961c.   return v1;
#L09961e.   v2:= v5.[|java:io:StringReader.pos|] ;
#L099622.   v4:= v5.[|java:io:StringReader.count|] ;
#L099626.   if v2 != v4 then goto L099636;
#L09962a.   v1:= -1  @length 4;
#L09962c.   (@monitorexit v3)
#L09962e.   goto L09961c;
#L099630.   v2:= Exception  @type object;
#L099632.   (@monitorexit v3)
#L099634.   throw v2;
#L099636.   v2:= v5.[|java:io:StringReader.pos|] ;
#L09963a.   v2:= v2 + v8  @type int;
#L09963c.   v4:= v5.[|java:io:StringReader.count|] ;
#L099640.   if v2 <= v4 then goto L099666;
#L099644.   v0:= v5.[|java:io:StringReader.count|] ;
#L099648.   v2:= v5.[|java:io:StringReader.str|]   @type object;
#L09964c.   v4:= v5.[|java:io:StringReader.pos|] ;
#L099650.   call temp:=  [|java:lang:String.getChars|](v2, v4, v0, v6, v7) @signature [|Ljava/lang/String;.getChars:(II[CI)V|] @classDescriptor [|java:lang:String|] @type virtual;
#L099656.   v2:= v5.[|java:io:StringReader.pos|] ;
#L09965a.   v1:= v0 - v2  @type int;
#L09965e.   v5.[|java:io:StringReader.pos|]  := v0;
#L099662.   (@monitorexit v3)
#L099664.   goto L09961c;
#L099666.   v2:= v5.[|java:io:StringReader.pos|] ;
#L09966a.   v0:= v2 + v8  @type int;
#L09966e.   goto L099648;
  catch  [|any|] @[L099606..L099634] goto L099630;
  catch  [|any|] @[L099636..L09966a] goto L099630;

   }
    procedure [|boolean|] [|java:io:StringReader.ready|] ([|java:io:StringReader|] v2 @type (this)) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.ready:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L099694.   v1:= v2.[|java:io:StringReader.lock|]   @type object;
#L099698.   (@monitorenter v1)
#L09969a.   call temp:=  [|java:io:StringReader.checkNotClosed|](v2) @signature [|Ljava/io/StringReader;.checkNotClosed:()V|] @classDescriptor [|java:io:StringReader|] @type direct;
#L0996a0.   v0:= 1  @length 4;
#L0996a2.   (@monitorexit v1)
#L0996a4.   return v0;
#L0996a6.   v0:= Exception  @type object;
#L0996a8.   (@monitorexit v1)
#L0996aa.   throw v0;
  catch  [|any|] @[L09969a..L0996aa] goto L0996a6;

   }
    procedure [|void|] [|java:io:StringReader.reset|] ([|java:io:StringReader|] v3 @type (this)) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0996c8.   v1:= v3.[|java:io:StringReader.lock|]   @type object;
#L0996cc.   (@monitorenter v1)
#L0996ce.   call temp:=  [|java:io:StringReader.checkNotClosed|](v3) @signature [|Ljava/io/StringReader;.checkNotClosed:()V|] @classDescriptor [|java:io:StringReader|] @type direct;
#L0996d4.   v0:= v3.[|java:io:StringReader.markpos|] ;
#L0996d8.   v2:= -1  @length 4;
#L0996da.   if v0 == v2 then goto L0996ea;
#L0996de.   v0:= v3.[|java:io:StringReader.markpos|] ;
#L0996e2.   v3.[|java:io:StringReader.pos|]  := v0;
#L0996e6.   (@monitorexit v1)
#L0996e8.   return @void ;
#L0996ea.   v0:= 0  @length 4;
#L0996ec.   goto L0996e2;
#L0996ee.   v0:= Exception  @type object;
#L0996f0.   (@monitorexit v1)
#L0996f2.   throw v0;
  catch  [|any|] @[L0996ce..L0996f2] goto L0996ee;

   }
    procedure [|long|] [|java:io:StringReader.skip|] ([|java:io:StringReader|] v6 @type (this), [|long|] v7) @owner [|java:io:StringReader|] @signature [|Ljava/io/StringReader;.skip:(J)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L099710.   v3:= v6.[|java:io:StringReader.lock|]   @type object;
#L099714.   (@monitorenter v3)
#L099716.   call temp:=  [|java:io:StringReader.checkNotClosed|](v6) @signature [|Ljava/io/StringReader;.checkNotClosed:()V|] @classDescriptor [|java:io:StringReader|] @type direct;
#L09971c.   v2:= v6.[|java:io:StringReader.pos|] ;
#L099720.   v1:= -v2  @type int;
#L099722.   v2:= v6.[|java:io:StringReader.count|] ;
#L099726.   v4:= v6.[|java:io:StringReader.pos|] ;
#L09972a.   v0:= v2 - v4  @type int;
#L09972e.   if v0 == 0 then goto L09973c;
#L099732.   v4:= (long)v0  @type i2l;
#L099734.   v2:= cmp(v7,v4);
#L099738.   if v2 <= 0 then goto L099750;
#L09973c.   v7:= (long)v0  @type i2l;
#L09973e.   v2:= v6.[|java:io:StringReader.pos|] ;
#L099742.   v4:= (long)v2  @type i2l;
#L099744.   v4:= v4 + v7  @type long;
#L099746.   v2:= (int)v4  @type l2i;
#L099748.   v6.[|java:io:StringReader.pos|]  := v2;
#L09974c.   (@monitorexit v3)
#L09974e.   return v7  @type wide;
#L099750.   v4:= (long)v1  @type i2l;
#L099752.   v2:= cmp(v7,v4);
#L099756.   if v2 >= 0 then goto L09973e;
#L09975a.   v7:= (long)v1  @type i2l;
#L09975c.   goto L09973e;
#L09975e.   v2:= Exception  @type object;
#L099760.   (@monitorexit v3)
#L099762.   throw v2;
  catch  [|any|] @[L099716..L099762] goto L09975e;

   }
record [|java:io:StringWriter|]  @type class @AccessFlag PUBLIC  extends [|java:io:Writer|] {
      [|java:lang:StringBuffer|] [|java:io:StringWriter.buf|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:io:StringWriter.<init>|] ([|java:io:StringWriter|] v2 @type (this)) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L099780.   call temp:=  [|java:io:Writer.<init>|](v2) @signature [|Ljava/io/Writer;.<init>:()V|] @classDescriptor [|java:io:Writer|] @type direct;
#L099786.   v0:= new [|java:lang:StringBuffer|];
#L09978a.   v1:= 16  @length 16;
#L09978e.   call temp:=  [|java:lang:StringBuffer.<init>|](v0, v1) @signature [|Ljava/lang/StringBuffer;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L099794.   v2.[|java:io:StringWriter.buf|]  := v0 @type object;
#L099798.   v0:= v2.[|java:io:StringWriter.buf|]   @type object;
#L09979c.   v2.[|java:io:StringWriter.lock|]  := v0 @type object;
#L0997a0.   return @void ;

   }
    procedure [|void|] [|java:io:StringWriter.<init>|] ([|java:io:StringWriter|] v1 @type (this), [|int|] v2) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0997b4.   call temp:=  [|java:io:Writer.<init>|](v1) @signature [|Ljava/io/Writer;.<init>:()V|] @classDescriptor [|java:io:Writer|] @type direct;
#L0997ba.   if v2 >= 0 then goto L0997ca;
#L0997be.   v0:= new [|java:lang:IllegalArgumentException|];
#L0997c2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0997c8.   throw v0;
#L0997ca.   v0:= new [|java:lang:StringBuffer|];
#L0997ce.   call temp:=  [|java:lang:StringBuffer.<init>|](v0, v2) @signature [|Ljava/lang/StringBuffer;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0997d4.   v1.[|java:io:StringWriter.buf|]  := v0 @type object;
#L0997d8.   v0:= v1.[|java:io:StringWriter.buf|]   @type object;
#L0997dc.   v1.[|java:io:StringWriter.lock|]  := v0 @type object;
#L0997e0.   return @void ;

   }
    procedure [|java:io:StringWriter|] [|java:io:StringWriter.append|] ([|java:io:StringWriter|] v0 @type (this), [|char|] v1) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.append:(C)Ljava/io/StringWriter;|] @Access PUBLIC {
      local temp ;
      
#L0997f4.   call temp:=  [|java:io:StringWriter.write|](v0, v1) @signature [|Ljava/io/StringWriter;.write:(I)V|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L0997fa.   return v0  @type object;

   }
    procedure [|java:io:StringWriter|] [|java:io:StringWriter.append|] ([|java:io:StringWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/StringWriter;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L09980c.   if v2 != 0 then goto L099814;
#L099810.   v2:= "null" @type (object, string);
#L099814.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09981a.   v0:= temp  @type object;
#L09981c.   call temp:=  [|java:io:StringWriter.write|](v1, v0) @signature [|Ljava/io/StringWriter;.write:(Ljava/lang/String;)V|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L099822.   return v1  @type object;

   }
    procedure [|java:io:StringWriter|] [|java:io:StringWriter.append|] ([|java:io:StringWriter|] v3 @type (this), [|java:lang:CharSequence|] v4 @type (object), [|int|] v5, [|int|] v6) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/StringWriter;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L099834.   if v4 != 0 then goto L09983c;
#L099838.   v4:= "null" @type (object, string);
#L09983c.   call temp:=  [|java:lang:CharSequence.subSequence|](v4, v5, v6) @signature [|Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L099842.   v1:= temp  @type object;
#L099844.   call temp:=  [|java:lang:Object.toString|](v1) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L09984a.   v0:= temp  @type object;
#L09984c.   v1:= 0  @length 4;
#L09984e.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L099854.   v2:= temp;
#L099856.   call temp:=  [|java:io:StringWriter.write|](v3, v0, v1, v2) @signature [|Ljava/io/StringWriter;.write:(Ljava/lang/String;II)V|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L09985c.   return v3  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:StringWriter.append|] ([|java:io:StringWriter|] v1 @type (this), [|char|] v2) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.append:(C)Ljava/io/Writer;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L099870.   call temp:=  [|java:io:StringWriter.append|](v1, v2) @signature [|Ljava/io/StringWriter;.append:(C)Ljava/io/StringWriter;|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L099876.   v0:= temp  @type object;
#L099878.   return v0  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:StringWriter.append|] ([|java:io:StringWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L09988c.   call temp:=  [|java:io:StringWriter.append|](v1, v2) @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/StringWriter;|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L099892.   v0:= temp  @type object;
#L099894.   return v0  @type object;

   }
    procedure [|java:io:Writer|] [|java:io:StringWriter.append|] ([|java:io:StringWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0998a8.   call temp:=  [|java:io:StringWriter.append|](v1, v2, v3, v4) @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/StringWriter;|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L0998ae.   v0:= temp  @type object;
#L0998b0.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:StringWriter.append|] ([|java:io:StringWriter|] v1 @type (this), [|char|] v2) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.append:(C)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0998c4.   call temp:=  [|java:io:StringWriter.append|](v1, v2) @signature [|Ljava/io/StringWriter;.append:(C)Ljava/io/StringWriter;|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L0998ca.   v0:= temp  @type object;
#L0998cc.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:StringWriter.append|] ([|java:io:StringWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0998e0.   call temp:=  [|java:io:StringWriter.append|](v1, v2) @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/StringWriter;|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L0998e6.   v0:= temp  @type object;
#L0998e8.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:io:StringWriter.append|] ([|java:io:StringWriter|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0998fc.   call temp:=  [|java:io:StringWriter.append|](v1, v2, v3, v4) @signature [|Ljava/io/StringWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/StringWriter;|] @classDescriptor [|java:io:StringWriter|] @type virtual;
#L099902.   v0:= temp  @type object;
#L099904.   return v0  @type object;

   }
    procedure [|void|] [|java:io:StringWriter.close|] ([|java:io:StringWriter|] v0 @type (this)) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.close:()V|] @Access PUBLIC {
      local temp ;
      
#L099918.   return @void ;

   }
    procedure [|void|] [|java:io:StringWriter.flush|] ([|java:io:StringWriter|] v0 @type (this)) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.flush:()V|] @Access PUBLIC {
      local temp ;
      
#L09992c.   return @void ;

   }
    procedure [|java:lang:StringBuffer|] [|java:io:StringWriter.getBuffer|] ([|java:io:StringWriter|] v1 @type (this)) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.getBuffer:()Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L099940.   v0:= v1.[|java:io:StringWriter.buf|]   @type object;
#L099944.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:io:StringWriter.toString|] ([|java:io:StringWriter|] v1 @type (this)) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L099958.   v0:= v1.[|java:io:StringWriter.buf|]   @type object;
#L09995c.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L099962.   v0:= temp  @type object;
#L099964.   return v0  @type object;

   }
    procedure [|void|] [|java:io:StringWriter.write|] ([|java:io:StringWriter|] v2 @type (this), [|int|] v3) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L099978.   v0:= v2.[|java:io:StringWriter.buf|]   @type object;
#L09997c.   v1:= (char)v3  @type i2c;
#L09997e.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L099984.   return @void ;

   }
    procedure [|void|] [|java:io:StringWriter.write|] ([|java:io:StringWriter|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.write:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L099998.   v0:= v1.[|java:io:StringWriter.buf|]   @type object;
#L09999c.   call temp:=  [|java:lang:StringBuffer.append|](v0, v2) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0999a2.   return @void ;

   }
    procedure [|void|] [|java:io:StringWriter.write|] ([|java:io:StringWriter|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.write:(Ljava/lang/String;II)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0999b4.   v1:= v4 + v5  @type int;
#L0999b8.   call temp:=  [|java:lang:String.substring|](v3, v4, v1) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0999be.   v0:= temp  @type object;
#L0999c0.   v1:= v2.[|java:io:StringWriter.buf|]   @type object;
#L0999c4.   call temp:=  [|java:lang:StringBuffer.append|](v1, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0999ca.   return @void ;

   }
    procedure [|void|] [|java:io:StringWriter.write|] ([|java:io:StringWriter|] v1 @type (this), [|char|][] v2, [|int|] v3, [|int|] v4) @owner [|java:io:StringWriter|] @signature [|Ljava/io/StringWriter;.write:([CII)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0999dc.   v0:= v2.length;
#L0999de.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v0, v3, v4) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0999e4.   if v4 != 0 then goto L0999ea;
#L0999e8.   return @void ;
#L0999ea.   v0:= v1.[|java:io:StringWriter.buf|]   @type object;
#L0999ee.   call temp:=  [|java:lang:StringBuffer.append|](v0, v2, v3, v4) @signature [|Ljava/lang/StringBuffer;.append:([CII)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0999f4.   goto L0999e8;

   }
record [|java:io:SyncFailedException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:io:SyncFailedException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:SyncFailedException.<init>|] ([|java:io:SyncFailedException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:SyncFailedException|] @signature [|Ljava/io/SyncFailedException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L099a08.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L099a0e.   return @void ;

   }
record [|java:io:UTFDataFormatException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:io:UTFDataFormatException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:UTFDataFormatException.<init>|] ([|java:io:UTFDataFormatException|] v0 @type (this)) @owner [|java:io:UTFDataFormatException|] @signature [|Ljava/io/UTFDataFormatException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L099a20.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L099a26.   return @void ;

   }
    procedure [|void|] [|java:io:UTFDataFormatException.<init>|] ([|java:io:UTFDataFormatException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:UTFDataFormatException|] @signature [|Ljava/io/UTFDataFormatException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L099a38.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L099a3e.   return @void ;

   }
record [|java:io:UnsupportedEncodingException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:io:UnsupportedEncodingException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:io:UnsupportedEncodingException.<init>|] ([|java:io:UnsupportedEncodingException|] v0 @type (this)) @owner [|java:io:UnsupportedEncodingException|] @signature [|Ljava/io/UnsupportedEncodingException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L099a50.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L099a56.   return @void ;

   }
    procedure [|void|] [|java:io:UnsupportedEncodingException.<init>|] ([|java:io:UnsupportedEncodingException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:io:UnsupportedEncodingException|] @signature [|Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L099a68.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L099a6e.   return @void ;

   }
