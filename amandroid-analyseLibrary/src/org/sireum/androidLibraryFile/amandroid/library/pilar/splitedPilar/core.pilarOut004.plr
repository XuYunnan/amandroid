record [|java:lang:StringBuffer|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:lang:AbstractStringBuilder|], [|java:lang:Appendable|], [|java:io:Serializable|], [|java:lang:CharSequence|] {
   }
      global [|java:io:ObjectStreamField|][] @@[|java:lang:StringBuffer.serialPersistentFields|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:lang:StringBuffer.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:StringBuffer.<clinit>|] () @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0aab98.   v0:= 3  @length 4;
#L0aab9a.   v0:= new [|java:io:ObjectStreamField|][v0];
#L0aab9e.   v1:= 0  @length 4;
#L0aaba0.   v2:= new [|java:io:ObjectStreamField|];
#L0aaba4.   v3:= "count" @type (object, string);
#L0aaba8.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0aabac.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0aabb2.   v0[v1]:= v2  @type object;
#L0aabb6.   v1:= 1  @length 4;
#L0aabb8.   v2:= new [|java:io:ObjectStreamField|];
#L0aabbc.   v3:= "shared" @type (object, string);
#L0aabc0.   v4:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L0aabc4.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0aabca.   v0[v1]:= v2  @type object;
#L0aabce.   v1:= 2  @length 4;
#L0aabd0.   v2:= new [|java:io:ObjectStreamField|];
#L0aabd4.   v3:= "value" @type (object, string);
#L0aabd8.   v4:= new [|char|][];
#L0aabdc.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0aabe2.   v0[v1]:= v2  @type object;
#L0aabe6.   @@[|java:lang:StringBuffer.serialPersistentFields|] := v0  @type object;
#L0aabea.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuffer.<init>|] ([|java:lang:StringBuffer|] v0 @type (this)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aabfc.   call temp:=  [|java:lang:AbstractStringBuilder.<init>|](v0) @signature [|Ljava/lang/AbstractStringBuilder;.<init>:()V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type direct;
#L0aac02.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuffer.<init>|] ([|java:lang:StringBuffer|] v0 @type (this), [|int|] v1) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aac14.   call temp:=  [|java:lang:AbstractStringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/AbstractStringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type direct;
#L0aac1a.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuffer.<init>|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.<init>:(Ljava/lang/CharSequence;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0aac2c.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0aac32.   v0:= temp  @type object;
#L0aac34.   call temp:=  [|java:lang:AbstractStringBuilder.<init>|](v1, v0) @signature [|Ljava/lang/AbstractStringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type direct;
#L0aac3a.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuffer.<init>|] ([|java:lang:StringBuffer|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aac4c.   call temp:=  [|java:lang:AbstractStringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/AbstractStringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type direct;
#L0aac52.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuffer.readObject|] ([|java:lang:StringBuffer|] v5 @type (this), [|java:io:ObjectInputStream|] v6 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0aac64.   call temp:=  [|java:io:ObjectInputStream.readFields|](v6) @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0aac6a.   v1:= temp  @type object;
#L0aac6c.   v3:= "count" @type (object, string);
#L0aac70.   v4:= 0  @length 4;
#L0aac72.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0aac78.   v0:= temp;
#L0aac7a.   v3:= "value" @type (object, string);
#L0aac7e.   v4:= 0  @length 4;
#L0aac80.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0aac86.   v3:= temp  @type object;
#L0aac88.   v3:= ([|char|][])v3;
#L0aac8c.   v2:= v3  @type object;
#L0aac8e.   v2:= ([|char|][])v2;
#L0aac92.   call temp:=  [|java:lang:StringBuffer.set|](v5, v2, v0) @signature [|Ljava/lang/StringBuffer;.set:([CI)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aac98.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuffer.writeObject|] ([|java:lang:StringBuffer|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aacac.   (@monitorenter v3)
#L0aacae.   call temp:=  [|java:io:ObjectOutputStream.putFields|](v4) @signature [|Ljava/io/ObjectOutputStream;.putFields:()Ljava/io/ObjectOutputStream$PutField;|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0aacb4.   v0:= temp  @type object;
#L0aacb6.   v1:= "count" @type (object, string);
#L0aacba.   call temp:=  [|java:lang:StringBuffer.length|](v3) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aacc0.   v2:= temp;
#L0aacc2.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0aacc8.   v1:= "shared" @type (object, string);
#L0aaccc.   v2:= 0  @length 4;
#L0aacce.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0aacd4.   v1:= "value" @type (object, string);
#L0aacd8.   call temp:=  [|java:lang:StringBuffer.getValue|](v3) @signature [|Ljava/lang/StringBuffer;.getValue:()[C|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aacde.   v2:= temp  @type object;
#L0aace0.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0aace6.   call temp:=  [|java:io:ObjectOutputStream.writeFields|](v4) @signature [|Ljava/io/ObjectOutputStream;.writeFields:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0aacec.   (@monitorexit v3)
#L0aacee.   return @void ;
#L0aacf0.   v1:= Exception  @type object;
#L0aacf2.   (@monitorexit v3)
#L0aacf4.   throw v1;
  catch  [|any|] @[L0aacae..L0aacec] goto L0aacf0;

   }
    procedure [|java:lang:Appendable|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|char|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0aad14.   call temp:=  [|java:lang:StringBuffer.append|](v1, v2) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aad1a.   v0:= temp  @type object;
#L0aad1c.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0aad30.   call temp:=  [|java:lang:StringBuffer.append|](v1, v2) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aad36.   v0:= temp  @type object;
#L0aad38.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0aad4c.   call temp:=  [|java:lang:StringBuffer.append|](v1, v2, v3, v4) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aad52.   v0:= temp  @type object;
#L0aad54.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|char|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0aad68.   (@monitorenter v1)
#L0aad6a.   call temp:=  [|java:lang:StringBuffer.append0|](v1, v2) @signature [|Ljava/lang/StringBuffer;.append0:(C)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aad70.   (@monitorexit v1)
#L0aad72.   return v1  @type object;
#L0aad74.   v0:= Exception  @type object;
#L0aad76.   (@monitorexit v1)
#L0aad78.   throw v0;
  catch  [|any|] @[L0aad6a..L0aad70] goto L0aad74;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|double|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(D)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aad98.   call temp:=  [|java:lang:RealToString.getInstance|]() @signature [|Ljava/lang/RealToString;.getInstance:()Ljava/lang/RealToString;|] @classDescriptor [|java:lang:RealToString|] @type static;
#L0aad9e.   v0:= temp  @type object;
#L0aada0.   call temp:=  [|java:lang:RealToString.appendDouble|](v0, v1, v2, v3) @signature [|Ljava/lang/RealToString;.appendDouble:(Ljava/lang/AbstractStringBuilder;D)V|] @classDescriptor [|java:lang:RealToString|] @type virtual;
#L0aada6.   return v1  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|float|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(F)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aadb8.   call temp:=  [|java:lang:RealToString.getInstance|]() @signature [|Ljava/lang/RealToString;.getInstance:()Ljava/lang/RealToString;|] @classDescriptor [|java:lang:RealToString|] @type static;
#L0aadbe.   v0:= temp  @type object;
#L0aadc0.   call temp:=  [|java:lang:RealToString.appendFloat|](v0, v1, v2) @signature [|Ljava/lang/RealToString;.appendFloat:(Ljava/lang/AbstractStringBuilder;F)V|] @classDescriptor [|java:lang:RealToString|] @type virtual;
#L0aadc6.   return v1  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v0 @type (this), [|int|] v1) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
      
#L0aadd8.   call temp:=  [|java:lang:IntegralToString.appendInt|](v0, v1) @signature [|Ljava/lang/IntegralToString;.appendInt:(Ljava/lang/AbstractStringBuilder;I)V|] @classDescriptor [|java:lang:IntegralToString|] @type static;
#L0aadde.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v0 @type (this), [|long|] v1) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(J)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
      
#L0aadf0.   call temp:=  [|java:lang:IntegralToString.appendLong|](v0, v1, v2) @signature [|Ljava/lang/IntegralToString;.appendLong:(Ljava/lang/AbstractStringBuilder;J)V|] @classDescriptor [|java:lang:IntegralToString|] @type static;
#L0aadf6.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v2 @type (this), [|java:lang:CharSequence|] v3 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0aae08.   (@monitorenter v2)
#L0aae0a.   if v3 != 0 then goto L0aae18;
#L0aae0e.   call temp:=  [|java:lang:StringBuffer.appendNull|](v2) @signature [|Ljava/lang/StringBuffer;.appendNull:()V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aae14.   (@monitorexit v2)
#L0aae16.   return v2  @type object;
#L0aae18.   v0:= 0  @length 4;
#L0aae1a.   call temp:=  [|java:lang:CharSequence.length|](v3) @signature [|Ljava/lang/CharSequence;.length:()I|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L0aae20.   v1:= temp;
#L0aae22.   call temp:=  [|java:lang:StringBuffer.append0|](v2, v3, v0, v1) @signature [|Ljava/lang/StringBuffer;.append0:(Ljava/lang/CharSequence;II)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aae28.   goto L0aae14;
#L0aae2a.   v0:= Exception  @type object;
#L0aae2c.   (@monitorexit v2)
#L0aae2e.   throw v0;
  catch  [|any|] @[L0aae0e..L0aae14] goto L0aae2a;
  catch  [|any|] @[L0aae1a..L0aae28] goto L0aae2a;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0aae54.   (@monitorenter v1)
#L0aae56.   call temp:=  [|java:lang:StringBuffer.append0|](v1, v2, v3, v4) @signature [|Ljava/lang/StringBuffer;.append0:(Ljava/lang/CharSequence;II)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aae5c.   (@monitorexit v1)
#L0aae5e.   return v1  @type object;
#L0aae60.   v0:= Exception  @type object;
#L0aae62.   (@monitorexit v1)
#L0aae64.   throw v0;
  catch  [|any|] @[L0aae56..L0aae5c] goto L0aae60;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0aae84.   (@monitorenter v1)
#L0aae86.   if v2 != 0 then goto L0aae94;
#L0aae8a.   call temp:=  [|java:lang:StringBuffer.appendNull|](v1) @signature [|Ljava/lang/StringBuffer;.appendNull:()V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aae90.   (@monitorexit v1)
#L0aae92.   return v1  @type object;
#L0aae94.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0aae9a.   v0:= temp  @type object;
#L0aae9c.   call temp:=  [|java:lang:StringBuffer.append0|](v1, v0) @signature [|Ljava/lang/StringBuffer;.append0:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aaea2.   goto L0aae90;
#L0aaea4.   v0:= Exception  @type object;
#L0aaea6.   (@monitorexit v1)
#L0aaea8.   throw v0;
  catch  [|any|] @[L0aae8a..L0aae90] goto L0aaea4;
  catch  [|any|] @[L0aae94..L0aaea2] goto L0aaea4;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0aaed0.   (@monitorenter v1)
#L0aaed2.   call temp:=  [|java:lang:StringBuffer.append0|](v1, v2) @signature [|Ljava/lang/StringBuffer;.append0:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aaed8.   (@monitorexit v1)
#L0aaeda.   return v1  @type object;
#L0aaedc.   v0:= Exception  @type object;
#L0aaede.   (@monitorexit v1)
#L0aaee0.   throw v0;
  catch  [|any|] @[L0aaed2..L0aaed8] goto L0aaedc;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v3 @type (this), [|java:lang:StringBuffer|] v4 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aaf00.   (@monitorenter v3)
#L0aaf02.   if v4 != 0 then goto L0aaf10;
#L0aaf06.   call temp:=  [|java:lang:StringBuffer.appendNull|](v3) @signature [|Ljava/lang/StringBuffer;.appendNull:()V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aaf0c.   (@monitorexit v3)
#L0aaf0e.   return v3  @type object;
#L0aaf10.   (@monitorenter v4)
#L0aaf12.   call temp:=  [|java:lang:StringBuffer.getValue|](v4) @signature [|Ljava/lang/StringBuffer;.getValue:()[C|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aaf18.   v0:= temp  @type object;
#L0aaf1a.   v1:= 0  @length 4;
#L0aaf1c.   call temp:=  [|java:lang:StringBuffer.length|](v4) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aaf22.   v2:= temp;
#L0aaf24.   call temp:=  [|java:lang:StringBuffer.append0|](v3, v0, v1, v2) @signature [|Ljava/lang/StringBuffer;.append0:([CII)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aaf2a.   (@monitorexit v4)
#L0aaf2c.   goto L0aaf0c;
#L0aaf2e.   v0:= Exception  @type object;
#L0aaf30.   (@monitorexit v4)
#L0aaf32.   throw v0;
#L0aaf34.   v0:= Exception  @type object;
#L0aaf36.   (@monitorexit v3)
#L0aaf38.   throw v0;
  catch  [|any|] @[L0aaf06..L0aaf0c] goto L0aaf34;
  catch  [|any|] @[L0aaf10..L0aaf12] goto L0aaf34;
  catch  [|any|] @[L0aaf12..L0aaf32] goto L0aaf2e;
  catch  [|any|] @[L0aaf32..L0aaf34] goto L0aaf34;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|boolean|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:(Z)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aaf74.   if v2 == 0 then goto L0aaf86;
#L0aaf78.   v0:= "true" @type (object, string);
#L0aaf7c.   call temp:=  [|java:lang:StringBuffer.append|](v1, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aaf82.   v0:= temp  @type object;
#L0aaf84.   return v0  @type object;
#L0aaf86.   v0:= "false" @type (object, string);
#L0aaf8a.   goto L0aaf7c;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|char|][] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:([C)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0aaf9c.   (@monitorenter v1)
#L0aaf9e.   call temp:=  [|java:lang:StringBuffer.append0|](v1, v2) @signature [|Ljava/lang/StringBuffer;.append0:([C)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aafa4.   (@monitorexit v1)
#L0aafa6.   return v1  @type object;
#L0aafa8.   v0:= Exception  @type object;
#L0aafaa.   (@monitorexit v1)
#L0aafac.   throw v0;
  catch  [|any|] @[L0aaf9e..L0aafa4] goto L0aafa8;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.append|] ([|java:lang:StringBuffer|] v1 @type (this), [|char|][] v2, [|int|] v3, [|int|] v4) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.append:([CII)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0aafcc.   (@monitorenter v1)
#L0aafce.   call temp:=  [|java:lang:StringBuffer.append0|](v1, v2, v3, v4) @signature [|Ljava/lang/StringBuffer;.append0:([CII)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0aafd4.   (@monitorexit v1)
#L0aafd6.   return v1  @type object;
#L0aafd8.   v0:= Exception  @type object;
#L0aafda.   (@monitorexit v1)
#L0aafdc.   throw v0;
  catch  [|any|] @[L0aafce..L0aafd4] goto L0aafd8;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.appendCodePoint|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.appendCodePoint:(I)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aaffc.   call temp:=  [|java:lang:Character.toChars|](v2) @signature [|Ljava/lang/Character;.toChars:(I)[C|] @classDescriptor [|java:lang:Character|] @type static;
#L0ab002.   v0:= temp  @type object;
#L0ab004.   call temp:=  [|java:lang:StringBuffer.append|](v1, v0) @signature [|Ljava/lang/StringBuffer;.append:([C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab00a.   v0:= temp  @type object;
#L0ab00c.   return v0  @type object;

   }
    procedure [|int|] [|java:lang:StringBuffer.capacity|] ([|java:lang:StringBuffer|] v1 @type (this)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.capacity:()I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab020.   call temp:=  [|java:lang:AbstractStringBuilder.capacity|](v1) @signature [|Ljava/lang/AbstractStringBuilder;.capacity:()I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab026.   v0:= temp;
#L0ab028.   return v0;

   }
    procedure [|char|] [|java:lang:StringBuffer.charAt|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.charAt:(I)C|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab03c.   (@monitorenter v1)
#L0ab03e.   call temp:=  [|java:lang:AbstractStringBuilder.charAt|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.charAt:(I)C|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab044.   v0:= temp;
#L0ab046.   (@monitorexit v1)
#L0ab048.   return v0;
#L0ab04a.   v0:= Exception  @type object;
#L0ab04c.   (@monitorexit v1)
#L0ab04e.   throw v0;
  catch  [|any|] @[L0ab03e..L0ab044] goto L0ab04a;

   }
    procedure [|int|] [|java:lang:StringBuffer.codePointAt|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.codePointAt:(I)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab06c.   (@monitorenter v1)
#L0ab06e.   call temp:=  [|java:lang:AbstractStringBuilder.codePointAt|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.codePointAt:(I)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab074.   v0:= temp;
#L0ab076.   (@monitorexit v1)
#L0ab078.   return v0;
#L0ab07a.   v0:= Exception  @type object;
#L0ab07c.   (@monitorexit v1)
#L0ab07e.   throw v0;
  catch  [|any|] @[L0ab06e..L0ab074] goto L0ab07a;

   }
    procedure [|int|] [|java:lang:StringBuffer.codePointBefore|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.codePointBefore:(I)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab09c.   (@monitorenter v1)
#L0ab09e.   call temp:=  [|java:lang:AbstractStringBuilder.codePointBefore|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.codePointBefore:(I)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab0a4.   v0:= temp;
#L0ab0a6.   (@monitorexit v1)
#L0ab0a8.   return v0;
#L0ab0aa.   v0:= Exception  @type object;
#L0ab0ac.   (@monitorexit v1)
#L0ab0ae.   throw v0;
  catch  [|any|] @[L0ab09e..L0ab0a4] goto L0ab0aa;

   }
    procedure [|int|] [|java:lang:StringBuffer.codePointCount|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.codePointCount:(II)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab0cc.   (@monitorenter v1)
#L0ab0ce.   call temp:=  [|java:lang:AbstractStringBuilder.codePointCount|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.codePointCount:(II)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab0d4.   v0:= temp;
#L0ab0d6.   (@monitorexit v1)
#L0ab0d8.   return v0;
#L0ab0da.   v0:= Exception  @type object;
#L0ab0dc.   (@monitorexit v1)
#L0ab0de.   throw v0;
  catch  [|any|] @[L0ab0ce..L0ab0d4] goto L0ab0da;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.delete|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.delete:(II)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab0fc.   (@monitorenter v1)
#L0ab0fe.   call temp:=  [|java:lang:StringBuffer.delete0|](v1, v2, v3) @signature [|Ljava/lang/StringBuffer;.delete0:(II)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab104.   (@monitorexit v1)
#L0ab106.   return v1  @type object;
#L0ab108.   v0:= Exception  @type object;
#L0ab10a.   (@monitorexit v1)
#L0ab10c.   throw v0;
  catch  [|any|] @[L0ab0fe..L0ab104] goto L0ab108;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.deleteCharAt|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.deleteCharAt:(I)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab12c.   (@monitorenter v1)
#L0ab12e.   call temp:=  [|java:lang:StringBuffer.deleteCharAt0|](v1, v2) @signature [|Ljava/lang/StringBuffer;.deleteCharAt0:(I)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab134.   (@monitorexit v1)
#L0ab136.   return v1  @type object;
#L0ab138.   v0:= Exception  @type object;
#L0ab13a.   (@monitorexit v1)
#L0ab13c.   throw v0;
  catch  [|any|] @[L0ab12e..L0ab134] goto L0ab138;

   }
    procedure [|void|] [|java:lang:StringBuffer.ensureCapacity|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.ensureCapacity:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab15c.   (@monitorenter v1)
#L0ab15e.   call temp:=  [|java:lang:AbstractStringBuilder.ensureCapacity|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.ensureCapacity:(I)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab164.   (@monitorexit v1)
#L0ab166.   return @void ;
#L0ab168.   v0:= Exception  @type object;
#L0ab16a.   (@monitorexit v1)
#L0ab16c.   throw v0;
  catch  [|any|] @[L0ab15e..L0ab164] goto L0ab168;

   }
    procedure [|void|] [|java:lang:StringBuffer.getChars|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|int|] v3, [|char|][] v4, [|int|] v5) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.getChars:(II[CI)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab18c.   (@monitorenter v1)
#L0ab18e.   call temp:=  [|java:lang:AbstractStringBuilder.getChars|](v1, v2, v3, v4, v5) @signature [|Ljava/lang/AbstractStringBuilder;.getChars:(II[CI)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab194.   (@monitorexit v1)
#L0ab196.   return @void ;
#L0ab198.   v0:= Exception  @type object;
#L0ab19a.   (@monitorexit v1)
#L0ab19c.   throw v0;
  catch  [|any|] @[L0ab18e..L0ab194] goto L0ab198;

   }
    procedure [|int|] [|java:lang:StringBuffer.indexOf|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.indexOf:(Ljava/lang/String;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab1bc.   call temp:=  [|java:lang:AbstractStringBuilder.indexOf|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab1c2.   v0:= temp;
#L0ab1c4.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuffer.indexOf|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.indexOf:(Ljava/lang/String;I)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab1d8.   (@monitorenter v1)
#L0ab1da.   call temp:=  [|java:lang:AbstractStringBuilder.indexOf|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.indexOf:(Ljava/lang/String;I)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab1e0.   v0:= temp;
#L0ab1e2.   (@monitorexit v1)
#L0ab1e4.   return v0;
#L0ab1e6.   v0:= Exception  @type object;
#L0ab1e8.   (@monitorexit v1)
#L0ab1ea.   throw v0;
  catch  [|any|] @[L0ab1da..L0ab1e0] goto L0ab1e6;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|char|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(IC)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab208.   (@monitorenter v1)
#L0ab20a.   call temp:=  [|java:lang:StringBuffer.insert0|](v1, v2, v3) @signature [|Ljava/lang/StringBuffer;.insert0:(IC)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab210.   (@monitorexit v1)
#L0ab212.   return v1  @type object;
#L0ab214.   v0:= Exception  @type object;
#L0ab216.   (@monitorexit v1)
#L0ab218.   throw v0;
  catch  [|any|] @[L0ab20a..L0ab210] goto L0ab214;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|double|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(ID)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab238.   call temp:=  [|java:lang:Double.toString|](v3, v4) @signature [|Ljava/lang/Double;.toString:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:Double|] @type static;
#L0ab23e.   v0:= temp  @type object;
#L0ab240.   call temp:=  [|java:lang:StringBuffer.insert|](v1, v2, v0) @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab246.   v0:= temp  @type object;
#L0ab248.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|float|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(IF)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab25c.   call temp:=  [|java:lang:Float.toString|](v3) @signature [|Ljava/lang/Float;.toString:(F)Ljava/lang/String;|] @classDescriptor [|java:lang:Float|] @type static;
#L0ab262.   v0:= temp  @type object;
#L0ab264.   call temp:=  [|java:lang:StringBuffer.insert|](v1, v2, v0) @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab26a.   v0:= temp  @type object;
#L0ab26c.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(II)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab280.   call temp:=  [|java:lang:Integer.toString|](v3) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ab286.   v0:= temp  @type object;
#L0ab288.   call temp:=  [|java:lang:StringBuffer.insert|](v1, v2, v0) @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab28e.   v0:= temp  @type object;
#L0ab290.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|long|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(IJ)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab2a4.   call temp:=  [|java:lang:Long.toString|](v3, v4) @signature [|Ljava/lang/Long;.toString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L0ab2aa.   v0:= temp  @type object;
#L0ab2ac.   call temp:=  [|java:lang:StringBuffer.insert|](v1, v2, v0) @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab2b2.   v0:= temp  @type object;
#L0ab2b4.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|java:lang:CharSequence|] v3 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/CharSequence;)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab2c8.   (@monitorenter v1)
#L0ab2ca.   if v3 != 0 then goto L0ab2dc;
#L0ab2ce.   v0:= "null" @type (object, string);
#L0ab2d2.   call temp:=  [|java:lang:StringBuffer.insert0|](v1, v2, v0) @signature [|Ljava/lang/StringBuffer;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab2d8.   (@monitorexit v1)
#L0ab2da.   return v1  @type object;
#L0ab2dc.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ab2e2.   v0:= temp  @type object;
#L0ab2e4.   goto L0ab2d2;
#L0ab2e6.   v0:= Exception  @type object;
#L0ab2e8.   (@monitorexit v1)
#L0ab2ea.   throw v0;
  catch  [|any|] @[L0ab2ce..L0ab2d8] goto L0ab2e6;
  catch  [|any|] @[L0ab2dc..L0ab2e2] goto L0ab2e6;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|java:lang:CharSequence|] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/CharSequence;II)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab310.   (@monitorenter v1)
#L0ab312.   call temp:=  [|java:lang:StringBuffer.insert0|](v1, v2, v3, v4, v5) @signature [|Ljava/lang/StringBuffer;.insert0:(ILjava/lang/CharSequence;II)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab318.   (@monitorexit v1)
#L0ab31a.   return v1  @type object;
#L0ab31c.   v0:= Exception  @type object;
#L0ab31e.   (@monitorexit v1)
#L0ab320.   throw v0;
  catch  [|any|] @[L0ab312..L0ab318] goto L0ab31c;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/Object;)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab340.   if v3 != 0 then goto L0ab352;
#L0ab344.   v0:= "null" @type (object, string);
#L0ab348.   call temp:=  [|java:lang:StringBuffer.insert|](v1, v2, v0) @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab34e.   v0:= temp  @type object;
#L0ab350.   return v0  @type object;
#L0ab352.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ab358.   v0:= temp  @type object;
#L0ab35a.   goto L0ab348;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|java:lang:String|] v3 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/String;)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab36c.   (@monitorenter v1)
#L0ab36e.   call temp:=  [|java:lang:StringBuffer.insert0|](v1, v2, v3) @signature [|Ljava/lang/StringBuffer;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab374.   (@monitorexit v1)
#L0ab376.   return v1  @type object;
#L0ab378.   v0:= Exception  @type object;
#L0ab37a.   (@monitorexit v1)
#L0ab37c.   throw v0;
  catch  [|any|] @[L0ab36e..L0ab374] goto L0ab378;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|boolean|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(IZ)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab39c.   if v3 == 0 then goto L0ab3ae;
#L0ab3a0.   v0:= "true" @type (object, string);
#L0ab3a4.   call temp:=  [|java:lang:StringBuffer.insert|](v1, v2, v0) @signature [|Ljava/lang/StringBuffer;.insert:(ILjava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab3aa.   v0:= temp  @type object;
#L0ab3ac.   return v0  @type object;
#L0ab3ae.   v0:= "false" @type (object, string);
#L0ab3b2.   goto L0ab3a4;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|char|][] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(I[C)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab3c4.   (@monitorenter v1)
#L0ab3c6.   call temp:=  [|java:lang:StringBuffer.insert0|](v1, v2, v3) @signature [|Ljava/lang/StringBuffer;.insert0:(I[C)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab3cc.   (@monitorexit v1)
#L0ab3ce.   return v1  @type object;
#L0ab3d0.   v0:= Exception  @type object;
#L0ab3d2.   (@monitorexit v1)
#L0ab3d4.   throw v0;
  catch  [|any|] @[L0ab3c6..L0ab3cc] goto L0ab3d0;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.insert|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|char|][] v3, [|int|] v4, [|int|] v5) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.insert:(I[CII)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab3f4.   (@monitorenter v1)
#L0ab3f6.   call temp:=  [|java:lang:StringBuffer.insert0|](v1, v2, v3, v4, v5) @signature [|Ljava/lang/StringBuffer;.insert0:(I[CII)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab3fc.   (@monitorexit v1)
#L0ab3fe.   return v1  @type object;
#L0ab400.   v0:= Exception  @type object;
#L0ab402.   (@monitorexit v1)
#L0ab404.   throw v0;
  catch  [|any|] @[L0ab3f6..L0ab3fc] goto L0ab400;

   }
    procedure [|int|] [|java:lang:StringBuffer.lastIndexOf|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.lastIndexOf:(Ljava/lang/String;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab424.   call temp:=  [|java:lang:AbstractStringBuilder.lastIndexOf|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.lastIndexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab42a.   v0:= temp;
#L0ab42c.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuffer.lastIndexOf|] ([|java:lang:StringBuffer|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.lastIndexOf:(Ljava/lang/String;I)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab440.   (@monitorenter v1)
#L0ab442.   call temp:=  [|java:lang:AbstractStringBuilder.lastIndexOf|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.lastIndexOf:(Ljava/lang/String;I)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab448.   v0:= temp;
#L0ab44a.   (@monitorexit v1)
#L0ab44c.   return v0;
#L0ab44e.   v0:= Exception  @type object;
#L0ab450.   (@monitorexit v1)
#L0ab452.   throw v0;
  catch  [|any|] @[L0ab442..L0ab448] goto L0ab44e;

   }
    procedure [|int|] [|java:lang:StringBuffer.length|] ([|java:lang:StringBuffer|] v1 @type (this)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.length:()I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab470.   call temp:=  [|java:lang:AbstractStringBuilder.length|](v1) @signature [|Ljava/lang/AbstractStringBuilder;.length:()I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab476.   v0:= temp;
#L0ab478.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuffer.offsetByCodePoints|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.offsetByCodePoints:(II)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab48c.   (@monitorenter v1)
#L0ab48e.   call temp:=  [|java:lang:AbstractStringBuilder.offsetByCodePoints|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.offsetByCodePoints:(II)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab494.   v0:= temp;
#L0ab496.   (@monitorexit v1)
#L0ab498.   return v0;
#L0ab49a.   v0:= Exception  @type object;
#L0ab49c.   (@monitorexit v1)
#L0ab49e.   throw v0;
  catch  [|any|] @[L0ab48e..L0ab494] goto L0ab49a;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.replace|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|int|] v3, [|java:lang:String|] v4 @type (object)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.replace:(IILjava/lang/String;)Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab4bc.   (@monitorenter v1)
#L0ab4be.   call temp:=  [|java:lang:StringBuffer.replace0|](v1, v2, v3, v4) @signature [|Ljava/lang/StringBuffer;.replace0:(IILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab4c4.   (@monitorexit v1)
#L0ab4c6.   return v1  @type object;
#L0ab4c8.   v0:= Exception  @type object;
#L0ab4ca.   (@monitorexit v1)
#L0ab4cc.   throw v0;
  catch  [|any|] @[L0ab4be..L0ab4c4] goto L0ab4c8;

   }
    procedure [|java:lang:StringBuffer|] [|java:lang:StringBuffer.reverse|] ([|java:lang:StringBuffer|] v1 @type (this)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.reverse:()Ljava/lang/StringBuffer;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab4ec.   (@monitorenter v1)
#L0ab4ee.   call temp:=  [|java:lang:StringBuffer.reverse0|](v1) @signature [|Ljava/lang/StringBuffer;.reverse0:()V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab4f4.   (@monitorexit v1)
#L0ab4f6.   return v1  @type object;
#L0ab4f8.   v0:= Exception  @type object;
#L0ab4fa.   (@monitorexit v1)
#L0ab4fc.   throw v0;
  catch  [|any|] @[L0ab4ee..L0ab4f4] goto L0ab4f8;

   }
    procedure [|void|] [|java:lang:StringBuffer.setCharAt|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|char|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.setCharAt:(IC)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab51c.   (@monitorenter v1)
#L0ab51e.   call temp:=  [|java:lang:AbstractStringBuilder.setCharAt|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.setCharAt:(IC)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab524.   (@monitorexit v1)
#L0ab526.   return @void ;
#L0ab528.   v0:= Exception  @type object;
#L0ab52a.   (@monitorexit v1)
#L0ab52c.   throw v0;
  catch  [|any|] @[L0ab51e..L0ab524] goto L0ab528;

   }
    procedure [|void|] [|java:lang:StringBuffer.setLength|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.setLength:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab54c.   (@monitorenter v1)
#L0ab54e.   call temp:=  [|java:lang:AbstractStringBuilder.setLength|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.setLength:(I)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab554.   (@monitorexit v1)
#L0ab556.   return @void ;
#L0ab558.   v0:= Exception  @type object;
#L0ab55a.   (@monitorexit v1)
#L0ab55c.   throw v0;
  catch  [|any|] @[L0ab54e..L0ab554] goto L0ab558;

   }
    procedure [|java:lang:CharSequence|] [|java:lang:StringBuffer.subSequence|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.subSequence:(II)Ljava/lang/CharSequence;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab57c.   (@monitorenter v1)
#L0ab57e.   call temp:=  [|java:lang:AbstractStringBuilder.substring|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab584.   v0:= temp  @type object;
#L0ab586.   (@monitorexit v1)
#L0ab588.   return v0  @type object;
#L0ab58a.   v0:= Exception  @type object;
#L0ab58c.   (@monitorexit v1)
#L0ab58e.   throw v0;
  catch  [|any|] @[L0ab57e..L0ab584] goto L0ab58a;

   }
    procedure [|java:lang:String|] [|java:lang:StringBuffer.substring|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.substring:(I)Ljava/lang/String;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab5ac.   (@monitorenter v1)
#L0ab5ae.   call temp:=  [|java:lang:AbstractStringBuilder.substring|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab5b4.   v0:= temp  @type object;
#L0ab5b6.   (@monitorexit v1)
#L0ab5b8.   return v0  @type object;
#L0ab5ba.   v0:= Exception  @type object;
#L0ab5bc.   (@monitorexit v1)
#L0ab5be.   throw v0;
  catch  [|any|] @[L0ab5ae..L0ab5b4] goto L0ab5ba;

   }
    procedure [|java:lang:String|] [|java:lang:StringBuffer.substring|] ([|java:lang:StringBuffer|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.substring:(II)Ljava/lang/String;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab5dc.   (@monitorenter v1)
#L0ab5de.   call temp:=  [|java:lang:AbstractStringBuilder.substring|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab5e4.   v0:= temp  @type object;
#L0ab5e6.   (@monitorexit v1)
#L0ab5e8.   return v0  @type object;
#L0ab5ea.   v0:= Exception  @type object;
#L0ab5ec.   (@monitorexit v1)
#L0ab5ee.   throw v0;
  catch  [|any|] @[L0ab5de..L0ab5e4] goto L0ab5ea;

   }
    procedure [|java:lang:String|] [|java:lang:StringBuffer.toString|] ([|java:lang:StringBuffer|] v1 @type (this)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab60c.   (@monitorenter v1)
#L0ab60e.   call temp:=  [|java:lang:AbstractStringBuilder.toString|](v1) @signature [|Ljava/lang/AbstractStringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab614.   v0:= temp  @type object;
#L0ab616.   (@monitorexit v1)
#L0ab618.   return v0  @type object;
#L0ab61a.   v0:= Exception  @type object;
#L0ab61c.   (@monitorexit v1)
#L0ab61e.   throw v0;
  catch  [|any|] @[L0ab60e..L0ab614] goto L0ab61a;

   }
    procedure [|void|] [|java:lang:StringBuffer.trimToSize|] ([|java:lang:StringBuffer|] v1 @type (this)) @owner [|java:lang:StringBuffer|] @signature [|Ljava/lang/StringBuffer;.trimToSize:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ab63c.   (@monitorenter v1)
#L0ab63e.   call temp:=  [|java:lang:AbstractStringBuilder.trimToSize|](v1) @signature [|Ljava/lang/AbstractStringBuilder;.trimToSize:()V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab644.   (@monitorexit v1)
#L0ab646.   return @void ;
#L0ab648.   v0:= Exception  @type object;
#L0ab64a.   (@monitorexit v1)
#L0ab64c.   throw v0;
  catch  [|any|] @[L0ab63e..L0ab644] goto L0ab648;

   }
record [|java:lang:StringBuilder|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:lang:AbstractStringBuilder|], [|java:lang:Appendable|], [|java:lang:CharSequence|], [|java:io:Serializable|] {
   }
      global [|long|] @@[|java:lang:StringBuilder.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:StringBuilder.<init>|] ([|java:lang:StringBuilder|] v0 @type (this)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ab66c.   call temp:=  [|java:lang:AbstractStringBuilder.<init>|](v0) @signature [|Ljava/lang/AbstractStringBuilder;.<init>:()V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type direct;
#L0ab672.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuilder.<init>|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ab684.   call temp:=  [|java:lang:AbstractStringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/AbstractStringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type direct;
#L0ab68a.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuilder.<init>|] ([|java:lang:StringBuilder|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/CharSequence;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0ab69c.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ab6a2.   v0:= temp  @type object;
#L0ab6a4.   call temp:=  [|java:lang:AbstractStringBuilder.<init>|](v1, v0) @signature [|Ljava/lang/AbstractStringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type direct;
#L0ab6aa.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuilder.<init>|] ([|java:lang:StringBuilder|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ab6bc.   call temp:=  [|java:lang:AbstractStringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/AbstractStringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type direct;
#L0ab6c2.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuilder.readObject|] ([|java:lang:StringBuilder|] v3 @type (this), [|java:io:ObjectInputStream|] v4 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ab6d4.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v4) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0ab6da.   call temp:=  [|java:io:ObjectInputStream.readInt|](v4) @signature [|Ljava/io/ObjectInputStream;.readInt:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0ab6e0.   v0:= temp;
#L0ab6e2.   call temp:=  [|java:io:ObjectInputStream.readObject|](v4) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0ab6e8.   v2:= temp  @type object;
#L0ab6ea.   v2:= ([|char|][])v2;
#L0ab6ee.   v1:= v2  @type object;
#L0ab6f0.   v1:= ([|char|][])v1;
#L0ab6f4.   call temp:=  [|java:lang:StringBuilder.set|](v3, v1, v0) @signature [|Ljava/lang/StringBuilder;.set:([CI)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab6fa.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuilder.writeObject|] ([|java:lang:StringBuilder|] v1 @type (this), [|java:io:ObjectOutputStream|] v2 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0ab70c.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v2) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0ab712.   call temp:=  [|java:lang:StringBuilder.length|](v1) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab718.   v0:= temp;
#L0ab71a.   call temp:=  [|java:io:ObjectOutputStream.writeInt|](v2, v0) @signature [|Ljava/io/ObjectOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0ab720.   call temp:=  [|java:lang:StringBuilder.getValue|](v1) @signature [|Ljava/lang/StringBuilder;.getValue:()[C|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab726.   v0:= temp  @type object;
#L0ab728.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v2, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0ab72e.   return @void ;

   }
    procedure [|java:lang:Appendable|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v1 @type (this), [|char|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab740.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab746.   v0:= temp  @type object;
#L0ab748.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab75c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab762.   v0:= temp  @type object;
#L0ab764.   return v0  @type object;

   }
    procedure [|java:lang:Appendable|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v1 @type (this), [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab778.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2, v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab77e.   v0:= temp  @type object;
#L0ab780.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v0 @type (this), [|char|] v1) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0ab794.   call temp:=  [|java:lang:StringBuilder.append0|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append0:(C)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab79a.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v1 @type (this), [|double|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab7ac.   call temp:=  [|java:lang:RealToString.getInstance|]() @signature [|Ljava/lang/RealToString;.getInstance:()Ljava/lang/RealToString;|] @classDescriptor [|java:lang:RealToString|] @type static;
#L0ab7b2.   v0:= temp  @type object;
#L0ab7b4.   call temp:=  [|java:lang:RealToString.appendDouble|](v0, v1, v2, v3) @signature [|Ljava/lang/RealToString;.appendDouble:(Ljava/lang/AbstractStringBuilder;D)V|] @classDescriptor [|java:lang:RealToString|] @type virtual;
#L0ab7ba.   return v1  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v1 @type (this), [|float|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab7cc.   call temp:=  [|java:lang:RealToString.getInstance|]() @signature [|Ljava/lang/RealToString;.getInstance:()Ljava/lang/RealToString;|] @classDescriptor [|java:lang:RealToString|] @type static;
#L0ab7d2.   v0:= temp  @type object;
#L0ab7d4.   call temp:=  [|java:lang:RealToString.appendFloat|](v0, v1, v2) @signature [|Ljava/lang/RealToString;.appendFloat:(Ljava/lang/AbstractStringBuilder;F)V|] @classDescriptor [|java:lang:RealToString|] @type virtual;
#L0ab7da.   return v1  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0ab7ec.   call temp:=  [|java:lang:IntegralToString.appendInt|](v0, v1) @signature [|Ljava/lang/IntegralToString;.appendInt:(Ljava/lang/AbstractStringBuilder;I)V|] @classDescriptor [|java:lang:IntegralToString|] @type static;
#L0ab7f2.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v0 @type (this), [|long|] v1) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0ab804.   call temp:=  [|java:lang:IntegralToString.appendLong|](v0, v1, v2) @signature [|Ljava/lang/IntegralToString;.appendLong:(Ljava/lang/AbstractStringBuilder;J)V|] @classDescriptor [|java:lang:IntegralToString|] @type static;
#L0ab80a.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v2 @type (this), [|java:lang:CharSequence|] v3 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ab81c.   if v3 != 0 then goto L0ab828;
#L0ab820.   call temp:=  [|java:lang:StringBuilder.appendNull|](v2) @signature [|Ljava/lang/StringBuilder;.appendNull:()V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab826.   return v2  @type object;
#L0ab828.   v0:= 0  @length 4;
#L0ab82a.   call temp:=  [|java:lang:CharSequence.length|](v3) @signature [|Ljava/lang/CharSequence;.length:()I|] @classDescriptor [|java:lang:CharSequence|] @type interface;
#L0ab830.   v1:= temp;
#L0ab832.   call temp:=  [|java:lang:StringBuilder.append0|](v2, v3, v0, v1) @signature [|Ljava/lang/StringBuilder;.append0:(Ljava/lang/CharSequence;II)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab838.   goto L0ab826;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v0 @type (this), [|java:lang:CharSequence|] v1 @type (object), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0ab84c.   call temp:=  [|java:lang:StringBuilder.append0|](v0, v1, v2, v3) @signature [|Ljava/lang/StringBuilder;.append0:(Ljava/lang/CharSequence;II)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab852.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab864.   if v2 != 0 then goto L0ab870;
#L0ab868.   call temp:=  [|java:lang:StringBuilder.appendNull|](v1) @signature [|Ljava/lang/StringBuilder;.appendNull:()V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab86e.   return v1  @type object;
#L0ab870.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ab876.   v0:= temp  @type object;
#L0ab878.   call temp:=  [|java:lang:StringBuilder.append0|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append0:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab87e.   goto L0ab86e;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0ab890.   call temp:=  [|java:lang:StringBuilder.append0|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append0:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab896.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v3 @type (this), [|java:lang:StringBuffer|] v4 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ab8a8.   if v4 != 0 then goto L0ab8b4;
#L0ab8ac.   call temp:=  [|java:lang:StringBuilder.appendNull|](v3) @signature [|Ljava/lang/StringBuilder;.appendNull:()V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab8b2.   return v3  @type object;
#L0ab8b4.   call temp:=  [|java:lang:StringBuffer.getValue|](v4) @signature [|Ljava/lang/StringBuffer;.getValue:()[C|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab8ba.   v0:= temp  @type object;
#L0ab8bc.   v1:= 0  @length 4;
#L0ab8be.   call temp:=  [|java:lang:StringBuffer.length|](v4) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0ab8c4.   v2:= temp;
#L0ab8c6.   call temp:=  [|java:lang:StringBuilder.append0|](v3, v0, v1, v2) @signature [|Ljava/lang/StringBuilder;.append0:([CII)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab8cc.   goto L0ab8b2;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v1 @type (this), [|boolean|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab8e0.   if v2 == 0 then goto L0ab8f0;
#L0ab8e4.   v0:= "true" @type (object, string);
#L0ab8e8.   call temp:=  [|java:lang:StringBuilder.append0|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append0:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab8ee.   return v1  @type object;
#L0ab8f0.   v0:= "false" @type (object, string);
#L0ab8f4.   goto L0ab8e8;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v0 @type (this), [|char|][] v1) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:([C)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0ab908.   call temp:=  [|java:lang:StringBuilder.append0|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append0:([C)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab90e.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.append|] ([|java:lang:StringBuilder|] v0 @type (this), [|char|][] v1, [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0ab920.   call temp:=  [|java:lang:StringBuilder.append0|](v0, v1, v2, v3) @signature [|Ljava/lang/StringBuilder;.append0:([CII)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab926.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.appendCodePoint|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.appendCodePoint:(I)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ab938.   call temp:=  [|java:lang:Character.toChars|](v2) @signature [|Ljava/lang/Character;.toChars:(I)[C|] @classDescriptor [|java:lang:Character|] @type static;
#L0ab93e.   v0:= temp  @type object;
#L0ab940.   call temp:=  [|java:lang:StringBuilder.append0|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append0:([C)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab946.   return v1  @type object;

   }
    procedure [|int|] [|java:lang:StringBuilder.capacity|] ([|java:lang:StringBuilder|] v1 @type (this)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.capacity:()I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab958.   call temp:=  [|java:lang:AbstractStringBuilder.capacity|](v1) @signature [|Ljava/lang/AbstractStringBuilder;.capacity:()I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab95e.   v0:= temp;
#L0ab960.   return v0;

   }
    procedure [|char|] [|java:lang:StringBuilder.charAt|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.charAt:(I)C|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab974.   call temp:=  [|java:lang:AbstractStringBuilder.charAt|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.charAt:(I)C|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab97a.   v0:= temp;
#L0ab97c.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuilder.codePointAt|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.codePointAt:(I)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab990.   call temp:=  [|java:lang:AbstractStringBuilder.codePointAt|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.codePointAt:(I)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab996.   v0:= temp;
#L0ab998.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuilder.codePointBefore|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.codePointBefore:(I)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab9ac.   call temp:=  [|java:lang:AbstractStringBuilder.codePointBefore|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.codePointBefore:(I)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab9b2.   v0:= temp;
#L0ab9b4.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuilder.codePointCount|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.codePointCount:(II)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0ab9c8.   call temp:=  [|java:lang:AbstractStringBuilder.codePointCount|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.codePointCount:(II)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0ab9ce.   v0:= temp;
#L0ab9d0.   return v0;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.delete|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1, [|int|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0ab9e4.   call temp:=  [|java:lang:StringBuilder.delete0|](v0, v1, v2) @signature [|Ljava/lang/StringBuilder;.delete0:(II)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ab9ea.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.deleteCharAt|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0ab9fc.   call temp:=  [|java:lang:StringBuilder.deleteCharAt0|](v0, v1) @signature [|Ljava/lang/StringBuilder;.deleteCharAt0:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba02.   return v0  @type object;

   }
    procedure [|void|] [|java:lang:StringBuilder.ensureCapacity|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.ensureCapacity:(I)V|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
      
#L0aba14.   call temp:=  [|java:lang:AbstractStringBuilder.ensureCapacity|](v0, v1) @signature [|Ljava/lang/AbstractStringBuilder;.ensureCapacity:(I)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0aba1a.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuilder.getChars|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1, [|int|] v2, [|char|][] v3, [|int|] v4) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.getChars:(II[CI)V|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
      
#L0aba2c.   call temp:=  [|java:lang:AbstractStringBuilder.getChars|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/AbstractStringBuilder;.getChars:(II[CI)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0aba32.   return @void ;

   }
    procedure [|int|] [|java:lang:StringBuilder.indexOf|] ([|java:lang:StringBuilder|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.indexOf:(Ljava/lang/String;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0aba44.   call temp:=  [|java:lang:AbstractStringBuilder.indexOf|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0aba4a.   v0:= temp;
#L0aba4c.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuilder.indexOf|] ([|java:lang:StringBuilder|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.indexOf:(Ljava/lang/String;I)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0aba60.   call temp:=  [|java:lang:AbstractStringBuilder.indexOf|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.indexOf:(Ljava/lang/String;I)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0aba66.   v0:= temp;
#L0aba68.   return v0;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1, [|char|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0aba7c.   call temp:=  [|java:lang:StringBuilder.insert0|](v0, v1, v2) @signature [|Ljava/lang/StringBuilder;.insert0:(IC)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aba82.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|double|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(ID)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aba94.   call temp:=  [|java:lang:Double.toString|](v3, v4) @signature [|Ljava/lang/Double;.toString:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:Double|] @type static;
#L0aba9a.   v0:= temp  @type object;
#L0aba9c.   call temp:=  [|java:lang:StringBuilder.insert0|](v1, v2, v0) @signature [|Ljava/lang/StringBuilder;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abaa2.   return v1  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|float|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(IF)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0abab4.   call temp:=  [|java:lang:Float.toString|](v3) @signature [|Ljava/lang/Float;.toString:(F)Ljava/lang/String;|] @classDescriptor [|java:lang:Float|] @type static;
#L0ababa.   v0:= temp  @type object;
#L0ababc.   call temp:=  [|java:lang:StringBuilder.insert0|](v1, v2, v0) @signature [|Ljava/lang/StringBuilder;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abac2.   return v1  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(II)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0abad4.   call temp:=  [|java:lang:Integer.toString|](v3) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0abada.   v0:= temp  @type object;
#L0abadc.   call temp:=  [|java:lang:StringBuilder.insert0|](v1, v2, v0) @signature [|Ljava/lang/StringBuilder;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abae2.   return v1  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|long|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(IJ)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0abaf4.   call temp:=  [|java:lang:Long.toString|](v3, v4) @signature [|Ljava/lang/Long;.toString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L0abafa.   v0:= temp  @type object;
#L0abafc.   call temp:=  [|java:lang:StringBuilder.insert0|](v1, v2, v0) @signature [|Ljava/lang/StringBuilder;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb02.   return v1  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|java:lang:CharSequence|] v3 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/CharSequence;)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0abb14.   if v3 != 0 then goto L0abb24;
#L0abb18.   v0:= "null" @type (object, string);
#L0abb1c.   call temp:=  [|java:lang:StringBuilder.insert0|](v1, v2, v0) @signature [|Ljava/lang/StringBuilder;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb22.   return v1  @type object;
#L0abb24.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0abb2a.   v0:= temp  @type object;
#L0abb2c.   goto L0abb1c;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1, [|java:lang:CharSequence|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/CharSequence;II)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0abb40.   call temp:=  [|java:lang:StringBuilder.insert0|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/StringBuilder;.insert0:(ILjava/lang/CharSequence;II)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb46.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/Object;)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0abb58.   if v3 != 0 then goto L0abb68;
#L0abb5c.   v0:= "null" @type (object, string);
#L0abb60.   call temp:=  [|java:lang:StringBuilder.insert0|](v1, v2, v0) @signature [|Ljava/lang/StringBuilder;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb66.   return v1  @type object;
#L0abb68.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0abb6e.   v0:= temp  @type object;
#L0abb70.   goto L0abb60;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1, [|java:lang:String|] v2 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0abb84.   call temp:=  [|java:lang:StringBuilder.insert0|](v0, v1, v2) @signature [|Ljava/lang/StringBuilder;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abb8a.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|boolean|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(IZ)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0abb9c.   if v3 == 0 then goto L0abbac;
#L0abba0.   v0:= "true" @type (object, string);
#L0abba4.   call temp:=  [|java:lang:StringBuilder.insert0|](v1, v2, v0) @signature [|Ljava/lang/StringBuilder;.insert0:(ILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abbaa.   return v1  @type object;
#L0abbac.   v0:= "false" @type (object, string);
#L0abbb0.   goto L0abba4;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1, [|char|][] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(I[C)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0abbc4.   call temp:=  [|java:lang:StringBuilder.insert0|](v0, v1, v2) @signature [|Ljava/lang/StringBuilder;.insert0:(I[C)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abbca.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.insert|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1, [|char|][] v2, [|int|] v3, [|int|] v4) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.insert:(I[CII)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0abbdc.   call temp:=  [|java:lang:StringBuilder.insert0|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/StringBuilder;.insert0:(I[CII)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abbe2.   return v0  @type object;

   }
    procedure [|int|] [|java:lang:StringBuilder.lastIndexOf|] ([|java:lang:StringBuilder|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.lastIndexOf:(Ljava/lang/String;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0abbf4.   call temp:=  [|java:lang:AbstractStringBuilder.lastIndexOf|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.lastIndexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abbfa.   v0:= temp;
#L0abbfc.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuilder.lastIndexOf|] ([|java:lang:StringBuilder|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.lastIndexOf:(Ljava/lang/String;I)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0abc10.   call temp:=  [|java:lang:AbstractStringBuilder.lastIndexOf|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.lastIndexOf:(Ljava/lang/String;I)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abc16.   v0:= temp;
#L0abc18.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuilder.length|] ([|java:lang:StringBuilder|] v1 @type (this)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.length:()I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0abc2c.   call temp:=  [|java:lang:AbstractStringBuilder.length|](v1) @signature [|Ljava/lang/AbstractStringBuilder;.length:()I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abc32.   v0:= temp;
#L0abc34.   return v0;

   }
    procedure [|int|] [|java:lang:StringBuilder.offsetByCodePoints|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.offsetByCodePoints:(II)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0abc48.   call temp:=  [|java:lang:AbstractStringBuilder.offsetByCodePoints|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.offsetByCodePoints:(II)I|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abc4e.   v0:= temp;
#L0abc50.   return v0;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.replace|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1, [|int|] v2, [|java:lang:String|] v3 @type (object)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0abc64.   call temp:=  [|java:lang:StringBuilder.replace0|](v0, v1, v2, v3) @signature [|Ljava/lang/StringBuilder;.replace0:(IILjava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abc6a.   return v0  @type object;

   }
    procedure [|java:lang:StringBuilder|] [|java:lang:StringBuilder.reverse|] ([|java:lang:StringBuilder|] v0 @type (this)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.reverse:()Ljava/lang/StringBuilder;|] @Access PUBLIC {
      local temp ;
      
#L0abc7c.   call temp:=  [|java:lang:StringBuilder.reverse0|](v0) @signature [|Ljava/lang/StringBuilder;.reverse0:()V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abc82.   return v0  @type object;

   }
    procedure [|void|] [|java:lang:StringBuilder.setCharAt|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1, [|char|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.setCharAt:(IC)V|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
      
#L0abc94.   call temp:=  [|java:lang:AbstractStringBuilder.setCharAt|](v0, v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.setCharAt:(IC)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abc9a.   return @void ;

   }
    procedure [|void|] [|java:lang:StringBuilder.setLength|] ([|java:lang:StringBuilder|] v0 @type (this), [|int|] v1) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.setLength:(I)V|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
      
#L0abcac.   call temp:=  [|java:lang:AbstractStringBuilder.setLength|](v0, v1) @signature [|Ljava/lang/AbstractStringBuilder;.setLength:(I)V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abcb2.   return @void ;

   }
    procedure [|java:lang:CharSequence|] [|java:lang:StringBuilder.subSequence|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.subSequence:(II)Ljava/lang/CharSequence;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0abcc4.   call temp:=  [|java:lang:AbstractStringBuilder.subSequence|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.subSequence:(II)Ljava/lang/CharSequence;|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abcca.   v0:= temp  @type object;
#L0abccc.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:StringBuilder.substring|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.substring:(I)Ljava/lang/String;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0abce0.   call temp:=  [|java:lang:AbstractStringBuilder.substring|](v1, v2) @signature [|Ljava/lang/AbstractStringBuilder;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abce6.   v0:= temp  @type object;
#L0abce8.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:StringBuilder.substring|] ([|java:lang:StringBuilder|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.substring:(II)Ljava/lang/String;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0abcfc.   call temp:=  [|java:lang:AbstractStringBuilder.substring|](v1, v2, v3) @signature [|Ljava/lang/AbstractStringBuilder;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abd02.   v0:= temp  @type object;
#L0abd04.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:StringBuilder.toString|] ([|java:lang:StringBuilder|] v1 @type (this)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0abd18.   call temp:=  [|java:lang:AbstractStringBuilder.toString|](v1) @signature [|Ljava/lang/AbstractStringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abd1e.   v0:= temp  @type object;
#L0abd20.   return v0  @type object;

   }
    procedure [|void|] [|java:lang:StringBuilder.trimToSize|] ([|java:lang:StringBuilder|] v0 @type (this)) @owner [|java:lang:StringBuilder|] @signature [|Ljava/lang/StringBuilder;.trimToSize:()V|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
      
#L0abd34.   call temp:=  [|java:lang:AbstractStringBuilder.trimToSize|](v0) @signature [|Ljava/lang/AbstractStringBuilder;.trimToSize:()V|] @classDescriptor [|java:lang:AbstractStringBuilder|] @type super;
#L0abd3a.   return @void ;

   }
record [|java:lang:StringIndexOutOfBoundsException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IndexOutOfBoundsException|] {
   }
      global [|long|] @@[|java:lang:StringIndexOutOfBoundsException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:StringIndexOutOfBoundsException.<init>|] ([|java:lang:StringIndexOutOfBoundsException|] v0 @type (this)) @owner [|java:lang:StringIndexOutOfBoundsException|] @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0abd4c.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0abd52.   return @void ;

   }
    procedure [|void|] [|java:lang:StringIndexOutOfBoundsException.<init>|] ([|java:lang:StringIndexOutOfBoundsException|] v2 @type (this), [|int|] v3) @owner [|java:lang:StringIndexOutOfBoundsException|] @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0abd64.   v0:= new [|java:lang:StringBuilder|];
#L0abd68.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0abd6e.   v1:= "String index out of range: " @type (object, string);
#L0abd72.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abd78.   v0:= temp  @type object;
#L0abd7a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abd80.   v0:= temp  @type object;
#L0abd82.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abd88.   v0:= temp  @type object;
#L0abd8a.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v2, v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0abd90.   return @void ;

   }
    procedure [|void|] [|java:lang:StringIndexOutOfBoundsException.<init>|] ([|java:lang:StringIndexOutOfBoundsException|] v2 @type (this), [|int|] v3, [|int|] v4) @owner [|java:lang:StringIndexOutOfBoundsException|] @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(II)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0abda4.   v0:= new [|java:lang:StringBuilder|];
#L0abda8.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0abdae.   v1:= "length=" @type (object, string);
#L0abdb2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abdb8.   v0:= temp  @type object;
#L0abdba.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abdc0.   v0:= temp  @type object;
#L0abdc2.   v1:= "; index=" @type (object, string);
#L0abdc6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abdcc.   v0:= temp  @type object;
#L0abdce.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abdd4.   v0:= temp  @type object;
#L0abdd6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abddc.   v0:= temp  @type object;
#L0abdde.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v2, v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0abde4.   return @void ;

   }
    procedure [|void|] [|java:lang:StringIndexOutOfBoundsException.<init>|] ([|java:lang:StringIndexOutOfBoundsException|] v2 @type (this), [|int|] v3, [|int|] v4, [|int|] v5) @owner [|java:lang:StringIndexOutOfBoundsException|] @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(III)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0abdf8.   v0:= new [|java:lang:StringBuilder|];
#L0abdfc.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0abe02.   v1:= "length=" @type (object, string);
#L0abe06.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe0c.   v0:= temp  @type object;
#L0abe0e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe14.   v0:= temp  @type object;
#L0abe16.   v1:= "; regionStart=" @type (object, string);
#L0abe1a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe20.   v0:= temp  @type object;
#L0abe22.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe28.   v0:= temp  @type object;
#L0abe2a.   v1:= "; regionLength=" @type (object, string);
#L0abe2e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe34.   v0:= temp  @type object;
#L0abe36.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe3c.   v0:= temp  @type object;
#L0abe3e.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0abe44.   v0:= temp  @type object;
#L0abe46.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v2, v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0abe4c.   return @void ;

   }
    procedure [|void|] [|java:lang:StringIndexOutOfBoundsException.<init>|] ([|java:lang:StringIndexOutOfBoundsException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:StringIndexOutOfBoundsException|] @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0abe60.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0abe66.   return @void ;

   }
    procedure [|void|] [|java:lang:StringIndexOutOfBoundsException.<init>|] ([|java:lang:StringIndexOutOfBoundsException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:lang:StringIndexOutOfBoundsException|] @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0abe78.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0abe7e.   v0:= temp;
#L0abe80.   call temp:=  [|java:lang:StringIndexOutOfBoundsException.<init>|](v1, v0, v3) @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(II)V|] @classDescriptor [|java:lang:StringIndexOutOfBoundsException|] @type direct;
#L0abe86.   return @void ;

   }
    procedure [|void|] [|java:lang:StringIndexOutOfBoundsException.<init>|] ([|java:lang:StringIndexOutOfBoundsException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:lang:StringIndexOutOfBoundsException|] @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(Ljava/lang/String;II)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0abe98.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0abe9e.   v0:= temp;
#L0abea0.   call temp:=  [|java:lang:StringIndexOutOfBoundsException.<init>|](v1, v0, v3, v4) @signature [|Ljava/lang/StringIndexOutOfBoundsException;.<init>:(III)V|] @classDescriptor [|java:lang:StringIndexOutOfBoundsException|] @type direct;
#L0abea6.   return @void ;

   }
record [|java:lang:StringToReal$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|java:lang:StringToReal$StringExponentPair|]  @type class @AccessFlag FINAL  {
      [|long|] [|java:lang:StringToReal$StringExponentPair.e|]    @AccessFlag ;
      [|boolean|] [|java:lang:StringToReal$StringExponentPair.infinity|]    @AccessFlag ;
      [|boolean|] [|java:lang:StringToReal$StringExponentPair.negative|]    @AccessFlag ;
      [|java:lang:String|] [|java:lang:StringToReal$StringExponentPair.s|]    @AccessFlag ;
      [|boolean|] [|java:lang:StringToReal$StringExponentPair.zero|]    @AccessFlag ;
   }
    procedure [|void|] [|java:lang:StringToReal$StringExponentPair.<init>|] ([|java:lang:StringToReal$StringExponentPair|] v0 @type (this)) @owner [|java:lang:StringToReal$StringExponentPair|] @signature [|Ljava/lang/StringToReal$StringExponentPair;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0abeb8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0abebe.   return @void ;

   }
    procedure [|void|] [|java:lang:StringToReal$StringExponentPair.<init>|] ([|java:lang:StringToReal$StringExponentPair|] v0 @type (this), [|java:lang:StringToReal$1|] v1 @type (object)) @owner [|java:lang:StringToReal$StringExponentPair|] @signature [|Ljava/lang/StringToReal$StringExponentPair;.<init>:(Ljava/lang/StringToReal$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L0abed0.   call temp:=  [|java:lang:StringToReal$StringExponentPair.<init>|](v0) @signature [|Ljava/lang/StringToReal$StringExponentPair;.<init>:()V|] @classDescriptor [|java:lang:StringToReal$StringExponentPair|] @type direct;
#L0abed6.   return @void ;

   }
    procedure [|float|] [|java:lang:StringToReal$StringExponentPair.specialValue|] ([|java:lang:StringToReal$StringExponentPair|] v1 @type (this)) @owner [|java:lang:StringToReal$StringExponentPair|] @signature [|Ljava/lang/StringToReal$StringExponentPair;.specialValue:()F|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0abee8.   v0:= v1.[|java:lang:StringToReal$StringExponentPair.infinity|]   @boolean;
#L0abeec.   if v0 == 0 then goto L0abf04;
#L0abef0.   v0:= v1.[|java:lang:StringToReal$StringExponentPair.negative|]   @boolean;
#L0abef4.   if v0 == 0 then goto L0abefe;
#L0abef8.   v0:= -8388608  @length high16;
#L0abefc.   return v0;
#L0abefe.   v0:= 2139095040  @length high16;
#L0abf02.   goto L0abefc;
#L0abf04.   v0:= v1.[|java:lang:StringToReal$StringExponentPair.negative|]   @boolean;
#L0abf08.   if v0 == 0 then goto L0abf12;
#L0abf0c.   v0:= -2147483648  @length high16;
#L0abf10.   goto L0abefc;
#L0abf12.   v0:= 0  @length 4;
#L0abf14.   goto L0abefc;

   }
record [|java:lang:StringToReal|]  @type class @AccessFlag FINAL  {
   }
    procedure [|void|] [|java:lang:StringToReal.<init>|] ([|java:lang:StringToReal|] v0 @type (this)) @owner [|java:lang:StringToReal|] @signature [|Ljava/lang/StringToReal;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0abf28.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0abf2e.   return @void ;

   }
    procedure [|java:lang:StringToReal$StringExponentPair|] [|java:lang:StringToReal.initialParse|] ([|java:lang:String|] v22 @type (object), [|int|] v23, [|boolean|] v24) @owner [|java:lang:StringToReal|] @signature [|Ljava/lang/StringToReal;.initialParse:(Ljava/lang/String;IZ)Ljava/lang/StringToReal$StringExponentPair;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
      
#L0abf40.   v16:= new [|java:lang:StringToReal$StringExponentPair|];
#L0abf44.   v18:= 0  @length 16;
#L0abf48.   v0:= v16  @type object;
#L0abf4c.   v1:= v18  @type object;
#L0abf50.   call temp:=  [|java:lang:StringToReal$StringExponentPair.<init>|](v0, v1) @signature [|Ljava/lang/StringToReal$StringExponentPair;.<init>:(Ljava/lang/StringToReal$1;)V|] @classDescriptor [|java:lang:StringToReal$StringExponentPair|] @type direct;
#L0abf56.   if v23 != 0 then goto L0abf6c;
#L0abf5a.   v0:= v22  @type object;
#L0abf5e.   v1:= v24;
#L0abf62.   call temp:=  [|java:lang:StringToReal.invalidReal|](v0, v1) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0abf68.   v18:= temp  @type object;
#L0abf6a.   throw v18;
#L0abf6c.   v18:= 0  @length 16;
#L0abf70.   v0:= v22  @type object;
#L0abf74.   v1:= v18;
#L0abf78.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0abf7e.   v18:= temp;
#L0abf80.   v19:= 45  @length 16;
#L0abf84.   v0:= v18;
#L0abf88.   v1:= v19;
#L0abf8c.   if v0 != v1 then goto L0abffe;
#L0abf90.   v18:= 1  @length 16;
#L0abf94.   v0:= v18;
#L0abf98.   v1:= v16  @type object;
#L0abf9c.   v1.[|java:lang:StringToReal$StringExponentPair.negative|]  := v0 @boolean;
#L0abfa0.   v18:= v23 + -1;
#L0abfa4.   v0:= v22  @type object;
#L0abfa8.   v1:= v18;
#L0abfac.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0abfb2.   v5:= temp;
#L0abfb4.   v18:= 68  @length 16;
#L0abfb8.   v0:= v18;
#L0abfbc.   if v5 == v0 then goto L0abfe4;
#L0abfc0.   v18:= 100  @length 16;
#L0abfc4.   v0:= v18;
#L0abfc8.   if v5 == v0 then goto L0abfe4;
#L0abfcc.   v18:= 70  @length 16;
#L0abfd0.   v0:= v18;
#L0abfd4.   if v5 == v0 then goto L0abfe4;
#L0abfd8.   v18:= 102  @length 16;
#L0abfdc.   v0:= v18;
#L0abfe0.   if v5 != v0 then goto L0ac004;
#L0abfe4.   v23:= v23 + -1;
#L0abfe8.   if v23 != 0 then goto L0ac004;
#L0abfec.   v0:= v22  @type object;
#L0abff0.   v1:= v24;
#L0abff4.   call temp:=  [|java:lang:StringToReal.invalidReal|](v0, v1) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0abffa.   v18:= temp  @type object;
#L0abffc.   throw v18;
#L0abffe.   v18:= 0  @length 16;
#L0ac002.   goto L0abf94;
#L0ac004.   v18:= 69  @length 16;
#L0ac008.   v0:= v22  @type object;
#L0ac00c.   v1:= v18;
#L0ac010.   call temp:=  [|java:lang:String.indexOf|](v0, v1) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac016.   v18:= temp;
#L0ac018.   v19:= 101  @length 16;
#L0ac01c.   v0:= v22  @type object;
#L0ac020.   v1:= v19;
#L0ac024.   call temp:=  [|java:lang:String.indexOf|](v0, v1) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac02a.   v19:= temp;
#L0ac02c.   call temp:=  [|java:lang:Math.max|](v18, v19) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ac032.   v9:= temp;
#L0ac034.   v18:= -1  @length 16;
#L0ac038.   v0:= v18;
#L0ac03c.   if v9 == v0 then goto L0ac19e;
#L0ac040.   v18:= v9 + 1;
#L0ac044.   v0:= v18;
#L0ac048.   v1:= v23;
#L0ac04c.   if v0 != v1 then goto L0ac062;
#L0ac050.   v0:= v22  @type object;
#L0ac054.   v1:= v24;
#L0ac058.   call temp:=  [|java:lang:StringToReal.invalidReal|](v0, v1) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac05e.   v18:= temp  @type object;
#L0ac060.   throw v18;
#L0ac062.   v11:= v9 + 1;
#L0ac066.   v15:= 0  @length 4;
#L0ac068.   v0:= v22  @type object;
#L0ac06c.   call temp:=  [|java:lang:String.charAt|](v0, v11) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac072.   v13:= temp;
#L0ac074.   v18:= 43  @length 16;
#L0ac078.   v0:= v18;
#L0ac07c.   if v13 == v0 then goto L0ac08c;
#L0ac080.   v18:= 45  @length 16;
#L0ac084.   v0:= v18;
#L0ac088.   if v13 != v0 then goto L0ac09e;
#L0ac08c.   v18:= 45  @length 16;
#L0ac090.   v0:= v18;
#L0ac094.   if v13 != v0 then goto L0ac0cc;
#L0ac098.   v15:= 1  @length 4;
#L0ac09a.   v11:= v11 + 1;
#L0ac09e.   v0:= v22  @type object;
#L0ac0a2.   v1:= v23;
#L0ac0a6.   call temp:=  [|java:lang:String.substring|](v0, v11, v1) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac0ac.   v12:= temp  @type object;
#L0ac0ae.   call temp:=  [|java:lang:String.isEmpty|](v12) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac0b4.   v18:= temp;
#L0ac0b6.   if v18 == 0 then goto L0ac0d0;
#L0ac0ba.   v0:= v22  @type object;
#L0ac0be.   v1:= v24;
#L0ac0c2.   call temp:=  [|java:lang:StringToReal.invalidReal|](v0, v1) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac0c8.   v18:= temp  @type object;
#L0ac0ca.   throw v18;
#L0ac0cc.   v15:= 0  @length 4;
#L0ac0ce.   goto L0ac09a;
#L0ac0d0.   v14:= 0  @length 4;
#L0ac0d2.   call temp:=  [|java:lang:String.length|](v12) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac0d8.   v18:= temp;
#L0ac0da.   v0:= v18;
#L0ac0de.   if v14 >= v0 then goto L0ac11a;
#L0ac0e2.   call temp:=  [|java:lang:String.charAt|](v12, v14) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac0e8.   v6:= temp;
#L0ac0ea.   v18:= 48  @length 16;
#L0ac0ee.   v0:= v18;
#L0ac0f2.   if v6 < v0 then goto L0ac102;
#L0ac0f6.   v18:= 57  @length 16;
#L0ac0fa.   v0:= v18;
#L0ac0fe.   if v6 <= v0 then goto L0ac114;
#L0ac102.   v0:= v22  @type object;
#L0ac106.   v1:= v24;
#L0ac10a.   call temp:=  [|java:lang:StringToReal.invalidReal|](v0, v1) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac110.   v18:= temp  @type object;
#L0ac112.   throw v18;
#L0ac114.   v14:= v14 + 1;
#L0ac118.   goto L0ac0d2;
#L0ac11a.   call temp:=  [|java:lang:Integer.parseInt|](v12) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ac120.   v18:= temp;
#L0ac122.   v0:= v18;
#L0ac126.   v0:= (long)v0  @type i2l;
#L0ac128.   v18:= v0  @type wide;
#L0ac12c.   v0:= v18  @type wide;
#L0ac130.   v2:= v16  @type object;
#L0ac134.   v2.[|java:lang:StringToReal$StringExponentPair.e|]  := v0 @wide;
#L0ac138.   if v15 == 0 then goto L0ac15e;
#L0ac13c.   v0:= v16  @type object;
#L0ac140.   v0:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac144.   v18:= v0  @type wide;
#L0ac148.   v0:= v18  @type wide;
#L0ac14c.   v0:= -v0  @type long;
#L0ac14e.   v18:= v0  @type wide;
#L0ac152.   v0:= v18  @type wide;
#L0ac156.   v2:= v16  @type object;
#L0ac15a.   v2.[|java:lang:StringToReal$StringExponentPair.e|]  := v0 @wide;
#L0ac15e.   if v23 != 0 then goto L0ac1a4;
#L0ac162.   v0:= v22  @type object;
#L0ac166.   v1:= v24;
#L0ac16a.   call temp:=  [|java:lang:StringToReal.invalidReal|](v0, v1) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac170.   v18:= temp  @type object;
#L0ac172.   throw v18;
#L0ac174.   v10:= Exception  @type object;
#L0ac176.   if v15 == 0 then goto L0ac18c;
#L0ac17a.   v18:= 1  @length 16;
#L0ac17e.   v0:= v18;
#L0ac182.   v1:= v16  @type object;
#L0ac186.   v1.[|java:lang:StringToReal$StringExponentPair.zero|]  := v0 @boolean;
#L0ac18a.   return v16  @type object;
#L0ac18c.   v18:= 1  @length 16;
#L0ac190.   v0:= v18;
#L0ac194.   v1:= v16  @type object;
#L0ac198.   v1.[|java:lang:StringToReal$StringExponentPair.infinity|]  := v0 @boolean;
#L0ac19c.   goto L0ac18a;
#L0ac19e.   v9:= v23;
#L0ac1a2.   goto L0ac15e;
#L0ac1a4.   v17:= 0  @length 16;
#L0ac1a8.   v0:= v22  @type object;
#L0ac1ac.   v1:= v17;
#L0ac1b0.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac1b6.   v5:= temp;
#L0ac1b8.   v18:= 45  @length 16;
#L0ac1bc.   v0:= v18;
#L0ac1c0.   if v5 != v0 then goto L0ac1f2;
#L0ac1c4.   v17:= v17 + 1;
#L0ac1c8.   v23:= v23 + -1;
#L0ac1cc.   v18:= 1  @length 16;
#L0ac1d0.   v0:= v18;
#L0ac1d4.   v1:= v16  @type object;
#L0ac1d8.   v1.[|java:lang:StringToReal$StringExponentPair.negative|]  := v0 @boolean;
#L0ac1dc.   if v23 != 0 then goto L0ac208;
#L0ac1e0.   v0:= v22  @type object;
#L0ac1e4.   v1:= v24;
#L0ac1e8.   call temp:=  [|java:lang:StringToReal.invalidReal|](v0, v1) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac1ee.   v18:= temp  @type object;
#L0ac1f0.   throw v18;
#L0ac1f2.   v18:= 43  @length 16;
#L0ac1f6.   v0:= v18;
#L0ac1fa.   if v5 != v0 then goto L0ac1dc;
#L0ac1fe.   v17:= v17 + 1;
#L0ac202.   v23:= v23 + -1;
#L0ac206.   goto L0ac1dc;
#L0ac208.   v18:= 46  @length 16;
#L0ac20c.   v0:= v22  @type object;
#L0ac210.   v1:= v18;
#L0ac214.   call temp:=  [|java:lang:String.indexOf|](v0, v1) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac21a.   v8:= temp;
#L0ac21c.   v18:= -1  @length 16;
#L0ac220.   v0:= v18;
#L0ac224.   if v8 <= v0 then goto L0ac2ba;
#L0ac228.   v0:= v16  @type object;
#L0ac22c.   v0:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac230.   v18:= v0  @type wide;
#L0ac234.   v20:= v9 - v8  @type int;
#L0ac238.   v20:= v20 + -1;
#L0ac23c.   v0:= v20;
#L0ac240.   v0:= (long)v0  @type i2l;
#L0ac242.   v20:= v0  @type wide;
#L0ac246.   v18:= v18 - v20  @type long;
#L0ac24a.   v0:= v18  @type wide;
#L0ac24e.   v2:= v16  @type object;
#L0ac252.   v2.[|java:lang:StringToReal$StringExponentPair.e|]  := v0 @wide;
#L0ac256.   v18:= new [|java:lang:StringBuilder|];
#L0ac25a.   call temp:=  [|java:lang:StringBuilder.<init>|](v18) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ac260.   v0:= v22  @type object;
#L0ac264.   v1:= v17;
#L0ac268.   call temp:=  [|java:lang:String.substring|](v0, v1, v8) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac26e.   v19:= temp  @type object;
#L0ac270.   call temp:=  [|java:lang:StringBuilder.append|](v18, v19) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac276.   v18:= temp  @type object;
#L0ac278.   v19:= v8 + 1;
#L0ac27c.   v0:= v22  @type object;
#L0ac280.   v1:= v19;
#L0ac284.   call temp:=  [|java:lang:String.substring|](v0, v1, v9) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac28a.   v19:= temp  @type object;
#L0ac28c.   call temp:=  [|java:lang:StringBuilder.append|](v18, v19) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac292.   v18:= temp  @type object;
#L0ac294.   call temp:=  [|java:lang:StringBuilder.toString|](v18) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac29a.   v22:= temp  @type object;
#L0ac29c.   call temp:=  [|java:lang:String.length|](v22) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac2a2.   v23:= temp;
#L0ac2a4.   if v23 != 0 then goto L0ac2cc;
#L0ac2a8.   v0:= v22  @type object;
#L0ac2ac.   v1:= v24;
#L0ac2b0.   call temp:=  [|java:lang:StringToReal.invalidReal|](v0, v1) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac2b6.   v18:= temp  @type object;
#L0ac2b8.   throw v18;
#L0ac2ba.   v0:= v22  @type object;
#L0ac2be.   v1:= v17;
#L0ac2c2.   call temp:=  [|java:lang:String.substring|](v0, v1, v9) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac2c8.   v22:= temp  @type object;
#L0ac2ca.   goto L0ac29c;
#L0ac2cc.   v9:= v23;
#L0ac2d0.   v18:= 1  @length 16;
#L0ac2d4.   v0:= v18;
#L0ac2d8.   if v9 <= v0 then goto L0ac306;
#L0ac2dc.   v18:= v9 + -1;
#L0ac2e0.   v0:= v22  @type object;
#L0ac2e4.   v1:= v18;
#L0ac2e8.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac2ee.   v18:= temp;
#L0ac2f0.   v19:= 48  @length 16;
#L0ac2f4.   v0:= v18;
#L0ac2f8.   v1:= v19;
#L0ac2fc.   if v0 != v1 then goto L0ac306;
#L0ac300.   v9:= v9 + -1;
#L0ac304.   goto L0ac2d0;
#L0ac306.   v17:= 0  @length 16;
#L0ac30a.   v18:= v9 + -1;
#L0ac30e.   v0:= v17;
#L0ac312.   v1:= v18;
#L0ac316.   if v0 >= v1 then goto L0ac340;
#L0ac31a.   v0:= v22  @type object;
#L0ac31e.   v1:= v17;
#L0ac322.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac328.   v18:= temp;
#L0ac32a.   v19:= 48  @length 16;
#L0ac32e.   v0:= v18;
#L0ac332.   v1:= v19;
#L0ac336.   if v0 != v1 then goto L0ac340;
#L0ac33a.   v17:= v17 + 1;
#L0ac33e.   goto L0ac30a;
#L0ac340.   v0:= v23;
#L0ac344.   if v9 != v0 then goto L0ac34c;
#L0ac348.   if v17 == 0 then goto L0ac386;
#L0ac34c.   v0:= v16  @type object;
#L0ac350.   v0:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac354.   v18:= v0  @type wide;
#L0ac358.   v20:= v23 - v9  @type int;
#L0ac35c.   v0:= v20;
#L0ac360.   v0:= (long)v0  @type i2l;
#L0ac362.   v20:= v0  @type wide;
#L0ac366.   v18:= v18 + v20  @type long;
#L0ac36a.   v0:= v18  @type wide;
#L0ac36e.   v2:= v16  @type object;
#L0ac372.   v2.[|java:lang:StringToReal$StringExponentPair.e|]  := v0 @wide;
#L0ac376.   v0:= v22  @type object;
#L0ac37a.   v1:= v17;
#L0ac37e.   call temp:=  [|java:lang:String.substring|](v0, v1, v9) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac384.   v22:= temp  @type object;
#L0ac386.   v3:= -359  @length 16;
#L0ac38a.   v4:= 52  @length 16;
#L0ac38e.   call temp:=  [|java:lang:String.length|](v22) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac394.   v23:= temp;
#L0ac396.   v18:= 52  @length 16;
#L0ac39a.   v0:= v23;
#L0ac39e.   v1:= v18;
#L0ac3a2.   if v0 <= v1 then goto L0ac42a;
#L0ac3a6.   v0:= v16  @type object;
#L0ac3aa.   v0:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac3ae.   v18:= v0  @type wide;
#L0ac3b2.   v20:= -359  @length wide16;
#L0ac3b6.   v18:= cmp(v18,v20);
#L0ac3ba.   if v18 >= 0 then goto L0ac42a;
#L0ac3be.   v0:= v16  @type object;
#L0ac3c2.   v0:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac3c6.   v18:= v0  @type wide;
#L0ac3ca.   v0:= v18  @type wide;
#L0ac3ce.   v0:= (int)v0  @type l2i;
#L0ac3d0.   v18:= v0;
#L0ac3d4.   v0:= v18;
#L0ac3d8.   v0:= v0 - -359;
#L0ac3dc.   v18:= v0;
#L0ac3e0.   v19:= v23 + -1;
#L0ac3e4.   call temp:=  [|java:lang:Math.min|](v18, v19) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ac3ea.   v7:= temp;
#L0ac3ec.   v18:= 0  @length 16;
#L0ac3f0.   v19:= v23 - v7  @type int;
#L0ac3f4.   v0:= v22  @type object;
#L0ac3f8.   v1:= v18;
#L0ac3fc.   v2:= v19;
#L0ac400.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac406.   v22:= temp  @type object;
#L0ac408.   v0:= v16  @type object;
#L0ac40c.   v0:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac410.   v18:= v0  @type wide;
#L0ac414.   v0:= (long)v7  @type i2l;
#L0ac416.   v20:= v0  @type wide;
#L0ac41a.   v18:= v18 + v20  @type long;
#L0ac41e.   v0:= v18  @type wide;
#L0ac422.   v2:= v16  @type object;
#L0ac426.   v2.[|java:lang:StringToReal$StringExponentPair.e|]  := v0 @wide;
#L0ac42a.   v0:= v16  @type object;
#L0ac42e.   v0:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac432.   v18:= v0  @type wide;
#L0ac436.   v20:= -1024  @length wide16;
#L0ac43a.   v18:= cmp(v18,v20);
#L0ac43e.   if v18 >= 0 then goto L0ac456;
#L0ac442.   v18:= 1  @length 16;
#L0ac446.   v0:= v18;
#L0ac44a.   v1:= v16  @type object;
#L0ac44e.   v1.[|java:lang:StringToReal$StringExponentPair.zero|]  := v0 @boolean;
#L0ac452.   goto L0ac18a;
#L0ac456.   v0:= v16  @type object;
#L0ac45a.   v0:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac45e.   v18:= v0  @type wide;
#L0ac462.   v20:= 1024  @length wide16;
#L0ac466.   v18:= cmp(v18,v20);
#L0ac46a.   if v18 <= 0 then goto L0ac482;
#L0ac46e.   v18:= 1  @length 16;
#L0ac472.   v0:= v18;
#L0ac476.   v1:= v16  @type object;
#L0ac47a.   v1.[|java:lang:StringToReal$StringExponentPair.infinity|]  := v0 @boolean;
#L0ac47e.   goto L0ac18a;
#L0ac482.   v0:= v22  @type object;
#L0ac486.   v1:= v16  @type object;
#L0ac48a.   v1.[|java:lang:StringToReal$StringExponentPair.s|]  := v0 @type object;
#L0ac48e.   goto L0ac18a;
  catch  [|java:lang:NumberFormatException|] @[L0ac11a..L0ac15e] goto L0ac174;

   }
    procedure [|java:lang:NumberFormatException|] [|java:lang:StringToReal.invalidReal|] ([|java:lang:String|] v3 @type (object), [|boolean|] v4) @owner [|java:lang:StringToReal|] @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ac4b4.   v1:= new [|java:lang:NumberFormatException|];
#L0ac4b8.   v0:= new [|java:lang:StringBuilder|];
#L0ac4bc.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ac4c2.   v2:= "Invalid " @type (object, string);
#L0ac4c6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4cc.   v2:= temp  @type object;
#L0ac4ce.   if v4 == 0 then goto L0ac50e;
#L0ac4d2.   v0:= "double" @type (object, string);
#L0ac4d6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4dc.   v0:= temp  @type object;
#L0ac4de.   v2:= ": \"" @type (object, string);
#L0ac4e2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4e8.   v0:= temp  @type object;
#L0ac4ea.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4f0.   v0:= temp  @type object;
#L0ac4f2.   v2:= "\"" @type (object, string);
#L0ac4f6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac4fc.   v0:= temp  @type object;
#L0ac4fe.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ac504.   v0:= temp  @type object;
#L0ac506.   call temp:=  [|java:lang:NumberFormatException.<init>|](v1, v0) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0ac50c.   throw v1;
#L0ac50e.   v0:= "float" @type (object, string);
#L0ac512.   goto L0ac4d6;

   }
    procedure [|double|] [|java:lang:StringToReal.parseDblImpl|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:lang:StringToReal|] @signature [|Ljava/lang/StringToReal;.parseDblImpl:(Ljava/lang/String;I)D|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|double|] [|java:lang:StringToReal.parseDouble|] ([|java:lang:String|] v10 @type (object)) @owner [|java:lang:StringToReal|] @signature [|Ljava/lang/StringToReal;.parseDouble:(Ljava/lang/String;)D|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0ac524.   v6:= -1  @length 4;
#L0ac526.   v9:= 1  @length 4;
#L0ac528.   call temp:=  [|java:lang:String.trim|](v10) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac52e.   v10:= temp  @type object;
#L0ac530.   call temp:=  [|java:lang:String.length|](v10) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac536.   v2:= temp;
#L0ac538.   if v2 != 0 then goto L0ac546;
#L0ac53c.   call temp:=  [|java:lang:StringToReal.invalidReal|](v10, v9) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac542.   v5:= temp  @type object;
#L0ac544.   throw v5;
#L0ac546.   v5:= v2 + -1;
#L0ac54a.   call temp:=  [|java:lang:String.charAt|](v10, v5) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac550.   v1:= temp;
#L0ac552.   v5:= 121  @length 16;
#L0ac556.   if v1 == v5 then goto L0ac562;
#L0ac55a.   v5:= 78  @length 16;
#L0ac55e.   if v1 != v5 then goto L0ac56e;
#L0ac562.   call temp:=  [|java:lang:StringToReal.parseName|](v10, v9) @signature [|Ljava/lang/StringToReal;.parseName:(Ljava/lang/String;Z)F|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac568.   v5:= temp;
#L0ac56a.   v3:= (double)v5  @type f2d;
#L0ac56c.   return v3  @type wide;
#L0ac56e.   v5:= "0x" @type (object, string);
#L0ac572.   call temp:=  [|java:lang:String.indexOf|](v10, v5) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac578.   v5:= temp;
#L0ac57a.   if v5 != v6 then goto L0ac58e;
#L0ac57e.   v5:= "0X" @type (object, string);
#L0ac582.   call temp:=  [|java:lang:String.indexOf|](v10, v5) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac588.   v5:= temp;
#L0ac58a.   if v5 == v6 then goto L0ac598;
#L0ac58e.   call temp:=  [|java:lang:HexStringParser.parseDouble|](v10) @signature [|Ljava/lang/HexStringParser;.parseDouble:(Ljava/lang/String;)D|] @classDescriptor [|java:lang:HexStringParser|] @type static;
#L0ac594.   v3:= temp  @type wide;
#L0ac596.   goto L0ac56c;
#L0ac598.   call temp:=  [|java:lang:StringToReal.initialParse|](v10, v2, v9) @signature [|Ljava/lang/StringToReal;.initialParse:(Ljava/lang/String;IZ)Ljava/lang/StringToReal$StringExponentPair;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac59e.   v0:= temp  @type object;
#L0ac5a0.   v5:= v0.[|java:lang:StringToReal$StringExponentPair.infinity|]   @boolean;
#L0ac5a4.   if v5 != 0 then goto L0ac5b0;
#L0ac5a8.   v5:= v0.[|java:lang:StringToReal$StringExponentPair.zero|]   @boolean;
#L0ac5ac.   if v5 == 0 then goto L0ac5bc;
#L0ac5b0.   call temp:=  [|java:lang:StringToReal$StringExponentPair.specialValue|](v0) @signature [|Ljava/lang/StringToReal$StringExponentPair;.specialValue:()F|] @classDescriptor [|java:lang:StringToReal$StringExponentPair|] @type virtual;
#L0ac5b6.   v5:= temp;
#L0ac5b8.   v3:= (double)v5  @type f2d;
#L0ac5ba.   goto L0ac56c;
#L0ac5bc.   v5:= v0.[|java:lang:StringToReal$StringExponentPair.s|]   @type object;
#L0ac5c0.   v6:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac5c4.   v6:= (int)v6  @type l2i;
#L0ac5c6.   call temp:=  [|java:lang:StringToReal.parseDblImpl|](v5, v6) @signature [|Ljava/lang/StringToReal;.parseDblImpl:(Ljava/lang/String;I)D|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac5cc.   v3:= temp  @type wide;
#L0ac5ce.   call temp:=  [|java:lang:Double.doubleToRawLongBits|](v3, v4) @signature [|Ljava/lang/Double;.doubleToRawLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L0ac5d4.   v5:= temp  @type wide;
#L0ac5d6.   v7:= -1  @length wide16;
#L0ac5da.   v5:= cmp(v5,v7);
#L0ac5de.   if v5 != 0 then goto L0ac5ec;
#L0ac5e2.   call temp:=  [|java:lang:StringToReal.invalidReal|](v10, v9) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac5e8.   v5:= temp  @type object;
#L0ac5ea.   throw v5;
#L0ac5ec.   v5:= v0.[|java:lang:StringToReal$StringExponentPair.negative|]   @boolean;
#L0ac5f0.   if v5 == 0 then goto L0ac56c;
#L0ac5f4.   v3:= -v3  @type double;
#L0ac5f6.   goto L0ac56c;

   }
    procedure [|float|] [|java:lang:StringToReal.parseFloat|] ([|java:lang:String|] v9 @type (object)) @owner [|java:lang:StringToReal|] @signature [|Ljava/lang/StringToReal;.parseFloat:(Ljava/lang/String;)F|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0ac608.   v8:= -1  @length 4;
#L0ac60a.   v7:= 0  @length 4;
#L0ac60c.   call temp:=  [|java:lang:String.trim|](v9) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac612.   v9:= temp  @type object;
#L0ac614.   call temp:=  [|java:lang:String.length|](v9) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac61a.   v2:= temp;
#L0ac61c.   if v2 != 0 then goto L0ac62a;
#L0ac620.   call temp:=  [|java:lang:StringToReal.invalidReal|](v9, v7) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac626.   v4:= temp  @type object;
#L0ac628.   throw v4;
#L0ac62a.   v4:= v2 + -1;
#L0ac62e.   call temp:=  [|java:lang:String.charAt|](v9, v4) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac634.   v1:= temp;
#L0ac636.   v4:= 121  @length 16;
#L0ac63a.   if v1 == v4 then goto L0ac646;
#L0ac63e.   v4:= 78  @length 16;
#L0ac642.   if v1 != v4 then goto L0ac650;
#L0ac646.   call temp:=  [|java:lang:StringToReal.parseName|](v9, v7) @signature [|Ljava/lang/StringToReal;.parseName:(Ljava/lang/String;Z)F|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac64c.   v3:= temp;
#L0ac64e.   return v3;
#L0ac650.   v4:= "0x" @type (object, string);
#L0ac654.   call temp:=  [|java:lang:String.indexOf|](v9, v4) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac65a.   v4:= temp;
#L0ac65c.   if v4 != v8 then goto L0ac670;
#L0ac660.   v4:= "0X" @type (object, string);
#L0ac664.   call temp:=  [|java:lang:String.indexOf|](v9, v4) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac66a.   v4:= temp;
#L0ac66c.   if v4 == v8 then goto L0ac67a;
#L0ac670.   call temp:=  [|java:lang:HexStringParser.parseFloat|](v9) @signature [|Ljava/lang/HexStringParser;.parseFloat:(Ljava/lang/String;)F|] @classDescriptor [|java:lang:HexStringParser|] @type static;
#L0ac676.   v3:= temp;
#L0ac678.   goto L0ac64e;
#L0ac67a.   call temp:=  [|java:lang:StringToReal.initialParse|](v9, v2, v7) @signature [|Ljava/lang/StringToReal;.initialParse:(Ljava/lang/String;IZ)Ljava/lang/StringToReal$StringExponentPair;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac680.   v0:= temp  @type object;
#L0ac682.   v4:= v0.[|java:lang:StringToReal$StringExponentPair.infinity|]   @boolean;
#L0ac686.   if v4 != 0 then goto L0ac692;
#L0ac68a.   v4:= v0.[|java:lang:StringToReal$StringExponentPair.zero|]   @boolean;
#L0ac68e.   if v4 == 0 then goto L0ac69c;
#L0ac692.   call temp:=  [|java:lang:StringToReal$StringExponentPair.specialValue|](v0) @signature [|Ljava/lang/StringToReal$StringExponentPair;.specialValue:()F|] @classDescriptor [|java:lang:StringToReal$StringExponentPair|] @type virtual;
#L0ac698.   v3:= temp;
#L0ac69a.   goto L0ac64e;
#L0ac69c.   v4:= v0.[|java:lang:StringToReal$StringExponentPair.s|]   @type object;
#L0ac6a0.   v5:= v0.[|java:lang:StringToReal$StringExponentPair.e|]   @wide;
#L0ac6a4.   v5:= (int)v5  @type l2i;
#L0ac6a6.   call temp:=  [|java:lang:StringToReal.parseFltImpl|](v4, v5) @signature [|Ljava/lang/StringToReal;.parseFltImpl:(Ljava/lang/String;I)F|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac6ac.   v3:= temp;
#L0ac6ae.   call temp:=  [|java:lang:Float.floatToRawIntBits|](v3) @signature [|Ljava/lang/Float;.floatToRawIntBits:(F)I|] @classDescriptor [|java:lang:Float|] @type static;
#L0ac6b4.   v4:= temp;
#L0ac6b6.   if v4 != v8 then goto L0ac6c4;
#L0ac6ba.   call temp:=  [|java:lang:StringToReal.invalidReal|](v9, v7) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac6c0.   v4:= temp  @type object;
#L0ac6c2.   throw v4;
#L0ac6c4.   v4:= v0.[|java:lang:StringToReal$StringExponentPair.negative|]   @boolean;
#L0ac6c8.   if v4 == 0 then goto L0ac64e;
#L0ac6cc.   v3:= -v3  @type float;
#L0ac6ce.   goto L0ac64e;

   }
    procedure [|float|] [|java:lang:StringToReal.parseFltImpl|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:lang:StringToReal|] @signature [|Ljava/lang/StringToReal;.parseFltImpl:(Ljava/lang/String;I)F|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|float|] [|java:lang:StringToReal.parseName|] ([|java:lang:String|] v10 @type (object), [|boolean|] v11) @owner [|java:lang:StringToReal|] @signature [|Ljava/lang/StringToReal;.parseName:(Ljava/lang/String;Z)F|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0ac6e0.   v5:= 8  @length 16;
#L0ac6e4.   v9:= 3  @length 4;
#L0ac6e6.   v1:= 0  @length 4;
#L0ac6e8.   v8:= 0  @length 4;
#L0ac6ea.   v2:= 0  @length 4;
#L0ac6ec.   call temp:=  [|java:lang:String.length|](v10) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac6f2.   v7:= temp;
#L0ac6f4.   call temp:=  [|java:lang:String.charAt|](v10, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac6fa.   v6:= temp;
#L0ac6fc.   v0:= 45  @length 16;
#L0ac700.   if v6 != v0 then goto L0ac730;
#L0ac704.   v8:= 1  @length 4;
#L0ac706.   v2:= v2 + 1;
#L0ac70a.   v7:= v7 + -1;
#L0ac70e.   if v7 != v5 then goto L0ac748;
#L0ac712.   v3:= "Infinity" @type (object, string);
#L0ac716.   v0:= v10  @type object;
#L0ac718.   v4:= v1;
#L0ac71a.   call temp:=  [|java:lang:String.regionMatches|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac720.   v0:= temp;
#L0ac722.   if v0 == 0 then goto L0ac748;
#L0ac726.   if v8 == 0 then goto L0ac742;
#L0ac72a.   v0:= -8388608  @length high16;
#L0ac72e.   return v0;
#L0ac730.   v0:= 43  @length 16;
#L0ac734.   if v6 != v0 then goto L0ac70e;
#L0ac738.   v2:= v2 + 1;
#L0ac73c.   v7:= v7 + -1;
#L0ac740.   goto L0ac70e;
#L0ac742.   v0:= 2139095040  @length high16;
#L0ac746.   goto L0ac72e;
#L0ac748.   if v7 != v9 then goto L0ac768;
#L0ac74c.   v3:= "NaN" @type (object, string);
#L0ac750.   v0:= v10  @type object;
#L0ac752.   v4:= v1;
#L0ac754.   v5:= v9;
#L0ac756.   call temp:=  [|java:lang:String.regionMatches|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ac75c.   v0:= temp;
#L0ac75e.   if v0 == 0 then goto L0ac768;
#L0ac762.   v0:= 2143289344  @length high16;
#L0ac766.   goto L0ac72e;
#L0ac768.   call temp:=  [|java:lang:StringToReal.invalidReal|](v10, v11) @signature [|Ljava/lang/StringToReal;.invalidReal:(Ljava/lang/String;Z)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:lang:StringToReal|] @type static;
#L0ac76e.   v0:= temp  @type object;
#L0ac770.   throw v0;

   }
record [|java:lang:SuppressWarnings|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT_ANNOTATION extends  [|java:lang:annotation:Annotation|] {
   }
    procedure [|java:lang:String|][] [|java:lang:SuppressWarnings.value|] () @owner [|java:lang:SuppressWarnings|] @signature [|Ljava/lang/SuppressWarnings;.value:()[Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:Map|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:util:Map.clear|] () @owner [|java:util:Map|] @signature [|Ljava/util/Map;.clear:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Map.containsKey|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Map|] @signature [|Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Map.containsValue|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Map|] @signature [|Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Set|] [|java:util:Map.entrySet|] () @owner [|java:util:Map|] @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Map.equals|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Map|] @signature [|Ljava/util/Map;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:Map.get|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Map|] @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:Map.hashCode|] () @owner [|java:util:Map|] @signature [|Ljava/util/Map;.hashCode:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Map.isEmpty|] () @owner [|java:util:Map|] @signature [|Ljava/util/Map;.isEmpty:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Set|] [|java:util:Map.keySet|] () @owner [|java:util:Map|] @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:Map.put|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:Map|] @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:Map.putAll|] ([|java:util:Map|] v0 @type (object)) @owner [|java:util:Map|] @signature [|Ljava/util/Map;.putAll:(Ljava/util/Map;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:Map.remove|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Map|] @signature [|Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:Map.size|] () @owner [|java:util:Map|] @signature [|Ljava/util/Map;.size:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Collection|] [|java:util:Map.values|] () @owner [|java:util:Map|] @signature [|Ljava/util/Map;.values:()Ljava/util/Collection;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:AbstractMap|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:util:Map|] {
      [|java:util:Set|] [|java:util:AbstractMap.keySet|]    @AccessFlag ;
      [|java:util:Collection|] [|java:util:AbstractMap.valuesCollection|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:AbstractMap.<init>|] ([|java:util:AbstractMap|] v0 @type (this)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0ac784.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ac78a.   return @void ;

   }
    procedure [|void|] [|java:util:AbstractMap.clear|] ([|java:util:AbstractMap|] v1 @type (this)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ac79c.   call temp:=  [|java:util:AbstractMap.entrySet|](v1) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0ac7a2.   v0:= temp  @type object;
#L0ac7a4.   call temp:=  [|java:util:Set.clear|](v0) @signature [|Ljava/util/Set;.clear:()V|] @classDescriptor [|java:util:Set|] @type interface;
#L0ac7aa.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractMap.clone|] ([|java:util:AbstractMap|] v2 @type (this)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.clone:()Ljava/lang/Object;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0ac7bc.   v1:= 0  @length 4;
#L0ac7be.   call temp:=  [|java:lang:Object.clone|](v2) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0ac7c4.   v0:= temp  @type object;
#L0ac7c6.   v0:= ([|java:util:AbstractMap|])v0;
#L0ac7ca.   v0.[|java:util:AbstractMap.keySet|]  := v1 @type object;
#L0ac7ce.   v0.[|java:util:AbstractMap.valuesCollection|]  := v1 @type object;
#L0ac7d2.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:AbstractMap.containsKey|] ([|java:util:AbstractMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ac7e4.   v2:= 1  @length 4;
#L0ac7e6.   call temp:=  [|java:util:AbstractMap.entrySet|](v3) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0ac7ec.   v1:= temp  @type object;
#L0ac7ee.   call temp:=  [|java:util:Set.iterator|](v1) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0ac7f4.   v0:= temp  @type object;
#L0ac7f6.   if v4 == 0 then goto L0ac82a;
#L0ac7fa.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac800.   v1:= temp;
#L0ac802.   if v1 == 0 then goto L0ac852;
#L0ac806.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac80c.   v1:= temp  @type object;
#L0ac80e.   v1:= ([|java:util:Map$Entry|])v1;
#L0ac812.   call temp:=  [|java:util:Map$Entry.getKey|](v1) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0ac818.   v1:= temp  @type object;
#L0ac81a.   call temp:=  [|java:lang:Object.equals|](v4, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ac820.   v1:= temp;
#L0ac822.   if v1 == 0 then goto L0ac7fa;
#L0ac826.   v1:= v2;
#L0ac828.   return v1;
#L0ac82a.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac830.   v1:= temp;
#L0ac832.   if v1 == 0 then goto L0ac852;
#L0ac836.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac83c.   v1:= temp  @type object;
#L0ac83e.   v1:= ([|java:util:Map$Entry|])v1;
#L0ac842.   call temp:=  [|java:util:Map$Entry.getKey|](v1) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0ac848.   v1:= temp  @type object;
#L0ac84a.   if v1 != 0 then goto L0ac82a;
#L0ac84e.   v1:= v2;
#L0ac850.   goto L0ac828;
#L0ac852.   v1:= 0  @length 4;
#L0ac854.   goto L0ac828;

   }
    procedure [|boolean|] [|java:util:AbstractMap.containsValue|] ([|java:util:AbstractMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.containsValue:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ac868.   v2:= 1  @length 4;
#L0ac86a.   call temp:=  [|java:util:AbstractMap.entrySet|](v3) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0ac870.   v1:= temp  @type object;
#L0ac872.   call temp:=  [|java:util:Set.iterator|](v1) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0ac878.   v0:= temp  @type object;
#L0ac87a.   if v4 == 0 then goto L0ac8ae;
#L0ac87e.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac884.   v1:= temp;
#L0ac886.   if v1 == 0 then goto L0ac8d6;
#L0ac88a.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac890.   v1:= temp  @type object;
#L0ac892.   v1:= ([|java:util:Map$Entry|])v1;
#L0ac896.   call temp:=  [|java:util:Map$Entry.getValue|](v1) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0ac89c.   v1:= temp  @type object;
#L0ac89e.   call temp:=  [|java:lang:Object.equals|](v4, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ac8a4.   v1:= temp;
#L0ac8a6.   if v1 == 0 then goto L0ac87e;
#L0ac8aa.   v1:= v2;
#L0ac8ac.   return v1;
#L0ac8ae.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac8b4.   v1:= temp;
#L0ac8b6.   if v1 == 0 then goto L0ac8d6;
#L0ac8ba.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac8c0.   v1:= temp  @type object;
#L0ac8c2.   v1:= ([|java:util:Map$Entry|])v1;
#L0ac8c6.   call temp:=  [|java:util:Map$Entry.getValue|](v1) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0ac8cc.   v1:= temp  @type object;
#L0ac8ce.   if v1 != 0 then goto L0ac8ae;
#L0ac8d2.   v1:= v2;
#L0ac8d4.   goto L0ac8ac;
#L0ac8d6.   v1:= 0  @length 4;
#L0ac8d8.   goto L0ac8ac;

   }
    procedure [|java:util:Set|] [|java:util:AbstractMap.entrySet|] () @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:AbstractMap.equals|] ([|java:util:AbstractMap|] v11 @type (this), [|java:lang:Object|] v12 @type (object)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0ac8ec.   v7:= 1  @length 4;
#L0ac8ee.   v8:= 0  @length 4;
#L0ac8f0.   if v11 != v12 then goto L0ac8f6;
#L0ac8f4.   return v7;
#L0ac8f6.   v9:= instanceof @varname v12 @type [|java:util:Map|];
#L0ac8fa.   if v9 == 0 then goto L0ac990;
#L0ac8fe.   v4:= v12  @type object;
#L0ac900.   v4:= ([|java:util:Map|])v4;
#L0ac904.   call temp:=  [|java:util:AbstractMap.size|](v11) @signature [|Ljava/util/AbstractMap;.size:()I|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0ac90a.   v9:= temp;
#L0ac90c.   call temp:=  [|java:util:Map.size|](v4) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L0ac912.   v10:= temp;
#L0ac914.   if v9 == v10 then goto L0ac91c;
#L0ac918.   v7:= v8;
#L0ac91a.   goto L0ac8f4;
#L0ac91c.   call temp:=  [|java:util:AbstractMap.entrySet|](v11) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0ac922.   v9:= temp  @type object;
#L0ac924.   call temp:=  [|java:util:Set.iterator|](v9) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0ac92a.   v1:= temp  @type object;
#L0ac92c.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac932.   v9:= temp;
#L0ac934.   if v9 == 0 then goto L0ac8f4;
#L0ac938.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac93e.   v0:= temp  @type object;
#L0ac940.   v0:= ([|java:util:Map$Entry|])v0;
#L0ac944.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0ac94a.   v3:= temp  @type object;
#L0ac94c.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0ac952.   v5:= temp  @type object;
#L0ac954.   call temp:=  [|java:util:Map.get|](v4, v3) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0ac95a.   v6:= temp  @type object;
#L0ac95c.   if v5 != 0 then goto L0ac974;
#L0ac960.   if v6 != 0 then goto L0ac970;
#L0ac964.   call temp:=  [|java:util:Map.containsKey|](v4, v3) @signature [|Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Map|] @type interface;
#L0ac96a.   v9:= temp;
#L0ac96c.   if v9 != 0 then goto L0ac92c;
#L0ac970.   v7:= v8;
#L0ac972.   goto L0ac8f4;
#L0ac974.   call temp:=  [|java:lang:Object.equals|](v5, v6) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ac97a.   v9:= temp;
#L0ac97c.   if v9 != 0 then goto L0ac92c;
#L0ac980.   v7:= v8;
#L0ac982.   goto L0ac8f4;
#L0ac984.   v2:= Exception  @type object;
#L0ac986.   v7:= v8;
#L0ac988.   goto L0ac8f4;
#L0ac98a.   v2:= Exception  @type object;
#L0ac98c.   v7:= v8;
#L0ac98e.   goto L0ac8f4;
#L0ac990.   v7:= v8;
#L0ac992.   goto L0ac8f4;
  catch  [|java:lang:NullPointerException|] @[L0ac91c..L0ac97a] goto L0ac984;
  catch  [|java:lang:ClassCastException|] @[L0ac91c..L0ac97a] goto L0ac98a;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractMap.get|] ([|java:util:AbstractMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ac9b4.   call temp:=  [|java:util:AbstractMap.entrySet|](v3) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0ac9ba.   v2:= temp  @type object;
#L0ac9bc.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0ac9c2.   v1:= temp  @type object;
#L0ac9c4.   if v4 == 0 then goto L0ac9fe;
#L0ac9c8.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac9ce.   v2:= temp;
#L0ac9d0.   if v2 == 0 then goto L0aca2c;
#L0ac9d4.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ac9da.   v0:= temp  @type object;
#L0ac9dc.   v0:= ([|java:util:Map$Entry|])v0;
#L0ac9e0.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0ac9e6.   v2:= temp  @type object;
#L0ac9e8.   call temp:=  [|java:lang:Object.equals|](v4, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ac9ee.   v2:= temp;
#L0ac9f0.   if v2 == 0 then goto L0ac9c8;
#L0ac9f4.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0ac9fa.   v2:= temp  @type object;
#L0ac9fc.   return v2  @type object;
#L0ac9fe.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0aca04.   v2:= temp;
#L0aca06.   if v2 == 0 then goto L0aca2c;
#L0aca0a.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0aca10.   v0:= temp  @type object;
#L0aca12.   v0:= ([|java:util:Map$Entry|])v0;
#L0aca16.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0aca1c.   v2:= temp  @type object;
#L0aca1e.   if v2 != 0 then goto L0ac9fe;
#L0aca22.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0aca28.   v2:= temp  @type object;
#L0aca2a.   goto L0ac9fc;
#L0aca2c.   v2:= 0  @length 4;
#L0aca2e.   goto L0ac9fc;

   }
    procedure [|int|] [|java:util:AbstractMap.hashCode|] ([|java:util:AbstractMap|] v3 @type (this)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0aca40.   v1:= 0  @length 4;
#L0aca42.   call temp:=  [|java:util:AbstractMap.entrySet|](v3) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0aca48.   v2:= temp  @type object;
#L0aca4a.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0aca50.   v0:= temp  @type object;
#L0aca52.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0aca58.   v2:= temp;
#L0aca5a.   if v2 == 0 then goto L0aca76;
#L0aca5e.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0aca64.   v2:= temp  @type object;
#L0aca66.   v2:= ([|java:util:Map$Entry|])v2;
#L0aca6a.   call temp:=  [|java:lang:Object.hashCode|](v2) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0aca70.   v2:= temp;
#L0aca72.   v1:= v1 + v2  @type int;
#L0aca74.   goto L0aca52;
#L0aca76.   return v1;

   }
    procedure [|boolean|] [|java:util:AbstractMap.isEmpty|] ([|java:util:AbstractMap|] v1 @type (this)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aca88.   call temp:=  [|java:util:AbstractMap.size|](v1) @signature [|Ljava/util/AbstractMap;.size:()I|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0aca8e.   v0:= temp;
#L0aca90.   if v0 != 0 then goto L0aca98;
#L0aca94.   v0:= 1  @length 4;
#L0aca96.   return v0;
#L0aca98.   v0:= 0  @length 4;
#L0aca9a.   goto L0aca96;

   }
    procedure [|java:util:Set|] [|java:util:AbstractMap.keySet|] ([|java:util:AbstractMap|] v1 @type (this)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.keySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0acaac.   v0:= v1.[|java:util:AbstractMap.keySet|]   @type object;
#L0acab0.   if v0 != 0 then goto L0acac2;
#L0acab4.   v0:= new [|java:util:AbstractMap$1|];
#L0acab8.   call temp:=  [|java:util:AbstractMap$1.<init>|](v0, v1) @signature [|Ljava/util/AbstractMap$1;.<init>:(Ljava/util/AbstractMap;)V|] @classDescriptor [|java:util:AbstractMap$1|] @type direct;
#L0acabe.   v1.[|java:util:AbstractMap.keySet|]  := v0 @type object;
#L0acac2.   v0:= v1.[|java:util:AbstractMap.keySet|]   @type object;
#L0acac6.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractMap.put|] ([|java:util:AbstractMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0acad8.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0acadc.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0acae2.   throw v0;

   }
    procedure [|void|] [|java:util:AbstractMap.putAll|] ([|java:util:AbstractMap|] v4 @type (this), [|java:util:Map|] v5 @type (object)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.putAll:(Ljava/util/Map;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0acaf4.   call temp:=  [|java:util:Map.entrySet|](v5) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0acafa.   v2:= temp  @type object;
#L0acafc.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0acb02.   v1:= temp  @type object;
#L0acb04.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acb0a.   v2:= temp;
#L0acb0c.   if v2 == 0 then goto L0acb34;
#L0acb10.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acb16.   v0:= temp  @type object;
#L0acb18.   v0:= ([|java:util:Map$Entry|])v0;
#L0acb1c.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0acb22.   v2:= temp  @type object;
#L0acb24.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0acb2a.   v3:= temp  @type object;
#L0acb2c.   call temp:=  [|java:util:AbstractMap.put|](v4, v2, v3) @signature [|Ljava/util/AbstractMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0acb32.   goto L0acb04;
#L0acb34.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractMap.remove|] ([|java:util:AbstractMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0acb48.   call temp:=  [|java:util:AbstractMap.entrySet|](v3) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0acb4e.   v2:= temp  @type object;
#L0acb50.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0acb56.   v1:= temp  @type object;
#L0acb58.   if v4 == 0 then goto L0acb98;
#L0acb5c.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acb62.   v2:= temp;
#L0acb64.   if v2 == 0 then goto L0acbcc;
#L0acb68.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acb6e.   v0:= temp  @type object;
#L0acb70.   v0:= ([|java:util:Map$Entry|])v0;
#L0acb74.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0acb7a.   v2:= temp  @type object;
#L0acb7c.   call temp:=  [|java:lang:Object.equals|](v4, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0acb82.   v2:= temp;
#L0acb84.   if v2 == 0 then goto L0acb5c;
#L0acb88.   call temp:=  [|java:util:Iterator.remove|](v1) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acb8e.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0acb94.   v2:= temp  @type object;
#L0acb96.   return v2  @type object;
#L0acb98.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acb9e.   v2:= temp;
#L0acba0.   if v2 == 0 then goto L0acbcc;
#L0acba4.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acbaa.   v0:= temp  @type object;
#L0acbac.   v0:= ([|java:util:Map$Entry|])v0;
#L0acbb0.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0acbb6.   v2:= temp  @type object;
#L0acbb8.   if v2 != 0 then goto L0acb98;
#L0acbbc.   call temp:=  [|java:util:Iterator.remove|](v1) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acbc2.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0acbc8.   v2:= temp  @type object;
#L0acbca.   goto L0acb96;
#L0acbcc.   v2:= 0  @length 4;
#L0acbce.   goto L0acb96;

   }
    procedure [|int|] [|java:util:AbstractMap.size|] ([|java:util:AbstractMap|] v1 @type (this)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0acbe0.   call temp:=  [|java:util:AbstractMap.entrySet|](v1) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0acbe6.   v0:= temp  @type object;
#L0acbe8.   call temp:=  [|java:util:Set.size|](v0) @signature [|Ljava/util/Set;.size:()I|] @classDescriptor [|java:util:Set|] @type interface;
#L0acbee.   v0:= temp;
#L0acbf0.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:AbstractMap.toString|] ([|java:util:AbstractMap|] v6 @type (this)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0acc04.   call temp:=  [|java:util:AbstractMap.isEmpty|](v6) @signature [|Ljava/util/AbstractMap;.isEmpty:()Z|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0acc0a.   v5:= temp;
#L0acc0c.   if v5 == 0 then goto L0acc16;
#L0acc10.   v5:= "{}" @type (object, string);
#L0acc14.   return v5  @type object;
#L0acc16.   v0:= new [|java:lang:StringBuilder|];
#L0acc1a.   call temp:=  [|java:util:AbstractMap.size|](v6) @signature [|Ljava/util/AbstractMap;.size:()I|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0acc20.   v5:= temp;
#L0acc22.   v5:= v5 * 28;
#L0acc26.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v5) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0acc2c.   v5:= 123  @length 16;
#L0acc30.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acc36.   call temp:=  [|java:util:AbstractMap.entrySet|](v6) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0acc3c.   v5:= temp  @type object;
#L0acc3e.   call temp:=  [|java:util:Set.iterator|](v5) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0acc44.   v2:= temp  @type object;
#L0acc46.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acc4c.   v5:= temp;
#L0acc4e.   if v5 == 0 then goto L0accbc;
#L0acc52.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acc58.   v1:= temp  @type object;
#L0acc5a.   v1:= ([|java:util:Map$Entry|])v1;
#L0acc5e.   call temp:=  [|java:util:Map$Entry.getKey|](v1) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0acc64.   v3:= temp  @type object;
#L0acc66.   if v3 == v6 then goto L0acca4;
#L0acc6a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acc70.   v5:= 61  @length 16;
#L0acc74.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acc7a.   call temp:=  [|java:util:Map$Entry.getValue|](v1) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0acc80.   v4:= temp  @type object;
#L0acc82.   if v4 == v6 then goto L0accb0;
#L0acc86.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acc8c.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0acc92.   v5:= temp;
#L0acc94.   if v5 == 0 then goto L0acc46;
#L0acc98.   v5:= ", " @type (object, string);
#L0acc9c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acca2.   goto L0acc46;
#L0acca4.   v5:= "(this Map)" @type (object, string);
#L0acca8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0accae.   goto L0acc70;
#L0accb0.   v5:= "(this Map)" @type (object, string);
#L0accb4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0accba.   goto L0acc8c;
#L0accbc.   v5:= 125  @length 16;
#L0accc0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0accc6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0acccc.   v5:= temp  @type object;
#L0accce.   goto L0acc14;

   }
    procedure [|java:util:Collection|] [|java:util:AbstractMap.values|] ([|java:util:AbstractMap|] v1 @type (this)) @owner [|java:util:AbstractMap|] @signature [|Ljava/util/AbstractMap;.values:()Ljava/util/Collection;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0acce0.   v0:= v1.[|java:util:AbstractMap.valuesCollection|]   @type object;
#L0acce4.   if v0 != 0 then goto L0accf6;
#L0acce8.   v0:= new [|java:util:AbstractMap$2|];
#L0accec.   call temp:=  [|java:util:AbstractMap$2.<init>|](v0, v1) @signature [|Ljava/util/AbstractMap$2;.<init>:(Ljava/util/AbstractMap;)V|] @classDescriptor [|java:util:AbstractMap$2|] @type direct;
#L0accf2.   v1.[|java:util:AbstractMap.valuesCollection|]  := v0 @type object;
#L0accf6.   v0:= v1.[|java:util:AbstractMap.valuesCollection|]   @type object;
#L0accfa.   return v0  @type object;

   }
record [|java:lang:System$SystemEnvironment|]  @type class @AccessFlag   extends [|java:util:AbstractMap|] {
      [|java:util:Map|] [|java:lang:System$SystemEnvironment.map|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:lang:System$SystemEnvironment.<init>|] ([|java:lang:System$SystemEnvironment|] v1 @type (this), [|java:util:Map|] v2 @type (object)) @owner [|java:lang:System$SystemEnvironment|] @signature [|Ljava/lang/System$SystemEnvironment;.<init>:(Ljava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0acd0c.   call temp:=  [|java:util:AbstractMap.<init>|](v1) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L0acd12.   call temp:=  [|java:util:Collections.unmodifiableMap|](v2) @signature [|Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;|] @classDescriptor [|java:util:Collections|] @type static;
#L0acd18.   v0:= temp  @type object;
#L0acd1a.   v1.[|java:lang:System$SystemEnvironment.map|]  := v0 @type object;
#L0acd1e.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:System$SystemEnvironment.toNonNullString|] ([|java:lang:System$SystemEnvironment|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:System$SystemEnvironment|] @signature [|Ljava/lang/System$SystemEnvironment;.toNonNullString:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0acd30.   if v3 != 0 then goto L0acd44;
#L0acd34.   v0:= new [|java:lang:NullPointerException|];
#L0acd38.   v1:= "o == null" @type (object, string);
#L0acd3c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0acd42.   throw v0;
#L0acd44.   v3:= ([|java:lang:String|])v3;
#L0acd48.   return v3  @type object;

   }
    procedure [|boolean|] [|java:lang:System$SystemEnvironment.containsKey|] ([|java:lang:System$SystemEnvironment|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:System$SystemEnvironment|] @signature [|Ljava/lang/System$SystemEnvironment;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0acd5c.   v0:= v2.[|java:lang:System$SystemEnvironment.map|]   @type object;
#L0acd60.   call temp:=  [|java:lang:System$SystemEnvironment.toNonNullString|](v2, v3) @signature [|Ljava/lang/System$SystemEnvironment;.toNonNullString:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:System$SystemEnvironment|] @type direct;
#L0acd66.   v1:= temp  @type object;
#L0acd68.   call temp:=  [|java:util:Map.containsKey|](v0, v1) @signature [|Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Map|] @type interface;
#L0acd6e.   v0:= temp;
#L0acd70.   return v0;

   }
    procedure [|boolean|] [|java:lang:System$SystemEnvironment.containsValue|] ([|java:lang:System$SystemEnvironment|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:System$SystemEnvironment|] @signature [|Ljava/lang/System$SystemEnvironment;.containsValue:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0acd84.   v0:= v2.[|java:lang:System$SystemEnvironment.map|]   @type object;
#L0acd88.   call temp:=  [|java:lang:System$SystemEnvironment.toNonNullString|](v2, v3) @signature [|Ljava/lang/System$SystemEnvironment;.toNonNullString:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:System$SystemEnvironment|] @type direct;
#L0acd8e.   v1:= temp  @type object;
#L0acd90.   call temp:=  [|java:util:Map.containsValue|](v0, v1) @signature [|Ljava/util/Map;.containsValue:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Map|] @type interface;
#L0acd96.   v0:= temp;
#L0acd98.   return v0;

   }
    procedure [|java:util:Set|] [|java:lang:System$SystemEnvironment.entrySet|] ([|java:lang:System$SystemEnvironment|] v1 @type (this)) @owner [|java:lang:System$SystemEnvironment|] @signature [|Ljava/lang/System$SystemEnvironment;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0acdac.   v0:= v1.[|java:lang:System$SystemEnvironment.map|]   @type object;
#L0acdb0.   call temp:=  [|java:util:Map.entrySet|](v0) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0acdb6.   v0:= temp  @type object;
#L0acdb8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:lang:System$SystemEnvironment.get|] ([|java:lang:System$SystemEnvironment|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:lang:System$SystemEnvironment|] @signature [|Ljava/lang/System$SystemEnvironment;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0acdcc.   call temp:=  [|java:lang:System$SystemEnvironment.get|](v1, v2) @signature [|Ljava/lang/System$SystemEnvironment;.get:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:System$SystemEnvironment|] @type virtual;
#L0acdd2.   v0:= temp  @type object;
#L0acdd4.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:System$SystemEnvironment.get|] ([|java:lang:System$SystemEnvironment|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:System$SystemEnvironment|] @signature [|Ljava/lang/System$SystemEnvironment;.get:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0acde8.   v0:= v2.[|java:lang:System$SystemEnvironment.map|]   @type object;
#L0acdec.   call temp:=  [|java:lang:System$SystemEnvironment.toNonNullString|](v2, v3) @signature [|Ljava/lang/System$SystemEnvironment;.toNonNullString:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:System$SystemEnvironment|] @type direct;
#L0acdf2.   v1:= temp  @type object;
#L0acdf4.   call temp:=  [|java:util:Map.get|](v0, v1) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0acdfa.   v0:= temp  @type object;
#L0acdfc.   v0:= ([|java:lang:String|])v0;
#L0ace00.   return v0  @type object;

   }
record [|java:lang:System|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
      global [|java:io:PrintStream|] @@[|java:lang:System.err|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:io:InputStream|] @@[|java:lang:System.in|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:lang:System.lineSeparator|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:io:PrintStream|] @@[|java:lang:System.out|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:util:Properties|] @@[|java:lang:System.systemProperties|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:lang:System.<clinit>|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ace14.   v0:= new [|java:io:PrintStream|];
#L0ace18.   v1:= new [|java:io:FileOutputStream|];
#L0ace1c.   v2:= @@[|java:io:FileDescriptor.err|]   @type object;
#L0ace20.   call temp:=  [|java:io:FileOutputStream.<init>|](v1, v2) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L0ace26.   call temp:=  [|java:io:PrintStream.<init>|](v0, v1) @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:PrintStream|] @type direct;
#L0ace2c.   @@[|java:lang:System.err|] := v0  @type object;
#L0ace30.   v0:= new [|java:io:PrintStream|];
#L0ace34.   v1:= new [|java:io:FileOutputStream|];
#L0ace38.   v2:= @@[|java:io:FileDescriptor.out|]   @type object;
#L0ace3c.   call temp:=  [|java:io:FileOutputStream.<init>|](v1, v2) @signature [|Ljava/io/FileOutputStream;.<init>:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|java:io:FileOutputStream|] @type direct;
#L0ace42.   call temp:=  [|java:io:PrintStream.<init>|](v0, v1) @signature [|Ljava/io/PrintStream;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:io:PrintStream|] @type direct;
#L0ace48.   @@[|java:lang:System.out|] := v0  @type object;
#L0ace4c.   v0:= new [|java:io:BufferedInputStream|];
#L0ace50.   v1:= new [|java:io:FileInputStream|];
#L0ace54.   v2:= @@[|java:io:FileDescriptor.in|]   @type object;
#L0ace58.   call temp:=  [|java:io:FileInputStream.<init>|](v1, v2) @signature [|Ljava/io/FileInputStream;.<init>:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|java:io:FileInputStream|] @type direct;
#L0ace5e.   call temp:=  [|java:io:BufferedInputStream.<init>|](v0, v1) @signature [|Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:io:BufferedInputStream|] @type direct;
#L0ace64.   @@[|java:lang:System.in|] := v0  @type object;
#L0ace68.   v0:= "line.separator" @type (object, string);
#L0ace6c.   call temp:=  [|java:lang:System.getProperty|](v0) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0ace72.   v0:= temp  @type object;
#L0ace74.   @@[|java:lang:System.lineSeparator|] := v0  @type object;
#L0ace78.   return @void ;

   }
    procedure [|void|] [|java:lang:System.<init>|] ([|java:lang:System|] v0 @type (this)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0ace8c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ace92.   return @void ;

   }
    procedure [|void|] [|java:lang:System.arraycopy|] ([|java:lang:Object|] v0 @type (object), [|int|] v1, [|java:lang:Object|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:lang:System.clearProperty|] ([|java:lang:String|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.clearProperty:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0acea4.   if v2 != 0 then goto L0aceb8;
#L0acea8.   v0:= new [|java:lang:NullPointerException|];
#L0aceac.   v1:= "key == null" @type (object, string);
#L0aceb0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0aceb6.   throw v0;
#L0aceb8.   call temp:=  [|java:lang:String.isEmpty|](v2) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0acebe.   v0:= temp;
#L0acec0.   if v0 == 0 then goto L0aced0;
#L0acec4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0acec8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0acece.   throw v0;
#L0aced0.   call temp:=  [|java:lang:System.getProperties|]() @signature [|Ljava/lang/System;.getProperties:()Ljava/util/Properties;|] @classDescriptor [|java:lang:System|] @type static;
#L0aced6.   v0:= temp  @type object;
#L0aced8.   call temp:=  [|java:util:Properties.remove|](v0, v2) @signature [|Ljava/util/Properties;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0acede.   v0:= temp  @type object;
#L0acee0.   v0:= ([|java:lang:String|])v0;
#L0acee4.   return v0  @type object;

   }
    procedure [|java:io:Console|] [|java:lang:System.console|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.console:()Ljava/io/Console;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0acef8.   call temp:=  [|java:io:Console.getConsole|]() @signature [|Ljava/io/Console;.getConsole:()Ljava/io/Console;|] @classDescriptor [|java:io:Console|] @type static;
#L0acefe.   v0:= temp  @type object;
#L0acf00.   return v0  @type object;

   }
    procedure [|long|] [|java:lang:System.currentTimeMillis|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:System.exit|] ([|int|] v1) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.exit:(I)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0acf14.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L0acf1a.   v0:= temp  @type object;
#L0acf1c.   call temp:=  [|java:lang:Runtime.exit|](v0, v1) @signature [|Ljava/lang/Runtime;.exit:(I)V|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L0acf22.   return @void ;

   }
    procedure [|void|] [|java:lang:System.gc|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.gc:()V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0acf34.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L0acf3a.   v0:= temp  @type object;
#L0acf3c.   call temp:=  [|java:lang:Runtime.gc|](v0) @signature [|Ljava/lang/Runtime;.gc:()V|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L0acf42.   return @void ;

   }
    procedure [|java:util:Properties|] [|java:lang:System.getProperties|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.getProperties:()Ljava/util/Properties;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0acf54.   v0:= @@[|java:lang:System.systemProperties|]   @type object;
#L0acf58.   if v0 != 0 then goto L0acf62;
#L0acf5c.   call temp:=  [|java:lang:System.initSystemProperties|]() @signature [|Ljava/lang/System;.initSystemProperties:()V|] @classDescriptor [|java:lang:System|] @type static;
#L0acf62.   v0:= @@[|java:lang:System.systemProperties|]   @type object;
#L0acf66.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:System.getProperty|] ([|java:lang:String|] v1 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0acf78.   v0:= 0  @length 4;
#L0acf7a.   call temp:=  [|java:lang:System.getProperty|](v1, v0) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0acf80.   v0:= temp  @type object;
#L0acf82.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:System.getProperty|] ([|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0acf94.   call temp:=  [|java:lang:String.isEmpty|](v1) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0acf9a.   v0:= temp;
#L0acf9c.   if v0 == 0 then goto L0acfac;
#L0acfa0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0acfa4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0acfaa.   throw v0;
#L0acfac.   call temp:=  [|java:lang:System.getProperties|]() @signature [|Ljava/lang/System;.getProperties:()Ljava/util/Properties;|] @classDescriptor [|java:lang:System|] @type static;
#L0acfb2.   v0:= temp  @type object;
#L0acfb4.   call temp:=  [|java:util:Properties.getProperty|](v0, v1, v2) @signature [|Ljava/util/Properties;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0acfba.   v0:= temp  @type object;
#L0acfbc.   return v0  @type object;

   }
    procedure [|java:lang:SecurityManager|] [|java:lang:System.getSecurityManager|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.getSecurityManager:()Ljava/lang/SecurityManager;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0acfd0.   v0:= 0  @length 4;
#L0acfd2.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:System.getenv|] ([|java:lang:String|] v1 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.getenv:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0acfe4.   v0:= 0  @length 4;
#L0acfe6.   call temp:=  [|java:lang:System.getenv|](v1, v0) @signature [|Ljava/lang/System;.getenv:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0acfec.   v0:= temp  @type object;
#L0acfee.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:System.getenv|] ([|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.getenv:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ad000.   if v3 != 0 then goto L0ad014;
#L0ad004.   v1:= new [|java:lang:NullPointerException|];
#L0ad008.   v2:= "name == null" @type (object, string);
#L0ad00c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0ad012.   throw v1;
#L0ad014.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L0ad018.   call temp:=  [|libcore:io:Os.getenv|](v1, v3) @signature [|Llibcore/io/Os;.getenv:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0ad01e.   v0:= temp  @type object;
#L0ad020.   if v0 == 0 then goto L0ad026;
#L0ad024.   return v0  @type object;
#L0ad026.   v0:= v4  @type object;
#L0ad028.   goto L0ad024;

   }
    procedure [|java:util:Map|] [|java:lang:System.getenv|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.getenv:()Ljava/util/Map;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0ad03c.   v5:= new [|java:util:HashMap|];
#L0ad040.   call temp:=  [|java:util:HashMap.<init>|](v5) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ad046.   v6:= @@[|libcore:io:Libcore.os|]   @type object;
#L0ad04a.   call temp:=  [|libcore:io:Os.environ|](v6) @signature [|Llibcore/io/Os;.environ:()[Ljava/lang/String;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0ad050.   v0:= temp  @type object;
#L0ad052.   v4:= v0.length;
#L0ad054.   v2:= 0  @length 4;
#L0ad056.   if v2 >= v4 then goto L0ad092;
#L0ad05a.   v1:= v0[v2]  @type object;
#L0ad05e.   v6:= 61  @length 16;
#L0ad062.   call temp:=  [|java:lang:String.indexOf|](v1, v6) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad068.   v3:= temp;
#L0ad06a.   v6:= -1  @length 4;
#L0ad06c.   if v3 == v6 then goto L0ad08c;
#L0ad070.   v6:= 0  @length 4;
#L0ad072.   call temp:=  [|java:lang:String.substring|](v1, v6, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad078.   v6:= temp  @type object;
#L0ad07a.   v7:= v3 + 1;
#L0ad07e.   call temp:=  [|java:lang:String.substring|](v1, v7) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad084.   v7:= temp  @type object;
#L0ad086.   call temp:=  [|java:util:Map.put|](v5, v6, v7) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0ad08c.   v2:= v2 + 1;
#L0ad090.   goto L0ad056;
#L0ad092.   v6:= new [|java:lang:System$SystemEnvironment|];
#L0ad096.   call temp:=  [|java:lang:System$SystemEnvironment.<init>|](v6, v5) @signature [|Ljava/lang/System$SystemEnvironment;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:lang:System$SystemEnvironment|] @type direct;
#L0ad09c.   return v6  @type object;

   }
    procedure [|int|] [|java:lang:System.identityHashCode|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:nio:channels:Channel|] [|java:lang:System.inheritedChannel|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.inheritedChannel:()Ljava/nio/channels/Channel;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad0b0.   call temp:=  [|java:nio:channels:spi:SelectorProvider.provider|]() @signature [|Ljava/nio/channels/spi/SelectorProvider;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type static;
#L0ad0b6.   v0:= temp  @type object;
#L0ad0b8.   call temp:=  [|java:nio:channels:spi:SelectorProvider.inheritedChannel|](v0) @signature [|Ljava/nio/channels/spi/SelectorProvider;.inheritedChannel:()Ljava/nio/channels/Channel;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type virtual;
#L0ad0be.   v0:= temp  @type object;
#L0ad0c0.   return v0  @type object;

   }
    procedure [|void|] [|java:lang:System.initSystemProperties|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.initSystemProperties:()V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0ad0d4.   call temp:=  [|dalvik:system:VMRuntime.getRuntime|]() @signature [|Ldalvik/system/VMRuntime;.getRuntime:()Ldalvik/system/VMRuntime;|] @classDescriptor [|dalvik:system:VMRuntime|] @type static;
#L0ad0da.   v4:= temp  @type object;
#L0ad0dc.   v1:= new [|java:util:Properties|];
#L0ad0e0.   call temp:=  [|java:util:Properties.<init>|](v1) @signature [|Ljava/util/Properties;.<init>:()V|] @classDescriptor [|java:util:Properties|] @type direct;
#L0ad0e6.   v3:= "http://www.android.com/" @type (object, string);
#L0ad0ea.   v2:= "The Android Project" @type (object, string);
#L0ad0ee.   v5:= "java.boot.class.path" @type (object, string);
#L0ad0f2.   call temp:=  [|dalvik:system:VMRuntime.bootClassPath|](v4) @signature [|Ldalvik/system/VMRuntime;.bootClassPath:()Ljava/lang/String;|] @classDescriptor [|dalvik:system:VMRuntime|] @type virtual;
#L0ad0f8.   v6:= temp  @type object;
#L0ad0fa.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad100.   v5:= "java.class.path" @type (object, string);
#L0ad104.   call temp:=  [|dalvik:system:VMRuntime.classPath|](v4) @signature [|Ldalvik/system/VMRuntime;.classPath:()Ljava/lang/String;|] @classDescriptor [|dalvik:system:VMRuntime|] @type virtual;
#L0ad10a.   v6:= temp  @type object;
#L0ad10c.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad112.   v5:= "java.class.version" @type (object, string);
#L0ad116.   v6:= "50.0" @type (object, string);
#L0ad11a.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad120.   v5:= "java.compiler" @type (object, string);
#L0ad124.   v6:= "" @type (object, string);
#L0ad128.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad12e.   v5:= "java.ext.dirs" @type (object, string);
#L0ad132.   v6:= "" @type (object, string);
#L0ad136.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad13c.   v5:= "java.version" @type (object, string);
#L0ad140.   v6:= "0" @type (object, string);
#L0ad144.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad14a.   v5:= "java.home" @type (object, string);
#L0ad14e.   v6:= "JAVA_HOME" @type (object, string);
#L0ad152.   v7:= "/system" @type (object, string);
#L0ad156.   call temp:=  [|java:lang:System.getenv|](v6, v7) @signature [|Ljava/lang/System;.getenv:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0ad15c.   v6:= temp  @type object;
#L0ad15e.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad164.   v5:= "java.io.tmpdir" @type (object, string);
#L0ad168.   v6:= "/tmp" @type (object, string);
#L0ad16c.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad172.   v5:= "java.library.path" @type (object, string);
#L0ad176.   v6:= "LD_LIBRARY_PATH" @type (object, string);
#L0ad17a.   call temp:=  [|java:lang:System.getenv|](v6) @signature [|Ljava/lang/System;.getenv:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0ad180.   v6:= temp  @type object;
#L0ad182.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad188.   v5:= "java.specification.name" @type (object, string);
#L0ad18c.   v6:= "Dalvik Core Library" @type (object, string);
#L0ad190.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad196.   v5:= "java.specification.vendor" @type (object, string);
#L0ad19a.   call temp:=  [|java:util:Properties.put|](v1, v5, v2) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad1a0.   v5:= "java.specification.version" @type (object, string);
#L0ad1a4.   v6:= "0.9" @type (object, string);
#L0ad1a8.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad1ae.   v5:= "java.vendor" @type (object, string);
#L0ad1b2.   call temp:=  [|java:util:Properties.put|](v1, v5, v2) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad1b8.   v5:= "java.vendor.url" @type (object, string);
#L0ad1bc.   call temp:=  [|java:util:Properties.put|](v1, v5, v3) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad1c2.   v5:= "java.vm.name" @type (object, string);
#L0ad1c6.   v6:= "Dalvik" @type (object, string);
#L0ad1ca.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad1d0.   v5:= "java.vm.specification.name" @type (object, string);
#L0ad1d4.   v6:= "Dalvik Virtual Machine Specification" @type (object, string);
#L0ad1d8.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad1de.   v5:= "java.vm.specification.vendor" @type (object, string);
#L0ad1e2.   call temp:=  [|java:util:Properties.put|](v1, v5, v2) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad1e8.   v5:= "java.vm.specification.version" @type (object, string);
#L0ad1ec.   v6:= "0.9" @type (object, string);
#L0ad1f0.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad1f6.   v5:= "java.vm.vendor" @type (object, string);
#L0ad1fa.   call temp:=  [|java:util:Properties.put|](v1, v5, v2) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad200.   v5:= "java.vm.version" @type (object, string);
#L0ad204.   call temp:=  [|dalvik:system:VMRuntime.vmVersion|](v4) @signature [|Ldalvik/system/VMRuntime;.vmVersion:()Ljava/lang/String;|] @classDescriptor [|dalvik:system:VMRuntime|] @type virtual;
#L0ad20a.   v6:= temp  @type object;
#L0ad20c.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad212.   v5:= "file.separator" @type (object, string);
#L0ad216.   v6:= "/" @type (object, string);
#L0ad21a.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad220.   v5:= "line.separator" @type (object, string);
#L0ad224.   v6:= "" @type (object, string);
#L0ad228.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad22e.   v5:= "path.separator" @type (object, string);
#L0ad232.   v6:= ":" @type (object, string);
#L0ad236.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad23c.   v5:= "java.runtime.name" @type (object, string);
#L0ad240.   v6:= "Android Runtime" @type (object, string);
#L0ad244.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad24a.   v5:= "java.runtime.version" @type (object, string);
#L0ad24e.   v6:= "0.9" @type (object, string);
#L0ad252.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad258.   v5:= "java.vm.vendor.url" @type (object, string);
#L0ad25c.   call temp:=  [|java:util:Properties.put|](v1, v5, v3) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad262.   v5:= "file.encoding" @type (object, string);
#L0ad266.   v6:= "UTF-8" @type (object, string);
#L0ad26a.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad270.   v5:= "user.language" @type (object, string);
#L0ad274.   v6:= "en" @type (object, string);
#L0ad278.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad27e.   v5:= "user.region" @type (object, string);
#L0ad282.   v6:= "US" @type (object, string);
#L0ad286.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad28c.   v5:= "user.home" @type (object, string);
#L0ad290.   v6:= "HOME" @type (object, string);
#L0ad294.   v7:= "" @type (object, string);
#L0ad298.   call temp:=  [|java:lang:System.getenv|](v6, v7) @signature [|Ljava/lang/System;.getenv:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0ad29e.   v6:= temp  @type object;
#L0ad2a0.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad2a6.   v5:= "user.name" @type (object, string);
#L0ad2aa.   v6:= "USER" @type (object, string);
#L0ad2ae.   v7:= "" @type (object, string);
#L0ad2b2.   call temp:=  [|java:lang:System.getenv|](v6, v7) @signature [|Ljava/lang/System;.getenv:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0ad2b8.   v6:= temp  @type object;
#L0ad2ba.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad2c0.   v5:= @@[|libcore:io:Libcore.os|]   @type object;
#L0ad2c4.   call temp:=  [|libcore:io:Os.uname|](v5) @signature [|Llibcore/io/Os;.uname:()Llibcore/io/StructUtsname;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0ad2ca.   v0:= temp  @type object;
#L0ad2cc.   v5:= "os.arch" @type (object, string);
#L0ad2d0.   v6:= v0.[|libcore:io:StructUtsname.machine|]   @type object;
#L0ad2d4.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad2da.   v5:= "os.name" @type (object, string);
#L0ad2de.   v6:= v0.[|libcore:io:StructUtsname.sysname|]   @type object;
#L0ad2e2.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad2e8.   v5:= "os.version" @type (object, string);
#L0ad2ec.   v6:= v0.[|libcore:io:StructUtsname.release|]   @type object;
#L0ad2f0.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad2f6.   v5:= "android.icu.library.version" @type (object, string);
#L0ad2fa.   call temp:=  [|libcore:icu:ICU.getIcuVersion|]() @signature [|Llibcore/icu/ICU;.getIcuVersion:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0ad300.   v6:= temp  @type object;
#L0ad302.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad308.   v5:= "android.icu.unicode.version" @type (object, string);
#L0ad30c.   call temp:=  [|libcore:icu:ICU.getUnicodeVersion|]() @signature [|Llibcore/icu/ICU;.getUnicodeVersion:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0ad312.   v6:= temp  @type object;
#L0ad314.   call temp:=  [|java:util:Properties.put|](v1, v5, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad31a.   call temp:=  [|java:lang:System.specialProperties|]() @signature [|Ljava/lang/System;.specialProperties:()[Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0ad320.   v5:= temp  @type object;
#L0ad322.   call temp:=  [|java:lang:System.parsePropertyAssignments|](v1, v5) @signature [|Ljava/lang/System;.parsePropertyAssignments:(Ljava/util/Properties;[Ljava/lang/String;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad328.   call temp:=  [|dalvik:system:VMRuntime.properties|](v4) @signature [|Ldalvik/system/VMRuntime;.properties:()[Ljava/lang/String;|] @classDescriptor [|dalvik:system:VMRuntime|] @type virtual;
#L0ad32e.   v5:= temp  @type object;
#L0ad330.   call temp:=  [|java:lang:System.parsePropertyAssignments|](v1, v5) @signature [|Ljava/lang/System;.parsePropertyAssignments:(Ljava/util/Properties;[Ljava/lang/String;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad336.   @@[|java:lang:System.systemProperties|] := v1  @type object;
#L0ad33a.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:System.lineSeparator|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.lineSeparator:()Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad34c.   v0:= @@[|java:lang:System.lineSeparator|]   @type object;
#L0ad350.   return v0  @type object;

   }
    procedure [|void|] [|java:lang:System.load|] ([|java:lang:String|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.load:(Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0ad364.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L0ad36a.   v0:= temp  @type object;
#L0ad36c.   call temp:=  [|dalvik:system:VMStack.getCallingClassLoader|]() @signature [|Ldalvik/system/VMStack;.getCallingClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L0ad372.   v1:= temp  @type object;
#L0ad374.   call temp:=  [|java:lang:Runtime.load|](v0, v2, v1) @signature [|Ljava/lang/Runtime;.load:(Ljava/lang/String;Ljava/lang/ClassLoader;)V|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L0ad37a.   return @void ;

   }
    procedure [|void|] [|java:lang:System.loadLibrary|] ([|java:lang:String|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.loadLibrary:(Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0ad38c.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L0ad392.   v0:= temp  @type object;
#L0ad394.   call temp:=  [|dalvik:system:VMStack.getCallingClassLoader|]() @signature [|Ldalvik/system/VMStack;.getCallingClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L0ad39a.   v1:= temp  @type object;
#L0ad39c.   call temp:=  [|java:lang:Runtime.loadLibrary|](v0, v2, v1) @signature [|Ljava/lang/Runtime;.loadLibrary:(Ljava/lang/String;Ljava/lang/ClassLoader;)V|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L0ad3a2.   return @void ;

   }
    procedure [|void|] [|java:lang:System.log|] ([|char|] v0, [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.log:(CLjava/lang/String;Ljava/lang/Throwable;)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:System.logE|] ([|java:lang:String|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.logE:(Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0ad3b4.   v0:= 69  @length 16;
#L0ad3b8.   v1:= 0  @length 4;
#L0ad3ba.   call temp:=  [|java:lang:System.log|](v0, v2, v1) @signature [|Ljava/lang/System;.log:(CLjava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad3c0.   return @void ;

   }
    procedure [|void|] [|java:lang:System.logE|] ([|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.logE:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad3d4.   v0:= 69  @length 16;
#L0ad3d8.   call temp:=  [|java:lang:System.log|](v0, v1, v2) @signature [|Ljava/lang/System;.log:(CLjava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad3de.   return @void ;

   }
    procedure [|void|] [|java:lang:System.logI|] ([|java:lang:String|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.logI:(Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0ad3f0.   v0:= 73  @length 16;
#L0ad3f4.   v1:= 0  @length 4;
#L0ad3f6.   call temp:=  [|java:lang:System.log|](v0, v2, v1) @signature [|Ljava/lang/System;.log:(CLjava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad3fc.   return @void ;

   }
    procedure [|void|] [|java:lang:System.logI|] ([|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.logI:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad410.   v0:= 73  @length 16;
#L0ad414.   call temp:=  [|java:lang:System.log|](v0, v1, v2) @signature [|Ljava/lang/System;.log:(CLjava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad41a.   return @void ;

   }
    procedure [|void|] [|java:lang:System.logW|] ([|java:lang:String|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.logW:(Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0ad42c.   v0:= 87  @length 16;
#L0ad430.   v1:= 0  @length 4;
#L0ad432.   call temp:=  [|java:lang:System.log|](v0, v2, v1) @signature [|Ljava/lang/System;.log:(CLjava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad438.   return @void ;

   }
    procedure [|void|] [|java:lang:System.logW|] ([|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.logW:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad44c.   v0:= 87  @length 16;
#L0ad450.   call temp:=  [|java:lang:System.log|](v0, v1, v2) @signature [|Ljava/lang/System;.log:(CLjava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad456.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:System.mapLibraryName|] ([|java:lang:String|] v0 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.mapLibraryName:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|java:lang:System.nanoTime|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.nanoTime:()J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:System.parsePropertyAssignments|] ([|java:util:Properties|] v8 @type (object), [|java:lang:String|][] v9 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.parsePropertyAssignments:(Ljava/util/Properties;[Ljava/lang/String;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0ad468.   v0:= v9  @type object;
#L0ad46a.   v4:= v0.length;
#L0ad46c.   v2:= 0  @length 4;
#L0ad46e.   if v2 >= v4 then goto L0ad4a4;
#L0ad472.   v1:= v0[v2]  @type object;
#L0ad476.   v7:= 61  @length 16;
#L0ad47a.   call temp:=  [|java:lang:String.indexOf|](v1, v7) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad480.   v5:= temp;
#L0ad482.   v7:= 0  @length 4;
#L0ad484.   call temp:=  [|java:lang:String.substring|](v1, v7, v5) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad48a.   v3:= temp  @type object;
#L0ad48c.   v7:= v5 + 1;
#L0ad490.   call temp:=  [|java:lang:String.substring|](v1, v7) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad496.   v6:= temp  @type object;
#L0ad498.   call temp:=  [|java:util:Properties.put|](v8, v3, v6) @signature [|Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad49e.   v2:= v2 + 1;
#L0ad4a2.   goto L0ad46e;
#L0ad4a4.   return @void ;

   }
    procedure [|void|] [|java:lang:System.runFinalization|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.runFinalization:()V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad4b8.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L0ad4be.   v0:= temp  @type object;
#L0ad4c0.   call temp:=  [|java:lang:Runtime.runFinalization|](v0) @signature [|Ljava/lang/Runtime;.runFinalization:()V|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L0ad4c6.   return @void ;

   }
    procedure [|void|] [|java:lang:System.runFinalizersOnExit|] ([|boolean|] v0) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.runFinalizersOnExit:(Z)V|] @Access PUBLIC_STATIC {
      local temp ;
      
#L0ad4d8.   call temp:=  [|java:lang:Runtime.runFinalizersOnExit|](v0) @signature [|Ljava/lang/Runtime;.runFinalizersOnExit:(Z)V|] @classDescriptor [|java:lang:Runtime|] @type static;
#L0ad4de.   return @void ;

   }
    procedure [|void|] [|java:lang:System.setErr|] ([|java:io:PrintStream|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.setErr:(Ljava/io/PrintStream;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0ad4f0.   v0:= "err" @type (object, string);
#L0ad4f4.   v1:= "Ljava/io/PrintStream;" @type (object, string);
#L0ad4f8.   call temp:=  [|java:lang:System.setFieldImpl|](v0, v1, v2) @signature [|Ljava/lang/System;.setFieldImpl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad4fe.   return @void ;

   }
    procedure [|void|] [|java:lang:System.setFieldImpl|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.setFieldImpl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:System.setIn|] ([|java:io:InputStream|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.setIn:(Ljava/io/InputStream;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0ad510.   v0:= "in" @type (object, string);
#L0ad514.   v1:= "Ljava/io/InputStream;" @type (object, string);
#L0ad518.   call temp:=  [|java:lang:System.setFieldImpl|](v0, v1, v2) @signature [|Ljava/lang/System;.setFieldImpl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad51e.   return @void ;

   }
    procedure [|void|] [|java:lang:System.setOut|] ([|java:io:PrintStream|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.setOut:(Ljava/io/PrintStream;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0ad530.   v0:= "out" @type (object, string);
#L0ad534.   v1:= "Ljava/io/PrintStream;" @type (object, string);
#L0ad538.   call temp:=  [|java:lang:System.setFieldImpl|](v0, v1, v2) @signature [|Ljava/lang/System;.setFieldImpl:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:lang:System|] @type static;
#L0ad53e.   return @void ;

   }
    procedure [|void|] [|java:lang:System.setProperties|] ([|java:util:Properties|] v0 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.setProperties:(Ljava/util/Properties;)V|] @Access PUBLIC_STATIC {
      local temp ;
      
#L0ad550.   @@[|java:lang:System.systemProperties|] := v0  @type object;
#L0ad554.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:System.setProperty|] ([|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad568.   call temp:=  [|java:lang:String.isEmpty|](v1) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ad56e.   v0:= temp;
#L0ad570.   if v0 == 0 then goto L0ad580;
#L0ad574.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ad578.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ad57e.   throw v0;
#L0ad580.   call temp:=  [|java:lang:System.getProperties|]() @signature [|Ljava/lang/System;.getProperties:()Ljava/util/Properties;|] @classDescriptor [|java:lang:System|] @type static;
#L0ad586.   v0:= temp  @type object;
#L0ad588.   call temp:=  [|java:util:Properties.setProperty|](v0, v1, v2) @signature [|Ljava/util/Properties;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ad58e.   v0:= temp  @type object;
#L0ad590.   v0:= ([|java:lang:String|])v0;
#L0ad594.   return v0  @type object;

   }
    procedure [|void|] [|java:lang:System.setSecurityManager|] ([|java:lang:SecurityManager|] v1 @type (object)) @owner [|java:lang:System|] @signature [|Ljava/lang/System;.setSecurityManager:(Ljava/lang/SecurityManager;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad5a8.   if v1 == 0 then goto L0ad5b8;
#L0ad5ac.   v0:= new [|java:lang:SecurityException|];
#L0ad5b0.   call temp:=  [|java:lang:SecurityException.<init>|](v0) @signature [|Ljava/lang/SecurityException;.<init>:()V|] @classDescriptor [|java:lang:SecurityException|] @type direct;
#L0ad5b6.   throw v0;
#L0ad5b8.   return @void ;

   }
    procedure [|java:lang:String|][] [|java:lang:System.specialProperties|] () @owner [|java:lang:System|] @signature [|Ljava/lang/System;.specialProperties:()[Ljava/lang/String;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
record [|java:lang:Thread$ParkState|]  @type class @AccessFlag   {
   }
      global [|int|] @@[|java:lang:Thread$ParkState.PARKED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:lang:Thread$ParkState.PREEMPTIVELY_UNPARKED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:lang:Thread$ParkState.UNPARKED|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:Thread$ParkState.<init>|] ([|java:lang:Thread$ParkState|] v0 @type (this)) @owner [|java:lang:Thread$ParkState|] @signature [|Ljava/lang/Thread$ParkState;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0ad5cc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ad5d2.   return @void ;

   }
record [|java:lang:Thread$State|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:lang:Thread$State|][] @@[|java:lang:Thread$State.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:lang:Thread$State|] @@[|java:lang:Thread$State.BLOCKED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:Thread$State|] @@[|java:lang:Thread$State.NEW|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:Thread$State|] @@[|java:lang:Thread$State.RUNNABLE|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:Thread$State|] @@[|java:lang:Thread$State.TERMINATED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:Thread$State|] @@[|java:lang:Thread$State.TIMED_WAITING|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:Thread$State|] @@[|java:lang:Thread$State.WAITING|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:lang:Thread$State.<clinit>|] () @owner [|java:lang:Thread$State|] @signature [|Ljava/lang/Thread$State;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0ad5e4.   v7:= 4  @length 4;
#L0ad5e6.   v6:= 3  @length 4;
#L0ad5e8.   v5:= 2  @length 4;
#L0ad5ea.   v4:= 1  @length 4;
#L0ad5ec.   v3:= 0  @length 4;
#L0ad5ee.   v0:= new [|java:lang:Thread$State|];
#L0ad5f2.   v1:= "NEW" @type (object, string);
#L0ad5f6.   call temp:=  [|java:lang:Thread$State.<init>|](v0, v1, v3) @signature [|Ljava/lang/Thread$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Thread$State|] @type direct;
#L0ad5fc.   @@[|java:lang:Thread$State.NEW|] := v0  @type object;
#L0ad600.   v0:= new [|java:lang:Thread$State|];
#L0ad604.   v1:= "RUNNABLE" @type (object, string);
#L0ad608.   call temp:=  [|java:lang:Thread$State.<init>|](v0, v1, v4) @signature [|Ljava/lang/Thread$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Thread$State|] @type direct;
#L0ad60e.   @@[|java:lang:Thread$State.RUNNABLE|] := v0  @type object;
#L0ad612.   v0:= new [|java:lang:Thread$State|];
#L0ad616.   v1:= "BLOCKED" @type (object, string);
#L0ad61a.   call temp:=  [|java:lang:Thread$State.<init>|](v0, v1, v5) @signature [|Ljava/lang/Thread$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Thread$State|] @type direct;
#L0ad620.   @@[|java:lang:Thread$State.BLOCKED|] := v0  @type object;
#L0ad624.   v0:= new [|java:lang:Thread$State|];
#L0ad628.   v1:= "WAITING" @type (object, string);
#L0ad62c.   call temp:=  [|java:lang:Thread$State.<init>|](v0, v1, v6) @signature [|Ljava/lang/Thread$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Thread$State|] @type direct;
#L0ad632.   @@[|java:lang:Thread$State.WAITING|] := v0  @type object;
#L0ad636.   v0:= new [|java:lang:Thread$State|];
#L0ad63a.   v1:= "TIMED_WAITING" @type (object, string);
#L0ad63e.   call temp:=  [|java:lang:Thread$State.<init>|](v0, v1, v7) @signature [|Ljava/lang/Thread$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Thread$State|] @type direct;
#L0ad644.   @@[|java:lang:Thread$State.TIMED_WAITING|] := v0  @type object;
#L0ad648.   v0:= new [|java:lang:Thread$State|];
#L0ad64c.   v1:= "TERMINATED" @type (object, string);
#L0ad650.   v2:= 5  @length 4;
#L0ad652.   call temp:=  [|java:lang:Thread$State.<init>|](v0, v1, v2) @signature [|Ljava/lang/Thread$State;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Thread$State|] @type direct;
#L0ad658.   @@[|java:lang:Thread$State.TERMINATED|] := v0  @type object;
#L0ad65c.   v0:= 6  @length 4;
#L0ad65e.   v0:= new [|java:lang:Thread$State|][v0];
#L0ad662.   v1:= @@[|java:lang:Thread$State.NEW|]   @type object;
#L0ad666.   v0[v3]:= v1  @type object;
#L0ad66a.   v1:= @@[|java:lang:Thread$State.RUNNABLE|]   @type object;
#L0ad66e.   v0[v4]:= v1  @type object;
#L0ad672.   v1:= @@[|java:lang:Thread$State.BLOCKED|]   @type object;
#L0ad676.   v0[v5]:= v1  @type object;
#L0ad67a.   v1:= @@[|java:lang:Thread$State.WAITING|]   @type object;
#L0ad67e.   v0[v6]:= v1  @type object;
#L0ad682.   v1:= @@[|java:lang:Thread$State.TIMED_WAITING|]   @type object;
#L0ad686.   v0[v7]:= v1  @type object;
#L0ad68a.   v1:= 5  @length 4;
#L0ad68c.   v2:= @@[|java:lang:Thread$State.TERMINATED|]   @type object;
#L0ad690.   v0[v1]:= v2  @type object;
#L0ad694.   @@[|java:lang:Thread$State.$VALUES|] := v0  @type object;
#L0ad698.   return @void ;

   }
    procedure [|void|] [|java:lang:Thread$State.<init>|] ([|java:lang:Thread$State|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:lang:Thread$State|] @signature [|Ljava/lang/Thread$State;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0ad6ac.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0ad6b2.   return @void ;

   }
    procedure [|java:lang:Thread$State|] [|java:lang:Thread$State.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:lang:Thread$State|] @signature [|Ljava/lang/Thread$State;.valueOf:(Ljava/lang/String;)Ljava/lang/Thread$State;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad6c4.   v0:= new [|java:lang:Thread$State|];
#L0ad6c8.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0ad6ce.   v0:= temp  @type object;
#L0ad6d0.   v0:= ([|java:lang:Thread$State|])v0;
#L0ad6d4.   return v0  @type object;

   }
    procedure [|java:lang:Thread$State|][] [|java:lang:Thread$State.values|] () @owner [|java:lang:Thread$State|] @signature [|Ljava/lang/Thread$State;.values:()[Ljava/lang/Thread$State;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ad6e8.   v0:= @@[|java:lang:Thread$State.$VALUES|]   @type object;
#L0ad6ec.   call temp:=  [|java:lang:Thread$State[].clone|](v0) @signature [|[Ljava/lang/Thread$State;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Thread$State[]|] @type virtual;
#L0ad6f2.   v0:= temp  @type object;
#L0ad6f4.   v0:= ([|java:lang:Thread$State|][])v0;
#L0ad6f8.   return v0  @type object;

   }
record [|java:lang:Thread$UncaughtExceptionHandler|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:lang:Thread$UncaughtExceptionHandler.uncaughtException|] ([|java:lang:Thread|] v0 @type (object), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:lang:Thread$UncaughtExceptionHandler|] @signature [|Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:lang:ThreadDeath|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Error|] {
   }
      global [|long|] @@[|java:lang:ThreadDeath.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:ThreadDeath.<init>|] ([|java:lang:ThreadDeath|] v0 @type (this)) @owner [|java:lang:ThreadDeath|] @signature [|Ljava/lang/ThreadDeath;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0ad70c.   call temp:=  [|java:lang:Error.<init>|](v0) @signature [|Ljava/lang/Error;.<init>:()V|] @classDescriptor [|java:lang:Error|] @type direct;
#L0ad712.   return @void ;

   }
record [|java:lang:ThreadGroup|]  @type class @AccessFlag PUBLIC extends  [|java:lang:Thread$UncaughtExceptionHandler|] {
      [|java:util:List|] [|java:lang:ThreadGroup.groups|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:lang:ThreadGroup.isDaemon|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:lang:ThreadGroup.isDestroyed|]    @AccessFlag PRIVATE;
      [|int|] [|java:lang:ThreadGroup.maxPriority|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:lang:ThreadGroup.name|]    @AccessFlag PRIVATE;
      [|java:lang:ThreadGroup|] [|java:lang:ThreadGroup.parent|]    @AccessFlag FINAL;
      [|java:util:List|] [|java:lang:ThreadGroup.threadRefs|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Iterable|] [|java:lang:ThreadGroup.threads|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:lang:ThreadGroup|] @@[|java:lang:ThreadGroup.mMain|]    @AccessFlag STATIC_FINAL;
      global [|java:lang:ThreadGroup|] @@[|java:lang:ThreadGroup.mSystem|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:lang:ThreadGroup.<clinit>|] () @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ad724.   v0:= new [|java:lang:ThreadGroup|];
#L0ad728.   call temp:=  [|java:lang:ThreadGroup.<init>|](v0) @signature [|Ljava/lang/ThreadGroup;.<init>:()V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ad72e.   @@[|java:lang:ThreadGroup.mSystem|] := v0  @type object;
#L0ad732.   v0:= new [|java:lang:ThreadGroup|];
#L0ad736.   v1:= @@[|java:lang:ThreadGroup.mSystem|]   @type object;
#L0ad73a.   v2:= "main" @type (object, string);
#L0ad73e.   call temp:=  [|java:lang:ThreadGroup.<init>|](v0, v1, v2) @signature [|Ljava/lang/ThreadGroup;.<init>:(Ljava/lang/ThreadGroup;Ljava/lang/String;)V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ad744.   @@[|java:lang:ThreadGroup.mMain|] := v0  @type object;
#L0ad748.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadGroup.<init>|] ([|java:lang:ThreadGroup|] v2 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ad75c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ad762.   v0:= 10  @length 16;
#L0ad766.   v2.[|java:lang:ThreadGroup.maxPriority|]  := v0;
#L0ad76a.   v0:= new [|java:util:ArrayList|];
#L0ad76e.   v1:= 5  @length 4;
#L0ad770.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0ad776.   v2.[|java:lang:ThreadGroup.threadRefs|]  := v0 @type object;
#L0ad77a.   v0:= v2.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0ad77e.   v1:= 1  @length 4;
#L0ad780.   call temp:=  [|libcore:util:CollectionUtils.dereferenceIterable|](v0, v1) @signature [|Llibcore/util/CollectionUtils;.dereferenceIterable:(Ljava/lang/Iterable;Z)Ljava/lang/Iterable;|] @classDescriptor [|libcore:util:CollectionUtils|] @type static;
#L0ad786.   v0:= temp  @type object;
#L0ad788.   v2.[|java:lang:ThreadGroup.threads|]  := v0 @type object;
#L0ad78c.   v0:= new [|java:util:ArrayList|];
#L0ad790.   v1:= 3  @length 4;
#L0ad792.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0ad798.   v2.[|java:lang:ThreadGroup.groups|]  := v0 @type object;
#L0ad79c.   v0:= "system" @type (object, string);
#L0ad7a0.   v2.[|java:lang:ThreadGroup.name|]  := v0 @type object;
#L0ad7a4.   v0:= 0  @length 4;
#L0ad7a6.   v2.[|java:lang:ThreadGroup.parent|]  := v0 @type object;
#L0ad7aa.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadGroup.<init>|] ([|java:lang:ThreadGroup|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0ad7bc.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0ad7c2.   v0:= temp  @type object;
#L0ad7c4.   call temp:=  [|java:lang:Thread.getThreadGroup|](v0) @signature [|Ljava/lang/Thread;.getThreadGroup:()Ljava/lang/ThreadGroup;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ad7ca.   v0:= temp  @type object;
#L0ad7cc.   call temp:=  [|java:lang:ThreadGroup.<init>|](v1, v0, v2) @signature [|Ljava/lang/ThreadGroup;.<init>:(Ljava/lang/ThreadGroup;Ljava/lang/String;)V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ad7d2.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadGroup.<init>|] ([|java:lang:ThreadGroup|] v3 @type (this), [|java:lang:ThreadGroup|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.<init>:(Ljava/lang/ThreadGroup;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ad7e4.   v2:= 1  @length 4;
#L0ad7e6.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ad7ec.   v0:= 10  @length 16;
#L0ad7f0.   v3.[|java:lang:ThreadGroup.maxPriority|]  := v0;
#L0ad7f4.   v0:= new [|java:util:ArrayList|];
#L0ad7f8.   v1:= 5  @length 4;
#L0ad7fa.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0ad800.   v3.[|java:lang:ThreadGroup.threadRefs|]  := v0 @type object;
#L0ad804.   v0:= v3.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0ad808.   call temp:=  [|libcore:util:CollectionUtils.dereferenceIterable|](v0, v2) @signature [|Llibcore/util/CollectionUtils;.dereferenceIterable:(Ljava/lang/Iterable;Z)Ljava/lang/Iterable;|] @classDescriptor [|libcore:util:CollectionUtils|] @type static;
#L0ad80e.   v0:= temp  @type object;
#L0ad810.   v3.[|java:lang:ThreadGroup.threads|]  := v0 @type object;
#L0ad814.   v0:= new [|java:util:ArrayList|];
#L0ad818.   v1:= 3  @length 4;
#L0ad81a.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0ad820.   v3.[|java:lang:ThreadGroup.groups|]  := v0 @type object;
#L0ad824.   if v4 != 0 then goto L0ad838;
#L0ad828.   v0:= new [|java:lang:NullPointerException|];
#L0ad82c.   v1:= "parent == null" @type (object, string);
#L0ad830.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0ad836.   throw v0;
#L0ad838.   v3.[|java:lang:ThreadGroup.name|]  := v5 @type object;
#L0ad83c.   v3.[|java:lang:ThreadGroup.parent|]  := v4 @type object;
#L0ad840.   if v4 == 0 then goto L0ad86a;
#L0ad844.   call temp:=  [|java:lang:ThreadGroup.add|](v4, v3) @signature [|Ljava/lang/ThreadGroup;.add:(Ljava/lang/ThreadGroup;)V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ad84a.   call temp:=  [|java:lang:ThreadGroup.getMaxPriority|](v4) @signature [|Ljava/lang/ThreadGroup;.getMaxPriority:()I|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ad850.   v0:= temp;
#L0ad852.   call temp:=  [|java:lang:ThreadGroup.setMaxPriority|](v3, v0) @signature [|Ljava/lang/ThreadGroup;.setMaxPriority:(I)V|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ad858.   call temp:=  [|java:lang:ThreadGroup.isDaemon|](v4) @signature [|Ljava/lang/ThreadGroup;.isDaemon:()Z|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ad85e.   v0:= temp;
#L0ad860.   if v0 == 0 then goto L0ad86a;
#L0ad864.   call temp:=  [|java:lang:ThreadGroup.setDaemon|](v3, v2) @signature [|Ljava/lang/ThreadGroup;.setDaemon:(Z)V|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ad86a.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadGroup.add|] ([|java:lang:ThreadGroup|] v2 @type (this), [|java:lang:ThreadGroup|] v3 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.add:(Ljava/lang/ThreadGroup;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0ad87c.   v1:= v2.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ad880.   (@monitorenter v1)
#L0ad882.   v0:= v2.[|java:lang:ThreadGroup.isDestroyed|]   @boolean;
#L0ad886.   if v0 == 0 then goto L0ad89c;
#L0ad88a.   v0:= new [|java:lang:IllegalThreadStateException|];
#L0ad88e.   call temp:=  [|java:lang:IllegalThreadStateException.<init>|](v0) @signature [|Ljava/lang/IllegalThreadStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalThreadStateException|] @type direct;
#L0ad894.   throw v0;
#L0ad896.   v0:= Exception  @type object;
#L0ad898.   (@monitorexit v1)
#L0ad89a.   throw v0;
#L0ad89c.   v0:= v2.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ad8a0.   call temp:=  [|java:util:List.add|](v0, v3) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0ad8a6.   (@monitorexit v1)
#L0ad8a8.   return @void ;
  catch  [|any|] @[L0ad882..L0ad89a] goto L0ad896;
  catch  [|any|] @[L0ad89c..L0ad8a8] goto L0ad896;

   }
    procedure [|void|] [|java:lang:ThreadGroup.destroyIfEmptyDaemon|] ([|java:lang:ThreadGroup|] v3 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.destroyIfEmptyDaemon:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ad8d0.   v1:= v3.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0ad8d4.   (@monitorenter v1)
#L0ad8d6.   v0:= v3.[|java:lang:ThreadGroup.isDaemon|]   @boolean;
#L0ad8da.   if v0 == 0 then goto L0ad91c;
#L0ad8de.   v0:= v3.[|java:lang:ThreadGroup.isDestroyed|]   @boolean;
#L0ad8e2.   if v0 != 0 then goto L0ad91c;
#L0ad8e6.   v0:= v3.[|java:lang:ThreadGroup.threads|]   @type object;
#L0ad8ea.   call temp:=  [|java:lang:Iterable.iterator|](v0) @signature [|Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:lang:Iterable|] @type interface;
#L0ad8f0.   v0:= temp  @type object;
#L0ad8f2.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ad8f8.   v0:= temp;
#L0ad8fa.   if v0 != 0 then goto L0ad91c;
#L0ad8fe.   v2:= v3.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ad902.   (@monitorenter v2)
#L0ad904.   v0:= v3.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ad908.   call temp:=  [|java:util:List.isEmpty|](v0) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L0ad90e.   v0:= temp;
#L0ad910.   if v0 == 0 then goto L0ad91a;
#L0ad914.   call temp:=  [|java:lang:ThreadGroup.destroy|](v3) @signature [|Ljava/lang/ThreadGroup;.destroy:()V|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ad91a.   (@monitorexit v2)
#L0ad91c.   (@monitorexit v1)
#L0ad91e.   return @void ;
#L0ad920.   v0:= Exception  @type object;
#L0ad922.   (@monitorexit v2)
#L0ad924.   throw v0;
#L0ad926.   v0:= Exception  @type object;
#L0ad928.   (@monitorexit v1)
#L0ad92a.   throw v0;
  catch  [|any|] @[L0ad8d6..L0ad904] goto L0ad926;
  catch  [|any|] @[L0ad904..L0ad91c] goto L0ad920;
  catch  [|any|] @[L0ad91c..L0ad91e] goto L0ad926;
  catch  [|any|] @[L0ad922..L0ad924] goto L0ad920;
  catch  [|any|] @[L0ad924..L0ad92a] goto L0ad926;

   }
    procedure [|int|] [|java:lang:ThreadGroup.enumerateGeneric|] ([|java:lang:ThreadGroup|] v7 @type (this), [|java:lang:Object|][] v8 @type (object), [|boolean|] v9, [|int|] v10, [|boolean|] v11) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.enumerateGeneric:([Ljava/lang/Object;ZIZ)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ad96c.   if v11 == 0 then goto L0ada18;
#L0ad970.   v6:= v7.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0ad974.   (@monitorenter v6)
#L0ad976.   v5:= v7.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0ad97a.   call temp:=  [|java:util:List.size|](v5) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0ad980.   v5:= temp;
#L0ad982.   v2:= v5 + -1;
#L0ad986.   v0:= v10;
#L0ad988.   if v2 < 0 then goto L0ad9d4;
#L0ad98c.   v5:= v7.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0ad990.   call temp:=  [|java:util:List.get|](v5, v2) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0ad996.   v5:= temp  @type object;
#L0ad998.   v5:= ([|java:lang:ref:WeakReference|])v5;
#L0ad99c.   call temp:=  [|java:lang:ref:WeakReference.get|](v5) @signature [|Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:WeakReference|] @type virtual;
#L0ad9a2.   v4:= temp  @type object;
#L0ad9a4.   v4:= ([|java:lang:Thread|])v4;
#L0ad9a8.   if v4 == 0 then goto L0ada8a;
#L0ad9ac.   call temp:=  [|java:lang:Thread.isAlive|](v4) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ad9b2.   v5:= temp;
#L0ad9b4.   if v5 == 0 then goto L0ada8a;
#L0ad9b8.   v5:= v8.length;
#L0ad9ba.   if v0 < v5 then goto L0ad9c4;
#L0ad9be.   (@monitorexit v6)
#L0ad9c0.   v10:= v0;
#L0ad9c2.   return v0;
#L0ad9c4.   v10:= v0 + 1;
#L0ad9c8.   v8[v0]:= v4  @type object;
#L0ad9cc.   v2:= v2 + -1;
#L0ad9d0.   v0:= v10;
#L0ad9d2.   goto L0ad988;
#L0ad9d4.   (@monitorexit v6)
#L0ad9d6.   v10:= v0;
#L0ad9d8.   if v9 == 0 then goto L0ada74;
#L0ad9dc.   v6:= v7.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ad9e0.   (@monitorenter v6)
#L0ad9e2.   v5:= v7.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ad9e6.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0ad9ec.   v3:= temp  @type object;
#L0ad9ee.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ad9f4.   v5:= temp;
#L0ad9f6.   if v5 == 0 then goto L0ada72;
#L0ad9fa.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ada00.   v1:= temp  @type object;
#L0ada02.   v1:= ([|java:lang:ThreadGroup|])v1;
#L0ada06.   v5:= v8.length;
#L0ada08.   if v10 < v5 then goto L0ada68;
#L0ada0c.   (@monitorexit v6)
#L0ada0e.   v0:= v10;
#L0ada10.   goto L0ad9c2;
#L0ada12.   v5:= Exception  @type object;
#L0ada14.   (@monitorexit v6)
#L0ada16.   throw v5;
#L0ada18.   v6:= v7.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ada1c.   (@monitorenter v6)
#L0ada1e.   v5:= v7.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ada22.   call temp:=  [|java:util:List.size|](v5) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0ada28.   v5:= temp;
#L0ada2a.   v2:= v5 + -1;
#L0ada2e.   v0:= v10;
#L0ada30.   if v2 < 0 then goto L0ada5c;
#L0ada34.   v5:= v8.length;
#L0ada36.   if v0 < v5 then goto L0ada40;
#L0ada3a.   (@monitorexit v6)
#L0ada3c.   v10:= v0;
#L0ada3e.   goto L0ad9c2;
#L0ada40.   v10:= v0 + 1;
#L0ada44.   v5:= v7.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ada48.   call temp:=  [|java:util:List.get|](v5, v2) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0ada4e.   v5:= temp  @type object;
#L0ada50.   v8[v0]:= v5  @type object;
#L0ada54.   v2:= v2 + -1;
#L0ada58.   v0:= v10;
#L0ada5a.   goto L0ada30;
#L0ada5c.   (@monitorexit v6)
#L0ada5e.   v10:= v0;
#L0ada60.   goto L0ad9d8;
#L0ada62.   v5:= Exception  @type object;
#L0ada64.   (@monitorexit v6)
#L0ada66.   throw v5;
#L0ada68.   call temp:=  [|java:lang:ThreadGroup.enumerateGeneric|](v1, v8, v9, v10, v11) @signature [|Ljava/lang/ThreadGroup;.enumerateGeneric:([Ljava/lang/Object;ZIZ)I|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ada6e.   v10:= temp;
#L0ada70.   goto L0ad9ee;
#L0ada72.   (@monitorexit v6)
#L0ada74.   v0:= v10;
#L0ada76.   goto L0ad9c2;
#L0ada78.   v5:= Exception  @type object;
#L0ada7a.   (@monitorexit v6)
#L0ada7c.   throw v5;
#L0ada7e.   v5:= Exception  @type object;
#L0ada80.   v10:= v0;
#L0ada82.   goto L0ada64;
#L0ada84.   v5:= Exception  @type object;
#L0ada86.   v10:= v0;
#L0ada88.   goto L0ada14;
#L0ada8a.   v10:= v0;
#L0ada8c.   goto L0ad9cc;
  catch  [|any|] @[L0ad976..L0ad980] goto L0ada12;
  catch  [|any|] @[L0ad98c..L0ad9c0] goto L0ada84;
  catch  [|any|] @[L0ad9c8..L0ad9cc] goto L0ada12;
  catch  [|any|] @[L0ad9d4..L0ad9d6] goto L0ada84;
  catch  [|any|] @[L0ad9e2..L0ada0e] goto L0ada78;
  catch  [|any|] @[L0ada14..L0ada16] goto L0ada12;
  catch  [|any|] @[L0ada1e..L0ada28] goto L0ada62;
  catch  [|any|] @[L0ada34..L0ada3c] goto L0ada7e;
  catch  [|any|] @[L0ada44..L0ada54] goto L0ada62;
  catch  [|any|] @[L0ada5c..L0ada5e] goto L0ada7e;
  catch  [|any|] @[L0ada64..L0ada66] goto L0ada62;
  catch  [|any|] @[L0ada68..L0ada7c] goto L0ada78;

   }
    procedure [|void|] [|java:lang:ThreadGroup.indent|] ([|java:lang:ThreadGroup|] v3 @type (this), [|int|] v4) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.indent:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0adb10.   v0:= 0  @length 4;
#L0adb12.   if v0 >= v4 then goto L0adb2a;
#L0adb16.   v1:= @@[|java:lang:System.out|]   @type object;
#L0adb1a.   v2:= "    " @type (object, string);
#L0adb1e.   call temp:=  [|java:io:PrintStream.print|](v1, v2) @signature [|Ljava/io/PrintStream;.print:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L0adb24.   v0:= v0 + 1;
#L0adb28.   goto L0adb12;
#L0adb2a.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadGroup.list|] ([|java:lang:ThreadGroup|] v5 @type (this), [|int|] v6) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.list:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0adb3c.   call temp:=  [|java:lang:ThreadGroup.indent|](v5, v6) @signature [|Ljava/lang/ThreadGroup;.indent:(I)V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0adb42.   v3:= @@[|java:lang:System.out|]   @type object;
#L0adb46.   call temp:=  [|java:lang:ThreadGroup.toString|](v5) @signature [|Ljava/lang/ThreadGroup;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0adb4c.   v4:= temp  @type object;
#L0adb4e.   call temp:=  [|java:io:PrintStream.println|](v3, v4) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L0adb54.   v6:= v6 + 1;
#L0adb58.   v4:= v5.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0adb5c.   (@monitorenter v4)
#L0adb5e.   v3:= v5.[|java:lang:ThreadGroup.threads|]   @type object;
#L0adb62.   call temp:=  [|java:lang:Iterable.iterator|](v3) @signature [|Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:lang:Iterable|] @type interface;
#L0adb68.   v1:= temp  @type object;
#L0adb6a.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adb70.   v3:= temp;
#L0adb72.   if v3 == 0 then goto L0adb9a;
#L0adb76.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adb7c.   v2:= temp  @type object;
#L0adb7e.   v2:= ([|java:lang:Thread|])v2;
#L0adb82.   call temp:=  [|java:lang:ThreadGroup.indent|](v5, v6) @signature [|Ljava/lang/ThreadGroup;.indent:(I)V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0adb88.   v3:= @@[|java:lang:System.out|]   @type object;
#L0adb8c.   call temp:=  [|java:io:PrintStream.println|](v3, v2) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L0adb92.   goto L0adb6a;
#L0adb94.   v3:= Exception  @type object;
#L0adb96.   (@monitorexit v4)
#L0adb98.   throw v3;
#L0adb9a.   (@monitorexit v4)
#L0adb9c.   v4:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0adba0.   (@monitorenter v4)
#L0adba2.   v3:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0adba6.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0adbac.   v1:= temp  @type object;
#L0adbae.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adbb4.   v3:= temp;
#L0adbb6.   if v3 == 0 then goto L0adbd4;
#L0adbba.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adbc0.   v0:= temp  @type object;
#L0adbc2.   v0:= ([|java:lang:ThreadGroup|])v0;
#L0adbc6.   call temp:=  [|java:lang:ThreadGroup.list|](v0, v6) @signature [|Ljava/lang/ThreadGroup;.list:(I)V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0adbcc.   goto L0adbae;
#L0adbce.   v3:= Exception  @type object;
#L0adbd0.   (@monitorexit v4)
#L0adbd2.   throw v3;
#L0adbd4.   (@monitorexit v4)
#L0adbd6.   return @void ;
  catch  [|any|] @[L0adb5e..L0adb98] goto L0adb94;
  catch  [|any|] @[L0adb9a..L0adb9c] goto L0adb94;
  catch  [|any|] @[L0adba2..L0adbd2] goto L0adbce;
  catch  [|any|] @[L0adbd4..L0adbd6] goto L0adbce;

   }
    procedure [|void|] [|java:lang:ThreadGroup.remove|] ([|java:lang:ThreadGroup|] v4 @type (this), [|java:lang:ThreadGroup|] v5 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.remove:(Ljava/lang/ThreadGroup;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0adc10.   v3:= v4.[|java:lang:ThreadGroup.groups|]   @type object;
#L0adc14.   (@monitorenter v3)
#L0adc16.   v2:= v4.[|java:lang:ThreadGroup.groups|]   @type object;
#L0adc1a.   call temp:=  [|java:util:List.iterator|](v2) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0adc20.   v0:= temp  @type object;
#L0adc22.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adc28.   v2:= temp;
#L0adc2a.   if v2 == 0 then goto L0adc4c;
#L0adc2e.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adc34.   v1:= temp  @type object;
#L0adc36.   v1:= ([|java:lang:ThreadGroup|])v1;
#L0adc3a.   call temp:=  [|java:lang:Object.equals|](v1, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0adc40.   v2:= temp;
#L0adc42.   if v2 == 0 then goto L0adc22;
#L0adc46.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adc4c.   (@monitorexit v3)
#L0adc4e.   call temp:=  [|java:lang:ThreadGroup.destroyIfEmptyDaemon|](v4) @signature [|Ljava/lang/ThreadGroup;.destroyIfEmptyDaemon:()V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0adc54.   return @void ;
#L0adc56.   v2:= Exception  @type object;
#L0adc58.   (@monitorexit v3)
#L0adc5a.   throw v2;
  catch  [|any|] @[L0adc16..L0adc4e] goto L0adc56;
  catch  [|any|] @[L0adc58..L0adc5a] goto L0adc56;

   }
    procedure [|boolean|] [|java:lang:ThreadGroup.stopHelper|] ([|java:lang:ThreadGroup|] v7 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.stopHelper:()Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0adc80.   v3:= 0  @length 4;
#L0adc82.   v6:= v7.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0adc86.   (@monitorenter v6)
#L0adc88.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0adc8e.   v0:= temp  @type object;
#L0adc90.   v5:= v7.[|java:lang:ThreadGroup.threads|]   @type object;
#L0adc94.   call temp:=  [|java:lang:Iterable.iterator|](v5) @signature [|Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:lang:Iterable|] @type interface;
#L0adc9a.   v2:= temp  @type object;
#L0adc9c.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adca2.   v5:= temp;
#L0adca4.   if v5 == 0 then goto L0adcca;
#L0adca8.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adcae.   v4:= temp  @type object;
#L0adcb0.   v4:= ([|java:lang:Thread|])v4;
#L0adcb4.   if v4 != v0 then goto L0adcbc;
#L0adcb8.   v3:= 1  @length 4;
#L0adcba.   goto L0adc9c;
#L0adcbc.   call temp:=  [|java:lang:Thread.stop|](v4) @signature [|Ljava/lang/Thread;.stop:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0adcc2.   goto L0adc9c;
#L0adcc4.   v5:= Exception  @type object;
#L0adcc6.   (@monitorexit v6)
#L0adcc8.   throw v5;
#L0adcca.   (@monitorexit v6)
#L0adccc.   v6:= v7.[|java:lang:ThreadGroup.groups|]   @type object;
#L0adcd0.   (@monitorenter v6)
#L0adcd2.   v5:= v7.[|java:lang:ThreadGroup.groups|]   @type object;
#L0adcd6.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0adcdc.   v2:= temp  @type object;
#L0adcde.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adce4.   v5:= temp;
#L0adce6.   if v5 == 0 then goto L0add02;
#L0adcea.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adcf0.   v1:= temp  @type object;
#L0adcf2.   v1:= ([|java:lang:ThreadGroup|])v1;
#L0adcf6.   call temp:=  [|java:lang:ThreadGroup.stopHelper|](v1) @signature [|Ljava/lang/ThreadGroup;.stopHelper:()Z|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0adcfc.   v5:= temp;
#L0adcfe.   v3:= v3 ^| v5  @type int;
#L0add00.   goto L0adcde;
#L0add02.   (@monitorexit v6)
#L0add04.   return v3;
#L0add06.   v5:= Exception  @type object;
#L0add08.   (@monitorexit v6)
#L0add0a.   throw v5;
  catch  [|any|] @[L0adc88..L0adcc8] goto L0adcc4;
  catch  [|any|] @[L0adcca..L0adccc] goto L0adcc4;
  catch  [|any|] @[L0adcd2..L0add0a] goto L0add06;

   }
    procedure [|boolean|] [|java:lang:ThreadGroup.suspendHelper|] ([|java:lang:ThreadGroup|] v7 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.suspendHelper:()Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0add3c.   v3:= 0  @length 4;
#L0add3e.   v6:= v7.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0add42.   (@monitorenter v6)
#L0add44.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0add4a.   v0:= temp  @type object;
#L0add4c.   v5:= v7.[|java:lang:ThreadGroup.threads|]   @type object;
#L0add50.   call temp:=  [|java:lang:Iterable.iterator|](v5) @signature [|Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:lang:Iterable|] @type interface;
#L0add56.   v2:= temp  @type object;
#L0add58.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0add5e.   v5:= temp;
#L0add60.   if v5 == 0 then goto L0add86;
#L0add64.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0add6a.   v4:= temp  @type object;
#L0add6c.   v4:= ([|java:lang:Thread|])v4;
#L0add70.   if v4 != v0 then goto L0add78;
#L0add74.   v3:= 1  @length 4;
#L0add76.   goto L0add58;
#L0add78.   call temp:=  [|java:lang:Thread.suspend|](v4) @signature [|Ljava/lang/Thread;.suspend:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0add7e.   goto L0add58;
#L0add80.   v5:= Exception  @type object;
#L0add82.   (@monitorexit v6)
#L0add84.   throw v5;
#L0add86.   (@monitorexit v6)
#L0add88.   v6:= v7.[|java:lang:ThreadGroup.groups|]   @type object;
#L0add8c.   (@monitorenter v6)
#L0add8e.   v5:= v7.[|java:lang:ThreadGroup.groups|]   @type object;
#L0add92.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0add98.   v2:= temp  @type object;
#L0add9a.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adda0.   v5:= temp;
#L0adda2.   if v5 == 0 then goto L0addbe;
#L0adda6.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0addac.   v1:= temp  @type object;
#L0addae.   v1:= ([|java:lang:ThreadGroup|])v1;
#L0addb2.   call temp:=  [|java:lang:ThreadGroup.suspendHelper|](v1) @signature [|Ljava/lang/ThreadGroup;.suspendHelper:()Z|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0addb8.   v5:= temp;
#L0addba.   v3:= v3 ^| v5  @type int;
#L0addbc.   goto L0add9a;
#L0addbe.   (@monitorexit v6)
#L0addc0.   return v3;
#L0addc2.   v5:= Exception  @type object;
#L0addc4.   (@monitorexit v6)
#L0addc6.   throw v5;
  catch  [|any|] @[L0add44..L0add84] goto L0add80;
  catch  [|any|] @[L0add86..L0add88] goto L0add80;
  catch  [|any|] @[L0add8e..L0addc6] goto L0addc2;

   }
    procedure [|int|] [|java:lang:ThreadGroup.activeCount|] ([|java:lang:ThreadGroup|] v6 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.activeCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0addf8.   v0:= 0  @length 4;
#L0addfa.   v5:= v6.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0addfe.   (@monitorenter v5)
#L0ade00.   v4:= v6.[|java:lang:ThreadGroup.threads|]   @type object;
#L0ade04.   call temp:=  [|java:lang:Iterable.iterator|](v4) @signature [|Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:lang:Iterable|] @type interface;
#L0ade0a.   v2:= temp  @type object;
#L0ade0c.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ade12.   v4:= temp;
#L0ade14.   if v4 == 0 then goto L0ade36;
#L0ade18.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ade1e.   v3:= temp  @type object;
#L0ade20.   v3:= ([|java:lang:Thread|])v3;
#L0ade24.   call temp:=  [|java:lang:Thread.isAlive|](v3) @signature [|Ljava/lang/Thread;.isAlive:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ade2a.   v4:= temp;
#L0ade2c.   if v4 == 0 then goto L0ade0c;
#L0ade30.   v0:= v0 + 1;
#L0ade34.   goto L0ade0c;
#L0ade36.   (@monitorexit v5)
#L0ade38.   v5:= v6.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ade3c.   (@monitorenter v5)
#L0ade3e.   v4:= v6.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ade42.   call temp:=  [|java:util:List.iterator|](v4) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0ade48.   v2:= temp  @type object;
#L0ade4a.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ade50.   v4:= temp;
#L0ade52.   if v4 == 0 then goto L0ade74;
#L0ade56.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ade5c.   v1:= temp  @type object;
#L0ade5e.   v1:= ([|java:lang:ThreadGroup|])v1;
#L0ade62.   call temp:=  [|java:lang:ThreadGroup.activeCount|](v1) @signature [|Ljava/lang/ThreadGroup;.activeCount:()I|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ade68.   v4:= temp;
#L0ade6a.   v0:= v0 + v4  @type int;
#L0ade6c.   goto L0ade4a;
#L0ade6e.   v4:= Exception  @type object;
#L0ade70.   (@monitorexit v5)
#L0ade72.   throw v4;
#L0ade74.   (@monitorexit v5)
#L0ade76.   return v0;
#L0ade78.   v4:= Exception  @type object;
#L0ade7a.   (@monitorexit v5)
#L0ade7c.   throw v4;
  catch  [|any|] @[L0ade00..L0ade38] goto L0ade6e;
  catch  [|any|] @[L0ade3e..L0ade68] goto L0ade78;
  catch  [|any|] @[L0ade70..L0ade72] goto L0ade6e;
  catch  [|any|] @[L0ade74..L0ade7c] goto L0ade78;

   }
    procedure [|int|] [|java:lang:ThreadGroup.activeGroupCount|] ([|java:lang:ThreadGroup|] v5 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.activeGroupCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0adeb8.   v0:= 0  @length 4;
#L0adeba.   v4:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0adebe.   (@monitorenter v4)
#L0adec0.   v3:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0adec4.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0adeca.   v2:= temp  @type object;
#L0adecc.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0aded2.   v3:= temp;
#L0aded4.   if v3 == 0 then goto L0adef4;
#L0aded8.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0adede.   v1:= temp  @type object;
#L0adee0.   v1:= ([|java:lang:ThreadGroup|])v1;
#L0adee4.   call temp:=  [|java:lang:ThreadGroup.activeGroupCount|](v1) @signature [|Ljava/lang/ThreadGroup;.activeGroupCount:()I|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0adeea.   v3:= temp;
#L0adeec.   v3:= v3 + 1;
#L0adef0.   v0:= v0 + v3  @type int;
#L0adef2.   goto L0adecc;
#L0adef4.   (@monitorexit v4)
#L0adef6.   return v0;
#L0adef8.   v3:= Exception  @type object;
#L0adefa.   (@monitorexit v4)
#L0adefc.   throw v3;
  catch  [|any|] @[L0adec0..L0adefc] goto L0adef8;

   }
    procedure [|void|] [|java:lang:ThreadGroup.addThread|] ([|java:lang:ThreadGroup|] v3 @type (this), [|java:lang:Thread|] v4 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.addThread:(Ljava/lang/Thread;)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0adf1c.   v1:= v3.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0adf20.   (@monitorenter v1)
#L0adf22.   v0:= v3.[|java:lang:ThreadGroup.isDestroyed|]   @boolean;
#L0adf26.   if v0 == 0 then goto L0adf3c;
#L0adf2a.   v0:= new [|java:lang:IllegalThreadStateException|];
#L0adf2e.   call temp:=  [|java:lang:IllegalThreadStateException.<init>|](v0) @signature [|Ljava/lang/IllegalThreadStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalThreadStateException|] @type direct;
#L0adf34.   throw v0;
#L0adf36.   v0:= Exception  @type object;
#L0adf38.   (@monitorexit v1)
#L0adf3a.   throw v0;
#L0adf3c.   v0:= v3.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0adf40.   v2:= new [|java:lang:ref:WeakReference|];
#L0adf44.   call temp:=  [|java:lang:ref:WeakReference.<init>|](v2, v4) @signature [|Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:WeakReference|] @type direct;
#L0adf4a.   call temp:=  [|java:util:List.add|](v0, v2) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0adf50.   (@monitorexit v1)
#L0adf52.   return @void ;
  catch  [|any|] @[L0adf22..L0adf3a] goto L0adf36;
  catch  [|any|] @[L0adf3c..L0adf52] goto L0adf36;

   }
    procedure [|boolean|] [|java:lang:ThreadGroup.allowThreadSuspension|] ([|java:lang:ThreadGroup|] v1 @type (this), [|boolean|] v2) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.allowThreadSuspension:(Z)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0adf78.   v0:= 1  @length 4;
#L0adf7a.   return v0;

   }
    procedure [|void|] [|java:lang:ThreadGroup.checkAccess|] ([|java:lang:ThreadGroup|] v0 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.checkAccess:()V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L0adf8c.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadGroup.destroy|] ([|java:lang:ThreadGroup|] v5 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.destroy:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0adfa0.   v1:= v5.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0adfa4.   (@monitorenter v1)
#L0adfa6.   v2:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0adfaa.   (@monitorenter v2)
#L0adfac.   v0:= v5.[|java:lang:ThreadGroup.isDestroyed|]   @boolean;
#L0adfb0.   if v0 == 0 then goto L0ae004;
#L0adfb4.   v3:= new [|java:lang:IllegalThreadStateException|];
#L0adfb8.   v0:= new [|java:lang:StringBuilder|];
#L0adfbc.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0adfc2.   v4:= "Thread group was already destroyed: " @type (object, string);
#L0adfc6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0adfcc.   v4:= temp  @type object;
#L0adfce.   v0:= v5.[|java:lang:ThreadGroup.name|]   @type object;
#L0adfd2.   if v0 == 0 then goto L0adffe;
#L0adfd6.   v0:= v5.[|java:lang:ThreadGroup.name|]   @type object;
#L0adfda.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0adfe0.   v0:= temp  @type object;
#L0adfe2.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0adfe8.   v0:= temp  @type object;
#L0adfea.   call temp:=  [|java:lang:IllegalThreadStateException.<init>|](v3, v0) @signature [|Ljava/lang/IllegalThreadStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalThreadStateException|] @type direct;
#L0adff0.   throw v3;
#L0adff2.   v0:= Exception  @type object;
#L0adff4.   (@monitorexit v2)
#L0adff6.   throw v0;
#L0adff8.   v0:= Exception  @type object;
#L0adffa.   (@monitorexit v1)
#L0adffc.   throw v0;
#L0adffe.   v0:= "n/a" @type (object, string);
#L0ae002.   goto L0adfda;
#L0ae004.   v0:= v5.[|java:lang:ThreadGroup.threads|]   @type object;
#L0ae008.   call temp:=  [|java:lang:Iterable.iterator|](v0) @signature [|Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:lang:Iterable|] @type interface;
#L0ae00e.   v0:= temp  @type object;
#L0ae010.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae016.   v0:= temp;
#L0ae018.   if v0 == 0 then goto L0ae060;
#L0ae01c.   v3:= new [|java:lang:IllegalThreadStateException|];
#L0ae020.   v0:= new [|java:lang:StringBuilder|];
#L0ae024.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ae02a.   v4:= "Thread group still contains threads: " @type (object, string);
#L0ae02e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae034.   v4:= temp  @type object;
#L0ae036.   v0:= v5.[|java:lang:ThreadGroup.name|]   @type object;
#L0ae03a.   if v0 == 0 then goto L0ae05a;
#L0ae03e.   v0:= v5.[|java:lang:ThreadGroup.name|]   @type object;
#L0ae042.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae048.   v0:= temp  @type object;
#L0ae04a.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae050.   v0:= temp  @type object;
#L0ae052.   call temp:=  [|java:lang:IllegalThreadStateException.<init>|](v3, v0) @signature [|Ljava/lang/IllegalThreadStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalThreadStateException|] @type direct;
#L0ae058.   throw v3;
#L0ae05a.   v0:= "n/a" @type (object, string);
#L0ae05e.   goto L0ae042;
#L0ae060.   v0:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ae064.   call temp:=  [|java:util:List.isEmpty|](v0) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L0ae06a.   v0:= temp;
#L0ae06c.   if v0 != 0 then goto L0ae08a;
#L0ae070.   v0:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ae074.   v3:= 0  @length 4;
#L0ae076.   call temp:=  [|java:util:List.get|](v0, v3) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0ae07c.   v0:= temp  @type object;
#L0ae07e.   v0:= ([|java:lang:ThreadGroup|])v0;
#L0ae082.   call temp:=  [|java:lang:ThreadGroup.destroy|](v0) @signature [|Ljava/lang/ThreadGroup;.destroy:()V|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae088.   goto L0ae060;
#L0ae08a.   v0:= v5.[|java:lang:ThreadGroup.parent|]   @type object;
#L0ae08e.   if v0 == 0 then goto L0ae09c;
#L0ae092.   v0:= v5.[|java:lang:ThreadGroup.parent|]   @type object;
#L0ae096.   call temp:=  [|java:lang:ThreadGroup.remove|](v0, v5) @signature [|Ljava/lang/ThreadGroup;.remove:(Ljava/lang/ThreadGroup;)V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ae09c.   v0:= 1  @length 4;
#L0ae09e.   v5.[|java:lang:ThreadGroup.isDestroyed|]  := v0 @boolean;
#L0ae0a2.   (@monitorexit v2)
#L0ae0a4.   (@monitorexit v1)
#L0ae0a6.   return @void ;
  catch  [|any|] @[L0adfa6..L0adfac] goto L0adff8;
  catch  [|any|] @[L0adfac..L0adff6] goto L0adff2;
  catch  [|any|] @[L0adff6..L0adffc] goto L0adff8;
  catch  [|any|] @[L0adffe..L0ae0a4] goto L0adff2;
  catch  [|any|] @[L0ae0a4..L0ae0a6] goto L0adff8;

   }
    procedure [|int|] [|java:lang:ThreadGroup.enumerate|] ([|java:lang:ThreadGroup|] v1 @type (this), [|java:lang:Thread|][] v2 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.enumerate:([Ljava/lang/Thread;)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ae0e8.   v0:= 1  @length 4;
#L0ae0ea.   call temp:=  [|java:lang:ThreadGroup.enumerate|](v1, v2, v0) @signature [|Ljava/lang/ThreadGroup;.enumerate:([Ljava/lang/Thread;Z)I|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae0f0.   v0:= temp;
#L0ae0f2.   return v0;

   }
    procedure [|int|] [|java:lang:ThreadGroup.enumerate|] ([|java:lang:ThreadGroup|] v2 @type (this), [|java:lang:Thread|][] v3 @type (object), [|boolean|] v4) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.enumerate:([Ljava/lang/Thread;Z)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ae104.   v0:= 0  @length 4;
#L0ae106.   v1:= 1  @length 4;
#L0ae108.   call temp:=  [|java:lang:ThreadGroup.enumerateGeneric|](v2, v3, v4, v0, v1) @signature [|Ljava/lang/ThreadGroup;.enumerateGeneric:([Ljava/lang/Object;ZIZ)I|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ae10e.   v0:= temp;
#L0ae110.   return v0;

   }
    procedure [|int|] [|java:lang:ThreadGroup.enumerate|] ([|java:lang:ThreadGroup|] v1 @type (this), [|java:lang:ThreadGroup|][] v2 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.enumerate:([Ljava/lang/ThreadGroup;)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ae124.   v0:= 1  @length 4;
#L0ae126.   call temp:=  [|java:lang:ThreadGroup.enumerate|](v1, v2, v0) @signature [|Ljava/lang/ThreadGroup;.enumerate:([Ljava/lang/ThreadGroup;Z)I|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae12c.   v0:= temp;
#L0ae12e.   return v0;

   }
    procedure [|int|] [|java:lang:ThreadGroup.enumerate|] ([|java:lang:ThreadGroup|] v1 @type (this), [|java:lang:ThreadGroup|][] v2 @type (object), [|boolean|] v3) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.enumerate:([Ljava/lang/ThreadGroup;Z)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ae140.   v0:= 0  @length 4;
#L0ae142.   call temp:=  [|java:lang:ThreadGroup.enumerateGeneric|](v1, v2, v3, v0, v0) @signature [|Ljava/lang/ThreadGroup;.enumerateGeneric:([Ljava/lang/Object;ZIZ)I|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ae148.   v0:= temp;
#L0ae14a.   return v0;

   }
    procedure [|int|] [|java:lang:ThreadGroup.getMaxPriority|] ([|java:lang:ThreadGroup|] v1 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.getMaxPriority:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ae15c.   v0:= v1.[|java:lang:ThreadGroup.maxPriority|] ;
#L0ae160.   return v0;

   }
    procedure [|java:lang:String|] [|java:lang:ThreadGroup.getName|] ([|java:lang:ThreadGroup|] v1 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.getName:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ae174.   v0:= v1.[|java:lang:ThreadGroup.name|]   @type object;
#L0ae178.   return v0  @type object;

   }
    procedure [|java:lang:ThreadGroup|] [|java:lang:ThreadGroup.getParent|] ([|java:lang:ThreadGroup|] v1 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.getParent:()Ljava/lang/ThreadGroup;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ae18c.   v0:= v1.[|java:lang:ThreadGroup.parent|]   @type object;
#L0ae190.   return v0  @type object;

   }
    procedure [|void|] [|java:lang:ThreadGroup.interrupt|] ([|java:lang:ThreadGroup|] v5 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.interrupt:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ae1a4.   v4:= v5.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0ae1a8.   (@monitorenter v4)
#L0ae1aa.   v3:= v5.[|java:lang:ThreadGroup.threads|]   @type object;
#L0ae1ae.   call temp:=  [|java:lang:Iterable.iterator|](v3) @signature [|Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:lang:Iterable|] @type interface;
#L0ae1b4.   v1:= temp  @type object;
#L0ae1b6.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae1bc.   v3:= temp;
#L0ae1be.   if v3 == 0 then goto L0ae1dc;
#L0ae1c2.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae1c8.   v2:= temp  @type object;
#L0ae1ca.   v2:= ([|java:lang:Thread|])v2;
#L0ae1ce.   call temp:=  [|java:lang:Thread.interrupt|](v2) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ae1d4.   goto L0ae1b6;
#L0ae1d6.   v3:= Exception  @type object;
#L0ae1d8.   (@monitorexit v4)
#L0ae1da.   throw v3;
#L0ae1dc.   (@monitorexit v4)
#L0ae1de.   v4:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ae1e2.   (@monitorenter v4)
#L0ae1e4.   v3:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ae1e8.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0ae1ee.   v1:= temp  @type object;
#L0ae1f0.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae1f6.   v3:= temp;
#L0ae1f8.   if v3 == 0 then goto L0ae216;
#L0ae1fc.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae202.   v0:= temp  @type object;
#L0ae204.   v0:= ([|java:lang:ThreadGroup|])v0;
#L0ae208.   call temp:=  [|java:lang:ThreadGroup.interrupt|](v0) @signature [|Ljava/lang/ThreadGroup;.interrupt:()V|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae20e.   goto L0ae1f0;
#L0ae210.   v3:= Exception  @type object;
#L0ae212.   (@monitorexit v4)
#L0ae214.   throw v3;
#L0ae216.   (@monitorexit v4)
#L0ae218.   return @void ;
  catch  [|any|] @[L0ae1aa..L0ae1da] goto L0ae1d6;
  catch  [|any|] @[L0ae1dc..L0ae1de] goto L0ae1d6;
  catch  [|any|] @[L0ae1e4..L0ae214] goto L0ae210;
  catch  [|any|] @[L0ae216..L0ae218] goto L0ae210;

   }
    procedure [|boolean|] [|java:lang:ThreadGroup.isDaemon|] ([|java:lang:ThreadGroup|] v1 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.isDaemon:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ae254.   v0:= v1.[|java:lang:ThreadGroup.isDaemon|]   @boolean;
#L0ae258.   return v0;

   }
    procedure [|boolean|] [|java:lang:ThreadGroup.isDestroyed|] ([|java:lang:ThreadGroup|] v1 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.isDestroyed:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0ae26c.   (@monitorenter v1)
#L0ae26e.   v0:= v1.[|java:lang:ThreadGroup.isDestroyed|]   @boolean;
#L0ae272.   (@monitorexit v1)
#L0ae274.   return v0;
#L0ae276.   v0:= Exception  @type object;
#L0ae278.   (@monitorexit v1)
#L0ae27a.   throw v0;
  catch  [|any|] @[L0ae26e..L0ae272] goto L0ae276;

   }
    procedure [|void|] [|java:lang:ThreadGroup.list|] ([|java:lang:ThreadGroup|] v1 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.list:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ae298.   v0:= @@[|java:lang:System.out|]   @type object;
#L0ae29c.   call temp:=  [|java:io:PrintStream.println|](v0) @signature [|Ljava/io/PrintStream;.println:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L0ae2a2.   v0:= 0  @length 4;
#L0ae2a4.   call temp:=  [|java:lang:ThreadGroup.list|](v1, v0) @signature [|Ljava/lang/ThreadGroup;.list:(I)V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ae2aa.   return @void ;

   }
    procedure [|boolean|] [|java:lang:ThreadGroup.parentOf|] ([|java:lang:ThreadGroup|] v1 @type (this), [|java:lang:ThreadGroup|] v2 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.parentOf:(Ljava/lang/ThreadGroup;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ae2bc.   if v2 == 0 then goto L0ae2ce;
#L0ae2c0.   if v1 != v2 then goto L0ae2c8;
#L0ae2c4.   v0:= 1  @length 4;
#L0ae2c6.   return v0;
#L0ae2c8.   v2:= v2.[|java:lang:ThreadGroup.parent|]   @type object;
#L0ae2cc.   goto L0ae2bc;
#L0ae2ce.   v0:= 0  @length 4;
#L0ae2d0.   goto L0ae2c6;

   }
    procedure [|void|] [|java:lang:ThreadGroup.removeThread|] ([|java:lang:ThreadGroup|] v3 @type (this), [|java:lang:Thread|] v4 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.removeThread:(Ljava/lang/Thread;)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0ae2e4.   v2:= v3.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0ae2e8.   (@monitorenter v2)
#L0ae2ea.   v1:= v3.[|java:lang:ThreadGroup.threads|]   @type object;
#L0ae2ee.   call temp:=  [|java:lang:Iterable.iterator|](v1) @signature [|Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:lang:Iterable|] @type interface;
#L0ae2f4.   v0:= temp  @type object;
#L0ae2f6.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae2fc.   v1:= temp;
#L0ae2fe.   if v1 == 0 then goto L0ae320;
#L0ae302.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae308.   v1:= temp  @type object;
#L0ae30a.   v1:= ([|java:lang:Thread|])v1;
#L0ae30e.   call temp:=  [|java:lang:Object.equals|](v1, v4) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ae314.   v1:= temp;
#L0ae316.   if v1 == 0 then goto L0ae2f6;
#L0ae31a.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae320.   (@monitorexit v2)
#L0ae322.   call temp:=  [|java:lang:ThreadGroup.destroyIfEmptyDaemon|](v3) @signature [|Ljava/lang/ThreadGroup;.destroyIfEmptyDaemon:()V|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ae328.   return @void ;
#L0ae32a.   v1:= Exception  @type object;
#L0ae32c.   (@monitorexit v2)
#L0ae32e.   throw v1;
  catch  [|any|] @[L0ae2ea..L0ae322] goto L0ae32a;
  catch  [|any|] @[L0ae32c..L0ae32e] goto L0ae32a;

   }
    procedure [|void|] [|java:lang:ThreadGroup.resume|] ([|java:lang:ThreadGroup|] v5 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.resume:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ae354.   v4:= v5.[|java:lang:ThreadGroup.threadRefs|]   @type object;
#L0ae358.   (@monitorenter v4)
#L0ae35a.   v3:= v5.[|java:lang:ThreadGroup.threads|]   @type object;
#L0ae35e.   call temp:=  [|java:lang:Iterable.iterator|](v3) @signature [|Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:lang:Iterable|] @type interface;
#L0ae364.   v1:= temp  @type object;
#L0ae366.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae36c.   v3:= temp;
#L0ae36e.   if v3 == 0 then goto L0ae38c;
#L0ae372.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae378.   v2:= temp  @type object;
#L0ae37a.   v2:= ([|java:lang:Thread|])v2;
#L0ae37e.   call temp:=  [|java:lang:Thread.resume|](v2) @signature [|Ljava/lang/Thread;.resume:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ae384.   goto L0ae366;
#L0ae386.   v3:= Exception  @type object;
#L0ae388.   (@monitorexit v4)
#L0ae38a.   throw v3;
#L0ae38c.   (@monitorexit v4)
#L0ae38e.   v4:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ae392.   (@monitorenter v4)
#L0ae394.   v3:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ae398.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0ae39e.   v1:= temp  @type object;
#L0ae3a0.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae3a6.   v3:= temp;
#L0ae3a8.   if v3 == 0 then goto L0ae3c6;
#L0ae3ac.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae3b2.   v0:= temp  @type object;
#L0ae3b4.   v0:= ([|java:lang:ThreadGroup|])v0;
#L0ae3b8.   call temp:=  [|java:lang:ThreadGroup.resume|](v0) @signature [|Ljava/lang/ThreadGroup;.resume:()V|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae3be.   goto L0ae3a0;
#L0ae3c0.   v3:= Exception  @type object;
#L0ae3c2.   (@monitorexit v4)
#L0ae3c4.   throw v3;
#L0ae3c6.   (@monitorexit v4)
#L0ae3c8.   return @void ;
  catch  [|any|] @[L0ae35a..L0ae38a] goto L0ae386;
  catch  [|any|] @[L0ae38c..L0ae38e] goto L0ae386;
  catch  [|any|] @[L0ae394..L0ae3c4] goto L0ae3c0;
  catch  [|any|] @[L0ae3c6..L0ae3c8] goto L0ae3c0;

   }
    procedure [|void|] [|java:lang:ThreadGroup.setDaemon|] ([|java:lang:ThreadGroup|] v0 @type (this), [|boolean|] v1) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.setDaemon:(Z)V|] @Access PUBLIC_FINAL {
      local temp ;
      
#L0ae404.   v0.[|java:lang:ThreadGroup.isDaemon|]  := v1 @boolean;
#L0ae408.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadGroup.setMaxPriority|] ([|java:lang:ThreadGroup|] v5 @type (this), [|int|] v6) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.setMaxPriority:(I)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ae41c.   v3:= v5.[|java:lang:ThreadGroup.maxPriority|] ;
#L0ae420.   if v6 > v3 then goto L0ae48a;
#L0ae424.   v3:= 1  @length 4;
#L0ae426.   if v6 >= v3 then goto L0ae42c;
#L0ae42a.   v6:= 1  @length 4;
#L0ae42c.   v3:= v5.[|java:lang:ThreadGroup.parent|]   @type object;
#L0ae430.   if v3 != 0 then goto L0ae476;
#L0ae434.   v2:= v6;
#L0ae436.   if v2 > v6 then goto L0ae484;
#L0ae43a.   v5.[|java:lang:ThreadGroup.maxPriority|]  := v2;
#L0ae43e.   v4:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ae442.   (@monitorenter v4)
#L0ae444.   v3:= v5.[|java:lang:ThreadGroup.groups|]   @type object;
#L0ae448.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0ae44e.   v1:= temp  @type object;
#L0ae450.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae456.   v3:= temp;
#L0ae458.   if v3 == 0 then goto L0ae488;
#L0ae45c.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ae462.   v0:= temp  @type object;
#L0ae464.   v0:= ([|java:lang:ThreadGroup|])v0;
#L0ae468.   call temp:=  [|java:lang:ThreadGroup.setMaxPriority|](v0, v6) @signature [|Ljava/lang/ThreadGroup;.setMaxPriority:(I)V|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae46e.   goto L0ae450;
#L0ae470.   v3:= Exception  @type object;
#L0ae472.   (@monitorexit v4)
#L0ae474.   throw v3;
#L0ae476.   v3:= v5.[|java:lang:ThreadGroup.parent|]   @type object;
#L0ae47a.   call temp:=  [|java:lang:ThreadGroup.getMaxPriority|](v3) @signature [|Ljava/lang/ThreadGroup;.getMaxPriority:()I|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae480.   v2:= temp;
#L0ae482.   goto L0ae436;
#L0ae484.   v2:= v6;
#L0ae486.   goto L0ae43a;
#L0ae488.   (@monitorexit v4)
#L0ae48a.   return @void ;
  catch  [|any|] @[L0ae444..L0ae474] goto L0ae470;
  catch  [|any|] @[L0ae488..L0ae48a] goto L0ae470;

   }
    procedure [|void|] [|java:lang:ThreadGroup.stop|] ([|java:lang:ThreadGroup|] v1 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.stop:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ae4b0.   call temp:=  [|java:lang:ThreadGroup.stopHelper|](v1) @signature [|Ljava/lang/ThreadGroup;.stopHelper:()Z|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ae4b6.   v0:= temp;
#L0ae4b8.   if v0 == 0 then goto L0ae4ca;
#L0ae4bc.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0ae4c2.   v0:= temp  @type object;
#L0ae4c4.   call temp:=  [|java:lang:Thread.stop|](v0) @signature [|Ljava/lang/Thread;.stop:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ae4ca.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadGroup.suspend|] ([|java:lang:ThreadGroup|] v1 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.suspend:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0ae4dc.   call temp:=  [|java:lang:ThreadGroup.suspendHelper|](v1) @signature [|Ljava/lang/ThreadGroup;.suspendHelper:()Z|] @classDescriptor [|java:lang:ThreadGroup|] @type direct;
#L0ae4e2.   v0:= temp;
#L0ae4e4.   if v0 == 0 then goto L0ae4f6;
#L0ae4e8.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0ae4ee.   v0:= temp  @type object;
#L0ae4f0.   call temp:=  [|java:lang:Thread.suspend|](v0) @signature [|Ljava/lang/Thread;.suspend:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0ae4f6.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:ThreadGroup.toString|] ([|java:lang:ThreadGroup|] v2 @type (this)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0ae508.   v0:= new [|java:lang:StringBuilder|];
#L0ae50c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ae512.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ae518.   v1:= temp  @type object;
#L0ae51a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0ae520.   v1:= temp  @type object;
#L0ae522.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae528.   v0:= temp  @type object;
#L0ae52a.   v1:= "[name=" @type (object, string);
#L0ae52e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae534.   v0:= temp  @type object;
#L0ae536.   call temp:=  [|java:lang:ThreadGroup.getName|](v2) @signature [|Ljava/lang/ThreadGroup;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae53c.   v1:= temp  @type object;
#L0ae53e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae544.   v0:= temp  @type object;
#L0ae546.   v1:= ",maxPriority=" @type (object, string);
#L0ae54a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae550.   v0:= temp  @type object;
#L0ae552.   call temp:=  [|java:lang:ThreadGroup.getMaxPriority|](v2) @signature [|Ljava/lang/ThreadGroup;.getMaxPriority:()I|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae558.   v1:= temp;
#L0ae55a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae560.   v0:= temp  @type object;
#L0ae562.   v1:= "]" @type (object, string);
#L0ae566.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae56c.   v0:= temp  @type object;
#L0ae56e.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ae574.   v0:= temp  @type object;
#L0ae576.   return v0  @type object;

   }
    procedure [|void|] [|java:lang:ThreadGroup.uncaughtException|] ([|java:lang:ThreadGroup|] v1 @type (this), [|java:lang:Thread|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:lang:ThreadGroup|] @signature [|Ljava/lang/ThreadGroup;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0ae588.   v0:= v1.[|java:lang:ThreadGroup.parent|]   @type object;
#L0ae58c.   if v0 == 0 then goto L0ae59c;
#L0ae590.   v0:= v1.[|java:lang:ThreadGroup.parent|]   @type object;
#L0ae594.   call temp:=  [|java:lang:ThreadGroup.uncaughtException|](v0, v2, v3) @signature [|Ljava/lang/ThreadGroup;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:ThreadGroup|] @type virtual;
#L0ae59a.   return @void ;
#L0ae59c.   call temp:=  [|java:lang:Thread.getDefaultUncaughtExceptionHandler|]() @signature [|Ljava/lang/Thread;.getDefaultUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0ae5a2.   v0:= temp  @type object;
#L0ae5a4.   if v0 == 0 then goto L0ae5b8;
#L0ae5a8.   call temp:=  [|java:lang:Thread.getDefaultUncaughtExceptionHandler|]() @signature [|Ljava/lang/Thread;.getDefaultUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0ae5ae.   v0:= temp  @type object;
#L0ae5b0.   call temp:=  [|java:lang:Thread$UncaughtExceptionHandler.uncaughtException|](v0, v2, v3) @signature [|Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Thread$UncaughtExceptionHandler|] @type interface;
#L0ae5b6.   goto L0ae59a;
#L0ae5b8.   v0:= instanceof @varname v3 @type [|java:lang:ThreadDeath|];
#L0ae5bc.   if v0 != 0 then goto L0ae59a;
#L0ae5c0.   v0:= @@[|java:lang:System.err|]   @type object;
#L0ae5c4.   call temp:=  [|java:lang:Throwable.printStackTrace|](v3, v0) @signature [|Ljava/lang/Throwable;.printStackTrace:(Ljava/io/PrintStream;)V|] @classDescriptor [|java:lang:Throwable|] @type virtual;
#L0ae5ca.   goto L0ae59a;

   }
record [|java:lang:ThreadLocal$Values|]  @type class @AccessFlag   {
      [|int|] [|java:lang:ThreadLocal$Values.clean|]    @AccessFlag PRIVATE;
      [|int|] [|java:lang:ThreadLocal$Values.mask|]    @AccessFlag PRIVATE;
      [|int|] [|java:lang:ThreadLocal$Values.maximumLoad|]    @AccessFlag PRIVATE;
      [|int|] [|java:lang:ThreadLocal$Values.size|]    @AccessFlag PRIVATE;
      [|java:lang:Object|][] [|java:lang:ThreadLocal$Values.table|]    @AccessFlag PRIVATE;
      [|int|] [|java:lang:ThreadLocal$Values.tombstones|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:lang:ThreadLocal$Values.INITIAL_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:Object|] @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:ThreadLocal$Values.<clinit>|] () @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0ae5dc.   v0:= new [|java:lang:Object|];
#L0ae5e0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ae5e6.   @@[|java:lang:ThreadLocal$Values.TOMBSTONE|] := v0  @type object;
#L0ae5ea.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadLocal$Values.<init>|] ([|java:lang:ThreadLocal$Values|] v2 @type (this)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ae5fc.   v1:= 0  @length 4;
#L0ae5fe.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ae604.   v0:= 16  @length 16;
#L0ae608.   call temp:=  [|java:lang:ThreadLocal$Values.initializeTable|](v2, v0) @signature [|Ljava/lang/ThreadLocal$Values;.initializeTable:(I)V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0ae60e.   v2.[|java:lang:ThreadLocal$Values.size|]  := v1;
#L0ae612.   v2.[|java:lang:ThreadLocal$Values.tombstones|]  := v1;
#L0ae616.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadLocal$Values.<init>|] ([|java:lang:ThreadLocal$Values|] v1 @type (this), [|java:lang:ThreadLocal$Values|] v2 @type (object)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.<init>:(Ljava/lang/ThreadLocal$Values;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L0ae628.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ae62e.   v0:= v2.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae632.   call temp:=  [|java:lang:Object[].clone|](v0) @signature [|[Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object[]|] @type virtual;
#L0ae638.   v0:= temp  @type object;
#L0ae63a.   v0:= ([|java:lang:Object|][])v0;
#L0ae63e.   v1.[|java:lang:ThreadLocal$Values.table|]  := v0 @type object;
#L0ae642.   v0:= v2.[|java:lang:ThreadLocal$Values.mask|] ;
#L0ae646.   v1.[|java:lang:ThreadLocal$Values.mask|]  := v0;
#L0ae64a.   v0:= v2.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae64e.   v1.[|java:lang:ThreadLocal$Values.size|]  := v0;
#L0ae652.   v0:= v2.[|java:lang:ThreadLocal$Values.tombstones|] ;
#L0ae656.   v1.[|java:lang:ThreadLocal$Values.tombstones|]  := v0;
#L0ae65a.   v0:= v2.[|java:lang:ThreadLocal$Values.maximumLoad|] ;
#L0ae65e.   v1.[|java:lang:ThreadLocal$Values.maximumLoad|]  := v0;
#L0ae662.   v0:= v2.[|java:lang:ThreadLocal$Values.clean|] ;
#L0ae666.   v1.[|java:lang:ThreadLocal$Values.clean|]  := v0;
#L0ae66a.   call temp:=  [|java:lang:ThreadLocal$Values.inheritValues|](v1, v2) @signature [|Ljava/lang/ThreadLocal$Values;.inheritValues:(Ljava/lang/ThreadLocal$Values;)V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0ae670.   return @void ;

   }
    procedure [|java:lang:Object|][] [|java:lang:ThreadLocal$Values.access$000|] ([|java:lang:ThreadLocal$Values|] v1 @type (object)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.access$000:(Ljava/lang/ThreadLocal$Values;)[Ljava/lang/Object;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L0ae684.   v0:= v1.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae688.   return v0  @type object;

   }
    procedure [|int|] [|java:lang:ThreadLocal$Values.access$100|] ([|java:lang:ThreadLocal$Values|] v1 @type (object)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.access$100:(Ljava/lang/ThreadLocal$Values;)I|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L0ae69c.   v0:= v1.[|java:lang:ThreadLocal$Values.mask|] ;
#L0ae6a0.   return v0;

   }
    procedure [|void|] [|java:lang:ThreadLocal$Values.cleanUp|] ([|java:lang:ThreadLocal$Values|] v7 @type (this)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.cleanUp:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ae6b4.   call temp:=  [|java:lang:ThreadLocal$Values.rehash|](v7) @signature [|Ljava/lang/ThreadLocal$Values;.rehash:()Z|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0ae6ba.   v5:= temp;
#L0ae6bc.   if v5 == 0 then goto L0ae6c2;
#L0ae6c0.   return @void ;
#L0ae6c2.   v5:= v7.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae6c6.   if v5 == 0 then goto L0ae6c0;
#L0ae6ca.   v1:= v7.[|java:lang:ThreadLocal$Values.clean|] ;
#L0ae6ce.   v4:= v7.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae6d2.   v0:= v4.length;
#L0ae6d4.   if v0 <= 0 then goto L0ae734;
#L0ae6d8.   v2:= v4[v1]  @type object;
#L0ae6dc.   v5:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0ae6e0.   if v2 == v5 then goto L0ae6e8;
#L0ae6e4.   if v2 != 0 then goto L0ae6f6;
#L0ae6e8.   v0:= v0 ^> 1;
#L0ae6ec.   call temp:=  [|java:lang:ThreadLocal$Values.next|](v7, v1) @signature [|Ljava/lang/ThreadLocal$Values;.next:(I)I|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0ae6f2.   v1:= temp;
#L0ae6f4.   goto L0ae6d4;
#L0ae6f6.   v3:= v2  @type object;
#L0ae6f8.   v3:= ([|java:lang:ref:Reference|])v3;
#L0ae6fc.   call temp:=  [|java:lang:ref:Reference.get|](v3) @signature [|Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:Reference|] @type virtual;
#L0ae702.   v5:= temp  @type object;
#L0ae704.   if v5 != 0 then goto L0ae6e8;
#L0ae708.   v5:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0ae70c.   v4[v1]:= v5  @type object;
#L0ae710.   v5:= v1 + 1;
#L0ae714.   v6:= 0  @length 4;
#L0ae716.   v4[v5]:= v6  @type object;
#L0ae71a.   v5:= v7.[|java:lang:ThreadLocal$Values.tombstones|] ;
#L0ae71e.   v5:= v5 + 1;
#L0ae722.   v7.[|java:lang:ThreadLocal$Values.tombstones|]  := v5;
#L0ae726.   v5:= v7.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae72a.   v5:= v5 + -1;
#L0ae72e.   v7.[|java:lang:ThreadLocal$Values.size|]  := v5;
#L0ae732.   goto L0ae6e8;
#L0ae734.   v7.[|java:lang:ThreadLocal$Values.clean|]  := v1;
#L0ae738.   goto L0ae6c0;

   }
    procedure [|void|] [|java:lang:ThreadLocal$Values.inheritValues|] ([|java:lang:ThreadLocal$Values|] v9 @type (this), [|java:lang:ThreadLocal$Values|] v10 @type (object)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.inheritValues:(Ljava/lang/ThreadLocal$Values;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0ae74c.   v8:= 0  @length 4;
#L0ae74e.   v4:= v9.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae752.   v5:= v4.length;
#L0ae754.   v0:= v5 + -2;
#L0ae758.   if v0 < 0 then goto L0ae800;
#L0ae75c.   v1:= v4[v0]  @type object;
#L0ae760.   if v1 == 0 then goto L0ae76c;
#L0ae764.   v5:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0ae768.   if v1 != v5 then goto L0ae772;
#L0ae76c.   v0:= v0 + -2;
#L0ae770.   goto L0ae758;
#L0ae772.   v3:= v1  @type object;
#L0ae774.   v3:= ([|java:lang:ref:Reference|])v3;
#L0ae778.   call temp:=  [|java:lang:ref:Reference.get|](v3) @signature [|Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:Reference|] @type virtual;
#L0ae77e.   v2:= temp  @type object;
#L0ae780.   v2:= ([|java:lang:InheritableThreadLocal|])v2;
#L0ae784.   if v2 == 0 then goto L0ae7a6;
#L0ae788.   v5:= v0 + 1;
#L0ae78c.   v6:= v10.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae790.   v7:= v0 + 1;
#L0ae794.   v6:= v6[v7]  @type object;
#L0ae798.   call temp:=  [|java:lang:InheritableThreadLocal.childValue|](v2, v6) @signature [|Ljava/lang/InheritableThreadLocal;.childValue:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:InheritableThreadLocal|] @type virtual;
#L0ae79e.   v6:= temp  @type object;
#L0ae7a0.   v4[v5]:= v6  @type object;
#L0ae7a4.   goto L0ae76c;
#L0ae7a6.   v5:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0ae7aa.   v4[v0]:= v5  @type object;
#L0ae7ae.   v5:= v0 + 1;
#L0ae7b2.   v4[v5]:= v8  @type object;
#L0ae7b6.   v5:= v10.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae7ba.   v6:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0ae7be.   v5[v0]:= v6  @type object;
#L0ae7c2.   v5:= v10.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae7c6.   v6:= v0 + 1;
#L0ae7ca.   v5[v6]:= v8  @type object;
#L0ae7ce.   v5:= v9.[|java:lang:ThreadLocal$Values.tombstones|] ;
#L0ae7d2.   v5:= v5 + 1;
#L0ae7d6.   v9.[|java:lang:ThreadLocal$Values.tombstones|]  := v5;
#L0ae7da.   v5:= v10.[|java:lang:ThreadLocal$Values.tombstones|] ;
#L0ae7de.   v5:= v5 + 1;
#L0ae7e2.   v10.[|java:lang:ThreadLocal$Values.tombstones|]  := v5;
#L0ae7e6.   v5:= v9.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae7ea.   v5:= v5 + -1;
#L0ae7ee.   v9.[|java:lang:ThreadLocal$Values.size|]  := v5;
#L0ae7f2.   v5:= v10.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae7f6.   v5:= v5 + -1;
#L0ae7fa.   v10.[|java:lang:ThreadLocal$Values.size|]  := v5;
#L0ae7fe.   goto L0ae76c;
#L0ae800.   return @void ;

   }
    procedure [|void|] [|java:lang:ThreadLocal$Values.initializeTable|] ([|java:lang:ThreadLocal$Values|] v1 @type (this), [|int|] v2) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.initializeTable:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0ae814.   v0:= v2 * 2;
#L0ae818.   v0:= new [|java:lang:Object|][v0];
#L0ae81c.   v1.[|java:lang:ThreadLocal$Values.table|]  := v0 @type object;
#L0ae820.   v0:= v1.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae824.   v0:= v0.length;
#L0ae826.   v0:= v0 + -1;
#L0ae82a.   v1.[|java:lang:ThreadLocal$Values.mask|]  := v0;
#L0ae82e.   v0:= 0  @length 4;
#L0ae830.   v1.[|java:lang:ThreadLocal$Values.clean|]  := v0;
#L0ae834.   v0:= v2 * 2;
#L0ae838.   v0:= v0 / 3;
#L0ae83c.   v1.[|java:lang:ThreadLocal$Values.maximumLoad|]  := v0;
#L0ae840.   return @void ;

   }
    procedure [|int|] [|java:lang:ThreadLocal$Values.next|] ([|java:lang:ThreadLocal$Values|] v2 @type (this), [|int|] v3) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.next:(I)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0ae854.   v0:= v3 + 2;
#L0ae858.   v1:= v2.[|java:lang:ThreadLocal$Values.mask|] ;
#L0ae85c.   v0:= v0 ^& v1  @type int;
#L0ae85e.   return v0;

   }
    procedure [|boolean|] [|java:lang:ThreadLocal$Values.rehash|] ([|java:lang:ThreadLocal$Values|] v11 @type (this)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.rehash:()Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0ae870.   v8:= 1  @length 4;
#L0ae872.   v7:= 0  @length 4;
#L0ae874.   v9:= v11.[|java:lang:ThreadLocal$Values.tombstones|] ;
#L0ae878.   v10:= v11.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae87c.   v9:= v9 + v10  @type int;
#L0ae87e.   v10:= v11.[|java:lang:ThreadLocal$Values.maximumLoad|] ;
#L0ae882.   if v9 >= v10 then goto L0ae888;
#L0ae886.   return v7;
#L0ae888.   v9:= v11.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae88c.   v9:= v9.length;
#L0ae88e.   v0:= v9 ^> 1;
#L0ae892.   v4:= v0;
#L0ae894.   v9:= v11.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae898.   v10:= v0 ^> 1;
#L0ae89c.   if v9 <= v10 then goto L0ae8a4;
#L0ae8a0.   v4:= v0 * 2;
#L0ae8a4.   v5:= v11.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae8a8.   call temp:=  [|java:lang:ThreadLocal$Values.initializeTable|](v11, v4) @signature [|Ljava/lang/ThreadLocal$Values;.initializeTable:(I)V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0ae8ae.   v11.[|java:lang:ThreadLocal$Values.tombstones|]  := v7;
#L0ae8b2.   v7:= v11.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae8b6.   if v7 != 0 then goto L0ae8be;
#L0ae8ba.   v7:= v8;
#L0ae8bc.   goto L0ae886;
#L0ae8be.   v7:= v5.length;
#L0ae8c0.   v1:= v7 + -2;
#L0ae8c4.   if v1 < 0 then goto L0ae912;
#L0ae8c8.   v2:= v5[v1]  @type object;
#L0ae8cc.   if v2 == 0 then goto L0ae8d8;
#L0ae8d0.   v7:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0ae8d4.   if v2 != v7 then goto L0ae8de;
#L0ae8d8.   v1:= v1 + -2;
#L0ae8dc.   goto L0ae8c4;
#L0ae8de.   v6:= v2  @type object;
#L0ae8e0.   v6:= ([|java:lang:ref:Reference|])v6;
#L0ae8e4.   call temp:=  [|java:lang:ref:Reference.get|](v6) @signature [|Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:Reference|] @type virtual;
#L0ae8ea.   v3:= temp  @type object;
#L0ae8ec.   v3:= ([|java:lang:ThreadLocal|])v3;
#L0ae8f0.   if v3 == 0 then goto L0ae904;
#L0ae8f4.   v7:= v1 + 1;
#L0ae8f8.   v7:= v5[v7]  @type object;
#L0ae8fc.   call temp:=  [|java:lang:ThreadLocal$Values.add|](v11, v3, v7) @signature [|Ljava/lang/ThreadLocal$Values;.add:(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type virtual;
#L0ae902.   goto L0ae8d8;
#L0ae904.   v7:= v11.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae908.   v7:= v7 + -1;
#L0ae90c.   v11.[|java:lang:ThreadLocal$Values.size|]  := v7;
#L0ae910.   goto L0ae8d8;
#L0ae912.   v7:= v8;
#L0ae914.   goto L0ae886;

   }
    procedure [|void|] [|java:lang:ThreadLocal$Values.add|] ([|java:lang:ThreadLocal$Values|] v4 @type (this), [|java:lang:ThreadLocal|] v5 @type (object), [|java:lang:Object|] v6 @type (object)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.add:(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0ae928.   call temp:=  [|java:lang:ThreadLocal.access$200|](v5) @signature [|Ljava/lang/ThreadLocal;.access$200:(Ljava/lang/ThreadLocal;)I|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0ae92e.   v2:= temp;
#L0ae930.   v3:= v4.[|java:lang:ThreadLocal$Values.mask|] ;
#L0ae934.   v0:= v2 ^& v3  @type int;
#L0ae938.   v2:= v4.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae93c.   v1:= v2[v0]  @type object;
#L0ae940.   if v1 != 0 then goto L0ae962;
#L0ae944.   v2:= v4.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae948.   call temp:=  [|java:lang:ThreadLocal.access$300|](v5) @signature [|Ljava/lang/ThreadLocal;.access$300:(Ljava/lang/ThreadLocal;)Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0ae94e.   v3:= temp  @type object;
#L0ae950.   v2[v0]:= v3  @type object;
#L0ae954.   v2:= v4.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae958.   v3:= v0 + 1;
#L0ae95c.   v2[v3]:= v6  @type object;
#L0ae960.   return @void ;
#L0ae962.   call temp:=  [|java:lang:ThreadLocal$Values.next|](v4, v0) @signature [|Ljava/lang/ThreadLocal$Values;.next:(I)I|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0ae968.   v0:= temp;
#L0ae96a.   goto L0ae938;

   }
    procedure [|java:lang:Object|] [|java:lang:ThreadLocal$Values.getAfterMiss|] ([|java:lang:ThreadLocal$Values|] v8 @type (this), [|java:lang:ThreadLocal|] v9 @type (object)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.getAfterMiss:(Ljava/lang/ThreadLocal;)Ljava/lang/Object;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0ae97c.   v7:= -1  @length 4;
#L0ae97e.   v3:= v8.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae982.   call temp:=  [|java:lang:ThreadLocal.access$200|](v9) @signature [|Ljava/lang/ThreadLocal;.access$200:(Ljava/lang/ThreadLocal;)I|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0ae988.   v5:= temp;
#L0ae98a.   v6:= v8.[|java:lang:ThreadLocal$Values.mask|] ;
#L0ae98e.   v1:= v5 ^& v6  @type int;
#L0ae992.   v5:= v3[v1]  @type object;
#L0ae996.   if v5 != 0 then goto L0ae9e2;
#L0ae99a.   call temp:=  [|java:lang:ThreadLocal.initialValue|](v9) @signature [|Ljava/lang/ThreadLocal;.initialValue:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ThreadLocal|] @type virtual;
#L0ae9a0.   v4:= temp  @type object;
#L0ae9a2.   v5:= v8.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0ae9a6.   if v5 != v3 then goto L0ae9da;
#L0ae9aa.   v5:= v3[v1]  @type object;
#L0ae9ae.   if v5 != 0 then goto L0ae9da;
#L0ae9b2.   call temp:=  [|java:lang:ThreadLocal.access$300|](v9) @signature [|Ljava/lang/ThreadLocal;.access$300:(Ljava/lang/ThreadLocal;)Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0ae9b8.   v5:= temp  @type object;
#L0ae9ba.   v3[v1]:= v5  @type object;
#L0ae9be.   v5:= v1 + 1;
#L0ae9c2.   v3[v5]:= v4  @type object;
#L0ae9c6.   v5:= v8.[|java:lang:ThreadLocal$Values.size|] ;
#L0ae9ca.   v5:= v5 + 1;
#L0ae9ce.   v8.[|java:lang:ThreadLocal$Values.size|]  := v5;
#L0ae9d2.   call temp:=  [|java:lang:ThreadLocal$Values.cleanUp|](v8) @signature [|Ljava/lang/ThreadLocal$Values;.cleanUp:()V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0ae9d8.   return v4  @type object;
#L0ae9da.   call temp:=  [|java:lang:ThreadLocal$Values.put|](v8, v9, v4) @signature [|Ljava/lang/ThreadLocal$Values;.put:(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type virtual;
#L0ae9e0.   goto L0ae9d8;
#L0ae9e2.   v0:= -1  @length 4;
#L0ae9e4.   call temp:=  [|java:lang:ThreadLocal$Values.next|](v8, v1) @signature [|Ljava/lang/ThreadLocal$Values;.next:(I)I|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0ae9ea.   v1:= temp;
#L0ae9ec.   v2:= v3[v1]  @type object;
#L0ae9f0.   call temp:=  [|java:lang:ThreadLocal.access$300|](v9) @signature [|Ljava/lang/ThreadLocal;.access$300:(Ljava/lang/ThreadLocal;)Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0ae9f6.   v5:= temp  @type object;
#L0ae9f8.   if v2 != v5 then goto L0aea06;
#L0ae9fc.   v5:= v1 + 1;
#L0aea00.   v4:= v3[v5]  @type object;
#L0aea04.   goto L0ae9d8;
#L0aea06.   if v2 != 0 then goto L0aea90;
#L0aea0a.   call temp:=  [|java:lang:ThreadLocal.initialValue|](v9) @signature [|Ljava/lang/ThreadLocal;.initialValue:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ThreadLocal|] @type virtual;
#L0aea10.   v4:= temp  @type object;
#L0aea12.   v5:= v8.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aea16.   if v5 != v3 then goto L0aea88;
#L0aea1a.   if v0 <= v7 then goto L0aea58;
#L0aea1e.   v5:= v3[v0]  @type object;
#L0aea22.   v6:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0aea26.   if v5 != v6 then goto L0aea58;
#L0aea2a.   call temp:=  [|java:lang:ThreadLocal.access$300|](v9) @signature [|Ljava/lang/ThreadLocal;.access$300:(Ljava/lang/ThreadLocal;)Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0aea30.   v5:= temp  @type object;
#L0aea32.   v3[v0]:= v5  @type object;
#L0aea36.   v5:= v0 + 1;
#L0aea3a.   v3[v5]:= v4  @type object;
#L0aea3e.   v5:= v8.[|java:lang:ThreadLocal$Values.tombstones|] ;
#L0aea42.   v5:= v5 + -1;
#L0aea46.   v8.[|java:lang:ThreadLocal$Values.tombstones|]  := v5;
#L0aea4a.   v5:= v8.[|java:lang:ThreadLocal$Values.size|] ;
#L0aea4e.   v5:= v5 + 1;
#L0aea52.   v8.[|java:lang:ThreadLocal$Values.size|]  := v5;
#L0aea56.   goto L0ae9d8;
#L0aea58.   v5:= v3[v1]  @type object;
#L0aea5c.   if v5 != 0 then goto L0aea88;
#L0aea60.   call temp:=  [|java:lang:ThreadLocal.access$300|](v9) @signature [|Ljava/lang/ThreadLocal;.access$300:(Ljava/lang/ThreadLocal;)Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0aea66.   v5:= temp  @type object;
#L0aea68.   v3[v1]:= v5  @type object;
#L0aea6c.   v5:= v1 + 1;
#L0aea70.   v3[v5]:= v4  @type object;
#L0aea74.   v5:= v8.[|java:lang:ThreadLocal$Values.size|] ;
#L0aea78.   v5:= v5 + 1;
#L0aea7c.   v8.[|java:lang:ThreadLocal$Values.size|]  := v5;
#L0aea80.   call temp:=  [|java:lang:ThreadLocal$Values.cleanUp|](v8) @signature [|Ljava/lang/ThreadLocal$Values;.cleanUp:()V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0aea86.   goto L0ae9d8;
#L0aea88.   call temp:=  [|java:lang:ThreadLocal$Values.put|](v8, v9, v4) @signature [|Ljava/lang/ThreadLocal$Values;.put:(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type virtual;
#L0aea8e.   goto L0ae9d8;
#L0aea90.   if v0 != v7 then goto L0aea9e;
#L0aea94.   v5:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0aea98.   if v2 != v5 then goto L0aea9e;
#L0aea9c.   v0:= v1;
#L0aea9e.   call temp:=  [|java:lang:ThreadLocal$Values.next|](v8, v1) @signature [|Ljava/lang/ThreadLocal$Values;.next:(I)I|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0aeaa4.   v1:= temp;
#L0aeaa6.   goto L0ae9ec;

   }
    procedure [|void|] [|java:lang:ThreadLocal$Values.put|] ([|java:lang:ThreadLocal$Values|] v6 @type (this), [|java:lang:ThreadLocal|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.put:(Ljava/lang/ThreadLocal;Ljava/lang/Object;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0aeab8.   v5:= -1  @length 4;
#L0aeaba.   call temp:=  [|java:lang:ThreadLocal$Values.cleanUp|](v6) @signature [|Ljava/lang/ThreadLocal$Values;.cleanUp:()V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0aeac0.   v0:= -1  @length 4;
#L0aeac2.   call temp:=  [|java:lang:ThreadLocal.access$200|](v7) @signature [|Ljava/lang/ThreadLocal;.access$200:(Ljava/lang/ThreadLocal;)I|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0aeac8.   v3:= temp;
#L0aeaca.   v4:= v6.[|java:lang:ThreadLocal$Values.mask|] ;
#L0aeace.   v1:= v3 ^& v4  @type int;
#L0aead2.   v3:= v6.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aead6.   v2:= v3[v1]  @type object;
#L0aeada.   call temp:=  [|java:lang:ThreadLocal.access$300|](v7) @signature [|Ljava/lang/ThreadLocal;.access$300:(Ljava/lang/ThreadLocal;)Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0aeae0.   v3:= temp  @type object;
#L0aeae2.   if v2 != v3 then goto L0aeaf4;
#L0aeae6.   v3:= v6.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aeaea.   v4:= v1 + 1;
#L0aeaee.   v3[v4]:= v8  @type object;
#L0aeaf2.   return @void ;
#L0aeaf4.   if v2 != 0 then goto L0aeb5c;
#L0aeaf8.   if v0 != v5 then goto L0aeb26;
#L0aeafc.   v3:= v6.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aeb00.   call temp:=  [|java:lang:ThreadLocal.access$300|](v7) @signature [|Ljava/lang/ThreadLocal;.access$300:(Ljava/lang/ThreadLocal;)Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0aeb06.   v4:= temp  @type object;
#L0aeb08.   v3[v1]:= v4  @type object;
#L0aeb0c.   v3:= v6.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aeb10.   v4:= v1 + 1;
#L0aeb14.   v3[v4]:= v8  @type object;
#L0aeb18.   v3:= v6.[|java:lang:ThreadLocal$Values.size|] ;
#L0aeb1c.   v3:= v3 + 1;
#L0aeb20.   v6.[|java:lang:ThreadLocal$Values.size|]  := v3;
#L0aeb24.   goto L0aeaf2;
#L0aeb26.   v3:= v6.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aeb2a.   call temp:=  [|java:lang:ThreadLocal.access$300|](v7) @signature [|Ljava/lang/ThreadLocal;.access$300:(Ljava/lang/ThreadLocal;)Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0aeb30.   v4:= temp  @type object;
#L0aeb32.   v3[v0]:= v4  @type object;
#L0aeb36.   v3:= v6.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aeb3a.   v4:= v0 + 1;
#L0aeb3e.   v3[v4]:= v8  @type object;
#L0aeb42.   v3:= v6.[|java:lang:ThreadLocal$Values.tombstones|] ;
#L0aeb46.   v3:= v3 + -1;
#L0aeb4a.   v6.[|java:lang:ThreadLocal$Values.tombstones|]  := v3;
#L0aeb4e.   v3:= v6.[|java:lang:ThreadLocal$Values.size|] ;
#L0aeb52.   v3:= v3 + 1;
#L0aeb56.   v6.[|java:lang:ThreadLocal$Values.size|]  := v3;
#L0aeb5a.   goto L0aeaf2;
#L0aeb5c.   if v0 != v5 then goto L0aeb6a;
#L0aeb60.   v3:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0aeb64.   if v2 != v3 then goto L0aeb6a;
#L0aeb68.   v0:= v1;
#L0aeb6a.   call temp:=  [|java:lang:ThreadLocal$Values.next|](v6, v1) @signature [|Ljava/lang/ThreadLocal$Values;.next:(I)I|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0aeb70.   v1:= temp;
#L0aeb72.   goto L0aead2;

   }
    procedure [|void|] [|java:lang:ThreadLocal$Values.remove|] ([|java:lang:ThreadLocal$Values|] v5 @type (this), [|java:lang:ThreadLocal|] v6 @type (object)) @owner [|java:lang:ThreadLocal$Values|] @signature [|Ljava/lang/ThreadLocal$Values;.remove:(Ljava/lang/ThreadLocal;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0aeb84.   call temp:=  [|java:lang:ThreadLocal$Values.cleanUp|](v5) @signature [|Ljava/lang/ThreadLocal$Values;.cleanUp:()V|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0aeb8a.   call temp:=  [|java:lang:ThreadLocal.access$200|](v6) @signature [|Ljava/lang/ThreadLocal;.access$200:(Ljava/lang/ThreadLocal;)I|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0aeb90.   v2:= temp;
#L0aeb92.   v3:= v5.[|java:lang:ThreadLocal$Values.mask|] ;
#L0aeb96.   v0:= v2 ^& v3  @type int;
#L0aeb9a.   v2:= v5.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aeb9e.   v1:= v2[v0]  @type object;
#L0aeba2.   call temp:=  [|java:lang:ThreadLocal.access$300|](v6) @signature [|Ljava/lang/ThreadLocal;.access$300:(Ljava/lang/ThreadLocal;)Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ThreadLocal|] @type static;
#L0aeba8.   v2:= temp  @type object;
#L0aebaa.   if v1 != v2 then goto L0aebe2;
#L0aebae.   v2:= v5.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aebb2.   v3:= @@[|java:lang:ThreadLocal$Values.TOMBSTONE|]   @type object;
#L0aebb6.   v2[v0]:= v3  @type object;
#L0aebba.   v2:= v5.[|java:lang:ThreadLocal$Values.table|]   @type object;
#L0aebbe.   v3:= v0 + 1;
#L0aebc2.   v4:= 0  @length 4;
#L0aebc4.   v2[v3]:= v4  @type object;
#L0aebc8.   v2:= v5.[|java:lang:ThreadLocal$Values.tombstones|] ;
#L0aebcc.   v2:= v2 + 1;
#L0aebd0.   v5.[|java:lang:ThreadLocal$Values.tombstones|]  := v2;
#L0aebd4.   v2:= v5.[|java:lang:ThreadLocal$Values.size|] ;
#L0aebd8.   v2:= v2 + -1;
#L0aebdc.   v5.[|java:lang:ThreadLocal$Values.size|]  := v2;
#L0aebe0.   return @void ;
#L0aebe2.   if v1 == 0 then goto L0aebe0;
#L0aebe6.   call temp:=  [|java:lang:ThreadLocal$Values.next|](v5, v0) @signature [|Ljava/lang/ThreadLocal$Values;.next:(I)I|] @classDescriptor [|java:lang:ThreadLocal$Values|] @type direct;
#L0aebec.   v0:= temp;
#L0aebee.   goto L0aeb9a;

   }
record [|java:lang:TwoEnumerationsInOne|]  @type class @AccessFlag  extends  [|java:util:Enumeration|] {
      [|java:util:Enumeration|] [|java:lang:TwoEnumerationsInOne.first|]    @AccessFlag PRIVATE;
      [|java:util:Enumeration|] [|java:lang:TwoEnumerationsInOne.second|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:lang:TwoEnumerationsInOne.<init>|] ([|java:lang:TwoEnumerationsInOne|] v0 @type (this), [|java:util:Enumeration|] v1 @type (object), [|java:util:Enumeration|] v2 @type (object)) @owner [|java:lang:TwoEnumerationsInOne|] @signature [|Ljava/lang/TwoEnumerationsInOne;.<init>:(Ljava/util/Enumeration;Ljava/util/Enumeration;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aec00.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aec06.   v0.[|java:lang:TwoEnumerationsInOne.first|]  := v1 @type object;
#L0aec0a.   v0.[|java:lang:TwoEnumerationsInOne.second|]  := v2 @type object;
#L0aec0e.   return @void ;

   }
    procedure [|boolean|] [|java:lang:TwoEnumerationsInOne.hasMoreElements|] ([|java:lang:TwoEnumerationsInOne|] v1 @type (this)) @owner [|java:lang:TwoEnumerationsInOne|] @signature [|Ljava/lang/TwoEnumerationsInOne;.hasMoreElements:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aec20.   v0:= v1.[|java:lang:TwoEnumerationsInOne.first|]   @type object;
#L0aec24.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v0) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L0aec2a.   v0:= temp;
#L0aec2c.   if v0 != 0 then goto L0aec40;
#L0aec30.   v0:= v1.[|java:lang:TwoEnumerationsInOne.second|]   @type object;
#L0aec34.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v0) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L0aec3a.   v0:= temp;
#L0aec3c.   if v0 == 0 then goto L0aec44;
#L0aec40.   v0:= 1  @length 4;
#L0aec42.   return v0;
#L0aec44.   v0:= 0  @length 4;
#L0aec46.   goto L0aec42;

   }
    procedure [|java:lang:Object|] [|java:lang:TwoEnumerationsInOne.nextElement|] ([|java:lang:TwoEnumerationsInOne|] v1 @type (this)) @owner [|java:lang:TwoEnumerationsInOne|] @signature [|Ljava/lang/TwoEnumerationsInOne;.nextElement:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0aec58.   call temp:=  [|java:lang:TwoEnumerationsInOne.nextElement|](v1) @signature [|Ljava/lang/TwoEnumerationsInOne;.nextElement:()Ljava/net/URL;|] @classDescriptor [|java:lang:TwoEnumerationsInOne|] @type virtual;
#L0aec5e.   v0:= temp  @type object;
#L0aec60.   return v0  @type object;

   }
    procedure [|java:net:URL|] [|java:lang:TwoEnumerationsInOne.nextElement|] ([|java:lang:TwoEnumerationsInOne|] v1 @type (this)) @owner [|java:lang:TwoEnumerationsInOne|] @signature [|Ljava/lang/TwoEnumerationsInOne;.nextElement:()Ljava/net/URL;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aec74.   v0:= v1.[|java:lang:TwoEnumerationsInOne.first|]   @type object;
#L0aec78.   call temp:=  [|java:util:Enumeration.hasMoreElements|](v0) @signature [|Ljava/util/Enumeration;.hasMoreElements:()Z|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L0aec7e.   v0:= temp;
#L0aec80.   if v0 == 0 then goto L0aec96;
#L0aec84.   v0:= v1.[|java:lang:TwoEnumerationsInOne.first|]   @type object;
#L0aec88.   call temp:=  [|java:util:Enumeration.nextElement|](v0) @signature [|Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L0aec8e.   v0:= temp  @type object;
#L0aec90.   v0:= ([|java:net:URL|])v0;
#L0aec94.   return v0  @type object;
#L0aec96.   v0:= v1.[|java:lang:TwoEnumerationsInOne.second|]   @type object;
#L0aec9a.   call temp:=  [|java:util:Enumeration.nextElement|](v0) @signature [|Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;|] @classDescriptor [|java:util:Enumeration|] @type interface;
#L0aeca0.   v0:= temp  @type object;
#L0aeca2.   v0:= ([|java:net:URL|])v0;
#L0aeca6.   goto L0aec94;

   }
record [|java:lang:TypeNotPresentException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:RuntimeException|] {
      [|java:lang:String|] [|java:lang:TypeNotPresentException.typeName|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|java:lang:TypeNotPresentException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:TypeNotPresentException.<init>|] ([|java:lang:TypeNotPresentException|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:Throwable|] v4 @type (object)) @owner [|java:lang:TypeNotPresentException|] @signature [|Ljava/lang/TypeNotPresentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0aecb8.   v0:= new [|java:lang:StringBuilder|];
#L0aecbc.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0aecc2.   v1:= "Type " @type (object, string);
#L0aecc6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aeccc.   v0:= temp  @type object;
#L0aecce.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aecd4.   v0:= temp  @type object;
#L0aecd6.   v1:= " not present" @type (object, string);
#L0aecda.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aece0.   v0:= temp  @type object;
#L0aece2.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0aece8.   v0:= temp  @type object;
#L0aecea.   call temp:=  [|java:lang:RuntimeException.<init>|](v2, v0, v4) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0aecf0.   v2.[|java:lang:TypeNotPresentException.typeName|]  := v3 @type object;
#L0aecf4.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:TypeNotPresentException.typeName|] ([|java:lang:TypeNotPresentException|] v1 @type (this)) @owner [|java:lang:TypeNotPresentException|] @signature [|Ljava/lang/TypeNotPresentException;.typeName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aed08.   v0:= v1.[|java:lang:TypeNotPresentException.typeName|]   @type object;
#L0aed0c.   return v0  @type object;

   }
record [|java:lang:UnknownError|]  @type class @AccessFlag PUBLIC  extends [|java:lang:VirtualMachineError|] {
   }
      global [|long|] @@[|java:lang:UnknownError.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:UnknownError.<init>|] ([|java:lang:UnknownError|] v0 @type (this)) @owner [|java:lang:UnknownError|] @signature [|Ljava/lang/UnknownError;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aed20.   call temp:=  [|java:lang:VirtualMachineError.<init>|](v0) @signature [|Ljava/lang/VirtualMachineError;.<init>:()V|] @classDescriptor [|java:lang:VirtualMachineError|] @type direct;
#L0aed26.   return @void ;

   }
    procedure [|void|] [|java:lang:UnknownError.<init>|] ([|java:lang:UnknownError|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:UnknownError|] @signature [|Ljava/lang/UnknownError;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aed38.   call temp:=  [|java:lang:VirtualMachineError.<init>|](v0, v1) @signature [|Ljava/lang/VirtualMachineError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:VirtualMachineError|] @type direct;
#L0aed3e.   return @void ;

   }
record [|java:lang:UnsafeByteSequence|]  @type class @AccessFlag PUBLIC  {
      [|byte|][] [|java:lang:UnsafeByteSequence.bytes|]    @AccessFlag PRIVATE;
      [|int|] [|java:lang:UnsafeByteSequence.count|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:lang:UnsafeByteSequence.<init>|] ([|java:lang:UnsafeByteSequence|] v1 @type (this), [|int|] v2) @owner [|java:lang:UnsafeByteSequence|] @signature [|Ljava/lang/UnsafeByteSequence;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0aed50.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aed56.   v0:= new [|byte|][v2];
#L0aed5a.   v1.[|java:lang:UnsafeByteSequence.bytes|]  := v0 @type object;
#L0aed5e.   return @void ;

   }
    procedure [|void|] [|java:lang:UnsafeByteSequence.rewind|] ([|java:lang:UnsafeByteSequence|] v1 @type (this)) @owner [|java:lang:UnsafeByteSequence|] @signature [|Ljava/lang/UnsafeByteSequence;.rewind:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aed70.   v0:= 0  @length 4;
#L0aed72.   v1.[|java:lang:UnsafeByteSequence.count|]  := v0;
#L0aed76.   return @void ;

   }
    procedure [|int|] [|java:lang:UnsafeByteSequence.size|] ([|java:lang:UnsafeByteSequence|] v1 @type (this)) @owner [|java:lang:UnsafeByteSequence|] @signature [|Ljava/lang/UnsafeByteSequence;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0aed88.   v0:= v1.[|java:lang:UnsafeByteSequence.count|] ;
#L0aed8c.   return v0;

   }
    procedure [|byte|][] [|java:lang:UnsafeByteSequence.toByteArray|] ([|java:lang:UnsafeByteSequence|] v4 @type (this)) @owner [|java:lang:UnsafeByteSequence|] @signature [|Ljava/lang/UnsafeByteSequence;.toByteArray:()[B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0aeda0.   v3:= 0  @length 4;
#L0aeda2.   v1:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aeda6.   v2:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aedaa.   v2:= v2.length;
#L0aedac.   if v1 != v2 then goto L0aedb6;
#L0aedb0.   v0:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aedb4.   return v0  @type object;
#L0aedb6.   v1:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aedba.   v0:= new [|byte|][v1];
#L0aedbe.   v1:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aedc2.   v2:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aedc6.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0aedcc.   goto L0aedb4;

   }
    procedure [|java:lang:String|] [|java:lang:UnsafeByteSequence.toString|] ([|java:lang:UnsafeByteSequence|] v4 @type (this), [|java:nio:charset:Charset|] v5 @type (object)) @owner [|java:lang:UnsafeByteSequence|] @signature [|Ljava/lang/UnsafeByteSequence;.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0aede0.   v0:= new [|java:lang:String|];
#L0aede4.   v1:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aede8.   v2:= 0  @length 4;
#L0aedea.   v3:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aedee.   call temp:=  [|java:lang:String.<init>|](v0, v1, v2, v3, v5) @signature [|Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0aedf4.   return v0  @type object;

   }
    procedure [|void|] [|java:lang:UnsafeByteSequence.write|] ([|java:lang:UnsafeByteSequence|] v4 @type (this), [|int|] v5) @owner [|java:lang:UnsafeByteSequence|] @signature [|Ljava/lang/UnsafeByteSequence;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0aee08.   v3:= 0  @length 4;
#L0aee0a.   v1:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aee0e.   v2:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aee12.   v2:= v2.length;
#L0aee14.   if v1 != v2 then goto L0aee36;
#L0aee18.   v1:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aee1c.   v1:= v1 * 2;
#L0aee20.   v0:= new [|byte|][v1];
#L0aee24.   v1:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aee28.   v2:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aee2c.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0aee32.   v4.[|java:lang:UnsafeByteSequence.bytes|]  := v0 @type object;
#L0aee36.   v1:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aee3a.   v2:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aee3e.   v3:= v2 + 1;
#L0aee42.   v4.[|java:lang:UnsafeByteSequence.count|]  := v3;
#L0aee46.   v3:= (byte)v5  @type i2b;
#L0aee48.   v1[v2]:= v3  @byte;
#L0aee4c.   return @void ;

   }
    procedure [|void|] [|java:lang:UnsafeByteSequence.write|] ([|java:lang:UnsafeByteSequence|] v4 @type (this), [|byte|][] v5, [|int|] v6, [|int|] v7) @owner [|java:lang:UnsafeByteSequence|] @signature [|Ljava/lang/UnsafeByteSequence;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0aee60.   v3:= 0  @length 4;
#L0aee62.   v1:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aee66.   v1:= v1 + v7  @type int;
#L0aee68.   v2:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aee6c.   v2:= v2.length;
#L0aee6e.   if v1 < v2 then goto L0aee92;
#L0aee72.   v1:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aee76.   v1:= v1 + v7  @type int;
#L0aee78.   v1:= v1 * 2;
#L0aee7c.   v0:= new [|byte|][v1];
#L0aee80.   v1:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aee84.   v2:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aee88.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0aee8e.   v4.[|java:lang:UnsafeByteSequence.bytes|]  := v0 @type object;
#L0aee92.   v1:= v4.[|java:lang:UnsafeByteSequence.bytes|]   @type object;
#L0aee96.   v2:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aee9a.   call temp:=  [|java:lang:System.arraycopy|](v5, v6, v1, v2, v7) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0aeea0.   v1:= v4.[|java:lang:UnsafeByteSequence.count|] ;
#L0aeea4.   v1:= v1 + v7  @type int;
#L0aeea6.   v4.[|java:lang:UnsafeByteSequence.count|]  := v1;
#L0aeeaa.   return @void ;

   }
record [|java:lang:UnsatisfiedLinkError|]  @type class @AccessFlag PUBLIC  extends [|java:lang:LinkageError|] {
   }
      global [|long|] @@[|java:lang:UnsatisfiedLinkError.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:UnsatisfiedLinkError.<init>|] ([|java:lang:UnsatisfiedLinkError|] v0 @type (this)) @owner [|java:lang:UnsatisfiedLinkError|] @signature [|Ljava/lang/UnsatisfiedLinkError;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aeebc.   call temp:=  [|java:lang:LinkageError.<init>|](v0) @signature [|Ljava/lang/LinkageError;.<init>:()V|] @classDescriptor [|java:lang:LinkageError|] @type direct;
#L0aeec2.   return @void ;

   }
    procedure [|void|] [|java:lang:UnsatisfiedLinkError.<init>|] ([|java:lang:UnsatisfiedLinkError|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:UnsatisfiedLinkError|] @signature [|Ljava/lang/UnsatisfiedLinkError;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aeed4.   call temp:=  [|java:lang:LinkageError.<init>|](v0, v1) @signature [|Ljava/lang/LinkageError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:LinkageError|] @type direct;
#L0aeeda.   return @void ;

   }
record [|java:lang:UnsupportedClassVersionError|]  @type class @AccessFlag PUBLIC  extends [|java:lang:ClassFormatError|] {
   }
      global [|long|] @@[|java:lang:UnsupportedClassVersionError.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:UnsupportedClassVersionError.<init>|] ([|java:lang:UnsupportedClassVersionError|] v0 @type (this)) @owner [|java:lang:UnsupportedClassVersionError|] @signature [|Ljava/lang/UnsupportedClassVersionError;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aeeec.   call temp:=  [|java:lang:ClassFormatError.<init>|](v0) @signature [|Ljava/lang/ClassFormatError;.<init>:()V|] @classDescriptor [|java:lang:ClassFormatError|] @type direct;
#L0aeef2.   return @void ;

   }
    procedure [|void|] [|java:lang:UnsupportedClassVersionError.<init>|] ([|java:lang:UnsupportedClassVersionError|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:UnsupportedClassVersionError|] @signature [|Ljava/lang/UnsupportedClassVersionError;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aef04.   call temp:=  [|java:lang:ClassFormatError.<init>|](v0, v1) @signature [|Ljava/lang/ClassFormatError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ClassFormatError|] @type direct;
#L0aef0a.   return @void ;

   }
record [|java:lang:UnsupportedOperationException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:RuntimeException|] {
   }
      global [|long|] @@[|java:lang:UnsupportedOperationException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:UnsupportedOperationException.<init>|] ([|java:lang:UnsupportedOperationException|] v0 @type (this)) @owner [|java:lang:UnsupportedOperationException|] @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aef1c.   call temp:=  [|java:lang:RuntimeException.<init>|](v0) @signature [|Ljava/lang/RuntimeException;.<init>:()V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0aef22.   return @void ;

   }
    procedure [|void|] [|java:lang:UnsupportedOperationException.<init>|] ([|java:lang:UnsupportedOperationException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:UnsupportedOperationException|] @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aef34.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0aef3a.   return @void ;

   }
    procedure [|void|] [|java:lang:UnsupportedOperationException.<init>|] ([|java:lang:UnsupportedOperationException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:lang:UnsupportedOperationException|] @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0aef4c.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1, v2) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0aef52.   return @void ;

   }
    procedure [|void|] [|java:lang:UnsupportedOperationException.<init>|] ([|java:lang:UnsupportedOperationException|] v1 @type (this), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:lang:UnsupportedOperationException|] @signature [|Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0aef64.   if v2 != 0 then goto L0aef72;
#L0aef68.   v0:= 0  @length 4;
#L0aef6a.   call temp:=  [|java:lang:RuntimeException.<init>|](v1, v0, v2) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0aef70.   return @void ;
#L0aef72.   call temp:=  [|java:lang:Throwable.toString|](v2) @signature [|Ljava/lang/Throwable;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Throwable|] @type virtual;
#L0aef78.   v0:= temp  @type object;
#L0aef7a.   goto L0aef6a;

   }
record [|java:lang:VMClassLoader|]  @type class @AccessFlag   {
   }
    procedure [|void|] [|java:lang:VMClassLoader.<init>|] ([|java:lang:VMClassLoader|] v0 @type (this)) @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0aef8c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0aef92.   return @void ;

   }
    procedure [|java:lang:Class|] [|java:lang:VMClassLoader.defineClass|] ([|java:lang:ClassLoader|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.defineClass:(Ljava/lang/ClassLoader;Ljava/lang/String;[BII)Ljava/lang/Class;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:Class|] [|java:lang:VMClassLoader.defineClass|] ([|java:lang:ClassLoader|] v0 @type (object), [|byte|][] v1, [|int|] v2, [|int|] v3) @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.defineClass:(Ljava/lang/ClassLoader;[BII)Ljava/lang/Class;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:Class|] [|java:lang:VMClassLoader.findLoadedClass|] ([|java:lang:ClassLoader|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.findLoadedClass:(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:lang:VMClassLoader.getBootClassPathResource|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.getBootClassPathResource:(Ljava/lang/String;I)Ljava/lang/String;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:lang:VMClassLoader.getBootClassPathSize|] () @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.getBootClassPathSize:()I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:Class|] [|java:lang:VMClassLoader.getPrimitiveClass|] ([|char|] v0) @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.getPrimitiveClass:(C)Ljava/lang/Class;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:net:URL|] [|java:lang:VMClassLoader.getResource|] ([|java:lang:String|] v5 @type (object)) @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.getResource:(Ljava/lang/String;)Ljava/net/URL;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0aefa4.   call temp:=  [|java:lang:VMClassLoader.getBootClassPathSize|]() @signature [|Ljava/lang/VMClassLoader;.getBootClassPathSize:()I|] @classDescriptor [|java:lang:VMClassLoader|] @type static;
#L0aefaa.   v2:= temp;
#L0aefac.   v0:= 0  @length 4;
#L0aefae.   if v0 >= v2 then goto L0aefd8;
#L0aefb2.   call temp:=  [|java:lang:VMClassLoader.getBootClassPathResource|](v5, v0) @signature [|Ljava/lang/VMClassLoader;.getBootClassPathResource:(Ljava/lang/String;I)Ljava/lang/String;|] @classDescriptor [|java:lang:VMClassLoader|] @type static;
#L0aefb8.   v3:= temp  @type object;
#L0aefba.   if v3 == 0 then goto L0aefd2;
#L0aefbe.   v4:= new [|java:net:URL|];
#L0aefc2.   call temp:=  [|java:net:URL.<init>|](v4, v3) @signature [|Ljava/net/URL;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:URL|] @type direct;
#L0aefc8.   return v4  @type object;
#L0aefca.   v1:= Exception  @type object;
#L0aefcc.   call temp:=  [|java:net:MalformedURLException.printStackTrace|](v1) @signature [|Ljava/net/MalformedURLException;.printStackTrace:()V|] @classDescriptor [|java:net:MalformedURLException|] @type virtual;
#L0aefd2.   v0:= v0 + 1;
#L0aefd6.   goto L0aefae;
#L0aefd8.   v4:= 0  @length 4;
#L0aefda.   goto L0aefc8;
  catch  [|java:net:MalformedURLException|] @[L0aefbe..L0aefc8] goto L0aefca;

   }
    procedure [|java:util:List|] [|java:lang:VMClassLoader.getResources|] ([|java:lang:String|] v6 @type (object)) @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.getResources:(Ljava/lang/String;)Ljava/util/List;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0aeffc.   v1:= new [|java:util:ArrayList|];
#L0af000.   call temp:=  [|java:util:ArrayList.<init>|](v1) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0af006.   call temp:=  [|java:lang:VMClassLoader.getBootClassPathSize|]() @signature [|Ljava/lang/VMClassLoader;.getBootClassPathSize:()I|] @classDescriptor [|java:lang:VMClassLoader|] @type static;
#L0af00c.   v3:= temp;
#L0af00e.   v0:= 0  @length 4;
#L0af010.   if v0 >= v3 then goto L0af040;
#L0af014.   call temp:=  [|java:lang:VMClassLoader.getBootClassPathResource|](v6, v0) @signature [|Ljava/lang/VMClassLoader;.getBootClassPathResource:(Ljava/lang/String;I)Ljava/lang/String;|] @classDescriptor [|java:lang:VMClassLoader|] @type static;
#L0af01a.   v4:= temp  @type object;
#L0af01c.   if v4 == 0 then goto L0af030;
#L0af020.   v5:= new [|java:net:URL|];
#L0af024.   call temp:=  [|java:net:URL.<init>|](v5, v4) @signature [|Ljava/net/URL;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:URL|] @type direct;
#L0af02a.   call temp:=  [|java:util:ArrayList.add|](v1, v5) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0af030.   v0:= v0 + 1;
#L0af034.   goto L0af010;
#L0af036.   v2:= Exception  @type object;
#L0af038.   call temp:=  [|java:net:MalformedURLException.printStackTrace|](v2) @signature [|Ljava/net/MalformedURLException;.printStackTrace:()V|] @classDescriptor [|java:net:MalformedURLException|] @type virtual;
#L0af03e.   goto L0af030;
#L0af040.   return v1  @type object;
  catch  [|java:net:MalformedURLException|] @[L0af020..L0af030] goto L0af036;

   }
    procedure [|java:lang:Class|] [|java:lang:VMClassLoader.loadClass|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1) @owner [|java:lang:VMClassLoader|] @signature [|Ljava/lang/VMClassLoader;.loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;|] @Access STATIC_NATIVE {
      # return;
   }
record [|java:lang:VMThread|]  @type class @AccessFlag   {
      [|java:lang:Thread|] [|java:lang:VMThread.thread|]    @AccessFlag ;
      [|int|] [|java:lang:VMThread.vmData|]    @AccessFlag ;
   }
      global [|java:lang:Thread$State|][] @@[|java:lang:VMThread.STATE_MAP|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:lang:VMThread.<clinit>|] () @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0af064.   v0:= 10  @length 16;
#L0af068.   v0:= new [|java:lang:Thread$State|][v0];
#L0af06c.   v1:= 0  @length 4;
#L0af06e.   v2:= @@[|java:lang:Thread$State.TERMINATED|]   @type object;
#L0af072.   v0[v1]:= v2  @type object;
#L0af076.   v1:= 1  @length 4;
#L0af078.   v2:= @@[|java:lang:Thread$State.RUNNABLE|]   @type object;
#L0af07c.   v0[v1]:= v2  @type object;
#L0af080.   v1:= 2  @length 4;
#L0af082.   v2:= @@[|java:lang:Thread$State.TIMED_WAITING|]   @type object;
#L0af086.   v0[v1]:= v2  @type object;
#L0af08a.   v1:= 3  @length 4;
#L0af08c.   v2:= @@[|java:lang:Thread$State.BLOCKED|]   @type object;
#L0af090.   v0[v1]:= v2  @type object;
#L0af094.   v1:= 4  @length 4;
#L0af096.   v2:= @@[|java:lang:Thread$State.WAITING|]   @type object;
#L0af09a.   v0[v1]:= v2  @type object;
#L0af09e.   v1:= 5  @length 4;
#L0af0a0.   v2:= @@[|java:lang:Thread$State.NEW|]   @type object;
#L0af0a4.   v0[v1]:= v2  @type object;
#L0af0a8.   v1:= 6  @length 4;
#L0af0aa.   v2:= @@[|java:lang:Thread$State.NEW|]   @type object;
#L0af0ae.   v0[v1]:= v2  @type object;
#L0af0b2.   v1:= 7  @length 4;
#L0af0b4.   v2:= @@[|java:lang:Thread$State.RUNNABLE|]   @type object;
#L0af0b8.   v0[v1]:= v2  @type object;
#L0af0bc.   v1:= 8  @length 16;
#L0af0c0.   v2:= @@[|java:lang:Thread$State.WAITING|]   @type object;
#L0af0c4.   v0[v1]:= v2  @type object;
#L0af0c8.   v1:= 9  @length 16;
#L0af0cc.   v2:= @@[|java:lang:Thread$State.RUNNABLE|]   @type object;
#L0af0d0.   v0[v1]:= v2  @type object;
#L0af0d4.   @@[|java:lang:VMThread.STATE_MAP|] := v0  @type object;
#L0af0d8.   return @void ;

   }
    procedure [|void|] [|java:lang:VMThread.<init>|] ([|java:lang:VMThread|] v0 @type (this), [|java:lang:Thread|] v1 @type (object)) @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.<init>:(Ljava/lang/Thread;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0af0ec.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0af0f2.   v0.[|java:lang:VMThread.thread|]  := v1 @type object;
#L0af0f6.   return @void ;

   }
    procedure [|void|] [|java:lang:VMThread.create|] ([|java:lang:Thread|] v0 @type (object), [|long|] v1) @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.create:(Ljava/lang/Thread;J)V|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:Thread|] [|java:lang:VMThread.currentThread|] () @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.currentThread:()Ljava/lang/Thread;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:lang:VMThread.interrupted|] () @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.interrupted:()Z|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:VMThread.sleep|] ([|long|] v0, [|int|] v2) @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.sleep:(JI)V|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:VMThread.yield|] () @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.yield:()V|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:lang:VMThread.getStatus|] () @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.getStatus:()I|] @Access NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:lang:VMThread.holdsLock|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.holdsLock:(Ljava/lang/Object;)Z|] @Access NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:VMThread.interrupt|] () @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.interrupt:()V|] @Access NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:lang:VMThread.isInterrupted|] () @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.isInterrupted:()Z|] @Access NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:VMThread.nameChanged|] ([|java:lang:String|] v0 @type (object)) @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.nameChanged:(Ljava/lang/String;)V|] @Access NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:VMThread.setPriority|] ([|int|] v0) @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.setPriority:(I)V|] @Access NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:VMThread.start|] ([|java:lang:VMThread|] v1 @type (this), [|long|] v2) @owner [|java:lang:VMThread|] @signature [|Ljava/lang/VMThread;.start:(J)V|] @Access  {
      local temp ;
        v0;
      
#L0af108.   v0:= v1.[|java:lang:VMThread.thread|]   @type object;
#L0af10c.   call temp:=  [|java:lang:VMThread.create|](v0, v2, v3) @signature [|Ljava/lang/VMThread;.create:(Ljava/lang/Thread;J)V|] @classDescriptor [|java:lang:VMThread|] @type static;
#L0af112.   return @void ;

   }
record [|java:lang:VerifyError|]  @type class @AccessFlag PUBLIC  extends [|java:lang:LinkageError|] {
   }
      global [|long|] @@[|java:lang:VerifyError.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:VerifyError.<init>|] ([|java:lang:VerifyError|] v0 @type (this)) @owner [|java:lang:VerifyError|] @signature [|Ljava/lang/VerifyError;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af124.   call temp:=  [|java:lang:LinkageError.<init>|](v0) @signature [|Ljava/lang/LinkageError;.<init>:()V|] @classDescriptor [|java:lang:LinkageError|] @type direct;
#L0af12a.   return @void ;

   }
    procedure [|void|] [|java:lang:VerifyError.<init>|] ([|java:lang:VerifyError|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:VerifyError|] @signature [|Ljava/lang/VerifyError;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af13c.   call temp:=  [|java:lang:LinkageError.<init>|](v0, v1) @signature [|Ljava/lang/LinkageError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:LinkageError|] @type direct;
#L0af142.   return @void ;

   }
record [|java:lang:Void|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
      global [|java:lang:Class|] @@[|java:lang:Void.TYPE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:lang:Void.<clinit>|] () @owner [|java:lang:Void|] @signature [|Ljava/lang/Void;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0af154.   call temp:=  [|java:lang:Void.lookupType|]() @signature [|Ljava/lang/Void;.lookupType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Void|] @type static;
#L0af15a.   v0:= temp  @type object;
#L0af15c.   @@[|java:lang:Void.TYPE|] := v0  @type object;
#L0af160.   return @void ;

   }
    procedure [|void|] [|java:lang:Void.<init>|] ([|java:lang:Void|] v0 @type (this)) @owner [|java:lang:Void|] @signature [|Ljava/lang/Void;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0af174.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0af17a.   return @void ;

   }
    procedure [|java:lang:Class|] [|java:lang:Void.lookupType|] () @owner [|java:lang:Void|] @signature [|Ljava/lang/Void;.lookupType:()Ljava/lang/Class;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0af18c.   v2:= new [|java:lang:Runnable|];
#L0af190.   v3:= "run" @type (object, string);
#L0af194.   v4:= @@[|libcore:util:EmptyArray.CLASS|]   @type object;
#L0af198.   call temp:=  [|java:lang:Class.getMethod|](v2, v3, v4) @signature [|Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0af19e.   v1:= temp  @type object;
#L0af1a0.   call temp:=  [|java:lang:reflect:Method.getReturnType|](v1) @signature [|Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0af1a6.   v2:= temp  @type object;
#L0af1a8.   return v2  @type object;
#L0af1aa.   v0:= Exception  @type object;
#L0af1ac.   v2:= new [|java:lang:AssertionError|];
#L0af1b0.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0af1b6.   throw v2;
  catch  [|java:lang:Exception|] @[L0af18c..L0af1a6] goto L0af1aa;

   }
record [|java:lang:annotation:AnnotationFormatError|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Error|] {
   }
      global [|long|] @@[|java:lang:annotation:AnnotationFormatError.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:annotation:AnnotationFormatError.<init>|] ([|java:lang:annotation:AnnotationFormatError|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:lang:annotation:AnnotationFormatError|] @signature [|Ljava/lang/annotation/AnnotationFormatError;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af1d8.   call temp:=  [|java:lang:Error.<init>|](v0, v1) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L0af1de.   return @void ;

   }
    procedure [|void|] [|java:lang:annotation:AnnotationFormatError.<init>|] ([|java:lang:annotation:AnnotationFormatError|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:lang:annotation:AnnotationFormatError|] @signature [|Ljava/lang/annotation/AnnotationFormatError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af1f0.   call temp:=  [|java:lang:Error.<init>|](v0, v1, v2) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L0af1f6.   return @void ;

   }
    procedure [|void|] [|java:lang:annotation:AnnotationFormatError.<init>|] ([|java:lang:annotation:AnnotationFormatError|] v1 @type (this), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:lang:annotation:AnnotationFormatError|] @signature [|Ljava/lang/annotation/AnnotationFormatError;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0af208.   if v2 != 0 then goto L0af216;
#L0af20c.   v0:= 0  @length 4;
#L0af20e.   call temp:=  [|java:lang:Error.<init>|](v1, v0, v2) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L0af214.   return @void ;
#L0af216.   call temp:=  [|java:lang:Throwable.toString|](v2) @signature [|Ljava/lang/Throwable;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Throwable|] @type virtual;
#L0af21c.   v0:= temp  @type object;
#L0af21e.   goto L0af20e;

   }
record [|java:lang:annotation:AnnotationTypeMismatchException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:RuntimeException|] {
      [|java:lang:reflect:Method|] [|java:lang:annotation:AnnotationTypeMismatchException.element|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:lang:annotation:AnnotationTypeMismatchException.foundType|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|java:lang:annotation:AnnotationTypeMismatchException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:annotation:AnnotationTypeMismatchException.<init>|] ([|java:lang:annotation:AnnotationTypeMismatchException|] v2 @type (this), [|java:lang:reflect:Method|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:lang:annotation:AnnotationTypeMismatchException|] @signature [|Ljava/lang/annotation/AnnotationTypeMismatchException;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0af230.   v0:= new [|java:lang:StringBuilder|];
#L0af234.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0af23a.   v1:= "The annotation element " @type (object, string);
#L0af23e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af244.   v0:= temp  @type object;
#L0af246.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af24c.   v0:= temp  @type object;
#L0af24e.   v1:= " doesn't match the type " @type (object, string);
#L0af252.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af258.   v0:= temp  @type object;
#L0af25a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af260.   v0:= temp  @type object;
#L0af262.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af268.   v0:= temp  @type object;
#L0af26a.   call temp:=  [|java:lang:RuntimeException.<init>|](v2, v0) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0af270.   v2.[|java:lang:annotation:AnnotationTypeMismatchException.element|]  := v3 @type object;
#L0af274.   v2.[|java:lang:annotation:AnnotationTypeMismatchException.foundType|]  := v4 @type object;
#L0af278.   return @void ;

   }
    procedure [|java:lang:reflect:Method|] [|java:lang:annotation:AnnotationTypeMismatchException.element|] ([|java:lang:annotation:AnnotationTypeMismatchException|] v1 @type (this)) @owner [|java:lang:annotation:AnnotationTypeMismatchException|] @signature [|Ljava/lang/annotation/AnnotationTypeMismatchException;.element:()Ljava/lang/reflect/Method;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af28c.   v0:= v1.[|java:lang:annotation:AnnotationTypeMismatchException.element|]   @type object;
#L0af290.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:annotation:AnnotationTypeMismatchException.foundType|] ([|java:lang:annotation:AnnotationTypeMismatchException|] v1 @type (this)) @owner [|java:lang:annotation:AnnotationTypeMismatchException|] @signature [|Ljava/lang/annotation/AnnotationTypeMismatchException;.foundType:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af2a4.   v0:= v1.[|java:lang:annotation:AnnotationTypeMismatchException.foundType|]   @type object;
#L0af2a8.   return v0  @type object;

   }
record [|java:lang:annotation:Documented|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT_ANNOTATION extends  [|java:lang:annotation:Annotation|] {
   }
record [|java:lang:annotation:ElementType|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:lang:annotation:ElementType|][] @@[|java:lang:annotation:ElementType.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:lang:annotation:ElementType|] @@[|java:lang:annotation:ElementType.ANNOTATION_TYPE|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:annotation:ElementType|] @@[|java:lang:annotation:ElementType.CONSTRUCTOR|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:annotation:ElementType|] @@[|java:lang:annotation:ElementType.FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:annotation:ElementType|] @@[|java:lang:annotation:ElementType.LOCAL_VARIABLE|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:annotation:ElementType|] @@[|java:lang:annotation:ElementType.METHOD|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:annotation:ElementType|] @@[|java:lang:annotation:ElementType.PACKAGE|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:annotation:ElementType|] @@[|java:lang:annotation:ElementType.PARAMETER|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:annotation:ElementType|] @@[|java:lang:annotation:ElementType.TYPE|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:lang:annotation:ElementType.<clinit>|] () @owner [|java:lang:annotation:ElementType|] @signature [|Ljava/lang/annotation/ElementType;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0af2bc.   v7:= 4  @length 4;
#L0af2be.   v6:= 3  @length 4;
#L0af2c0.   v5:= 2  @length 4;
#L0af2c2.   v4:= 1  @length 4;
#L0af2c4.   v3:= 0  @length 4;
#L0af2c6.   v0:= new [|java:lang:annotation:ElementType|];
#L0af2ca.   v1:= "TYPE" @type (object, string);
#L0af2ce.   call temp:=  [|java:lang:annotation:ElementType.<init>|](v0, v1, v3) @signature [|Ljava/lang/annotation/ElementType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:ElementType|] @type direct;
#L0af2d4.   @@[|java:lang:annotation:ElementType.TYPE|] := v0  @type object;
#L0af2d8.   v0:= new [|java:lang:annotation:ElementType|];
#L0af2dc.   v1:= "FIELD" @type (object, string);
#L0af2e0.   call temp:=  [|java:lang:annotation:ElementType.<init>|](v0, v1, v4) @signature [|Ljava/lang/annotation/ElementType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:ElementType|] @type direct;
#L0af2e6.   @@[|java:lang:annotation:ElementType.FIELD|] := v0  @type object;
#L0af2ea.   v0:= new [|java:lang:annotation:ElementType|];
#L0af2ee.   v1:= "METHOD" @type (object, string);
#L0af2f2.   call temp:=  [|java:lang:annotation:ElementType.<init>|](v0, v1, v5) @signature [|Ljava/lang/annotation/ElementType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:ElementType|] @type direct;
#L0af2f8.   @@[|java:lang:annotation:ElementType.METHOD|] := v0  @type object;
#L0af2fc.   v0:= new [|java:lang:annotation:ElementType|];
#L0af300.   v1:= "PARAMETER" @type (object, string);
#L0af304.   call temp:=  [|java:lang:annotation:ElementType.<init>|](v0, v1, v6) @signature [|Ljava/lang/annotation/ElementType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:ElementType|] @type direct;
#L0af30a.   @@[|java:lang:annotation:ElementType.PARAMETER|] := v0  @type object;
#L0af30e.   v0:= new [|java:lang:annotation:ElementType|];
#L0af312.   v1:= "CONSTRUCTOR" @type (object, string);
#L0af316.   call temp:=  [|java:lang:annotation:ElementType.<init>|](v0, v1, v7) @signature [|Ljava/lang/annotation/ElementType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:ElementType|] @type direct;
#L0af31c.   @@[|java:lang:annotation:ElementType.CONSTRUCTOR|] := v0  @type object;
#L0af320.   v0:= new [|java:lang:annotation:ElementType|];
#L0af324.   v1:= "LOCAL_VARIABLE" @type (object, string);
#L0af328.   v2:= 5  @length 4;
#L0af32a.   call temp:=  [|java:lang:annotation:ElementType.<init>|](v0, v1, v2) @signature [|Ljava/lang/annotation/ElementType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:ElementType|] @type direct;
#L0af330.   @@[|java:lang:annotation:ElementType.LOCAL_VARIABLE|] := v0  @type object;
#L0af334.   v0:= new [|java:lang:annotation:ElementType|];
#L0af338.   v1:= "ANNOTATION_TYPE" @type (object, string);
#L0af33c.   v2:= 6  @length 4;
#L0af33e.   call temp:=  [|java:lang:annotation:ElementType.<init>|](v0, v1, v2) @signature [|Ljava/lang/annotation/ElementType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:ElementType|] @type direct;
#L0af344.   @@[|java:lang:annotation:ElementType.ANNOTATION_TYPE|] := v0  @type object;
#L0af348.   v0:= new [|java:lang:annotation:ElementType|];
#L0af34c.   v1:= "PACKAGE" @type (object, string);
#L0af350.   v2:= 7  @length 4;
#L0af352.   call temp:=  [|java:lang:annotation:ElementType.<init>|](v0, v1, v2) @signature [|Ljava/lang/annotation/ElementType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:ElementType|] @type direct;
#L0af358.   @@[|java:lang:annotation:ElementType.PACKAGE|] := v0  @type object;
#L0af35c.   v0:= 8  @length 16;
#L0af360.   v0:= new [|java:lang:annotation:ElementType|][v0];
#L0af364.   v1:= @@[|java:lang:annotation:ElementType.TYPE|]   @type object;
#L0af368.   v0[v3]:= v1  @type object;
#L0af36c.   v1:= @@[|java:lang:annotation:ElementType.FIELD|]   @type object;
#L0af370.   v0[v4]:= v1  @type object;
#L0af374.   v1:= @@[|java:lang:annotation:ElementType.METHOD|]   @type object;
#L0af378.   v0[v5]:= v1  @type object;
#L0af37c.   v1:= @@[|java:lang:annotation:ElementType.PARAMETER|]   @type object;
#L0af380.   v0[v6]:= v1  @type object;
#L0af384.   v1:= @@[|java:lang:annotation:ElementType.CONSTRUCTOR|]   @type object;
#L0af388.   v0[v7]:= v1  @type object;
#L0af38c.   v1:= 5  @length 4;
#L0af38e.   v2:= @@[|java:lang:annotation:ElementType.LOCAL_VARIABLE|]   @type object;
#L0af392.   v0[v1]:= v2  @type object;
#L0af396.   v1:= 6  @length 4;
#L0af398.   v2:= @@[|java:lang:annotation:ElementType.ANNOTATION_TYPE|]   @type object;
#L0af39c.   v0[v1]:= v2  @type object;
#L0af3a0.   v1:= 7  @length 4;
#L0af3a2.   v2:= @@[|java:lang:annotation:ElementType.PACKAGE|]   @type object;
#L0af3a6.   v0[v1]:= v2  @type object;
#L0af3aa.   @@[|java:lang:annotation:ElementType.$VALUES|] := v0  @type object;
#L0af3ae.   return @void ;

   }
    procedure [|void|] [|java:lang:annotation:ElementType.<init>|] ([|java:lang:annotation:ElementType|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:lang:annotation:ElementType|] @signature [|Ljava/lang/annotation/ElementType;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0af3c0.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0af3c6.   return @void ;

   }
    procedure [|java:lang:annotation:ElementType|] [|java:lang:annotation:ElementType.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:lang:annotation:ElementType|] @signature [|Ljava/lang/annotation/ElementType;.valueOf:(Ljava/lang/String;)Ljava/lang/annotation/ElementType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0af3d8.   v0:= new [|java:lang:annotation:ElementType|];
#L0af3dc.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0af3e2.   v0:= temp  @type object;
#L0af3e4.   v0:= ([|java:lang:annotation:ElementType|])v0;
#L0af3e8.   return v0  @type object;

   }
    procedure [|java:lang:annotation:ElementType|][] [|java:lang:annotation:ElementType.values|] () @owner [|java:lang:annotation:ElementType|] @signature [|Ljava/lang/annotation/ElementType;.values:()[Ljava/lang/annotation/ElementType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0af3fc.   v0:= @@[|java:lang:annotation:ElementType.$VALUES|]   @type object;
#L0af400.   call temp:=  [|java:lang:annotation:ElementType[].clone|](v0) @signature [|[Ljava/lang/annotation/ElementType;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:annotation:ElementType[]|] @type virtual;
#L0af406.   v0:= temp  @type object;
#L0af408.   v0:= ([|java:lang:annotation:ElementType|][])v0;
#L0af40c.   return v0  @type object;

   }
record [|java:lang:annotation:IncompleteAnnotationException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:RuntimeException|] {
      [|java:lang:Class|] [|java:lang:annotation:IncompleteAnnotationException.annotationType|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:lang:annotation:IncompleteAnnotationException.elementName|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|java:lang:annotation:IncompleteAnnotationException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:annotation:IncompleteAnnotationException.<init>|] ([|java:lang:annotation:IncompleteAnnotationException|] v2 @type (this), [|java:lang:Class|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:lang:annotation:IncompleteAnnotationException|] @signature [|Ljava/lang/annotation/IncompleteAnnotationException;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0af420.   v0:= new [|java:lang:StringBuilder|];
#L0af424.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0af42a.   v1:= "The element " @type (object, string);
#L0af42e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af434.   v0:= temp  @type object;
#L0af436.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af43c.   v0:= temp  @type object;
#L0af43e.   v1:= " is not complete for the annotation " @type (object, string);
#L0af442.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af448.   v0:= temp  @type object;
#L0af44a.   call temp:=  [|java:lang:Class.getName|](v3) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0af450.   v1:= temp  @type object;
#L0af452.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af458.   v0:= temp  @type object;
#L0af45a.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af460.   v0:= temp  @type object;
#L0af462.   call temp:=  [|java:lang:RuntimeException.<init>|](v2, v0) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0af468.   v2.[|java:lang:annotation:IncompleteAnnotationException.annotationType|]  := v3 @type object;
#L0af46c.   v2.[|java:lang:annotation:IncompleteAnnotationException.elementName|]  := v4 @type object;
#L0af470.   return @void ;

   }
    procedure [|java:lang:Class|] [|java:lang:annotation:IncompleteAnnotationException.annotationType|] ([|java:lang:annotation:IncompleteAnnotationException|] v1 @type (this)) @owner [|java:lang:annotation:IncompleteAnnotationException|] @signature [|Ljava/lang/annotation/IncompleteAnnotationException;.annotationType:()Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af484.   v0:= v1.[|java:lang:annotation:IncompleteAnnotationException.annotationType|]   @type object;
#L0af488.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:annotation:IncompleteAnnotationException.elementName|] ([|java:lang:annotation:IncompleteAnnotationException|] v1 @type (this)) @owner [|java:lang:annotation:IncompleteAnnotationException|] @signature [|Ljava/lang/annotation/IncompleteAnnotationException;.elementName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af49c.   v0:= v1.[|java:lang:annotation:IncompleteAnnotationException.elementName|]   @type object;
#L0af4a0.   return v0  @type object;

   }
record [|java:lang:annotation:Inherited|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT_ANNOTATION extends  [|java:lang:annotation:Annotation|] {
   }
record [|java:lang:annotation:Retention|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT_ANNOTATION extends  [|java:lang:annotation:Annotation|] {
   }
    procedure [|java:lang:annotation:RetentionPolicy|] [|java:lang:annotation:Retention.value|] () @owner [|java:lang:annotation:Retention|] @signature [|Ljava/lang/annotation/Retention;.value:()Ljava/lang/annotation/RetentionPolicy;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:lang:annotation:RetentionPolicy|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:lang:annotation:RetentionPolicy|][] @@[|java:lang:annotation:RetentionPolicy.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:lang:annotation:RetentionPolicy|] @@[|java:lang:annotation:RetentionPolicy.CLASS|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:annotation:RetentionPolicy|] @@[|java:lang:annotation:RetentionPolicy.RUNTIME|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:lang:annotation:RetentionPolicy|] @@[|java:lang:annotation:RetentionPolicy.SOURCE|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:lang:annotation:RetentionPolicy.<clinit>|] () @owner [|java:lang:annotation:RetentionPolicy|] @signature [|Ljava/lang/annotation/RetentionPolicy;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0af4b4.   v4:= 2  @length 4;
#L0af4b6.   v3:= 1  @length 4;
#L0af4b8.   v2:= 0  @length 4;
#L0af4ba.   v0:= new [|java:lang:annotation:RetentionPolicy|];
#L0af4be.   v1:= "SOURCE" @type (object, string);
#L0af4c2.   call temp:=  [|java:lang:annotation:RetentionPolicy.<init>|](v0, v1, v2) @signature [|Ljava/lang/annotation/RetentionPolicy;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:RetentionPolicy|] @type direct;
#L0af4c8.   @@[|java:lang:annotation:RetentionPolicy.SOURCE|] := v0  @type object;
#L0af4cc.   v0:= new [|java:lang:annotation:RetentionPolicy|];
#L0af4d0.   v1:= "CLASS" @type (object, string);
#L0af4d4.   call temp:=  [|java:lang:annotation:RetentionPolicy.<init>|](v0, v1, v3) @signature [|Ljava/lang/annotation/RetentionPolicy;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:RetentionPolicy|] @type direct;
#L0af4da.   @@[|java:lang:annotation:RetentionPolicy.CLASS|] := v0  @type object;
#L0af4de.   v0:= new [|java:lang:annotation:RetentionPolicy|];
#L0af4e2.   v1:= "RUNTIME" @type (object, string);
#L0af4e6.   call temp:=  [|java:lang:annotation:RetentionPolicy.<init>|](v0, v1, v4) @signature [|Ljava/lang/annotation/RetentionPolicy;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:annotation:RetentionPolicy|] @type direct;
#L0af4ec.   @@[|java:lang:annotation:RetentionPolicy.RUNTIME|] := v0  @type object;
#L0af4f0.   v0:= 3  @length 4;
#L0af4f2.   v0:= new [|java:lang:annotation:RetentionPolicy|][v0];
#L0af4f6.   v1:= @@[|java:lang:annotation:RetentionPolicy.SOURCE|]   @type object;
#L0af4fa.   v0[v2]:= v1  @type object;
#L0af4fe.   v1:= @@[|java:lang:annotation:RetentionPolicy.CLASS|]   @type object;
#L0af502.   v0[v3]:= v1  @type object;
#L0af506.   v1:= @@[|java:lang:annotation:RetentionPolicy.RUNTIME|]   @type object;
#L0af50a.   v0[v4]:= v1  @type object;
#L0af50e.   @@[|java:lang:annotation:RetentionPolicy.$VALUES|] := v0  @type object;
#L0af512.   return @void ;

   }
    procedure [|void|] [|java:lang:annotation:RetentionPolicy.<init>|] ([|java:lang:annotation:RetentionPolicy|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:lang:annotation:RetentionPolicy|] @signature [|Ljava/lang/annotation/RetentionPolicy;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0af524.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0af52a.   return @void ;

   }
    procedure [|java:lang:annotation:RetentionPolicy|] [|java:lang:annotation:RetentionPolicy.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:lang:annotation:RetentionPolicy|] @signature [|Ljava/lang/annotation/RetentionPolicy;.valueOf:(Ljava/lang/String;)Ljava/lang/annotation/RetentionPolicy;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0af53c.   v0:= new [|java:lang:annotation:RetentionPolicy|];
#L0af540.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0af546.   v0:= temp  @type object;
#L0af548.   v0:= ([|java:lang:annotation:RetentionPolicy|])v0;
#L0af54c.   return v0  @type object;

   }
    procedure [|java:lang:annotation:RetentionPolicy|][] [|java:lang:annotation:RetentionPolicy.values|] () @owner [|java:lang:annotation:RetentionPolicy|] @signature [|Ljava/lang/annotation/RetentionPolicy;.values:()[Ljava/lang/annotation/RetentionPolicy;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0af560.   v0:= @@[|java:lang:annotation:RetentionPolicy.$VALUES|]   @type object;
#L0af564.   call temp:=  [|java:lang:annotation:RetentionPolicy[].clone|](v0) @signature [|[Ljava/lang/annotation/RetentionPolicy;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:annotation:RetentionPolicy[]|] @type virtual;
#L0af56a.   v0:= temp  @type object;
#L0af56c.   v0:= ([|java:lang:annotation:RetentionPolicy|][])v0;
#L0af570.   return v0  @type object;

   }
record [|java:lang:annotation:Target|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT_ANNOTATION extends  [|java:lang:annotation:Annotation|] {
   }
    procedure [|java:lang:annotation:ElementType|][] [|java:lang:annotation:Target.value|] () @owner [|java:lang:annotation:Target|] @signature [|Ljava/lang/annotation/Target;.value:()[Ljava/lang/annotation/ElementType;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:lang:ref:FinalizerReference$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|java:lang:ref:FinalizerReference$Sentinel|]  @type class @AccessFlag   {
      [|boolean|] [|java:lang:ref:FinalizerReference$Sentinel.finalized|]    @AccessFlag ;
   }
    procedure [|void|] [|java:lang:ref:FinalizerReference$Sentinel.<init>|] ([|java:lang:ref:FinalizerReference$Sentinel|] v1 @type (this)) @owner [|java:lang:ref:FinalizerReference$Sentinel|] @signature [|Ljava/lang/ref/FinalizerReference$Sentinel;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0af584.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0af58a.   v0:= 0  @length 4;
#L0af58c.   v1.[|java:lang:ref:FinalizerReference$Sentinel.finalized|]  := v0 @boolean;
#L0af590.   return @void ;

   }
    procedure [|void|] [|java:lang:ref:FinalizerReference$Sentinel.<init>|] ([|java:lang:ref:FinalizerReference$Sentinel|] v0 @type (this), [|java:lang:ref:FinalizerReference$1|] v1 @type (object)) @owner [|java:lang:ref:FinalizerReference$Sentinel|] @signature [|Ljava/lang/ref/FinalizerReference$Sentinel;.<init>:(Ljava/lang/ref/FinalizerReference$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L0af5a4.   call temp:=  [|java:lang:ref:FinalizerReference$Sentinel.<init>|](v0) @signature [|Ljava/lang/ref/FinalizerReference$Sentinel;.<init>:()V|] @classDescriptor [|java:lang:ref:FinalizerReference$Sentinel|] @type direct;
#L0af5aa.   return @void ;

   }
    procedure [|void|] [|java:lang:ref:FinalizerReference$Sentinel.awaitFinalization|] ([|java:lang:ref:FinalizerReference$Sentinel|] v1 @type (this)) @owner [|java:lang:ref:FinalizerReference$Sentinel|] @signature [|Ljava/lang/ref/FinalizerReference$Sentinel;.awaitFinalization:()V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0af5bc.   (@monitorenter v1)
#L0af5be.   v0:= v1.[|java:lang:ref:FinalizerReference$Sentinel.finalized|]   @boolean;
#L0af5c2.   if v0 != 0 then goto L0af5d4;
#L0af5c6.   call temp:=  [|java:lang:Object.wait|](v1) @signature [|Ljava/lang/Object;.wait:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0af5cc.   goto L0af5be;
#L0af5ce.   v0:= Exception  @type object;
#L0af5d0.   (@monitorexit v1)
#L0af5d2.   throw v0;
#L0af5d4.   (@monitorexit v1)
#L0af5d6.   return @void ;
  catch  [|any|] @[L0af5be..L0af5cc] goto L0af5ce;

   }
    procedure [|void|] [|java:lang:ref:FinalizerReference$Sentinel.finalize|] ([|java:lang:ref:FinalizerReference$Sentinel|] v1 @type (this)) @owner [|java:lang:ref:FinalizerReference$Sentinel|] @signature [|Ljava/lang/ref/FinalizerReference$Sentinel;.finalize:()V|] @Access PROTECTED_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0af5f4.   (@monitorenter v1)
#L0af5f6.   v0:= v1.[|java:lang:ref:FinalizerReference$Sentinel.finalized|]   @boolean;
#L0af5fa.   if v0 == 0 then goto L0af610;
#L0af5fe.   v0:= new [|java:lang:AssertionError|];
#L0af602.   call temp:=  [|java:lang:AssertionError.<init>|](v0) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0af608.   throw v0;
#L0af60a.   v0:= Exception  @type object;
#L0af60c.   (@monitorexit v1)
#L0af60e.   throw v0;
#L0af610.   v0:= 1  @length 4;
#L0af612.   v1.[|java:lang:ref:FinalizerReference$Sentinel.finalized|]  := v0 @boolean;
#L0af616.   call temp:=  [|java:lang:Object.notifyAll|](v1) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0af61c.   (@monitorexit v1)
#L0af61e.   return @void ;
  catch  [|any|] @[L0af5f6..L0af60a] goto L0af60a;
  catch  [|any|] @[L0af612..L0af61c] goto L0af60a;

   }
record [|java:lang:ref:FinalizerReference|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:lang:ref:Reference|] {
      [|java:lang:ref:FinalizerReference|] [|java:lang:ref:FinalizerReference.next|]    @AccessFlag PRIVATE;
      [|java:lang:ref:FinalizerReference|] [|java:lang:ref:FinalizerReference.prev|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:lang:ref:FinalizerReference.zombie|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:Object|] @@[|java:lang:ref:FinalizerReference.LIST_LOCK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:ref:FinalizerReference|] @@[|java:lang:ref:FinalizerReference.head|]    @AccessFlag PRIVATE_STATIC;
      global [|java:lang:ref:ReferenceQueue|] @@[|java:lang:ref:FinalizerReference.queue|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:lang:ref:FinalizerReference.<clinit>|] () @owner [|java:lang:ref:FinalizerReference|] @signature [|Ljava/lang/ref/FinalizerReference;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0af644.   v0:= new [|java:lang:ref:ReferenceQueue|];
#L0af648.   call temp:=  [|java:lang:ref:ReferenceQueue.<init>|](v0) @signature [|Ljava/lang/ref/ReferenceQueue;.<init>:()V|] @classDescriptor [|java:lang:ref:ReferenceQueue|] @type direct;
#L0af64e.   @@[|java:lang:ref:FinalizerReference.queue|] := v0  @type object;
#L0af652.   v0:= new [|java:lang:Object|];
#L0af656.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0af65c.   @@[|java:lang:ref:FinalizerReference.LIST_LOCK|] := v0  @type object;
#L0af660.   v0:= 0  @length 4;
#L0af662.   @@[|java:lang:ref:FinalizerReference.head|] := v0  @type object;
#L0af666.   return @void ;

   }
    procedure [|void|] [|java:lang:ref:FinalizerReference.<init>|] ([|java:lang:ref:FinalizerReference|] v0 @type (this), [|java:lang:Object|] v1 @type (object), [|java:lang:ref:ReferenceQueue|] v2 @type (object)) @owner [|java:lang:ref:FinalizerReference|] @signature [|Ljava/lang/ref/FinalizerReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af678.   call temp:=  [|java:lang:ref:Reference.<init>|](v0, v1, v2) @signature [|Ljava/lang/ref/Reference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|java:lang:ref:Reference|] @type direct;
#L0af67e.   return @void ;

   }
    procedure [|void|] [|java:lang:ref:FinalizerReference.add|] ([|java:lang:Object|] v3 @type (object)) @owner [|java:lang:ref:FinalizerReference|] @signature [|Ljava/lang/ref/FinalizerReference;.add:(Ljava/lang/Object;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0af690.   v0:= new [|java:lang:ref:FinalizerReference|];
#L0af694.   v1:= @@[|java:lang:ref:FinalizerReference.queue|]   @type object;
#L0af698.   call temp:=  [|java:lang:ref:FinalizerReference.<init>|](v0, v3, v1) @signature [|Ljava/lang/ref/FinalizerReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|java:lang:ref:FinalizerReference|] @type direct;
#L0af69e.   v2:= @@[|java:lang:ref:FinalizerReference.LIST_LOCK|]   @type object;
#L0af6a2.   (@monitorenter v2)
#L0af6a4.   v1:= 0  @length 4;
#L0af6a6.   v0.[|java:lang:ref:FinalizerReference.prev|]  := v1 @type object;
#L0af6aa.   v1:= @@[|java:lang:ref:FinalizerReference.head|]   @type object;
#L0af6ae.   v0.[|java:lang:ref:FinalizerReference.next|]  := v1 @type object;
#L0af6b2.   v1:= @@[|java:lang:ref:FinalizerReference.head|]   @type object;
#L0af6b6.   if v1 == 0 then goto L0af6c2;
#L0af6ba.   v1:= @@[|java:lang:ref:FinalizerReference.head|]   @type object;
#L0af6be.   v1.[|java:lang:ref:FinalizerReference.prev|]  := v0 @type object;
#L0af6c2.   @@[|java:lang:ref:FinalizerReference.head|] := v0  @type object;
#L0af6c6.   (@monitorexit v2)
#L0af6c8.   return @void ;
#L0af6ca.   v1:= Exception  @type object;
#L0af6cc.   (@monitorexit v2)
#L0af6ce.   throw v1;
  catch  [|any|] @[L0af6a6..L0af6ce] goto L0af6ca;

   }
    procedure [|void|] [|java:lang:ref:FinalizerReference.enqueueSentinelReference|] ([|java:lang:ref:FinalizerReference$Sentinel|] v4 @type (object)) @owner [|java:lang:ref:FinalizerReference|] @signature [|Ljava/lang/ref/FinalizerReference;.enqueueSentinelReference:(Ljava/lang/ref/FinalizerReference$Sentinel;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0af6ec.   v3:= @@[|java:lang:ref:FinalizerReference.LIST_LOCK|]   @type object;
#L0af6f0.   (@monitorenter v3)
#L0af6f2.   v0:= @@[|java:lang:ref:FinalizerReference.head|]   @type object;
#L0af6f6.   if v0 == 0 then goto L0af71e;
#L0af6fa.   v2:= v0.[|java:lang:ref:FinalizerReference.referent|]   @type object;
#L0af6fe.   if v2 != v4 then goto L0af718;
#L0af702.   v1:= v0  @type object;
#L0af704.   v2:= 0  @length 4;
#L0af706.   v1.[|java:lang:ref:FinalizerReference.referent|]  := v2 @type object;
#L0af70a.   v1.[|java:lang:ref:FinalizerReference.zombie|]  := v4 @type object;
#L0af70e.   call temp:=  [|java:lang:ref:FinalizerReference.enqueueInternal|](v1) @signature [|Ljava/lang/ref/FinalizerReference;.enqueueInternal:()Z|] @classDescriptor [|java:lang:ref:FinalizerReference|] @type virtual;
#L0af714.   (@monitorexit v3)
#L0af716.   return @void ;
#L0af718.   v0:= v0.[|java:lang:ref:FinalizerReference.next|]   @type object;
#L0af71c.   goto L0af6f6;
#L0af71e.   (@monitorexit v3)
#L0af720.   v2:= new [|java:lang:AssertionError|];
#L0af724.   v3:= "newly-created live Sentinel not on list!" @type (object, string);
#L0af728.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v3) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0af72e.   throw v2;
#L0af730.   v2:= Exception  @type object;
#L0af732.   (@monitorexit v3)
#L0af734.   throw v2;
  catch  [|any|] @[L0af6f2..L0af720] goto L0af730;
  catch  [|any|] @[L0af732..L0af734] goto L0af730;

   }
    procedure [|void|] [|java:lang:ref:FinalizerReference.finalizeAllEnqueued|] () @owner [|java:lang:ref:FinalizerReference|] @signature [|Ljava/lang/ref/FinalizerReference;.finalizeAllEnqueued:()V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0af75c.   v0:= new [|java:lang:ref:FinalizerReference$Sentinel|];
#L0af760.   v1:= 0  @length 4;
#L0af762.   call temp:=  [|java:lang:ref:FinalizerReference$Sentinel.<init>|](v0, v1) @signature [|Ljava/lang/ref/FinalizerReference$Sentinel;.<init>:(Ljava/lang/ref/FinalizerReference$1;)V|] @classDescriptor [|java:lang:ref:FinalizerReference$Sentinel|] @type direct;
#L0af768.   call temp:=  [|java:lang:ref:FinalizerReference.enqueueSentinelReference|](v0) @signature [|Ljava/lang/ref/FinalizerReference;.enqueueSentinelReference:(Ljava/lang/ref/FinalizerReference$Sentinel;)V|] @classDescriptor [|java:lang:ref:FinalizerReference|] @type static;
#L0af76e.   call temp:=  [|java:lang:ref:FinalizerReference$Sentinel.awaitFinalization|](v0) @signature [|Ljava/lang/ref/FinalizerReference$Sentinel;.awaitFinalization:()V|] @classDescriptor [|java:lang:ref:FinalizerReference$Sentinel|] @type virtual;
#L0af774.   return @void ;

   }
    procedure [|void|] [|java:lang:ref:FinalizerReference.remove|] ([|java:lang:ref:FinalizerReference|] v4 @type (object)) @owner [|java:lang:ref:FinalizerReference|] @signature [|Ljava/lang/ref/FinalizerReference;.remove:(Ljava/lang/ref/FinalizerReference;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0af788.   v3:= @@[|java:lang:ref:FinalizerReference.LIST_LOCK|]   @type object;
#L0af78c.   (@monitorenter v3)
#L0af78e.   v0:= v4.[|java:lang:ref:FinalizerReference.next|]   @type object;
#L0af792.   v1:= v4.[|java:lang:ref:FinalizerReference.prev|]   @type object;
#L0af796.   v2:= 0  @length 4;
#L0af798.   v4.[|java:lang:ref:FinalizerReference.next|]  := v2 @type object;
#L0af79c.   v2:= 0  @length 4;
#L0af79e.   v4.[|java:lang:ref:FinalizerReference.prev|]  := v2 @type object;
#L0af7a2.   if v1 == 0 then goto L0af7b6;
#L0af7a6.   v1.[|java:lang:ref:FinalizerReference.next|]  := v0 @type object;
#L0af7aa.   if v0 == 0 then goto L0af7b2;
#L0af7ae.   v0.[|java:lang:ref:FinalizerReference.prev|]  := v1 @type object;
#L0af7b2.   (@monitorexit v3)
#L0af7b4.   return @void ;
#L0af7b6.   @@[|java:lang:ref:FinalizerReference.head|] := v0  @type object;
#L0af7ba.   goto L0af7aa;
#L0af7bc.   v2:= Exception  @type object;
#L0af7be.   (@monitorexit v3)
#L0af7c0.   throw v2;
  catch  [|any|] @[L0af78e..L0af7c0] goto L0af7bc;

   }
    procedure [|void|] [|java:lang:ref:FinalizerReference.clear|] ([|java:lang:ref:FinalizerReference|] v1 @type (this)) @owner [|java:lang:ref:FinalizerReference|] @signature [|Ljava/lang/ref/FinalizerReference;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af7e0.   v0:= 0  @length 4;
#L0af7e2.   v1.[|java:lang:ref:FinalizerReference.zombie|]  := v0 @type object;
#L0af7e6.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:lang:ref:FinalizerReference.get|] ([|java:lang:ref:FinalizerReference|] v1 @type (this)) @owner [|java:lang:ref:FinalizerReference|] @signature [|Ljava/lang/ref/FinalizerReference;.get:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af7f8.   v0:= v1.[|java:lang:ref:FinalizerReference.zombie|]   @type object;
#L0af7fc.   return v0  @type object;

   }
record [|java:lang:ref:PhantomReference|]  @type class @AccessFlag PUBLIC  extends [|java:lang:ref:Reference|] {
   }
    procedure [|void|] [|java:lang:ref:PhantomReference.<init>|] ([|java:lang:ref:PhantomReference|] v0 @type (this), [|java:lang:Object|] v1 @type (object), [|java:lang:ref:ReferenceQueue|] v2 @type (object)) @owner [|java:lang:ref:PhantomReference|] @signature [|Ljava/lang/ref/PhantomReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af810.   call temp:=  [|java:lang:ref:Reference.<init>|](v0, v1, v2) @signature [|Ljava/lang/ref/Reference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|java:lang:ref:Reference|] @type direct;
#L0af816.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:lang:ref:PhantomReference.get|] ([|java:lang:ref:PhantomReference|] v1 @type (this)) @owner [|java:lang:ref:PhantomReference|] @signature [|Ljava/lang/ref/PhantomReference;.get:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0af828.   v0:= 0  @length 4;
#L0af82a.   return v0  @type object;

   }
record [|java:lang:ref:SoftReference|]  @type class @AccessFlag PUBLIC  extends [|java:lang:ref:Reference|] {
   }
    procedure [|void|] [|java:lang:ref:SoftReference.<init>|] ([|java:lang:ref:SoftReference|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:lang:ref:SoftReference|] @signature [|Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0af83c.   v0:= 0  @length 4;
#L0af83e.   call temp:=  [|java:lang:ref:Reference.<init>|](v1, v2, v0) @signature [|Ljava/lang/ref/Reference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|java:lang:ref:Reference|] @type direct;
#L0af844.   return @void ;

   }
    procedure [|void|] [|java:lang:ref:SoftReference.<init>|] ([|java:lang:ref:SoftReference|] v0 @type (this), [|java:lang:Object|] v1 @type (object), [|java:lang:ref:ReferenceQueue|] v2 @type (object)) @owner [|java:lang:ref:SoftReference|] @signature [|Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0af858.   call temp:=  [|java:lang:ref:Reference.<init>|](v0, v1, v2) @signature [|Ljava/lang/ref/Reference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|java:lang:ref:Reference|] @type direct;
#L0af85e.   return @void ;

   }
record [|java:lang:reflect:AccessibleObject|]  @type class @AccessFlag PUBLIC extends  [|java:lang:reflect:AnnotatedElement|] {
      [|boolean|] [|java:lang:reflect:AccessibleObject.flag|]    @AccessFlag ;
   }
      global [|java:util:Hashtable|] @@[|java:lang:reflect:AccessibleObject.trans|]    @AccessFlag STATIC;
    procedure [|void|] [|java:lang:reflect:AccessibleObject.<clinit>|] () @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0af870.   v0:= new [|java:util:Hashtable|];
#L0af874.   v1:= 9  @length 16;
#L0af878.   call temp:=  [|java:util:Hashtable.<init>|](v0, v1) @signature [|Ljava/util/Hashtable;.<init>:(I)V|] @classDescriptor [|java:util:Hashtable|] @type direct;
#L0af87e.   @@[|java:lang:reflect:AccessibleObject.trans|] := v0  @type object;
#L0af882.   v0:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0af886.   v1:= "byte" @type (object, string);
#L0af88a.   v2:= "B" @type (object, string);
#L0af88e.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0af894.   v0:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0af898.   v1:= "char" @type (object, string);
#L0af89c.   v2:= "C" @type (object, string);
#L0af8a0.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0af8a6.   v0:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0af8aa.   v1:= "short" @type (object, string);
#L0af8ae.   v2:= "S" @type (object, string);
#L0af8b2.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0af8b8.   v0:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0af8bc.   v1:= "int" @type (object, string);
#L0af8c0.   v2:= "I" @type (object, string);
#L0af8c4.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0af8ca.   v0:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0af8ce.   v1:= "long" @type (object, string);
#L0af8d2.   v2:= "J" @type (object, string);
#L0af8d6.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0af8dc.   v0:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0af8e0.   v1:= "float" @type (object, string);
#L0af8e4.   v2:= "F" @type (object, string);
#L0af8e8.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0af8ee.   v0:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0af8f2.   v1:= "double" @type (object, string);
#L0af8f6.   v2:= "D" @type (object, string);
#L0af8fa.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0af900.   v0:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0af904.   v1:= "void" @type (object, string);
#L0af908.   v2:= "V" @type (object, string);
#L0af90c.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0af912.   v0:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0af916.   v1:= "boolean" @type (object, string);
#L0af91a.   v2:= "Z" @type (object, string);
#L0af91e.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0af924.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:AccessibleObject.<init>|] ([|java:lang:reflect:AccessibleObject|] v1 @type (this)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0af938.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0af93e.   v0:= 0  @length 4;
#L0af940.   v1.[|java:lang:reflect:AccessibleObject.flag|]  := v0 @boolean;
#L0af944.   return @void ;

   }
    procedure [|java:lang:Object|][] [|java:lang:reflect:AccessibleObject.getClassSignatureAnnotation|] ([|java:lang:Class|] v0 @type (object)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.getClassSignatureAnnotation:(Ljava/lang/Class;)[Ljava/lang/Object;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:lang:reflect:AccessibleObject.getClassSignatureAttribute|] ([|java:lang:Class|] v2 @type (object)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.getClassSignatureAttribute:(Ljava/lang/Class;)Ljava/lang/String;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0af958.   call temp:=  [|java:lang:reflect:AccessibleObject.getClassSignatureAnnotation|](v2) @signature [|Ljava/lang/reflect/AccessibleObject;.getClassSignatureAnnotation:(Ljava/lang/Class;)[Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type static;
#L0af95e.   v0:= temp  @type object;
#L0af960.   if v0 != 0 then goto L0af968;
#L0af964.   v1:= 0  @length 4;
#L0af966.   return v1  @type object;
#L0af968.   call temp:=  [|org:apache:harmony:kernel:vm:StringUtils.combineStrings|](v0) @signature [|Lorg/apache/harmony/kernel/vm/StringUtils;.combineStrings:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:kernel:vm:StringUtils|] @type static;
#L0af96e.   v1:= temp  @type object;
#L0af970.   goto L0af966;

   }
    procedure [|void|] [|java:lang:reflect:AccessibleObject.setAccessible|] ([|java:lang:reflect:AccessibleObject|][] v6 @type (object), [|boolean|] v7) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.setAccessible:([Ljava/lang/reflect/AccessibleObject;Z)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0af984.   v5:= new [|java:lang:reflect:AccessibleObject|];
#L0af988.   (@monitorenter v5)
#L0af98a.   v0:= v6  @type object;
#L0af98c.   v2:= v0.length;
#L0af98e.   v1:= 0  @length 4;
#L0af990.   if v1 >= v2 then goto L0af9a2;
#L0af994.   v3:= v0[v1]  @type object;
#L0af998.   v3.[|java:lang:reflect:AccessibleObject.flag|]  := v7 @boolean;
#L0af99c.   v1:= v1 + 1;
#L0af9a0.   goto L0af990;
#L0af9a2.   (@monitorexit v5)
#L0af9a4.   return @void ;
#L0af9a6.   v4:= Exception  @type object;
#L0af9a8.   (@monitorexit v5)
#L0af9aa.   throw v4;
  catch  [|any|] @[L0af98c..L0af9aa] goto L0af9a6;

   }
    procedure [|void|] [|java:lang:reflect:AccessibleObject.appendArrayGenericType|] ([|java:lang:reflect:AccessibleObject|] v2 @type (this), [|java:lang:StringBuilder|] v3 @type (object), [|java:lang:reflect:Type|][] v4 @type (object)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.appendArrayGenericType:(Ljava/lang/StringBuilder;[Ljava/lang/reflect/Type;)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0af9c8.   v1:= v4.length;
#L0af9ca.   if v1 <= 0 then goto L0af9fc;
#L0af9ce.   v1:= 0  @length 4;
#L0af9d0.   v1:= v4[v1]  @type object;
#L0af9d4.   call temp:=  [|java:lang:reflect:AccessibleObject.appendGenericType|](v2, v3, v1) @signature [|Ljava/lang/reflect/AccessibleObject;.appendGenericType:(Ljava/lang/StringBuilder;Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type virtual;
#L0af9da.   v0:= 1  @length 4;
#L0af9dc.   v1:= v4.length;
#L0af9de.   if v0 >= v1 then goto L0af9fc;
#L0af9e2.   v1:= 44  @length 16;
#L0af9e6.   call temp:=  [|java:lang:StringBuilder.append|](v3, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0af9ec.   v1:= v4[v0]  @type object;
#L0af9f0.   call temp:=  [|java:lang:reflect:AccessibleObject.appendGenericType|](v2, v3, v1) @signature [|Ljava/lang/reflect/AccessibleObject;.appendGenericType:(Ljava/lang/StringBuilder;Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type virtual;
#L0af9f6.   v0:= v0 + 1;
#L0af9fa.   goto L0af9dc;
#L0af9fc.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:AccessibleObject.appendGenericType|] ([|java:lang:reflect:AccessibleObject|] v9 @type (this), [|java:lang:StringBuilder|] v10 @type (object), [|java:lang:reflect:Type|] v11 @type (object)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.appendGenericType:(Ljava/lang/StringBuilder;Ljava/lang/reflect/Type;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0afa10.   v8:= 1  @length 4;
#L0afa12.   v6:= instanceof @varname v11 @type [|java:lang:reflect:TypeVariable|];
#L0afa16.   if v6 == 0 then goto L0afa2e;
#L0afa1a.   v11:= ([|java:lang:reflect:TypeVariable|])v11;
#L0afa1e.   call temp:=  [|java:lang:reflect:TypeVariable.getName|](v11) @signature [|Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:TypeVariable|] @type interface;
#L0afa24.   v6:= temp  @type object;
#L0afa26.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afa2c.   return @void ;
#L0afa2e.   v6:= instanceof @varname v11 @type [|java:lang:reflect:ParameterizedType|];
#L0afa32.   if v6 == 0 then goto L0afa46;
#L0afa36.   call temp:=  [|java:lang:Object.toString|](v11) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0afa3c.   v6:= temp  @type object;
#L0afa3e.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afa44.   goto L0afa2c;
#L0afa46.   v6:= instanceof @varname v11 @type [|java:lang:reflect:GenericArrayType|];
#L0afa4a.   if v6 == 0 then goto L0afa6c;
#L0afa4e.   v11:= ([|java:lang:reflect:GenericArrayType|])v11;
#L0afa52.   call temp:=  [|java:lang:reflect:GenericArrayType.getGenericComponentType|](v11) @signature [|Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;|] @classDescriptor [|java:lang:reflect:GenericArrayType|] @type interface;
#L0afa58.   v5:= temp  @type object;
#L0afa5a.   call temp:=  [|java:lang:reflect:AccessibleObject.appendGenericType|](v9, v10, v5) @signature [|Ljava/lang/reflect/AccessibleObject;.appendGenericType:(Ljava/lang/StringBuilder;Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type virtual;
#L0afa60.   v6:= "[]" @type (object, string);
#L0afa64.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afa6a.   goto L0afa2c;
#L0afa6c.   v6:= instanceof @varname v11 @type [|java:lang:Class|];
#L0afa70.   if v6 == 0 then goto L0afa2c;
#L0afa74.   v1:= v11  @type object;
#L0afa76.   v1:= ([|java:lang:Class|])v1;
#L0afa7a.   call temp:=  [|java:lang:Class.isArray|](v1) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afa80.   v6:= temp;
#L0afa82.   if v6 == 0 then goto L0afbaa;
#L0afa86.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afa8c.   v6:= temp  @type object;
#L0afa8e.   v7:= "\\[" @type (object, string);
#L0afa92.   call temp:=  [|java:lang:String.split|](v6, v7) @signature [|Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afa98.   v0:= temp  @type object;
#L0afa9a.   v6:= v0.length;
#L0afa9c.   v4:= v6 + -1;
#L0afaa0.   v6:= v0[v4]  @type object;
#L0afaa4.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afaaa.   v6:= temp;
#L0afaac.   if v6 <= v8 then goto L0afae8;
#L0afab0.   v6:= v0[v4]  @type object;
#L0afab4.   v7:= v0[v4]  @type object;
#L0afab8.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afabe.   v7:= temp;
#L0afac0.   v7:= v7 + -1;
#L0afac4.   call temp:=  [|java:lang:String.substring|](v6, v8, v7) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afaca.   v6:= temp  @type object;
#L0afacc.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afad2.   v3:= 0  @length 4;
#L0afad4.   if v3 >= v4 then goto L0afa2c;
#L0afad8.   v6:= "[]" @type (object, string);
#L0afadc.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afae2.   v3:= v3 + 1;
#L0afae6.   goto L0afad4;
#L0afae8.   v6:= v0[v4]  @type object;
#L0afaec.   v7:= 0  @length 4;
#L0afaee.   call temp:=  [|java:lang:String.charAt|](v6, v7) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0afaf4.   v2:= temp;
#L0afaf6.   v6:= 73  @length 16;
#L0afafa.   if v2 != v6 then goto L0afb0a;
#L0afafe.   v6:= "int" @type (object, string);
#L0afb02.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb08.   goto L0afad2;
#L0afb0a.   v6:= 66  @length 16;
#L0afb0e.   if v2 != v6 then goto L0afb1e;
#L0afb12.   v6:= "byte" @type (object, string);
#L0afb16.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb1c.   goto L0afad2;
#L0afb1e.   v6:= 74  @length 16;
#L0afb22.   if v2 != v6 then goto L0afb32;
#L0afb26.   v6:= "long" @type (object, string);
#L0afb2a.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb30.   goto L0afad2;
#L0afb32.   v6:= 70  @length 16;
#L0afb36.   if v2 != v6 then goto L0afb46;
#L0afb3a.   v6:= "float" @type (object, string);
#L0afb3e.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb44.   goto L0afad2;
#L0afb46.   v6:= 68  @length 16;
#L0afb4a.   if v2 != v6 then goto L0afb5a;
#L0afb4e.   v6:= "double" @type (object, string);
#L0afb52.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb58.   goto L0afad2;
#L0afb5a.   v6:= 83  @length 16;
#L0afb5e.   if v2 != v6 then goto L0afb6e;
#L0afb62.   v6:= "short" @type (object, string);
#L0afb66.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb6c.   goto L0afad2;
#L0afb6e.   v6:= 67  @length 16;
#L0afb72.   if v2 != v6 then goto L0afb82;
#L0afb76.   v6:= "char" @type (object, string);
#L0afb7a.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb80.   goto L0afad2;
#L0afb82.   v6:= 90  @length 16;
#L0afb86.   if v2 != v6 then goto L0afb96;
#L0afb8a.   v6:= "boolean" @type (object, string);
#L0afb8e.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afb94.   goto L0afad2;
#L0afb96.   v6:= 86  @length 16;
#L0afb9a.   if v2 != v6 then goto L0afad2;
#L0afb9e.   v6:= "void" @type (object, string);
#L0afba2.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afba8.   goto L0afad2;
#L0afbaa.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afbb0.   v6:= temp  @type object;
#L0afbb2.   call temp:=  [|java:lang:StringBuilder.append|](v10, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afbb8.   goto L0afa2c;

   }
    procedure [|void|] [|java:lang:reflect:AccessibleObject.appendTypeName|] ([|java:lang:reflect:AccessibleObject|] v3 @type (this), [|java:lang:StringBuilder|] v4 @type (object), [|java:lang:Class|] v5 @type (object)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.appendTypeName:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0afbcc.   v1:= 0  @length 4;
#L0afbce.   call temp:=  [|java:lang:Class.isArray|](v5) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afbd4.   v2:= temp;
#L0afbd6.   if v2 == 0 then goto L0afbe8;
#L0afbda.   call temp:=  [|java:lang:Class.getComponentType|](v5) @signature [|Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afbe0.   v5:= temp  @type object;
#L0afbe2.   v1:= v1 + 1;
#L0afbe6.   goto L0afbce;
#L0afbe8.   call temp:=  [|java:lang:Class.getName|](v5) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afbee.   v2:= temp  @type object;
#L0afbf0.   call temp:=  [|java:lang:StringBuilder.append|](v4, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afbf6.   v0:= 0  @length 4;
#L0afbf8.   if v0 >= v1 then goto L0afc0c;
#L0afbfc.   v2:= "[]" @type (object, string);
#L0afc00.   call temp:=  [|java:lang:StringBuilder.append|](v4, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afc06.   v0:= v0 + 1;
#L0afc0a.   goto L0afbf8;
#L0afc0c.   return @void ;

   }
    procedure [|java:lang:annotation:Annotation|] [|java:lang:reflect:AccessibleObject.getAnnotation|] ([|java:lang:reflect:AccessibleObject|] v1 @type (this), [|java:lang:Class|] v2 @type (object)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0afc20.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0afc24.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0afc2a.   throw v0;

   }
    procedure [|java:lang:annotation:Annotation|][] [|java:lang:reflect:AccessibleObject.getAnnotations|] ([|java:lang:reflect:AccessibleObject|] v1 @type (this)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.getAnnotations:()[Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0afc3c.   call temp:=  [|java:lang:reflect:AccessibleObject.getDeclaredAnnotations|](v1) @signature [|Ljava/lang/reflect/AccessibleObject;.getDeclaredAnnotations:()[Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type virtual;
#L0afc42.   v0:= temp  @type object;
#L0afc44.   return v0  @type object;

   }
    procedure [|java:lang:annotation:Annotation|][] [|java:lang:reflect:AccessibleObject.getDeclaredAnnotations|] ([|java:lang:reflect:AccessibleObject|] v1 @type (this)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.getDeclaredAnnotations:()[Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0afc58.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0afc5c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0afc62.   throw v0;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:AccessibleObject.getSignature|] ([|java:lang:reflect:AccessibleObject|] v4 @type (this), [|java:lang:Class|] v5 @type (object)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.getSignature:(Ljava/lang/Class;)Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0afc74.   v1:= "" @type (object, string);
#L0afc78.   call temp:=  [|java:lang:Class.getName|](v5) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afc7e.   v0:= temp  @type object;
#L0afc80.   v2:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0afc84.   call temp:=  [|java:util:Hashtable.containsKey|](v2, v0) @signature [|Ljava/util/Hashtable;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0afc8a.   v2:= temp;
#L0afc8c.   if v2 == 0 then goto L0afca2;
#L0afc90.   v2:= @@[|java:lang:reflect:AccessibleObject.trans|]   @type object;
#L0afc94.   call temp:=  [|java:util:Hashtable.get|](v2, v0) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0afc9a.   v1:= temp  @type object;
#L0afc9c.   v1:= ([|java:lang:String|])v1;
#L0afca0.   return v1  @type object;
#L0afca2.   call temp:=  [|java:lang:Class.isArray|](v5) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afca8.   v2:= temp;
#L0afcaa.   if v2 == 0 then goto L0afce6;
#L0afcae.   v2:= new [|java:lang:StringBuilder|];
#L0afcb2.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afcb8.   v3:= "[" @type (object, string);
#L0afcbc.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afcc2.   v2:= temp  @type object;
#L0afcc4.   call temp:=  [|java:lang:Class.getComponentType|](v5) @signature [|Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afcca.   v3:= temp  @type object;
#L0afccc.   call temp:=  [|java:lang:reflect:AccessibleObject.getSignature|](v4, v3) @signature [|Ljava/lang/reflect/AccessibleObject;.getSignature:(Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type virtual;
#L0afcd2.   v3:= temp  @type object;
#L0afcd4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afcda.   v2:= temp  @type object;
#L0afcdc.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afce2.   v1:= temp  @type object;
#L0afce4.   goto L0afca0;
#L0afce6.   v2:= new [|java:lang:StringBuilder|];
#L0afcea.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afcf0.   v3:= "L" @type (object, string);
#L0afcf4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afcfa.   v2:= temp  @type object;
#L0afcfc.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afd02.   v2:= temp  @type object;
#L0afd04.   v3:= ";" @type (object, string);
#L0afd08.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afd0e.   v2:= temp  @type object;
#L0afd10.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afd16.   v1:= temp  @type object;
#L0afd18.   goto L0afca0;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:AccessibleObject.getSignatureAttribute|] ([|java:lang:reflect:AccessibleObject|] v1 @type (this)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.getSignatureAttribute:()Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
      
#L0afd2c.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0afd30.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0afd36.   throw v0;

   }
    procedure [|boolean|] [|java:lang:reflect:AccessibleObject.isAccessible|] ([|java:lang:reflect:AccessibleObject|] v1 @type (this)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.isAccessible:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0afd48.   v0:= v1.[|java:lang:reflect:AccessibleObject.flag|]   @boolean;
#L0afd4c.   return v0;

   }
    procedure [|boolean|] [|java:lang:reflect:AccessibleObject.isAnnotationPresent|] ([|java:lang:reflect:AccessibleObject|] v1 @type (this), [|java:lang:Class|] v2 @type (object)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.isAnnotationPresent:(Ljava/lang/Class;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0afd60.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0afd64.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0afd6a.   throw v0;

   }
    procedure [|void|] [|java:lang:reflect:AccessibleObject.setAccessible|] ([|java:lang:reflect:AccessibleObject|] v0 @type (this), [|boolean|] v1) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.setAccessible:(Z)V|] @Access PUBLIC {
      local temp ;
      
#L0afd7c.   v0.[|java:lang:reflect:AccessibleObject.flag|]  := v1 @boolean;
#L0afd80.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:AccessibleObject.toString|] ([|java:lang:reflect:AccessibleObject|] v3 @type (this), [|java:lang:Class|][] v4 @type (object)) @owner [|java:lang:reflect:AccessibleObject|] @signature [|Ljava/lang/reflect/AccessibleObject;.toString:([Ljava/lang/Class;)Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0afd94.   v1:= new [|java:lang:StringBuilder|];
#L0afd98.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0afd9e.   v2:= v4.length;
#L0afda0.   if v2 == 0 then goto L0afdd2;
#L0afda4.   v2:= 0  @length 4;
#L0afda6.   v2:= v4[v2]  @type object;
#L0afdaa.   call temp:=  [|java:lang:reflect:AccessibleObject.appendTypeName|](v3, v1, v2) @signature [|Ljava/lang/reflect/AccessibleObject;.appendTypeName:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type virtual;
#L0afdb0.   v0:= 1  @length 4;
#L0afdb2.   v2:= v4.length;
#L0afdb4.   if v0 >= v2 then goto L0afdd2;
#L0afdb8.   v2:= 44  @length 16;
#L0afdbc.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afdc2.   v2:= v4[v0]  @type object;
#L0afdc6.   call temp:=  [|java:lang:reflect:AccessibleObject.appendTypeName|](v3, v1, v2) @signature [|Ljava/lang/reflect/AccessibleObject;.appendTypeName:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type virtual;
#L0afdcc.   v0:= v0 + 1;
#L0afdd0.   goto L0afdb2;
#L0afdd2.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0afdd8.   v2:= temp  @type object;
#L0afdda.   return v2  @type object;

   }
record [|java:lang:reflect:Array|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
    procedure [|void|] [|java:lang:reflect:Array.<init>|] ([|java:lang:reflect:Array|] v0 @type (this)) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0afdec.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0afdf2.   return @void ;

   }
    procedure [|java:lang:RuntimeException|] [|java:lang:reflect:Array.badArray|] ([|java:lang:Object|] v2 @type (object)) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L0afe04.   if v2 != 0 then goto L0afe18;
#L0afe08.   v0:= new [|java:lang:NullPointerException|];
#L0afe0c.   v1:= "array == null" @type (object, string);
#L0afe10.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0afe16.   throw v0;
#L0afe18.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0afe1e.   v0:= temp  @type object;
#L0afe20.   call temp:=  [|java:lang:Class.isArray|](v0) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0afe26.   v0:= temp;
#L0afe28.   if v0 != 0 then goto L0afe36;
#L0afe2c.   call temp:=  [|java:lang:reflect:Array.notAnArray|](v2) @signature [|Ljava/lang/reflect/Array;.notAnArray:(Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0afe32.   v0:= temp  @type object;
#L0afe34.   throw v0;
#L0afe36.   call temp:=  [|java:lang:reflect:Array.incompatibleType|](v2) @signature [|Ljava/lang/reflect/Array;.incompatibleType:(Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0afe3c.   v0:= temp  @type object;
#L0afe3e.   throw v0;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Array.createMultiArray|] ([|java:lang:Class|] v0 @type (object), [|int|][] v1) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.createMultiArray:(Ljava/lang/Class;[I)Ljava/lang/Object;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Array.createObjectArray|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.createObjectArray:(Ljava/lang/Class;I)Ljava/lang/Object;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Array.get|] ([|java:lang:Object|] v3 @type (object), [|int|] v4) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0afe50.   v0:= instanceof @varname v3 @type [|java:lang:Object[]|];
#L0afe54.   if v0 == 0 then goto L0afe66;
#L0afe58.   v3:= ([|java:lang:Object|][])v3;
#L0afe5c.   v3:= ([|java:lang:Object|][])v3;
#L0afe60.   v0:= v3[v4]  @type object;
#L0afe64.   return v0  @type object;
#L0afe66.   v0:= instanceof @varname v3 @type [|boolean[]|];
#L0afe6a.   if v0 == 0 then goto L0afe8a;
#L0afe6e.   v3:= ([|boolean|][])v3;
#L0afe72.   v3:= ([|boolean|][])v3;
#L0afe76.   v0:= v3[v4]  @boolean;
#L0afe7a.   if v0 == 0 then goto L0afe84;
#L0afe7e.   v0:= @@[|java:lang:Boolean.TRUE|]   @type object;
#L0afe82.   goto L0afe64;
#L0afe84.   v0:= @@[|java:lang:Boolean.FALSE|]   @type object;
#L0afe88.   goto L0afe64;
#L0afe8a.   v0:= instanceof @varname v3 @type [|byte[]|];
#L0afe8e.   if v0 == 0 then goto L0afea8;
#L0afe92.   v3:= ([|byte|][])v3;
#L0afe96.   v3:= ([|byte|][])v3;
#L0afe9a.   v0:= v3[v4]  @byte;
#L0afe9e.   call temp:=  [|java:lang:Byte.valueOf|](v0) @signature [|Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;|] @classDescriptor [|java:lang:Byte|] @type static;
#L0afea4.   v0:= temp  @type object;
#L0afea6.   goto L0afe64;
#L0afea8.   v0:= instanceof @varname v3 @type [|char[]|];
#L0afeac.   if v0 == 0 then goto L0afec6;
#L0afeb0.   v3:= ([|char|][])v3;
#L0afeb4.   v3:= ([|char|][])v3;
#L0afeb8.   v0:= v3[v4]  @char;
#L0afebc.   call temp:=  [|java:lang:Character.valueOf|](v0) @signature [|Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;|] @classDescriptor [|java:lang:Character|] @type static;
#L0afec2.   v0:= temp  @type object;
#L0afec4.   goto L0afe64;
#L0afec6.   v0:= instanceof @varname v3 @type [|short[]|];
#L0afeca.   if v0 == 0 then goto L0afee4;
#L0afece.   v3:= ([|short|][])v3;
#L0afed2.   v3:= ([|short|][])v3;
#L0afed6.   v0:= v3[v4]  @short;
#L0afeda.   call temp:=  [|java:lang:Short.valueOf|](v0) @signature [|Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;|] @classDescriptor [|java:lang:Short|] @type static;
#L0afee0.   v0:= temp  @type object;
#L0afee2.   goto L0afe64;
#L0afee4.   v0:= instanceof @varname v3 @type [|int[]|];
#L0afee8.   if v0 == 0 then goto L0aff02;
#L0afeec.   v3:= ([|int|][])v3;
#L0afef0.   v3:= ([|int|][])v3;
#L0afef4.   v0:= v3[v4];
#L0afef8.   call temp:=  [|java:lang:Integer.valueOf|](v0) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0afefe.   v0:= temp  @type object;
#L0aff00.   goto L0afe64;
#L0aff02.   v0:= instanceof @varname v3 @type [|long[]|];
#L0aff06.   if v0 == 0 then goto L0aff20;
#L0aff0a.   v3:= ([|long|][])v3;
#L0aff0e.   v3:= ([|long|][])v3;
#L0aff12.   v0:= v3[v4]  @wide;
#L0aff16.   call temp:=  [|java:lang:Long.valueOf|](v0, v1) @signature [|Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;|] @classDescriptor [|java:lang:Long|] @type static;
#L0aff1c.   v0:= temp  @type object;
#L0aff1e.   goto L0afe64;
#L0aff20.   v0:= instanceof @varname v3 @type [|float[]|];
#L0aff24.   if v0 == 0 then goto L0aff40;
#L0aff28.   v0:= new [|java:lang:Float|];
#L0aff2c.   v3:= ([|float|][])v3;
#L0aff30.   v3:= ([|float|][])v3;
#L0aff34.   v1:= v3[v4];
#L0aff38.   call temp:=  [|java:lang:Float.<init>|](v0, v1) @signature [|Ljava/lang/Float;.<init>:(F)V|] @classDescriptor [|java:lang:Float|] @type direct;
#L0aff3e.   goto L0afe64;
#L0aff40.   v0:= instanceof @varname v3 @type [|double[]|];
#L0aff44.   if v0 == 0 then goto L0aff60;
#L0aff48.   v0:= new [|java:lang:Double|];
#L0aff4c.   v3:= ([|double|][])v3;
#L0aff50.   v3:= ([|double|][])v3;
#L0aff54.   v1:= v3[v4]  @wide;
#L0aff58.   call temp:=  [|java:lang:Double.<init>|](v0, v1, v2) @signature [|Ljava/lang/Double;.<init>:(D)V|] @classDescriptor [|java:lang:Double|] @type direct;
#L0aff5e.   goto L0afe64;
#L0aff60.   if v3 != 0 then goto L0aff74;
#L0aff64.   v0:= new [|java:lang:NullPointerException|];
#L0aff68.   v1:= "array == null" @type (object, string);
#L0aff6c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0aff72.   throw v0;
#L0aff74.   call temp:=  [|java:lang:reflect:Array.notAnArray|](v3) @signature [|Ljava/lang/reflect/Array;.notAnArray:(Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0aff7a.   v0:= temp  @type object;
#L0aff7c.   throw v0;

   }
    procedure [|boolean|] [|java:lang:reflect:Array.getBoolean|] ([|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.getBoolean:(Ljava/lang/Object;I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0aff90.   v0:= instanceof @varname v1 @type [|boolean[]|];
#L0aff94.   if v0 == 0 then goto L0affa6;
#L0aff98.   v1:= ([|boolean|][])v1;
#L0aff9c.   v1:= ([|boolean|][])v1;
#L0affa0.   v0:= v1[v2]  @boolean;
#L0affa4.   return v0;
#L0affa6.   call temp:=  [|java:lang:reflect:Array.badArray|](v1) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0affac.   v0:= temp  @type object;
#L0affae.   throw v0;

   }
    procedure [|byte|] [|java:lang:reflect:Array.getByte|] ([|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.getByte:(Ljava/lang/Object;I)B|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0affc0.   v0:= instanceof @varname v1 @type [|byte[]|];
#L0affc4.   if v0 == 0 then goto L0affd6;
#L0affc8.   v1:= ([|byte|][])v1;
#L0affcc.   v1:= ([|byte|][])v1;
#L0affd0.   v0:= v1[v2]  @byte;
#L0affd4.   return v0;
#L0affd6.   call temp:=  [|java:lang:reflect:Array.badArray|](v1) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0affdc.   v0:= temp  @type object;
#L0affde.   throw v0;

   }
    procedure [|char|] [|java:lang:reflect:Array.getChar|] ([|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.getChar:(Ljava/lang/Object;I)C|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0afff0.   v0:= instanceof @varname v1 @type [|char[]|];
#L0afff4.   if v0 == 0 then goto L0b0006;
#L0afff8.   v1:= ([|char|][])v1;
#L0afffc.   v1:= ([|char|][])v1;
#L0b0000.   v0:= v1[v2]  @char;
#L0b0004.   return v0;
#L0b0006.   call temp:=  [|java:lang:reflect:Array.badArray|](v1) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b000c.   v0:= temp  @type object;
#L0b000e.   throw v0;

   }
    procedure [|double|] [|java:lang:reflect:Array.getDouble|] ([|java:lang:Object|] v2 @type (object), [|int|] v3) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.getDouble:(Ljava/lang/Object;I)D|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b0020.   v0:= instanceof @varname v2 @type [|double[]|];
#L0b0024.   if v0 == 0 then goto L0b0036;
#L0b0028.   v2:= ([|double|][])v2;
#L0b002c.   v2:= ([|double|][])v2;
#L0b0030.   v0:= v2[v3]  @wide;
#L0b0034.   return v0  @type wide;
#L0b0036.   v0:= instanceof @varname v2 @type [|byte[]|];
#L0b003a.   if v0 == 0 then goto L0b004e;
#L0b003e.   v2:= ([|byte|][])v2;
#L0b0042.   v2:= ([|byte|][])v2;
#L0b0046.   v0:= v2[v3]  @byte;
#L0b004a.   v0:= (double)v0  @type i2d;
#L0b004c.   goto L0b0034;
#L0b004e.   v0:= instanceof @varname v2 @type [|char[]|];
#L0b0052.   if v0 == 0 then goto L0b0066;
#L0b0056.   v2:= ([|char|][])v2;
#L0b005a.   v2:= ([|char|][])v2;
#L0b005e.   v0:= v2[v3]  @char;
#L0b0062.   v0:= (double)v0  @type i2d;
#L0b0064.   goto L0b0034;
#L0b0066.   v0:= instanceof @varname v2 @type [|float[]|];
#L0b006a.   if v0 == 0 then goto L0b007e;
#L0b006e.   v2:= ([|float|][])v2;
#L0b0072.   v2:= ([|float|][])v2;
#L0b0076.   v0:= v2[v3];
#L0b007a.   v0:= (double)v0  @type f2d;
#L0b007c.   goto L0b0034;
#L0b007e.   v0:= instanceof @varname v2 @type [|int[]|];
#L0b0082.   if v0 == 0 then goto L0b0096;
#L0b0086.   v2:= ([|int|][])v2;
#L0b008a.   v2:= ([|int|][])v2;
#L0b008e.   v0:= v2[v3];
#L0b0092.   v0:= (double)v0  @type i2d;
#L0b0094.   goto L0b0034;
#L0b0096.   v0:= instanceof @varname v2 @type [|long[]|];
#L0b009a.   if v0 == 0 then goto L0b00ae;
#L0b009e.   v2:= ([|long|][])v2;
#L0b00a2.   v2:= ([|long|][])v2;
#L0b00a6.   v0:= v2[v3]  @wide;
#L0b00aa.   v0:= (double)v0  @type l2d;
#L0b00ac.   goto L0b0034;
#L0b00ae.   v0:= instanceof @varname v2 @type [|short[]|];
#L0b00b2.   if v0 == 0 then goto L0b00c6;
#L0b00b6.   v2:= ([|short|][])v2;
#L0b00ba.   v2:= ([|short|][])v2;
#L0b00be.   v0:= v2[v3]  @short;
#L0b00c2.   v0:= (double)v0  @type i2d;
#L0b00c4.   goto L0b0034;
#L0b00c6.   call temp:=  [|java:lang:reflect:Array.badArray|](v2) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b00cc.   v0:= temp  @type object;
#L0b00ce.   throw v0;

   }
    procedure [|float|] [|java:lang:reflect:Array.getFloat|] ([|java:lang:Object|] v2 @type (object), [|int|] v3) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.getFloat:(Ljava/lang/Object;I)F|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b00e0.   v0:= instanceof @varname v2 @type [|float[]|];
#L0b00e4.   if v0 == 0 then goto L0b00f6;
#L0b00e8.   v2:= ([|float|][])v2;
#L0b00ec.   v2:= ([|float|][])v2;
#L0b00f0.   v0:= v2[v3];
#L0b00f4.   return v0;
#L0b00f6.   v0:= instanceof @varname v2 @type [|byte[]|];
#L0b00fa.   if v0 == 0 then goto L0b010e;
#L0b00fe.   v2:= ([|byte|][])v2;
#L0b0102.   v2:= ([|byte|][])v2;
#L0b0106.   v0:= v2[v3]  @byte;
#L0b010a.   v0:= (float)v0  @type i2f;
#L0b010c.   goto L0b00f4;
#L0b010e.   v0:= instanceof @varname v2 @type [|char[]|];
#L0b0112.   if v0 == 0 then goto L0b0126;
#L0b0116.   v2:= ([|char|][])v2;
#L0b011a.   v2:= ([|char|][])v2;
#L0b011e.   v0:= v2[v3]  @char;
#L0b0122.   v0:= (float)v0  @type i2f;
#L0b0124.   goto L0b00f4;
#L0b0126.   v0:= instanceof @varname v2 @type [|int[]|];
#L0b012a.   if v0 == 0 then goto L0b013e;
#L0b012e.   v2:= ([|int|][])v2;
#L0b0132.   v2:= ([|int|][])v2;
#L0b0136.   v0:= v2[v3];
#L0b013a.   v0:= (float)v0  @type i2f;
#L0b013c.   goto L0b00f4;
#L0b013e.   v0:= instanceof @varname v2 @type [|long[]|];
#L0b0142.   if v0 == 0 then goto L0b0156;
#L0b0146.   v2:= ([|long|][])v2;
#L0b014a.   v2:= ([|long|][])v2;
#L0b014e.   v0:= v2[v3]  @wide;
#L0b0152.   v0:= (float)v0  @type l2f;
#L0b0154.   goto L0b00f4;
#L0b0156.   v0:= instanceof @varname v2 @type [|short[]|];
#L0b015a.   if v0 == 0 then goto L0b016e;
#L0b015e.   v2:= ([|short|][])v2;
#L0b0162.   v2:= ([|short|][])v2;
#L0b0166.   v0:= v2[v3]  @short;
#L0b016a.   v0:= (float)v0  @type i2f;
#L0b016c.   goto L0b00f4;
#L0b016e.   call temp:=  [|java:lang:reflect:Array.badArray|](v2) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0174.   v0:= temp  @type object;
#L0b0176.   throw v0;

   }
    procedure [|int|] [|java:lang:reflect:Array.getInt|] ([|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.getInt:(Ljava/lang/Object;I)I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b0188.   v0:= instanceof @varname v1 @type [|int[]|];
#L0b018c.   if v0 == 0 then goto L0b019e;
#L0b0190.   v1:= ([|int|][])v1;
#L0b0194.   v1:= ([|int|][])v1;
#L0b0198.   v0:= v1[v2];
#L0b019c.   return v0;
#L0b019e.   v0:= instanceof @varname v1 @type [|byte[]|];
#L0b01a2.   if v0 == 0 then goto L0b01b4;
#L0b01a6.   v1:= ([|byte|][])v1;
#L0b01aa.   v1:= ([|byte|][])v1;
#L0b01ae.   v0:= v1[v2]  @byte;
#L0b01b2.   goto L0b019c;
#L0b01b4.   v0:= instanceof @varname v1 @type [|char[]|];
#L0b01b8.   if v0 == 0 then goto L0b01ca;
#L0b01bc.   v1:= ([|char|][])v1;
#L0b01c0.   v1:= ([|char|][])v1;
#L0b01c4.   v0:= v1[v2]  @char;
#L0b01c8.   goto L0b019c;
#L0b01ca.   v0:= instanceof @varname v1 @type [|short[]|];
#L0b01ce.   if v0 == 0 then goto L0b01e0;
#L0b01d2.   v1:= ([|short|][])v1;
#L0b01d6.   v1:= ([|short|][])v1;
#L0b01da.   v0:= v1[v2]  @short;
#L0b01de.   goto L0b019c;
#L0b01e0.   call temp:=  [|java:lang:reflect:Array.badArray|](v1) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b01e6.   v0:= temp  @type object;
#L0b01e8.   throw v0;

   }
    procedure [|int|] [|java:lang:reflect:Array.getLength|] ([|java:lang:Object|] v1 @type (object)) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b01fc.   v0:= instanceof @varname v1 @type [|java:lang:Object[]|];
#L0b0200.   if v0 == 0 then goto L0b0210;
#L0b0204.   v1:= ([|java:lang:Object|][])v1;
#L0b0208.   v1:= ([|java:lang:Object|][])v1;
#L0b020c.   v0:= v1.length;
#L0b020e.   return v0;
#L0b0210.   v0:= instanceof @varname v1 @type [|boolean[]|];
#L0b0214.   if v0 == 0 then goto L0b0224;
#L0b0218.   v1:= ([|boolean|][])v1;
#L0b021c.   v1:= ([|boolean|][])v1;
#L0b0220.   v0:= v1.length;
#L0b0222.   goto L0b020e;
#L0b0224.   v0:= instanceof @varname v1 @type [|byte[]|];
#L0b0228.   if v0 == 0 then goto L0b0238;
#L0b022c.   v1:= ([|byte|][])v1;
#L0b0230.   v1:= ([|byte|][])v1;
#L0b0234.   v0:= v1.length;
#L0b0236.   goto L0b020e;
#L0b0238.   v0:= instanceof @varname v1 @type [|char[]|];
#L0b023c.   if v0 == 0 then goto L0b024c;
#L0b0240.   v1:= ([|char|][])v1;
#L0b0244.   v1:= ([|char|][])v1;
#L0b0248.   v0:= v1.length;
#L0b024a.   goto L0b020e;
#L0b024c.   v0:= instanceof @varname v1 @type [|double[]|];
#L0b0250.   if v0 == 0 then goto L0b0260;
#L0b0254.   v1:= ([|double|][])v1;
#L0b0258.   v1:= ([|double|][])v1;
#L0b025c.   v0:= v1.length;
#L0b025e.   goto L0b020e;
#L0b0260.   v0:= instanceof @varname v1 @type [|float[]|];
#L0b0264.   if v0 == 0 then goto L0b0274;
#L0b0268.   v1:= ([|float|][])v1;
#L0b026c.   v1:= ([|float|][])v1;
#L0b0270.   v0:= v1.length;
#L0b0272.   goto L0b020e;
#L0b0274.   v0:= instanceof @varname v1 @type [|int[]|];
#L0b0278.   if v0 == 0 then goto L0b0288;
#L0b027c.   v1:= ([|int|][])v1;
#L0b0280.   v1:= ([|int|][])v1;
#L0b0284.   v0:= v1.length;
#L0b0286.   goto L0b020e;
#L0b0288.   v0:= instanceof @varname v1 @type [|long[]|];
#L0b028c.   if v0 == 0 then goto L0b029c;
#L0b0290.   v1:= ([|long|][])v1;
#L0b0294.   v1:= ([|long|][])v1;
#L0b0298.   v0:= v1.length;
#L0b029a.   goto L0b020e;
#L0b029c.   v0:= instanceof @varname v1 @type [|short[]|];
#L0b02a0.   if v0 == 0 then goto L0b02b0;
#L0b02a4.   v1:= ([|short|][])v1;
#L0b02a8.   v1:= ([|short|][])v1;
#L0b02ac.   v0:= v1.length;
#L0b02ae.   goto L0b020e;
#L0b02b0.   call temp:=  [|java:lang:reflect:Array.badArray|](v1) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b02b6.   v0:= temp  @type object;
#L0b02b8.   throw v0;

   }
    procedure [|long|] [|java:lang:reflect:Array.getLong|] ([|java:lang:Object|] v2 @type (object), [|int|] v3) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.getLong:(Ljava/lang/Object;I)J|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b02cc.   v0:= instanceof @varname v2 @type [|long[]|];
#L0b02d0.   if v0 == 0 then goto L0b02e2;
#L0b02d4.   v2:= ([|long|][])v2;
#L0b02d8.   v2:= ([|long|][])v2;
#L0b02dc.   v0:= v2[v3]  @wide;
#L0b02e0.   return v0  @type wide;
#L0b02e2.   v0:= instanceof @varname v2 @type [|byte[]|];
#L0b02e6.   if v0 == 0 then goto L0b02fa;
#L0b02ea.   v2:= ([|byte|][])v2;
#L0b02ee.   v2:= ([|byte|][])v2;
#L0b02f2.   v0:= v2[v3]  @byte;
#L0b02f6.   v0:= (long)v0  @type i2l;
#L0b02f8.   goto L0b02e0;
#L0b02fa.   v0:= instanceof @varname v2 @type [|char[]|];
#L0b02fe.   if v0 == 0 then goto L0b0312;
#L0b0302.   v2:= ([|char|][])v2;
#L0b0306.   v2:= ([|char|][])v2;
#L0b030a.   v0:= v2[v3]  @char;
#L0b030e.   v0:= (long)v0  @type i2l;
#L0b0310.   goto L0b02e0;
#L0b0312.   v0:= instanceof @varname v2 @type [|int[]|];
#L0b0316.   if v0 == 0 then goto L0b032a;
#L0b031a.   v2:= ([|int|][])v2;
#L0b031e.   v2:= ([|int|][])v2;
#L0b0322.   v0:= v2[v3];
#L0b0326.   v0:= (long)v0  @type i2l;
#L0b0328.   goto L0b02e0;
#L0b032a.   v0:= instanceof @varname v2 @type [|short[]|];
#L0b032e.   if v0 == 0 then goto L0b0342;
#L0b0332.   v2:= ([|short|][])v2;
#L0b0336.   v2:= ([|short|][])v2;
#L0b033a.   v0:= v2[v3]  @short;
#L0b033e.   v0:= (long)v0  @type i2l;
#L0b0340.   goto L0b02e0;
#L0b0342.   call temp:=  [|java:lang:reflect:Array.badArray|](v2) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0348.   v0:= temp  @type object;
#L0b034a.   throw v0;

   }
    procedure [|short|] [|java:lang:reflect:Array.getShort|] ([|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.getShort:(Ljava/lang/Object;I)S|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b035c.   v0:= instanceof @varname v1 @type [|short[]|];
#L0b0360.   if v0 == 0 then goto L0b0372;
#L0b0364.   v1:= ([|short|][])v1;
#L0b0368.   v1:= ([|short|][])v1;
#L0b036c.   v0:= v1[v2]  @short;
#L0b0370.   return v0;
#L0b0372.   v0:= instanceof @varname v1 @type [|byte[]|];
#L0b0376.   if v0 == 0 then goto L0b038a;
#L0b037a.   v1:= ([|byte|][])v1;
#L0b037e.   v1:= ([|byte|][])v1;
#L0b0382.   v0:= v1[v2]  @byte;
#L0b0386.   v0:= (short)v0  @type i2s;
#L0b0388.   goto L0b0370;
#L0b038a.   call temp:=  [|java:lang:reflect:Array.badArray|](v1) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0390.   v0:= temp  @type object;
#L0b0392.   throw v0;

   }
    procedure [|java:lang:IllegalArgumentException|] [|java:lang:reflect:Array.incompatibleType|] ([|java:lang:Object|] v3 @type (object)) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.incompatibleType:(Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b03a4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b03a8.   v1:= new [|java:lang:StringBuilder|];
#L0b03ac.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b03b2.   v2:= "Array has incompatible type: " @type (object, string);
#L0b03b6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b03bc.   v1:= temp  @type object;
#L0b03be.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0b03c4.   v2:= temp  @type object;
#L0b03c6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b03cc.   v1:= temp  @type object;
#L0b03ce.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b03d4.   v1:= temp  @type object;
#L0b03d6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b03dc.   throw v0;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Array.newInstance|] ([|java:lang:Class|] v2 @type (object), [|int|] v3) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b03f0.   call temp:=  [|java:lang:Class.isPrimitive|](v2) @signature [|Ljava/lang/Class;.isPrimitive:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b03f6.   v0:= temp;
#L0b03f8.   if v0 != 0 then goto L0b0406;
#L0b03fc.   call temp:=  [|java:lang:reflect:Array.createObjectArray|](v2, v3) @signature [|Ljava/lang/reflect/Array;.createObjectArray:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0402.   v0:= temp  @type object;
#L0b0404.   return v0  @type object;
#L0b0406.   v0:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L0b040a.   if v2 != v0 then goto L0b0414;
#L0b040e.   v0:= new [|boolean|][v3];
#L0b0412.   goto L0b0404;
#L0b0414.   v0:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0b0418.   if v2 != v0 then goto L0b0422;
#L0b041c.   v0:= new [|byte|][v3];
#L0b0420.   goto L0b0404;
#L0b0422.   v0:= @@[|java:lang:Character.TYPE|]   @type object;
#L0b0426.   if v2 != v0 then goto L0b0430;
#L0b042a.   v0:= new [|char|][v3];
#L0b042e.   goto L0b0404;
#L0b0430.   v0:= @@[|java:lang:Short.TYPE|]   @type object;
#L0b0434.   if v2 != v0 then goto L0b043e;
#L0b0438.   v0:= new [|short|][v3];
#L0b043c.   goto L0b0404;
#L0b043e.   v0:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0b0442.   if v2 != v0 then goto L0b044c;
#L0b0446.   v0:= new [|int|][v3];
#L0b044a.   goto L0b0404;
#L0b044c.   v0:= @@[|java:lang:Long.TYPE|]   @type object;
#L0b0450.   if v2 != v0 then goto L0b045a;
#L0b0454.   v0:= new [|long|][v3];
#L0b0458.   goto L0b0404;
#L0b045a.   v0:= @@[|java:lang:Float.TYPE|]   @type object;
#L0b045e.   if v2 != v0 then goto L0b0468;
#L0b0462.   v0:= new [|float|][v3];
#L0b0466.   goto L0b0404;
#L0b0468.   v0:= @@[|java:lang:Double.TYPE|]   @type object;
#L0b046c.   if v2 != v0 then goto L0b0476;
#L0b0470.   v0:= new [|double|][v3];
#L0b0474.   goto L0b0404;
#L0b0476.   v0:= @@[|java:lang:Void.TYPE|]   @type object;
#L0b047a.   if v2 != v0 then goto L0b048e;
#L0b047e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b0482.   v1:= "Can't allocate an array of void" @type (object, string);
#L0b0486.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b048c.   throw v0;
#L0b048e.   v0:= new [|java:lang:AssertionError|];
#L0b0492.   call temp:=  [|java:lang:AssertionError.<init>|](v0) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0b0498.   throw v0;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Array.newInstance|] ([|java:lang:Class|] v3 @type (object), [|int|][] v4) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;[I)Ljava/lang/Object;|] @Access PUBLIC_STATIC_VARARGS {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b04ac.   v0:= v4.length;
#L0b04ae.   if v0 <= 0 then goto L0b04bc;
#L0b04b2.   v0:= v4.length;
#L0b04b4.   v1:= 255  @length 16;
#L0b04b8.   if v0 <= v1 then goto L0b04f0;
#L0b04bc.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b04c0.   v1:= new [|java:lang:StringBuilder|];
#L0b04c4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b04ca.   v2:= "Bad number of dimensions: " @type (object, string);
#L0b04ce.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b04d4.   v1:= temp  @type object;
#L0b04d6.   v2:= v4.length;
#L0b04d8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b04de.   v1:= temp  @type object;
#L0b04e0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b04e6.   v1:= temp  @type object;
#L0b04e8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b04ee.   throw v0;
#L0b04f0.   v0:= @@[|java:lang:Void.TYPE|]   @type object;
#L0b04f4.   if v3 != v0 then goto L0b0508;
#L0b04f8.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b04fc.   v1:= "Can't allocate an array of void" @type (object, string);
#L0b0500.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b0506.   throw v0;
#L0b0508.   if v3 != 0 then goto L0b051c;
#L0b050c.   v0:= new [|java:lang:NullPointerException|];
#L0b0510.   v1:= "componentType == null" @type (object, string);
#L0b0514.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b051a.   throw v0;
#L0b051c.   call temp:=  [|java:lang:reflect:Array.createMultiArray|](v3, v4) @signature [|Ljava/lang/reflect/Array;.createMultiArray:(Ljava/lang/Class;[I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0522.   v0:= temp  @type object;
#L0b0524.   return v0  @type object;

   }
    procedure [|java:lang:IllegalArgumentException|] [|java:lang:reflect:Array.notAnArray|] ([|java:lang:Object|] v3 @type (object)) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.notAnArray:(Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b0538.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b053c.   v1:= new [|java:lang:StringBuilder|];
#L0b0540.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b0546.   v2:= "Not an array: " @type (object, string);
#L0b054a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0550.   v1:= temp  @type object;
#L0b0552.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0b0558.   v2:= temp  @type object;
#L0b055a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0560.   v1:= temp  @type object;
#L0b0562.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0568.   v1:= temp  @type object;
#L0b056a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b0570.   throw v0;

   }
    procedure [|void|] [|java:lang:reflect:Array.set|] ([|java:lang:Object|] v2 @type (object), [|int|] v3, [|java:lang:Object|] v4 @type (object)) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.set:(Ljava/lang/Object;ILjava/lang/Object;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b0584.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0b058a.   v0:= temp  @type object;
#L0b058c.   call temp:=  [|java:lang:Class.isArray|](v0) @signature [|Ljava/lang/Class;.isArray:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b0592.   v0:= temp;
#L0b0594.   if v0 != 0 then goto L0b05a2;
#L0b0598.   call temp:=  [|java:lang:reflect:Array.notAnArray|](v2) @signature [|Ljava/lang/reflect/Array;.notAnArray:(Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b059e.   v0:= temp  @type object;
#L0b05a0.   throw v0;
#L0b05a2.   v0:= instanceof @varname v2 @type [|java:lang:Object[]|];
#L0b05a6.   if v0 == 0 then goto L0b05e2;
#L0b05aa.   if v4 == 0 then goto L0b05d4;
#L0b05ae.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0b05b4.   v0:= temp  @type object;
#L0b05b6.   call temp:=  [|java:lang:Class.getComponentType|](v0) @signature [|Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b05bc.   v0:= temp  @type object;
#L0b05be.   call temp:=  [|java:lang:Class.isInstance|](v0, v4) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b05c4.   v0:= temp;
#L0b05c6.   if v0 != 0 then goto L0b05d4;
#L0b05ca.   call temp:=  [|java:lang:reflect:Array.incompatibleType|](v2) @signature [|Ljava/lang/reflect/Array;.incompatibleType:(Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b05d0.   v0:= temp  @type object;
#L0b05d2.   throw v0;
#L0b05d4.   v2:= ([|java:lang:Object|][])v2;
#L0b05d8.   v2:= ([|java:lang:Object|][])v2;
#L0b05dc.   v2[v3]:= v4  @type object;
#L0b05e0.   return @void ;
#L0b05e2.   if v4 != 0 then goto L0b05f6;
#L0b05e6.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b05ea.   v1:= "Primitive array can't take null values." @type (object, string);
#L0b05ee.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b05f4.   throw v0;
#L0b05f6.   v0:= instanceof @varname v4 @type [|java:lang:Boolean|];
#L0b05fa.   if v0 == 0 then goto L0b0612;
#L0b05fe.   v4:= ([|java:lang:Boolean|])v4;
#L0b0602.   call temp:=  [|java:lang:Boolean.booleanValue|](v4) @signature [|Ljava/lang/Boolean;.booleanValue:()Z|] @classDescriptor [|java:lang:Boolean|] @type virtual;
#L0b0608.   v0:= temp;
#L0b060a.   call temp:=  [|java:lang:reflect:Array.setBoolean|](v2, v3, v0) @signature [|Ljava/lang/reflect/Array;.setBoolean:(Ljava/lang/Object;IZ)V|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0610.   goto L0b05e0;
#L0b0612.   v0:= instanceof @varname v4 @type [|java:lang:Byte|];
#L0b0616.   if v0 == 0 then goto L0b062e;
#L0b061a.   v4:= ([|java:lang:Byte|])v4;
#L0b061e.   call temp:=  [|java:lang:Byte.byteValue|](v4) @signature [|Ljava/lang/Byte;.byteValue:()B|] @classDescriptor [|java:lang:Byte|] @type virtual;
#L0b0624.   v0:= temp;
#L0b0626.   call temp:=  [|java:lang:reflect:Array.setByte|](v2, v3, v0) @signature [|Ljava/lang/reflect/Array;.setByte:(Ljava/lang/Object;IB)V|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b062c.   goto L0b05e0;
#L0b062e.   v0:= instanceof @varname v4 @type [|java:lang:Character|];
#L0b0632.   if v0 == 0 then goto L0b064a;
#L0b0636.   v4:= ([|java:lang:Character|])v4;
#L0b063a.   call temp:=  [|java:lang:Character.charValue|](v4) @signature [|Ljava/lang/Character;.charValue:()C|] @classDescriptor [|java:lang:Character|] @type virtual;
#L0b0640.   v0:= temp;
#L0b0642.   call temp:=  [|java:lang:reflect:Array.setChar|](v2, v3, v0) @signature [|Ljava/lang/reflect/Array;.setChar:(Ljava/lang/Object;IC)V|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0648.   goto L0b05e0;
#L0b064a.   v0:= instanceof @varname v4 @type [|java:lang:Short|];
#L0b064e.   if v0 == 0 then goto L0b0666;
#L0b0652.   v4:= ([|java:lang:Short|])v4;
#L0b0656.   call temp:=  [|java:lang:Short.shortValue|](v4) @signature [|Ljava/lang/Short;.shortValue:()S|] @classDescriptor [|java:lang:Short|] @type virtual;
#L0b065c.   v0:= temp;
#L0b065e.   call temp:=  [|java:lang:reflect:Array.setShort|](v2, v3, v0) @signature [|Ljava/lang/reflect/Array;.setShort:(Ljava/lang/Object;IS)V|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0664.   goto L0b05e0;
#L0b0666.   v0:= instanceof @varname v4 @type [|java:lang:Integer|];
#L0b066a.   if v0 == 0 then goto L0b0682;
#L0b066e.   v4:= ([|java:lang:Integer|])v4;
#L0b0672.   call temp:=  [|java:lang:Integer.intValue|](v4) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L0b0678.   v0:= temp;
#L0b067a.   call temp:=  [|java:lang:reflect:Array.setInt|](v2, v3, v0) @signature [|Ljava/lang/reflect/Array;.setInt:(Ljava/lang/Object;II)V|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0680.   goto L0b05e0;
#L0b0682.   v0:= instanceof @varname v4 @type [|java:lang:Long|];
#L0b0686.   if v0 == 0 then goto L0b069e;
#L0b068a.   v4:= ([|java:lang:Long|])v4;
#L0b068e.   call temp:=  [|java:lang:Long.longValue|](v4) @signature [|Ljava/lang/Long;.longValue:()J|] @classDescriptor [|java:lang:Long|] @type virtual;
#L0b0694.   v0:= temp  @type wide;
#L0b0696.   call temp:=  [|java:lang:reflect:Array.setLong|](v2, v3, v0, v1) @signature [|Ljava/lang/reflect/Array;.setLong:(Ljava/lang/Object;IJ)V|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b069c.   goto L0b05e0;
#L0b069e.   v0:= instanceof @varname v4 @type [|java:lang:Float|];
#L0b06a2.   if v0 == 0 then goto L0b06ba;
#L0b06a6.   v4:= ([|java:lang:Float|])v4;
#L0b06aa.   call temp:=  [|java:lang:Float.floatValue|](v4) @signature [|Ljava/lang/Float;.floatValue:()F|] @classDescriptor [|java:lang:Float|] @type virtual;
#L0b06b0.   v0:= temp;
#L0b06b2.   call temp:=  [|java:lang:reflect:Array.setFloat|](v2, v3, v0) @signature [|Ljava/lang/reflect/Array;.setFloat:(Ljava/lang/Object;IF)V|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b06b8.   goto L0b05e0;
#L0b06ba.   v0:= instanceof @varname v4 @type [|java:lang:Double|];
#L0b06be.   if v0 == 0 then goto L0b05e0;
#L0b06c2.   v4:= ([|java:lang:Double|])v4;
#L0b06c6.   call temp:=  [|java:lang:Double.doubleValue|](v4) @signature [|Ljava/lang/Double;.doubleValue:()D|] @classDescriptor [|java:lang:Double|] @type virtual;
#L0b06cc.   v0:= temp  @type wide;
#L0b06ce.   call temp:=  [|java:lang:reflect:Array.setDouble|](v2, v3, v0, v1) @signature [|Ljava/lang/reflect/Array;.setDouble:(Ljava/lang/Object;ID)V|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b06d4.   goto L0b05e0;

   }
    procedure [|void|] [|java:lang:reflect:Array.setBoolean|] ([|java:lang:Object|] v1 @type (object), [|int|] v2, [|boolean|] v3) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.setBoolean:(Ljava/lang/Object;IZ)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b06e8.   v0:= instanceof @varname v1 @type [|boolean[]|];
#L0b06ec.   if v0 == 0 then goto L0b06fe;
#L0b06f0.   v1:= ([|boolean|][])v1;
#L0b06f4.   v1:= ([|boolean|][])v1;
#L0b06f8.   v1[v2]:= v3  @boolean;
#L0b06fc.   return @void ;
#L0b06fe.   call temp:=  [|java:lang:reflect:Array.badArray|](v1) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0704.   v0:= temp  @type object;
#L0b0706.   throw v0;

   }
    procedure [|void|] [|java:lang:reflect:Array.setByte|] ([|java:lang:Object|] v2 @type (object), [|int|] v3, [|byte|] v4) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.setByte:(Ljava/lang/Object;IB)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b0718.   v0:= instanceof @varname v2 @type [|byte[]|];
#L0b071c.   if v0 == 0 then goto L0b072e;
#L0b0720.   v2:= ([|byte|][])v2;
#L0b0724.   v2:= ([|byte|][])v2;
#L0b0728.   v2[v3]:= v4  @byte;
#L0b072c.   return @void ;
#L0b072e.   v0:= instanceof @varname v2 @type [|double[]|];
#L0b0732.   if v0 == 0 then goto L0b0746;
#L0b0736.   v2:= ([|double|][])v2;
#L0b073a.   v2:= ([|double|][])v2;
#L0b073e.   v0:= (double)v4  @type i2d;
#L0b0740.   v2[v3]:= v0  @wide;
#L0b0744.   goto L0b072c;
#L0b0746.   v0:= instanceof @varname v2 @type [|float[]|];
#L0b074a.   if v0 == 0 then goto L0b075e;
#L0b074e.   v2:= ([|float|][])v2;
#L0b0752.   v2:= ([|float|][])v2;
#L0b0756.   v0:= (float)v4  @type i2f;
#L0b0758.   v2[v3]:= v0;
#L0b075c.   goto L0b072c;
#L0b075e.   v0:= instanceof @varname v2 @type [|int[]|];
#L0b0762.   if v0 == 0 then goto L0b0774;
#L0b0766.   v2:= ([|int|][])v2;
#L0b076a.   v2:= ([|int|][])v2;
#L0b076e.   v2[v3]:= v4;
#L0b0772.   goto L0b072c;
#L0b0774.   v0:= instanceof @varname v2 @type [|long[]|];
#L0b0778.   if v0 == 0 then goto L0b078c;
#L0b077c.   v2:= ([|long|][])v2;
#L0b0780.   v2:= ([|long|][])v2;
#L0b0784.   v0:= (long)v4  @type i2l;
#L0b0786.   v2[v3]:= v0  @wide;
#L0b078a.   goto L0b072c;
#L0b078c.   v0:= instanceof @varname v2 @type [|short[]|];
#L0b0790.   if v0 == 0 then goto L0b07a4;
#L0b0794.   v2:= ([|short|][])v2;
#L0b0798.   v2:= ([|short|][])v2;
#L0b079c.   v0:= (short)v4  @type i2s;
#L0b079e.   v2[v3]:= v0  @short;
#L0b07a2.   goto L0b072c;
#L0b07a4.   call temp:=  [|java:lang:reflect:Array.badArray|](v2) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b07aa.   v0:= temp  @type object;
#L0b07ac.   throw v0;

   }
    procedure [|void|] [|java:lang:reflect:Array.setChar|] ([|java:lang:Object|] v2 @type (object), [|int|] v3, [|char|] v4) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.setChar:(Ljava/lang/Object;IC)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b07c0.   v0:= instanceof @varname v2 @type [|char[]|];
#L0b07c4.   if v0 == 0 then goto L0b07d6;
#L0b07c8.   v2:= ([|char|][])v2;
#L0b07cc.   v2:= ([|char|][])v2;
#L0b07d0.   v2[v3]:= v4  @char;
#L0b07d4.   return @void ;
#L0b07d6.   v0:= instanceof @varname v2 @type [|double[]|];
#L0b07da.   if v0 == 0 then goto L0b07ee;
#L0b07de.   v2:= ([|double|][])v2;
#L0b07e2.   v2:= ([|double|][])v2;
#L0b07e6.   v0:= (double)v4  @type i2d;
#L0b07e8.   v2[v3]:= v0  @wide;
#L0b07ec.   goto L0b07d4;
#L0b07ee.   v0:= instanceof @varname v2 @type [|float[]|];
#L0b07f2.   if v0 == 0 then goto L0b0806;
#L0b07f6.   v2:= ([|float|][])v2;
#L0b07fa.   v2:= ([|float|][])v2;
#L0b07fe.   v0:= (float)v4  @type i2f;
#L0b0800.   v2[v3]:= v0;
#L0b0804.   goto L0b07d4;
#L0b0806.   v0:= instanceof @varname v2 @type [|int[]|];
#L0b080a.   if v0 == 0 then goto L0b081c;
#L0b080e.   v2:= ([|int|][])v2;
#L0b0812.   v2:= ([|int|][])v2;
#L0b0816.   v2[v3]:= v4;
#L0b081a.   goto L0b07d4;
#L0b081c.   v0:= instanceof @varname v2 @type [|long[]|];
#L0b0820.   if v0 == 0 then goto L0b0834;
#L0b0824.   v2:= ([|long|][])v2;
#L0b0828.   v2:= ([|long|][])v2;
#L0b082c.   v0:= (long)v4  @type i2l;
#L0b082e.   v2[v3]:= v0  @wide;
#L0b0832.   goto L0b07d4;
#L0b0834.   call temp:=  [|java:lang:reflect:Array.badArray|](v2) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b083a.   v0:= temp  @type object;
#L0b083c.   throw v0;

   }
    procedure [|void|] [|java:lang:reflect:Array.setDouble|] ([|java:lang:Object|] v1 @type (object), [|int|] v2, [|double|] v3) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.setDouble:(Ljava/lang/Object;ID)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b0850.   v0:= instanceof @varname v1 @type [|double[]|];
#L0b0854.   if v0 == 0 then goto L0b0866;
#L0b0858.   v1:= ([|double|][])v1;
#L0b085c.   v1:= ([|double|][])v1;
#L0b0860.   v1[v2]:= v3  @wide;
#L0b0864.   return @void ;
#L0b0866.   call temp:=  [|java:lang:reflect:Array.badArray|](v1) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b086c.   v0:= temp  @type object;
#L0b086e.   throw v0;

   }
    procedure [|void|] [|java:lang:reflect:Array.setFloat|] ([|java:lang:Object|] v2 @type (object), [|int|] v3, [|float|] v4) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.setFloat:(Ljava/lang/Object;IF)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b0880.   v0:= instanceof @varname v2 @type [|float[]|];
#L0b0884.   if v0 == 0 then goto L0b0896;
#L0b0888.   v2:= ([|float|][])v2;
#L0b088c.   v2:= ([|float|][])v2;
#L0b0890.   v2[v3]:= v4;
#L0b0894.   return @void ;
#L0b0896.   v0:= instanceof @varname v2 @type [|double[]|];
#L0b089a.   if v0 == 0 then goto L0b08ae;
#L0b089e.   v2:= ([|double|][])v2;
#L0b08a2.   v2:= ([|double|][])v2;
#L0b08a6.   v0:= (double)v4  @type f2d;
#L0b08a8.   v2[v3]:= v0  @wide;
#L0b08ac.   goto L0b0894;
#L0b08ae.   call temp:=  [|java:lang:reflect:Array.badArray|](v2) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b08b4.   v0:= temp  @type object;
#L0b08b6.   throw v0;

   }
    procedure [|void|] [|java:lang:reflect:Array.setInt|] ([|java:lang:Object|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.setInt:(Ljava/lang/Object;II)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b08c8.   v0:= instanceof @varname v2 @type [|int[]|];
#L0b08cc.   if v0 == 0 then goto L0b08de;
#L0b08d0.   v2:= ([|int|][])v2;
#L0b08d4.   v2:= ([|int|][])v2;
#L0b08d8.   v2[v3]:= v4;
#L0b08dc.   return @void ;
#L0b08de.   v0:= instanceof @varname v2 @type [|double[]|];
#L0b08e2.   if v0 == 0 then goto L0b08f6;
#L0b08e6.   v2:= ([|double|][])v2;
#L0b08ea.   v2:= ([|double|][])v2;
#L0b08ee.   v0:= (double)v4  @type i2d;
#L0b08f0.   v2[v3]:= v0  @wide;
#L0b08f4.   goto L0b08dc;
#L0b08f6.   v0:= instanceof @varname v2 @type [|float[]|];
#L0b08fa.   if v0 == 0 then goto L0b090e;
#L0b08fe.   v2:= ([|float|][])v2;
#L0b0902.   v2:= ([|float|][])v2;
#L0b0906.   v0:= (float)v4  @type i2f;
#L0b0908.   v2[v3]:= v0;
#L0b090c.   goto L0b08dc;
#L0b090e.   v0:= instanceof @varname v2 @type [|long[]|];
#L0b0912.   if v0 == 0 then goto L0b0926;
#L0b0916.   v2:= ([|long|][])v2;
#L0b091a.   v2:= ([|long|][])v2;
#L0b091e.   v0:= (long)v4  @type i2l;
#L0b0920.   v2[v3]:= v0  @wide;
#L0b0924.   goto L0b08dc;
#L0b0926.   call temp:=  [|java:lang:reflect:Array.badArray|](v2) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b092c.   v0:= temp  @type object;
#L0b092e.   throw v0;

   }
    procedure [|void|] [|java:lang:reflect:Array.setLong|] ([|java:lang:Object|] v2 @type (object), [|int|] v3, [|long|] v4) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.setLong:(Ljava/lang/Object;IJ)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b0940.   v0:= instanceof @varname v2 @type [|long[]|];
#L0b0944.   if v0 == 0 then goto L0b0956;
#L0b0948.   v2:= ([|long|][])v2;
#L0b094c.   v2:= ([|long|][])v2;
#L0b0950.   v2[v3]:= v4  @wide;
#L0b0954.   return @void ;
#L0b0956.   v0:= instanceof @varname v2 @type [|double[]|];
#L0b095a.   if v0 == 0 then goto L0b096e;
#L0b095e.   v2:= ([|double|][])v2;
#L0b0962.   v2:= ([|double|][])v2;
#L0b0966.   v0:= (double)v4  @type l2d;
#L0b0968.   v2[v3]:= v0  @wide;
#L0b096c.   goto L0b0954;
#L0b096e.   v0:= instanceof @varname v2 @type [|float[]|];
#L0b0972.   if v0 == 0 then goto L0b0986;
#L0b0976.   v2:= ([|float|][])v2;
#L0b097a.   v2:= ([|float|][])v2;
#L0b097e.   v0:= (float)v4  @type l2f;
#L0b0980.   v2[v3]:= v0;
#L0b0984.   goto L0b0954;
#L0b0986.   call temp:=  [|java:lang:reflect:Array.badArray|](v2) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b098c.   v0:= temp  @type object;
#L0b098e.   throw v0;

   }
    procedure [|void|] [|java:lang:reflect:Array.setShort|] ([|java:lang:Object|] v2 @type (object), [|int|] v3, [|short|] v4) @owner [|java:lang:reflect:Array|] @signature [|Ljava/lang/reflect/Array;.setShort:(Ljava/lang/Object;IS)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b09a0.   v0:= instanceof @varname v2 @type [|short[]|];
#L0b09a4.   if v0 == 0 then goto L0b09b6;
#L0b09a8.   v2:= ([|short|][])v2;
#L0b09ac.   v2:= ([|short|][])v2;
#L0b09b0.   v2[v3]:= v4  @short;
#L0b09b4.   return @void ;
#L0b09b6.   v0:= instanceof @varname v2 @type [|double[]|];
#L0b09ba.   if v0 == 0 then goto L0b09ce;
#L0b09be.   v2:= ([|double|][])v2;
#L0b09c2.   v2:= ([|double|][])v2;
#L0b09c6.   v0:= (double)v4  @type i2d;
#L0b09c8.   v2[v3]:= v0  @wide;
#L0b09cc.   goto L0b09b4;
#L0b09ce.   v0:= instanceof @varname v2 @type [|float[]|];
#L0b09d2.   if v0 == 0 then goto L0b09e6;
#L0b09d6.   v2:= ([|float|][])v2;
#L0b09da.   v2:= ([|float|][])v2;
#L0b09de.   v0:= (float)v4  @type i2f;
#L0b09e0.   v2[v3]:= v0;
#L0b09e4.   goto L0b09b4;
#L0b09e6.   v0:= instanceof @varname v2 @type [|int[]|];
#L0b09ea.   if v0 == 0 then goto L0b09fc;
#L0b09ee.   v2:= ([|int|][])v2;
#L0b09f2.   v2:= ([|int|][])v2;
#L0b09f6.   v2[v3]:= v4;
#L0b09fa.   goto L0b09b4;
#L0b09fc.   v0:= instanceof @varname v2 @type [|long[]|];
#L0b0a00.   if v0 == 0 then goto L0b0a14;
#L0b0a04.   v2:= ([|long|][])v2;
#L0b0a08.   v2:= ([|long|][])v2;
#L0b0a0c.   v0:= (long)v4  @type i2l;
#L0b0a0e.   v2[v3]:= v0  @wide;
#L0b0a12.   goto L0b09b4;
#L0b0a14.   call temp:=  [|java:lang:reflect:Array.badArray|](v2) @signature [|Ljava/lang/reflect/Array;.badArray:(Ljava/lang/Object;)Ljava/lang/RuntimeException;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0b0a1a.   v0:= temp  @type object;
#L0b0a1c.   throw v0;

   }
record [|java:lang:reflect:Member|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|int|] @@[|java:lang:reflect:Member.DECLARED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Member.PUBLIC|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|java:lang:Class|] [|java:lang:reflect:Member.getDeclaringClass|] () @owner [|java:lang:reflect:Member|] @signature [|Ljava/lang/reflect/Member;.getDeclaringClass:()Ljava/lang/Class;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:lang:reflect:Member.getModifiers|] () @owner [|java:lang:reflect:Member|] @signature [|Ljava/lang/reflect/Member;.getModifiers:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:lang:reflect:Member.getName|] () @owner [|java:lang:reflect:Member|] @signature [|Ljava/lang/reflect/Member;.getName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:lang:reflect:Member.isSynthetic|] () @owner [|java:lang:reflect:Member|] @signature [|Ljava/lang/reflect/Member;.isSynthetic:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:lang:reflect:Constructor|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:lang:reflect:AccessibleObject|], [|java:lang:reflect:GenericDeclaration|], [|java:lang:reflect:Member|] {
      [|java:lang:Class|] [|java:lang:reflect:Constructor.declaringClass|]    @AccessFlag ;
      [|java:lang:Class|][] [|java:lang:reflect:Constructor.exceptionTypes|]    @AccessFlag ;
      [|java:lang:reflect:TypeVariable|][] [|java:lang:reflect:Constructor.formalTypeParameters|]    @AccessFlag ;
      [|org:apache:harmony:luni:lang:reflect:ListOfTypes|] [|java:lang:reflect:Constructor.genericExceptionTypes|]    @AccessFlag ;
      [|org:apache:harmony:luni:lang:reflect:ListOfTypes|] [|java:lang:reflect:Constructor.genericParameterTypes|]    @AccessFlag ;
      [|boolean|] [|java:lang:reflect:Constructor.genericTypesAreInitialized|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:lang:Class|][] [|java:lang:reflect:Constructor.parameterTypes|]    @AccessFlag ;
      [|int|] [|java:lang:reflect:Constructor.slot|]    @AccessFlag ;
   }
    procedure [|void|] [|java:lang:reflect:Constructor.<init>|] ([|java:lang:reflect:Constructor|] v1 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b0a30.   call temp:=  [|java:lang:reflect:AccessibleObject.<init>|](v1) @signature [|Ljava/lang/reflect/AccessibleObject;.<init>:()V|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type direct;
#L0b0a36.   v0:= 0  @length 4;
#L0b0a38.   v1.[|java:lang:reflect:Constructor.genericTypesAreInitialized|]  := v0 @boolean;
#L0b0a3c.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Constructor.<init>|] ([|java:lang:reflect:Constructor|] v1 @type (this), [|java:lang:Class|] v2 @type (object), [|java:lang:Class|][] v3 @type (object), [|java:lang:Class|][] v4 @type (object), [|int|] v5) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.<init>:(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b0a50.   call temp:=  [|java:lang:reflect:AccessibleObject.<init>|](v1) @signature [|Ljava/lang/reflect/AccessibleObject;.<init>:()V|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type direct;
#L0b0a56.   v0:= 0  @length 4;
#L0b0a58.   v1.[|java:lang:reflect:Constructor.genericTypesAreInitialized|]  := v0 @boolean;
#L0b0a5c.   v1.[|java:lang:reflect:Constructor.declaringClass|]  := v2 @type object;
#L0b0a60.   v1.[|java:lang:reflect:Constructor.parameterTypes|]  := v3 @type object;
#L0b0a64.   v1.[|java:lang:reflect:Constructor.exceptionTypes|]  := v4 @type object;
#L0b0a68.   v1.[|java:lang:reflect:Constructor.slot|]  := v5;
#L0b0a6c.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Constructor.constructNative|] ([|java:lang:Object|][] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|][] v2 @type (object), [|int|] v3, [|boolean|] v4) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.constructNative:([Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Class;IZ)Ljava/lang/Object;|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:lang:reflect:Constructor.getSignature|] ([|java:lang:reflect:Constructor|] v3 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getSignature:()Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b0a80.   v1:= new [|java:lang:StringBuilder|];
#L0b0a84.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b0a8a.   v2:= 40  @length 16;
#L0b0a8e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0a94.   v0:= 0  @length 4;
#L0b0a96.   v2:= v3.[|java:lang:reflect:Constructor.parameterTypes|]   @type object;
#L0b0a9a.   v2:= v2.length;
#L0b0a9c.   if v0 >= v2 then goto L0b0abc;
#L0b0aa0.   v2:= v3.[|java:lang:reflect:Constructor.parameterTypes|]   @type object;
#L0b0aa4.   v2:= v2[v0]  @type object;
#L0b0aa8.   call temp:=  [|java:lang:reflect:Constructor.getSignature|](v3, v2) @signature [|Ljava/lang/reflect/Constructor;.getSignature:(Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0aae.   v2:= temp  @type object;
#L0b0ab0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0ab6.   v0:= v0 + 1;
#L0b0aba.   goto L0b0a96;
#L0b0abc.   v2:= ")V" @type (object, string);
#L0b0ac0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0ac6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0acc.   v2:= temp  @type object;
#L0b0ace.   return v2  @type object;

   }
    procedure [|void|] [|java:lang:reflect:Constructor.initGenericTypes|] ([|java:lang:reflect:Constructor|] v3 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.initGenericTypes:()V|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b0ae0.   (@monitorenter v3)
#L0b0ae2.   v2:= v3.[|java:lang:reflect:Constructor.genericTypesAreInitialized|]   @boolean;
#L0b0ae6.   if v2 != 0 then goto L0b0b30;
#L0b0aea.   call temp:=  [|java:lang:reflect:Constructor.getSignatureAttribute|](v3) @signature [|Ljava/lang/reflect/Constructor;.getSignatureAttribute:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0af0.   v1:= temp  @type object;
#L0b0af2.   v0:= new [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser|];
#L0b0af6.   v2:= v3.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0afa.   call temp:=  [|java:lang:Class.getClassLoader|](v2) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b0b00.   v2:= temp  @type object;
#L0b0b02.   call temp:=  [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.<init>|](v0, v2) @signature [|Lorg/apache/harmony/luni/lang/reflect/GenericSignatureParser;.<init>:(Ljava/lang/ClassLoader;)V|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser|] @type direct;
#L0b0b08.   v2:= v3.[|java:lang:reflect:Constructor.exceptionTypes|]   @type object;
#L0b0b0c.   call temp:=  [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.parseForConstructor|](v0, v3, v1, v2) @signature [|Lorg/apache/harmony/luni/lang/reflect/GenericSignatureParser;.parseForConstructor:(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/Class;)V|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser|] @type virtual;
#L0b0b12.   v2:= v0.[|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.formalTypeParameters|]   @type object;
#L0b0b16.   v3.[|java:lang:reflect:Constructor.formalTypeParameters|]  := v2 @type object;
#L0b0b1a.   v2:= v0.[|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.parameterTypes|]   @type object;
#L0b0b1e.   v3.[|java:lang:reflect:Constructor.genericParameterTypes|]  := v2 @type object;
#L0b0b22.   v2:= v0.[|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.exceptionTypes|]   @type object;
#L0b0b26.   v3.[|java:lang:reflect:Constructor.genericExceptionTypes|]  := v2 @type object;
#L0b0b2a.   v2:= 1  @length 4;
#L0b0b2c.   v3.[|java:lang:reflect:Constructor.genericTypesAreInitialized|]  := v2 @boolean;
#L0b0b30.   (@monitorexit v3)
#L0b0b32.   return @void ;
#L0b0b34.   v2:= Exception  @type object;
#L0b0b36.   (@monitorexit v3)
#L0b0b38.   throw v2;
  catch  [|any|] @[L0b0ae2..L0b0b30] goto L0b0b34;

   }
    procedure [|boolean|] [|java:lang:reflect:Constructor.equals|] ([|java:lang:reflect:Constructor|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b0b58.   v0:= instanceof @varname v3 @type [|java:lang:reflect:Constructor|];
#L0b0b5c.   if v0 == 0 then goto L0b0b80;
#L0b0b60.   call temp:=  [|java:lang:reflect:Constructor.toString|](v2) @signature [|Ljava/lang/reflect/Constructor;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0b66.   v0:= temp  @type object;
#L0b0b68.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0b0b6e.   v1:= temp  @type object;
#L0b0b70.   call temp:=  [|java:lang:String.equals|](v0, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b0b76.   v0:= temp;
#L0b0b78.   if v0 == 0 then goto L0b0b80;
#L0b0b7c.   v0:= 1  @length 4;
#L0b0b7e.   return v0;
#L0b0b80.   v0:= 0  @length 4;
#L0b0b82.   goto L0b0b7e;

   }
    procedure [|java:lang:annotation:Annotation|] [|java:lang:reflect:Constructor.getAnnotation|] ([|java:lang:reflect:Constructor|] v2 @type (this), [|java:lang:Class|] v3 @type (object)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b0b94.   if v3 != 0 then goto L0b0ba8;
#L0b0b98.   v0:= new [|java:lang:NullPointerException|];
#L0b0b9c.   v1:= "annotationType == null" @type (object, string);
#L0b0ba0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b0ba6.   throw v0;
#L0b0ba8.   v0:= v2.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0bac.   v1:= v2.[|java:lang:reflect:Constructor.slot|] ;
#L0b0bb0.   call temp:=  [|java:lang:reflect:Method.getAnnotation|](v0, v1, v3) @signature [|Ljava/lang/reflect/Method;.getAnnotation:(Ljava/lang/Class;ILjava/lang/Class;)Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b0bb6.   v0:= temp  @type object;
#L0b0bb8.   return v0  @type object;

   }
    procedure [|java:lang:annotation:Annotation|][] [|java:lang:reflect:Constructor.getDeclaredAnnotations|] ([|java:lang:reflect:Constructor|] v2 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getDeclaredAnnotations:()[Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b0bcc.   v0:= v2.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0bd0.   v1:= v2.[|java:lang:reflect:Constructor.slot|] ;
#L0b0bd4.   call temp:=  [|java:lang:reflect:Method.getDeclaredAnnotations|](v0, v1) @signature [|Ljava/lang/reflect/Method;.getDeclaredAnnotations:(Ljava/lang/Class;I)[Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b0bda.   v0:= temp  @type object;
#L0b0bdc.   return v0  @type object;

   }
    procedure [|java:lang:Class|] [|java:lang:reflect:Constructor.getDeclaringClass|] ([|java:lang:reflect:Constructor|] v1 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getDeclaringClass:()Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b0bf0.   v0:= v1.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0bf4.   return v0  @type object;

   }
    procedure [|java:lang:Class|][] [|java:lang:reflect:Constructor.getExceptionTypes|] ([|java:lang:reflect:Constructor|] v1 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getExceptionTypes:()[Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b0c08.   v0:= v1.[|java:lang:reflect:Constructor.exceptionTypes|]   @type object;
#L0b0c0c.   if v0 != 0 then goto L0b0c16;
#L0b0c10.   v0:= @@[|libcore:util:EmptyArray.CLASS|]   @type object;
#L0b0c14.   return v0  @type object;
#L0b0c16.   v0:= v1.[|java:lang:reflect:Constructor.exceptionTypes|]   @type object;
#L0b0c1a.   call temp:=  [|java:lang:Class[].clone|](v0) @signature [|[Ljava/lang/Class;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class[]|] @type virtual;
#L0b0c20.   v0:= temp  @type object;
#L0b0c22.   v0:= ([|java:lang:Class|][])v0;
#L0b0c26.   goto L0b0c14;

   }
    procedure [|java:lang:reflect:Type|][] [|java:lang:reflect:Constructor.getGenericExceptionTypes|] ([|java:lang:reflect:Constructor|] v1 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getGenericExceptionTypes:()[Ljava/lang/reflect/Type;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b0c38.   call temp:=  [|java:lang:reflect:Constructor.initGenericTypes|](v1) @signature [|Ljava/lang/reflect/Constructor;.initGenericTypes:()V|] @classDescriptor [|java:lang:reflect:Constructor|] @type direct;
#L0b0c3e.   v0:= v1.[|java:lang:reflect:Constructor.genericExceptionTypes|]   @type object;
#L0b0c42.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getClonedTypeArray|](v0) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getClonedTypeArray:(Lorg/apache/harmony/luni/lang/reflect/ListOfTypes;)[Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b0c48.   v0:= temp  @type object;
#L0b0c4a.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Type|][] [|java:lang:reflect:Constructor.getGenericParameterTypes|] ([|java:lang:reflect:Constructor|] v1 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b0c5c.   call temp:=  [|java:lang:reflect:Constructor.initGenericTypes|](v1) @signature [|Ljava/lang/reflect/Constructor;.initGenericTypes:()V|] @classDescriptor [|java:lang:reflect:Constructor|] @type direct;
#L0b0c62.   v0:= v1.[|java:lang:reflect:Constructor.genericParameterTypes|]   @type object;
#L0b0c66.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getClonedTypeArray|](v0) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getClonedTypeArray:(Lorg/apache/harmony/luni/lang/reflect/ListOfTypes;)[Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b0c6c.   v0:= temp  @type object;
#L0b0c6e.   return v0  @type object;

   }
    procedure [|int|] [|java:lang:reflect:Constructor.getModifiers|] ([|java:lang:reflect:Constructor|] v2 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getModifiers:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b0c80.   v0:= v2.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0c84.   v1:= v2.[|java:lang:reflect:Constructor.slot|] ;
#L0b0c88.   call temp:=  [|java:lang:reflect:Method.getMethodModifiers|](v0, v1) @signature [|Ljava/lang/reflect/Method;.getMethodModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b0c8e.   v0:= temp;
#L0b0c90.   return v0;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Constructor.getName|] ([|java:lang:reflect:Constructor|] v1 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b0ca4.   v0:= v1.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0ca8.   call temp:=  [|java:lang:Class.getName|](v0) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b0cae.   v0:= temp  @type object;
#L0b0cb0.   return v0  @type object;

   }
    procedure [|java:lang:annotation:Annotation|][][] [|java:lang:reflect:Constructor.getParameterAnnotations|] ([|java:lang:reflect:Constructor|] v3 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b0cc4.   v1:= v3.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0cc8.   v2:= v3.[|java:lang:reflect:Constructor.slot|] ;
#L0b0ccc.   call temp:=  [|java:lang:reflect:Method.getParameterAnnotations|](v1, v2) @signature [|Ljava/lang/reflect/Method;.getParameterAnnotations:(Ljava/lang/Class;I)[[Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b0cd2.   v0:= temp  @type object;
#L0b0cd4.   v1:= v0.length;
#L0b0cd6.   if v1 != 0 then goto L0b0ce8;
#L0b0cda.   v1:= v3.[|java:lang:reflect:Constructor.parameterTypes|]   @type object;
#L0b0cde.   v1:= v1.length;
#L0b0ce0.   call temp:=  [|java:lang:reflect:Method.noAnnotations|](v1) @signature [|Ljava/lang/reflect/Method;.noAnnotations:(I)[[Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b0ce6.   v0:= temp  @type object;
#L0b0ce8.   return v0  @type object;

   }
    procedure [|java:lang:Class|][] [|java:lang:reflect:Constructor.getParameterTypes|] ([|java:lang:reflect:Constructor|] v1 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b0cfc.   v0:= v1.[|java:lang:reflect:Constructor.parameterTypes|]   @type object;
#L0b0d00.   call temp:=  [|java:lang:Class[].clone|](v0) @signature [|[Ljava/lang/Class;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class[]|] @type virtual;
#L0b0d06.   v0:= temp  @type object;
#L0b0d08.   v0:= ([|java:lang:Class|][])v0;
#L0b0d0c.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Constructor.getSignatureAttribute|] ([|java:lang:reflect:Constructor|] v3 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getSignatureAttribute:()Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b0d20.   v1:= v3.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0d24.   v2:= v3.[|java:lang:reflect:Constructor.slot|] ;
#L0b0d28.   call temp:=  [|java:lang:reflect:Method.getSignatureAnnotation|](v1, v2) @signature [|Ljava/lang/reflect/Method;.getSignatureAnnotation:(Ljava/lang/Class;I)[Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b0d2e.   v0:= temp  @type object;
#L0b0d30.   if v0 != 0 then goto L0b0d38;
#L0b0d34.   v1:= 0  @length 4;
#L0b0d36.   return v1  @type object;
#L0b0d38.   call temp:=  [|org:apache:harmony:kernel:vm:StringUtils.combineStrings|](v0) @signature [|Lorg/apache/harmony/kernel/vm/StringUtils;.combineStrings:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:kernel:vm:StringUtils|] @type static;
#L0b0d3e.   v1:= temp  @type object;
#L0b0d40.   goto L0b0d36;

   }
    procedure [|java:lang:reflect:TypeVariable|][] [|java:lang:reflect:Constructor.getTypeParameters|] ([|java:lang:reflect:Constructor|] v1 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b0d54.   call temp:=  [|java:lang:reflect:Constructor.initGenericTypes|](v1) @signature [|Ljava/lang/reflect/Constructor;.initGenericTypes:()V|] @classDescriptor [|java:lang:reflect:Constructor|] @type direct;
#L0b0d5a.   v0:= v1.[|java:lang:reflect:Constructor.formalTypeParameters|]   @type object;
#L0b0d5e.   call temp:=  [|java:lang:reflect:TypeVariable[].clone|](v0) @signature [|[Ljava/lang/reflect/TypeVariable;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:TypeVariable[]|] @type virtual;
#L0b0d64.   v0:= temp  @type object;
#L0b0d66.   v0:= ([|java:lang:reflect:TypeVariable|][])v0;
#L0b0d6a.   return v0  @type object;

   }
    procedure [|int|] [|java:lang:reflect:Constructor.hashCode|] ([|java:lang:reflect:Constructor|] v1 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b0d7c.   v0:= v1.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0d80.   call temp:=  [|java:lang:Class.getName|](v0) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b0d86.   v0:= temp  @type object;
#L0b0d88.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b0d8e.   v0:= temp;
#L0b0d90.   return v0;

   }
    procedure [|boolean|] [|java:lang:reflect:Constructor.isAnnotationPresent|] ([|java:lang:reflect:Constructor|] v2 @type (this), [|java:lang:Class|] v3 @type (object)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.isAnnotationPresent:(Ljava/lang/Class;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b0da4.   if v3 != 0 then goto L0b0db8;
#L0b0da8.   v0:= new [|java:lang:NullPointerException|];
#L0b0dac.   v1:= "annotationType == null" @type (object, string);
#L0b0db0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b0db6.   throw v0;
#L0b0db8.   v0:= v2.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0dbc.   v1:= v2.[|java:lang:reflect:Constructor.slot|] ;
#L0b0dc0.   call temp:=  [|java:lang:reflect:Method.isAnnotationPresent|](v0, v1, v3) @signature [|Ljava/lang/reflect/Method;.isAnnotationPresent:(Ljava/lang/Class;ILjava/lang/Class;)Z|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b0dc6.   v0:= temp;
#L0b0dc8.   return v0;

   }
    procedure [|boolean|] [|java:lang:reflect:Constructor.isSynthetic|] ([|java:lang:reflect:Constructor|] v3 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.isSynthetic:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b0ddc.   v1:= v3.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0de0.   v2:= v3.[|java:lang:reflect:Constructor.slot|] ;
#L0b0de4.   call temp:=  [|java:lang:reflect:Method.getMethodModifiers|](v1, v2) @signature [|Ljava/lang/reflect/Method;.getMethodModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b0dea.   v0:= temp;
#L0b0dec.   v1:= v0 ^& 4096;
#L0b0df0.   if v1 == 0 then goto L0b0df8;
#L0b0df4.   v1:= 1  @length 4;
#L0b0df6.   return v1;
#L0b0df8.   v1:= 0  @length 4;
#L0b0dfa.   goto L0b0df6;

   }
    procedure [|boolean|] [|java:lang:reflect:Constructor.isVarArgs|] ([|java:lang:reflect:Constructor|] v3 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.isVarArgs:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b0e0c.   v1:= v3.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0e10.   v2:= v3.[|java:lang:reflect:Constructor.slot|] ;
#L0b0e14.   call temp:=  [|java:lang:reflect:Method.getMethodModifiers|](v1, v2) @signature [|Ljava/lang/reflect/Method;.getMethodModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b0e1a.   v0:= temp;
#L0b0e1c.   v1:= v0 ^& 128;
#L0b0e20.   if v1 == 0 then goto L0b0e28;
#L0b0e24.   v1:= 1  @length 4;
#L0b0e26.   return v1;
#L0b0e28.   v1:= 0  @length 4;
#L0b0e2a.   goto L0b0e26;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Constructor.newInstance|] ([|java:lang:reflect:Constructor|] v6 @type (this), [|java:lang:Object|][] v7 @type (object)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b0e3c.   v2:= v6.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0e40.   v3:= v6.[|java:lang:reflect:Constructor.parameterTypes|]   @type object;
#L0b0e44.   v4:= v6.[|java:lang:reflect:Constructor.slot|] ;
#L0b0e48.   v5:= v6.[|java:lang:reflect:Constructor.flag|]   @boolean;
#L0b0e4c.   v0:= v6  @type object;
#L0b0e4e.   v1:= v7  @type object;
#L0b0e50.   call temp:=  [|java:lang:reflect:Constructor.constructNative|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/lang/reflect/Constructor;.constructNative:([Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Class;IZ)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Constructor|] @type direct;
#L0b0e56.   v0:= temp  @type object;
#L0b0e58.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Constructor.toGenericString|] ([|java:lang:reflect:Constructor|] v6 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.toGenericString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b0e6c.   v3:= new [|java:lang:StringBuilder|];
#L0b0e70.   v4:= 80  @length 16;
#L0b0e74.   call temp:=  [|java:lang:StringBuilder.<init>|](v3, v4) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b0e7a.   call temp:=  [|java:lang:reflect:Constructor.initGenericTypes|](v6) @signature [|Ljava/lang/reflect/Constructor;.initGenericTypes:()V|] @classDescriptor [|java:lang:reflect:Constructor|] @type direct;
#L0b0e80.   call temp:=  [|java:lang:reflect:Constructor.getModifiers|](v6) @signature [|Ljava/lang/reflect/Constructor;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0e86.   v2:= temp;
#L0b0e88.   if v2 == 0 then goto L0b0eaa;
#L0b0e8c.   v4:= v2 ^& -129;
#L0b0e90.   call temp:=  [|java:lang:reflect:Modifier.toString|](v4) @signature [|Ljava/lang/reflect/Modifier;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b0e96.   v4:= temp  @type object;
#L0b0e98.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0e9e.   v4:= temp  @type object;
#L0b0ea0.   v5:= 32  @length 16;
#L0b0ea4.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0eaa.   v4:= v6.[|java:lang:reflect:Constructor.formalTypeParameters|]   @type object;
#L0b0eae.   if v4 == 0 then goto L0b0f08;
#L0b0eb2.   v4:= v6.[|java:lang:reflect:Constructor.formalTypeParameters|]   @type object;
#L0b0eb6.   v4:= v4.length;
#L0b0eb8.   if v4 <= 0 then goto L0b0f08;
#L0b0ebc.   v4:= 60  @length 16;
#L0b0ec0.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0ec6.   v1:= 0  @length 4;
#L0b0ec8.   v4:= v6.[|java:lang:reflect:Constructor.formalTypeParameters|]   @type object;
#L0b0ecc.   v4:= v4.length;
#L0b0ece.   if v1 >= v4 then goto L0b0efe;
#L0b0ed2.   v4:= v6.[|java:lang:reflect:Constructor.formalTypeParameters|]   @type object;
#L0b0ed6.   v4:= v4[v1]  @type object;
#L0b0eda.   call temp:=  [|java:lang:reflect:Constructor.appendGenericType|](v6, v3, v4) @signature [|Ljava/lang/reflect/Constructor;.appendGenericType:(Ljava/lang/StringBuilder;Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0ee0.   v4:= v6.[|java:lang:reflect:Constructor.formalTypeParameters|]   @type object;
#L0b0ee4.   v4:= v4.length;
#L0b0ee6.   v4:= v4 + -1;
#L0b0eea.   if v1 >= v4 then goto L0b0ef8;
#L0b0eee.   v4:= "," @type (object, string);
#L0b0ef2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0ef8.   v1:= v1 + 1;
#L0b0efc.   goto L0b0ec8;
#L0b0efe.   v4:= "> " @type (object, string);
#L0b0f02.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0f08.   call temp:=  [|java:lang:reflect:Constructor.getDeclaringClass|](v6) @signature [|Ljava/lang/reflect/Constructor;.getDeclaringClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0f0e.   v4:= temp  @type object;
#L0b0f10.   call temp:=  [|java:lang:reflect:Constructor.appendTypeName|](v6, v3, v4) @signature [|Ljava/lang/reflect/Constructor;.appendTypeName:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0f16.   v4:= 40  @length 16;
#L0b0f1a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0f20.   v4:= v6.[|java:lang:reflect:Constructor.genericParameterTypes|]   @type object;
#L0b0f24.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getClonedTypeArray|](v4) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getClonedTypeArray:(Lorg/apache/harmony/luni/lang/reflect/ListOfTypes;)[Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b0f2a.   v4:= temp  @type object;
#L0b0f2c.   call temp:=  [|java:lang:reflect:Constructor.appendArrayGenericType|](v6, v3, v4) @signature [|Ljava/lang/reflect/Constructor;.appendArrayGenericType:(Ljava/lang/StringBuilder;[Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0f32.   v4:= 41  @length 16;
#L0b0f36.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0f3c.   v4:= v6.[|java:lang:reflect:Constructor.genericExceptionTypes|]   @type object;
#L0b0f40.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getClonedTypeArray|](v4) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getClonedTypeArray:(Lorg/apache/harmony/luni/lang/reflect/ListOfTypes;)[Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b0f46.   v0:= temp  @type object;
#L0b0f48.   v4:= v0.length;
#L0b0f4a.   if v4 <= 0 then goto L0b0f5e;
#L0b0f4e.   v4:= " throws " @type (object, string);
#L0b0f52.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0f58.   call temp:=  [|java:lang:reflect:Constructor.appendArrayGenericType|](v6, v3, v0) @signature [|Ljava/lang/reflect/Constructor;.appendArrayGenericType:(Ljava/lang/StringBuilder;[Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0f5e.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0f64.   v4:= temp  @type object;
#L0b0f66.   return v4  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Constructor.toString|] ([|java:lang:reflect:Constructor|] v2 @type (this)) @owner [|java:lang:reflect:Constructor|] @signature [|Ljava/lang/reflect/Constructor;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b0f78.   v0:= new [|java:lang:StringBuilder|];
#L0b0f7c.   call temp:=  [|java:lang:reflect:Constructor.getModifiers|](v2) @signature [|Ljava/lang/reflect/Constructor;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0f82.   v1:= temp;
#L0b0f84.   call temp:=  [|java:lang:reflect:Modifier.toString|](v1) @signature [|Ljava/lang/reflect/Modifier;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b0f8a.   v1:= temp  @type object;
#L0b0f8c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b0f92.   call temp:=  [|java:lang:StringBuilder.length|](v0) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0f98.   v1:= temp;
#L0b0f9a.   if v1 == 0 then goto L0b0fa8;
#L0b0f9e.   v1:= 32  @length 16;
#L0b0fa2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0fa8.   v1:= v2.[|java:lang:reflect:Constructor.declaringClass|]   @type object;
#L0b0fac.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b0fb2.   v1:= temp  @type object;
#L0b0fb4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0fba.   v1:= "(" @type (object, string);
#L0b0fbe.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0fc4.   v1:= v2.[|java:lang:reflect:Constructor.parameterTypes|]   @type object;
#L0b0fc8.   call temp:=  [|java:lang:reflect:Constructor.toString|](v2, v1) @signature [|Ljava/lang/reflect/Constructor;.toString:([Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b0fce.   v1:= temp  @type object;
#L0b0fd0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0fd6.   v1:= ")" @type (object, string);
#L0b0fda.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0fe0.   v1:= v2.[|java:lang:reflect:Constructor.exceptionTypes|]   @type object;
#L0b0fe4.   if v1 == 0 then goto L0b100e;
#L0b0fe8.   v1:= v2.[|java:lang:reflect:Constructor.exceptionTypes|]   @type object;
#L0b0fec.   v1:= v1.length;
#L0b0fee.   if v1 == 0 then goto L0b100e;
#L0b0ff2.   v1:= " throws " @type (object, string);
#L0b0ff6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b0ffc.   v1:= v2.[|java:lang:reflect:Constructor.exceptionTypes|]   @type object;
#L0b1000.   call temp:=  [|java:lang:reflect:Constructor.toString|](v2, v1) @signature [|Ljava/lang/reflect/Constructor;.toString:([Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b1006.   v1:= temp  @type object;
#L0b1008.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b100e.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1014.   v1:= temp  @type object;
#L0b1016.   return v1  @type object;

   }
record [|java:lang:reflect:Field$1|]  @type class @AccessFlag FINAL extends  [|java:util:Comparator|] {
   }
    procedure [|void|] [|java:lang:reflect:Field$1.<init>|] ([|java:lang:reflect:Field$1|] v0 @type (this)) @owner [|java:lang:reflect:Field$1|] @signature [|Ljava/lang/reflect/Field$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0b1028.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b102e.   return @void ;

   }
    procedure [|int|] [|java:lang:reflect:Field$1.compare|] ([|java:lang:reflect:Field$1|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:reflect:Field$1|] @signature [|Ljava/lang/reflect/Field$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0b1040.   v2:= ([|java:lang:reflect:Field|])v2;
#L0b1044.   v3:= ([|java:lang:reflect:Field|])v3;
#L0b1048.   call temp:=  [|java:lang:reflect:Field$1.compare|](v1, v2, v3) @signature [|Ljava/lang/reflect/Field$1;.compare:(Ljava/lang/reflect/Field;Ljava/lang/reflect/Field;)I|] @classDescriptor [|java:lang:reflect:Field$1|] @type virtual;
#L0b104e.   v0:= temp;
#L0b1050.   return v0;

   }
    procedure [|int|] [|java:lang:reflect:Field$1.compare|] ([|java:lang:reflect:Field$1|] v3 @type (this), [|java:lang:reflect:Field|] v4 @type (object), [|java:lang:reflect:Field|] v5 @type (object)) @owner [|java:lang:reflect:Field$1|] @signature [|Ljava/lang/reflect/Field$1;.compare:(Ljava/lang/reflect/Field;Ljava/lang/reflect/Field;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1064.   call temp:=  [|java:lang:reflect:Field.access$000|](v4) @signature [|Ljava/lang/reflect/Field;.access$000:(Ljava/lang/reflect/Field;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type static;
#L0b106a.   v1:= temp  @type object;
#L0b106c.   call temp:=  [|java:lang:reflect:Field.access$000|](v5) @signature [|Ljava/lang/reflect/Field;.access$000:(Ljava/lang/reflect/Field;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type static;
#L0b1072.   v2:= temp  @type object;
#L0b1074.   call temp:=  [|java:lang:String.compareTo|](v1, v2) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b107a.   v0:= temp;
#L0b107c.   if v0 == 0 then goto L0b1082;
#L0b1080.   return v0;
#L0b1082.   call temp:=  [|java:lang:reflect:Field.getDeclaringClass|](v4) @signature [|Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1088.   v1:= temp  @type object;
#L0b108a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b1090.   v1:= temp  @type object;
#L0b1092.   call temp:=  [|java:lang:reflect:Field.getDeclaringClass|](v5) @signature [|Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1098.   v2:= temp  @type object;
#L0b109a.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b10a0.   v2:= temp  @type object;
#L0b10a2.   call temp:=  [|java:lang:String.compareTo|](v1, v2) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b10a8.   v0:= temp;
#L0b10aa.   goto L0b1080;

   }
record [|java:lang:reflect:Field|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:lang:reflect:AccessibleObject|], [|java:lang:reflect:Member|] {
      [|java:lang:Class|] [|java:lang:reflect:Field.declaringClass|]    @AccessFlag PRIVATE;
      [|java:lang:reflect:Type|] [|java:lang:reflect:Field.genericType|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:lang:reflect:Field.genericTypesAreInitialized|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:lang:String|] [|java:lang:reflect:Field.name|]    @AccessFlag PRIVATE;
      [|int|] [|java:lang:reflect:Field.slot|]    @AccessFlag PRIVATE;
      [|java:lang:Class|] [|java:lang:reflect:Field.type|]    @AccessFlag PRIVATE;
   }
      global [|java:util:Comparator|] @@[|java:lang:reflect:Field.ORDER_BY_NAME_AND_DECLARING_CLASS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|char|] @@[|java:lang:reflect:Field.TYPE_BOOLEAN|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|char|] @@[|java:lang:reflect:Field.TYPE_BYTE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|char|] @@[|java:lang:reflect:Field.TYPE_CHAR|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|char|] @@[|java:lang:reflect:Field.TYPE_DOUBLE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|char|] @@[|java:lang:reflect:Field.TYPE_FLOAT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|char|] @@[|java:lang:reflect:Field.TYPE_INTEGER|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|char|] @@[|java:lang:reflect:Field.TYPE_LONG|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|char|] @@[|java:lang:reflect:Field.TYPE_SHORT|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:reflect:Field.<clinit>|] () @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b10bc.   v0:= new [|java:lang:reflect:Field$1|];
#L0b10c0.   call temp:=  [|java:lang:reflect:Field$1.<init>|](v0) @signature [|Ljava/lang/reflect/Field$1;.<init>:()V|] @classDescriptor [|java:lang:reflect:Field$1|] @type direct;
#L0b10c6.   @@[|java:lang:reflect:Field.ORDER_BY_NAME_AND_DECLARING_CLASS|] := v0  @type object;
#L0b10ca.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.<init>|] ([|java:lang:reflect:Field|] v1 @type (this), [|java:lang:Class|] v2 @type (object), [|java:lang:Class|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|int|] v5) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b10dc.   call temp:=  [|java:lang:reflect:AccessibleObject.<init>|](v1) @signature [|Ljava/lang/reflect/AccessibleObject;.<init>:()V|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type direct;
#L0b10e2.   v0:= 0  @length 4;
#L0b10e4.   v1.[|java:lang:reflect:Field.genericTypesAreInitialized|]  := v0 @boolean;
#L0b10e8.   v1.[|java:lang:reflect:Field.declaringClass|]  := v2 @type object;
#L0b10ec.   v1.[|java:lang:reflect:Field.type|]  := v3 @type object;
#L0b10f0.   v1.[|java:lang:reflect:Field.name|]  := v4 @type object;
#L0b10f4.   v1.[|java:lang:reflect:Field.slot|]  := v5;
#L0b10f8.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.<init>|] ([|java:lang:reflect:Field|] v4 @type (this), [|java:lang:reflect:Field|] v5 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.<init>:(Ljava/lang/reflect/Field;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b110c.   v0:= v5.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1110.   v1:= v5.[|java:lang:reflect:Field.type|]   @type object;
#L0b1114.   v2:= v5.[|java:lang:reflect:Field.name|]   @type object;
#L0b1118.   v3:= v5.[|java:lang:reflect:Field.slot|] ;
#L0b111c.   call temp:=  [|java:lang:reflect:Field.<init>|](v4, v0, v1, v2, v3) @signature [|Ljava/lang/reflect/Field;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;I)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1122.   v0:= v5.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1126.   if v0 == 0 then goto L0b1130;
#L0b112a.   v0:= 1  @length 4;
#L0b112c.   v4.[|java:lang:reflect:Field.flag|]  := v0 @boolean;
#L0b1130.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Field.access$000|] ([|java:lang:reflect:Field|] v1 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.access$000:(Ljava/lang/reflect/Field;)Ljava/lang/String;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L0b1144.   v0:= v1.[|java:lang:reflect:Field.name|]   @type object;
#L0b1148.   return v0  @type object;

   }
    procedure [|java:lang:annotation:Annotation|] [|java:lang:reflect:Field.getAnnotation|] ([|java:lang:Class|] v0 @type (object), [|int|] v1, [|java:lang:Class|] v2 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;ILjava/lang/Class;)Ljava/lang/annotation/Annotation;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|] [|java:lang:reflect:Field.getBField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getBField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)B|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|char|] [|java:lang:reflect:Field.getCField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getCField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)C|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|double|] [|java:lang:reflect:Field.getDField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getDField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)D|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|java:lang:annotation:Annotation|][] [|java:lang:reflect:Field.getDeclaredAnnotations|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getDeclaredAnnotations:(Ljava/lang/Class;I)[Ljava/lang/annotation/Annotation;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|float|] [|java:lang:reflect:Field.getFField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getFField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)F|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Field.getField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZ)Ljava/lang/Object;|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|int|] [|java:lang:reflect:Field.getFieldModifiers|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getFieldModifiers:(Ljava/lang/Class;I)I|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|int|] [|java:lang:reflect:Field.getIField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getIField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)I|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|long|] [|java:lang:reflect:Field.getJField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getJField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)J|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|short|] [|java:lang:reflect:Field.getSField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getSField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)S|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:lang:reflect:Field.getSignature|] ([|java:lang:reflect:Field|] v1 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getSignature:()Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0b115c.   v0:= v1.[|java:lang:reflect:Field.type|]   @type object;
#L0b1160.   call temp:=  [|java:lang:reflect:Field.getSignature|](v1, v0) @signature [|Ljava/lang/reflect/Field;.getSignature:(Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1166.   v0:= temp  @type object;
#L0b1168.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:lang:reflect:Field.getSignatureAnnotation|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getSignatureAnnotation:(Ljava/lang/Class;I)[Ljava/lang/Object;|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:lang:reflect:Field.getZField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getZField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)Z|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.initGenericType|] ([|java:lang:reflect:Field|] v3 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.initGenericType:()V|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b117c.   (@monitorenter v3)
#L0b117e.   v2:= v3.[|java:lang:reflect:Field.genericTypesAreInitialized|]   @boolean;
#L0b1182.   if v2 != 0 then goto L0b11d0;
#L0b1186.   call temp:=  [|java:lang:reflect:Field.getSignatureAttribute|](v3) @signature [|Ljava/lang/reflect/Field;.getSignatureAttribute:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b118c.   v1:= temp  @type object;
#L0b118e.   v0:= new [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser|];
#L0b1192.   v2:= v3.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1196.   call temp:=  [|java:lang:Class.getClassLoader|](v2) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b119c.   v2:= temp  @type object;
#L0b119e.   call temp:=  [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.<init>|](v0, v2) @signature [|Lorg/apache/harmony/luni/lang/reflect/GenericSignatureParser;.<init>:(Ljava/lang/ClassLoader;)V|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser|] @type direct;
#L0b11a4.   v2:= v3.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b11a8.   call temp:=  [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.parseForField|](v0, v2, v1) @signature [|Lorg/apache/harmony/luni/lang/reflect/GenericSignatureParser;.parseForField:(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;)V|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser|] @type virtual;
#L0b11ae.   v2:= v0.[|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.fieldType|]   @type object;
#L0b11b2.   v3.[|java:lang:reflect:Field.genericType|]  := v2 @type object;
#L0b11b6.   v2:= v3.[|java:lang:reflect:Field.genericType|]   @type object;
#L0b11ba.   if v2 != 0 then goto L0b11ca;
#L0b11be.   call temp:=  [|java:lang:reflect:Field.getType|](v3) @signature [|Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b11c4.   v2:= temp  @type object;
#L0b11c6.   v3.[|java:lang:reflect:Field.genericType|]  := v2 @type object;
#L0b11ca.   v2:= 1  @length 4;
#L0b11cc.   v3.[|java:lang:reflect:Field.genericTypesAreInitialized|]  := v2 @boolean;
#L0b11d0.   (@monitorexit v3)
#L0b11d2.   return @void ;
#L0b11d4.   v2:= Exception  @type object;
#L0b11d6.   (@monitorexit v3)
#L0b11d8.   throw v2;
  catch  [|any|] @[L0b117e..L0b11d0] goto L0b11d4;

   }
    procedure [|boolean|] [|java:lang:reflect:Field.isAnnotationPresent|] ([|java:lang:Class|] v0 @type (object), [|int|] v1, [|java:lang:Class|] v2 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.isAnnotationPresent:(Ljava/lang/Class;ILjava/lang/Class;)Z|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.setBField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5, [|byte|] v6) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setBField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCB)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.setCField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5, [|char|] v6) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setCField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCC)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.setDField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5, [|double|] v6) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setDField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCD)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.setFField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5, [|float|] v6) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setFField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCF)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.setField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|java:lang:Object|] v5 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZLjava/lang/Object;)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.setIField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5, [|int|] v6) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setIField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCI)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.setJField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5, [|long|] v6) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setJField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCJ)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.setSField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5, [|short|] v6) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setSField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCS)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Field.setZField|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Class|] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|int|] v3, [|boolean|] v4, [|char|] v5, [|boolean|] v6) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setZField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCZ)V|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:lang:reflect:Field.equals|] ([|java:lang:reflect:Field|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b11f8.   v0:= instanceof @varname v3 @type [|java:lang:reflect:Field|];
#L0b11fc.   if v0 == 0 then goto L0b1220;
#L0b1200.   call temp:=  [|java:lang:reflect:Field.toString|](v2) @signature [|Ljava/lang/reflect/Field;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1206.   v0:= temp  @type object;
#L0b1208.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0b120e.   v1:= temp  @type object;
#L0b1210.   call temp:=  [|java:lang:String.equals|](v0, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b1216.   v0:= temp;
#L0b1218.   if v0 == 0 then goto L0b1220;
#L0b121c.   v0:= 1  @length 4;
#L0b121e.   return v0;
#L0b1220.   v0:= 0  @length 4;
#L0b1222.   goto L0b121e;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Field.get|] ([|java:lang:reflect:Field|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b1234.   v2:= v6.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1238.   v3:= v6.[|java:lang:reflect:Field.type|]   @type object;
#L0b123c.   v4:= v6.[|java:lang:reflect:Field.slot|] ;
#L0b1240.   v5:= v6.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1244.   v0:= v6  @type object;
#L0b1246.   v1:= v7  @type object;
#L0b1248.   call temp:=  [|java:lang:reflect:Field.getField|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/lang/reflect/Field;.getField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZ)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b124e.   v0:= temp  @type object;
#L0b1250.   return v0  @type object;

   }
    procedure [|java:lang:annotation:Annotation|] [|java:lang:reflect:Field.getAnnotation|] ([|java:lang:reflect:Field|] v2 @type (this), [|java:lang:Class|] v3 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1264.   if v3 != 0 then goto L0b1278;
#L0b1268.   v0:= new [|java:lang:NullPointerException|];
#L0b126c.   v1:= "annotationType == null" @type (object, string);
#L0b1270.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b1276.   throw v0;
#L0b1278.   v0:= v2.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b127c.   v1:= v2.[|java:lang:reflect:Field.slot|] ;
#L0b1280.   call temp:=  [|java:lang:reflect:Field.getAnnotation|](v0, v1, v3) @signature [|Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;ILjava/lang/Class;)Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Field|] @type static;
#L0b1286.   v0:= temp  @type object;
#L0b1288.   return v0  @type object;

   }
    procedure [|boolean|] [|java:lang:reflect:Field.getBoolean|] ([|java:lang:reflect:Field|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getBoolean:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b129c.   v2:= v7.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b12a0.   v3:= v7.[|java:lang:reflect:Field.type|]   @type object;
#L0b12a4.   v4:= v7.[|java:lang:reflect:Field.slot|] ;
#L0b12a8.   v5:= v7.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b12ac.   v6:= 90  @length 16;
#L0b12b0.   v0:= v7  @type object;
#L0b12b2.   v1:= v8  @type object;
#L0b12b4.   call temp:=  [|java:lang:reflect:Field.getZField|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Field;.getZField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)Z|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b12ba.   v0:= temp;
#L0b12bc.   return v0;

   }
    procedure [|byte|] [|java:lang:reflect:Field.getByte|] ([|java:lang:reflect:Field|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getByte:(Ljava/lang/Object;)B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b12d0.   v2:= v7.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b12d4.   v3:= v7.[|java:lang:reflect:Field.type|]   @type object;
#L0b12d8.   v4:= v7.[|java:lang:reflect:Field.slot|] ;
#L0b12dc.   v5:= v7.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b12e0.   v6:= 66  @length 16;
#L0b12e4.   v0:= v7  @type object;
#L0b12e6.   v1:= v8  @type object;
#L0b12e8.   call temp:=  [|java:lang:reflect:Field.getBField|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Field;.getBField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)B|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b12ee.   v0:= temp;
#L0b12f0.   return v0;

   }
    procedure [|char|] [|java:lang:reflect:Field.getChar|] ([|java:lang:reflect:Field|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getChar:(Ljava/lang/Object;)C|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b1304.   v2:= v7.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1308.   v3:= v7.[|java:lang:reflect:Field.type|]   @type object;
#L0b130c.   v4:= v7.[|java:lang:reflect:Field.slot|] ;
#L0b1310.   v5:= v7.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1314.   v6:= 67  @length 16;
#L0b1318.   v0:= v7  @type object;
#L0b131a.   v1:= v8  @type object;
#L0b131c.   call temp:=  [|java:lang:reflect:Field.getCField|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Field;.getCField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)C|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1322.   v0:= temp;
#L0b1324.   return v0;

   }
    procedure [|java:lang:annotation:Annotation|][] [|java:lang:reflect:Field.getDeclaredAnnotations|] ([|java:lang:reflect:Field|] v2 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getDeclaredAnnotations:()[Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1338.   v0:= v2.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b133c.   v1:= v2.[|java:lang:reflect:Field.slot|] ;
#L0b1340.   call temp:=  [|java:lang:reflect:Field.getDeclaredAnnotations|](v0, v1) @signature [|Ljava/lang/reflect/Field;.getDeclaredAnnotations:(Ljava/lang/Class;I)[Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Field|] @type static;
#L0b1346.   v0:= temp  @type object;
#L0b1348.   return v0  @type object;

   }
    procedure [|java:lang:Class|] [|java:lang:reflect:Field.getDeclaringClass|] ([|java:lang:reflect:Field|] v1 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b135c.   v0:= v1.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1360.   return v0  @type object;

   }
    procedure [|double|] [|java:lang:reflect:Field.getDouble|] ([|java:lang:reflect:Field|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getDouble:(Ljava/lang/Object;)D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b1374.   v2:= v7.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1378.   v3:= v7.[|java:lang:reflect:Field.type|]   @type object;
#L0b137c.   v4:= v7.[|java:lang:reflect:Field.slot|] ;
#L0b1380.   v5:= v7.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1384.   v6:= 68  @length 16;
#L0b1388.   v0:= v7  @type object;
#L0b138a.   v1:= v8  @type object;
#L0b138c.   call temp:=  [|java:lang:reflect:Field.getDField|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Field;.getDField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)D|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1392.   v0:= temp  @type wide;
#L0b1394.   return v0  @type wide;

   }
    procedure [|float|] [|java:lang:reflect:Field.getFloat|] ([|java:lang:reflect:Field|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getFloat:(Ljava/lang/Object;)F|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b13a8.   v2:= v7.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b13ac.   v3:= v7.[|java:lang:reflect:Field.type|]   @type object;
#L0b13b0.   v4:= v7.[|java:lang:reflect:Field.slot|] ;
#L0b13b4.   v5:= v7.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b13b8.   v6:= 70  @length 16;
#L0b13bc.   v0:= v7  @type object;
#L0b13be.   v1:= v8  @type object;
#L0b13c0.   call temp:=  [|java:lang:reflect:Field.getFField|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Field;.getFField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)F|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b13c6.   v0:= temp;
#L0b13c8.   return v0;

   }
    procedure [|java:lang:reflect:Type|] [|java:lang:reflect:Field.getGenericType|] ([|java:lang:reflect:Field|] v1 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getGenericType:()Ljava/lang/reflect/Type;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b13dc.   call temp:=  [|java:lang:reflect:Field.initGenericType|](v1) @signature [|Ljava/lang/reflect/Field;.initGenericType:()V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b13e2.   v0:= v1.[|java:lang:reflect:Field.genericType|]   @type object;
#L0b13e6.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getType|](v0) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b13ec.   v0:= temp  @type object;
#L0b13ee.   return v0  @type object;

   }
    procedure [|int|] [|java:lang:reflect:Field.getInt|] ([|java:lang:reflect:Field|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getInt:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b1400.   v2:= v7.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1404.   v3:= v7.[|java:lang:reflect:Field.type|]   @type object;
#L0b1408.   v4:= v7.[|java:lang:reflect:Field.slot|] ;
#L0b140c.   v5:= v7.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1410.   v6:= 73  @length 16;
#L0b1414.   v0:= v7  @type object;
#L0b1416.   v1:= v8  @type object;
#L0b1418.   call temp:=  [|java:lang:reflect:Field.getIField|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Field;.getIField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)I|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b141e.   v0:= temp;
#L0b1420.   return v0;

   }
    procedure [|long|] [|java:lang:reflect:Field.getLong|] ([|java:lang:reflect:Field|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getLong:(Ljava/lang/Object;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b1434.   v2:= v7.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1438.   v3:= v7.[|java:lang:reflect:Field.type|]   @type object;
#L0b143c.   v4:= v7.[|java:lang:reflect:Field.slot|] ;
#L0b1440.   v5:= v7.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1444.   v6:= 74  @length 16;
#L0b1448.   v0:= v7  @type object;
#L0b144a.   v1:= v8  @type object;
#L0b144c.   call temp:=  [|java:lang:reflect:Field.getJField|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Field;.getJField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)J|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1452.   v0:= temp  @type wide;
#L0b1454.   return v0  @type wide;

   }
    procedure [|int|] [|java:lang:reflect:Field.getModifiers|] ([|java:lang:reflect:Field|] v2 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1468.   v0:= v2.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b146c.   v1:= v2.[|java:lang:reflect:Field.slot|] ;
#L0b1470.   call temp:=  [|java:lang:reflect:Field.getFieldModifiers|](v2, v0, v1) @signature [|Ljava/lang/reflect/Field;.getFieldModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1476.   v0:= temp;
#L0b1478.   return v0;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Field.getName|] ([|java:lang:reflect:Field|] v1 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b148c.   v0:= v1.[|java:lang:reflect:Field.name|]   @type object;
#L0b1490.   return v0  @type object;

   }
    procedure [|short|] [|java:lang:reflect:Field.getShort|] ([|java:lang:reflect:Field|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getShort:(Ljava/lang/Object;)S|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b14a4.   v2:= v7.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b14a8.   v3:= v7.[|java:lang:reflect:Field.type|]   @type object;
#L0b14ac.   v4:= v7.[|java:lang:reflect:Field.slot|] ;
#L0b14b0.   v5:= v7.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b14b4.   v6:= 83  @length 16;
#L0b14b8.   v0:= v7  @type object;
#L0b14ba.   v1:= v8  @type object;
#L0b14bc.   call temp:=  [|java:lang:reflect:Field.getSField|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Field;.getSField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZC)S|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b14c2.   v0:= temp;
#L0b14c4.   return v0;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Field.getSignatureAttribute|] ([|java:lang:reflect:Field|] v3 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getSignatureAttribute:()Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b14d8.   v1:= v3.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b14dc.   v2:= v3.[|java:lang:reflect:Field.slot|] ;
#L0b14e0.   call temp:=  [|java:lang:reflect:Field.getSignatureAnnotation|](v3, v1, v2) @signature [|Ljava/lang/reflect/Field;.getSignatureAnnotation:(Ljava/lang/Class;I)[Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b14e6.   v0:= temp  @type object;
#L0b14e8.   if v0 != 0 then goto L0b14f0;
#L0b14ec.   v1:= 0  @length 4;
#L0b14ee.   return v1  @type object;
#L0b14f0.   call temp:=  [|org:apache:harmony:kernel:vm:StringUtils.combineStrings|](v0) @signature [|Lorg/apache/harmony/kernel/vm/StringUtils;.combineStrings:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:kernel:vm:StringUtils|] @type static;
#L0b14f6.   v1:= temp  @type object;
#L0b14f8.   goto L0b14ee;

   }
    procedure [|java:lang:Class|] [|java:lang:reflect:Field.getType|] ([|java:lang:reflect:Field|] v1 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b150c.   v0:= v1.[|java:lang:reflect:Field.type|]   @type object;
#L0b1510.   return v0  @type object;

   }
    procedure [|int|] [|java:lang:reflect:Field.hashCode|] ([|java:lang:reflect:Field|] v2 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1524.   v0:= v2.[|java:lang:reflect:Field.name|]   @type object;
#L0b1528.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b152e.   v0:= temp;
#L0b1530.   call temp:=  [|java:lang:reflect:Field.getDeclaringClass|](v2) @signature [|Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1536.   v1:= temp  @type object;
#L0b1538.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b153e.   v1:= temp  @type object;
#L0b1540.   call temp:=  [|java:lang:String.hashCode|](v1) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b1546.   v1:= temp;
#L0b1548.   v0:= v0 ^~ v1  @type int;
#L0b154a.   return v0;

   }
    procedure [|boolean|] [|java:lang:reflect:Field.isAnnotationPresent|] ([|java:lang:reflect:Field|] v2 @type (this), [|java:lang:Class|] v3 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.isAnnotationPresent:(Ljava/lang/Class;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b155c.   if v3 != 0 then goto L0b1570;
#L0b1560.   v0:= new [|java:lang:NullPointerException|];
#L0b1564.   v1:= "annotationType == null" @type (object, string);
#L0b1568.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b156e.   throw v0;
#L0b1570.   v0:= v2.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1574.   v1:= v2.[|java:lang:reflect:Field.slot|] ;
#L0b1578.   call temp:=  [|java:lang:reflect:Field.isAnnotationPresent|](v0, v1, v3) @signature [|Ljava/lang/reflect/Field;.isAnnotationPresent:(Ljava/lang/Class;ILjava/lang/Class;)Z|] @classDescriptor [|java:lang:reflect:Field|] @type static;
#L0b157e.   v0:= temp;
#L0b1580.   return v0;

   }
    procedure [|boolean|] [|java:lang:reflect:Field.isEnumConstant|] ([|java:lang:reflect:Field|] v3 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.isEnumConstant:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1594.   v1:= v3.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1598.   v2:= v3.[|java:lang:reflect:Field.slot|] ;
#L0b159c.   call temp:=  [|java:lang:reflect:Field.getFieldModifiers|](v3, v1, v2) @signature [|Ljava/lang/reflect/Field;.getFieldModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b15a2.   v0:= temp;
#L0b15a4.   v1:= v0 ^& 16384;
#L0b15a8.   if v1 == 0 then goto L0b15b0;
#L0b15ac.   v1:= 1  @length 4;
#L0b15ae.   return v1;
#L0b15b0.   v1:= 0  @length 4;
#L0b15b2.   goto L0b15ae;

   }
    procedure [|boolean|] [|java:lang:reflect:Field.isSynthetic|] ([|java:lang:reflect:Field|] v3 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.isSynthetic:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b15c4.   v1:= v3.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b15c8.   v2:= v3.[|java:lang:reflect:Field.slot|] ;
#L0b15cc.   call temp:=  [|java:lang:reflect:Field.getFieldModifiers|](v3, v1, v2) @signature [|Ljava/lang/reflect/Field;.getFieldModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b15d2.   v0:= temp;
#L0b15d4.   v1:= v0 ^& 4096;
#L0b15d8.   if v1 == 0 then goto L0b15e0;
#L0b15dc.   v1:= 1  @length 4;
#L0b15de.   return v1;
#L0b15e0.   v1:= 0  @length 4;
#L0b15e2.   goto L0b15de;

   }
    procedure [|void|] [|java:lang:reflect:Field.set|] ([|java:lang:reflect:Field|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|java:lang:Object|] v9 @type (object)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b15f4.   v2:= v7.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b15f8.   v3:= v7.[|java:lang:reflect:Field.type|]   @type object;
#L0b15fc.   v4:= v7.[|java:lang:reflect:Field.slot|] ;
#L0b1600.   v5:= v7.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1604.   v0:= v7  @type object;
#L0b1606.   v1:= v8  @type object;
#L0b1608.   v6:= v9  @type object;
#L0b160a.   call temp:=  [|java:lang:reflect:Field.setField|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Field;.setField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZLjava/lang/Object;)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1610.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.setBoolean|] ([|java:lang:reflect:Field|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|boolean|] v10) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setBoolean:(Ljava/lang/Object;Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b1624.   v2:= v8.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1628.   v3:= v8.[|java:lang:reflect:Field.type|]   @type object;
#L0b162c.   v4:= v8.[|java:lang:reflect:Field.slot|] ;
#L0b1630.   v5:= v8.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1634.   v6:= 90  @length 16;
#L0b1638.   v0:= v8  @type object;
#L0b163a.   v1:= v9  @type object;
#L0b163c.   v7:= v10;
#L0b163e.   call temp:=  [|java:lang:reflect:Field.setZField|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/lang/reflect/Field;.setZField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCZ)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1644.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.setByte|] ([|java:lang:reflect:Field|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|byte|] v10) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setByte:(Ljava/lang/Object;B)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b1658.   v2:= v8.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b165c.   v3:= v8.[|java:lang:reflect:Field.type|]   @type object;
#L0b1660.   v4:= v8.[|java:lang:reflect:Field.slot|] ;
#L0b1664.   v5:= v8.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1668.   v6:= 66  @length 16;
#L0b166c.   v0:= v8  @type object;
#L0b166e.   v1:= v9  @type object;
#L0b1670.   v7:= v10;
#L0b1672.   call temp:=  [|java:lang:reflect:Field.setBField|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/lang/reflect/Field;.setBField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCB)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1678.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.setChar|] ([|java:lang:reflect:Field|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|char|] v10) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setChar:(Ljava/lang/Object;C)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b168c.   v2:= v8.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1690.   v3:= v8.[|java:lang:reflect:Field.type|]   @type object;
#L0b1694.   v4:= v8.[|java:lang:reflect:Field.slot|] ;
#L0b1698.   v5:= v8.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b169c.   v6:= 67  @length 16;
#L0b16a0.   v0:= v8  @type object;
#L0b16a2.   v1:= v9  @type object;
#L0b16a4.   v7:= v10;
#L0b16a6.   call temp:=  [|java:lang:reflect:Field.setCField|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/lang/reflect/Field;.setCField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCC)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b16ac.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.setDouble|] ([|java:lang:reflect:Field|] v9 @type (this), [|java:lang:Object|] v10 @type (object), [|double|] v11) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setDouble:(Ljava/lang/Object;D)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0b16c0.   v2:= v9.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b16c4.   v3:= v9.[|java:lang:reflect:Field.type|]   @type object;
#L0b16c8.   v4:= v9.[|java:lang:reflect:Field.slot|] ;
#L0b16cc.   v5:= v9.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b16d0.   v6:= 68  @length 16;
#L0b16d4.   v0:= v9  @type object;
#L0b16d6.   v1:= v10  @type object;
#L0b16d8.   v7:= v11  @type wide;
#L0b16da.   call temp:=  [|java:lang:reflect:Field.setDField|](v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Ljava/lang/reflect/Field;.setDField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCD)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b16e0.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.setFloat|] ([|java:lang:reflect:Field|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|float|] v10) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setFloat:(Ljava/lang/Object;F)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b16f4.   v2:= v8.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b16f8.   v3:= v8.[|java:lang:reflect:Field.type|]   @type object;
#L0b16fc.   v4:= v8.[|java:lang:reflect:Field.slot|] ;
#L0b1700.   v5:= v8.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1704.   v6:= 70  @length 16;
#L0b1708.   v0:= v8  @type object;
#L0b170a.   v1:= v9  @type object;
#L0b170c.   v7:= v10;
#L0b170e.   call temp:=  [|java:lang:reflect:Field.setFField|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/lang/reflect/Field;.setFField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCF)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1714.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.setInt|] ([|java:lang:reflect:Field|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|int|] v10) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setInt:(Ljava/lang/Object;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b1728.   v2:= v8.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b172c.   v3:= v8.[|java:lang:reflect:Field.type|]   @type object;
#L0b1730.   v4:= v8.[|java:lang:reflect:Field.slot|] ;
#L0b1734.   v5:= v8.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b1738.   v6:= 73  @length 16;
#L0b173c.   v0:= v8  @type object;
#L0b173e.   v1:= v9  @type object;
#L0b1740.   v7:= v10;
#L0b1742.   call temp:=  [|java:lang:reflect:Field.setIField|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/lang/reflect/Field;.setIField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCI)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b1748.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.setLong|] ([|java:lang:reflect:Field|] v9 @type (this), [|java:lang:Object|] v10 @type (object), [|long|] v11) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setLong:(Ljava/lang/Object;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0b175c.   v2:= v9.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1760.   v3:= v9.[|java:lang:reflect:Field.type|]   @type object;
#L0b1764.   v4:= v9.[|java:lang:reflect:Field.slot|] ;
#L0b1768.   v5:= v9.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b176c.   v6:= 74  @length 16;
#L0b1770.   v0:= v9  @type object;
#L0b1772.   v1:= v10  @type object;
#L0b1774.   v7:= v11  @type wide;
#L0b1776.   call temp:=  [|java:lang:reflect:Field.setJField|](v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Ljava/lang/reflect/Field;.setJField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCJ)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b177c.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Field.setShort|] ([|java:lang:reflect:Field|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|short|] v10) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.setShort:(Ljava/lang/Object;S)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b1790.   v2:= v8.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b1794.   v3:= v8.[|java:lang:reflect:Field.type|]   @type object;
#L0b1798.   v4:= v8.[|java:lang:reflect:Field.slot|] ;
#L0b179c.   v5:= v8.[|java:lang:reflect:Field.flag|]   @boolean;
#L0b17a0.   v6:= 83  @length 16;
#L0b17a4.   v0:= v8  @type object;
#L0b17a6.   v1:= v9  @type object;
#L0b17a8.   v7:= v10;
#L0b17aa.   call temp:=  [|java:lang:reflect:Field.setSField|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/lang/reflect/Field;.setSField:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;IZCS)V|] @classDescriptor [|java:lang:reflect:Field|] @type direct;
#L0b17b0.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Field.toGenericString|] ([|java:lang:reflect:Field|] v4 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.toGenericString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b17c4.   v3:= 32  @length 16;
#L0b17c8.   v1:= new [|java:lang:StringBuilder|];
#L0b17cc.   v2:= 80  @length 16;
#L0b17d0.   call temp:=  [|java:lang:StringBuilder.<init>|](v1, v2) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b17d6.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v4) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b17dc.   v0:= temp;
#L0b17de.   if v0 == 0 then goto L0b17f8;
#L0b17e2.   call temp:=  [|java:lang:reflect:Modifier.toString|](v0) @signature [|Ljava/lang/reflect/Modifier;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b17e8.   v2:= temp  @type object;
#L0b17ea.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b17f0.   v2:= temp  @type object;
#L0b17f2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b17f8.   call temp:=  [|java:lang:reflect:Field.getGenericType|](v4) @signature [|Ljava/lang/reflect/Field;.getGenericType:()Ljava/lang/reflect/Type;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b17fe.   v2:= temp  @type object;
#L0b1800.   call temp:=  [|java:lang:reflect:Field.appendGenericType|](v4, v1, v2) @signature [|Ljava/lang/reflect/Field;.appendGenericType:(Ljava/lang/StringBuilder;Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1806.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b180c.   call temp:=  [|java:lang:reflect:Field.getDeclaringClass|](v4) @signature [|Ljava/lang/reflect/Field;.getDeclaringClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1812.   v2:= temp  @type object;
#L0b1814.   call temp:=  [|java:lang:Class.getName|](v2) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b181a.   v2:= temp  @type object;
#L0b181c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1822.   v2:= temp  @type object;
#L0b1824.   v3:= 46  @length 16;
#L0b1828.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b182e.   v2:= temp  @type object;
#L0b1830.   call temp:=  [|java:lang:reflect:Field.getName|](v4) @signature [|Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1836.   v3:= temp  @type object;
#L0b1838.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b183e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1844.   v2:= temp  @type object;
#L0b1846.   return v2  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Field.toString|] ([|java:lang:reflect:Field|] v3 @type (this)) @owner [|java:lang:reflect:Field|] @signature [|Ljava/lang/reflect/Field;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1858.   v2:= 32  @length 16;
#L0b185c.   v0:= new [|java:lang:StringBuilder|];
#L0b1860.   call temp:=  [|java:lang:reflect:Field.getModifiers|](v3) @signature [|Ljava/lang/reflect/Field;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1866.   v1:= temp;
#L0b1868.   call temp:=  [|java:lang:reflect:Modifier.toString|](v1) @signature [|Ljava/lang/reflect/Modifier;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b186e.   v1:= temp  @type object;
#L0b1870.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b1876.   call temp:=  [|java:lang:StringBuilder.length|](v0) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b187c.   v1:= temp;
#L0b187e.   if v1 == 0 then goto L0b1888;
#L0b1882.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1888.   v1:= v3.[|java:lang:reflect:Field.type|]   @type object;
#L0b188c.   call temp:=  [|java:lang:reflect:Field.appendTypeName|](v3, v0, v1) @signature [|Ljava/lang/reflect/Field;.appendTypeName:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b1892.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1898.   v1:= v3.[|java:lang:reflect:Field.declaringClass|]   @type object;
#L0b189c.   call temp:=  [|java:lang:reflect:Field.appendTypeName|](v3, v0, v1) @signature [|Ljava/lang/reflect/Field;.appendTypeName:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V|] @classDescriptor [|java:lang:reflect:Field|] @type virtual;
#L0b18a2.   v1:= 46  @length 16;
#L0b18a6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b18ac.   v1:= v3.[|java:lang:reflect:Field.name|]   @type object;
#L0b18b0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b18b6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b18bc.   v1:= temp  @type object;
#L0b18be.   return v1  @type object;

   }
record [|java:lang:reflect:GenericArrayType|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:lang:reflect:Type|] {
   }
    procedure [|java:lang:reflect:Type|] [|java:lang:reflect:GenericArrayType.getGenericComponentType|] () @owner [|java:lang:reflect:GenericArrayType|] @signature [|Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:lang:reflect:GenericSignatureFormatError|]  @type class @AccessFlag PUBLIC  extends [|java:lang:ClassFormatError|] {
   }
      global [|long|] @@[|java:lang:reflect:GenericSignatureFormatError.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:reflect:GenericSignatureFormatError.<init>|] ([|java:lang:reflect:GenericSignatureFormatError|] v0 @type (this)) @owner [|java:lang:reflect:GenericSignatureFormatError|] @signature [|Ljava/lang/reflect/GenericSignatureFormatError;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b18d0.   call temp:=  [|java:lang:ClassFormatError.<init>|](v0) @signature [|Ljava/lang/ClassFormatError;.<init>:()V|] @classDescriptor [|java:lang:ClassFormatError|] @type direct;
#L0b18d6.   return @void ;

   }
record [|java:lang:reflect:InvocationHandler|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:Object|] [|java:lang:reflect:InvocationHandler.invoke|] ([|java:lang:Object|] v0 @type (object), [|java:lang:reflect:Method|] v1 @type (object), [|java:lang:Object|][] v2 @type (object)) @owner [|java:lang:reflect:InvocationHandler|] @signature [|Ljava/lang/reflect/InvocationHandler;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:lang:reflect:InvocationTargetException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
      [|java:lang:Throwable|] [|java:lang:reflect:InvocationTargetException.target|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|java:lang:reflect:InvocationTargetException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:reflect:InvocationTargetException.<init>|] ([|java:lang:reflect:InvocationTargetException|] v1 @type (this)) @owner [|java:lang:reflect:InvocationTargetException|] @signature [|Ljava/lang/reflect/InvocationTargetException;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b18e8.   v0:= 0  @length 4;
#L0b18ea.   v0:= ([|java:lang:Throwable|])v0;
#L0b18ee.   call temp:=  [|java:lang:Exception.<init>|](v1, v0) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L0b18f4.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:InvocationTargetException.<init>|] ([|java:lang:reflect:InvocationTargetException|] v1 @type (this), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:lang:reflect:InvocationTargetException|] @signature [|Ljava/lang/reflect/InvocationTargetException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b1908.   v0:= 0  @length 4;
#L0b190a.   call temp:=  [|java:lang:Exception.<init>|](v1, v0, v2) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L0b1910.   v1.[|java:lang:reflect:InvocationTargetException.target|]  := v2 @type object;
#L0b1914.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:InvocationTargetException.<init>|] ([|java:lang:reflect:InvocationTargetException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:reflect:InvocationTargetException|] @signature [|Ljava/lang/reflect/InvocationTargetException;.<init>:(Ljava/lang/Throwable;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b1928.   call temp:=  [|java:lang:Exception.<init>|](v0, v2, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L0b192e.   v0.[|java:lang:reflect:InvocationTargetException.target|]  := v1 @type object;
#L0b1932.   return @void ;

   }
    procedure [|java:lang:Throwable|] [|java:lang:reflect:InvocationTargetException.getCause|] ([|java:lang:reflect:InvocationTargetException|] v1 @type (this)) @owner [|java:lang:reflect:InvocationTargetException|] @signature [|Ljava/lang/reflect/InvocationTargetException;.getCause:()Ljava/lang/Throwable;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1944.   v0:= v1.[|java:lang:reflect:InvocationTargetException.target|]   @type object;
#L0b1948.   return v0  @type object;

   }
    procedure [|java:lang:Throwable|] [|java:lang:reflect:InvocationTargetException.getTargetException|] ([|java:lang:reflect:InvocationTargetException|] v1 @type (this)) @owner [|java:lang:reflect:InvocationTargetException|] @signature [|Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b195c.   v0:= v1.[|java:lang:reflect:InvocationTargetException.target|]   @type object;
#L0b1960.   return v0  @type object;

   }
record [|java:lang:reflect:MalformedParameterizedTypeException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:RuntimeException|] {
   }
      global [|long|] @@[|java:lang:reflect:MalformedParameterizedTypeException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:reflect:MalformedParameterizedTypeException.<init>|] ([|java:lang:reflect:MalformedParameterizedTypeException|] v0 @type (this)) @owner [|java:lang:reflect:MalformedParameterizedTypeException|] @signature [|Ljava/lang/reflect/MalformedParameterizedTypeException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b1974.   call temp:=  [|java:lang:RuntimeException.<init>|](v0) @signature [|Ljava/lang/RuntimeException;.<init>:()V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0b197a.   return @void ;

   }
record [|java:lang:reflect:Method$1|]  @type class @AccessFlag FINAL extends  [|java:util:Comparator|] {
   }
    procedure [|void|] [|java:lang:reflect:Method$1.<init>|] ([|java:lang:reflect:Method$1|] v0 @type (this)) @owner [|java:lang:reflect:Method$1|] @signature [|Ljava/lang/reflect/Method$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0b198c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b1992.   return @void ;

   }
    procedure [|int|] [|java:lang:reflect:Method$1.compare|] ([|java:lang:reflect:Method$1|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:reflect:Method$1|] @signature [|Ljava/lang/reflect/Method$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0b19a4.   v2:= ([|java:lang:reflect:Method|])v2;
#L0b19a8.   v3:= ([|java:lang:reflect:Method|])v3;
#L0b19ac.   call temp:=  [|java:lang:reflect:Method$1.compare|](v1, v2, v3) @signature [|Ljava/lang/reflect/Method$1;.compare:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I|] @classDescriptor [|java:lang:reflect:Method$1|] @type virtual;
#L0b19b2.   v0:= temp;
#L0b19b4.   return v0;

   }
    procedure [|int|] [|java:lang:reflect:Method$1.compare|] ([|java:lang:reflect:Method$1|] v7 @type (this), [|java:lang:reflect:Method|] v8 @type (object), [|java:lang:reflect:Method|] v9 @type (object)) @owner [|java:lang:reflect:Method$1|] @signature [|Ljava/lang/reflect/Method$1;.compare:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b19c8.   call temp:=  [|java:lang:reflect:Method.access$000|](v8) @signature [|Ljava/lang/reflect/Method;.access$000:(Ljava/lang/reflect/Method;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b19ce.   v5:= temp  @type object;
#L0b19d0.   call temp:=  [|java:lang:reflect:Method.access$000|](v9) @signature [|Ljava/lang/reflect/Method;.access$000:(Ljava/lang/reflect/Method;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b19d6.   v6:= temp  @type object;
#L0b19d8.   call temp:=  [|java:lang:String.compareTo|](v5, v6) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b19de.   v2:= temp;
#L0b19e0.   if v2 == 0 then goto L0b19e8;
#L0b19e4.   v5:= v2;
#L0b19e6.   return v5;
#L0b19e8.   call temp:=  [|java:lang:reflect:Method.access$100|](v8) @signature [|Ljava/lang/reflect/Method;.access$100:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b19ee.   v0:= temp  @type object;
#L0b19f0.   call temp:=  [|java:lang:reflect:Method.access$100|](v9) @signature [|Ljava/lang/reflect/Method;.access$100:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b19f6.   v1:= temp  @type object;
#L0b19f8.   v5:= v0.length;
#L0b19fa.   v6:= v1.length;
#L0b19fc.   call temp:=  [|java:lang:Math.min|](v5, v6) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b1a02.   v4:= temp;
#L0b1a04.   v3:= 0  @length 4;
#L0b1a06.   if v3 >= v4 then goto L0b1a38;
#L0b1a0a.   v5:= v0[v3]  @type object;
#L0b1a0e.   call temp:=  [|java:lang:Class.getName|](v5) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b1a14.   v5:= temp  @type object;
#L0b1a16.   v6:= v1[v3]  @type object;
#L0b1a1a.   call temp:=  [|java:lang:Class.getName|](v6) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b1a20.   v6:= temp  @type object;
#L0b1a22.   call temp:=  [|java:lang:String.compareTo|](v5, v6) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b1a28.   v2:= temp;
#L0b1a2a.   if v2 == 0 then goto L0b1a32;
#L0b1a2e.   v5:= v2;
#L0b1a30.   goto L0b19e6;
#L0b1a32.   v3:= v3 + 1;
#L0b1a36.   goto L0b1a06;
#L0b1a38.   v5:= v0.length;
#L0b1a3a.   v6:= v1.length;
#L0b1a3c.   if v5 == v6 then goto L0b1a48;
#L0b1a40.   v5:= v0.length;
#L0b1a42.   v6:= v1.length;
#L0b1a44.   v5:= v5 - v6  @type int;
#L0b1a46.   goto L0b19e6;
#L0b1a48.   call temp:=  [|java:lang:reflect:Method.getReturnType|](v8) @signature [|Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b1a4e.   v5:= temp  @type object;
#L0b1a50.   call temp:=  [|java:lang:Class.getName|](v5) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b1a56.   v5:= temp  @type object;
#L0b1a58.   call temp:=  [|java:lang:reflect:Method.getReturnType|](v9) @signature [|Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b1a5e.   v6:= temp  @type object;
#L0b1a60.   call temp:=  [|java:lang:Class.getName|](v6) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b1a66.   v6:= temp  @type object;
#L0b1a68.   call temp:=  [|java:lang:String.compareTo|](v5, v6) @signature [|Ljava/lang/String;.compareTo:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b1a6e.   v5:= temp;
#L0b1a70.   goto L0b19e6;

   }
record [|java:lang:reflect:Method|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:lang:reflect:AccessibleObject|], [|java:lang:reflect:GenericDeclaration|], [|java:lang:reflect:Member|] {
      [|java:lang:Class|] [|java:lang:reflect:Method.declaringClass|]    @AccessFlag PRIVATE;
      [|java:lang:Class|][] [|java:lang:reflect:Method.exceptionTypes|]    @AccessFlag PRIVATE;
      [|java:lang:reflect:TypeVariable|][] [|java:lang:reflect:Method.formalTypeParameters|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:luni:lang:reflect:ListOfTypes|] [|java:lang:reflect:Method.genericExceptionTypes|]    @AccessFlag PRIVATE;
      [|org:apache:harmony:luni:lang:reflect:ListOfTypes|] [|java:lang:reflect:Method.genericParameterTypes|]    @AccessFlag PRIVATE;
      [|java:lang:reflect:Type|] [|java:lang:reflect:Method.genericReturnType|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:lang:reflect:Method.genericTypesAreInitialized|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:lang:String|] [|java:lang:reflect:Method.name|]    @AccessFlag PRIVATE;
      [|java:lang:Class|][] [|java:lang:reflect:Method.parameterTypes|]    @AccessFlag PRIVATE;
      [|java:lang:Class|] [|java:lang:reflect:Method.returnType|]    @AccessFlag PRIVATE;
      [|int|] [|java:lang:reflect:Method.slot|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:annotation:Annotation|][] @@[|java:lang:reflect:Method.NO_ANNOTATIONS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:Comparator|] @@[|java:lang:reflect:Method.ORDER_BY_SIGNATURE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:lang:reflect:Method.<clinit>|] () @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b1a84.   v0:= new [|java:lang:reflect:Method$1|];
#L0b1a88.   call temp:=  [|java:lang:reflect:Method$1.<init>|](v0) @signature [|Ljava/lang/reflect/Method$1;.<init>:()V|] @classDescriptor [|java:lang:reflect:Method$1|] @type direct;
#L0b1a8e.   @@[|java:lang:reflect:Method.ORDER_BY_SIGNATURE|] := v0  @type object;
#L0b1a92.   v0:= 0  @length 4;
#L0b1a94.   v0:= new [|java:lang:annotation:Annotation|][v0];
#L0b1a98.   @@[|java:lang:reflect:Method.NO_ANNOTATIONS|] := v0  @type object;
#L0b1a9c.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Method.<init>|] ([|java:lang:reflect:Method|] v1 @type (this), [|java:lang:Class|] v2 @type (object), [|java:lang:Class|][] v3 @type (object), [|java:lang:Class|][] v4 @type (object), [|java:lang:Class|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|int|] v7) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.<init>:(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b1ab0.   call temp:=  [|java:lang:reflect:AccessibleObject.<init>|](v1) @signature [|Ljava/lang/reflect/AccessibleObject;.<init>:()V|] @classDescriptor [|java:lang:reflect:AccessibleObject|] @type direct;
#L0b1ab6.   v0:= 0  @length 4;
#L0b1ab8.   v1.[|java:lang:reflect:Method.genericTypesAreInitialized|]  := v0 @boolean;
#L0b1abc.   v1.[|java:lang:reflect:Method.declaringClass|]  := v2 @type object;
#L0b1ac0.   v1.[|java:lang:reflect:Method.name|]  := v6 @type object;
#L0b1ac4.   v1.[|java:lang:reflect:Method.slot|]  := v7;
#L0b1ac8.   v1.[|java:lang:reflect:Method.parameterTypes|]  := v3 @type object;
#L0b1acc.   v1.[|java:lang:reflect:Method.exceptionTypes|]  := v4 @type object;
#L0b1ad0.   v1.[|java:lang:reflect:Method.returnType|]  := v5 @type object;
#L0b1ad4.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Method.<init>|] ([|java:lang:reflect:Method|] v7 @type (this), [|java:lang:reflect:Method|] v8 @type (object)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.<init>:(Ljava/lang/reflect/Method;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b1ae8.   v1:= v8.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1aec.   v2:= v8.[|java:lang:reflect:Method.parameterTypes|]   @type object;
#L0b1af0.   v3:= v8.[|java:lang:reflect:Method.exceptionTypes|]   @type object;
#L0b1af4.   v4:= v8.[|java:lang:reflect:Method.returnType|]   @type object;
#L0b1af8.   v5:= v8.[|java:lang:reflect:Method.name|]   @type object;
#L0b1afc.   v6:= v8.[|java:lang:reflect:Method.slot|] ;
#L0b1b00.   v0:= v7  @type object;
#L0b1b02.   call temp:=  [|java:lang:reflect:Method.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/lang/reflect/Method;.<init>:(Ljava/lang/Class;[Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;I)V|] @classDescriptor [|java:lang:reflect:Method|] @type direct;
#L0b1b08.   v0:= v8.[|java:lang:reflect:Method.flag|]   @boolean;
#L0b1b0c.   if v0 == 0 then goto L0b1b16;
#L0b1b10.   v0:= 1  @length 4;
#L0b1b12.   v7.[|java:lang:reflect:Method.flag|]  := v0 @boolean;
#L0b1b16.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Method.access$000|] ([|java:lang:reflect:Method|] v1 @type (object)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.access$000:(Ljava/lang/reflect/Method;)Ljava/lang/String;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L0b1b28.   v0:= v1.[|java:lang:reflect:Method.name|]   @type object;
#L0b1b2c.   return v0  @type object;

   }
    procedure [|java:lang:Class|][] [|java:lang:reflect:Method.access$100|] ([|java:lang:reflect:Method|] v1 @type (object)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.access$100:(Ljava/lang/reflect/Method;)[Ljava/lang/Class;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L0b1b40.   v0:= v1.[|java:lang:reflect:Method.parameterTypes|]   @type object;
#L0b1b44.   return v0  @type object;

   }
    procedure [|java:lang:annotation:Annotation|] [|java:lang:reflect:Method.getAnnotation|] ([|java:lang:Class|] v0 @type (object), [|int|] v1, [|java:lang:Class|] v2 @type (object)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getAnnotation:(Ljava/lang/Class;ILjava/lang/Class;)Ljava/lang/annotation/Annotation;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:annotation:Annotation|][] [|java:lang:reflect:Method.getDeclaredAnnotations|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getDeclaredAnnotations:(Ljava/lang/Class;I)[Ljava/lang/annotation/Annotation;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Method.getDefaultValue|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getDefaultValue:(Ljava/lang/Class;I)Ljava/lang/Object;|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|int|] [|java:lang:reflect:Method.getMethodModifiers|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getMethodModifiers:(Ljava/lang/Class;I)I|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:annotation:Annotation|][][] [|java:lang:reflect:Method.getParameterAnnotations|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getParameterAnnotations:(Ljava/lang/Class;I)[[Ljava/lang/annotation/Annotation;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:lang:reflect:Method.getSignature|] ([|java:lang:reflect:Method|] v3 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getSignature:()Ljava/lang/String;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1b58.   v1:= new [|java:lang:StringBuilder|];
#L0b1b5c.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b1b62.   v2:= 40  @length 16;
#L0b1b66.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1b6c.   v0:= 0  @length 4;
#L0b1b6e.   v2:= v3.[|java:lang:reflect:Method.parameterTypes|]   @type object;
#L0b1b72.   v2:= v2.length;
#L0b1b74.   if v0 >= v2 then goto L0b1b94;
#L0b1b78.   v2:= v3.[|java:lang:reflect:Method.parameterTypes|]   @type object;
#L0b1b7c.   v2:= v2[v0]  @type object;
#L0b1b80.   call temp:=  [|java:lang:reflect:Method.getSignature|](v3, v2) @signature [|Ljava/lang/reflect/Method;.getSignature:(Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b1b86.   v2:= temp  @type object;
#L0b1b88.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1b8e.   v0:= v0 + 1;
#L0b1b92.   goto L0b1b6e;
#L0b1b94.   v2:= 41  @length 16;
#L0b1b98.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1b9e.   v2:= v3.[|java:lang:reflect:Method.returnType|]   @type object;
#L0b1ba2.   call temp:=  [|java:lang:reflect:Method.getSignature|](v3, v2) @signature [|Ljava/lang/reflect/Method;.getSignature:(Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b1ba8.   v2:= temp  @type object;
#L0b1baa.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1bb0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b1bb6.   v2:= temp  @type object;
#L0b1bb8.   return v2  @type object;

   }
    procedure [|java:lang:Object|][] [|java:lang:reflect:Method.getSignatureAnnotation|] ([|java:lang:Class|] v0 @type (object), [|int|] v1) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getSignatureAnnotation:(Ljava/lang/Class;I)[Ljava/lang/Object;|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:lang:reflect:Method.initGenericTypes|] ([|java:lang:reflect:Method|] v3 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.initGenericTypes:()V|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1bcc.   (@monitorenter v3)
#L0b1bce.   v2:= v3.[|java:lang:reflect:Method.genericTypesAreInitialized|]   @boolean;
#L0b1bd2.   if v2 != 0 then goto L0b1c24;
#L0b1bd6.   call temp:=  [|java:lang:reflect:Method.getSignatureAttribute|](v3) @signature [|Ljava/lang/reflect/Method;.getSignatureAttribute:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b1bdc.   v1:= temp  @type object;
#L0b1bde.   v0:= new [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser|];
#L0b1be2.   v2:= v3.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1be6.   call temp:=  [|java:lang:Class.getClassLoader|](v2) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b1bec.   v2:= temp  @type object;
#L0b1bee.   call temp:=  [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.<init>|](v0, v2) @signature [|Lorg/apache/harmony/luni/lang/reflect/GenericSignatureParser;.<init>:(Ljava/lang/ClassLoader;)V|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser|] @type direct;
#L0b1bf4.   v2:= v3.[|java:lang:reflect:Method.exceptionTypes|]   @type object;
#L0b1bf8.   call temp:=  [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.parseForMethod|](v0, v3, v1, v2) @signature [|Lorg/apache/harmony/luni/lang/reflect/GenericSignatureParser;.parseForMethod:(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/Class;)V|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:GenericSignatureParser|] @type virtual;
#L0b1bfe.   v2:= v0.[|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.formalTypeParameters|]   @type object;
#L0b1c02.   v3.[|java:lang:reflect:Method.formalTypeParameters|]  := v2 @type object;
#L0b1c06.   v2:= v0.[|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.parameterTypes|]   @type object;
#L0b1c0a.   v3.[|java:lang:reflect:Method.genericParameterTypes|]  := v2 @type object;
#L0b1c0e.   v2:= v0.[|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.exceptionTypes|]   @type object;
#L0b1c12.   v3.[|java:lang:reflect:Method.genericExceptionTypes|]  := v2 @type object;
#L0b1c16.   v2:= v0.[|org:apache:harmony:luni:lang:reflect:GenericSignatureParser.returnType|]   @type object;
#L0b1c1a.   v3.[|java:lang:reflect:Method.genericReturnType|]  := v2 @type object;
#L0b1c1e.   v2:= 1  @length 4;
#L0b1c20.   v3.[|java:lang:reflect:Method.genericTypesAreInitialized|]  := v2 @boolean;
#L0b1c24.   (@monitorexit v3)
#L0b1c26.   return @void ;
#L0b1c28.   v2:= Exception  @type object;
#L0b1c2a.   (@monitorexit v3)
#L0b1c2c.   throw v2;
  catch  [|any|] @[L0b1bce..L0b1c24] goto L0b1c28;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Method.invokeNative|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|][] v1 @type (object), [|java:lang:Class|] v2 @type (object), [|java:lang:Class|][] v3 @type (object), [|java:lang:Class|] v4 @type (object), [|int|] v5, [|boolean|] v6) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.invokeNative:(Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/Class;IZ)Ljava/lang/Object;|] @Access PRIVATE_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:lang:reflect:Method.isAnnotationPresent|] ([|java:lang:Class|] v0 @type (object), [|int|] v1, [|java:lang:Class|] v2 @type (object)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.isAnnotationPresent:(Ljava/lang/Class;ILjava/lang/Class;)Z|] @Access STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:annotation:Annotation|][][] [|java:lang:reflect:Method.noAnnotations|] ([|int|] v3) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.noAnnotations:(I)[[Ljava/lang/annotation/Annotation;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1c4c.   v0:= new [|java:lang:annotation:Annotation|][v3][];
#L0b1c50.   v1:= 0  @length 4;
#L0b1c52.   if v1 >= v3 then goto L0b1c64;
#L0b1c56.   v2:= @@[|java:lang:reflect:Method.NO_ANNOTATIONS|]   @type object;
#L0b1c5a.   v0[v1]:= v2  @type object;
#L0b1c5e.   v1:= v1 + 1;
#L0b1c62.   goto L0b1c52;
#L0b1c64.   return v0  @type object;

   }
    procedure [|boolean|] [|java:lang:reflect:Method.equals|] ([|java:lang:reflect:Method|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1c78.   v0:= instanceof @varname v3 @type [|java:lang:reflect:Method|];
#L0b1c7c.   if v0 == 0 then goto L0b1ca0;
#L0b1c80.   call temp:=  [|java:lang:reflect:Method.toString|](v2) @signature [|Ljava/lang/reflect/Method;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b1c86.   v0:= temp  @type object;
#L0b1c88.   call temp:=  [|java:lang:Object.toString|](v3) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0b1c8e.   v1:= temp  @type object;
#L0b1c90.   call temp:=  [|java:lang:String.equals|](v0, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b1c96.   v0:= temp;
#L0b1c98.   if v0 == 0 then goto L0b1ca0;
#L0b1c9c.   v0:= 1  @length 4;
#L0b1c9e.   return v0;
#L0b1ca0.   v0:= 0  @length 4;
#L0b1ca2.   goto L0b1c9e;

   }
    procedure [|java:lang:annotation:Annotation|] [|java:lang:reflect:Method.getAnnotation|] ([|java:lang:reflect:Method|] v2 @type (this), [|java:lang:Class|] v3 @type (object)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1cb4.   if v3 != 0 then goto L0b1cc8;
#L0b1cb8.   v0:= new [|java:lang:NullPointerException|];
#L0b1cbc.   v1:= "annotationType == null" @type (object, string);
#L0b1cc0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b1cc6.   throw v0;
#L0b1cc8.   v0:= v2.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1ccc.   v1:= v2.[|java:lang:reflect:Method.slot|] ;
#L0b1cd0.   call temp:=  [|java:lang:reflect:Method.getAnnotation|](v0, v1, v3) @signature [|Ljava/lang/reflect/Method;.getAnnotation:(Ljava/lang/Class;ILjava/lang/Class;)Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1cd6.   v0:= temp  @type object;
#L0b1cd8.   return v0  @type object;

   }
    procedure [|java:lang:annotation:Annotation|][] [|java:lang:reflect:Method.getDeclaredAnnotations|] ([|java:lang:reflect:Method|] v2 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getDeclaredAnnotations:()[Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1cec.   v0:= v2.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1cf0.   v1:= v2.[|java:lang:reflect:Method.slot|] ;
#L0b1cf4.   call temp:=  [|java:lang:reflect:Method.getDeclaredAnnotations|](v0, v1) @signature [|Ljava/lang/reflect/Method;.getDeclaredAnnotations:(Ljava/lang/Class;I)[Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1cfa.   v0:= temp  @type object;
#L0b1cfc.   return v0  @type object;

   }
    procedure [|java:lang:Class|] [|java:lang:reflect:Method.getDeclaringClass|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1d10.   v0:= v1.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1d14.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Method.getDefaultValue|] ([|java:lang:reflect:Method|] v2 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getDefaultValue:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1d28.   v0:= v2.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1d2c.   v1:= v2.[|java:lang:reflect:Method.slot|] ;
#L0b1d30.   call temp:=  [|java:lang:reflect:Method.getDefaultValue|](v2, v0, v1) @signature [|Ljava/lang/reflect/Method;.getDefaultValue:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type direct;
#L0b1d36.   v0:= temp  @type object;
#L0b1d38.   return v0  @type object;

   }
    procedure [|java:lang:Class|][] [|java:lang:reflect:Method.getExceptionTypes|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getExceptionTypes:()[Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1d4c.   v0:= v1.[|java:lang:reflect:Method.exceptionTypes|]   @type object;
#L0b1d50.   if v0 != 0 then goto L0b1d5a;
#L0b1d54.   v0:= @@[|libcore:util:EmptyArray.CLASS|]   @type object;
#L0b1d58.   return v0  @type object;
#L0b1d5a.   v0:= v1.[|java:lang:reflect:Method.exceptionTypes|]   @type object;
#L0b1d5e.   call temp:=  [|java:lang:Class[].clone|](v0) @signature [|[Ljava/lang/Class;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class[]|] @type virtual;
#L0b1d64.   v0:= temp  @type object;
#L0b1d66.   v0:= ([|java:lang:Class|][])v0;
#L0b1d6a.   goto L0b1d58;

   }
    procedure [|java:lang:reflect:Type|][] [|java:lang:reflect:Method.getGenericExceptionTypes|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getGenericExceptionTypes:()[Ljava/lang/reflect/Type;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1d7c.   call temp:=  [|java:lang:reflect:Method.initGenericTypes|](v1) @signature [|Ljava/lang/reflect/Method;.initGenericTypes:()V|] @classDescriptor [|java:lang:reflect:Method|] @type direct;
#L0b1d82.   v0:= v1.[|java:lang:reflect:Method.genericExceptionTypes|]   @type object;
#L0b1d86.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getClonedTypeArray|](v0) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getClonedTypeArray:(Lorg/apache/harmony/luni/lang/reflect/ListOfTypes;)[Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b1d8c.   v0:= temp  @type object;
#L0b1d8e.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Type|][] [|java:lang:reflect:Method.getGenericParameterTypes|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1da0.   call temp:=  [|java:lang:reflect:Method.initGenericTypes|](v1) @signature [|Ljava/lang/reflect/Method;.initGenericTypes:()V|] @classDescriptor [|java:lang:reflect:Method|] @type direct;
#L0b1da6.   v0:= v1.[|java:lang:reflect:Method.genericParameterTypes|]   @type object;
#L0b1daa.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getClonedTypeArray|](v0) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getClonedTypeArray:(Lorg/apache/harmony/luni/lang/reflect/ListOfTypes;)[Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b1db0.   v0:= temp  @type object;
#L0b1db2.   return v0  @type object;

   }
    procedure [|java:lang:reflect:Type|] [|java:lang:reflect:Method.getGenericReturnType|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1dc4.   call temp:=  [|java:lang:reflect:Method.initGenericTypes|](v1) @signature [|Ljava/lang/reflect/Method;.initGenericTypes:()V|] @classDescriptor [|java:lang:reflect:Method|] @type direct;
#L0b1dca.   v0:= v1.[|java:lang:reflect:Method.genericReturnType|]   @type object;
#L0b1dce.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getType|](v0) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b1dd4.   v0:= temp  @type object;
#L0b1dd6.   return v0  @type object;

   }
    procedure [|int|] [|java:lang:reflect:Method.getModifiers|] ([|java:lang:reflect:Method|] v2 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getModifiers:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1de8.   v0:= v2.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1dec.   v1:= v2.[|java:lang:reflect:Method.slot|] ;
#L0b1df0.   call temp:=  [|java:lang:reflect:Method.getMethodModifiers|](v0, v1) @signature [|Ljava/lang/reflect/Method;.getMethodModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1df6.   v0:= temp;
#L0b1df8.   return v0;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Method.getName|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1e0c.   v0:= v1.[|java:lang:reflect:Method.name|]   @type object;
#L0b1e10.   return v0  @type object;

   }
    procedure [|java:lang:annotation:Annotation|][][] [|java:lang:reflect:Method.getParameterAnnotations|] ([|java:lang:reflect:Method|] v3 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1e24.   v1:= v3.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1e28.   v2:= v3.[|java:lang:reflect:Method.slot|] ;
#L0b1e2c.   call temp:=  [|java:lang:reflect:Method.getParameterAnnotations|](v1, v2) @signature [|Ljava/lang/reflect/Method;.getParameterAnnotations:(Ljava/lang/Class;I)[[Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1e32.   v0:= temp  @type object;
#L0b1e34.   v1:= v0.length;
#L0b1e36.   if v1 != 0 then goto L0b1e48;
#L0b1e3a.   v1:= v3.[|java:lang:reflect:Method.parameterTypes|]   @type object;
#L0b1e3e.   v1:= v1.length;
#L0b1e40.   call temp:=  [|java:lang:reflect:Method.noAnnotations|](v1) @signature [|Ljava/lang/reflect/Method;.noAnnotations:(I)[[Ljava/lang/annotation/Annotation;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1e46.   v0:= temp  @type object;
#L0b1e48.   return v0  @type object;

   }
    procedure [|java:lang:Class|][] [|java:lang:reflect:Method.getParameterTypes|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1e5c.   v0:= v1.[|java:lang:reflect:Method.parameterTypes|]   @type object;
#L0b1e60.   call temp:=  [|java:lang:Class[].clone|](v0) @signature [|[Ljava/lang/Class;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Class[]|] @type virtual;
#L0b1e66.   v0:= temp  @type object;
#L0b1e68.   v0:= ([|java:lang:Class|][])v0;
#L0b1e6c.   return v0  @type object;

   }
    procedure [|java:lang:Class|] [|java:lang:reflect:Method.getReturnType|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1e80.   v0:= v1.[|java:lang:reflect:Method.returnType|]   @type object;
#L0b1e84.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Method.getSignatureAttribute|] ([|java:lang:reflect:Method|] v3 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getSignatureAttribute:()Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1e98.   v1:= v3.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1e9c.   v2:= v3.[|java:lang:reflect:Method.slot|] ;
#L0b1ea0.   call temp:=  [|java:lang:reflect:Method.getSignatureAnnotation|](v1, v2) @signature [|Ljava/lang/reflect/Method;.getSignatureAnnotation:(Ljava/lang/Class;I)[Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1ea6.   v0:= temp  @type object;
#L0b1ea8.   if v0 != 0 then goto L0b1eb0;
#L0b1eac.   v1:= 0  @length 4;
#L0b1eae.   return v1  @type object;
#L0b1eb0.   call temp:=  [|org:apache:harmony:kernel:vm:StringUtils.combineStrings|](v0) @signature [|Lorg/apache/harmony/kernel/vm/StringUtils;.combineStrings:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|org:apache:harmony:kernel:vm:StringUtils|] @type static;
#L0b1eb6.   v1:= temp  @type object;
#L0b1eb8.   goto L0b1eae;

   }
    procedure [|java:lang:reflect:TypeVariable|][] [|java:lang:reflect:Method.getTypeParameters|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1ecc.   call temp:=  [|java:lang:reflect:Method.initGenericTypes|](v1) @signature [|Ljava/lang/reflect/Method;.initGenericTypes:()V|] @classDescriptor [|java:lang:reflect:Method|] @type direct;
#L0b1ed2.   v0:= v1.[|java:lang:reflect:Method.formalTypeParameters|]   @type object;
#L0b1ed6.   call temp:=  [|java:lang:reflect:TypeVariable[].clone|](v0) @signature [|[Ljava/lang/reflect/TypeVariable;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:TypeVariable[]|] @type virtual;
#L0b1edc.   v0:= temp  @type object;
#L0b1ede.   v0:= ([|java:lang:reflect:TypeVariable|][])v0;
#L0b1ee2.   return v0  @type object;

   }
    procedure [|int|] [|java:lang:reflect:Method.hashCode|] ([|java:lang:reflect:Method|] v1 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b1ef4.   v0:= v1.[|java:lang:reflect:Method.name|]   @type object;
#L0b1ef8.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b1efe.   v0:= temp;
#L0b1f00.   return v0;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Method.invoke|] ([|java:lang:reflect:Method|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|java:lang:Object|][] v10 @type (object)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_VARARGS {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b1f14.   if v10 != 0 then goto L0b1f1c;
#L0b1f18.   v10:= @@[|libcore:util:EmptyArray.OBJECT|]   @type object;
#L0b1f1c.   v3:= v8.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1f20.   v4:= v8.[|java:lang:reflect:Method.parameterTypes|]   @type object;
#L0b1f24.   v5:= v8.[|java:lang:reflect:Method.returnType|]   @type object;
#L0b1f28.   v6:= v8.[|java:lang:reflect:Method.slot|] ;
#L0b1f2c.   v7:= v8.[|java:lang:reflect:Method.flag|]   @boolean;
#L0b1f30.   v0:= v8  @type object;
#L0b1f32.   v1:= v9  @type object;
#L0b1f34.   v2:= v10  @type object;
#L0b1f36.   call temp:=  [|java:lang:reflect:Method.invokeNative|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/lang/reflect/Method;.invokeNative:(Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Class;[Ljava/lang/Class;Ljava/lang/Class;IZ)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Method|] @type direct;
#L0b1f3c.   v0:= temp  @type object;
#L0b1f3e.   return v0  @type object;

   }
    procedure [|boolean|] [|java:lang:reflect:Method.isAnnotationPresent|] ([|java:lang:reflect:Method|] v2 @type (this), [|java:lang:Class|] v3 @type (object)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.isAnnotationPresent:(Ljava/lang/Class;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b1f50.   if v3 != 0 then goto L0b1f64;
#L0b1f54.   v0:= new [|java:lang:NullPointerException|];
#L0b1f58.   v1:= "annotationType == null" @type (object, string);
#L0b1f5c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b1f62.   throw v0;
#L0b1f64.   v0:= v2.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1f68.   v1:= v2.[|java:lang:reflect:Method.slot|] ;
#L0b1f6c.   call temp:=  [|java:lang:reflect:Method.isAnnotationPresent|](v0, v1, v3) @signature [|Ljava/lang/reflect/Method;.isAnnotationPresent:(Ljava/lang/Class;ILjava/lang/Class;)Z|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1f72.   v0:= temp;
#L0b1f74.   return v0;

   }
    procedure [|boolean|] [|java:lang:reflect:Method.isBridge|] ([|java:lang:reflect:Method|] v3 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.isBridge:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1f88.   v1:= v3.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1f8c.   v2:= v3.[|java:lang:reflect:Method.slot|] ;
#L0b1f90.   call temp:=  [|java:lang:reflect:Method.getMethodModifiers|](v1, v2) @signature [|Ljava/lang/reflect/Method;.getMethodModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1f96.   v0:= temp;
#L0b1f98.   v1:= v0 ^& 64;
#L0b1f9c.   if v1 == 0 then goto L0b1fa4;
#L0b1fa0.   v1:= 1  @length 4;
#L0b1fa2.   return v1;
#L0b1fa4.   v1:= 0  @length 4;
#L0b1fa6.   goto L0b1fa2;

   }
    procedure [|boolean|] [|java:lang:reflect:Method.isSynthetic|] ([|java:lang:reflect:Method|] v3 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.isSynthetic:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1fb8.   v1:= v3.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1fbc.   v2:= v3.[|java:lang:reflect:Method.slot|] ;
#L0b1fc0.   call temp:=  [|java:lang:reflect:Method.getMethodModifiers|](v1, v2) @signature [|Ljava/lang/reflect/Method;.getMethodModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1fc6.   v0:= temp;
#L0b1fc8.   v1:= v0 ^& 4096;
#L0b1fcc.   if v1 == 0 then goto L0b1fd4;
#L0b1fd0.   v1:= 1  @length 4;
#L0b1fd2.   return v1;
#L0b1fd4.   v1:= 0  @length 4;
#L0b1fd6.   goto L0b1fd2;

   }
    procedure [|boolean|] [|java:lang:reflect:Method.isVarArgs|] ([|java:lang:reflect:Method|] v3 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.isVarArgs:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b1fe8.   v1:= v3.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b1fec.   v2:= v3.[|java:lang:reflect:Method.slot|] ;
#L0b1ff0.   call temp:=  [|java:lang:reflect:Method.getMethodModifiers|](v1, v2) @signature [|Ljava/lang/reflect/Method;.getMethodModifiers:(Ljava/lang/Class;I)I|] @classDescriptor [|java:lang:reflect:Method|] @type static;
#L0b1ff6.   v0:= temp;
#L0b1ff8.   v1:= v0 ^& 128;
#L0b1ffc.   if v1 == 0 then goto L0b2004;
#L0b2000.   v1:= 1  @length 4;
#L0b2002.   return v1;
#L0b2004.   v1:= 0  @length 4;
#L0b2006.   goto L0b2002;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Method.toGenericString|] ([|java:lang:reflect:Method|] v6 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.toGenericString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b2018.   v5:= 32  @length 16;
#L0b201c.   v3:= new [|java:lang:StringBuilder|];
#L0b2020.   v4:= 80  @length 16;
#L0b2024.   call temp:=  [|java:lang:StringBuilder.<init>|](v3, v4) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b202a.   call temp:=  [|java:lang:reflect:Method.initGenericTypes|](v6) @signature [|Ljava/lang/reflect/Method;.initGenericTypes:()V|] @classDescriptor [|java:lang:reflect:Method|] @type direct;
#L0b2030.   call temp:=  [|java:lang:reflect:Method.getModifiers|](v6) @signature [|Ljava/lang/reflect/Method;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b2036.   v2:= temp;
#L0b2038.   if v2 == 0 then goto L0b2056;
#L0b203c.   v4:= v2 ^& -193;
#L0b2040.   call temp:=  [|java:lang:reflect:Modifier.toString|](v4) @signature [|Ljava/lang/reflect/Modifier;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b2046.   v4:= temp  @type object;
#L0b2048.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b204e.   v4:= temp  @type object;
#L0b2050.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2056.   v4:= v6.[|java:lang:reflect:Method.formalTypeParameters|]   @type object;
#L0b205a.   if v4 == 0 then goto L0b20b4;
#L0b205e.   v4:= v6.[|java:lang:reflect:Method.formalTypeParameters|]   @type object;
#L0b2062.   v4:= v4.length;
#L0b2064.   if v4 <= 0 then goto L0b20b4;
#L0b2068.   v4:= 60  @length 16;
#L0b206c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2072.   v1:= 0  @length 4;
#L0b2074.   v4:= v6.[|java:lang:reflect:Method.formalTypeParameters|]   @type object;
#L0b2078.   v4:= v4.length;
#L0b207a.   if v1 >= v4 then goto L0b20aa;
#L0b207e.   v4:= v6.[|java:lang:reflect:Method.formalTypeParameters|]   @type object;
#L0b2082.   v4:= v4[v1]  @type object;
#L0b2086.   call temp:=  [|java:lang:reflect:Method.appendGenericType|](v6, v3, v4) @signature [|Ljava/lang/reflect/Method;.appendGenericType:(Ljava/lang/StringBuilder;Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b208c.   v4:= v6.[|java:lang:reflect:Method.formalTypeParameters|]   @type object;
#L0b2090.   v4:= v4.length;
#L0b2092.   v4:= v4 + -1;
#L0b2096.   if v1 >= v4 then goto L0b20a4;
#L0b209a.   v4:= "," @type (object, string);
#L0b209e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b20a4.   v1:= v1 + 1;
#L0b20a8.   goto L0b2074;
#L0b20aa.   v4:= "> " @type (object, string);
#L0b20ae.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b20b4.   v4:= v6.[|java:lang:reflect:Method.genericReturnType|]   @type object;
#L0b20b8.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getType|](v4) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b20be.   v4:= temp  @type object;
#L0b20c0.   call temp:=  [|java:lang:reflect:Method.appendGenericType|](v6, v3, v4) @signature [|Ljava/lang/reflect/Method;.appendGenericType:(Ljava/lang/StringBuilder;Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b20c6.   call temp:=  [|java:lang:StringBuilder.append|](v3, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b20cc.   call temp:=  [|java:lang:reflect:Method.getDeclaringClass|](v6) @signature [|Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b20d2.   v4:= temp  @type object;
#L0b20d4.   call temp:=  [|java:lang:reflect:Method.appendTypeName|](v6, v3, v4) @signature [|Ljava/lang/reflect/Method;.appendTypeName:(Ljava/lang/StringBuilder;Ljava/lang/Class;)V|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b20da.   v4:= "." @type (object, string);
#L0b20de.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b20e4.   v4:= temp  @type object;
#L0b20e6.   call temp:=  [|java:lang:reflect:Method.getName|](v6) @signature [|Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b20ec.   v5:= temp  @type object;
#L0b20ee.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b20f4.   v4:= 40  @length 16;
#L0b20f8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b20fe.   v4:= v6.[|java:lang:reflect:Method.genericParameterTypes|]   @type object;
#L0b2102.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getClonedTypeArray|](v4) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getClonedTypeArray:(Lorg/apache/harmony/luni/lang/reflect/ListOfTypes;)[Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b2108.   v4:= temp  @type object;
#L0b210a.   call temp:=  [|java:lang:reflect:Method.appendArrayGenericType|](v6, v3, v4) @signature [|Ljava/lang/reflect/Method;.appendArrayGenericType:(Ljava/lang/StringBuilder;[Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b2110.   v4:= 41  @length 16;
#L0b2114.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b211a.   v4:= v6.[|java:lang:reflect:Method.genericExceptionTypes|]   @type object;
#L0b211e.   call temp:=  [|org:apache:harmony:luni:lang:reflect:Types.getClonedTypeArray|](v4) @signature [|Lorg/apache/harmony/luni/lang/reflect/Types;.getClonedTypeArray:(Lorg/apache/harmony/luni/lang/reflect/ListOfTypes;)[Ljava/lang/reflect/Type;|] @classDescriptor [|org:apache:harmony:luni:lang:reflect:Types|] @type static;
#L0b2124.   v0:= temp  @type object;
#L0b2126.   v4:= v0.length;
#L0b2128.   if v4 <= 0 then goto L0b213c;
#L0b212c.   v4:= " throws " @type (object, string);
#L0b2130.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2136.   call temp:=  [|java:lang:reflect:Method.appendArrayGenericType|](v6, v3, v0) @signature [|Ljava/lang/reflect/Method;.appendArrayGenericType:(Ljava/lang/StringBuilder;[Ljava/lang/reflect/Type;)V|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b213c.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2142.   v4:= temp  @type object;
#L0b2144.   return v4  @type object;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Method.toString|] ([|java:lang:reflect:Method|] v3 @type (this)) @owner [|java:lang:reflect:Method|] @signature [|Ljava/lang/reflect/Method;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b2158.   v2:= 32  @length 16;
#L0b215c.   v0:= new [|java:lang:StringBuilder|];
#L0b2160.   call temp:=  [|java:lang:reflect:Method.getModifiers|](v3) @signature [|Ljava/lang/reflect/Method;.getModifiers:()I|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b2166.   v1:= temp;
#L0b2168.   call temp:=  [|java:lang:reflect:Modifier.toString|](v1) @signature [|Ljava/lang/reflect/Modifier;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b216e.   v1:= temp  @type object;
#L0b2170.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b2176.   call temp:=  [|java:lang:StringBuilder.length|](v0) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b217c.   v1:= temp;
#L0b217e.   if v1 == 0 then goto L0b2188;
#L0b2182.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2188.   v1:= v3.[|java:lang:reflect:Method.returnType|]   @type object;
#L0b218c.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b2192.   v1:= temp  @type object;
#L0b2194.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b219a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b21a0.   v1:= v3.[|java:lang:reflect:Method.declaringClass|]   @type object;
#L0b21a4.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b21aa.   v1:= temp  @type object;
#L0b21ac.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b21b2.   v1:= 46  @length 16;
#L0b21b6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b21bc.   v1:= v3.[|java:lang:reflect:Method.name|]   @type object;
#L0b21c0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b21c6.   v1:= "(" @type (object, string);
#L0b21ca.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b21d0.   v1:= v3.[|java:lang:reflect:Method.parameterTypes|]   @type object;
#L0b21d4.   call temp:=  [|java:lang:reflect:Method.toString|](v3, v1) @signature [|Ljava/lang/reflect/Method;.toString:([Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b21da.   v1:= temp  @type object;
#L0b21dc.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b21e2.   v1:= ")" @type (object, string);
#L0b21e6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b21ec.   v1:= v3.[|java:lang:reflect:Method.exceptionTypes|]   @type object;
#L0b21f0.   if v1 == 0 then goto L0b221a;
#L0b21f4.   v1:= v3.[|java:lang:reflect:Method.exceptionTypes|]   @type object;
#L0b21f8.   v1:= v1.length;
#L0b21fa.   if v1 == 0 then goto L0b221a;
#L0b21fe.   v1:= " throws " @type (object, string);
#L0b2202.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2208.   v1:= v3.[|java:lang:reflect:Method.exceptionTypes|]   @type object;
#L0b220c.   call temp:=  [|java:lang:reflect:Method.toString|](v3, v1) @signature [|Ljava/lang/reflect/Method;.toString:([Ljava/lang/Class;)Ljava/lang/String;|] @classDescriptor [|java:lang:reflect:Method|] @type virtual;
#L0b2212.   v1:= temp  @type object;
#L0b2214.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b221a.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2220.   v1:= temp  @type object;
#L0b2222.   return v1  @type object;

   }
record [|java:lang:reflect:Modifier|]  @type class @AccessFlag PUBLIC  {
   }
      global [|int|] @@[|java:lang:reflect:Modifier.ABSTRACT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.ANNOTATION|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.BRIDGE|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.ENUM|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.FINAL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.INTERFACE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.NATIVE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.PRIVATE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.PROTECTED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.PUBLIC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.STATIC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.STRICT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.SYNCHRONIZED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.SYNTHETIC|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.TRANSIENT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.VARARGS|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:lang:reflect:Modifier.VOLATILE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:lang:reflect:Modifier.<init>|] ([|java:lang:reflect:Modifier|] v0 @type (this)) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b2234.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b223a.   return @void ;

   }
    procedure [|int|] [|java:lang:reflect:Modifier.classModifiers|] () @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.classModifiers:()I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b224c.   v0:= 3103  @length 16;
#L0b2250.   return v0;

   }
    procedure [|int|] [|java:lang:reflect:Modifier.constructorModifiers|] () @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.constructorModifiers:()I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2264.   v0:= 7  @length 4;
#L0b2266.   return v0;

   }
    procedure [|int|] [|java:lang:reflect:Modifier.fieldModifiers|] () @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.fieldModifiers:()I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2278.   v0:= 223  @length 16;
#L0b227c.   return v0;

   }
    procedure [|int|] [|java:lang:reflect:Modifier.interfaceModifiers|] () @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.interfaceModifiers:()I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2290.   v0:= 3087  @length 16;
#L0b2294.   return v0;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isAbstract|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isAbstract:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b22a8.   v0:= v1 ^& 1024;
#L0b22ac.   if v0 == 0 then goto L0b22b4;
#L0b22b0.   v0:= 1  @length 4;
#L0b22b2.   return v0;
#L0b22b4.   v0:= 0  @length 4;
#L0b22b6.   goto L0b22b2;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isFinal|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isFinal:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b22c8.   v0:= v1 ^& 16;
#L0b22cc.   if v0 == 0 then goto L0b22d4;
#L0b22d0.   v0:= 1  @length 4;
#L0b22d2.   return v0;
#L0b22d4.   v0:= 0  @length 4;
#L0b22d6.   goto L0b22d2;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isInterface|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isInterface:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b22e8.   v0:= v1 ^& 512;
#L0b22ec.   if v0 == 0 then goto L0b22f4;
#L0b22f0.   v0:= 1  @length 4;
#L0b22f2.   return v0;
#L0b22f4.   v0:= 0  @length 4;
#L0b22f6.   goto L0b22f2;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isNative|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isNative:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2308.   v0:= v1 ^& 256;
#L0b230c.   if v0 == 0 then goto L0b2314;
#L0b2310.   v0:= 1  @length 4;
#L0b2312.   return v0;
#L0b2314.   v0:= 0  @length 4;
#L0b2316.   goto L0b2312;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isPrivate|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isPrivate:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2328.   v0:= v1 ^& 2;
#L0b232c.   if v0 == 0 then goto L0b2334;
#L0b2330.   v0:= 1  @length 4;
#L0b2332.   return v0;
#L0b2334.   v0:= 0  @length 4;
#L0b2336.   goto L0b2332;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isProtected|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isProtected:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2348.   v0:= v1 ^& 4;
#L0b234c.   if v0 == 0 then goto L0b2354;
#L0b2350.   v0:= 1  @length 4;
#L0b2352.   return v0;
#L0b2354.   v0:= 0  @length 4;
#L0b2356.   goto L0b2352;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isPublic|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isPublic:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2368.   v0:= v1 ^& 1;
#L0b236c.   if v0 == 0 then goto L0b2374;
#L0b2370.   v0:= 1  @length 4;
#L0b2372.   return v0;
#L0b2374.   v0:= 0  @length 4;
#L0b2376.   goto L0b2372;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isStatic|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isStatic:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2388.   v0:= v1 ^& 8;
#L0b238c.   if v0 == 0 then goto L0b2394;
#L0b2390.   v0:= 1  @length 4;
#L0b2392.   return v0;
#L0b2394.   v0:= 0  @length 4;
#L0b2396.   goto L0b2392;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isStrict|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isStrict:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b23a8.   v0:= v1 ^& 2048;
#L0b23ac.   if v0 == 0 then goto L0b23b4;
#L0b23b0.   v0:= 1  @length 4;
#L0b23b2.   return v0;
#L0b23b4.   v0:= 0  @length 4;
#L0b23b6.   goto L0b23b2;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isSynchronized|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isSynchronized:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b23c8.   v0:= v1 ^& 32;
#L0b23cc.   if v0 == 0 then goto L0b23d4;
#L0b23d0.   v0:= 1  @length 4;
#L0b23d2.   return v0;
#L0b23d4.   v0:= 0  @length 4;
#L0b23d6.   goto L0b23d2;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isTransient|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isTransient:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b23e8.   v0:= v1 ^& 128;
#L0b23ec.   if v0 == 0 then goto L0b23f4;
#L0b23f0.   v0:= 1  @length 4;
#L0b23f2.   return v0;
#L0b23f4.   v0:= 0  @length 4;
#L0b23f6.   goto L0b23f2;

   }
    procedure [|boolean|] [|java:lang:reflect:Modifier.isVolatile|] ([|int|] v1) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.isVolatile:(I)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2408.   v0:= v1 ^& 64;
#L0b240c.   if v0 == 0 then goto L0b2414;
#L0b2410.   v0:= 1  @length 4;
#L0b2412.   return v0;
#L0b2414.   v0:= 0  @length 4;
#L0b2416.   goto L0b2412;

   }
    procedure [|int|] [|java:lang:reflect:Modifier.methodModifiers|] () @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.methodModifiers:()I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0b2428.   v0:= 3391  @length 16;
#L0b242c.   return v0;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:Modifier.toString|] ([|int|] v2) @owner [|java:lang:reflect:Modifier|] @signature [|Ljava/lang/reflect/Modifier;.toString:(I)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b2440.   v0:= new [|java:lang:StringBuilder|];
#L0b2444.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b244a.   call temp:=  [|java:lang:reflect:Modifier.isPublic|](v2) @signature [|Ljava/lang/reflect/Modifier;.isPublic:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b2450.   v1:= temp;
#L0b2452.   if v1 == 0 then goto L0b2460;
#L0b2456.   v1:= "public " @type (object, string);
#L0b245a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2460.   call temp:=  [|java:lang:reflect:Modifier.isProtected|](v2) @signature [|Ljava/lang/reflect/Modifier;.isProtected:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b2466.   v1:= temp;
#L0b2468.   if v1 == 0 then goto L0b2476;
#L0b246c.   v1:= "protected " @type (object, string);
#L0b2470.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2476.   call temp:=  [|java:lang:reflect:Modifier.isPrivate|](v2) @signature [|Ljava/lang/reflect/Modifier;.isPrivate:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b247c.   v1:= temp;
#L0b247e.   if v1 == 0 then goto L0b248c;
#L0b2482.   v1:= "private " @type (object, string);
#L0b2486.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b248c.   call temp:=  [|java:lang:reflect:Modifier.isAbstract|](v2) @signature [|Ljava/lang/reflect/Modifier;.isAbstract:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b2492.   v1:= temp;
#L0b2494.   if v1 == 0 then goto L0b24a2;
#L0b2498.   v1:= "abstract " @type (object, string);
#L0b249c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b24a2.   call temp:=  [|java:lang:reflect:Modifier.isStatic|](v2) @signature [|Ljava/lang/reflect/Modifier;.isStatic:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b24a8.   v1:= temp;
#L0b24aa.   if v1 == 0 then goto L0b24b8;
#L0b24ae.   v1:= "static " @type (object, string);
#L0b24b2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b24b8.   call temp:=  [|java:lang:reflect:Modifier.isFinal|](v2) @signature [|Ljava/lang/reflect/Modifier;.isFinal:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b24be.   v1:= temp;
#L0b24c0.   if v1 == 0 then goto L0b24ce;
#L0b24c4.   v1:= "final " @type (object, string);
#L0b24c8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b24ce.   call temp:=  [|java:lang:reflect:Modifier.isTransient|](v2) @signature [|Ljava/lang/reflect/Modifier;.isTransient:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b24d4.   v1:= temp;
#L0b24d6.   if v1 == 0 then goto L0b24e4;
#L0b24da.   v1:= "transient " @type (object, string);
#L0b24de.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b24e4.   call temp:=  [|java:lang:reflect:Modifier.isVolatile|](v2) @signature [|Ljava/lang/reflect/Modifier;.isVolatile:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b24ea.   v1:= temp;
#L0b24ec.   if v1 == 0 then goto L0b24fa;
#L0b24f0.   v1:= "volatile " @type (object, string);
#L0b24f4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b24fa.   call temp:=  [|java:lang:reflect:Modifier.isSynchronized|](v2) @signature [|Ljava/lang/reflect/Modifier;.isSynchronized:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b2500.   v1:= temp;
#L0b2502.   if v1 == 0 then goto L0b2510;
#L0b2506.   v1:= "synchronized " @type (object, string);
#L0b250a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2510.   call temp:=  [|java:lang:reflect:Modifier.isNative|](v2) @signature [|Ljava/lang/reflect/Modifier;.isNative:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b2516.   v1:= temp;
#L0b2518.   if v1 == 0 then goto L0b2526;
#L0b251c.   v1:= "native " @type (object, string);
#L0b2520.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2526.   call temp:=  [|java:lang:reflect:Modifier.isStrict|](v2) @signature [|Ljava/lang/reflect/Modifier;.isStrict:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b252c.   v1:= temp;
#L0b252e.   if v1 == 0 then goto L0b253c;
#L0b2532.   v1:= "strictfp " @type (object, string);
#L0b2536.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b253c.   call temp:=  [|java:lang:reflect:Modifier.isInterface|](v2) @signature [|Ljava/lang/reflect/Modifier;.isInterface:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b2542.   v1:= temp;
#L0b2544.   if v1 == 0 then goto L0b2552;
#L0b2548.   v1:= "interface " @type (object, string);
#L0b254c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2552.   call temp:=  [|java:lang:StringBuilder.length|](v0) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2558.   v1:= temp;
#L0b255a.   if v1 != 0 then goto L0b2564;
#L0b255e.   v1:= "" @type (object, string);
#L0b2562.   return v1  @type object;
#L0b2564.   call temp:=  [|java:lang:StringBuilder.length|](v0) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b256a.   v1:= temp;
#L0b256c.   v1:= v1 + -1;
#L0b2570.   call temp:=  [|java:lang:StringBuilder.setLength|](v0, v1) @signature [|Ljava/lang/StringBuilder;.setLength:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2576.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b257c.   v1:= temp  @type object;
#L0b257e.   goto L0b2562;

   }
record [|java:lang:reflect:ParameterizedType|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:lang:reflect:Type|] {
   }
    procedure [|java:lang:reflect:Type|][] [|java:lang:reflect:ParameterizedType.getActualTypeArguments|] () @owner [|java:lang:reflect:ParameterizedType|] @signature [|Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:reflect:Type|] [|java:lang:reflect:ParameterizedType.getOwnerType|] () @owner [|java:lang:reflect:ParameterizedType|] @signature [|Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:reflect:Type|] [|java:lang:reflect:ParameterizedType.getRawType|] () @owner [|java:lang:reflect:ParameterizedType|] @signature [|Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:lang:reflect:Proxy|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|java:lang:reflect:InvocationHandler|] [|java:lang:reflect:Proxy.h|]    @AccessFlag PROTECTED;
   }
      global [|boolean|] @@[|java:lang:reflect:Proxy.$assertionsDisabled|]    @AccessFlag STATIC_FINAL_SYNTHETIC;
      global [|int|] @@[|java:lang:reflect:Proxy.NextClassNameIndex|]    @AccessFlag PRIVATE_STATIC;
      global [|java:util:Map|] @@[|java:lang:reflect:Proxy.loaderCache|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:Map|] @@[|java:lang:reflect:Proxy.proxyCache|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:lang:reflect:Proxy.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:reflect:Proxy.<clinit>|] () @owner [|java:lang:reflect:Proxy|] @signature [|Ljava/lang/reflect/Proxy;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b2590.   v1:= 0  @length 4;
#L0b2592.   v0:= new [|java:lang:reflect:Proxy|];
#L0b2596.   call temp:=  [|java:lang:Class.desiredAssertionStatus|](v0) @signature [|Ljava/lang/Class;.desiredAssertionStatus:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b259c.   v0:= temp;
#L0b259e.   if v0 != 0 then goto L0b25ca;
#L0b25a2.   v0:= 1  @length 4;
#L0b25a4.   @@[|java:lang:reflect:Proxy.$assertionsDisabled|] := v0  @boolean;
#L0b25a8.   v0:= new [|java:util:WeakHashMap|];
#L0b25ac.   call temp:=  [|java:util:WeakHashMap.<init>|](v0) @signature [|Ljava/util/WeakHashMap;.<init>:()V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L0b25b2.   @@[|java:lang:reflect:Proxy.loaderCache|] := v0  @type object;
#L0b25b6.   v0:= new [|java:util:WeakHashMap|];
#L0b25ba.   call temp:=  [|java:util:WeakHashMap.<init>|](v0) @signature [|Ljava/util/WeakHashMap;.<init>:()V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L0b25c0.   @@[|java:lang:reflect:Proxy.proxyCache|] := v0  @type object;
#L0b25c4.   @@[|java:lang:reflect:Proxy.NextClassNameIndex|] := v1;
#L0b25c8.   return @void ;
#L0b25ca.   v0:= v1;
#L0b25cc.   goto L0b25a4;

   }
    procedure [|void|] [|java:lang:reflect:Proxy.<init>|] ([|java:lang:reflect:Proxy|] v0 @type (this)) @owner [|java:lang:reflect:Proxy|] @signature [|Ljava/lang/reflect/Proxy;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0b25e0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b25e6.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Proxy.<init>|] ([|java:lang:reflect:Proxy|] v0 @type (this), [|java:lang:reflect:InvocationHandler|] v1 @type (object)) @owner [|java:lang:reflect:Proxy|] @signature [|Ljava/lang/reflect/Proxy;.<init>:(Ljava/lang/reflect/InvocationHandler;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0b25f8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b25fe.   v0.[|java:lang:reflect:Proxy.h|]  := v1 @type object;
#L0b2602.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:Proxy.constructorPrototype|] ([|java:lang:reflect:InvocationHandler|] v0 @type (object)) @owner [|java:lang:reflect:Proxy|] @signature [|Ljava/lang/reflect/Proxy;.constructorPrototype:(Ljava/lang/reflect/InvocationHandler;)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:Class|] [|java:lang:reflect:Proxy.generateProxy|] ([|java:lang:String|] v0 @type (object), [|java:lang:Class|][] v1 @type (object), [|java:lang:ClassLoader|] v2 @type (object)) @owner [|java:lang:reflect:Proxy|] @signature [|Ljava/lang/reflect/Proxy;.generateProxy:(Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:reflect:InvocationHandler|] [|java:lang:reflect:Proxy.getInvocationHandler|] ([|java:lang:Object|] v2 @type (object)) @owner [|java:lang:reflect:Proxy|] @signature [|Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b2614.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0b261a.   v0:= temp  @type object;
#L0b261c.   call temp:=  [|java:lang:reflect:Proxy.isProxyClass|](v0) @signature [|Ljava/lang/reflect/Proxy;.isProxyClass:(Ljava/lang/Class;)Z|] @classDescriptor [|java:lang:reflect:Proxy|] @type static;
#L0b2622.   v0:= temp;
#L0b2624.   if v0 == 0 then goto L0b2632;
#L0b2628.   v2:= ([|java:lang:reflect:Proxy|])v2;
#L0b262c.   v0:= v2.[|java:lang:reflect:Proxy.h|]   @type object;
#L0b2630.   return v0  @type object;
#L0b2632.   v0:= new [|java:lang:IllegalArgumentException|];
#L0b2636.   v1:= "not a proxy instance" @type (object, string);
#L0b263a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b2640.   throw v0;

   }
    procedure [|java:lang:Class|] [|java:lang:reflect:Proxy.getProxyClass|] ([|java:lang:ClassLoader|] v22 @type (object), [|java:lang:Class|][] v23 @type (object)) @owner [|java:lang:reflect:Proxy|] @signature [|Ljava/lang/reflect/Proxy;.getProxyClass:(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;|] @Access PUBLIC_STATIC_VARARGS {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
      
#L0b2654.   if v23 != 0 then goto L0b2668;
#L0b2658.   v18:= new [|java:lang:NullPointerException|];
#L0b265c.   v19:= "interfaces == null" @type (object, string);
#L0b2660.   call temp:=  [|java:lang:NullPointerException.<init>|](v18, v19) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b2666.   throw v18;
#L0b2668.   v3:= 0  @length 4;
#L0b266a.   v5:= 0  @length 4;
#L0b266c.   v0:= v23  @type object;
#L0b2670.   v10:= v0.length;
#L0b2672.   if v5 >= v10 then goto L0b286e;
#L0b2676.   v14:= v23[v5]  @type object;
#L0b267a.   if v14 != 0 then goto L0b26c0;
#L0b267e.   v18:= new [|java:lang:NullPointerException|];
#L0b2682.   v19:= new [|java:lang:StringBuilder|];
#L0b2686.   call temp:=  [|java:lang:StringBuilder.<init>|](v19) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b268c.   v20:= "interfaces[" @type (object, string);
#L0b2690.   call temp:=  [|java:lang:StringBuilder.append|](v19, v20) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2696.   v19:= temp  @type object;
#L0b2698.   v0:= v19  @type object;
#L0b269c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b26a2.   v19:= temp  @type object;
#L0b26a4.   v20:= "] == null" @type (object, string);
#L0b26a8.   call temp:=  [|java:lang:StringBuilder.append|](v19, v20) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b26ae.   v19:= temp  @type object;
#L0b26b0.   call temp:=  [|java:lang:StringBuilder.toString|](v19) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b26b6.   v19:= temp  @type object;
#L0b26b8.   call temp:=  [|java:lang:NullPointerException.<init>|](v18, v19) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b26be.   throw v18;
#L0b26c0.   call temp:=  [|java:lang:Class.getName|](v14) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b26c6.   v11:= temp  @type object;
#L0b26c8.   call temp:=  [|java:lang:Class.isInterface|](v14) @signature [|Ljava/lang/Class;.isInterface:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b26ce.   v18:= temp;
#L0b26d0.   if v18 != 0 then goto L0b270a;
#L0b26d4.   v18:= new [|java:lang:IllegalArgumentException|];
#L0b26d8.   v19:= new [|java:lang:StringBuilder|];
#L0b26dc.   call temp:=  [|java:lang:StringBuilder.<init>|](v19) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b26e2.   v0:= v19  @type object;
#L0b26e6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b26ec.   v19:= temp  @type object;
#L0b26ee.   v20:= " is not an interface" @type (object, string);
#L0b26f2.   call temp:=  [|java:lang:StringBuilder.append|](v19, v20) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b26f8.   v19:= temp  @type object;
#L0b26fa.   call temp:=  [|java:lang:StringBuilder.toString|](v19) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2700.   v19:= temp  @type object;
#L0b2702.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v18, v19) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b2708.   throw v18;
#L0b270a.   call temp:=  [|java:lang:Class.getClassLoader|](v14) @signature [|Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b2710.   v18:= temp  @type object;
#L0b2712.   v0:= v22  @type object;
#L0b2716.   v1:= v18  @type object;
#L0b271a.   if v0 == v1 then goto L0b27a8;
#L0b271e.   v18:= 0  @length 16;
#L0b2722.   v0:= v18;
#L0b2726.   v1:= v22  @type object;
#L0b272a.   call temp:=  [|java:lang:Class.forName|](v11, v0, v1) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L0b2730.   v18:= temp  @type object;
#L0b2732.   v0:= v18  @type object;
#L0b2736.   if v14 == v0 then goto L0b27a8;
#L0b273a.   v18:= new [|java:lang:IllegalArgumentException|];
#L0b273e.   v19:= new [|java:lang:StringBuilder|];
#L0b2742.   call temp:=  [|java:lang:StringBuilder.<init>|](v19) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b2748.   v0:= v19  @type object;
#L0b274c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2752.   v19:= temp  @type object;
#L0b2754.   v20:= " is not visible from class loader" @type (object, string);
#L0b2758.   call temp:=  [|java:lang:StringBuilder.append|](v19, v20) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b275e.   v19:= temp  @type object;
#L0b2760.   call temp:=  [|java:lang:StringBuilder.toString|](v19) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2766.   v19:= temp  @type object;
#L0b2768.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v18, v19) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b276e.   throw v18;
#L0b2770.   v4:= Exception  @type object;
#L0b2772.   v18:= new [|java:lang:IllegalArgumentException|];
#L0b2776.   v19:= new [|java:lang:StringBuilder|];
#L0b277a.   call temp:=  [|java:lang:StringBuilder.<init>|](v19) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b2780.   v0:= v19  @type object;
#L0b2784.   call temp:=  [|java:lang:StringBuilder.append|](v0, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b278a.   v19:= temp  @type object;
#L0b278c.   v20:= " is not visible from class loader" @type (object, string);
#L0b2790.   call temp:=  [|java:lang:StringBuilder.append|](v19, v20) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2796.   v19:= temp  @type object;
#L0b2798.   call temp:=  [|java:lang:StringBuilder.toString|](v19) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b279e.   v19:= temp  @type object;
#L0b27a0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v18, v19) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b27a6.   throw v18;
#L0b27a8.   v8:= v5 + 1;
#L0b27ac.   if v8 >= v10 then goto L0b27f8;
#L0b27b0.   v18:= v23[v8]  @type object;
#L0b27b4.   v0:= v18  @type object;
#L0b27b8.   if v14 != v0 then goto L0b27f2;
#L0b27bc.   v18:= new [|java:lang:IllegalArgumentException|];
#L0b27c0.   v19:= new [|java:lang:StringBuilder|];
#L0b27c4.   call temp:=  [|java:lang:StringBuilder.<init>|](v19) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b27ca.   v0:= v19  @type object;
#L0b27ce.   call temp:=  [|java:lang:StringBuilder.append|](v0, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b27d4.   v19:= temp  @type object;
#L0b27d6.   v20:= " appears more than once" @type (object, string);
#L0b27da.   call temp:=  [|java:lang:StringBuilder.append|](v19, v20) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b27e0.   v19:= temp  @type object;
#L0b27e2.   call temp:=  [|java:lang:StringBuilder.toString|](v19) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b27e8.   v19:= temp  @type object;
#L0b27ea.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v18, v19) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b27f0.   throw v18;
#L0b27f2.   v8:= v8 + 1;
#L0b27f6.   goto L0b27ac;
#L0b27f8.   call temp:=  [|java:lang:Class.getModifiers|](v14) @signature [|Ljava/lang/Class;.getModifiers:()I|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b27fe.   v18:= temp;
#L0b2800.   call temp:=  [|java:lang:reflect:Modifier.isPublic|](v18) @signature [|Ljava/lang/reflect/Modifier;.isPublic:(I)Z|] @classDescriptor [|java:lang:reflect:Modifier|] @type static;
#L0b2806.   v18:= temp;
#L0b2808.   if v18 != 0 then goto L0b2834;
#L0b280c.   v18:= 46  @length 16;
#L0b2810.   v0:= v18;
#L0b2814.   call temp:=  [|java:lang:String.lastIndexOf|](v11, v0) @signature [|Ljava/lang/String;.lastIndexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b281a.   v9:= temp;
#L0b281c.   v18:= -1  @length 16;
#L0b2820.   v0:= v18;
#L0b2824.   if v9 != v0 then goto L0b283c;
#L0b2828.   v16:= "" @type (object, string);
#L0b282c.   if v3 != 0 then goto L0b284e;
#L0b2830.   v3:= v16  @type object;
#L0b2834.   v5:= v5 + 1;
#L0b2838.   goto L0b2672;
#L0b283c.   v18:= 0  @length 16;
#L0b2840.   v0:= v18;
#L0b2844.   call temp:=  [|java:lang:String.substring|](v11, v0, v9) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b284a.   v16:= temp  @type object;
#L0b284c.   goto L0b282c;
#L0b284e.   v0:= v16  @type object;
#L0b2852.   call temp:=  [|java:lang:String.equals|](v3, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b2858.   v18:= temp;
#L0b285a.   if v18 != 0 then goto L0b2834;
#L0b285e.   v18:= new [|java:lang:IllegalArgumentException|];
#L0b2862.   v19:= "non-public interfaces must be in the same package" @type (object, string);
#L0b2866.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v18, v19) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b286c.   throw v18;
#L0b286e.   v19:= @@[|java:lang:reflect:Proxy.loaderCache|]   @type object;
#L0b2872.   (@monitorenter v19)
#L0b2874.   v18:= @@[|java:lang:reflect:Proxy.loaderCache|]   @type object;
#L0b2878.   v0:= v18  @type object;
#L0b287c.   v1:= v22  @type object;
#L0b2880.   call temp:=  [|java:util:Map.get|](v0, v1) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0b2886.   v6:= temp  @type object;
#L0b2888.   v6:= ([|java:util:Map|])v6;
#L0b288c.   if v6 != 0 then goto L0b28ac;
#L0b2890.   v18:= @@[|java:lang:reflect:Proxy.loaderCache|]   @type object;
#L0b2894.   v6:= new [|java:util:HashMap|];
#L0b2898.   call temp:=  [|java:util:HashMap.<init>|](v6) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0b289e.   v0:= v18  @type object;
#L0b28a2.   v1:= v22  @type object;
#L0b28a6.   call temp:=  [|java:util:Map.put|](v0, v1, v6) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0b28ac.   v7:= "" @type (object, string);
#L0b28b0.   v0:= v23  @type object;
#L0b28b4.   v0:= v0.length;
#L0b28b6.   v18:= v0;
#L0b28ba.   v20:= 1  @length 16;
#L0b28be.   v0:= v18;
#L0b28c2.   v1:= v20;
#L0b28c6.   if v0 != v1 then goto L0b29ec;
#L0b28ca.   v18:= 0  @length 16;
#L0b28ce.   v18:= v23[v18]  @type object;
#L0b28d2.   call temp:=  [|java:lang:Class.getName|](v18) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b28d8.   v7:= temp  @type object;
#L0b28da.   call temp:=  [|java:util:Map.get|](v6, v7) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0b28e0.   v17:= temp  @type object;
#L0b28e2.   v17:= ([|java:lang:ref:WeakReference|])v17;
#L0b28e6.   if v17 != 0 then goto L0b2a44;
#L0b28ea.   v18:= new [|java:lang:StringBuilder|];
#L0b28ee.   call temp:=  [|java:lang:StringBuilder.<init>|](v18) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b28f4.   v20:= "$Proxy" @type (object, string);
#L0b28f8.   v0:= v18  @type object;
#L0b28fc.   v1:= v20  @type object;
#L0b2900.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2906.   v18:= temp  @type object;
#L0b2908.   v20:= @@[|java:lang:reflect:Proxy.NextClassNameIndex|] ;
#L0b290c.   v21:= v20 + 1;
#L0b2910.   @@[|java:lang:reflect:Proxy.NextClassNameIndex|] := v21;
#L0b2914.   v0:= v18  @type object;
#L0b2918.   v1:= v20;
#L0b291c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2922.   v18:= temp  @type object;
#L0b2924.   call temp:=  [|java:lang:StringBuilder.toString|](v18) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b292a.   v15:= temp  @type object;
#L0b292c.   if v3 == 0 then goto L0b297a;
#L0b2930.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b2936.   v18:= temp;
#L0b2938.   if v18 <= 0 then goto L0b297a;
#L0b293c.   v18:= new [|java:lang:StringBuilder|];
#L0b2940.   call temp:=  [|java:lang:StringBuilder.<init>|](v18) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b2946.   v0:= v18  @type object;
#L0b294a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2950.   v18:= temp  @type object;
#L0b2952.   v20:= "." @type (object, string);
#L0b2956.   v0:= v18  @type object;
#L0b295a.   v1:= v20  @type object;
#L0b295e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2964.   v18:= temp  @type object;
#L0b2966.   v0:= v18  @type object;
#L0b296a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2970.   v18:= temp  @type object;
#L0b2972.   call temp:=  [|java:lang:StringBuilder.toString|](v18) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2978.   v15:= temp  @type object;
#L0b297a.   if v22 != 0 then goto L0b2986;
#L0b297e.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L0b2984.   v22:= temp  @type object;
#L0b2986.   v18:= 46  @length 16;
#L0b298a.   v20:= 47  @length 16;
#L0b298e.   v0:= v18;
#L0b2992.   v1:= v20;
#L0b2996.   call temp:=  [|java:lang:String.replace|](v15, v0, v1) @signature [|Ljava/lang/String;.replace:(CC)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b299c.   v18:= temp  @type object;
#L0b299e.   v0:= v18  @type object;
#L0b29a2.   v1:= v23  @type object;
#L0b29a6.   v2:= v22  @type object;
#L0b29aa.   call temp:=  [|java:lang:reflect:Proxy.generateProxy|](v0, v1, v2) @signature [|Ljava/lang/reflect/Proxy;.generateProxy:(Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Proxy|] @type static;
#L0b29b0.   v13:= temp  @type object;
#L0b29b2.   v18:= new [|java:lang:ref:WeakReference|];
#L0b29b6.   v0:= v18  @type object;
#L0b29ba.   call temp:=  [|java:lang:ref:WeakReference.<init>|](v0, v13) @signature [|Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:WeakReference|] @type direct;
#L0b29c0.   v0:= v18  @type object;
#L0b29c4.   call temp:=  [|java:util:Map.put|](v6, v7, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0b29ca.   v20:= @@[|java:lang:reflect:Proxy.proxyCache|]   @type object;
#L0b29ce.   (@monitorenter v20)
#L0b29d0.   v18:= @@[|java:lang:reflect:Proxy.proxyCache|]   @type object;
#L0b29d4.   v21:= "" @type (object, string);
#L0b29d8.   v0:= v18  @type object;
#L0b29dc.   v1:= v21  @type object;
#L0b29e0.   call temp:=  [|java:util:Map.put|](v0, v13, v1) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0b29e6.   (@monitorexit v20)
#L0b29e8.   (@monitorexit v19)
#L0b29ea.   return v13  @type object;
#L0b29ec.   v12:= new [|java:lang:StringBuilder|];
#L0b29f0.   call temp:=  [|java:lang:StringBuilder.<init>|](v12) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b29f6.   v5:= 0  @length 4;
#L0b29f8.   v0:= v23  @type object;
#L0b29fc.   v10:= v0.length;
#L0b29fe.   if v5 >= v10 then goto L0b2a2c;
#L0b2a02.   v18:= v23[v5]  @type object;
#L0b2a06.   call temp:=  [|java:lang:Class.getName|](v18) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b2a0c.   v18:= temp  @type object;
#L0b2a0e.   v0:= v18  @type object;
#L0b2a12.   call temp:=  [|java:lang:StringBuilder.append|](v12, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2a18.   v18:= 32  @length 16;
#L0b2a1c.   v0:= v18;
#L0b2a20.   call temp:=  [|java:lang:StringBuilder.append|](v12, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2a26.   v5:= v5 + 1;
#L0b2a2a.   goto L0b29fe;
#L0b2a2c.   call temp:=  [|java:lang:StringBuilder.toString|](v12) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2a32.   v7:= temp  @type object;
#L0b2a34.   goto L0b28da;
#L0b2a38.   v18:= Exception  @type object;
#L0b2a3a.   (@monitorexit v20)
#L0b2a3c.   throw v18;
#L0b2a3e.   v18:= Exception  @type object;
#L0b2a40.   (@monitorexit v19)
#L0b2a42.   throw v18;
#L0b2a44.   call temp:=  [|java:lang:ref:WeakReference.get|](v17) @signature [|Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:WeakReference|] @type virtual;
#L0b2a4a.   v13:= temp  @type object;
#L0b2a4c.   v13:= ([|java:lang:Class|])v13;
#L0b2a50.   v18:= @@[|java:lang:reflect:Proxy.$assertionsDisabled|]   @boolean;
#L0b2a54.   if v18 != 0 then goto L0b29e8;
#L0b2a58.   if v13 != 0 then goto L0b29e8;
#L0b2a5c.   v18:= new [|java:lang:AssertionError|];
#L0b2a60.   v20:= new [|java:lang:StringBuilder|];
#L0b2a64.   call temp:=  [|java:lang:StringBuilder.<init>|](v20) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b2a6a.   v21:= "interfaceKey=\"" @type (object, string);
#L0b2a6e.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2a74.   v20:= temp  @type object;
#L0b2a76.   v0:= v20  @type object;
#L0b2a7a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2a80.   v20:= temp  @type object;
#L0b2a82.   v21:= "\"" @type (object, string);
#L0b2a86.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2a8c.   v20:= temp  @type object;
#L0b2a8e.   v21:= "loaderCache=\"" @type (object, string);
#L0b2a92.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2a98.   v20:= temp  @type object;
#L0b2a9a.   v21:= @@[|java:lang:reflect:Proxy.loaderCache|]   @type object;
#L0b2a9e.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2aa4.   v20:= temp  @type object;
#L0b2aa6.   v21:= "\"" @type (object, string);
#L0b2aaa.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2ab0.   v20:= temp  @type object;
#L0b2ab2.   v21:= "intfCache=\"" @type (object, string);
#L0b2ab6.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2abc.   v20:= temp  @type object;
#L0b2abe.   v0:= v20  @type object;
#L0b2ac2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2ac8.   v20:= temp  @type object;
#L0b2aca.   v21:= "\"" @type (object, string);
#L0b2ace.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2ad4.   v20:= temp  @type object;
#L0b2ad6.   v21:= "proxyCache=\"" @type (object, string);
#L0b2ada.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2ae0.   v20:= temp  @type object;
#L0b2ae2.   v21:= @@[|java:lang:reflect:Proxy.proxyCache|]   @type object;
#L0b2ae6.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2aec.   v20:= temp  @type object;
#L0b2aee.   v21:= "\"" @type (object, string);
#L0b2af2.   call temp:=  [|java:lang:StringBuilder.append|](v20, v21) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2af8.   v20:= temp  @type object;
#L0b2afa.   call temp:=  [|java:lang:StringBuilder.toString|](v20) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b2b00.   v20:= temp  @type object;
#L0b2b02.   v0:= v18  @type object;
#L0b2b06.   v1:= v20  @type object;
#L0b2b0a.   call temp:=  [|java:lang:AssertionError.<init>|](v0, v1) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0b2b10.   throw v18;
  catch  [|java:lang:ClassNotFoundException|] @[L0b2722..L0b2770] goto L0b2770;
  catch  [|any|] @[L0b2874..L0b29d0] goto L0b2a3e;
  catch  [|any|] @[L0b29d0..L0b29e8] goto L0b2a38;
  catch  [|any|] @[L0b29e8..L0b2a32] goto L0b2a3e;
  catch  [|any|] @[L0b2a3a..L0b2a3c] goto L0b2a38;
  catch  [|any|] @[L0b2a3c..L0b2a42] goto L0b2a3e;
  catch  [|any|] @[L0b2a44..L0b2b10] goto L0b2a3e;

   }
    procedure [|boolean|] [|java:lang:reflect:Proxy.isProxyClass|] ([|java:lang:Class|] v2 @type (object)) @owner [|java:lang:reflect:Proxy|] @signature [|Ljava/lang/reflect/Proxy;.isProxyClass:(Ljava/lang/Class;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b2b68.   if v2 != 0 then goto L0b2b7c;
#L0b2b6c.   v0:= new [|java:lang:NullPointerException|];
#L0b2b70.   v1:= "cl == null" @type (object, string);
#L0b2b74.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b2b7a.   throw v0;
#L0b2b7c.   v1:= @@[|java:lang:reflect:Proxy.proxyCache|]   @type object;
#L0b2b80.   (@monitorenter v1)
#L0b2b82.   v0:= @@[|java:lang:reflect:Proxy.proxyCache|]   @type object;
#L0b2b86.   call temp:=  [|java:util:Map.containsKey|](v0, v2) @signature [|Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Map|] @type interface;
#L0b2b8c.   v0:= temp;
#L0b2b8e.   (@monitorexit v1)
#L0b2b90.   return v0;
#L0b2b92.   v0:= Exception  @type object;
#L0b2b94.   (@monitorexit v1)
#L0b2b96.   throw v0;
  catch  [|any|] @[L0b2b82..L0b2b96] goto L0b2b92;

   }
    procedure [|java:lang:Object|] [|java:lang:reflect:Proxy.newProxyInstance|] ([|java:lang:ClassLoader|] v6 @type (object), [|java:lang:Class|][] v7 @type (object), [|java:lang:reflect:InvocationHandler|] v8 @type (object)) @owner [|java:lang:reflect:Proxy|] @signature [|Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b2bb4.   if v8 != 0 then goto L0b2bc8;
#L0b2bb8.   v2:= new [|java:lang:NullPointerException|];
#L0b2bbc.   v3:= "h == null" @type (object, string);
#L0b2bc0.   call temp:=  [|java:lang:NullPointerException.<init>|](v2, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b2bc6.   throw v2;
#L0b2bc8.   call temp:=  [|java:lang:reflect:Proxy.getProxyClass|](v6, v7) @signature [|Ljava/lang/reflect/Proxy;.getProxyClass:(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Proxy|] @type static;
#L0b2bce.   v2:= temp  @type object;
#L0b2bd0.   v3:= 1  @length 4;
#L0b2bd2.   v3:= new [|java:lang:Class|][v3];
#L0b2bd6.   v4:= 0  @length 4;
#L0b2bd8.   v5:= new [|java:lang:reflect:InvocationHandler|];
#L0b2bdc.   v3[v4]:= v5  @type object;
#L0b2be0.   call temp:=  [|java:lang:Class.getConstructor|](v2, v3) @signature [|Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0b2be6.   v2:= temp  @type object;
#L0b2be8.   v3:= 1  @length 4;
#L0b2bea.   v3:= new [|java:lang:Object|][v3];
#L0b2bee.   v4:= 0  @length 4;
#L0b2bf0.   v3[v4]:= v8  @type object;
#L0b2bf4.   call temp:=  [|java:lang:reflect:Constructor.newInstance|](v2, v3) @signature [|Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L0b2bfa.   v2:= temp  @type object;
#L0b2bfc.   return v2  @type object;
#L0b2bfe.   v0:= Exception  @type object;
#L0b2c00.   v2:= new [|java:lang:InternalError|];
#L0b2c04.   call temp:=  [|java:lang:NoSuchMethodException.toString|](v0) @signature [|Ljava/lang/NoSuchMethodException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:NoSuchMethodException|] @type virtual;
#L0b2c0a.   v3:= temp  @type object;
#L0b2c0c.   call temp:=  [|java:lang:InternalError.<init>|](v2, v3) @signature [|Ljava/lang/InternalError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:InternalError|] @type direct;
#L0b2c12.   call temp:=  [|java:lang:InternalError.initCause|](v2, v0) @signature [|Ljava/lang/InternalError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:InternalError|] @type virtual;
#L0b2c18.   v2:= temp  @type object;
#L0b2c1a.   v2:= ([|java:lang:InternalError|])v2;
#L0b2c1e.   v2:= ([|java:lang:InternalError|])v2;
#L0b2c22.   throw v2;
#L0b2c24.   v0:= Exception  @type object;
#L0b2c26.   v2:= new [|java:lang:InternalError|];
#L0b2c2a.   call temp:=  [|java:lang:IllegalAccessException.toString|](v0) @signature [|Ljava/lang/IllegalAccessException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:IllegalAccessException|] @type virtual;
#L0b2c30.   v3:= temp  @type object;
#L0b2c32.   call temp:=  [|java:lang:InternalError.<init>|](v2, v3) @signature [|Ljava/lang/InternalError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:InternalError|] @type direct;
#L0b2c38.   call temp:=  [|java:lang:InternalError.initCause|](v2, v0) @signature [|Ljava/lang/InternalError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:InternalError|] @type virtual;
#L0b2c3e.   v2:= temp  @type object;
#L0b2c40.   v2:= ([|java:lang:InternalError|])v2;
#L0b2c44.   v2:= ([|java:lang:InternalError|])v2;
#L0b2c48.   throw v2;
#L0b2c4a.   v0:= Exception  @type object;
#L0b2c4c.   v2:= new [|java:lang:InternalError|];
#L0b2c50.   call temp:=  [|java:lang:InstantiationException.toString|](v0) @signature [|Ljava/lang/InstantiationException;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:InstantiationException|] @type virtual;
#L0b2c56.   v3:= temp  @type object;
#L0b2c58.   call temp:=  [|java:lang:InternalError.<init>|](v2, v3) @signature [|Ljava/lang/InternalError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:InternalError|] @type direct;
#L0b2c5e.   call temp:=  [|java:lang:InternalError.initCause|](v2, v0) @signature [|Ljava/lang/InternalError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:InternalError|] @type virtual;
#L0b2c64.   v2:= temp  @type object;
#L0b2c66.   v2:= ([|java:lang:InternalError|])v2;
#L0b2c6a.   v2:= ([|java:lang:InternalError|])v2;
#L0b2c6e.   throw v2;
#L0b2c70.   v0:= Exception  @type object;
#L0b2c72.   call temp:=  [|java:lang:reflect:InvocationTargetException.getTargetException|](v0) @signature [|Ljava/lang/reflect/InvocationTargetException;.getTargetException:()Ljava/lang/Throwable;|] @classDescriptor [|java:lang:reflect:InvocationTargetException|] @type virtual;
#L0b2c78.   v1:= temp  @type object;
#L0b2c7a.   v2:= new [|java:lang:InternalError|];
#L0b2c7e.   call temp:=  [|java:lang:Throwable.toString|](v1) @signature [|Ljava/lang/Throwable;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Throwable|] @type virtual;
#L0b2c84.   v3:= temp  @type object;
#L0b2c86.   call temp:=  [|java:lang:InternalError.<init>|](v2, v3) @signature [|Ljava/lang/InternalError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:InternalError|] @type direct;
#L0b2c8c.   call temp:=  [|java:lang:InternalError.initCause|](v2, v1) @signature [|Ljava/lang/InternalError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:InternalError|] @type virtual;
#L0b2c92.   v2:= temp  @type object;
#L0b2c94.   v2:= ([|java:lang:InternalError|])v2;
#L0b2c98.   v2:= ([|java:lang:InternalError|])v2;
#L0b2c9c.   throw v2;
  catch  [|java:lang:NoSuchMethodException|] @[L0b2bc8..L0b2bfa] goto L0b2bfe;
  catch  [|java:lang:IllegalAccessException|] @[L0b2bc8..L0b2bfa] goto L0b2c24;
  catch  [|java:lang:InstantiationException|] @[L0b2bc8..L0b2bfa] goto L0b2c4a;
  catch  [|java:lang:reflect:InvocationTargetException|] @[L0b2bc8..L0b2bfa] goto L0b2c70;

   }
record [|java:lang:reflect:ReflectPermission|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:security:BasicPermission|] {
   }
    procedure [|void|] [|java:lang:reflect:ReflectPermission.<init>|] ([|java:lang:reflect:ReflectPermission|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:reflect:ReflectPermission|] @signature [|Ljava/lang/reflect/ReflectPermission;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b2cc8.   v0:= "" @type (object, string);
#L0b2ccc.   call temp:=  [|java:security:BasicPermission.<init>|](v1, v0) @signature [|Ljava/security/BasicPermission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:BasicPermission|] @type direct;
#L0b2cd2.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:ReflectPermission.<init>|] ([|java:lang:reflect:ReflectPermission|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:lang:reflect:ReflectPermission|] @signature [|Ljava/lang/reflect/ReflectPermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b2ce4.   v0:= "" @type (object, string);
#L0b2ce8.   v1:= "" @type (object, string);
#L0b2cec.   call temp:=  [|java:security:BasicPermission.<init>|](v2, v0, v1) @signature [|Ljava/security/BasicPermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:security:BasicPermission|] @type direct;
#L0b2cf2.   return @void ;

   }
    procedure [|java:lang:String|] [|java:lang:reflect:ReflectPermission.getActions|] ([|java:lang:reflect:ReflectPermission|] v1 @type (this)) @owner [|java:lang:reflect:ReflectPermission|] @signature [|Ljava/lang/reflect/ReflectPermission;.getActions:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b2d04.   v0:= 0  @length 4;
#L0b2d06.   return v0  @type object;

   }
    procedure [|boolean|] [|java:lang:reflect:ReflectPermission.implies|] ([|java:lang:reflect:ReflectPermission|] v1 @type (this), [|java:security:Permission|] v2 @type (object)) @owner [|java:lang:reflect:ReflectPermission|] @signature [|Ljava/lang/reflect/ReflectPermission;.implies:(Ljava/security/Permission;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b2d18.   v0:= 1  @length 4;
#L0b2d1a.   return v0;

   }
record [|java:lang:reflect:TypeVariable|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:lang:reflect:Type|] {
   }
    procedure [|java:lang:reflect:Type|][] [|java:lang:reflect:TypeVariable.getBounds|] () @owner [|java:lang:reflect:TypeVariable|] @signature [|Ljava/lang/reflect/TypeVariable;.getBounds:()[Ljava/lang/reflect/Type;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:reflect:GenericDeclaration|] [|java:lang:reflect:TypeVariable.getGenericDeclaration|] () @owner [|java:lang:reflect:TypeVariable|] @signature [|Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:lang:reflect:TypeVariable.getName|] () @owner [|java:lang:reflect:TypeVariable|] @signature [|Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:lang:reflect:UndeclaredThrowableException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:RuntimeException|] {
      [|java:lang:Throwable|] [|java:lang:reflect:UndeclaredThrowableException.undeclaredThrowable|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|java:lang:reflect:UndeclaredThrowableException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:lang:reflect:UndeclaredThrowableException.<init>|] ([|java:lang:reflect:UndeclaredThrowableException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:lang:reflect:UndeclaredThrowableException|] @signature [|Ljava/lang/reflect/UndeclaredThrowableException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b2d2c.   call temp:=  [|java:lang:RuntimeException.<init>|](v0) @signature [|Ljava/lang/RuntimeException;.<init>:()V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0b2d32.   v0.[|java:lang:reflect:UndeclaredThrowableException.undeclaredThrowable|]  := v1 @type object;
#L0b2d36.   call temp:=  [|java:lang:reflect:UndeclaredThrowableException.initCause|](v0, v1) @signature [|Ljava/lang/reflect/UndeclaredThrowableException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:reflect:UndeclaredThrowableException|] @type virtual;
#L0b2d3c.   return @void ;

   }
    procedure [|void|] [|java:lang:reflect:UndeclaredThrowableException.<init>|] ([|java:lang:reflect:UndeclaredThrowableException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:lang:reflect:UndeclaredThrowableException|] @signature [|Ljava/lang/reflect/UndeclaredThrowableException;.<init>:(Ljava/lang/Throwable;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b2d50.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v2) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L0b2d56.   v0.[|java:lang:reflect:UndeclaredThrowableException.undeclaredThrowable|]  := v1 @type object;
#L0b2d5a.   call temp:=  [|java:lang:reflect:UndeclaredThrowableException.initCause|](v0, v1) @signature [|Ljava/lang/reflect/UndeclaredThrowableException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:reflect:UndeclaredThrowableException|] @type virtual;
#L0b2d60.   return @void ;

   }
    procedure [|java:lang:Throwable|] [|java:lang:reflect:UndeclaredThrowableException.getCause|] ([|java:lang:reflect:UndeclaredThrowableException|] v1 @type (this)) @owner [|java:lang:reflect:UndeclaredThrowableException|] @signature [|Ljava/lang/reflect/UndeclaredThrowableException;.getCause:()Ljava/lang/Throwable;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b2d74.   v0:= v1.[|java:lang:reflect:UndeclaredThrowableException.undeclaredThrowable|]   @type object;
#L0b2d78.   return v0  @type object;

   }
    procedure [|java:lang:Throwable|] [|java:lang:reflect:UndeclaredThrowableException.getUndeclaredThrowable|] ([|java:lang:reflect:UndeclaredThrowableException|] v1 @type (this)) @owner [|java:lang:reflect:UndeclaredThrowableException|] @signature [|Ljava/lang/reflect/UndeclaredThrowableException;.getUndeclaredThrowable:()Ljava/lang/Throwable;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b2d8c.   v0:= v1.[|java:lang:reflect:UndeclaredThrowableException.undeclaredThrowable|]   @type object;
#L0b2d90.   return v0  @type object;

   }
record [|java:lang:reflect:WildcardType|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:lang:reflect:Type|] {
   }
    procedure [|java:lang:reflect:Type|][] [|java:lang:reflect:WildcardType.getLowerBounds|] () @owner [|java:lang:reflect:WildcardType|] @signature [|Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:reflect:Type|][] [|java:lang:reflect:WildcardType.getUpperBounds|] () @owner [|java:lang:reflect:WildcardType|] @signature [|Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:math:BigDecimal$1|]  @type class @AccessFlag SYNTHETIC  {
   }
      global [|int|][] @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]    @AccessFlag STATIC_FINAL_SYNTHETIC;
    procedure [|void|] [|java:math:BigDecimal$1.<clinit>|] () @owner [|java:math:BigDecimal$1|] @signature [|Ljava/math/BigDecimal$1;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b2da4.   call temp:=  [|java:math:RoundingMode.values|]() @signature [|Ljava/math/RoundingMode;.values:()[Ljava/math/RoundingMode;|] @classDescriptor [|java:math:RoundingMode|] @type static;
#L0b2daa.   v0:= temp  @type object;
#L0b2dac.   v0:= v0.length;
#L0b2dae.   v0:= new [|int|][v0];
#L0b2db2.   @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|] := v0  @type object;
#L0b2db6.   v0:= @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]   @type object;
#L0b2dba.   v1:= @@[|java:math:RoundingMode.UNNECESSARY|]   @type object;
#L0b2dbe.   call temp:=  [|java:math:RoundingMode.ordinal|](v1) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0b2dc4.   v1:= temp;
#L0b2dc6.   v2:= 1  @length 4;
#L0b2dc8.   v0[v1]:= v2;
#L0b2dcc.   v0:= @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]   @type object;
#L0b2dd0.   v1:= @@[|java:math:RoundingMode.UP|]   @type object;
#L0b2dd4.   call temp:=  [|java:math:RoundingMode.ordinal|](v1) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0b2dda.   v1:= temp;
#L0b2ddc.   v2:= 2  @length 4;
#L0b2dde.   v0[v1]:= v2;
#L0b2de2.   v0:= @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]   @type object;
#L0b2de6.   v1:= @@[|java:math:RoundingMode.DOWN|]   @type object;
#L0b2dea.   call temp:=  [|java:math:RoundingMode.ordinal|](v1) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0b2df0.   v1:= temp;
#L0b2df2.   v2:= 3  @length 4;
#L0b2df4.   v0[v1]:= v2;
#L0b2df8.   v0:= @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]   @type object;
#L0b2dfc.   v1:= @@[|java:math:RoundingMode.CEILING|]   @type object;
#L0b2e00.   call temp:=  [|java:math:RoundingMode.ordinal|](v1) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0b2e06.   v1:= temp;
#L0b2e08.   v2:= 4  @length 4;
#L0b2e0a.   v0[v1]:= v2;
#L0b2e0e.   v0:= @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]   @type object;
#L0b2e12.   v1:= @@[|java:math:RoundingMode.FLOOR|]   @type object;
#L0b2e16.   call temp:=  [|java:math:RoundingMode.ordinal|](v1) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0b2e1c.   v1:= temp;
#L0b2e1e.   v2:= 5  @length 4;
#L0b2e20.   v0[v1]:= v2;
#L0b2e24.   v0:= @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]   @type object;
#L0b2e28.   v1:= @@[|java:math:RoundingMode.HALF_UP|]   @type object;
#L0b2e2c.   call temp:=  [|java:math:RoundingMode.ordinal|](v1) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0b2e32.   v1:= temp;
#L0b2e34.   v2:= 6  @length 4;
#L0b2e36.   v0[v1]:= v2;
#L0b2e3a.   v0:= @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]   @type object;
#L0b2e3e.   v1:= @@[|java:math:RoundingMode.HALF_DOWN|]   @type object;
#L0b2e42.   call temp:=  [|java:math:RoundingMode.ordinal|](v1) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0b2e48.   v1:= temp;
#L0b2e4a.   v2:= 7  @length 4;
#L0b2e4c.   v0[v1]:= v2;
#L0b2e50.   v0:= @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]   @type object;
#L0b2e54.   v1:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0b2e58.   call temp:=  [|java:math:RoundingMode.ordinal|](v1) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0b2e5e.   v1:= temp;
#L0b2e60.   v2:= 8  @length 16;
#L0b2e64.   v0[v1]:= v2;
#L0b2e68.   return @void ;
#L0b2e6a.   v0:= Exception  @type object;
#L0b2e6c.   goto L0b2e68;
#L0b2e6e.   v0:= Exception  @type object;
#L0b2e70.   goto L0b2e50;
#L0b2e72.   v0:= Exception  @type object;
#L0b2e74.   goto L0b2e3a;
#L0b2e76.   v0:= Exception  @type object;
#L0b2e78.   goto L0b2e24;
#L0b2e7a.   v0:= Exception  @type object;
#L0b2e7c.   goto L0b2e0e;
#L0b2e7e.   v0:= Exception  @type object;
#L0b2e80.   goto L0b2df8;
#L0b2e82.   v0:= Exception  @type object;
#L0b2e84.   goto L0b2de2;
#L0b2e86.   v0:= Exception  @type object;
#L0b2e88.   goto L0b2dcc;
  catch  [|java:lang:NoSuchFieldError|] @[L0b2db6..L0b2dcc] goto L0b2e86;
  catch  [|java:lang:NoSuchFieldError|] @[L0b2dcc..L0b2de2] goto L0b2e82;
  catch  [|java:lang:NoSuchFieldError|] @[L0b2de2..L0b2df8] goto L0b2e7e;
  catch  [|java:lang:NoSuchFieldError|] @[L0b2df8..L0b2e0e] goto L0b2e7a;
  catch  [|java:lang:NoSuchFieldError|] @[L0b2e0e..L0b2e24] goto L0b2e76;
  catch  [|java:lang:NoSuchFieldError|] @[L0b2e24..L0b2e3a] goto L0b2e72;
  catch  [|java:lang:NoSuchFieldError|] @[L0b2e3a..L0b2e50] goto L0b2e6e;
  catch  [|java:lang:NoSuchFieldError|] @[L0b2e50..L0b2e68] goto L0b2e6a;

   }
record [|java:math:BigDecimal|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Number|], [|java:lang:Comparable|], [|java:io:Serializable|] {
      [|int|] [|java:math:BigDecimal.bitLength|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:math:BigDecimal.hashCode|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:math:BigInteger|] [|java:math:BigDecimal.intVal|]    @AccessFlag PRIVATE;
      [|int|] [|java:math:BigDecimal.precision|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:math:BigDecimal.scale|]    @AccessFlag PRIVATE;
      [|long|] [|java:math:BigDecimal.smallValue|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:String|] [|java:math:BigDecimal.toStringImage|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|java:math:BigDecimal|][] @@[|java:math:BigDecimal.BI_SCALED_BY_ZERO|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:math:BigDecimal.BI_SCALED_BY_ZERO_LENGTH|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|char|][] @@[|java:math:BigDecimal.CH_ZEROS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:math:BigInteger|][] @@[|java:math:BigDecimal.FIVE_POW|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|double|] @@[|java:math:BigDecimal.LOG10_2|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|][] @@[|java:math:BigDecimal.LONG_FIVE_POW|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|][] @@[|java:math:BigDecimal.LONG_FIVE_POW_BIT_LENGTH|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|][] @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:math:BigDecimal|] @@[|java:math:BigDecimal.ONE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:math:BigDecimal.ROUND_CEILING|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:math:BigDecimal.ROUND_DOWN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:math:BigDecimal.ROUND_FLOOR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:math:BigDecimal.ROUND_HALF_DOWN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:math:BigDecimal.ROUND_HALF_EVEN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:math:BigDecimal.ROUND_HALF_UP|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:math:BigDecimal.ROUND_UNNECESSARY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:math:BigDecimal.ROUND_UP|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:math:BigDecimal|] @@[|java:math:BigDecimal.TEN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:math:BigInteger|][] @@[|java:math:BigDecimal.TEN_POW|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:math:BigDecimal|] @@[|java:math:BigDecimal.ZERO|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:math:BigDecimal|][] @@[|java:math:BigDecimal.ZERO_SCALED_BY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:math:BigDecimal.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:math:BigDecimal.<clinit>|] () @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0b2f00.   v2:= 11  @length 16;
#L0b2f04.   v4:= 0  @length 4;
#L0b2f06.   v1:= 28  @length 16;
#L0b2f0a.   v1:= new [|long|][v1];
#L0b2f0e.   goto L0b302c;
#L0b2f14.   @@[|java:math:BigDecimal.LONG_FIVE_POW|] := v1  @type object;
#L0b2f18.   v1:= @@[|java:math:BigDecimal.LONG_FIVE_POW|]   @type object;
#L0b2f1c.   v1:= v1.length;
#L0b2f1e.   v1:= new [|int|][v1];
#L0b2f22.   @@[|java:math:BigDecimal.LONG_FIVE_POW_BIT_LENGTH|] := v1  @type object;
#L0b2f26.   v1:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b2f2a.   v1:= v1.length;
#L0b2f2c.   v1:= new [|int|][v1];
#L0b2f30.   @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|] := v1  @type object;
#L0b2f34.   v1:= new [|java:math:BigDecimal|][v2];
#L0b2f38.   @@[|java:math:BigDecimal.BI_SCALED_BY_ZERO|] := v1  @type object;
#L0b2f3c.   v1:= new [|java:math:BigDecimal|][v2];
#L0b2f40.   @@[|java:math:BigDecimal.ZERO_SCALED_BY|] := v1  @type object;
#L0b2f44.   v1:= 100  @length 16;
#L0b2f48.   v1:= new [|char|][v1];
#L0b2f4c.   @@[|java:math:BigDecimal.CH_ZEROS|] := v1  @type object;
#L0b2f50.   v1:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b2f54.   v2:= 48  @length 16;
#L0b2f58.   call temp:=  [|java:util:Arrays.fill|](v1, v2) @signature [|Ljava/util/Arrays;.fill:([CC)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0b2f5e.   v0:= 0  @length 4;
#L0b2f60.   v1:= @@[|java:math:BigDecimal.ZERO_SCALED_BY|]   @type object;
#L0b2f64.   v1:= v1.length;
#L0b2f66.   if v0 >= v1 then goto L0b2f94;
#L0b2f6a.   v1:= @@[|java:math:BigDecimal.BI_SCALED_BY_ZERO|]   @type object;
#L0b2f6e.   v2:= new [|java:math:BigDecimal|];
#L0b2f72.   call temp:=  [|java:math:BigDecimal.<init>|](v2, v0, v4) @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b2f78.   v1[v0]:= v2  @type object;
#L0b2f7c.   v1:= @@[|java:math:BigDecimal.ZERO_SCALED_BY|]   @type object;
#L0b2f80.   v2:= new [|java:math:BigDecimal|];
#L0b2f84.   call temp:=  [|java:math:BigDecimal.<init>|](v2, v4, v0) @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b2f8a.   v1[v0]:= v2  @type object;
#L0b2f8e.   v0:= v0 + 1;
#L0b2f92.   goto L0b2f60;
#L0b2f94.   v0:= 0  @length 4;
#L0b2f96.   v1:= @@[|java:math:BigDecimal.LONG_FIVE_POW_BIT_LENGTH|]   @type object;
#L0b2f9a.   v1:= v1.length;
#L0b2f9c.   if v0 >= v1 then goto L0b2fbe;
#L0b2fa0.   v1:= @@[|java:math:BigDecimal.LONG_FIVE_POW_BIT_LENGTH|]   @type object;
#L0b2fa4.   v2:= @@[|java:math:BigDecimal.LONG_FIVE_POW|]   @type object;
#L0b2fa8.   v2:= v2[v0]  @wide;
#L0b2fac.   call temp:=  [|java:math:BigDecimal.bitLength|](v2, v3) @signature [|Ljava/math/BigDecimal;.bitLength:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b2fb2.   v2:= temp;
#L0b2fb4.   v1[v0]:= v2;
#L0b2fb8.   v0:= v0 + 1;
#L0b2fbc.   goto L0b2f96;
#L0b2fbe.   v0:= 0  @length 4;
#L0b2fc0.   v1:= @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]   @type object;
#L0b2fc4.   v1:= v1.length;
#L0b2fc6.   if v0 >= v1 then goto L0b2fe8;
#L0b2fca.   v1:= @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]   @type object;
#L0b2fce.   v2:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b2fd2.   v2:= v2[v0]  @wide;
#L0b2fd6.   call temp:=  [|java:math:BigDecimal.bitLength|](v2, v3) @signature [|Ljava/math/BigDecimal;.bitLength:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b2fdc.   v2:= temp;
#L0b2fde.   v1[v0]:= v2;
#L0b2fe2.   v0:= v0 + 1;
#L0b2fe6.   goto L0b2fc0;
#L0b2fe8.   v1:= @@[|java:math:Multiplication.bigTenPows|]   @type object;
#L0b2fec.   @@[|java:math:BigDecimal.TEN_POW|] := v1  @type object;
#L0b2ff0.   v1:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0b2ff4.   @@[|java:math:BigDecimal.FIVE_POW|] := v1  @type object;
#L0b2ff8.   v1:= new [|java:math:BigDecimal|];
#L0b2ffc.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v4, v4) @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3002.   @@[|java:math:BigDecimal.ZERO|] := v1  @type object;
#L0b3006.   v1:= new [|java:math:BigDecimal|];
#L0b300a.   v2:= 1  @length 4;
#L0b300c.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v4) @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3012.   @@[|java:math:BigDecimal.ONE|] := v1  @type object;
#L0b3016.   v1:= new [|java:math:BigDecimal|];
#L0b301a.   v2:= 10  @length 16;
#L0b301e.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v4) @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3024.   @@[|java:math:BigDecimal.TEN|] := v1  @type object;
#L0b3028.   return @void ;
#L0b302a.   
#L0b302c.   v1:=`[1L, 5L, 25L, 125L, 625L, 3125L, 15625L, 78125L, 390625L, 1953125L, 9765625L, 48828125L, 244140625L, 1220703125L, 6103515625L, 30517578125L, -2030932031L, -1564725563L, 3814697265625L, -463433411L, 95367431640625L, 476837158203125L, -2094601527L, -1883073043L, -825430623L, 298023223876953125L, 1490116119384765625L, -99612771L ];
               goto L0b2f14;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v11 @type (this), [|double|] v12) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(D)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0b3124.   call temp:=  [|java:lang:Number.<init>|](v11) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b312a.   v7:= 0  @length 4;
#L0b312c.   v11.[|java:math:BigDecimal.toStringImage|]  := v7 @type object;
#L0b3130.   v7:= 0  @length 4;
#L0b3132.   v11.[|java:math:BigDecimal.hashCode|]  := v7;
#L0b3136.   v7:= 0  @length 4;
#L0b3138.   v11.[|java:math:BigDecimal.precision|]  := v7;
#L0b313c.   call temp:=  [|java:lang:Double.isInfinite|](v12, v13) @signature [|Ljava/lang/Double;.isInfinite:(D)Z|] @classDescriptor [|java:lang:Double|] @type static;
#L0b3142.   v7:= temp;
#L0b3144.   if v7 != 0 then goto L0b3154;
#L0b3148.   call temp:=  [|java:lang:Double.isNaN|](v12, v13) @signature [|Ljava/lang/Double;.isNaN:(D)Z|] @classDescriptor [|java:lang:Double|] @type static;
#L0b314e.   v7:= temp;
#L0b3150.   if v7 == 0 then goto L0b3186;
#L0b3154.   v7:= new [|java:lang:NumberFormatException|];
#L0b3158.   v8:= new [|java:lang:StringBuilder|];
#L0b315c.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b3162.   v9:= "Infinity or NaN: " @type (object, string);
#L0b3166.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b316c.   v8:= temp  @type object;
#L0b316e.   call temp:=  [|java:lang:StringBuilder.append|](v8, v12, v13) @signature [|Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b3174.   v8:= temp  @type object;
#L0b3176.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b317c.   v8:= temp  @type object;
#L0b317e.   call temp:=  [|java:lang:NumberFormatException.<init>|](v7, v8) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b3184.   throw v7;
#L0b3186.   call temp:=  [|java:lang:Double.doubleToLongBits|](v12, v13) @signature [|Ljava/lang/Double;.doubleToLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L0b318c.   v1:= temp  @type wide;
#L0b318e.   v7:= 52  @length 16;
#L0b3192.   v7:= v1 ^> v7  @type long;
#L0b3196.   v9:= 2047  @length wide16;
#L0b319a.   v7:= v7 ^& v9  @type long;
#L0b319c.   v7:= (int)v7  @type l2i;
#L0b319e.   v7:= v7 - 1075;
#L0b31a2.   v11.[|java:math:BigDecimal.scale|]  := v7;
#L0b31a6.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b31aa.   v8:= 1075  @length 16;
#L0b31ae.   if v7 != v8 then goto L0b3256;
#L0b31b2.   v7:= 0.000000L  @length wide;
#L0b31bc.   v7:= v7 ^& v1  @type long;
#L0b31be.   v9:= 1  @length 4;
#L0b31c0.   v3:= v7 ^< v9  @type long;
#L0b31c4.   v7:= 0  @length wide16;
#L0b31c8.   v7:= cmp(v3,v7);
#L0b31cc.   if v7 != 0 then goto L0b31dc;
#L0b31d0.   v7:= 0  @length 4;
#L0b31d2.   v11.[|java:math:BigDecimal.scale|]  := v7;
#L0b31d6.   v7:= 1  @length 4;
#L0b31d8.   v11.[|java:math:BigDecimal.precision|]  := v7;
#L0b31dc.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b31e0.   if v7 <= 0 then goto L0b3204;
#L0b31e4.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b31e8.   call temp:=  [|java:lang:Long.numberOfTrailingZeros|](v3, v4) @signature [|Ljava/lang/Long;.numberOfTrailingZeros:(J)I|] @classDescriptor [|java:lang:Long|] @type static;
#L0b31ee.   v8:= temp;
#L0b31f0.   call temp:=  [|java:lang:Math.min|](v7, v8) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b31f6.   v6:= temp;
#L0b31f8.   v3:= v3 ^>> v6  @type long;
#L0b31fa.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b31fe.   v7:= v7 - v6  @type int;
#L0b3200.   v11.[|java:math:BigDecimal.scale|]  := v7;
#L0b3204.   v7:= 63  @length 16;
#L0b3208.   v7:= v1 ^> v7  @type long;
#L0b320c.   v9:= 0  @length wide16;
#L0b3210.   v7:= cmp(v7,v9);
#L0b3214.   if v7 == 0 then goto L0b321a;
#L0b3218.   v3:= -v3  @type long;
#L0b321a.   call temp:=  [|java:math:BigDecimal.bitLength|](v3, v4) @signature [|Ljava/math/BigDecimal;.bitLength:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3220.   v5:= temp;
#L0b3222.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b3226.   if v7 >= 0 then goto L0b32a2;
#L0b322a.   if v5 != 0 then goto L0b326c;
#L0b322e.   v7:= 0  @length 4;
#L0b3230.   v11.[|java:math:BigDecimal.bitLength|]  := v7;
#L0b3234.   v7:= v11.[|java:math:BigDecimal.bitLength|] ;
#L0b3238.   v8:= 64  @length 16;
#L0b323c.   if v7 >= v8 then goto L0b3276;
#L0b3240.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b3244.   v7:= -v7  @type int;
#L0b3246.   v7:= v3 ^< v7  @type long;
#L0b324a.   v11.[|java:math:BigDecimal.smallValue|]  := v7 @wide;
#L0b324e.   v7:= 0  @length 4;
#L0b3250.   v11.[|java:math:BigDecimal.scale|]  := v7;
#L0b3254.   return @void ;
#L0b3256.   v7:= 0.000000L  @length wide;
#L0b3260.   v7:= v7 ^& v1  @type long;
#L0b3262.   v9:= 4503599627370496L  @length wide_high16;
#L0b3266.   v3:= v7 ^| v9  @type long;
#L0b326a.   goto L0b31c4;
#L0b326c.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b3270.   v7:= v5 - v7  @type int;
#L0b3274.   goto L0b3230;
#L0b3276.   v0:= new [|java:math:BigInt|];
#L0b327a.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b3280.   call temp:=  [|java:math:BigInt.putLongInt|](v0, v3, v4) @signature [|Ljava/math/BigInt;.putLongInt:(J)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b3286.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b328a.   v7:= -v7  @type int;
#L0b328c.   call temp:=  [|java:math:BigInt.shift|](v0, v7) @signature [|Ljava/math/BigInt;.shift:(I)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b3292.   v7:= new [|java:math:BigInteger|];
#L0b3296.   call temp:=  [|java:math:BigInteger.<init>|](v7, v0) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b329c.   v11.[|java:math:BigDecimal.intVal|]  := v7 @type object;
#L0b32a0.   goto L0b324e;
#L0b32a2.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b32a6.   if v7 <= 0 then goto L0b330e;
#L0b32aa.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b32ae.   v8:= @@[|java:math:BigDecimal.LONG_FIVE_POW|]   @type object;
#L0b32b2.   v8:= v8.length;
#L0b32b4.   if v7 >= v8 then goto L0b32f2;
#L0b32b8.   v7:= @@[|java:math:BigDecimal.LONG_FIVE_POW_BIT_LENGTH|]   @type object;
#L0b32bc.   v8:= v11.[|java:math:BigDecimal.scale|] ;
#L0b32c0.   v7:= v7[v8];
#L0b32c4.   v7:= v7 + v5  @type int;
#L0b32c6.   v8:= 64  @length 16;
#L0b32ca.   if v7 >= v8 then goto L0b32f2;
#L0b32ce.   v7:= @@[|java:math:BigDecimal.LONG_FIVE_POW|]   @type object;
#L0b32d2.   v8:= v11.[|java:math:BigDecimal.scale|] ;
#L0b32d6.   v7:= v7[v8]  @wide;
#L0b32da.   v7:= v7 * v3  @type long;
#L0b32dc.   v11.[|java:math:BigDecimal.smallValue|]  := v7 @wide;
#L0b32e0.   v7:= v11.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b32e4.   call temp:=  [|java:math:BigDecimal.bitLength|](v7, v8) @signature [|Ljava/math/BigDecimal;.bitLength:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b32ea.   v7:= temp;
#L0b32ec.   v11.[|java:math:BigDecimal.bitLength|]  := v7;
#L0b32f0.   goto L0b3254;
#L0b32f2.   call temp:=  [|java:math:BigInteger.valueOf|](v3, v4) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b32f8.   v7:= temp  @type object;
#L0b32fa.   v8:= v11.[|java:math:BigDecimal.scale|] ;
#L0b32fe.   call temp:=  [|java:math:Multiplication.multiplyByFivePow|](v7, v8) @signature [|Ljava/math/Multiplication;.multiplyByFivePow:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b3304.   v7:= temp  @type object;
#L0b3306.   call temp:=  [|java:math:BigDecimal.setUnscaledValue|](v11, v7) @signature [|Ljava/math/BigDecimal;.setUnscaledValue:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b330c.   goto L0b3254;
#L0b330e.   v11.[|java:math:BigDecimal.smallValue|]  := v3 @wide;
#L0b3312.   v11.[|java:math:BigDecimal.bitLength|]  := v5;
#L0b3316.   goto L0b3254;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v0 @type (this), [|double|] v1, [|java:math:MathContext|] v3 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(DLjava/math/MathContext;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b3328.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:(D)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b332e.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v3) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3334.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v1 @type (this), [|int|] v2) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b3348.   v0:= 0  @length 4;
#L0b334a.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v0) @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3350.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v2 @type (this), [|int|] v3, [|int|] v4) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b3364.   v1:= 0  @length 4;
#L0b3366.   call temp:=  [|java:lang:Number.<init>|](v2) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b336c.   v0:= 0  @length 4;
#L0b336e.   v2.[|java:math:BigDecimal.toStringImage|]  := v0 @type object;
#L0b3372.   v2.[|java:math:BigDecimal.hashCode|]  := v1;
#L0b3376.   v2.[|java:math:BigDecimal.precision|]  := v1;
#L0b337a.   v0:= (long)v3  @type i2l;
#L0b337c.   v2.[|java:math:BigDecimal.smallValue|]  := v0 @wide;
#L0b3380.   v2.[|java:math:BigDecimal.scale|]  := v4;
#L0b3384.   call temp:=  [|java:math:BigDecimal.bitLength|](v3) @signature [|Ljava/math/BigDecimal;.bitLength:(I)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b338a.   v0:= temp;
#L0b338c.   v2.[|java:math:BigDecimal.bitLength|]  := v0;
#L0b3390.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v1 @type (this), [|int|] v2, [|java:math:MathContext|] v3 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(ILjava/math/MathContext;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b33a4.   v0:= 0  @length 4;
#L0b33a6.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v0) @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b33ac.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v1, v3) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b33b2.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v1 @type (this), [|long|] v2) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b33c4.   v0:= 0  @length 4;
#L0b33c6.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v3, v0) @signature [|Ljava/math/BigDecimal;.<init>:(JI)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b33cc.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v2 @type (this), [|long|] v3, [|int|] v5) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(JI)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b33e0.   v1:= 0  @length 4;
#L0b33e2.   call temp:=  [|java:lang:Number.<init>|](v2) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b33e8.   v0:= 0  @length 4;
#L0b33ea.   v2.[|java:math:BigDecimal.toStringImage|]  := v0 @type object;
#L0b33ee.   v2.[|java:math:BigDecimal.hashCode|]  := v1;
#L0b33f2.   v2.[|java:math:BigDecimal.precision|]  := v1;
#L0b33f6.   v2.[|java:math:BigDecimal.smallValue|]  := v3 @wide;
#L0b33fa.   v2.[|java:math:BigDecimal.scale|]  := v5;
#L0b33fe.   call temp:=  [|java:math:BigDecimal.bitLength|](v3, v4) @signature [|Ljava/math/BigDecimal;.bitLength:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3404.   v0:= temp;
#L0b3406.   v2.[|java:math:BigDecimal.bitLength|]  := v0;
#L0b340a.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v0 @type (this), [|long|] v1, [|java:math:MathContext|] v3 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(JLjava/math/MathContext;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b341c.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:(J)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3422.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v3) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3428.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b343c.   call temp:=  [|java:lang:String.toCharArray|](v4) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b3442.   v0:= temp  @type object;
#L0b3444.   v1:= 0  @length 4;
#L0b3446.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b344c.   v2:= temp;
#L0b344e.   call temp:=  [|java:math:BigDecimal.<init>|](v3, v0, v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:([CII)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3454.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:math:MathContext|] v5 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;Ljava/math/MathContext;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b3468.   call temp:=  [|java:lang:String.toCharArray|](v4) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b346e.   v0:= temp  @type object;
#L0b3470.   v1:= 0  @length 4;
#L0b3472.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b3478.   v2:= temp;
#L0b347a.   call temp:=  [|java:math:BigDecimal.<init>|](v3, v0, v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:([CII)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3480.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v3, v5) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3486.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v1 @type (this), [|java:math:BigInteger|] v2 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b3498.   v0:= 0  @length 4;
#L0b349a.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v0) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b34a0.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v2 @type (this), [|java:math:BigInteger|] v3 @type (object), [|int|] v4) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b34b4.   v1:= 0  @length 4;
#L0b34b6.   call temp:=  [|java:lang:Number.<init>|](v2) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b34bc.   v0:= 0  @length 4;
#L0b34be.   v2.[|java:math:BigDecimal.toStringImage|]  := v0 @type object;
#L0b34c2.   v2.[|java:math:BigDecimal.hashCode|]  := v1;
#L0b34c6.   v2.[|java:math:BigDecimal.precision|]  := v1;
#L0b34ca.   if v3 != 0 then goto L0b34de;
#L0b34ce.   v0:= new [|java:lang:NullPointerException|];
#L0b34d2.   v1:= "unscaledVal == null" @type (object, string);
#L0b34d6.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b34dc.   throw v0;
#L0b34de.   v2.[|java:math:BigDecimal.scale|]  := v4;
#L0b34e2.   call temp:=  [|java:math:BigDecimal.setUnscaledValue|](v2, v3) @signature [|Ljava/math/BigDecimal;.setUnscaledValue:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b34e8.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v0 @type (this), [|java:math:BigInteger|] v1 @type (object), [|int|] v2, [|java:math:MathContext|] v3 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;ILjava/math/MathContext;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b34fc.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3502.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v3) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3508.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v0 @type (this), [|java:math:BigInteger|] v1 @type (object), [|java:math:MathContext|] v2 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;Ljava/math/MathContext;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b351c.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3522.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v2) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3528.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v2 @type (this), [|char|][] v3) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:([C)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b353c.   v0:= 0  @length 4;
#L0b353e.   v1:= v3.length;
#L0b3540.   call temp:=  [|java:math:BigDecimal.<init>|](v2, v3, v0, v1) @signature [|Ljava/math/BigDecimal;.<init>:([CII)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3546.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v14 @type (this), [|char|][] v15, [|int|] v16, [|int|] v17) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:([CII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L0b3558.   call temp:=  [|java:lang:Number.<init>|](v14) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b355e.   v10:= 0  @length 4;
#L0b3560.   v14.[|java:math:BigDecimal.toStringImage|]  := v10 @type object;
#L0b3564.   v10:= 0  @length 4;
#L0b3566.   v14.[|java:math:BigDecimal.hashCode|]  := v10;
#L0b356a.   v10:= 0  @length 4;
#L0b356c.   v14.[|java:math:BigDecimal.precision|]  := v10;
#L0b3570.   v1:= v16;
#L0b3574.   v10:= v17 + -1;
#L0b3578.   v4:= v16 + v10  @type int;
#L0b357c.   if v15 != 0 then goto L0b3590;
#L0b3580.   v10:= new [|java:lang:NullPointerException|];
#L0b3584.   v11:= "in == null" @type (object, string);
#L0b3588.   call temp:=  [|java:lang:NullPointerException.<init>|](v10, v11) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b358e.   throw v10;
#L0b3590.   v10:= v15.length;
#L0b3592.   if v4 >= v10 then goto L0b35a2;
#L0b3596.   if v16 < 0 then goto L0b35a2;
#L0b359a.   if v17 <= 0 then goto L0b35a2;
#L0b359e.   if v4 >= 0 then goto L0b3606;
#L0b35a2.   v10:= new [|java:lang:NumberFormatException|];
#L0b35a6.   v11:= new [|java:lang:StringBuilder|];
#L0b35aa.   call temp:=  [|java:lang:StringBuilder.<init>|](v11) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b35b0.   v12:= "Bad offset/length: offset=" @type (object, string);
#L0b35b4.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b35ba.   v11:= temp  @type object;
#L0b35bc.   v0:= v16;
#L0b35c0.   call temp:=  [|java:lang:StringBuilder.append|](v11, v0) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b35c6.   v11:= temp  @type object;
#L0b35c8.   v12:= " len=" @type (object, string);
#L0b35cc.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b35d2.   v11:= temp  @type object;
#L0b35d4.   v0:= v17;
#L0b35d8.   call temp:=  [|java:lang:StringBuilder.append|](v11, v0) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b35de.   v11:= temp  @type object;
#L0b35e0.   v12:= " in.length=" @type (object, string);
#L0b35e4.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b35ea.   v11:= temp  @type object;
#L0b35ec.   v12:= v15.length;
#L0b35ee.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b35f4.   v11:= temp  @type object;
#L0b35f6.   call temp:=  [|java:lang:StringBuilder.toString|](v11) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b35fc.   v11:= temp  @type object;
#L0b35fe.   call temp:=  [|java:lang:NumberFormatException.<init>|](v10, v11) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b3604.   throw v10;
#L0b3606.   v8:= new [|java:lang:StringBuilder|];
#L0b360a.   v0:= v17;
#L0b360e.   call temp:=  [|java:lang:StringBuilder.<init>|](v8, v0) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b3614.   v2:= 0  @length 4;
#L0b3616.   v0:= v16;
#L0b361a.   if v0 > v4 then goto L0b3632;
#L0b361e.   v10:= v15[v16]  @char;
#L0b3622.   v11:= 43  @length 16;
#L0b3626.   if v10 != v11 then goto L0b3632;
#L0b362a.   v16:= v16 + 1;
#L0b362e.   v1:= v1 + 1;
#L0b3632.   v3:= 0  @length 4;
#L0b3634.   v9:= 0  @length 4;
#L0b3636.   v0:= v16;
#L0b363a.   if v0 > v4 then goto L0b3680;
#L0b363e.   v10:= v15[v16]  @char;
#L0b3642.   v11:= 46  @length 16;
#L0b3646.   if v10 == v11 then goto L0b3680;
#L0b364a.   v10:= v15[v16]  @char;
#L0b364e.   v11:= 101  @length 16;
#L0b3652.   if v10 == v11 then goto L0b3680;
#L0b3656.   v10:= v15[v16]  @char;
#L0b365a.   v11:= 69  @length 16;
#L0b365e.   if v10 == v11 then goto L0b3680;
#L0b3662.   if v9 != 0 then goto L0b3676;
#L0b3666.   v10:= v15[v16]  @char;
#L0b366a.   v11:= 48  @length 16;
#L0b366e.   if v10 != v11 then goto L0b367c;
#L0b3672.   v3:= v3 + 1;
#L0b3676.   v16:= v16 + 1;
#L0b367a.   goto L0b3636;
#L0b367c.   v9:= 1  @length 4;
#L0b367e.   goto L0b3676;
#L0b3680.   v10:= v16 - v1  @type int;
#L0b3684.   call temp:=  [|java:lang:StringBuilder.append|](v8, v15, v1, v10) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b368a.   v10:= v16 - v1  @type int;
#L0b368e.   v2:= v2 + v10  @type int;
#L0b3690.   v0:= v16;
#L0b3694.   if v0 > v4 then goto L0b37a0;
#L0b3698.   v10:= v15[v16]  @char;
#L0b369c.   v11:= 46  @length 16;
#L0b36a0.   if v10 != v11 then goto L0b37a0;
#L0b36a4.   v16:= v16 + 1;
#L0b36a8.   v1:= v16;
#L0b36ac.   v0:= v16;
#L0b36b0.   if v0 > v4 then goto L0b36ea;
#L0b36b4.   v10:= v15[v16]  @char;
#L0b36b8.   v11:= 101  @length 16;
#L0b36bc.   if v10 == v11 then goto L0b36ea;
#L0b36c0.   v10:= v15[v16]  @char;
#L0b36c4.   v11:= 69  @length 16;
#L0b36c8.   if v10 == v11 then goto L0b36ea;
#L0b36cc.   if v9 != 0 then goto L0b36e0;
#L0b36d0.   v10:= v15[v16]  @char;
#L0b36d4.   v11:= 48  @length 16;
#L0b36d8.   if v10 != v11 then goto L0b36e6;
#L0b36dc.   v3:= v3 + 1;
#L0b36e0.   v16:= v16 + 1;
#L0b36e4.   goto L0b36ac;
#L0b36e6.   v9:= 1  @length 4;
#L0b36e8.   goto L0b36e0;
#L0b36ea.   v10:= v16 - v1  @type int;
#L0b36ee.   v14.[|java:math:BigDecimal.scale|]  := v10;
#L0b36f2.   v10:= v14.[|java:math:BigDecimal.scale|] ;
#L0b36f6.   v2:= v2 + v10  @type int;
#L0b36f8.   v10:= v14.[|java:math:BigDecimal.scale|] ;
#L0b36fc.   call temp:=  [|java:lang:StringBuilder.append|](v8, v15, v1, v10) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b3702.   v0:= v16;
#L0b3706.   if v0 > v4 then goto L0b37a8;
#L0b370a.   v10:= v15[v16]  @char;
#L0b370e.   v11:= 101  @length 16;
#L0b3712.   if v10 == v11 then goto L0b3722;
#L0b3716.   v10:= v15[v16]  @char;
#L0b371a.   v11:= 69  @length 16;
#L0b371e.   if v10 != v11 then goto L0b37a8;
#L0b3722.   v16:= v16 + 1;
#L0b3726.   v1:= v16;
#L0b372a.   v0:= v16;
#L0b372e.   if v0 > v4 then goto L0b375a;
#L0b3732.   v10:= v15[v16]  @char;
#L0b3736.   v11:= 43  @length 16;
#L0b373a.   if v10 != v11 then goto L0b375a;
#L0b373e.   v16:= v16 + 1;
#L0b3742.   v0:= v16;
#L0b3746.   if v0 > v4 then goto L0b375a;
#L0b374a.   v10:= v15[v16]  @char;
#L0b374e.   v11:= 45  @length 16;
#L0b3752.   if v10 == v11 then goto L0b375a;
#L0b3756.   v1:= v1 + 1;
#L0b375a.   v10:= v4 + 1;
#L0b375e.   v10:= v10 - v1  @type int;
#L0b3760.   call temp:=  [|java:lang:String.valueOf|](v15, v1, v10) @signature [|Ljava/lang/String;.valueOf:([CII)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L0b3766.   v7:= temp  @type object;
#L0b3768.   v10:= v14.[|java:math:BigDecimal.scale|] ;
#L0b376c.   v10:= (long)v10  @type i2l;
#L0b376e.   call temp:=  [|java:lang:Integer.parseInt|](v7) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b3774.   v12:= temp;
#L0b3776.   v12:= (long)v12  @type i2l;
#L0b3778.   v5:= v10 - v12  @type long;
#L0b377c.   v10:= (int)v5  @type l2i;
#L0b377e.   v14.[|java:math:BigDecimal.scale|]  := v10;
#L0b3782.   v10:= v14.[|java:math:BigDecimal.scale|] ;
#L0b3786.   v10:= (long)v10  @type i2l;
#L0b3788.   v10:= cmp(v5,v10);
#L0b378c.   if v10 == 0 then goto L0b37a8;
#L0b3790.   v10:= new [|java:lang:NumberFormatException|];
#L0b3794.   v11:= "Scale out of range" @type (object, string);
#L0b3798.   call temp:=  [|java:lang:NumberFormatException.<init>|](v10, v11) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b379e.   throw v10;
#L0b37a0.   v10:= 0  @length 4;
#L0b37a2.   v14.[|java:math:BigDecimal.scale|]  := v10;
#L0b37a6.   goto L0b3702;
#L0b37a8.   v10:= 19  @length 16;
#L0b37ac.   if v2 >= v10 then goto L0b3802;
#L0b37b0.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b37b6.   v10:= temp  @type object;
#L0b37b8.   call temp:=  [|java:lang:Long.parseLong|](v10) @signature [|Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J|] @classDescriptor [|java:lang:Long|] @type static;
#L0b37be.   v10:= temp  @type wide;
#L0b37c0.   v14.[|java:math:BigDecimal.smallValue|]  := v10 @wide;
#L0b37c4.   v10:= v14.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b37c8.   call temp:=  [|java:math:BigDecimal.bitLength|](v10, v11) @signature [|Ljava/math/BigDecimal;.bitLength:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b37ce.   v10:= temp;
#L0b37d0.   v14.[|java:math:BigDecimal.bitLength|]  := v10;
#L0b37d4.   call temp:=  [|java:lang:StringBuilder.length|](v8) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b37da.   v10:= temp;
#L0b37dc.   v10:= v10 - v3  @type int;
#L0b37de.   v14.[|java:math:BigDecimal.precision|]  := v10;
#L0b37e2.   v10:= 0  @length 4;
#L0b37e4.   call temp:=  [|java:lang:StringBuilder.charAt|](v8, v10) @signature [|Ljava/lang/StringBuilder;.charAt:(I)C|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b37ea.   v10:= temp;
#L0b37ec.   v11:= 45  @length 16;
#L0b37f0.   if v10 != v11 then goto L0b3800;
#L0b37f4.   v10:= v14.[|java:math:BigDecimal.precision|] ;
#L0b37f8.   v10:= v10 + -1;
#L0b37fc.   v14.[|java:math:BigDecimal.precision|]  := v10;
#L0b3800.   return @void ;
#L0b3802.   v10:= new [|java:math:BigInteger|];
#L0b3806.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b380c.   v11:= temp  @type object;
#L0b380e.   call temp:=  [|java:math:BigInteger.<init>|](v10, v11) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b3814.   call temp:=  [|java:math:BigDecimal.setUnscaledValue|](v14, v10) @signature [|Ljava/math/BigDecimal;.setUnscaledValue:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b381a.   goto L0b37d4;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v0 @type (this), [|char|][] v1, [|int|] v2, [|int|] v3, [|java:math:MathContext|] v4 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:([CIILjava/math/MathContext;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0b382c.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1, v2, v3) @signature [|Ljava/math/BigDecimal;.<init>:([CII)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3832.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v4) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3838.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.<init>|] ([|java:math:BigDecimal|] v2 @type (this), [|char|][] v3, [|java:math:MathContext|] v4 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.<init>:([CLjava/math/MathContext;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b384c.   v0:= 0  @length 4;
#L0b384e.   v1:= v3.length;
#L0b3850.   call temp:=  [|java:math:BigDecimal.<init>|](v2, v3, v0, v1) @signature [|Ljava/math/BigDecimal;.<init>:([CII)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3856.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v2, v4) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b385c.   return @void ;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.addAndMult10|] ([|java:math:BigDecimal|] v7 @type (object), [|java:math:BigDecimal|] v8 @type (object), [|int|] v9) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.addAndMult10:(Ljava/math/BigDecimal;Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b3870.   v1:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b3874.   v1:= v1.length;
#L0b3876.   if v9 >= v1 then goto L0b38c2;
#L0b387a.   v1:= v7.[|java:math:BigDecimal.bitLength|] ;
#L0b387e.   v2:= v8.[|java:math:BigDecimal.bitLength|] ;
#L0b3882.   v3:= @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]   @type object;
#L0b3886.   v3:= v3[v9];
#L0b388a.   v2:= v2 + v3  @type int;
#L0b388c.   call temp:=  [|java:lang:Math.max|](v1, v2) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3892.   v1:= temp;
#L0b3894.   v1:= v1 + 1;
#L0b3898.   v2:= 64  @length 16;
#L0b389c.   if v1 >= v2 then goto L0b38c2;
#L0b38a0.   v1:= v7.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b38a4.   v3:= v8.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b38a8.   v5:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b38ac.   v5:= v5[v9]  @wide;
#L0b38b0.   v3:= v3 * v5  @type long;
#L0b38b2.   v1:= v1 + v3  @type long;
#L0b38b4.   v3:= v7.[|java:math:BigDecimal.scale|] ;
#L0b38b8.   call temp:=  [|java:math:BigDecimal.valueOf|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b38be.   v1:= temp  @type object;
#L0b38c0.   return v1  @type object;
#L0b38c2.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v8) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b38c8.   v1:= temp  @type object;
#L0b38ca.   v2:= (long)v9  @type i2l;
#L0b38cc.   call temp:=  [|java:math:Multiplication.multiplyByTenPow|](v1, v2, v3) @signature [|Ljava/math/Multiplication;.multiplyByTenPow:(Ljava/math/BigInteger;J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b38d2.   v1:= temp  @type object;
#L0b38d4.   call temp:=  [|java:math:BigInteger.getBigInt|](v1) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b38da.   v0:= temp  @type object;
#L0b38dc.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v7) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b38e2.   v1:= temp  @type object;
#L0b38e4.   call temp:=  [|java:math:BigInteger.getBigInt|](v1) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b38ea.   v1:= temp  @type object;
#L0b38ec.   call temp:=  [|java:math:BigInt.add|](v0, v1) @signature [|Ljava/math/BigInt;.add:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b38f2.   v1:= new [|java:math:BigDecimal|];
#L0b38f6.   v2:= new [|java:math:BigInteger|];
#L0b38fa.   call temp:=  [|java:math:BigInteger.<init>|](v2, v0) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b3900.   v3:= v7.[|java:math:BigDecimal.scale|] ;
#L0b3904.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b390a.   goto L0b38c0;

   }
    procedure [|int|] [|java:math:BigDecimal.approxPrecision|] ([|java:math:BigDecimal|] v4 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b391c.   v0:= v4.[|java:math:BigDecimal.precision|] ;
#L0b3920.   if v0 <= 0 then goto L0b392a;
#L0b3924.   v0:= v4.[|java:math:BigDecimal.precision|] ;
#L0b3928.   return v0;
#L0b392a.   v0:= v4.[|java:math:BigDecimal.bitLength|] ;
#L0b392e.   v0:= v0 + -1;
#L0b3932.   v0:= (double)v0  @type i2d;
#L0b3934.   v2:= 0.301030L  @length wide;
#L0b393e.   v0:= v0 * v2  @type double;
#L0b3940.   v0:= (int)v0  @type d2i;
#L0b3942.   v0:= v0 + 1;
#L0b3946.   goto L0b3928;

   }
    procedure [|int|] [|java:math:BigDecimal.bitLength|] ([|int|] v1) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.bitLength:(I)I|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L0b3958.   if v1 >= 0 then goto L0b3960;
#L0b395c.   v1:= v1 ^~ -1;
#L0b3960.   call temp:=  [|java:lang:Integer.numberOfLeadingZeros|](v1) @signature [|Ljava/lang/Integer;.numberOfLeadingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b3966.   v0:= temp;
#L0b3968.   v0:= v0 - 32;
#L0b396c.   return v0;

   }
    procedure [|int|] [|java:math:BigDecimal.bitLength|] ([|long|] v2) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.bitLength:(J)I|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b3980.   v0:= 0  @length wide16;
#L0b3984.   v0:= cmp(v2,v0);
#L0b3988.   if v0 >= 0 then goto L0b3992;
#L0b398c.   v0:= -1  @length wide16;
#L0b3990.   v2:= v2 ^~ v0  @type long;
#L0b3992.   call temp:=  [|java:lang:Long.numberOfLeadingZeros|](v2, v3) @signature [|Ljava/lang/Long;.numberOfLeadingZeros:(J)I|] @classDescriptor [|java:lang:Long|] @type static;
#L0b3998.   v0:= temp;
#L0b399a.   v0:= v0 - 64;
#L0b399e.   return v0;

   }
    procedure [|int|] [|java:math:BigDecimal.decimalDigitsInLong|] ([|java:math:BigDecimal|] v4 @type (this), [|long|] v5) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.decimalDigitsInLong:(J)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b39b0.   v1:= -9223372036854775808L  @length wide_high16;
#L0b39b4.   v1:= cmp(v5,v1);
#L0b39b8.   if v1 != 0 then goto L0b39c2;
#L0b39bc.   v1:= 19  @length 16;
#L0b39c0.   return v1;
#L0b39c2.   v1:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b39c6.   call temp:=  [|java:lang:Math.abs|](v5, v6) @signature [|Ljava/lang/Math;.abs:(J)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b39cc.   v2:= temp  @type wide;
#L0b39ce.   call temp:=  [|java:util:Arrays.binarySearch|](v1, v2, v3) @signature [|Ljava/util/Arrays;.binarySearch:([JJ)I|] @classDescriptor [|java:util:Arrays|] @type static;
#L0b39d4.   v0:= temp;
#L0b39d6.   if v0 >= 0 then goto L0b39e2;
#L0b39da.   v1:= -v0  @type int;
#L0b39dc.   v1:= v1 + -1;
#L0b39e0.   goto L0b39c0;
#L0b39e2.   v1:= v0 + 1;
#L0b39e6.   goto L0b39c0;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.divideBigIntegers|] ([|java:math:BigInteger|] v14 @type (object), [|java:math:BigInteger|] v15 @type (object), [|int|] v16, [|java:math:RoundingMode|] v17 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divideBigIntegers:(Ljava/math/BigInteger;Ljava/math/BigInteger;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L0b39f8.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v14, v15) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b39fe.   v4:= temp  @type object;
#L0b3a00.   v10:= 0  @length 4;
#L0b3a02.   v5:= v4[v10]  @type object;
#L0b3a06.   v10:= 1  @length 4;
#L0b3a08.   v8:= v4[v10]  @type object;
#L0b3a0c.   call temp:=  [|java:math:BigInteger.signum|](v8) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3a12.   v10:= temp;
#L0b3a14.   if v10 != 0 then goto L0b3a28;
#L0b3a18.   v10:= new [|java:math:BigDecimal|];
#L0b3a1c.   v0:= v16;
#L0b3a20.   call temp:=  [|java:math:BigDecimal.<init>|](v10, v5, v0) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3a26.   return v10  @type object;
#L0b3a28.   call temp:=  [|java:math:BigInteger.signum|](v14) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3a2e.   v10:= temp;
#L0b3a30.   call temp:=  [|java:math:BigInteger.signum|](v15) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3a36.   v11:= temp;
#L0b3a38.   v9:= v10 * v11  @type int;
#L0b3a3c.   call temp:=  [|java:math:BigInteger.bitLength|](v15) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3a42.   v10:= temp;
#L0b3a44.   v11:= 63  @length 16;
#L0b3a48.   if v10 >= v11 then goto L0b3ace;
#L0b3a4c.   call temp:=  [|java:math:BigInteger.longValue|](v8) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3a52.   v6:= temp  @type wide;
#L0b3a54.   call temp:=  [|java:math:BigInteger.longValue|](v15) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3a5a.   v2:= temp  @type wide;
#L0b3a5c.   call temp:=  [|java:lang:Math.abs|](v6, v7) @signature [|Ljava/lang/Math;.abs:(J)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3a62.   v10:= temp  @type wide;
#L0b3a64.   v12:= 2  @length wide16;
#L0b3a68.   v10:= v10 * v12  @type long;
#L0b3a6a.   call temp:=  [|java:lang:Math.abs|](v2, v3) @signature [|Ljava/lang/Math;.abs:(J)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3a70.   v12:= temp  @type wide;
#L0b3a72.   call temp:=  [|java:math:BigDecimal.longCompareTo|](v10, v11, v12, v13) @signature [|Ljava/math/BigDecimal;.longCompareTo:(JJ)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3a78.   v1:= temp;
#L0b3a7a.   v10:= 0  @length 4;
#L0b3a7c.   call temp:=  [|java:math:BigInteger.testBit|](v5, v10) @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3a82.   v10:= temp;
#L0b3a84.   if v10 == 0 then goto L0b3aca;
#L0b3a88.   v10:= 1  @length 4;
#L0b3a8a.   v11:= v1 + 5;
#L0b3a8e.   v11:= v11 * v9  @type int;
#L0b3a90.   v0:= v17  @type object;
#L0b3a94.   call temp:=  [|java:math:BigDecimal.roundingBehavior|](v10, v11, v0) @signature [|Ljava/math/BigDecimal;.roundingBehavior:(IILjava/math/RoundingMode;)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3a9a.   v1:= temp;
#L0b3a9c.   if v1 == 0 then goto L0b3b3a;
#L0b3aa0.   call temp:=  [|java:math:BigInteger.bitLength|](v5) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3aa6.   v10:= temp;
#L0b3aa8.   v11:= 63  @length 16;
#L0b3aac.   if v10 >= v11 then goto L0b3b16;
#L0b3ab0.   call temp:=  [|java:math:BigInteger.longValue|](v5) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3ab6.   v10:= temp  @type wide;
#L0b3ab8.   v12:= (long)v1  @type i2l;
#L0b3aba.   v10:= v10 + v12  @type long;
#L0b3abc.   v0:= v16;
#L0b3ac0.   call temp:=  [|java:math:BigDecimal.valueOf|](v10, v11, v0) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3ac6.   v10:= temp  @type object;
#L0b3ac8.   goto L0b3a26;
#L0b3aca.   v10:= 0  @length 4;
#L0b3acc.   goto L0b3a8a;
#L0b3ace.   call temp:=  [|java:math:BigInteger.abs|](v8) @signature [|Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3ad4.   v10:= temp  @type object;
#L0b3ad6.   call temp:=  [|java:math:BigInteger.shiftLeftOneBit|](v10) @signature [|Ljava/math/BigInteger;.shiftLeftOneBit:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3adc.   v10:= temp  @type object;
#L0b3ade.   call temp:=  [|java:math:BigInteger.abs|](v15) @signature [|Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3ae4.   v11:= temp  @type object;
#L0b3ae6.   call temp:=  [|java:math:BigInteger.compareTo|](v10, v11) @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3aec.   v1:= temp;
#L0b3aee.   v10:= 0  @length 4;
#L0b3af0.   call temp:=  [|java:math:BigInteger.testBit|](v5, v10) @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3af6.   v10:= temp;
#L0b3af8.   if v10 == 0 then goto L0b3b12;
#L0b3afc.   v10:= 1  @length 4;
#L0b3afe.   v11:= v1 + 5;
#L0b3b02.   v11:= v11 * v9  @type int;
#L0b3b04.   v0:= v17  @type object;
#L0b3b08.   call temp:=  [|java:math:BigDecimal.roundingBehavior|](v10, v11, v0) @signature [|Ljava/math/BigDecimal;.roundingBehavior:(IILjava/math/RoundingMode;)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3b0e.   v1:= temp;
#L0b3b10.   goto L0b3a9c;
#L0b3b12.   v10:= 0  @length 4;
#L0b3b14.   goto L0b3afe;
#L0b3b16.   v10:= (long)v1  @type i2l;
#L0b3b18.   call temp:=  [|java:math:BigInteger.valueOf|](v10, v11) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b3b1e.   v10:= temp  @type object;
#L0b3b20.   call temp:=  [|java:math:BigInteger.add|](v5, v10) @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3b26.   v5:= temp  @type object;
#L0b3b28.   v10:= new [|java:math:BigDecimal|];
#L0b3b2c.   v0:= v16;
#L0b3b30.   call temp:=  [|java:math:BigDecimal.<init>|](v10, v5, v0) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3b36.   goto L0b3a26;
#L0b3b3a.   v10:= new [|java:math:BigDecimal|];
#L0b3b3e.   v0:= v16;
#L0b3b42.   call temp:=  [|java:math:BigDecimal.<init>|](v10, v5, v0) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3b48.   goto L0b3a26;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.dividePrimitiveLongs|] ([|long|] v10, [|long|] v12, [|int|] v14, [|java:math:RoundingMode|] v15 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.dividePrimitiveLongs:(JJILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0b3b5c.   v1:= v10 / v12  @type long;
#L0b3b60.   v3:= v10 % v12  @type long;
#L0b3b64.   call temp:=  [|java:lang:Long.signum|](v10, v11) @signature [|Ljava/lang/Long;.signum:(J)I|] @classDescriptor [|java:lang:Long|] @type static;
#L0b3b6a.   v6:= temp;
#L0b3b6c.   call temp:=  [|java:lang:Long.signum|](v12, v13) @signature [|Ljava/lang/Long;.signum:(J)I|] @classDescriptor [|java:lang:Long|] @type static;
#L0b3b72.   v7:= temp;
#L0b3b74.   v5:= v6 * v7  @type int;
#L0b3b78.   v6:= 0  @length wide16;
#L0b3b7c.   v6:= cmp(v3,v6);
#L0b3b80.   if v6 == 0 then goto L0b3bba;
#L0b3b84.   call temp:=  [|java:lang:Math.abs|](v3, v4) @signature [|Ljava/lang/Math;.abs:(J)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3b8a.   v6:= temp  @type wide;
#L0b3b8c.   v8:= 2  @length wide16;
#L0b3b90.   v6:= v6 * v8  @type long;
#L0b3b92.   call temp:=  [|java:lang:Math.abs|](v12, v13) @signature [|Ljava/lang/Math;.abs:(J)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3b98.   v8:= temp  @type wide;
#L0b3b9a.   call temp:=  [|java:math:BigDecimal.longCompareTo|](v6, v7, v8, v9) @signature [|Ljava/math/BigDecimal;.longCompareTo:(JJ)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3ba0.   v0:= temp;
#L0b3ba2.   v6:= (int)v1  @type l2i;
#L0b3ba4.   v6:= v6 ^& 1;
#L0b3ba8.   v7:= v0 + 5;
#L0b3bac.   v7:= v7 * v5  @type int;
#L0b3bae.   call temp:=  [|java:math:BigDecimal.roundingBehavior|](v6, v7, v15) @signature [|Ljava/math/BigDecimal;.roundingBehavior:(IILjava/math/RoundingMode;)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3bb4.   v6:= temp;
#L0b3bb6.   v6:= (long)v6  @type i2l;
#L0b3bb8.   v1:= v1 + v6  @type long;
#L0b3bba.   call temp:=  [|java:math:BigDecimal.valueOf|](v1, v2, v14) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3bc0.   v6:= temp  @type object;
#L0b3bc2.   return v6  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigDecimal.getUnscaledValue|] ([|java:math:BigDecimal|] v2 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0b3bd4.   v0:= v2.[|java:math:BigDecimal.intVal|]   @type object;
#L0b3bd8.   if v0 != 0 then goto L0b3bec;
#L0b3bdc.   v0:= v2.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b3be0.   call temp:=  [|java:math:BigInteger.valueOf|](v0, v1) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b3be6.   v0:= temp  @type object;
#L0b3be8.   v2.[|java:math:BigDecimal.intVal|]  := v0 @type object;
#L0b3bec.   v0:= v2.[|java:math:BigDecimal.intVal|]   @type object;
#L0b3bf0.   return v0  @type object;

   }
    procedure [|void|] [|java:math:BigDecimal.inplaceRound|] ([|java:math:BigDecimal|] v12 @type (this), [|java:math:MathContext|] v13 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L0b3c04.   call temp:=  [|java:math:MathContext.getPrecision|](v13) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b3c0a.   v3:= temp;
#L0b3c0c.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v12) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3c12.   v8:= temp;
#L0b3c14.   if v8 < v3 then goto L0b3c1c;
#L0b3c18.   if v3 != 0 then goto L0b3c1e;
#L0b3c1c.   return @void ;
#L0b3c1e.   call temp:=  [|java:math:BigDecimal.precision|](v12) @signature [|Ljava/math/BigDecimal;.precision:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b3c24.   v8:= temp;
#L0b3c26.   v1:= v8 - v3  @type int;
#L0b3c2a.   if v1 <= 0 then goto L0b3c1c;
#L0b3c2e.   v8:= v12.[|java:math:BigDecimal.bitLength|] ;
#L0b3c32.   v9:= 64  @length 16;
#L0b3c36.   if v8 >= v9 then goto L0b3c42;
#L0b3c3a.   call temp:=  [|java:math:BigDecimal.smallRound|](v12, v13, v1) @signature [|Ljava/math/BigDecimal;.smallRound:(Ljava/math/MathContext;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3c40.   goto L0b3c1c;
#L0b3c42.   v8:= (long)v1  @type i2l;
#L0b3c44.   call temp:=  [|java:math:Multiplication.powerOf10|](v8, v9) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b3c4a.   v6:= temp  @type object;
#L0b3c4c.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v12) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3c52.   v8:= temp  @type object;
#L0b3c54.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v8, v6) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3c5a.   v2:= temp  @type object;
#L0b3c5c.   v8:= v12.[|java:math:BigDecimal.scale|] ;
#L0b3c60.   v8:= (long)v8  @type i2l;
#L0b3c62.   v10:= (long)v1  @type i2l;
#L0b3c64.   v4:= v8 - v10  @type long;
#L0b3c68.   v8:= 1  @length 4;
#L0b3c6a.   v8:= v2[v8]  @type object;
#L0b3c6e.   call temp:=  [|java:math:BigInteger.signum|](v8) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3c74.   v8:= temp;
#L0b3c76.   if v8 == 0 then goto L0b3d2e;
#L0b3c7a.   v8:= 1  @length 4;
#L0b3c7c.   v8:= v2[v8]  @type object;
#L0b3c80.   call temp:=  [|java:math:BigInteger.abs|](v8) @signature [|Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3c86.   v8:= temp  @type object;
#L0b3c88.   call temp:=  [|java:math:BigInteger.shiftLeftOneBit|](v8) @signature [|Ljava/math/BigInteger;.shiftLeftOneBit:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3c8e.   v8:= temp  @type object;
#L0b3c90.   call temp:=  [|java:math:BigInteger.compareTo|](v8, v6) @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3c96.   v0:= temp;
#L0b3c98.   v8:= 0  @length 4;
#L0b3c9a.   v8:= v2[v8]  @type object;
#L0b3c9e.   v9:= 0  @length 4;
#L0b3ca0.   call temp:=  [|java:math:BigInteger.testBit|](v8, v9) @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3ca6.   v8:= temp;
#L0b3ca8.   if v8 == 0 then goto L0b3d4e;
#L0b3cac.   v8:= 1  @length 4;
#L0b3cae.   v9:= 1  @length 4;
#L0b3cb0.   v9:= v2[v9]  @type object;
#L0b3cb4.   call temp:=  [|java:math:BigInteger.signum|](v9) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3cba.   v9:= temp;
#L0b3cbc.   v10:= v0 + 5;
#L0b3cc0.   v9:= v9 * v10  @type int;
#L0b3cc2.   call temp:=  [|java:math:MathContext.getRoundingMode|](v13) @signature [|Ljava/math/MathContext;.getRoundingMode:()Ljava/math/RoundingMode;|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b3cc8.   v10:= temp  @type object;
#L0b3cca.   call temp:=  [|java:math:BigDecimal.roundingBehavior|](v8, v9, v10) @signature [|Ljava/math/BigDecimal;.roundingBehavior:(IILjava/math/RoundingMode;)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3cd0.   v0:= temp;
#L0b3cd2.   if v0 == 0 then goto L0b3cf4;
#L0b3cd6.   v8:= 0  @length 4;
#L0b3cd8.   v9:= 0  @length 4;
#L0b3cda.   v9:= v2[v9]  @type object;
#L0b3cde.   v10:= (long)v0  @type i2l;
#L0b3ce0.   call temp:=  [|java:math:BigInteger.valueOf|](v10, v11) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b3ce6.   v10:= temp  @type object;
#L0b3ce8.   call temp:=  [|java:math:BigInteger.add|](v9, v10) @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3cee.   v9:= temp  @type object;
#L0b3cf0.   v2[v8]:= v9  @type object;
#L0b3cf4.   v7:= new [|java:math:BigDecimal|];
#L0b3cf8.   v8:= 0  @length 4;
#L0b3cfa.   v8:= v2[v8]  @type object;
#L0b3cfe.   call temp:=  [|java:math:BigDecimal.<init>|](v7, v8) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3d04.   call temp:=  [|java:math:BigDecimal.precision|](v7) @signature [|Ljava/math/BigDecimal;.precision:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b3d0a.   v8:= temp;
#L0b3d0c.   if v8 <= v3 then goto L0b3d2e;
#L0b3d10.   v8:= 0  @length 4;
#L0b3d12.   v9:= 0  @length 4;
#L0b3d14.   v9:= v2[v9]  @type object;
#L0b3d18.   v10:= @@[|java:math:BigInteger.TEN|]   @type object;
#L0b3d1c.   call temp:=  [|java:math:BigInteger.divide|](v9, v10) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3d22.   v9:= temp  @type object;
#L0b3d24.   v2[v8]:= v9  @type object;
#L0b3d28.   v8:= 1  @length wide16;
#L0b3d2c.   v4:= v4 - v8  @type long;
#L0b3d2e.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v4, v5) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3d34.   v8:= temp;
#L0b3d36.   v12.[|java:math:BigDecimal.scale|]  := v8;
#L0b3d3a.   v12.[|java:math:BigDecimal.precision|]  := v3;
#L0b3d3e.   v8:= 0  @length 4;
#L0b3d40.   v8:= v2[v8]  @type object;
#L0b3d44.   call temp:=  [|java:math:BigDecimal.setUnscaledValue|](v12, v8) @signature [|Ljava/math/BigDecimal;.setUnscaledValue:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3d4a.   goto L0b3c1c;
#L0b3d4e.   v8:= 0  @length 4;
#L0b3d50.   goto L0b3cae;

   }
    procedure [|boolean|] [|java:math:BigDecimal.isZero|] ([|java:math:BigDecimal|] v4 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b3d64.   v0:= v4.[|java:math:BigDecimal.bitLength|] ;
#L0b3d68.   if v0 != 0 then goto L0b3d80;
#L0b3d6c.   v0:= v4.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b3d70.   v2:= -1  @length wide16;
#L0b3d74.   v0:= cmp(v0,v2);
#L0b3d78.   if v0 == 0 then goto L0b3d80;
#L0b3d7c.   v0:= 1  @length 4;
#L0b3d7e.   return v0;
#L0b3d80.   v0:= 0  @length 4;
#L0b3d82.   goto L0b3d7e;

   }
    procedure [|int|] [|java:math:BigDecimal.longCompareTo|] ([|long|] v1, [|long|] v3) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.longCompareTo:(JJ)I|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L0b3d94.   v0:= cmp(v1,v3);
#L0b3d98.   if v0 <= 0 then goto L0b3da0;
#L0b3d9c.   v0:= 1  @length 4;
#L0b3d9e.   return v0;
#L0b3da0.   v0:= cmp(v1,v3);
#L0b3da4.   if v0 >= 0 then goto L0b3dac;
#L0b3da8.   v0:= -1  @length 4;
#L0b3daa.   goto L0b3d9e;
#L0b3dac.   v0:= 0  @length 4;
#L0b3dae.   goto L0b3d9e;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.movePoint|] ([|java:math:BigDecimal|] v6 @type (this), [|long|] v7) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.movePoint:(J)Ljava/math/BigDecimal;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b3dc0.   v1:= 0  @length wide16;
#L0b3dc4.   v4:= 64  @length 16;
#L0b3dc8.   v5:= 0  @length 4;
#L0b3dca.   call temp:=  [|java:math:BigDecimal.isZero|](v6) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3dd0.   v0:= temp;
#L0b3dd2.   if v0 == 0 then goto L0b3de8;
#L0b3dd6.   call temp:=  [|java:lang:Math.max|](v7, v8, v1, v2) @signature [|Ljava/lang/Math;.max:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3ddc.   v0:= temp  @type wide;
#L0b3dde.   call temp:=  [|java:math:BigDecimal.zeroScaledBy|](v0, v1) @signature [|Ljava/math/BigDecimal;.zeroScaledBy:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3de4.   v0:= temp  @type object;
#L0b3de6.   return v0  @type object;
#L0b3de8.   v0:= cmp(v7,v1);
#L0b3dec.   if v0 < 0 then goto L0b3e2a;
#L0b3df0.   v0:= v6.[|java:math:BigDecimal.bitLength|] ;
#L0b3df4.   if v0 >= v4 then goto L0b3e0e;
#L0b3df8.   v0:= v6.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b3dfc.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v7, v8) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3e02.   v2:= temp;
#L0b3e04.   call temp:=  [|java:math:BigDecimal.valueOf|](v0, v1, v2) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3e0a.   v0:= temp  @type object;
#L0b3e0c.   goto L0b3de6;
#L0b3e0e.   v0:= new [|java:math:BigDecimal|];
#L0b3e12.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v6) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3e18.   v1:= temp  @type object;
#L0b3e1a.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v7, v8) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3e20.   v2:= temp;
#L0b3e22.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3e28.   goto L0b3de6;
#L0b3e2a.   v0:= -v7  @type long;
#L0b3e2c.   v2:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b3e30.   v2:= v2.length;
#L0b3e32.   v2:= (long)v2  @type i2l;
#L0b3e34.   v0:= cmp(v0,v2);
#L0b3e38.   if v0 >= 0 then goto L0b3e6e;
#L0b3e3c.   v0:= v6.[|java:math:BigDecimal.bitLength|] ;
#L0b3e40.   v1:= @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]   @type object;
#L0b3e44.   v2:= -v7  @type long;
#L0b3e46.   v2:= (int)v2  @type l2i;
#L0b3e48.   v1:= v1[v2];
#L0b3e4c.   v0:= v0 + v1  @type int;
#L0b3e4e.   if v0 >= v4 then goto L0b3e6e;
#L0b3e52.   v0:= v6.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b3e56.   v2:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b3e5a.   v3:= -v7  @type long;
#L0b3e5c.   v3:= (int)v3  @type l2i;
#L0b3e5e.   v2:= v2[v3]  @wide;
#L0b3e62.   v0:= v0 * v2  @type long;
#L0b3e64.   call temp:=  [|java:math:BigDecimal.valueOf|](v0, v1, v5) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3e6a.   v0:= temp  @type object;
#L0b3e6c.   goto L0b3de6;
#L0b3e6e.   v0:= new [|java:math:BigDecimal|];
#L0b3e72.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v6) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3e78.   v1:= temp  @type object;
#L0b3e7a.   v2:= -v7  @type long;
#L0b3e7c.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v2, v3) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b3e82.   v2:= temp;
#L0b3e84.   v2:= (long)v2  @type i2l;
#L0b3e86.   call temp:=  [|java:math:Multiplication.multiplyByTenPow|](v1, v2, v3) @signature [|Ljava/math/Multiplication;.multiplyByTenPow:(Ljava/math/BigInteger;J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b3e8c.   v1:= temp  @type object;
#L0b3e8e.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1, v5) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b3e94.   goto L0b3de6;

   }
    procedure [|void|] [|java:math:BigDecimal.readObject|] ([|java:math:BigDecimal|] v2 @type (this), [|java:io:ObjectInputStream|] v3 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0b3ea8.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v3) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0b3eae.   v0:= v2.[|java:math:BigDecimal.intVal|]   @type object;
#L0b3eb2.   call temp:=  [|java:math:BigInteger.bitLength|](v0) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3eb8.   v0:= temp;
#L0b3eba.   v2.[|java:math:BigDecimal.bitLength|]  := v0;
#L0b3ebe.   v0:= v2.[|java:math:BigDecimal.bitLength|] ;
#L0b3ec2.   v1:= 64  @length 16;
#L0b3ec6.   if v0 >= v1 then goto L0b3eda;
#L0b3eca.   v0:= v2.[|java:math:BigDecimal.intVal|]   @type object;
#L0b3ece.   call temp:=  [|java:math:BigInteger.longValue|](v0) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b3ed4.   v0:= temp  @type wide;
#L0b3ed6.   v2.[|java:math:BigDecimal.smallValue|]  := v0 @wide;
#L0b3eda.   return @void ;

   }
    procedure [|int|] [|java:math:BigDecimal.roundingBehavior|] ([|int|] v5, [|int|] v6, [|java:math:RoundingMode|] v7 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.roundingBehavior:(IILjava/math/RoundingMode;)I|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0b3eec.   v4:= 0  @length 4;
#L0b3eee.   v3:= 5  @length 4;
#L0b3ef0.   v0:= 0  @length 4;
#L0b3ef2.   v1:= @@[|java:math:BigDecimal$1.$SwitchMap$java$math$RoundingMode|]   @type object;
#L0b3ef6.   call temp:=  [|java:math:RoundingMode.ordinal|](v7) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0b3efc.   v2:= temp;
#L0b3efe.   v1:= v1[v2];
#L0b3f02.   goto L0b3f90;
#L0b3f08.   return v0;
#L0b3f0a.   if v6 == 0 then goto L0b3f08;
#L0b3f0e.   v1:= new [|java:lang:ArithmeticException|];
#L0b3f12.   v2:= "Rounding necessary" @type (object, string);
#L0b3f16.   call temp:=  [|java:lang:ArithmeticException.<init>|](v1, v2) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b3f1c.   throw v1;
#L0b3f1e.   call temp:=  [|java:lang:Integer.signum|](v6) @signature [|Ljava/lang/Integer;.signum:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b3f24.   v0:= temp;
#L0b3f26.   goto L0b3f08;
#L0b3f28.   call temp:=  [|java:lang:Integer.signum|](v6) @signature [|Ljava/lang/Integer;.signum:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b3f2e.   v1:= temp;
#L0b3f30.   call temp:=  [|java:lang:Math.max|](v1, v4) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3f36.   v0:= temp;
#L0b3f38.   goto L0b3f08;
#L0b3f3a.   call temp:=  [|java:lang:Integer.signum|](v6) @signature [|Ljava/lang/Integer;.signum:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b3f40.   v1:= temp;
#L0b3f42.   call temp:=  [|java:lang:Math.min|](v1, v4) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3f48.   v0:= temp;
#L0b3f4a.   goto L0b3f08;
#L0b3f4c.   call temp:=  [|java:lang:Math.abs|](v6) @signature [|Ljava/lang/Math;.abs:(I)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3f52.   v1:= temp;
#L0b3f54.   if v1 < v3 then goto L0b3f08;
#L0b3f58.   call temp:=  [|java:lang:Integer.signum|](v6) @signature [|Ljava/lang/Integer;.signum:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b3f5e.   v0:= temp;
#L0b3f60.   goto L0b3f08;
#L0b3f62.   call temp:=  [|java:lang:Math.abs|](v6) @signature [|Ljava/lang/Math;.abs:(I)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3f68.   v1:= temp;
#L0b3f6a.   if v1 <= v3 then goto L0b3f08;
#L0b3f6e.   call temp:=  [|java:lang:Integer.signum|](v6) @signature [|Ljava/lang/Integer;.signum:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b3f74.   v0:= temp;
#L0b3f76.   goto L0b3f08;
#L0b3f78.   call temp:=  [|java:lang:Math.abs|](v6) @signature [|Ljava/lang/Math;.abs:(I)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b3f7e.   v1:= temp;
#L0b3f80.   v1:= v1 + v5  @type int;
#L0b3f82.   if v1 <= v3 then goto L0b3f08;
#L0b3f86.   call temp:=  [|java:lang:Integer.signum|](v6) @signature [|Ljava/lang/Integer;.signum:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b3f8c.   v0:= temp;
#L0b3f8e.   goto L0b3f08;
#L0b3f90.   switch  v1
                 | 1 => goto L0b3f0a
                 | 2 => goto L0b3f1e
                 | 3 => goto L0b3f08
                 | 4 => goto L0b3f28
                 | 5 => goto L0b3f3a
                 | 6 => goto L0b3f4c
                 | 7 => goto L0b3f62
                 | 8 => goto L0b3f78
                 | => goto L0b3f08;

   }
    procedure [|int|] [|java:math:BigDecimal.safeLongToInt|] ([|long|] v3) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b3fc8.    v0:= -0.000000  @length wide32;
#L0b3fce.   v0:= cmp(v3,v0);
#L0b3fd2.   if v0 < 0 then goto L0b3fe4;
#L0b3fd6.    v0:= nan  @length wide32;
#L0b3fdc.   v0:= cmp(v3,v0);
#L0b3fe0.   if v0 <= 0 then goto L0b4016;
#L0b3fe4.   v0:= new [|java:lang:ArithmeticException|];
#L0b3fe8.   v1:= new [|java:lang:StringBuilder|];
#L0b3fec.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b3ff2.   v2:= "Out of int range: " @type (object, string);
#L0b3ff6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b3ffc.   v1:= temp  @type object;
#L0b3ffe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b4004.   v1:= temp  @type object;
#L0b4006.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b400c.   v1:= temp  @type object;
#L0b400e.   call temp:=  [|java:lang:ArithmeticException.<init>|](v0, v1) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b4014.   throw v0;
#L0b4016.   v0:= (int)v3  @type l2i;
#L0b4018.   return v0;

   }
    procedure [|void|] [|java:math:BigDecimal.setUnscaledValue|] ([|java:math:BigDecimal|] v2 @type (this), [|java:math:BigInteger|] v3 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.setUnscaledValue:(Ljava/math/BigInteger;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0b402c.   v2.[|java:math:BigDecimal.intVal|]  := v3 @type object;
#L0b4030.   call temp:=  [|java:math:BigInteger.bitLength|](v3) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4036.   v0:= temp;
#L0b4038.   v2.[|java:math:BigDecimal.bitLength|]  := v0;
#L0b403c.   v0:= v2.[|java:math:BigDecimal.bitLength|] ;
#L0b4040.   v1:= 64  @length 16;
#L0b4044.   if v0 >= v1 then goto L0b4054;
#L0b4048.   call temp:=  [|java:math:BigInteger.longValue|](v3) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b404e.   v0:= temp  @type wide;
#L0b4050.   v2.[|java:math:BigDecimal.smallValue|]  := v0 @wide;
#L0b4054.   return @void ;

   }
    procedure [|void|] [|java:math:BigDecimal.smallRound|] ([|java:math:BigDecimal|] v16 @type (this), [|java:math:MathContext|] v17 @type (object), [|int|] v18) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.smallRound:(Ljava/math/MathContext;I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L0b4068.   v12:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b406c.   v8:= v12[v18]  @wide;
#L0b4070.   v0:= v16  @type object;
#L0b4074.   v12:= v0.[|java:math:BigDecimal.scale|] ;
#L0b4078.   v12:= (long)v12  @type i2l;
#L0b407a.   v0:= v18;
#L0b407e.   v14:= (long)v0  @type i2l;
#L0b4080.   v6:= v12 - v14  @type long;
#L0b4084.   v0:= v16  @type object;
#L0b4088.   v10:= v0.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b408c.   v4:= v10 / v8  @type long;
#L0b4090.   v2:= v10 % v8  @type long;
#L0b4094.   v12:= 0  @length wide16;
#L0b4098.   v12:= cmp(v2,v12);
#L0b409c.   if v12 == 0 then goto L0b410e;
#L0b40a0.   call temp:=  [|java:lang:Math.abs|](v2, v3) @signature [|Ljava/lang/Math;.abs:(J)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b40a6.   v12:= temp  @type wide;
#L0b40a8.   v14:= 2  @length wide16;
#L0b40ac.   v12:= v12 * v14  @type long;
#L0b40ae.   call temp:=  [|java:math:BigDecimal.longCompareTo|](v12, v13, v8, v9) @signature [|Ljava/math/BigDecimal;.longCompareTo:(JJ)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b40b4.   v1:= temp;
#L0b40b6.   v12:= (int)v4  @type l2i;
#L0b40b8.   v12:= v12 ^& 1;
#L0b40bc.   call temp:=  [|java:lang:Long.signum|](v2, v3) @signature [|Ljava/lang/Long;.signum:(J)I|] @classDescriptor [|java:lang:Long|] @type static;
#L0b40c2.   v13:= temp;
#L0b40c4.   v14:= v1 + 5;
#L0b40c8.   v13:= v13 * v14  @type int;
#L0b40ca.   call temp:=  [|java:math:MathContext.getRoundingMode|](v17) @signature [|Ljava/math/MathContext;.getRoundingMode:()Ljava/math/RoundingMode;|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b40d0.   v14:= temp  @type object;
#L0b40d2.   call temp:=  [|java:math:BigDecimal.roundingBehavior|](v12, v13, v14) @signature [|Ljava/math/BigDecimal;.roundingBehavior:(IILjava/math/RoundingMode;)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b40d8.   v12:= temp;
#L0b40da.   v12:= (long)v12  @type i2l;
#L0b40dc.   v4:= v4 + v12  @type long;
#L0b40de.   call temp:=  [|java:lang:Math.abs|](v4, v5) @signature [|Ljava/lang/Math;.abs:(J)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b40e4.   v12:= temp  @type wide;
#L0b40e6.   v12:= (double)v12  @type l2d;
#L0b40e8.   call temp:=  [|java:lang:Math.log10|](v12, v13) @signature [|Ljava/lang/Math;.log10:(D)D|] @classDescriptor [|java:lang:Math|] @type static;
#L0b40ee.   v12:= temp  @type wide;
#L0b40f0.   call temp:=  [|java:math:MathContext.getPrecision|](v17) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b40f6.   v14:= temp;
#L0b40f8.   v14:= (double)v14  @type i2d;
#L0b40fa.   v12:= cmpl(v12,v14);
#L0b40fe.   if v12 < 0 then goto L0b410e;
#L0b4102.   v12:= 10  @length wide16;
#L0b4106.   v4:= v4 / v12  @type long;
#L0b4108.   v12:= 1  @length wide16;
#L0b410c.   v6:= v6 - v12  @type long;
#L0b410e.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v6, v7) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4114.   v12:= temp;
#L0b4116.   v0:= v16  @type object;
#L0b411a.   v0.[|java:math:BigDecimal.scale|]  := v12;
#L0b411e.   call temp:=  [|java:math:MathContext.getPrecision|](v17) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b4124.   v12:= temp;
#L0b4126.   v0:= v16  @type object;
#L0b412a.   v0.[|java:math:BigDecimal.precision|]  := v12;
#L0b412e.   v0:= v16  @type object;
#L0b4132.   v0.[|java:math:BigDecimal.smallValue|]  := v4 @wide;
#L0b4136.   call temp:=  [|java:math:BigDecimal.bitLength|](v4, v5) @signature [|Ljava/math/BigDecimal;.bitLength:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b413c.   v12:= temp;
#L0b413e.   v0:= v16  @type object;
#L0b4142.   v0.[|java:math:BigDecimal.bitLength|]  := v12;
#L0b4146.   v12:= 0  @length 4;
#L0b4148.   v0:= v16  @type object;
#L0b414c.   v0.[|java:math:BigDecimal.intVal|]  := v12 @type object;
#L0b4150.   return @void ;

   }
    procedure [|long|] [|java:math:BigDecimal.valueExact|] ([|java:math:BigDecimal|] v3 @type (this), [|int|] v4) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.valueExact:(I)J|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b4164.   call temp:=  [|java:math:BigDecimal.toBigIntegerExact|](v3) @signature [|Ljava/math/BigDecimal;.toBigIntegerExact:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b416a.   v0:= temp  @type object;
#L0b416c.   call temp:=  [|java:math:BigInteger.bitLength|](v0) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4172.   v1:= temp;
#L0b4174.   if v1 >= v4 then goto L0b4182;
#L0b4178.   call temp:=  [|java:math:BigInteger.longValue|](v0) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b417e.   v1:= temp  @type wide;
#L0b4180.   return v1  @type wide;
#L0b4182.   v1:= new [|java:lang:ArithmeticException|];
#L0b4186.   v2:= "Rounding necessary" @type (object, string);
#L0b418a.   call temp:=  [|java:lang:ArithmeticException.<init>|](v1, v2) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b4190.   throw v1;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.valueOf|] ([|double|] v3) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.valueOf:(D)Ljava/math/BigDecimal;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b41a4.   call temp:=  [|java:lang:Double.isInfinite|](v3, v4) @signature [|Ljava/lang/Double;.isInfinite:(D)Z|] @classDescriptor [|java:lang:Double|] @type static;
#L0b41aa.   v0:= temp;
#L0b41ac.   if v0 != 0 then goto L0b41bc;
#L0b41b0.   call temp:=  [|java:lang:Double.isNaN|](v3, v4) @signature [|Ljava/lang/Double;.isNaN:(D)Z|] @classDescriptor [|java:lang:Double|] @type static;
#L0b41b6.   v0:= temp;
#L0b41b8.   if v0 == 0 then goto L0b41ee;
#L0b41bc.   v0:= new [|java:lang:NumberFormatException|];
#L0b41c0.   v1:= new [|java:lang:StringBuilder|];
#L0b41c4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b41ca.   v2:= "Infinity or NaN: " @type (object, string);
#L0b41ce.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b41d4.   v1:= temp  @type object;
#L0b41d6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b41dc.   v1:= temp  @type object;
#L0b41de.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b41e4.   v1:= temp  @type object;
#L0b41e6.   call temp:=  [|java:lang:NumberFormatException.<init>|](v0, v1) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b41ec.   throw v0;
#L0b41ee.   v0:= new [|java:math:BigDecimal|];
#L0b41f2.   call temp:=  [|java:lang:Double.toString|](v3, v4) @signature [|Ljava/lang/Double;.toString:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:Double|] @type static;
#L0b41f8.   v1:= temp  @type object;
#L0b41fa.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4200.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.valueOf|] ([|long|] v2) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.valueOf:(J)Ljava/math/BigDecimal;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b4214.   v0:= 0  @length wide16;
#L0b4218.   v0:= cmp(v2,v0);
#L0b421c.   if v0 < 0 then goto L0b4238;
#L0b4220.   v0:= 11  @length wide16;
#L0b4224.   v0:= cmp(v2,v0);
#L0b4228.   if v0 >= 0 then goto L0b4238;
#L0b422c.   v0:= @@[|java:math:BigDecimal.BI_SCALED_BY_ZERO|]   @type object;
#L0b4230.   v1:= (int)v2  @type l2i;
#L0b4232.   v0:= v0[v1]  @type object;
#L0b4236.   return v0  @type object;
#L0b4238.   v0:= new [|java:math:BigDecimal|];
#L0b423c.   v1:= 0  @length 4;
#L0b423e.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v2, v3, v1) @signature [|Ljava/math/BigDecimal;.<init>:(JI)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4244.   goto L0b4236;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.valueOf|] ([|long|] v2, [|int|] v4) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b4258.   if v4 != 0 then goto L0b4266;
#L0b425c.   call temp:=  [|java:math:BigDecimal.valueOf|](v2, v3) @signature [|Ljava/math/BigDecimal;.valueOf:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4262.   v0:= temp  @type object;
#L0b4264.   return v0  @type object;
#L0b4266.   v0:= 0  @length wide16;
#L0b426a.   v0:= cmp(v2,v0);
#L0b426e.   if v0 != 0 then goto L0b428a;
#L0b4272.   if v4 < 0 then goto L0b428a;
#L0b4276.   v0:= @@[|java:math:BigDecimal.ZERO_SCALED_BY|]   @type object;
#L0b427a.   v0:= v0.length;
#L0b427c.   if v4 >= v0 then goto L0b428a;
#L0b4280.   v0:= @@[|java:math:BigDecimal.ZERO_SCALED_BY|]   @type object;
#L0b4284.   v0:= v0[v4]  @type object;
#L0b4288.   goto L0b4264;
#L0b428a.   v0:= new [|java:math:BigDecimal|];
#L0b428e.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v2, v3, v4) @signature [|Ljava/math/BigDecimal;.<init>:(JI)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4294.   goto L0b4264;

   }
    procedure [|void|] [|java:math:BigDecimal.writeObject|] ([|java:math:BigDecimal|] v0 @type (this), [|java:io:ObjectOutputStream|] v1 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
      
#L0b42a8.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v0) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b42ae.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v1) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0b42b4.   return @void ;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.zeroScaledBy|] ([|long|] v5) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.zeroScaledBy:(J)Ljava/math/BigDecimal;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0b42c8.   v3:= 0  @length wide16;
#L0b42cc.   v2:= 0  @length 4;
#L0b42ce.   v0:= (int)v5  @type l2i;
#L0b42d0.   v0:= (long)v0  @type i2l;
#L0b42d2.   v0:= cmp(v5,v0);
#L0b42d6.   if v0 != 0 then goto L0b42e6;
#L0b42da.   v0:= (int)v5  @type l2i;
#L0b42dc.   call temp:=  [|java:math:BigDecimal.valueOf|](v3, v4, v0) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b42e2.   v0:= temp  @type object;
#L0b42e4.   return v0  @type object;
#L0b42e6.   v0:= cmp(v5,v3);
#L0b42ea.   if v0 < 0 then goto L0b4300;
#L0b42ee.   v0:= new [|java:math:BigDecimal|];
#L0b42f2.    v1:= nan;
#L0b42f8.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v2, v1) @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b42fe.   goto L0b42e4;
#L0b4300.   v0:= new [|java:math:BigDecimal|];
#L0b4304.   v1:= -2147483648  @length high16;
#L0b4308.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v2, v1) @signature [|Ljava/math/BigDecimal;.<init>:(II)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b430e.   goto L0b42e4;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.abs|] ([|java:math:BigDecimal|] v1 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.abs:()Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b4320.   call temp:=  [|java:math:BigDecimal.signum|](v1) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4326.   v0:= temp;
#L0b4328.   if v0 >= 0 then goto L0b4334;
#L0b432c.   call temp:=  [|java:math:BigDecimal.negate|](v1) @signature [|Ljava/math/BigDecimal;.negate:()Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4332.   v1:= temp  @type object;
#L0b4334.   return v1  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.abs|] ([|java:math:BigDecimal|] v1 @type (this), [|java:math:MathContext|] v2 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.abs:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b4348.   call temp:=  [|java:math:BigDecimal.abs|](v1) @signature [|Ljava/math/BigDecimal;.abs:()Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b434e.   v0:= temp  @type object;
#L0b4350.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v2) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4356.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.add|] ([|java:math:BigDecimal|] v5 @type (this), [|java:math:BigDecimal|] v6 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0b4368.   v1:= v5.[|java:math:BigDecimal.scale|] ;
#L0b436c.   v2:= v6.[|java:math:BigDecimal.scale|] ;
#L0b4370.   v0:= v1 - v2  @type int;
#L0b4374.   call temp:=  [|java:math:BigDecimal.isZero|](v5) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b437a.   v1:= temp;
#L0b437c.   if v1 == 0 then goto L0b43cc;
#L0b4380.   if v0 > 0 then goto L0b4388;
#L0b4384.   v5:= v6  @type object;
#L0b4386.   return v5  @type object;
#L0b4388.   call temp:=  [|java:math:BigDecimal.isZero|](v6) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b438e.   v1:= temp;
#L0b4390.   if v1 != 0 then goto L0b4386;
#L0b4394.   if v0 != 0 then goto L0b4408;
#L0b4398.   v1:= v5.[|java:math:BigDecimal.bitLength|] ;
#L0b439c.   v2:= v6.[|java:math:BigDecimal.bitLength|] ;
#L0b43a0.   call temp:=  [|java:lang:Math.max|](v1, v2) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b43a6.   v1:= temp;
#L0b43a8.   v1:= v1 + 1;
#L0b43ac.   v2:= 64  @length 16;
#L0b43b0.   if v1 >= v2 then goto L0b43de;
#L0b43b4.   v1:= v5.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b43b8.   v3:= v6.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b43bc.   v1:= v1 + v3  @type long;
#L0b43be.   v3:= v5.[|java:math:BigDecimal.scale|] ;
#L0b43c2.   call temp:=  [|java:math:BigDecimal.valueOf|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b43c8.   v5:= temp  @type object;
#L0b43ca.   goto L0b4386;
#L0b43cc.   call temp:=  [|java:math:BigDecimal.isZero|](v6) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b43d2.   v1:= temp;
#L0b43d4.   if v1 == 0 then goto L0b4394;
#L0b43d8.   if v0 < 0 then goto L0b4394;
#L0b43dc.   goto L0b4386;
#L0b43de.   v1:= new [|java:math:BigDecimal|];
#L0b43e2.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v5) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b43e8.   v2:= temp  @type object;
#L0b43ea.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v6) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b43f0.   v3:= temp  @type object;
#L0b43f2.   call temp:=  [|java:math:BigInteger.add|](v2, v3) @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b43f8.   v2:= temp  @type object;
#L0b43fa.   v3:= v5.[|java:math:BigDecimal.scale|] ;
#L0b43fe.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4404.   v5:= v1  @type object;
#L0b4406.   goto L0b4386;
#L0b4408.   if v0 <= 0 then goto L0b4416;
#L0b440c.   call temp:=  [|java:math:BigDecimal.addAndMult10|](v5, v6, v0) @signature [|Ljava/math/BigDecimal;.addAndMult10:(Ljava/math/BigDecimal;Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4412.   v5:= temp  @type object;
#L0b4414.   goto L0b4386;
#L0b4416.   v1:= -v0  @type int;
#L0b4418.   call temp:=  [|java:math:BigDecimal.addAndMult10|](v6, v5, v1) @signature [|Ljava/math/BigDecimal;.addAndMult10:(Ljava/math/BigDecimal;Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b441e.   v5:= temp  @type object;
#L0b4420.   goto L0b4386;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.add|] ([|java:math:BigDecimal|] v13 @type (this), [|java:math:BigDecimal|] v14 @type (object), [|java:math:MathContext|] v15 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.add:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L0b4434.   v7:= v13.[|java:math:BigDecimal.scale|] ;
#L0b4438.   v7:= (long)v7  @type i2l;
#L0b443a.   v9:= v14.[|java:math:BigDecimal.scale|] ;
#L0b443e.   v9:= (long)v9  @type i2l;
#L0b4440.   v0:= v7 - v9  @type long;
#L0b4444.   call temp:=  [|java:math:BigDecimal.isZero|](v14) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b444a.   v7:= temp;
#L0b444c.   if v7 != 0 then goto L0b4468;
#L0b4450.   call temp:=  [|java:math:BigDecimal.isZero|](v13) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4456.   v7:= temp;
#L0b4458.   if v7 != 0 then goto L0b4468;
#L0b445c.   call temp:=  [|java:math:MathContext.getPrecision|](v15) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b4462.   v7:= temp;
#L0b4464.   if v7 != 0 then goto L0b447a;
#L0b4468.   call temp:=  [|java:math:BigDecimal.add|](v13, v14) @signature [|Ljava/math/BigDecimal;.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b446e.   v7:= temp  @type object;
#L0b4470.   call temp:=  [|java:math:BigDecimal.round|](v7, v15) @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4476.   v7:= temp  @type object;
#L0b4478.   return v7  @type object;
#L0b447a.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v13) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4480.   v7:= temp;
#L0b4482.   v7:= (long)v7  @type i2l;
#L0b4484.   v9:= 1  @length wide16;
#L0b4488.   v9:= v0 - v9  @type long;
#L0b448c.   v7:= cmp(v7,v9);
#L0b4490.   if v7 >= 0 then goto L0b44be;
#L0b4494.   v2:= v14  @type object;
#L0b4496.   v5:= v13  @type object;
#L0b4498.   call temp:=  [|java:math:MathContext.getPrecision|](v15) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b449e.   v7:= temp;
#L0b44a0.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v2) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b44a6.   v8:= temp;
#L0b44a8.   if v7 < v8 then goto L0b44f0;
#L0b44ac.   call temp:=  [|java:math:BigDecimal.add|](v13, v14) @signature [|Ljava/math/BigDecimal;.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b44b2.   v7:= temp  @type object;
#L0b44b4.   call temp:=  [|java:math:BigDecimal.round|](v7, v15) @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b44ba.   v7:= temp  @type object;
#L0b44bc.   goto L0b4478;
#L0b44be.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v14) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b44c4.   v7:= temp;
#L0b44c6.   v7:= (long)v7  @type i2l;
#L0b44c8.   v9:= -v0  @type long;
#L0b44ca.   v11:= 1  @length wide16;
#L0b44ce.   v9:= v9 - v11  @type long;
#L0b44d0.   v7:= cmp(v7,v9);
#L0b44d4.   if v7 >= 0 then goto L0b44de;
#L0b44d8.   v2:= v13  @type object;
#L0b44da.   v5:= v14  @type object;
#L0b44dc.   goto L0b4498;
#L0b44de.   call temp:=  [|java:math:BigDecimal.add|](v13, v14) @signature [|Ljava/math/BigDecimal;.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b44e4.   v7:= temp  @type object;
#L0b44e6.   call temp:=  [|java:math:BigDecimal.round|](v7, v15) @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b44ec.   v7:= temp  @type object;
#L0b44ee.   goto L0b4478;
#L0b44f0.   call temp:=  [|java:math:BigDecimal.signum|](v2) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b44f6.   v4:= temp;
#L0b44f8.   call temp:=  [|java:math:BigDecimal.signum|](v5) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b44fe.   v7:= temp;
#L0b4500.   if v4 != v7 then goto L0b4546;
#L0b4504.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v2) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b450a.   v7:= temp  @type object;
#L0b450c.   v8:= 10  @length 16;
#L0b4510.   call temp:=  [|java:math:Multiplication.multiplyByPositiveInt|](v7, v8) @signature [|Ljava/math/Multiplication;.multiplyByPositiveInt:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b4516.   v7:= temp  @type object;
#L0b4518.   v8:= (long)v4  @type i2l;
#L0b451a.   call temp:=  [|java:math:BigInteger.valueOf|](v8, v9) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b4520.   v8:= temp  @type object;
#L0b4522.   call temp:=  [|java:math:BigInteger.add|](v7, v8) @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4528.   v6:= temp  @type object;
#L0b452a.   v3:= new [|java:math:BigDecimal|];
#L0b452e.   v7:= v2.[|java:math:BigDecimal.scale|] ;
#L0b4532.   v7:= v7 + 1;
#L0b4536.   call temp:=  [|java:math:BigDecimal.<init>|](v3, v6, v7) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b453c.   call temp:=  [|java:math:BigDecimal.round|](v3, v15) @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4542.   v7:= temp  @type object;
#L0b4544.   goto L0b4478;
#L0b4546.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v2) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b454c.   v7:= temp  @type object;
#L0b454e.   v8:= (long)v4  @type i2l;
#L0b4550.   call temp:=  [|java:math:BigInteger.valueOf|](v8, v9) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b4556.   v8:= temp  @type object;
#L0b4558.   call temp:=  [|java:math:BigInteger.subtract|](v7, v8) @signature [|Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b455e.   v6:= temp  @type object;
#L0b4560.   v7:= 10  @length 16;
#L0b4564.   call temp:=  [|java:math:Multiplication.multiplyByPositiveInt|](v6, v7) @signature [|Ljava/math/Multiplication;.multiplyByPositiveInt:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b456a.   v7:= temp  @type object;
#L0b456c.   v8:= v4 * 9;
#L0b4570.   v8:= (long)v8  @type i2l;
#L0b4572.   call temp:=  [|java:math:BigInteger.valueOf|](v8, v9) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b4578.   v8:= temp  @type object;
#L0b457a.   call temp:=  [|java:math:BigInteger.add|](v7, v8) @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4580.   v6:= temp  @type object;
#L0b4582.   goto L0b452a;

   }
    procedure [|byte|] [|java:math:BigDecimal.byteValueExact|] ([|java:math:BigDecimal|] v2 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.byteValueExact:()B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b4594.   v0:= 8  @length 16;
#L0b4598.   call temp:=  [|java:math:BigDecimal.valueExact|](v2, v0) @signature [|Ljava/math/BigDecimal;.valueExact:(I)J|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b459e.   v0:= temp  @type wide;
#L0b45a0.   v0:= (int)v0  @type l2i;
#L0b45a2.   v0:= (byte)v0  @type i2b;
#L0b45a4.   return v0;

   }
    procedure [|int|] [|java:math:BigDecimal.compareTo|] ([|java:math:BigDecimal|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0b45b8.   v2:= ([|java:math:BigDecimal|])v2;
#L0b45bc.   call temp:=  [|java:math:BigDecimal.compareTo|](v1, v2) @signature [|Ljava/math/BigDecimal;.compareTo:(Ljava/math/BigDecimal;)I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b45c2.   v0:= temp;
#L0b45c4.   return v0;

   }
    procedure [|int|] [|java:math:BigDecimal.compareTo|] ([|java:math:BigDecimal|] v11 @type (this), [|java:math:BigDecimal|] v12 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.compareTo:(Ljava/math/BigDecimal;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0b45d8.   call temp:=  [|java:math:BigDecimal.signum|](v11) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b45de.   v3:= temp;
#L0b45e0.   call temp:=  [|java:math:BigDecimal.signum|](v12) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b45e6.   v6:= temp;
#L0b45e8.   if v3 != v6 then goto L0b46e0;
#L0b45ec.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b45f0.   v8:= v12.[|java:math:BigDecimal.scale|] ;
#L0b45f4.   if v7 != v8 then goto L0b463c;
#L0b45f8.   v7:= v11.[|java:math:BigDecimal.bitLength|] ;
#L0b45fc.   v8:= 64  @length 16;
#L0b4600.   if v7 >= v8 then goto L0b463c;
#L0b4604.   v7:= v12.[|java:math:BigDecimal.bitLength|] ;
#L0b4608.   v8:= 64  @length 16;
#L0b460c.   if v7 >= v8 then goto L0b463c;
#L0b4610.   v7:= v11.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b4614.   v9:= v12.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b4618.   v7:= cmp(v7,v9);
#L0b461c.   if v7 >= 0 then goto L0b4624;
#L0b4620.   v7:= -1  @length 4;
#L0b4622.   return v7;
#L0b4624.   v7:= v11.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b4628.   v9:= v12.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b462c.   v7:= cmp(v7,v9);
#L0b4630.   if v7 <= 0 then goto L0b4638;
#L0b4634.   v7:= 1  @length 4;
#L0b4636.   goto L0b4622;
#L0b4638.   v7:= 0  @length 4;
#L0b463a.   goto L0b4622;
#L0b463c.   v7:= v11.[|java:math:BigDecimal.scale|] ;
#L0b4640.   v7:= (long)v7  @type i2l;
#L0b4642.   v9:= v12.[|java:math:BigDecimal.scale|] ;
#L0b4646.   v9:= (long)v9  @type i2l;
#L0b4648.   v1:= v7 - v9  @type long;
#L0b464c.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v11) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4652.   v7:= temp;
#L0b4654.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v12) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b465a.   v8:= temp;
#L0b465c.   v0:= v7 - v8  @type int;
#L0b4660.   v7:= (long)v0  @type i2l;
#L0b4662.   v9:= 1  @length wide16;
#L0b4666.   v9:= v9 + v1  @type long;
#L0b4668.   v7:= cmp(v7,v9);
#L0b466c.   if v7 <= 0 then goto L0b4674;
#L0b4670.   v7:= v3;
#L0b4672.   goto L0b4622;
#L0b4674.   v7:= (long)v0  @type i2l;
#L0b4676.   v9:= 1  @length wide16;
#L0b467a.   v9:= v1 - v9  @type long;
#L0b467e.   v7:= cmp(v7,v9);
#L0b4682.   if v7 >= 0 then goto L0b468a;
#L0b4686.   v7:= -v3  @type int;
#L0b4688.   goto L0b4622;
#L0b468a.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v11) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4690.   v4:= temp  @type object;
#L0b4692.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v12) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4698.   v5:= temp  @type object;
#L0b469a.   v7:= 0  @length wide16;
#L0b469e.   v7:= cmp(v1,v7);
#L0b46a2.   if v7 >= 0 then goto L0b46c2;
#L0b46a6.   v7:= -v1  @type long;
#L0b46a8.   call temp:=  [|java:math:Multiplication.powerOf10|](v7, v8) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b46ae.   v7:= temp  @type object;
#L0b46b0.   call temp:=  [|java:math:BigInteger.multiply|](v4, v7) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b46b6.   v4:= temp  @type object;
#L0b46b8.   call temp:=  [|java:math:BigInteger.compareTo|](v4, v5) @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b46be.   v7:= temp;
#L0b46c0.   goto L0b4622;
#L0b46c2.   v7:= 0  @length wide16;
#L0b46c6.   v7:= cmp(v1,v7);
#L0b46ca.   if v7 <= 0 then goto L0b46b8;
#L0b46ce.   call temp:=  [|java:math:Multiplication.powerOf10|](v1, v2) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b46d4.   v7:= temp  @type object;
#L0b46d6.   call temp:=  [|java:math:BigInteger.multiply|](v5, v7) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b46dc.   v5:= temp  @type object;
#L0b46de.   goto L0b46b8;
#L0b46e0.   if v3 >= v6 then goto L0b46e8;
#L0b46e4.   v7:= -1  @length 4;
#L0b46e6.   goto L0b4622;
#L0b46e8.   v7:= 1  @length 4;
#L0b46ea.   goto L0b4622;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.divide|] ([|java:math:BigDecimal|] v16 @type (this), [|java:math:BigDecimal|] v17 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L0b46fc.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v16) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4702.   v9:= temp  @type object;
#L0b4704.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v17) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b470a.   v10:= temp  @type object;
#L0b470c.   v0:= v16  @type object;
#L0b4710.   v12:= v0.[|java:math:BigDecimal.scale|] ;
#L0b4714.   v12:= (long)v12  @type i2l;
#L0b4716.   v0:= v17  @type object;
#L0b471a.   v14:= v0.[|java:math:BigDecimal.scale|] ;
#L0b471e.   v14:= (long)v14  @type i2l;
#L0b4720.   v1:= v12 - v14  @type long;
#L0b4724.   v6:= 0  @length 4;
#L0b4726.   v4:= 1  @length 4;
#L0b4728.   v12:= @@[|java:math:BigDecimal.FIVE_POW|]   @type object;
#L0b472c.   v12:= v12.length;
#L0b472e.   v7:= v12 + -1;
#L0b4732.   call temp:=  [|java:math:BigDecimal.isZero|](v17) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4738.   v12:= temp;
#L0b473a.   if v12 == 0 then goto L0b474e;
#L0b473e.   v12:= new [|java:lang:ArithmeticException|];
#L0b4742.   v13:= "Division by zero" @type (object, string);
#L0b4746.   call temp:=  [|java:lang:ArithmeticException.<init>|](v12, v13) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b474c.   throw v12;
#L0b474e.   call temp:=  [|java:math:BigInteger.signum|](v9) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4754.   v12:= temp;
#L0b4756.   if v12 != 0 then goto L0b4764;
#L0b475a.   call temp:=  [|java:math:BigDecimal.zeroScaledBy|](v1, v2) @signature [|Ljava/math/BigDecimal;.zeroScaledBy:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4760.   v12:= temp  @type object;
#L0b4762.   return v12  @type object;
#L0b4764.   call temp:=  [|java:math:BigInteger.gcd|](v9, v10) @signature [|Ljava/math/BigInteger;.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b476a.   v3:= temp  @type object;
#L0b476c.   call temp:=  [|java:math:BigInteger.divide|](v9, v3) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4772.   v9:= temp  @type object;
#L0b4774.   call temp:=  [|java:math:BigInteger.divide|](v10, v3) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b477a.   v10:= temp  @type object;
#L0b477c.   call temp:=  [|java:math:BigInteger.getLowestSetBit|](v10) @signature [|Ljava/math/BigInteger;.getLowestSetBit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4782.   v5:= temp;
#L0b4784.   call temp:=  [|java:math:BigInteger.shiftRight|](v10, v5) @signature [|Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b478a.   v10:= temp  @type object;
#L0b478c.   v12:= @@[|java:math:BigDecimal.FIVE_POW|]   @type object;
#L0b4790.   v12:= v12[v4]  @type object;
#L0b4794.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v10, v12) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b479a.   v11:= temp  @type object;
#L0b479c.   v12:= 1  @length 4;
#L0b479e.   v12:= v11[v12]  @type object;
#L0b47a2.   call temp:=  [|java:math:BigInteger.signum|](v12) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b47a8.   v12:= temp;
#L0b47aa.   if v12 != 0 then goto L0b47c0;
#L0b47ae.   v6:= v6 + v4  @type int;
#L0b47b0.   if v4 >= v7 then goto L0b47b8;
#L0b47b4.   v4:= v4 + 1;
#L0b47b8.   v12:= 0  @length 4;
#L0b47ba.   v10:= v11[v12]  @type object;
#L0b47be.   goto L0b478c;
#L0b47c0.   v12:= 1  @length 4;
#L0b47c2.   if v4 != v12 then goto L0b47ee;
#L0b47c6.   call temp:=  [|java:math:BigInteger.abs|](v10) @signature [|Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b47cc.   v12:= temp  @type object;
#L0b47ce.   v13:= @@[|java:math:BigInteger.ONE|]   @type object;
#L0b47d2.   call temp:=  [|java:math:BigInteger.equals|](v12, v13) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b47d8.   v12:= temp;
#L0b47da.   if v12 != 0 then goto L0b47f2;
#L0b47de.   v12:= new [|java:lang:ArithmeticException|];
#L0b47e2.   v13:= "Non-terminating decimal expansion; no exact representable decimal result" @type (object, string);
#L0b47e6.   call temp:=  [|java:lang:ArithmeticException.<init>|](v12, v13) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b47ec.   throw v12;
#L0b47ee.   v4:= 1  @length 4;
#L0b47f0.   goto L0b478c;
#L0b47f2.   call temp:=  [|java:math:BigInteger.signum|](v10) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b47f8.   v12:= temp;
#L0b47fa.   if v12 >= 0 then goto L0b4806;
#L0b47fe.   call temp:=  [|java:math:BigInteger.negate|](v9) @signature [|Ljava/math/BigInteger;.negate:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4804.   v9:= temp  @type object;
#L0b4806.   call temp:=  [|java:lang:Math.max|](v5, v6) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b480c.   v12:= temp;
#L0b480e.   v12:= (long)v12  @type i2l;
#L0b4810.   v12:= v12 + v1  @type long;
#L0b4812.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v12, v13) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4818.   v8:= temp;
#L0b481a.   v4:= v5 - v6  @type int;
#L0b481e.   if v4 <= 0 then goto L0b4836;
#L0b4822.   call temp:=  [|java:math:Multiplication.multiplyByFivePow|](v9, v4) @signature [|Ljava/math/Multiplication;.multiplyByFivePow:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b4828.   v9:= temp  @type object;
#L0b482a.   v12:= new [|java:math:BigDecimal|];
#L0b482e.   call temp:=  [|java:math:BigDecimal.<init>|](v12, v9, v8) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4834.   goto L0b4762;
#L0b4836.   v12:= -v4  @type int;
#L0b4838.   call temp:=  [|java:math:BigInteger.shiftLeft|](v9, v12) @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b483e.   v9:= temp  @type object;
#L0b4840.   goto L0b482a;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.divide|] ([|java:math:BigDecimal|] v2 @type (this), [|java:math:BigDecimal|] v3 @type (object), [|int|] v4) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b4854.   v0:= v2.[|java:math:BigDecimal.scale|] ;
#L0b4858.   call temp:=  [|java:math:RoundingMode.valueOf|](v4) @signature [|Ljava/math/RoundingMode;.valueOf:(I)Ljava/math/RoundingMode;|] @classDescriptor [|java:math:RoundingMode|] @type static;
#L0b485e.   v1:= temp  @type object;
#L0b4860.   call temp:=  [|java:math:BigDecimal.divide|](v2, v3, v0, v1) @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4866.   v0:= temp  @type object;
#L0b4868.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.divide|] ([|java:math:BigDecimal|] v1 @type (this), [|java:math:BigDecimal|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b487c.   call temp:=  [|java:math:RoundingMode.valueOf|](v4) @signature [|Ljava/math/RoundingMode;.valueOf:(I)Ljava/math/RoundingMode;|] @classDescriptor [|java:math:RoundingMode|] @type static;
#L0b4882.   v0:= temp  @type object;
#L0b4884.   call temp:=  [|java:math:BigDecimal.divide|](v1, v2, v3, v0) @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b488a.   v0:= temp  @type object;
#L0b488c.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.divide|] ([|java:math:BigDecimal|] v12 @type (this), [|java:math:BigDecimal|] v13 @type (object), [|int|] v14, [|java:math:RoundingMode|] v15 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L0b48a0.   v10:= 0  @length wide16;
#L0b48a4.   v4:= 64  @length 16;
#L0b48a8.   if v15 != 0 then goto L0b48bc;
#L0b48ac.   v0:= new [|java:lang:NullPointerException|];
#L0b48b0.   v1:= "roundingMode == null" @type (object, string);
#L0b48b4.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b48ba.   throw v0;
#L0b48bc.   call temp:=  [|java:math:BigDecimal.isZero|](v13) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b48c2.   v0:= temp;
#L0b48c4.   if v0 == 0 then goto L0b48d8;
#L0b48c8.   v0:= new [|java:lang:ArithmeticException|];
#L0b48cc.   v1:= "Division by zero" @type (object, string);
#L0b48d0.   call temp:=  [|java:lang:ArithmeticException.<init>|](v0, v1) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b48d6.   throw v0;
#L0b48d8.   v0:= v12.[|java:math:BigDecimal.scale|] ;
#L0b48dc.   v0:= (long)v0  @type i2l;
#L0b48de.   v2:= v13.[|java:math:BigDecimal.scale|] ;
#L0b48e2.   v2:= (long)v2  @type i2l;
#L0b48e4.   v0:= v0 - v2  @type long;
#L0b48e6.   v2:= (long)v14  @type i2l;
#L0b48e8.   v6:= v0 - v2  @type long;
#L0b48ec.   v0:= v12.[|java:math:BigDecimal.bitLength|] ;
#L0b48f0.   if v0 >= v4 then goto L0b49b4;
#L0b48f4.   v0:= v13.[|java:math:BigDecimal.bitLength|] ;
#L0b48f8.   if v0 >= v4 then goto L0b49b4;
#L0b48fc.   v0:= cmp(v6,v10);
#L0b4900.   if v0 != 0 then goto L0b491a;
#L0b4904.   v0:= v12.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b4908.   v2:= v13.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b490c.   v4:= v14;
#L0b490e.   v5:= v15  @type object;
#L0b4910.   call temp:=  [|java:math:BigDecimal.dividePrimitiveLongs|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/math/BigDecimal;.dividePrimitiveLongs:(JJILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4916.   v0:= temp  @type object;
#L0b4918.   return v0  @type object;
#L0b491a.   v0:= cmp(v6,v10);
#L0b491e.   if v0 <= 0 then goto L0b4968;
#L0b4922.   v0:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b4926.   v0:= v0.length;
#L0b4928.   v0:= (long)v0  @type i2l;
#L0b492a.   v0:= cmp(v6,v0);
#L0b492e.   if v0 >= 0 then goto L0b49b4;
#L0b4932.   v0:= v13.[|java:math:BigDecimal.bitLength|] ;
#L0b4936.   v1:= @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]   @type object;
#L0b493a.   v2:= (int)v6  @type l2i;
#L0b493c.   v1:= v1[v2];
#L0b4940.   v0:= v0 + v1  @type int;
#L0b4942.   if v0 >= v4 then goto L0b49b4;
#L0b4946.   v0:= v12.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b494a.   v2:= v13.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b494e.   v4:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b4952.   v5:= (int)v6  @type l2i;
#L0b4954.   v4:= v4[v5]  @wide;
#L0b4958.   v2:= v2 * v4  @type long;
#L0b495a.   v4:= v14;
#L0b495c.   v5:= v15  @type object;
#L0b495e.   call temp:=  [|java:math:BigDecimal.dividePrimitiveLongs|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/math/BigDecimal;.dividePrimitiveLongs:(JJILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4964.   v0:= temp  @type object;
#L0b4966.   goto L0b4918;
#L0b4968.   v0:= -v6  @type long;
#L0b496a.   v2:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b496e.   v2:= v2.length;
#L0b4970.   v2:= (long)v2  @type i2l;
#L0b4972.   v0:= cmp(v0,v2);
#L0b4976.   if v0 >= 0 then goto L0b49b4;
#L0b497a.   v0:= v12.[|java:math:BigDecimal.bitLength|] ;
#L0b497e.   v1:= @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]   @type object;
#L0b4982.   v2:= -v6  @type long;
#L0b4984.   v2:= (int)v2  @type l2i;
#L0b4986.   v1:= v1[v2];
#L0b498a.   v0:= v0 + v1  @type int;
#L0b498c.   if v0 >= v4 then goto L0b49b4;
#L0b4990.   v0:= v12.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b4994.   v2:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b4998.   v3:= -v6  @type long;
#L0b499a.   v3:= (int)v3  @type l2i;
#L0b499c.   v2:= v2[v3]  @wide;
#L0b49a0.   v0:= v0 * v2  @type long;
#L0b49a2.   v2:= v13.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b49a6.   v4:= v14;
#L0b49a8.   v5:= v15  @type object;
#L0b49aa.   call temp:=  [|java:math:BigDecimal.dividePrimitiveLongs|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/math/BigDecimal;.dividePrimitiveLongs:(JJILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b49b0.   v0:= temp  @type object;
#L0b49b2.   goto L0b4918;
#L0b49b4.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v12) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b49ba.   v8:= temp  @type object;
#L0b49bc.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v13) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b49c2.   v9:= temp  @type object;
#L0b49c4.   v0:= cmp(v6,v10);
#L0b49c8.   if v0 <= 0 then goto L0b49e2;
#L0b49cc.   v0:= (int)v6  @type l2i;
#L0b49ce.   v0:= (long)v0  @type i2l;
#L0b49d0.   call temp:=  [|java:math:Multiplication.multiplyByTenPow|](v9, v0, v1) @signature [|Ljava/math/Multiplication;.multiplyByTenPow:(Ljava/math/BigInteger;J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b49d6.   v9:= temp  @type object;
#L0b49d8.   call temp:=  [|java:math:BigDecimal.divideBigIntegers|](v8, v9, v14, v15) @signature [|Ljava/math/BigDecimal;.divideBigIntegers:(Ljava/math/BigInteger;Ljava/math/BigInteger;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b49de.   v0:= temp  @type object;
#L0b49e0.   goto L0b4918;
#L0b49e2.   v0:= cmp(v6,v10);
#L0b49e6.   if v0 >= 0 then goto L0b49d8;
#L0b49ea.   v0:= -v6  @type long;
#L0b49ec.   v0:= (int)v0  @type l2i;
#L0b49ee.   v0:= (long)v0  @type i2l;
#L0b49f0.   call temp:=  [|java:math:Multiplication.multiplyByTenPow|](v8, v0, v1) @signature [|Ljava/math/Multiplication;.multiplyByTenPow:(Ljava/math/BigInteger;J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b49f6.   v8:= temp  @type object;
#L0b49f8.   goto L0b49d8;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.divide|] ([|java:math:BigDecimal|] v16 @type (this), [|java:math:BigDecimal|] v17 @type (object), [|java:math:MathContext|] v18 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L0b4a0c.   call temp:=  [|java:math:MathContext.getPrecision|](v18) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b4a12.   v12:= temp;
#L0b4a14.   v12:= (long)v12  @type i2l;
#L0b4a16.   v14:= 2  @length wide16;
#L0b4a1a.   v12:= v12 + v14  @type long;
#L0b4a1c.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v17) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4a22.   v14:= temp;
#L0b4a24.   v14:= (long)v14  @type i2l;
#L0b4a26.   v12:= v12 + v14  @type long;
#L0b4a28.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v16) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4a2e.   v14:= temp;
#L0b4a30.   v14:= (long)v14  @type i2l;
#L0b4a32.   v10:= v12 - v14  @type long;
#L0b4a36.   v0:= v16  @type object;
#L0b4a3a.   v12:= v0.[|java:math:BigDecimal.scale|] ;
#L0b4a3e.   v12:= (long)v12  @type i2l;
#L0b4a40.   v0:= v17  @type object;
#L0b4a44.   v14:= v0.[|java:math:BigDecimal.scale|] ;
#L0b4a48.   v14:= (long)v14  @type i2l;
#L0b4a4a.   v2:= v12 - v14  @type long;
#L0b4a4e.   v7:= v2  @type wide;
#L0b4a50.   v4:= 1  @length 4;
#L0b4a52.   v12:= @@[|java:math:BigDecimal.TEN_POW|]   @type object;
#L0b4a56.   v12:= v12.length;
#L0b4a58.   v6:= v12 + -1;
#L0b4a5c.   v12:= 1  @length 4;
#L0b4a5e.   v9:= new [|java:math:BigInteger|][v12];
#L0b4a62.   v12:= 0  @length 4;
#L0b4a64.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v16) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4a6a.   v13:= temp  @type object;
#L0b4a6c.   v9[v12]:= v13  @type object;
#L0b4a70.   call temp:=  [|java:math:MathContext.getPrecision|](v18) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b4a76.   v12:= temp;
#L0b4a78.   if v12 == 0 then goto L0b4a94;
#L0b4a7c.   call temp:=  [|java:math:BigDecimal.isZero|](v16) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4a82.   v12:= temp;
#L0b4a84.   if v12 != 0 then goto L0b4a94;
#L0b4a88.   call temp:=  [|java:math:BigDecimal.isZero|](v17) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4a8e.   v12:= temp;
#L0b4a90.   if v12 == 0 then goto L0b4a9e;
#L0b4a94.   call temp:=  [|java:math:BigDecimal.divide|](v16, v17) @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4a9a.   v12:= temp  @type object;
#L0b4a9c.   return v12  @type object;
#L0b4a9e.   v12:= 0  @length wide16;
#L0b4aa2.   v12:= cmp(v10,v12);
#L0b4aa6.   if v12 <= 0 then goto L0b4aca;
#L0b4aaa.   v12:= 0  @length 4;
#L0b4aac.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v16) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4ab2.   v13:= temp  @type object;
#L0b4ab4.   call temp:=  [|java:math:Multiplication.powerOf10|](v10, v11) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b4aba.   v14:= temp  @type object;
#L0b4abc.   call temp:=  [|java:math:BigInteger.multiply|](v13, v14) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4ac2.   v13:= temp  @type object;
#L0b4ac4.   v9[v12]:= v13  @type object;
#L0b4ac8.   v7:= v7 + v10  @type long;
#L0b4aca.   v12:= 0  @length 4;
#L0b4acc.   v12:= v9[v12]  @type object;
#L0b4ad0.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v17) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4ad6.   v13:= temp  @type object;
#L0b4ad8.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v12, v13) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4ade.   v9:= temp  @type object;
#L0b4ae0.   v12:= 0  @length 4;
#L0b4ae2.   v5:= v9[v12]  @type object;
#L0b4ae6.   v12:= 1  @length 4;
#L0b4ae8.   v12:= v9[v12]  @type object;
#L0b4aec.   call temp:=  [|java:math:BigInteger.signum|](v12) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4af2.   v12:= temp;
#L0b4af4.   if v12 == 0 then goto L0b4b66;
#L0b4af8.   v12:= 1  @length 4;
#L0b4afa.   v12:= v9[v12]  @type object;
#L0b4afe.   call temp:=  [|java:math:BigInteger.shiftLeftOneBit|](v12) @signature [|Ljava/math/BigInteger;.shiftLeftOneBit:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4b04.   v12:= temp  @type object;
#L0b4b06.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v17) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4b0c.   v13:= temp  @type object;
#L0b4b0e.   call temp:=  [|java:math:BigInteger.compareTo|](v12, v13) @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4b14.   v1:= temp;
#L0b4b16.   v12:= @@[|java:math:BigInteger.TEN|]   @type object;
#L0b4b1a.   call temp:=  [|java:math:BigInteger.multiply|](v5, v12) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4b20.   v12:= temp  @type object;
#L0b4b22.   v13:= 0  @length 4;
#L0b4b24.   v13:= v9[v13]  @type object;
#L0b4b28.   call temp:=  [|java:math:BigInteger.signum|](v13) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4b2e.   v13:= temp;
#L0b4b30.   v14:= v1 + 5;
#L0b4b34.   v13:= v13 * v14  @type int;
#L0b4b36.   v13:= (long)v13  @type i2l;
#L0b4b38.   call temp:=  [|java:math:BigInteger.valueOf|](v13, v14) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b4b3e.   v13:= temp  @type object;
#L0b4b40.   call temp:=  [|java:math:BigInteger.add|](v12, v13) @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4b46.   v5:= temp  @type object;
#L0b4b48.   v12:= 1  @length wide16;
#L0b4b4c.   v7:= v7 + v12  @type long;
#L0b4b4e.   v12:= new [|java:math:BigDecimal|];
#L0b4b52.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v7, v8) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4b58.   v13:= temp;
#L0b4b5a.   v0:= v18  @type object;
#L0b4b5e.   call temp:=  [|java:math:BigDecimal.<init>|](v12, v5, v13, v0) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;ILjava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4b64.   goto L0b4a9c;
#L0b4b66.   v12:= 0  @length 4;
#L0b4b68.   call temp:=  [|java:math:BigInteger.testBit|](v5, v12) @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4b6e.   v12:= temp;
#L0b4b70.   if v12 != 0 then goto L0b4b4e;
#L0b4b74.   v12:= @@[|java:math:BigDecimal.TEN_POW|]   @type object;
#L0b4b78.   v12:= v12[v4]  @type object;
#L0b4b7c.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v5, v12) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4b82.   v9:= temp  @type object;
#L0b4b84.   v12:= 1  @length 4;
#L0b4b86.   v12:= v9[v12]  @type object;
#L0b4b8a.   call temp:=  [|java:math:BigInteger.signum|](v12) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4b90.   v12:= temp;
#L0b4b92.   if v12 != 0 then goto L0b4bb8;
#L0b4b96.   v12:= (long)v4  @type i2l;
#L0b4b98.   v12:= v7 - v12  @type long;
#L0b4b9c.   v12:= cmp(v12,v2);
#L0b4ba0.   if v12 < 0 then goto L0b4bb8;
#L0b4ba4.   v12:= (long)v4  @type i2l;
#L0b4ba6.   v7:= v7 - v12  @type long;
#L0b4ba8.   if v4 >= v6 then goto L0b4bb0;
#L0b4bac.   v4:= v4 + 1;
#L0b4bb0.   v12:= 0  @length 4;
#L0b4bb2.   v5:= v9[v12]  @type object;
#L0b4bb6.   goto L0b4b66;
#L0b4bb8.   v12:= 1  @length 4;
#L0b4bba.   if v4 == v12 then goto L0b4b4e;
#L0b4bbe.   v4:= 1  @length 4;
#L0b4bc0.   goto L0b4b66;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.divide|] ([|java:math:BigDecimal|] v1 @type (this), [|java:math:BigDecimal|] v2 @type (object), [|java:math:RoundingMode|] v3 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;Ljava/math/RoundingMode;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b4bd4.   v0:= v1.[|java:math:BigDecimal.scale|] ;
#L0b4bd8.   call temp:=  [|java:math:BigDecimal.divide|](v1, v2, v0, v3) @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4bde.   v0:= temp  @type object;
#L0b4be0.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|][] [|java:math:BigDecimal.divideAndRemainder|] ([|java:math:BigDecimal|] v3 @type (this), [|java:math:BigDecimal|] v4 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divideAndRemainder:(Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b4bf4.   v2:= 0  @length 4;
#L0b4bf6.   v1:= 2  @length 4;
#L0b4bf8.   v0:= new [|java:math:BigDecimal|][v1];
#L0b4bfc.   call temp:=  [|java:math:BigDecimal.divideToIntegralValue|](v3, v4) @signature [|Ljava/math/BigDecimal;.divideToIntegralValue:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4c02.   v1:= temp  @type object;
#L0b4c04.   v0[v2]:= v1  @type object;
#L0b4c08.   v1:= 1  @length 4;
#L0b4c0a.   v2:= v0[v2]  @type object;
#L0b4c0e.   call temp:=  [|java:math:BigDecimal.multiply|](v2, v4) @signature [|Ljava/math/BigDecimal;.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4c14.   v2:= temp  @type object;
#L0b4c16.   call temp:=  [|java:math:BigDecimal.subtract|](v3, v2) @signature [|Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4c1c.   v2:= temp  @type object;
#L0b4c1e.   v0[v1]:= v2  @type object;
#L0b4c22.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|][] [|java:math:BigDecimal.divideAndRemainder|] ([|java:math:BigDecimal|] v3 @type (this), [|java:math:BigDecimal|] v4 @type (object), [|java:math:MathContext|] v5 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divideAndRemainder:(Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b4c34.   v2:= 0  @length 4;
#L0b4c36.   v1:= 2  @length 4;
#L0b4c38.   v0:= new [|java:math:BigDecimal|][v1];
#L0b4c3c.   call temp:=  [|java:math:BigDecimal.divideToIntegralValue|](v3, v4, v5) @signature [|Ljava/math/BigDecimal;.divideToIntegralValue:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4c42.   v1:= temp  @type object;
#L0b4c44.   v0[v2]:= v1  @type object;
#L0b4c48.   v1:= 1  @length 4;
#L0b4c4a.   v2:= v0[v2]  @type object;
#L0b4c4e.   call temp:=  [|java:math:BigDecimal.multiply|](v2, v4) @signature [|Ljava/math/BigDecimal;.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4c54.   v2:= temp  @type object;
#L0b4c56.   call temp:=  [|java:math:BigDecimal.subtract|](v3, v2) @signature [|Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4c5c.   v2:= temp  @type object;
#L0b4c5e.   v0[v1]:= v2  @type object;
#L0b4c62.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.divideToIntegralValue|] ([|java:math:BigDecimal|] v16 @type (this), [|java:math:BigDecimal|] v17 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divideToIntegralValue:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L0b4c74.   v10:= 1  @length 4;
#L0b4c76.   v7:= new [|java:math:BigInteger|][v10];
#L0b4c7a.   v10:= 0  @length 4;
#L0b4c7c.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v16) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4c82.   v11:= temp  @type object;
#L0b4c84.   v7[v10]:= v11  @type object;
#L0b4c88.   v0:= v16  @type object;
#L0b4c8c.   v10:= v0.[|java:math:BigDecimal.scale|] ;
#L0b4c90.   v10:= (long)v10  @type i2l;
#L0b4c92.   v0:= v17  @type object;
#L0b4c96.   v12:= v0.[|java:math:BigDecimal.scale|] ;
#L0b4c9a.   v12:= (long)v12  @type i2l;
#L0b4c9c.   v4:= v10 - v12  @type long;
#L0b4ca0.   v8:= 0  @length wide16;
#L0b4ca4.   v1:= 1  @length 4;
#L0b4ca6.   v10:= @@[|java:math:BigDecimal.TEN_POW|]   @type object;
#L0b4caa.   v10:= v10.length;
#L0b4cac.   v3:= v10 + -1;
#L0b4cb0.   call temp:=  [|java:math:BigDecimal.isZero|](v17) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4cb6.   v10:= temp;
#L0b4cb8.   if v10 == 0 then goto L0b4ccc;
#L0b4cbc.   v10:= new [|java:lang:ArithmeticException|];
#L0b4cc0.   v11:= "Division by zero" @type (object, string);
#L0b4cc4.   call temp:=  [|java:lang:ArithmeticException.<init>|](v10, v11) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b4cca.   throw v10;
#L0b4ccc.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v17) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4cd2.   v10:= temp;
#L0b4cd4.   v10:= (long)v10  @type i2l;
#L0b4cd6.   v10:= v10 + v4  @type long;
#L0b4cd8.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v16) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4cde.   v12:= temp;
#L0b4ce0.   v12:= (long)v12  @type i2l;
#L0b4ce2.   v14:= 1  @length wide16;
#L0b4ce6.   v12:= v12 + v14  @type long;
#L0b4ce8.   v10:= cmp(v10,v12);
#L0b4cec.   if v10 > 0 then goto L0b4cfc;
#L0b4cf0.   call temp:=  [|java:math:BigDecimal.isZero|](v16) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4cf6.   v10:= temp;
#L0b4cf8.   if v10 == 0 then goto L0b4d16;
#L0b4cfc.   v2:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0b4d00.   call temp:=  [|java:math:BigInteger.signum|](v2) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4d06.   v10:= temp;
#L0b4d08.   if v10 != 0 then goto L0b4e04;
#L0b4d0c.   call temp:=  [|java:math:BigDecimal.zeroScaledBy|](v4, v5) @signature [|Ljava/math/BigDecimal;.zeroScaledBy:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4d12.   v10:= temp  @type object;
#L0b4d14.   return v10  @type object;
#L0b4d16.   v10:= 0  @length wide16;
#L0b4d1a.   v10:= cmp(v4,v10);
#L0b4d1e.   if v10 != 0 then goto L0b4d3c;
#L0b4d22.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v16) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4d28.   v10:= temp  @type object;
#L0b4d2a.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v17) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4d30.   v11:= temp  @type object;
#L0b4d32.   call temp:=  [|java:math:BigInteger.divide|](v10, v11) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4d38.   v2:= temp  @type object;
#L0b4d3a.   goto L0b4d00;
#L0b4d3c.   v10:= 0  @length wide16;
#L0b4d40.   v10:= cmp(v4,v10);
#L0b4d44.   if v10 <= 0 then goto L0b4d7a;
#L0b4d48.   call temp:=  [|java:math:Multiplication.powerOf10|](v4, v5) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b4d4e.   v6:= temp  @type object;
#L0b4d50.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v16) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4d56.   v10:= temp  @type object;
#L0b4d58.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v17) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4d5e.   v11:= temp  @type object;
#L0b4d60.   call temp:=  [|java:math:BigInteger.multiply|](v11, v6) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4d66.   v11:= temp  @type object;
#L0b4d68.   call temp:=  [|java:math:BigInteger.divide|](v10, v11) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4d6e.   v2:= temp  @type object;
#L0b4d70.   call temp:=  [|java:math:BigInteger.multiply|](v2, v6) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4d76.   v2:= temp  @type object;
#L0b4d78.   goto L0b4d00;
#L0b4d7a.   v10:= -v4  @type long;
#L0b4d7c.   call temp:=  [|java:math:Multiplication.powerOf10|](v10, v11) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b4d82.   v6:= temp  @type object;
#L0b4d84.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v16) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4d8a.   v10:= temp  @type object;
#L0b4d8c.   call temp:=  [|java:math:BigInteger.multiply|](v10, v6) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4d92.   v10:= temp  @type object;
#L0b4d94.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v17) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4d9a.   v11:= temp  @type object;
#L0b4d9c.   call temp:=  [|java:math:BigInteger.divide|](v10, v11) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4da2.   v2:= temp  @type object;
#L0b4da4.   v10:= 0  @length 4;
#L0b4da6.   call temp:=  [|java:math:BigInteger.testBit|](v2, v10) @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4dac.   v10:= temp;
#L0b4dae.   if v10 != 0 then goto L0b4dfc;
#L0b4db2.   v10:= @@[|java:math:BigDecimal.TEN_POW|]   @type object;
#L0b4db6.   v10:= v10[v1]  @type object;
#L0b4dba.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v2, v10) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4dc0.   v7:= temp  @type object;
#L0b4dc2.   v10:= 1  @length 4;
#L0b4dc4.   v10:= v7[v10]  @type object;
#L0b4dc8.   call temp:=  [|java:math:BigInteger.signum|](v10) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4dce.   v10:= temp;
#L0b4dd0.   if v10 != 0 then goto L0b4df6;
#L0b4dd4.   v10:= (long)v1  @type i2l;
#L0b4dd6.   v10:= v8 - v10  @type long;
#L0b4dda.   v10:= cmp(v10,v4);
#L0b4dde.   if v10 < 0 then goto L0b4df6;
#L0b4de2.   v10:= (long)v1  @type i2l;
#L0b4de4.   v8:= v8 - v10  @type long;
#L0b4de6.   if v1 >= v3 then goto L0b4dee;
#L0b4dea.   v1:= v1 + 1;
#L0b4dee.   v10:= 0  @length 4;
#L0b4df0.   v2:= v7[v10]  @type object;
#L0b4df4.   goto L0b4da4;
#L0b4df6.   v10:= 1  @length 4;
#L0b4df8.   if v1 != v10 then goto L0b4e00;
#L0b4dfc.   v4:= v8  @type wide;
#L0b4dfe.   goto L0b4d00;
#L0b4e00.   v1:= 1  @length 4;
#L0b4e02.   goto L0b4da4;
#L0b4e04.   v10:= new [|java:math:BigDecimal|];
#L0b4e08.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v4, v5) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4e0e.   v11:= temp;
#L0b4e10.   call temp:=  [|java:math:BigDecimal.<init>|](v10, v2, v11) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4e16.   goto L0b4d14;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.divideToIntegralValue|] ([|java:math:BigDecimal|] v27 @type (this), [|java:math:BigDecimal|] v28 @type (object), [|java:math:MathContext|] v29 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.divideToIntegralValue:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
        v25;
        v26;
      
#L0b4e2c.   call temp:=  [|java:math:MathContext.getPrecision|](v29) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b4e32.   v12:= temp;
#L0b4e34.   call temp:=  [|java:math:BigDecimal.precision|](v27) @signature [|Ljava/math/BigDecimal;.precision:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4e3a.   v21:= temp;
#L0b4e3c.   call temp:=  [|java:math:BigDecimal.precision|](v28) @signature [|Ljava/math/BigDecimal;.precision:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4e42.   v22:= temp;
#L0b4e44.   v4:= v21 - v22  @type int;
#L0b4e48.   v21:= @@[|java:math:BigDecimal.TEN_POW|]   @type object;
#L0b4e4c.   v0:= v21  @type object;
#L0b4e50.   v0:= v0.length;
#L0b4e52.   v21:= v0;
#L0b4e56.   v11:= v21 + -1;
#L0b4e5a.   v0:= v27  @type object;
#L0b4e5e.   v0:= v0.[|java:math:BigDecimal.scale|] ;
#L0b4e62.   v21:= v0;
#L0b4e66.   v0:= v21;
#L0b4e6a.   v0:= (long)v0  @type i2l;
#L0b4e6c.   v21:= v0  @type wide;
#L0b4e70.   v0:= v28  @type object;
#L0b4e74.   v0:= v0.[|java:math:BigDecimal.scale|] ;
#L0b4e78.   v23:= v0;
#L0b4e7c.   v0:= v23;
#L0b4e80.   v0:= (long)v0  @type i2l;
#L0b4e82.   v23:= v0  @type wide;
#L0b4e86.   v5:= v21 - v23  @type long;
#L0b4e8a.   v13:= v5  @type wide;
#L0b4e8c.   v0:= (long)v4  @type i2l;
#L0b4e8e.   v21:= v0  @type wide;
#L0b4e92.   v21:= v21 - v5  @type long;
#L0b4e96.   v23:= 1  @length wide16;
#L0b4e9a.   v16:= v21 + v23  @type long;
#L0b4e9e.   v21:= 2  @length 16;
#L0b4ea2.   v0:= v21;
#L0b4ea6.   v15:= new [|java:math:BigInteger|][v0];
#L0b4eaa.   if v12 == 0 then goto L0b4ec6;
#L0b4eae.   call temp:=  [|java:math:BigDecimal.isZero|](v27) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4eb4.   v21:= temp;
#L0b4eb6.   if v21 != 0 then goto L0b4ec6;
#L0b4eba.   call temp:=  [|java:math:BigDecimal.isZero|](v28) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4ec0.   v21:= temp;
#L0b4ec2.   if v21 == 0 then goto L0b4ed0;
#L0b4ec6.   call temp:=  [|java:math:BigDecimal.divideToIntegralValue|](v27, v28) @signature [|Ljava/math/BigDecimal;.divideToIntegralValue:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b4ecc.   v10:= temp  @type object;
#L0b4ece.   return v10  @type object;
#L0b4ed0.   v21:= 0  @length wide16;
#L0b4ed4.   v21:= cmp(v16,v21);
#L0b4ed8.   if v21 > 0 then goto L0b4f06;
#L0b4edc.   v21:= 0  @length 16;
#L0b4ee0.   v22:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0b4ee4.   v15[v21]:= v22  @type object;
#L0b4ee8.   v21:= 0  @length 16;
#L0b4eec.   v21:= v15[v21]  @type object;
#L0b4ef0.   call temp:=  [|java:math:BigInteger.signum|](v21) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4ef6.   v21:= temp;
#L0b4ef8.   if v21 != 0 then goto L0b50e6;
#L0b4efc.   call temp:=  [|java:math:BigDecimal.zeroScaledBy|](v5, v6) @signature [|Ljava/math/BigDecimal;.zeroScaledBy:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b4f02.   v10:= temp  @type object;
#L0b4f04.   goto L0b4ece;
#L0b4f06.   v21:= 0  @length wide16;
#L0b4f0a.   v21:= cmp(v5,v21);
#L0b4f0e.   if v21 != 0 then goto L0b4f34;
#L0b4f12.   v21:= 0  @length 16;
#L0b4f16.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v27) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4f1c.   v22:= temp  @type object;
#L0b4f1e.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v28) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4f24.   v23:= temp  @type object;
#L0b4f26.   call temp:=  [|java:math:BigInteger.divide|](v22, v23) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4f2c.   v22:= temp  @type object;
#L0b4f2e.   v15[v21]:= v22  @type object;
#L0b4f32.   goto L0b4ee8;
#L0b4f34.   v21:= 0  @length wide16;
#L0b4f38.   v21:= cmp(v5,v21);
#L0b4f3c.   if v21 <= 0 then goto L0b4fbc;
#L0b4f40.   v21:= 0  @length 16;
#L0b4f44.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v27) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4f4a.   v22:= temp  @type object;
#L0b4f4c.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v28) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4f52.   v23:= temp  @type object;
#L0b4f54.   call temp:=  [|java:math:Multiplication.powerOf10|](v5, v6) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b4f5a.   v24:= temp  @type object;
#L0b4f5c.   call temp:=  [|java:math:BigInteger.multiply|](v23, v24) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4f62.   v23:= temp  @type object;
#L0b4f64.   call temp:=  [|java:math:BigInteger.divide|](v22, v23) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4f6a.   v22:= temp  @type object;
#L0b4f6c.   v15[v21]:= v22  @type object;
#L0b4f70.   v0:= (long)v12  @type i2l;
#L0b4f72.   v21:= v0  @type wide;
#L0b4f76.   v21:= v21 - v16  @type long;
#L0b4f7a.   v23:= 1  @length wide16;
#L0b4f7e.   v21:= v21 + v23  @type long;
#L0b4f82.   v23:= 0  @length wide16;
#L0b4f86.   call temp:=  [|java:lang:Math.max|](v21, v22, v23, v24) @signature [|Ljava/lang/Math;.max:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b4f8c.   v21:= temp  @type wide;
#L0b4f8e.   v0:= v21  @type wide;
#L0b4f92.   call temp:=  [|java:lang:Math.min|](v5, v6, v0, v1) @signature [|Ljava/lang/Math;.min:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b4f98.   v13:= temp  @type wide;
#L0b4f9a.   v21:= 0  @length 16;
#L0b4f9e.   v22:= 0  @length 16;
#L0b4fa2.   v22:= v15[v22]  @type object;
#L0b4fa6.   call temp:=  [|java:math:Multiplication.powerOf10|](v13, v14) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b4fac.   v23:= temp  @type object;
#L0b4fae.   call temp:=  [|java:math:BigInteger.multiply|](v22, v23) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4fb4.   v22:= temp  @type object;
#L0b4fb6.   v15[v21]:= v22  @type object;
#L0b4fba.   goto L0b4ee8;
#L0b4fbc.   v0:= -v5  @type long;
#L0b4fbe.   v21:= v0  @type wide;
#L0b4fc2.   v0:= (long)v12  @type i2l;
#L0b4fc4.   v23:= v0  @type wide;
#L0b4fc8.   v0:= (long)v4  @type i2l;
#L0b4fca.   v25:= v0  @type wide;
#L0b4fce.   v23:= v23 - v25  @type long;
#L0b4fd2.   v25:= 0  @length wide16;
#L0b4fd6.   call temp:=  [|java:lang:Math.max|](v23, v24, v25, v26) @signature [|Ljava/lang/Math;.max:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b4fdc.   v23:= temp  @type wide;
#L0b4fde.   call temp:=  [|java:lang:Math.min|](v21, v22, v23, v24) @signature [|Ljava/lang/Math;.min:(JJ)J|] @classDescriptor [|java:lang:Math|] @type static;
#L0b4fe4.   v7:= temp  @type wide;
#L0b4fe6.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v27) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b4fec.   v21:= temp  @type object;
#L0b4fee.   call temp:=  [|java:math:Multiplication.powerOf10|](v7, v8) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b4ff4.   v22:= temp  @type object;
#L0b4ff6.   call temp:=  [|java:math:BigInteger.multiply|](v21, v22) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b4ffc.   v21:= temp  @type object;
#L0b4ffe.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v28) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5004.   v22:= temp  @type object;
#L0b5006.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v21, v22) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b500c.   v15:= temp  @type object;
#L0b500e.   v13:= v13 + v7  @type long;
#L0b5010.   v7:= -v13  @type long;
#L0b5012.   v21:= 1  @length 16;
#L0b5016.   v21:= v15[v21]  @type object;
#L0b501a.   call temp:=  [|java:math:BigInteger.signum|](v21) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5020.   v21:= temp;
#L0b5022.   if v21 == 0 then goto L0b4ee8;
#L0b5026.   v21:= 0  @length wide16;
#L0b502a.   v21:= cmp(v7,v21);
#L0b502e.   if v21 <= 0 then goto L0b4ee8;
#L0b5032.   v21:= new [|java:math:BigDecimal|];
#L0b5036.   v22:= 1  @length 16;
#L0b503a.   v22:= v15[v22]  @type object;
#L0b503e.   call temp:=  [|java:math:BigDecimal.<init>|](v21, v22) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5044.   call temp:=  [|java:math:BigDecimal.precision|](v21) @signature [|Ljava/math/BigDecimal;.precision:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b504a.   v21:= temp;
#L0b504c.   v0:= v21;
#L0b5050.   v0:= (long)v0  @type i2l;
#L0b5052.   v21:= v0  @type wide;
#L0b5056.   v21:= v21 + v7  @type long;
#L0b505a.   call temp:=  [|java:math:BigDecimal.precision|](v28) @signature [|Ljava/math/BigDecimal;.precision:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5060.   v23:= temp;
#L0b5062.   v0:= v23;
#L0b5066.   v0:= (long)v0  @type i2l;
#L0b5068.   v23:= v0  @type wide;
#L0b506c.   v2:= v21 - v23  @type long;
#L0b5070.   v21:= 0  @length wide16;
#L0b5074.   v21:= cmp(v2,v21);
#L0b5078.   if v21 != 0 then goto L0b50ca;
#L0b507c.   v21:= 1  @length 16;
#L0b5080.   v22:= 1  @length 16;
#L0b5084.   v22:= v15[v22]  @type object;
#L0b5088.   call temp:=  [|java:math:Multiplication.powerOf10|](v7, v8) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b508e.   v23:= temp  @type object;
#L0b5090.   call temp:=  [|java:math:BigInteger.multiply|](v22, v23) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5096.   v22:= temp  @type object;
#L0b5098.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v28) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b509e.   v23:= temp  @type object;
#L0b50a0.   call temp:=  [|java:math:BigInteger.divide|](v22, v23) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b50a6.   v22:= temp  @type object;
#L0b50a8.   v15[v21]:= v22  @type object;
#L0b50ac.   v21:= 1  @length 16;
#L0b50b0.   v21:= v15[v21]  @type object;
#L0b50b4.   call temp:=  [|java:math:BigInteger.signum|](v21) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b50ba.   v21:= temp;
#L0b50bc.   call temp:=  [|java:lang:Math.abs|](v21) @signature [|Ljava/lang/Math;.abs:(I)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b50c2.   v21:= temp;
#L0b50c4.   v0:= v21;
#L0b50c8.   v2:= (long)v0  @type i2l;
#L0b50ca.   v21:= 0  @length wide16;
#L0b50ce.   v21:= cmp(v2,v21);
#L0b50d2.   if v21 <= 0 then goto L0b4ee8;
#L0b50d6.   v21:= new [|java:lang:ArithmeticException|];
#L0b50da.   v22:= "Division impossible" @type (object, string);
#L0b50de.   call temp:=  [|java:lang:ArithmeticException.<init>|](v21, v22) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b50e4.   throw v21;
#L0b50e6.   v21:= 0  @length 16;
#L0b50ea.   v20:= v15[v21]  @type object;
#L0b50ee.   v10:= new [|java:math:BigDecimal|];
#L0b50f2.   v21:= 0  @length 16;
#L0b50f6.   v21:= v15[v21]  @type object;
#L0b50fa.   v0:= v21  @type object;
#L0b50fe.   call temp:=  [|java:math:BigDecimal.<init>|](v10, v0) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5104.   call temp:=  [|java:math:BigDecimal.precision|](v10) @signature [|Ljava/math/BigDecimal;.precision:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b510a.   v21:= temp;
#L0b510c.   v0:= v21;
#L0b5110.   v0:= (long)v0  @type i2l;
#L0b5112.   v18:= v0  @type wide;
#L0b5116.   v9:= 1  @length 4;
#L0b5118.   v21:= 0  @length 16;
#L0b511c.   call temp:=  [|java:math:BigInteger.testBit|](v20, v21) @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5122.   v21:= temp;
#L0b5124.   if v21 != 0 then goto L0b51a8;
#L0b5128.   v21:= @@[|java:math:BigDecimal.TEN_POW|]   @type object;
#L0b512c.   v21:= v21[v9]  @type object;
#L0b5130.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v20, v21) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5136.   v15:= temp  @type object;
#L0b5138.   v21:= 1  @length 16;
#L0b513c.   v21:= v15[v21]  @type object;
#L0b5140.   call temp:=  [|java:math:BigInteger.signum|](v21) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5146.   v21:= temp;
#L0b5148.   if v21 != 0 then goto L0b519c;
#L0b514c.   v0:= (long)v9  @type i2l;
#L0b514e.   v21:= v0  @type wide;
#L0b5152.   v21:= v18 - v21  @type long;
#L0b5156.   v0:= (long)v12  @type i2l;
#L0b5158.   v23:= v0  @type wide;
#L0b515c.   v21:= cmp(v21,v23);
#L0b5160.   if v21 >= 0 then goto L0b5176;
#L0b5164.   v0:= (long)v9  @type i2l;
#L0b5166.   v21:= v0  @type wide;
#L0b516a.   v21:= v13 - v21  @type long;
#L0b516e.   v21:= cmp(v21,v5);
#L0b5172.   if v21 < 0 then goto L0b519c;
#L0b5176.   v0:= (long)v9  @type i2l;
#L0b5178.   v21:= v0  @type wide;
#L0b517c.   v18:= v18 - v21  @type long;
#L0b5180.   v0:= (long)v9  @type i2l;
#L0b5182.   v21:= v0  @type wide;
#L0b5186.   v13:= v13 - v21  @type long;
#L0b518a.   if v9 >= v11 then goto L0b5192;
#L0b518e.   v9:= v9 + 1;
#L0b5192.   v21:= 0  @length 16;
#L0b5196.   v20:= v15[v21]  @type object;
#L0b519a.   goto L0b5118;
#L0b519c.   v21:= 1  @length 16;
#L0b51a0.   v0:= v21;
#L0b51a4.   if v9 != v0 then goto L0b51c6;
#L0b51a8.   v0:= (long)v12  @type i2l;
#L0b51aa.   v21:= v0  @type wide;
#L0b51ae.   v21:= cmp(v18,v21);
#L0b51b2.   if v21 <= 0 then goto L0b51ca;
#L0b51b6.   v21:= new [|java:lang:ArithmeticException|];
#L0b51ba.   v22:= "Division impossible" @type (object, string);
#L0b51be.   call temp:=  [|java:lang:ArithmeticException.<init>|](v21, v22) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b51c4.   throw v21;
#L0b51c6.   v9:= 1  @length 4;
#L0b51c8.   goto L0b5118;
#L0b51ca.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v13, v14) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b51d0.   v21:= temp;
#L0b51d2.   v0:= v21;
#L0b51d6.   v10.[|java:math:BigDecimal.scale|]  := v0;
#L0b51da.   v0:= v20  @type object;
#L0b51de.   call temp:=  [|java:math:BigDecimal.setUnscaledValue|](v10, v0) @signature [|Ljava/math/BigDecimal;.setUnscaledValue:(Ljava/math/BigInteger;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b51e4.   goto L0b4ece;

   }
    procedure [|double|] [|java:math:BigDecimal.doubleValue|] ([|java:math:BigDecimal|] v23 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.doubleValue:()D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
      
#L0b51f8.   call temp:=  [|java:math:BigDecimal.signum|](v23) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b51fe.   v14:= temp;
#L0b5200.   v6:= 1076  @length 16;
#L0b5204.   v0:= v23  @type object;
#L0b5208.   v0:= v0.[|java:math:BigDecimal.bitLength|] ;
#L0b520c.   v17:= v0;
#L0b5210.   v0:= v17;
#L0b5214.   v0:= (long)v0  @type i2l;
#L0b5216.   v17:= v0  @type wide;
#L0b521a.   v0:= v23  @type object;
#L0b521e.   v0:= v0.[|java:math:BigDecimal.scale|] ;
#L0b5222.   v19:= v0;
#L0b5226.   v0:= v19;
#L0b522a.   v0:= (double)v0  @type i2d;
#L0b522c.   v19:= v0  @type wide;
#L0b5230.   v21:= 0.301030L  @length wide;
#L0b523a.   v19:= v19 / v21  @type double;
#L0b523e.   v0:= v19  @type wide;
#L0b5242.   v0:= (long)v0  @type d2l;
#L0b5244.   v19:= v0  @type wide;
#L0b5248.   v11:= v17 - v19  @type long;
#L0b524c.   v17:= -1074  @length wide16;
#L0b5250.   v17:= cmp(v11,v17);
#L0b5254.   if v17 < 0 then goto L0b525c;
#L0b5258.   if v14 != 0 then goto L0b526c;
#L0b525c.   v0:= (double)v14  @type i2d;
#L0b525e.   v17:= v0  @type wide;
#L0b5262.   v19:= 0  @length wide16;
#L0b5266.   v17:= v17 * v19  @type double;
#L0b526a.   return v17  @type wide;
#L0b526c.   v17:= 1025  @length wide16;
#L0b5270.   v17:= cmp(v11,v17);
#L0b5274.   if v17 <= 0 then goto L0b5288;
#L0b5278.   v0:= (double)v14  @type i2d;
#L0b527a.   v17:= v0  @type wide;
#L0b527e.   v19:= 9218868437227405312L  @length wide_high16;
#L0b5282.   v17:= v17 * v19  @type double;
#L0b5286.   goto L0b526a;
#L0b5288.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v23) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b528e.   v17:= temp  @type object;
#L0b5290.   call temp:=  [|java:math:BigInteger.abs|](v17) @signature [|Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5296.   v9:= temp  @type object;
#L0b5298.   v0:= v23  @type object;
#L0b529c.   v0:= v0.[|java:math:BigDecimal.scale|] ;
#L0b52a0.   v17:= v0;
#L0b52a4.   if v17 > 0 then goto L0b5376;
#L0b52a8.   v0:= v23  @type object;
#L0b52ac.   v0:= v0.[|java:math:BigDecimal.scale|] ;
#L0b52b0.   v17:= v0;
#L0b52b4.   v0:= v17;
#L0b52b8.   v0:= -v0  @type int;
#L0b52ba.   v17:= v0;
#L0b52be.   v0:= v17;
#L0b52c2.   v0:= (long)v0  @type i2l;
#L0b52c4.   v17:= v0  @type wide;
#L0b52c8.   call temp:=  [|java:math:Multiplication.powerOf10|](v17, v18) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b52ce.   v17:= temp  @type object;
#L0b52d0.   v0:= v17  @type object;
#L0b52d4.   call temp:=  [|java:math:BigInteger.multiply|](v9, v0) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b52da.   v9:= temp  @type object;
#L0b52dc.   call temp:=  [|java:math:BigInteger.getLowestSetBit|](v9) @signature [|Ljava/math/BigInteger;.getLowestSetBit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b52e2.   v8:= temp;
#L0b52e4.   call temp:=  [|java:math:BigInteger.bitLength|](v9) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b52ea.   v17:= temp;
#L0b52ec.   v5:= v17 + -54;
#L0b52f0.   if v5 <= 0 then goto L0b5416;
#L0b52f4.   call temp:=  [|java:math:BigInteger.shiftRight|](v9, v5) @signature [|Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b52fa.   v17:= temp  @type object;
#L0b52fc.   call temp:=  [|java:math:BigInteger.longValue|](v17) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5302.   v2:= temp  @type wide;
#L0b5304.   v15:= v2  @type wide;
#L0b5306.   v17:= 1  @length wide16;
#L0b530a.   v17:= v17 ^& v2  @type long;
#L0b530e.   v19:= 1  @length wide16;
#L0b5312.   v17:= cmp(v17,v19);
#L0b5316.   if v17 != 0 then goto L0b531e;
#L0b531a.   if v8 < v5 then goto L0b5332;
#L0b531e.   v17:= 3  @length wide16;
#L0b5322.   v17:= v17 ^& v2  @type long;
#L0b5326.   v19:= 3  @length wide16;
#L0b532a.   v17:= cmp(v17,v19);
#L0b532e.   if v17 != 0 then goto L0b533a;
#L0b5332.   v17:= 2  @length wide16;
#L0b5336.   v2:= v2 + v17  @type long;
#L0b533a.   v17:= 18014398509481984L  @length wide_high16;
#L0b533e.   v17:= v17 ^& v2  @type long;
#L0b5342.   v19:= 0  @length wide16;
#L0b5346.   v17:= cmp(v17,v19);
#L0b534a.   if v17 != 0 then goto L0b544a;
#L0b534e.   v17:= 1  @length 16;
#L0b5352.   v2:= v2 ^> v17  @type long;
#L0b5356.   v6:= v6 + v5  @type int;
#L0b5358.   v17:= 2046  @length 16;
#L0b535c.   v0:= v17;
#L0b5360.   if v6 <= v0 then goto L0b545e;
#L0b5364.   v0:= (double)v14  @type i2d;
#L0b5366.   v17:= v0  @type wide;
#L0b536a.   v19:= 9218868437227405312L  @length wide_high16;
#L0b536e.   v17:= v17 * v19  @type double;
#L0b5372.   goto L0b526a;
#L0b5376.   v0:= v23  @type object;
#L0b537a.   v0:= v0.[|java:math:BigDecimal.scale|] ;
#L0b537e.   v17:= v0;
#L0b5382.   v0:= v17;
#L0b5386.   v0:= (long)v0  @type i2l;
#L0b5388.   v17:= v0  @type wide;
#L0b538c.   call temp:=  [|java:math:Multiplication.powerOf10|](v17, v18) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b5392.   v10:= temp  @type object;
#L0b5394.   v0:= (int)v11  @type l2i;
#L0b5396.   v17:= v0;
#L0b539a.   v7:= v17 - 100;
#L0b539e.   if v7 <= 0 then goto L0b53ac;
#L0b53a2.   call temp:=  [|java:math:BigInteger.shiftLeft|](v9, v7) @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b53a8.   v9:= temp  @type object;
#L0b53aa.   v6:= v6 - v7  @type int;
#L0b53ac.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v9, v10) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b53b2.   v13:= temp  @type object;
#L0b53b4.   v17:= 1  @length 16;
#L0b53b8.   v17:= v13[v17]  @type object;
#L0b53bc.   call temp:=  [|java:math:BigInteger.shiftLeftOneBit|](v17) @signature [|Ljava/math/BigInteger;.shiftLeftOneBit:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b53c2.   v17:= temp  @type object;
#L0b53c4.   v0:= v17  @type object;
#L0b53c8.   call temp:=  [|java:math:BigInteger.compareTo|](v0, v10) @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b53ce.   v4:= temp;
#L0b53d0.   v17:= 0  @length 16;
#L0b53d4.   v17:= v13[v17]  @type object;
#L0b53d8.   v18:= 2  @length 16;
#L0b53dc.   call temp:=  [|java:math:BigInteger.shiftLeft|](v17, v18) @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b53e2.   v17:= temp  @type object;
#L0b53e4.   v18:= v4 + 3;
#L0b53e8.   v18:= v18 * v4  @type int;
#L0b53ec.   v18:= v18 / 2;
#L0b53f0.   v18:= v18 + 1;
#L0b53f4.   v0:= v18;
#L0b53f8.   v0:= (long)v0  @type i2l;
#L0b53fa.   v18:= v0  @type wide;
#L0b53fe.   call temp:=  [|java:math:BigInteger.valueOf|](v18, v19) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b5404.   v18:= temp  @type object;
#L0b5406.   call temp:=  [|java:math:BigInteger.add|](v17, v18) @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b540c.   v9:= temp  @type object;
#L0b540e.   v6:= v6 + -2;
#L0b5412.   goto L0b52dc;
#L0b5416.   call temp:=  [|java:math:BigInteger.longValue|](v9) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b541c.   v17:= temp  @type wide;
#L0b541e.   v0:= -v5  @type int;
#L0b5420.   v19:= v0;
#L0b5424.   v2:= v17 ^< v19  @type long;
#L0b5428.   v15:= v2  @type wide;
#L0b542a.   v17:= 3  @length wide16;
#L0b542e.   v17:= v17 ^& v2  @type long;
#L0b5432.   v19:= 3  @length wide16;
#L0b5436.   v17:= cmp(v17,v19);
#L0b543a.   if v17 != 0 then goto L0b533a;
#L0b543e.   v17:= 2  @length wide16;
#L0b5442.   v2:= v2 + v17  @type long;
#L0b5446.   goto L0b533a;
#L0b544a.   v17:= 2  @length 16;
#L0b544e.   v2:= v2 ^> v17  @type long;
#L0b5452.   v17:= v5 + 1;
#L0b5456.   v6:= v6 + v17  @type int;
#L0b545a.   goto L0b5358;
#L0b545e.   if v6 > 0 then goto L0b54ec;
#L0b5462.   v17:= -53  @length 16;
#L0b5466.   v0:= v17;
#L0b546a.   if v6 >= v0 then goto L0b5480;
#L0b546e.   v0:= (double)v14  @type i2d;
#L0b5470.   v17:= v0  @type wide;
#L0b5474.   v19:= 0  @length wide16;
#L0b5478.   v17:= v17 * v19  @type double;
#L0b547c.   goto L0b526a;
#L0b5480.   v17:= 1  @length 16;
#L0b5484.   v2:= v15 ^> v17  @type long;
#L0b5488.   v17:= -1  @length wide16;
#L0b548c.   v19:= v6 + 63;
#L0b5490.   v17:= v17 ^>> v19  @type long;
#L0b5494.   v15:= v2 ^& v17  @type long;
#L0b5498.   v0:= -v6  @type int;
#L0b549a.   v17:= v0;
#L0b549e.   v2:= v2 ^> v17  @type long;
#L0b54a2.   v17:= 3  @length wide16;
#L0b54a6.   v17:= v17 ^& v2  @type long;
#L0b54aa.   v19:= 3  @length wide16;
#L0b54ae.   v17:= cmp(v17,v19);
#L0b54b2.   if v17 == 0 then goto L0b54da;
#L0b54b6.   v17:= 1  @length wide16;
#L0b54ba.   v17:= v17 ^& v2  @type long;
#L0b54be.   v19:= 1  @length wide16;
#L0b54c2.   v17:= cmp(v17,v19);
#L0b54c6.   if v17 != 0 then goto L0b54e2;
#L0b54ca.   v17:= 0  @length wide16;
#L0b54ce.   v17:= cmp(v15,v17);
#L0b54d2.   if v17 == 0 then goto L0b54e2;
#L0b54d6.   if v8 >= v5 then goto L0b54e2;
#L0b54da.   v17:= 1  @length wide16;
#L0b54de.   v2:= v2 + v17  @type long;
#L0b54e2.   v6:= 0  @length 4;
#L0b54e4.   v17:= 1  @length 16;
#L0b54e8.   v2:= v2 ^> v17  @type long;
#L0b54ec.   v0:= (long)v14  @type i2l;
#L0b54ee.   v17:= v0  @type wide;
#L0b54f2.   v19:= -9223372036854775808L  @length wide_high16;
#L0b54f6.   v17:= v17 ^& v19  @type long;
#L0b54fa.   v0:= (long)v6  @type i2l;
#L0b54fc.   v19:= v0  @type wide;
#L0b5500.   v21:= 52  @length 16;
#L0b5504.   v19:= v19 ^< v21  @type long;
#L0b5508.   v17:= v17 ^| v19  @type long;
#L0b550c.   v19:= 0.000000L  @length wide;
#L0b5516.   v19:= v19 ^& v2  @type long;
#L0b551a.   v2:= v17 ^| v19  @type long;
#L0b551e.   call temp:=  [|java:lang:Double.longBitsToDouble|](v2, v3) @signature [|Ljava/lang/Double;.longBitsToDouble:(J)D|] @classDescriptor [|java:lang:Double|] @type static;
#L0b5524.   v17:= temp  @type wide;
#L0b5526.   goto L0b526a;

   }
    procedure [|boolean|] [|java:math:BigDecimal.equals|] ([|java:math:BigDecimal|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b553c.   v1:= 1  @length 4;
#L0b553e.   v2:= 0  @length 4;
#L0b5540.   if v7 != v8 then goto L0b5546;
#L0b5544.   return v1;
#L0b5546.   v3:= instanceof @varname v8 @type [|java:math:BigDecimal|];
#L0b554a.   if v3 == 0 then goto L0b5596;
#L0b554e.   v0:= v8  @type object;
#L0b5550.   v0:= ([|java:math:BigDecimal|])v0;
#L0b5554.   v3:= v0.[|java:math:BigDecimal.scale|] ;
#L0b5558.   v4:= v7.[|java:math:BigDecimal.scale|] ;
#L0b555c.   if v3 != v4 then goto L0b557c;
#L0b5560.   v3:= v7.[|java:math:BigDecimal.bitLength|] ;
#L0b5564.   v4:= 64  @length 16;
#L0b5568.   if v3 >= v4 then goto L0b5580;
#L0b556c.   v3:= v0.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5570.   v5:= v7.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5574.   v3:= cmp(v3,v5);
#L0b5578.   if v3 == 0 then goto L0b5544;
#L0b557c.   v1:= v2;
#L0b557e.   goto L0b5544;
#L0b5580.   v3:= v7.[|java:math:BigDecimal.intVal|]   @type object;
#L0b5584.   v4:= v0.[|java:math:BigDecimal.intVal|]   @type object;
#L0b5588.   call temp:=  [|java:math:BigInteger.equals|](v3, v4) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b558e.   v3:= temp;
#L0b5590.   if v3 == 0 then goto L0b557c;
#L0b5594.   goto L0b5544;
#L0b5596.   v1:= v2;
#L0b5598.   goto L0b5544;

   }
    procedure [|float|] [|java:math:BigDecimal.floatValue|] ([|java:math:BigDecimal|] v10 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.floatValue:()F|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0b55ac.   v9:= 0  @length 4;
#L0b55ae.   call temp:=  [|java:math:BigDecimal.signum|](v10) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b55b4.   v3:= temp;
#L0b55b6.   v0:= (float)v3  @type i2f;
#L0b55b8.   v3:= v10.[|java:math:BigDecimal.bitLength|] ;
#L0b55bc.   v3:= (long)v3  @type i2l;
#L0b55be.   v5:= v10.[|java:math:BigDecimal.scale|] ;
#L0b55c2.   v5:= (double)v5  @type i2d;
#L0b55c4.   v7:= 0.301030L  @length wide;
#L0b55ce.   v5:= v5 / v7  @type double;
#L0b55d0.   v5:= (long)v5  @type d2l;
#L0b55d2.   v1:= v3 - v5  @type long;
#L0b55d6.   v3:= -149  @length wide16;
#L0b55da.   v3:= cmp(v1,v3);
#L0b55de.   if v3 < 0 then goto L0b55ea;
#L0b55e2.   v3:= cmpl(v0,v9);
#L0b55e6.   if v3 != 0 then goto L0b55ee;
#L0b55ea.   v0:= v0 * v9  @type float;
#L0b55ec.   return v0;
#L0b55ee.   v3:= 129  @length wide16;
#L0b55f2.   v3:= cmp(v1,v3);
#L0b55f6.   if v3 <= 0 then goto L0b5602;
#L0b55fa.   v3:= 2139095040  @length high16;
#L0b55fe.   v0:= v0 * v3  @type float;
#L0b5600.   goto L0b55ec;
#L0b5602.   call temp:=  [|java:math:BigDecimal.doubleValue|](v10) @signature [|Ljava/math/BigDecimal;.doubleValue:()D|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5608.   v3:= temp  @type wide;
#L0b560a.   v0:= (float)v3  @type d2f;
#L0b560c.   goto L0b55ec;

   }
    procedure [|int|] [|java:math:BigDecimal.hashCode|] ([|java:math:BigDecimal|] v6 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b5620.   v4:= -1  @length wide16;
#L0b5624.   v0:= v6.[|java:math:BigDecimal.hashCode|] ;
#L0b5628.   if v0 == 0 then goto L0b5632;
#L0b562c.   v0:= v6.[|java:math:BigDecimal.hashCode|] ;
#L0b5630.   return v0;
#L0b5632.   v0:= v6.[|java:math:BigDecimal.bitLength|] ;
#L0b5636.   v1:= 64  @length 16;
#L0b563a.   if v0 >= v1 then goto L0b567e;
#L0b563e.   v0:= v6.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5642.   v0:= v0 ^& v4  @type long;
#L0b5644.   v0:= (int)v0  @type l2i;
#L0b5646.   v6.[|java:math:BigDecimal.hashCode|]  := v0;
#L0b564a.   v0:= v6.[|java:math:BigDecimal.hashCode|] ;
#L0b564e.   v0:= v0 * 33;
#L0b5652.   v1:= v6.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5656.   v3:= 32  @length 16;
#L0b565a.   v1:= v1 ^> v3  @type long;
#L0b565c.   v1:= v1 ^& v4  @type long;
#L0b565e.   v1:= (int)v1  @type l2i;
#L0b5660.   v0:= v0 + v1  @type int;
#L0b5662.   v6.[|java:math:BigDecimal.hashCode|]  := v0;
#L0b5666.   v0:= v6.[|java:math:BigDecimal.hashCode|] ;
#L0b566a.   v0:= v0 * 17;
#L0b566e.   v1:= v6.[|java:math:BigDecimal.scale|] ;
#L0b5672.   v0:= v0 + v1  @type int;
#L0b5674.   v6.[|java:math:BigDecimal.hashCode|]  := v0;
#L0b5678.   v0:= v6.[|java:math:BigDecimal.hashCode|] ;
#L0b567c.   goto L0b5630;
#L0b567e.   v0:= v6.[|java:math:BigDecimal.intVal|]   @type object;
#L0b5682.   call temp:=  [|java:math:BigInteger.hashCode|](v0) @signature [|Ljava/math/BigInteger;.hashCode:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5688.   v0:= temp;
#L0b568a.   v0:= v0 * 17;
#L0b568e.   v1:= v6.[|java:math:BigDecimal.scale|] ;
#L0b5692.   v0:= v0 + v1  @type int;
#L0b5694.   v6.[|java:math:BigDecimal.hashCode|]  := v0;
#L0b5698.   v0:= v6.[|java:math:BigDecimal.hashCode|] ;
#L0b569c.   goto L0b5630;

   }
    procedure [|int|] [|java:math:BigDecimal.intValue|] ([|java:math:BigDecimal|] v2 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.intValue:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b56b0.   v0:= v2.[|java:math:BigDecimal.scale|] ;
#L0b56b4.   v1:= -32  @length 16;
#L0b56b8.   if v0 <= v1 then goto L0b56cc;
#L0b56bc.   v0:= v2.[|java:math:BigDecimal.scale|] ;
#L0b56c0.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v2) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b56c6.   v1:= temp;
#L0b56c8.   if v0 <= v1 then goto L0b56d0;
#L0b56cc.   v0:= 0  @length 4;
#L0b56ce.   return v0;
#L0b56d0.   call temp:=  [|java:math:BigDecimal.toBigInteger|](v2) @signature [|Ljava/math/BigDecimal;.toBigInteger:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b56d6.   v0:= temp  @type object;
#L0b56d8.   call temp:=  [|java:math:BigInteger.intValue|](v0) @signature [|Ljava/math/BigInteger;.intValue:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b56de.   v0:= temp;
#L0b56e0.   goto L0b56ce;

   }
    procedure [|int|] [|java:math:BigDecimal.intValueExact|] ([|java:math:BigDecimal|] v2 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.intValueExact:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b56f4.   v0:= 32  @length 16;
#L0b56f8.   call temp:=  [|java:math:BigDecimal.valueExact|](v2, v0) @signature [|Ljava/math/BigDecimal;.valueExact:(I)J|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b56fe.   v0:= temp  @type wide;
#L0b5700.   v0:= (int)v0  @type l2i;
#L0b5702.   return v0;

   }
    procedure [|long|] [|java:math:BigDecimal.longValue|] ([|java:math:BigDecimal|] v2 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.longValue:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b5714.   v0:= v2.[|java:math:BigDecimal.scale|] ;
#L0b5718.   v1:= -64  @length 16;
#L0b571c.   if v0 <= v1 then goto L0b5730;
#L0b5720.   v0:= v2.[|java:math:BigDecimal.scale|] ;
#L0b5724.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v2) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b572a.   v1:= temp;
#L0b572c.   if v0 <= v1 then goto L0b5736;
#L0b5730.   v0:= 0  @length wide16;
#L0b5734.   return v0  @type wide;
#L0b5736.   call temp:=  [|java:math:BigDecimal.toBigInteger|](v2) @signature [|Ljava/math/BigDecimal;.toBigInteger:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b573c.   v0:= temp  @type object;
#L0b573e.   call temp:=  [|java:math:BigInteger.longValue|](v0) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5744.   v0:= temp  @type wide;
#L0b5746.   goto L0b5734;

   }
    procedure [|long|] [|java:math:BigDecimal.longValueExact|] ([|java:math:BigDecimal|] v2 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.longValueExact:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b5758.   v0:= 64  @length 16;
#L0b575c.   call temp:=  [|java:math:BigDecimal.valueExact|](v2, v0) @signature [|Ljava/math/BigDecimal;.valueExact:(I)J|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5762.   v0:= temp  @type wide;
#L0b5764.   return v0  @type wide;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.max|] ([|java:math:BigDecimal|] v1 @type (this), [|java:math:BigDecimal|] v2 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.max:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b5778.   call temp:=  [|java:math:BigDecimal.compareTo|](v1, v2) @signature [|Ljava/math/BigDecimal;.compareTo:(Ljava/math/BigDecimal;)I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b577e.   v0:= temp;
#L0b5780.   if v0 < 0 then goto L0b5786;
#L0b5784.   return v1  @type object;
#L0b5786.   v1:= v2  @type object;
#L0b5788.   goto L0b5784;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.min|] ([|java:math:BigDecimal|] v1 @type (this), [|java:math:BigDecimal|] v2 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.min:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b579c.   call temp:=  [|java:math:BigDecimal.compareTo|](v1, v2) @signature [|Ljava/math/BigDecimal;.compareTo:(Ljava/math/BigDecimal;)I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b57a2.   v0:= temp;
#L0b57a4.   if v0 > 0 then goto L0b57aa;
#L0b57a8.   return v1  @type object;
#L0b57aa.   v1:= v2  @type object;
#L0b57ac.   goto L0b57a8;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.movePointLeft|] ([|java:math:BigDecimal|] v4 @type (this), [|int|] v5) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.movePointLeft:(I)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b57c0.   v0:= v4.[|java:math:BigDecimal.scale|] ;
#L0b57c4.   v0:= (long)v0  @type i2l;
#L0b57c6.   v2:= (long)v5  @type i2l;
#L0b57c8.   v0:= v0 + v2  @type long;
#L0b57ca.   call temp:=  [|java:math:BigDecimal.movePoint|](v4, v0, v1) @signature [|Ljava/math/BigDecimal;.movePoint:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b57d0.   v0:= temp  @type object;
#L0b57d2.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.movePointRight|] ([|java:math:BigDecimal|] v4 @type (this), [|int|] v5) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.movePointRight:(I)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b57e4.   v0:= v4.[|java:math:BigDecimal.scale|] ;
#L0b57e8.   v0:= (long)v0  @type i2l;
#L0b57ea.   v2:= (long)v5  @type i2l;
#L0b57ec.   v0:= v0 - v2  @type long;
#L0b57ee.   call temp:=  [|java:math:BigDecimal.movePoint|](v4, v0, v1) @signature [|Ljava/math/BigDecimal;.movePoint:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b57f4.   v0:= temp  @type object;
#L0b57f6.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.multiply|] ([|java:math:BigDecimal|] v6 @type (this), [|java:math:BigDecimal|] v7 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b5808.   v2:= v6.[|java:math:BigDecimal.scale|] ;
#L0b580c.   v2:= (long)v2  @type i2l;
#L0b580e.   v4:= v7.[|java:math:BigDecimal.scale|] ;
#L0b5812.   v4:= (long)v4  @type i2l;
#L0b5814.   v0:= v2 + v4  @type long;
#L0b5818.   call temp:=  [|java:math:BigDecimal.isZero|](v6) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b581e.   v2:= temp;
#L0b5820.   if v2 != 0 then goto L0b5830;
#L0b5824.   call temp:=  [|java:math:BigDecimal.isZero|](v7) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b582a.   v2:= temp;
#L0b582c.   if v2 == 0 then goto L0b583a;
#L0b5830.   call temp:=  [|java:math:BigDecimal.zeroScaledBy|](v0, v1) @signature [|Ljava/math/BigDecimal;.zeroScaledBy:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5836.   v2:= temp  @type object;
#L0b5838.   return v2  @type object;
#L0b583a.   v2:= v6.[|java:math:BigDecimal.bitLength|] ;
#L0b583e.   v3:= v7.[|java:math:BigDecimal.bitLength|] ;
#L0b5842.   v2:= v2 + v3  @type int;
#L0b5844.   v3:= 64  @length 16;
#L0b5848.   if v2 >= v3 then goto L0b5868;
#L0b584c.   v2:= v6.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5850.   v4:= v7.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5854.   v2:= v2 * v4  @type long;
#L0b5856.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v0, v1) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b585c.   v4:= temp;
#L0b585e.   call temp:=  [|java:math:BigDecimal.valueOf|](v2, v3, v4) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5864.   v2:= temp  @type object;
#L0b5866.   goto L0b5838;
#L0b5868.   v2:= new [|java:math:BigDecimal|];
#L0b586c.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v6) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5872.   v3:= temp  @type object;
#L0b5874.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v7) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b587a.   v4:= temp  @type object;
#L0b587c.   call temp:=  [|java:math:BigInteger.multiply|](v3, v4) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5882.   v3:= temp  @type object;
#L0b5884.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v0, v1) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b588a.   v4:= temp;
#L0b588c.   call temp:=  [|java:math:BigDecimal.<init>|](v2, v3, v4) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5892.   goto L0b5838;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.multiply|] ([|java:math:BigDecimal|] v1 @type (this), [|java:math:BigDecimal|] v2 @type (object), [|java:math:MathContext|] v3 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.multiply:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b58a4.   call temp:=  [|java:math:BigDecimal.multiply|](v1, v2) @signature [|Ljava/math/BigDecimal;.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b58aa.   v0:= temp  @type object;
#L0b58ac.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v3) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b58b2.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.negate|] ([|java:math:BigDecimal|] v4 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.negate:()Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b58c4.   v1:= 63  @length 16;
#L0b58c8.   v0:= v4.[|java:math:BigDecimal.bitLength|] ;
#L0b58cc.   if v0 < v1 then goto L0b58e8;
#L0b58d0.   v0:= v4.[|java:math:BigDecimal.bitLength|] ;
#L0b58d4.   if v0 != v1 then goto L0b58fc;
#L0b58d8.   v0:= v4.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b58dc.   v2:= -9223372036854775808L  @length wide_high16;
#L0b58e0.   v0:= cmp(v0,v2);
#L0b58e4.   if v0 == 0 then goto L0b58fc;
#L0b58e8.   v0:= v4.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b58ec.   v0:= -v0  @type long;
#L0b58ee.   v2:= v4.[|java:math:BigDecimal.scale|] ;
#L0b58f2.   call temp:=  [|java:math:BigDecimal.valueOf|](v0, v1, v2) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b58f8.   v0:= temp  @type object;
#L0b58fa.   return v0  @type object;
#L0b58fc.   v0:= new [|java:math:BigDecimal|];
#L0b5900.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v4) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5906.   v1:= temp  @type object;
#L0b5908.   call temp:=  [|java:math:BigInteger.negate|](v1) @signature [|Ljava/math/BigInteger;.negate:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b590e.   v1:= temp  @type object;
#L0b5910.   v2:= v4.[|java:math:BigDecimal.scale|] ;
#L0b5914.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b591a.   goto L0b58fa;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.negate|] ([|java:math:BigDecimal|] v1 @type (this), [|java:math:MathContext|] v2 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.negate:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b592c.   call temp:=  [|java:math:BigDecimal.negate|](v1) @signature [|Ljava/math/BigDecimal;.negate:()Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5932.   v0:= temp  @type object;
#L0b5934.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v2) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b593a.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.plus|] ([|java:math:BigDecimal|] v0 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.plus:()Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
      
#L0b594c.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.plus|] ([|java:math:BigDecimal|] v1 @type (this), [|java:math:MathContext|] v2 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.plus:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b5960.   call temp:=  [|java:math:BigDecimal.round|](v1, v2) @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5966.   v0:= temp  @type object;
#L0b5968.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.pow|] ([|java:math:BigDecimal|] v6 @type (this), [|int|] v7) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.pow:(I)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b597c.   if v7 != 0 then goto L0b5986;
#L0b5980.   v2:= @@[|java:math:BigDecimal.ONE|]   @type object;
#L0b5984.   return v2  @type object;
#L0b5986.   if v7 < 0 then goto L0b5994;
#L0b598a.    v2:= 0.004724;
#L0b5990.   if v7 <= v2 then goto L0b59a4;
#L0b5994.   v2:= new [|java:lang:ArithmeticException|];
#L0b5998.   v3:= "Invalid operation" @type (object, string);
#L0b599c.   call temp:=  [|java:lang:ArithmeticException.<init>|](v2, v3) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b59a2.   throw v2;
#L0b59a4.   v2:= v6.[|java:math:BigDecimal.scale|] ;
#L0b59a8.   v2:= (long)v2  @type i2l;
#L0b59aa.   v4:= (long)v7  @type i2l;
#L0b59ac.   v0:= v2 * v4  @type long;
#L0b59b0.   call temp:=  [|java:math:BigDecimal.isZero|](v6) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b59b6.   v2:= temp;
#L0b59b8.   if v2 == 0 then goto L0b59c6;
#L0b59bc.   call temp:=  [|java:math:BigDecimal.zeroScaledBy|](v0, v1) @signature [|Ljava/math/BigDecimal;.zeroScaledBy:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b59c2.   v2:= temp  @type object;
#L0b59c4.   goto L0b5984;
#L0b59c6.   v2:= new [|java:math:BigDecimal|];
#L0b59ca.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v6) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b59d0.   v3:= temp  @type object;
#L0b59d2.   call temp:=  [|java:math:BigInteger.pow|](v3, v7) @signature [|Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b59d8.   v3:= temp  @type object;
#L0b59da.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v0, v1) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b59e0.   v4:= temp;
#L0b59e2.   call temp:=  [|java:math:BigDecimal.<init>|](v2, v3, v4) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b59e8.   goto L0b5984;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.pow|] ([|java:math:BigDecimal|] v8 @type (this), [|int|] v9, [|java:math:MathContext|] v10 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.pow:(ILjava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b59fc.   call temp:=  [|java:lang:Math.abs|](v9) @signature [|Ljava/lang/Math;.abs:(I)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b5a02.   v2:= temp;
#L0b5a04.   call temp:=  [|java:math:MathContext.getPrecision|](v10) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b5a0a.   v3:= temp;
#L0b5a0c.   v6:= (double)v2  @type i2d;
#L0b5a0e.   call temp:=  [|java:lang:Math.log10|](v6, v7) @signature [|Ljava/lang/Math;.log10:(D)D|] @classDescriptor [|java:lang:Math|] @type static;
#L0b5a14.   v6:= temp  @type wide;
#L0b5a16.   v6:= (int)v6  @type d2i;
#L0b5a18.   v1:= v6 + 1;
#L0b5a1c.   v4:= v10  @type object;
#L0b5a1e.   if v9 == 0 then goto L0b5a32;
#L0b5a22.   call temp:=  [|java:math:BigDecimal.isZero|](v8) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5a28.   v6:= temp;
#L0b5a2a.   if v6 == 0 then goto L0b5a3c;
#L0b5a2e.   if v9 <= 0 then goto L0b5a3c;
#L0b5a32.   call temp:=  [|java:math:BigDecimal.pow|](v8, v9) @signature [|Ljava/math/BigDecimal;.pow:(I)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5a38.   v0:= temp  @type object;
#L0b5a3a.   return v0  @type object;
#L0b5a3c.    v6:= 0.004724;
#L0b5a42.   if v2 > v6 then goto L0b5a56;
#L0b5a46.   if v3 != 0 then goto L0b5a4e;
#L0b5a4a.   if v9 < 0 then goto L0b5a56;
#L0b5a4e.   if v3 <= 0 then goto L0b5a66;
#L0b5a52.   if v1 <= v3 then goto L0b5a66;
#L0b5a56.   v6:= new [|java:lang:ArithmeticException|];
#L0b5a5a.   v7:= "Invalid operation" @type (object, string);
#L0b5a5e.   call temp:=  [|java:lang:ArithmeticException.<init>|](v6, v7) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b5a64.   throw v6;
#L0b5a66.   if v3 <= 0 then goto L0b5a84;
#L0b5a6a.   v4:= new [|java:math:MathContext|];
#L0b5a6e.   v6:= v3 + v1  @type int;
#L0b5a72.   v6:= v6 + 1;
#L0b5a76.   call temp:=  [|java:math:MathContext.getRoundingMode|](v10) @signature [|Ljava/math/MathContext;.getRoundingMode:()Ljava/math/RoundingMode;|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b5a7c.   v7:= temp  @type object;
#L0b5a7e.   call temp:=  [|java:math:MathContext.<init>|](v4, v6, v7) @signature [|Ljava/math/MathContext;.<init>:(ILjava/math/RoundingMode;)V|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0b5a84.   call temp:=  [|java:math:BigDecimal.round|](v8, v4) @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5a8a.   v0:= temp  @type object;
#L0b5a8c.   call temp:=  [|java:lang:Integer.highestOneBit|](v2) @signature [|Ljava/lang/Integer;.highestOneBit:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b5a92.   v6:= temp;
#L0b5a94.   v5:= v6 ^> 1;
#L0b5a98.   if v5 <= 0 then goto L0b5aba;
#L0b5a9c.   call temp:=  [|java:math:BigDecimal.multiply|](v0, v0, v4) @signature [|Ljava/math/BigDecimal;.multiply:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5aa2.   v0:= temp  @type object;
#L0b5aa4.   v6:= v2 ^& v5  @type int;
#L0b5aa8.   if v6 != v5 then goto L0b5ab4;
#L0b5aac.   call temp:=  [|java:math:BigDecimal.multiply|](v0, v8, v4) @signature [|Ljava/math/BigDecimal;.multiply:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5ab2.   v0:= temp  @type object;
#L0b5ab4.   v5:= v5 ^> 1;
#L0b5ab8.   goto L0b5a98;
#L0b5aba.   if v9 >= 0 then goto L0b5aca;
#L0b5abe.   v6:= @@[|java:math:BigDecimal.ONE|]   @type object;
#L0b5ac2.   call temp:=  [|java:math:BigDecimal.divide|](v6, v0, v4) @signature [|Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5ac8.   v0:= temp  @type object;
#L0b5aca.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v10) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5ad0.   goto L0b5a3a;

   }
    procedure [|int|] [|java:math:BigDecimal.precision|] ([|java:math:BigDecimal|] v6 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.precision:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b5ae4.   v2:= v6.[|java:math:BigDecimal.precision|] ;
#L0b5ae8.   if v2 <= 0 then goto L0b5af2;
#L0b5aec.   v2:= v6.[|java:math:BigDecimal.precision|] ;
#L0b5af0.   return v2;
#L0b5af2.   v0:= v6.[|java:math:BigDecimal.bitLength|] ;
#L0b5af6.   if v0 != 0 then goto L0b5b06;
#L0b5afa.   v2:= 1  @length 4;
#L0b5afc.   v6.[|java:math:BigDecimal.precision|]  := v2;
#L0b5b00.   v2:= v6.[|java:math:BigDecimal.precision|] ;
#L0b5b04.   goto L0b5af0;
#L0b5b06.   v2:= 64  @length 16;
#L0b5b0a.   if v0 >= v2 then goto L0b5b20;
#L0b5b0e.   v2:= v6.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5b12.   call temp:=  [|java:math:BigDecimal.decimalDigitsInLong|](v6, v2, v3) @signature [|Ljava/math/BigDecimal;.decimalDigitsInLong:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5b18.   v2:= temp;
#L0b5b1a.   v6.[|java:math:BigDecimal.precision|]  := v2;
#L0b5b1e.   goto L0b5b00;
#L0b5b20.   v2:= v0 + -1;
#L0b5b24.   v2:= (double)v2  @type i2d;
#L0b5b26.   v4:= 0.301030L  @length wide;
#L0b5b30.   v2:= v2 * v4  @type double;
#L0b5b32.   v2:= (int)v2  @type d2i;
#L0b5b34.   v1:= v2 + 1;
#L0b5b38.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v6) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5b3e.   v2:= temp  @type object;
#L0b5b40.   v3:= (long)v1  @type i2l;
#L0b5b42.   call temp:=  [|java:math:Multiplication.powerOf10|](v3, v4) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b5b48.   v3:= temp  @type object;
#L0b5b4a.   call temp:=  [|java:math:BigInteger.divide|](v2, v3) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5b50.   v2:= temp  @type object;
#L0b5b52.   call temp:=  [|java:math:BigInteger.signum|](v2) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5b58.   v2:= temp;
#L0b5b5a.   if v2 == 0 then goto L0b5b62;
#L0b5b5e.   v1:= v1 + 1;
#L0b5b62.   v6.[|java:math:BigDecimal.precision|]  := v1;
#L0b5b66.   goto L0b5b00;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.remainder|] ([|java:math:BigDecimal|] v2 @type (this), [|java:math:BigDecimal|] v3 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.remainder:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b5b78.   call temp:=  [|java:math:BigDecimal.divideAndRemainder|](v2, v3) @signature [|Ljava/math/BigDecimal;.divideAndRemainder:(Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5b7e.   v0:= temp  @type object;
#L0b5b80.   v1:= 1  @length 4;
#L0b5b82.   v0:= v0[v1]  @type object;
#L0b5b86.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.remainder|] ([|java:math:BigDecimal|] v2 @type (this), [|java:math:BigDecimal|] v3 @type (object), [|java:math:MathContext|] v4 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.remainder:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b5b98.   call temp:=  [|java:math:BigDecimal.divideAndRemainder|](v2, v3, v4) @signature [|Ljava/math/BigDecimal;.divideAndRemainder:(Ljava/math/BigDecimal;Ljava/math/MathContext;)[Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5b9e.   v0:= temp  @type object;
#L0b5ba0.   v1:= 1  @length 4;
#L0b5ba2.   v0:= v0[v1]  @type object;
#L0b5ba6.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.round|] ([|java:math:BigDecimal|] v3 @type (this), [|java:math:MathContext|] v4 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b5bb8.   v0:= new [|java:math:BigDecimal|];
#L0b5bbc.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v3) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5bc2.   v1:= temp  @type object;
#L0b5bc4.   v2:= v3.[|java:math:BigDecimal.scale|] ;
#L0b5bc8.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5bce.   call temp:=  [|java:math:BigDecimal.inplaceRound|](v0, v4) @signature [|Ljava/math/BigDecimal;.inplaceRound:(Ljava/math/MathContext;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5bd4.   return v0  @type object;

   }
    procedure [|int|] [|java:math:BigDecimal.scale|] ([|java:math:BigDecimal|] v1 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.scale:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b5be8.   v0:= v1.[|java:math:BigDecimal.scale|] ;
#L0b5bec.   return v0;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.scaleByPowerOfTen|] ([|java:math:BigDecimal|] v6 @type (this), [|int|] v7) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.scaleByPowerOfTen:(I)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b5c00.   v2:= v6.[|java:math:BigDecimal.scale|] ;
#L0b5c04.   v2:= (long)v2  @type i2l;
#L0b5c06.   v4:= (long)v7  @type i2l;
#L0b5c08.   v0:= v2 - v4  @type long;
#L0b5c0c.   v2:= v6.[|java:math:BigDecimal.bitLength|] ;
#L0b5c10.   v3:= 64  @length 16;
#L0b5c14.   if v2 >= v3 then goto L0b5c48;
#L0b5c18.   v2:= v6.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5c1c.   v4:= 0  @length wide16;
#L0b5c20.   v2:= cmp(v2,v4);
#L0b5c24.   if v2 != 0 then goto L0b5c32;
#L0b5c28.   call temp:=  [|java:math:BigDecimal.zeroScaledBy|](v0, v1) @signature [|Ljava/math/BigDecimal;.zeroScaledBy:(J)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5c2e.   v2:= temp  @type object;
#L0b5c30.   return v2  @type object;
#L0b5c32.   v2:= v6.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5c36.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v0, v1) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5c3c.   v4:= temp;
#L0b5c3e.   call temp:=  [|java:math:BigDecimal.valueOf|](v2, v3, v4) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5c44.   v2:= temp  @type object;
#L0b5c46.   goto L0b5c30;
#L0b5c48.   v2:= new [|java:math:BigDecimal|];
#L0b5c4c.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v6) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5c52.   v3:= temp  @type object;
#L0b5c54.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v0, v1) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5c5a.   v4:= temp;
#L0b5c5c.   call temp:=  [|java:math:BigDecimal.<init>|](v2, v3, v4) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5c62.   goto L0b5c30;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.setScale|] ([|java:math:BigDecimal|] v1 @type (this), [|int|] v2) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.setScale:(I)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b5c74.   v0:= @@[|java:math:RoundingMode.UNNECESSARY|]   @type object;
#L0b5c78.   call temp:=  [|java:math:BigDecimal.setScale|](v1, v2, v0) @signature [|Ljava/math/BigDecimal;.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5c7e.   v0:= temp  @type object;
#L0b5c80.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.setScale|] ([|java:math:BigDecimal|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.setScale:(II)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b5c94.   call temp:=  [|java:math:RoundingMode.valueOf|](v3) @signature [|Ljava/math/RoundingMode;.valueOf:(I)Ljava/math/RoundingMode;|] @classDescriptor [|java:math:RoundingMode|] @type static;
#L0b5c9a.   v0:= temp  @type object;
#L0b5c9c.   call temp:=  [|java:math:BigDecimal.setScale|](v1, v2, v0) @signature [|Ljava/math/BigDecimal;.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5ca2.   v0:= temp  @type object;
#L0b5ca4.   return v0  @type object;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.setScale|] ([|java:math:BigDecimal|] v10 @type (this), [|int|] v11, [|java:math:RoundingMode|] v12 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0b5cb8.   v8:= 0  @length wide16;
#L0b5cbc.   v4:= 64  @length 16;
#L0b5cc0.   if v12 != 0 then goto L0b5cd4;
#L0b5cc4.   v0:= new [|java:lang:NullPointerException|];
#L0b5cc8.   v1:= "roundingMode == null" @type (object, string);
#L0b5ccc.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b5cd2.   throw v0;
#L0b5cd4.   v0:= (long)v11  @type i2l;
#L0b5cd6.   v2:= v10.[|java:math:BigDecimal.scale|] ;
#L0b5cda.   v2:= (long)v2  @type i2l;
#L0b5cdc.   v6:= v0 - v2  @type long;
#L0b5ce0.   v0:= cmp(v6,v8);
#L0b5ce4.   if v0 != 0 then goto L0b5cea;
#L0b5ce8.   return v10  @type object;
#L0b5cea.   v0:= cmp(v6,v8);
#L0b5cee.   if v0 <= 0 then goto L0b5d52;
#L0b5cf2.   v0:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b5cf6.   v0:= v0.length;
#L0b5cf8.   v0:= (long)v0  @type i2l;
#L0b5cfa.   v0:= cmp(v6,v0);
#L0b5cfe.   if v0 >= 0 then goto L0b5d30;
#L0b5d02.   v0:= v10.[|java:math:BigDecimal.bitLength|] ;
#L0b5d06.   v1:= @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]   @type object;
#L0b5d0a.   v2:= (int)v6  @type l2i;
#L0b5d0c.   v1:= v1[v2];
#L0b5d10.   v0:= v0 + v1  @type int;
#L0b5d12.   if v0 >= v4 then goto L0b5d30;
#L0b5d16.   v0:= v10.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5d1a.   v2:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b5d1e.   v3:= (int)v6  @type l2i;
#L0b5d20.   v2:= v2[v3]  @wide;
#L0b5d24.   v0:= v0 * v2  @type long;
#L0b5d26.   call temp:=  [|java:math:BigDecimal.valueOf|](v0, v1, v11) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5d2c.   v10:= temp  @type object;
#L0b5d2e.   goto L0b5ce8;
#L0b5d30.   v0:= new [|java:math:BigDecimal|];
#L0b5d34.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v10) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5d3a.   v1:= temp  @type object;
#L0b5d3c.   v2:= (int)v6  @type l2i;
#L0b5d3e.   v2:= (long)v2  @type i2l;
#L0b5d40.   call temp:=  [|java:math:Multiplication.multiplyByTenPow|](v1, v2, v3) @signature [|Ljava/math/Multiplication;.multiplyByTenPow:(Ljava/math/BigInteger;J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b5d46.   v1:= temp  @type object;
#L0b5d48.   call temp:=  [|java:math:BigDecimal.<init>|](v0, v1, v11) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5d4e.   v10:= v0  @type object;
#L0b5d50.   goto L0b5ce8;
#L0b5d52.   v0:= v10.[|java:math:BigDecimal.bitLength|] ;
#L0b5d56.   if v0 >= v4 then goto L0b5d8a;
#L0b5d5a.   v0:= -v6  @type long;
#L0b5d5c.   v2:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b5d60.   v2:= v2.length;
#L0b5d62.   v2:= (long)v2  @type i2l;
#L0b5d64.   v0:= cmp(v0,v2);
#L0b5d68.   if v0 >= 0 then goto L0b5d8a;
#L0b5d6c.   v0:= v10.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5d70.   v2:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b5d74.   v3:= -v6  @type long;
#L0b5d76.   v3:= (int)v3  @type l2i;
#L0b5d78.   v2:= v2[v3]  @wide;
#L0b5d7c.   v4:= v11;
#L0b5d7e.   v5:= v12  @type object;
#L0b5d80.   call temp:=  [|java:math:BigDecimal.dividePrimitiveLongs|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/math/BigDecimal;.dividePrimitiveLongs:(JJILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5d86.   v10:= temp  @type object;
#L0b5d88.   goto L0b5ce8;
#L0b5d8a.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v10) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5d90.   v0:= temp  @type object;
#L0b5d92.   v1:= -v6  @type long;
#L0b5d94.   call temp:=  [|java:math:Multiplication.powerOf10|](v1, v2) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b5d9a.   v1:= temp  @type object;
#L0b5d9c.   call temp:=  [|java:math:BigDecimal.divideBigIntegers|](v0, v1, v11, v12) @signature [|Ljava/math/BigDecimal;.divideBigIntegers:(Ljava/math/BigInteger;Ljava/math/BigInteger;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5da2.   v10:= temp  @type object;
#L0b5da4.   goto L0b5ce8;

   }
    procedure [|short|] [|java:math:BigDecimal.shortValueExact|] ([|java:math:BigDecimal|] v2 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.shortValueExact:()S|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b5db8.   v0:= 16  @length 16;
#L0b5dbc.   call temp:=  [|java:math:BigDecimal.valueExact|](v2, v0) @signature [|Ljava/math/BigDecimal;.valueExact:(I)J|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5dc2.   v0:= temp  @type wide;
#L0b5dc4.   v0:= (int)v0  @type l2i;
#L0b5dc6.   v0:= (short)v0  @type i2s;
#L0b5dc8.   return v0;

   }
    procedure [|int|] [|java:math:BigDecimal.signum|] ([|java:math:BigDecimal|] v2 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.signum:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b5ddc.   v0:= v2.[|java:math:BigDecimal.bitLength|] ;
#L0b5de0.   v1:= 64  @length 16;
#L0b5de4.   if v0 >= v1 then goto L0b5df6;
#L0b5de8.   v0:= v2.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5dec.   call temp:=  [|java:lang:Long.signum|](v0, v1) @signature [|Ljava/lang/Long;.signum:(J)I|] @classDescriptor [|java:lang:Long|] @type static;
#L0b5df2.   v0:= temp;
#L0b5df4.   return v0;
#L0b5df6.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v2) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5dfc.   v0:= temp  @type object;
#L0b5dfe.   call temp:=  [|java:math:BigInteger.signum|](v0) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5e04.   v0:= temp;
#L0b5e06.   goto L0b5df4;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.stripTrailingZeros|] ([|java:math:BigDecimal|] v10 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.stripTrailingZeros:()Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0b5e18.   v9:= 1  @length 4;
#L0b5e1a.   v8:= 0  @length 4;
#L0b5e1c.   v0:= 1  @length 4;
#L0b5e1e.   v6:= @@[|java:math:BigDecimal.TEN_POW|]   @type object;
#L0b5e22.   v6:= v6.length;
#L0b5e24.   v1:= v6 + -1;
#L0b5e28.   v6:= v10.[|java:math:BigDecimal.scale|] ;
#L0b5e2c.   v2:= (long)v6  @type i2l;
#L0b5e2e.   call temp:=  [|java:math:BigDecimal.isZero|](v10) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5e34.   v6:= temp;
#L0b5e36.   if v6 == 0 then goto L0b5e3c;
#L0b5e3a.   return v10  @type object;
#L0b5e3c.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v10) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5e42.   v5:= temp  @type object;
#L0b5e44.   call temp:=  [|java:math:BigInteger.testBit|](v5, v8) @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5e4a.   v6:= temp;
#L0b5e4c.   if v6 != 0 then goto L0b5e86;
#L0b5e50.   v6:= @@[|java:math:BigDecimal.TEN_POW|]   @type object;
#L0b5e54.   v6:= v6[v0]  @type object;
#L0b5e58.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v5, v6) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5e5e.   v4:= temp  @type object;
#L0b5e60.   v6:= v4[v9]  @type object;
#L0b5e64.   call temp:=  [|java:math:BigInteger.signum|](v6) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5e6a.   v6:= temp;
#L0b5e6c.   if v6 != 0 then goto L0b5e82;
#L0b5e70.   v6:= (long)v0  @type i2l;
#L0b5e72.   v2:= v2 - v6  @type long;
#L0b5e74.   if v0 >= v1 then goto L0b5e7c;
#L0b5e78.   v0:= v0 + 1;
#L0b5e7c.   v5:= v4[v8]  @type object;
#L0b5e80.   goto L0b5e44;
#L0b5e82.   if v0 != v9 then goto L0b5e9a;
#L0b5e86.   v10:= new [|java:math:BigDecimal|];
#L0b5e8a.   call temp:=  [|java:math:BigDecimal.safeLongToInt|](v2, v3) @signature [|Ljava/math/BigDecimal;.safeLongToInt:(J)I|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5e90.   v6:= temp;
#L0b5e92.   call temp:=  [|java:math:BigDecimal.<init>|](v10, v5, v6) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5e98.   goto L0b5e3a;
#L0b5e9a.   v0:= 1  @length 4;
#L0b5e9c.   goto L0b5e44;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.subtract|] ([|java:math:BigDecimal|] v7 @type (this), [|java:math:BigDecimal|] v8 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b5eb0.   v4:= 64  @length 16;
#L0b5eb4.   v1:= v7.[|java:math:BigDecimal.scale|] ;
#L0b5eb8.   v2:= v8.[|java:math:BigDecimal.scale|] ;
#L0b5ebc.   v0:= v1 - v2  @type int;
#L0b5ec0.   call temp:=  [|java:math:BigDecimal.isZero|](v7) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5ec6.   v1:= temp;
#L0b5ec8.   if v1 == 0 then goto L0b5f1a;
#L0b5ecc.   if v0 > 0 then goto L0b5eda;
#L0b5ed0.   call temp:=  [|java:math:BigDecimal.negate|](v8) @signature [|Ljava/math/BigDecimal;.negate:()Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b5ed6.   v7:= temp  @type object;
#L0b5ed8.   return v7  @type object;
#L0b5eda.   call temp:=  [|java:math:BigDecimal.isZero|](v8) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5ee0.   v1:= temp;
#L0b5ee2.   if v1 != 0 then goto L0b5ed8;
#L0b5ee6.   if v0 != 0 then goto L0b5f56;
#L0b5eea.   v1:= v7.[|java:math:BigDecimal.bitLength|] ;
#L0b5eee.   v2:= v8.[|java:math:BigDecimal.bitLength|] ;
#L0b5ef2.   call temp:=  [|java:lang:Math.max|](v1, v2) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b5ef8.   v1:= temp;
#L0b5efa.   v1:= v1 + 1;
#L0b5efe.   if v1 >= v4 then goto L0b5f2c;
#L0b5f02.   v1:= v7.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5f06.   v3:= v8.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5f0a.   v1:= v1 - v3  @type long;
#L0b5f0c.   v3:= v7.[|java:math:BigDecimal.scale|] ;
#L0b5f10.   call temp:=  [|java:math:BigDecimal.valueOf|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5f16.   v7:= temp  @type object;
#L0b5f18.   goto L0b5ed8;
#L0b5f1a.   call temp:=  [|java:math:BigDecimal.isZero|](v8) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5f20.   v1:= temp;
#L0b5f22.   if v1 == 0 then goto L0b5ee6;
#L0b5f26.   if v0 < 0 then goto L0b5ee6;
#L0b5f2a.   goto L0b5ed8;
#L0b5f2c.   v1:= new [|java:math:BigDecimal|];
#L0b5f30.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v7) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5f36.   v2:= temp  @type object;
#L0b5f38.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v8) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5f3e.   v3:= temp  @type object;
#L0b5f40.   call temp:=  [|java:math:BigInteger.subtract|](v2, v3) @signature [|Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5f46.   v2:= temp  @type object;
#L0b5f48.   v3:= v7.[|java:math:BigDecimal.scale|] ;
#L0b5f4c.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5f52.   v7:= v1  @type object;
#L0b5f54.   goto L0b5ed8;
#L0b5f56.   if v0 <= 0 then goto L0b5fde;
#L0b5f5a.   v1:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b5f5e.   v1:= v1.length;
#L0b5f60.   if v0 >= v1 then goto L0b5fa8;
#L0b5f64.   v1:= v7.[|java:math:BigDecimal.bitLength|] ;
#L0b5f68.   v2:= v8.[|java:math:BigDecimal.bitLength|] ;
#L0b5f6c.   v3:= @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]   @type object;
#L0b5f70.   v3:= v3[v0];
#L0b5f74.   v2:= v2 + v3  @type int;
#L0b5f76.   call temp:=  [|java:lang:Math.max|](v1, v2) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b5f7c.   v1:= temp;
#L0b5f7e.   v1:= v1 + 1;
#L0b5f82.   if v1 >= v4 then goto L0b5fa8;
#L0b5f86.   v1:= v7.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5f8a.   v3:= v8.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b5f8e.   v5:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b5f92.   v5:= v5[v0]  @wide;
#L0b5f96.   v3:= v3 * v5  @type long;
#L0b5f98.   v1:= v1 - v3  @type long;
#L0b5f9a.   v3:= v7.[|java:math:BigDecimal.scale|] ;
#L0b5f9e.   call temp:=  [|java:math:BigDecimal.valueOf|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b5fa4.   v7:= temp  @type object;
#L0b5fa6.   goto L0b5ed8;
#L0b5fa8.   v1:= new [|java:math:BigDecimal|];
#L0b5fac.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v7) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5fb2.   v2:= temp  @type object;
#L0b5fb4.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v8) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5fba.   v3:= temp  @type object;
#L0b5fbc.   v4:= (long)v0  @type i2l;
#L0b5fbe.   call temp:=  [|java:math:Multiplication.multiplyByTenPow|](v3, v4, v5) @signature [|Ljava/math/Multiplication;.multiplyByTenPow:(Ljava/math/BigInteger;J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b5fc4.   v3:= temp  @type object;
#L0b5fc6.   call temp:=  [|java:math:BigInteger.subtract|](v2, v3) @signature [|Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b5fcc.   v2:= temp  @type object;
#L0b5fce.   v3:= v7.[|java:math:BigDecimal.scale|] ;
#L0b5fd2.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b5fd8.   v7:= v1  @type object;
#L0b5fda.   goto L0b5ed8;
#L0b5fde.   v0:= -v0  @type int;
#L0b5fe0.   v1:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b5fe4.   v1:= v1.length;
#L0b5fe6.   if v0 >= v1 then goto L0b6030;
#L0b5fea.   v1:= v7.[|java:math:BigDecimal.bitLength|] ;
#L0b5fee.   v2:= @@[|java:math:BigDecimal.LONG_POWERS_OF_TEN_BIT_LENGTH|]   @type object;
#L0b5ff2.   v2:= v2[v0];
#L0b5ff6.   v1:= v1 + v2  @type int;
#L0b5ff8.   v2:= v8.[|java:math:BigDecimal.bitLength|] ;
#L0b5ffc.   call temp:=  [|java:lang:Math.max|](v1, v2) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b6002.   v1:= temp;
#L0b6004.   v1:= v1 + 1;
#L0b6008.   if v1 >= v4 then goto L0b6030;
#L0b600c.   v1:= v7.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b6010.   v3:= @@[|libcore:math:MathUtils.LONG_POWERS_OF_TEN|]   @type object;
#L0b6014.   v3:= v3[v0]  @wide;
#L0b6018.   v1:= v1 * v3  @type long;
#L0b601a.   v3:= v8.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b601e.   v1:= v1 - v3  @type long;
#L0b6020.   v3:= v8.[|java:math:BigDecimal.scale|] ;
#L0b6024.   call temp:=  [|java:math:BigDecimal.valueOf|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b602a.   v7:= temp  @type object;
#L0b602c.   goto L0b5ed8;
#L0b6030.   v1:= new [|java:math:BigDecimal|];
#L0b6034.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v7) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b603a.   v2:= temp  @type object;
#L0b603c.   v3:= (long)v0  @type i2l;
#L0b603e.   call temp:=  [|java:math:Multiplication.multiplyByTenPow|](v2, v3, v4) @signature [|Ljava/math/Multiplication;.multiplyByTenPow:(Ljava/math/BigInteger;J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b6044.   v2:= temp  @type object;
#L0b6046.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v8) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b604c.   v3:= temp  @type object;
#L0b604e.   call temp:=  [|java:math:BigInteger.subtract|](v2, v3) @signature [|Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b6054.   v2:= temp  @type object;
#L0b6056.   v3:= v8.[|java:math:BigDecimal.scale|] ;
#L0b605a.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6060.   v7:= v1  @type object;
#L0b6062.   goto L0b5ed8;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.subtract|] ([|java:math:BigDecimal|] v10 @type (this), [|java:math:BigDecimal|] v11 @type (object), [|java:math:MathContext|] v12 @type (object)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0b6078.   v9:= 10  @length 16;
#L0b607c.   v5:= v11.[|java:math:BigDecimal.scale|] ;
#L0b6080.   v5:= (long)v5  @type i2l;
#L0b6082.   v7:= v10.[|java:math:BigDecimal.scale|] ;
#L0b6086.   v7:= (long)v7  @type i2l;
#L0b6088.   v0:= v5 - v7  @type long;
#L0b608c.   call temp:=  [|java:math:BigDecimal.isZero|](v11) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6092.   v5:= temp;
#L0b6094.   if v5 != 0 then goto L0b60b0;
#L0b6098.   call temp:=  [|java:math:BigDecimal.isZero|](v10) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b609e.   v5:= temp;
#L0b60a0.   if v5 != 0 then goto L0b60b0;
#L0b60a4.   call temp:=  [|java:math:MathContext.getPrecision|](v12) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b60aa.   v5:= temp;
#L0b60ac.   if v5 != 0 then goto L0b60c2;
#L0b60b0.   call temp:=  [|java:math:BigDecimal.subtract|](v10, v11) @signature [|Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b60b6.   v5:= temp  @type object;
#L0b60b8.   call temp:=  [|java:math:BigDecimal.round|](v5, v12) @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b60be.   v5:= temp  @type object;
#L0b60c0.   return v5  @type object;
#L0b60c2.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v11) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b60c8.   v5:= temp;
#L0b60ca.   v5:= (long)v5  @type i2l;
#L0b60cc.   v7:= 1  @length wide16;
#L0b60d0.   v7:= v0 - v7  @type long;
#L0b60d4.   v5:= cmp(v5,v7);
#L0b60d8.   if v5 >= 0 then goto L0b617c;
#L0b60dc.   call temp:=  [|java:math:MathContext.getPrecision|](v12) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0b60e2.   v5:= temp;
#L0b60e4.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v10) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b60ea.   v6:= temp;
#L0b60ec.   if v5 >= v6 then goto L0b617c;
#L0b60f0.   call temp:=  [|java:math:BigDecimal.signum|](v10) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b60f6.   v4:= temp;
#L0b60f8.   call temp:=  [|java:math:BigDecimal.signum|](v11) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b60fe.   v5:= temp;
#L0b6100.   if v4 == v5 then goto L0b6142;
#L0b6104.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v10) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b610a.   v5:= temp  @type object;
#L0b610c.   call temp:=  [|java:math:Multiplication.multiplyByPositiveInt|](v5, v9) @signature [|Ljava/math/Multiplication;.multiplyByPositiveInt:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b6112.   v5:= temp  @type object;
#L0b6114.   v6:= (long)v4  @type i2l;
#L0b6116.   call temp:=  [|java:math:BigInteger.valueOf|](v6, v7) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b611c.   v6:= temp  @type object;
#L0b611e.   call temp:=  [|java:math:BigInteger.add|](v5, v6) @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b6124.   v3:= temp  @type object;
#L0b6126.   v2:= new [|java:math:BigDecimal|];
#L0b612a.   v5:= v10.[|java:math:BigDecimal.scale|] ;
#L0b612e.   v5:= v5 + 1;
#L0b6132.   call temp:=  [|java:math:BigDecimal.<init>|](v2, v3, v5) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/math/BigInteger;I)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6138.   call temp:=  [|java:math:BigDecimal.round|](v2, v12) @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b613e.   v5:= temp  @type object;
#L0b6140.   goto L0b60c0;
#L0b6142.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v10) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6148.   v5:= temp  @type object;
#L0b614a.   v6:= (long)v4  @type i2l;
#L0b614c.   call temp:=  [|java:math:BigInteger.valueOf|](v6, v7) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b6152.   v6:= temp  @type object;
#L0b6154.   call temp:=  [|java:math:BigInteger.subtract|](v5, v6) @signature [|Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b615a.   v3:= temp  @type object;
#L0b615c.   call temp:=  [|java:math:Multiplication.multiplyByPositiveInt|](v3, v9) @signature [|Ljava/math/Multiplication;.multiplyByPositiveInt:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b6162.   v5:= temp  @type object;
#L0b6164.   v6:= v4 * 9;
#L0b6168.   v6:= (long)v6  @type i2l;
#L0b616a.   call temp:=  [|java:math:BigInteger.valueOf|](v6, v7) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b6170.   v6:= temp  @type object;
#L0b6172.   call temp:=  [|java:math:BigInteger.add|](v5, v6) @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b6178.   v3:= temp  @type object;
#L0b617a.   goto L0b6126;
#L0b617c.   call temp:=  [|java:math:BigDecimal.subtract|](v10, v11) @signature [|Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b6182.   v5:= temp  @type object;
#L0b6184.   call temp:=  [|java:math:BigDecimal.round|](v5, v12) @signature [|Ljava/math/BigDecimal;.round:(Ljava/math/MathContext;)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b618a.   v5:= temp  @type object;
#L0b618c.   goto L0b60c0;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigDecimal.toBigInteger|] ([|java:math:BigDecimal|] v3 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.toBigInteger:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b61a0.   v0:= v3.[|java:math:BigDecimal.scale|] ;
#L0b61a4.   if v0 == 0 then goto L0b61b4;
#L0b61a8.   call temp:=  [|java:math:BigDecimal.isZero|](v3) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b61ae.   v0:= temp;
#L0b61b0.   if v0 == 0 then goto L0b61be;
#L0b61b4.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v3) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b61ba.   v0:= temp  @type object;
#L0b61bc.   return v0  @type object;
#L0b61be.   v0:= v3.[|java:math:BigDecimal.scale|] ;
#L0b61c2.   if v0 >= 0 then goto L0b61e8;
#L0b61c6.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v3) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b61cc.   v0:= temp  @type object;
#L0b61ce.   v1:= v3.[|java:math:BigDecimal.scale|] ;
#L0b61d2.   v1:= (long)v1  @type i2l;
#L0b61d4.   v1:= -v1  @type long;
#L0b61d6.   call temp:=  [|java:math:Multiplication.powerOf10|](v1, v2) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b61dc.   v1:= temp  @type object;
#L0b61de.   call temp:=  [|java:math:BigInteger.multiply|](v0, v1) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b61e4.   v0:= temp  @type object;
#L0b61e6.   goto L0b61bc;
#L0b61e8.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v3) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b61ee.   v0:= temp  @type object;
#L0b61f0.   v1:= v3.[|java:math:BigDecimal.scale|] ;
#L0b61f4.   v1:= (long)v1  @type i2l;
#L0b61f6.   call temp:=  [|java:math:Multiplication.powerOf10|](v1, v2) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b61fc.   v1:= temp  @type object;
#L0b61fe.   call temp:=  [|java:math:BigInteger.divide|](v0, v1) @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b6204.   v0:= temp  @type object;
#L0b6206.   goto L0b61bc;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigDecimal.toBigIntegerExact|] ([|java:math:BigDecimal|] v4 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.toBigIntegerExact:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b6218.   v1:= v4.[|java:math:BigDecimal.scale|] ;
#L0b621c.   if v1 == 0 then goto L0b622c;
#L0b6220.   call temp:=  [|java:math:BigDecimal.isZero|](v4) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6226.   v1:= temp;
#L0b6228.   if v1 == 0 then goto L0b6236;
#L0b622c.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v4) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6232.   v1:= temp  @type object;
#L0b6234.   return v1  @type object;
#L0b6236.   v1:= v4.[|java:math:BigDecimal.scale|] ;
#L0b623a.   if v1 >= 0 then goto L0b6260;
#L0b623e.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v4) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6244.   v1:= temp  @type object;
#L0b6246.   v2:= v4.[|java:math:BigDecimal.scale|] ;
#L0b624a.   v2:= (long)v2  @type i2l;
#L0b624c.   v2:= -v2  @type long;
#L0b624e.   call temp:=  [|java:math:Multiplication.powerOf10|](v2, v3) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b6254.   v2:= temp  @type object;
#L0b6256.   call temp:=  [|java:math:BigInteger.multiply|](v1, v2) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b625c.   v1:= temp  @type object;
#L0b625e.   goto L0b6234;
#L0b6260.   v1:= v4.[|java:math:BigDecimal.scale|] ;
#L0b6264.   call temp:=  [|java:math:BigDecimal.approxPrecision|](v4) @signature [|Ljava/math/BigDecimal;.approxPrecision:()I|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b626a.   v2:= temp;
#L0b626c.   if v1 > v2 then goto L0b6288;
#L0b6270.   v1:= v4.[|java:math:BigDecimal.scale|] ;
#L0b6274.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v4) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b627a.   v2:= temp  @type object;
#L0b627c.   call temp:=  [|java:math:BigInteger.getLowestSetBit|](v2) @signature [|Ljava/math/BigInteger;.getLowestSetBit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b6282.   v2:= temp;
#L0b6284.   if v1 <= v2 then goto L0b6298;
#L0b6288.   v1:= new [|java:lang:ArithmeticException|];
#L0b628c.   v2:= "Rounding necessary" @type (object, string);
#L0b6290.   call temp:=  [|java:lang:ArithmeticException.<init>|](v1, v2) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b6296.   throw v1;
#L0b6298.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v4) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b629e.   v1:= temp  @type object;
#L0b62a0.   v2:= v4.[|java:math:BigDecimal.scale|] ;
#L0b62a4.   v2:= (long)v2  @type i2l;
#L0b62a6.   call temp:=  [|java:math:Multiplication.powerOf10|](v2, v3) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0b62ac.   v2:= temp  @type object;
#L0b62ae.   call temp:=  [|java:math:BigInteger.divideAndRemainder|](v1, v2) @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b62b4.   v0:= temp  @type object;
#L0b62b6.   v1:= 1  @length 4;
#L0b62b8.   v1:= v0[v1]  @type object;
#L0b62bc.   call temp:=  [|java:math:BigInteger.signum|](v1) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b62c2.   v1:= temp;
#L0b62c4.   if v1 == 0 then goto L0b62d8;
#L0b62c8.   v1:= new [|java:lang:ArithmeticException|];
#L0b62cc.   v2:= "Rounding necessary" @type (object, string);
#L0b62d0.   call temp:=  [|java:lang:ArithmeticException.<init>|](v1, v2) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b62d6.   throw v1;
#L0b62d8.   v1:= 0  @length 4;
#L0b62da.   v1:= v0[v1]  @type object;
#L0b62de.   goto L0b6234;

   }
    procedure [|java:lang:String|] [|java:math:BigDecimal.toEngineeringString|] ([|java:math:BigDecimal|] v14 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.toEngineeringString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L0b62f0.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v14) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b62f6.   v10:= temp  @type object;
#L0b62f8.   call temp:=  [|java:math:BigInteger.toString|](v10) @signature [|Ljava/math/BigInteger;.toString:()Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b62fe.   v7:= temp  @type object;
#L0b6300.   v10:= v14.[|java:math:BigDecimal.scale|] ;
#L0b6304.   if v10 != 0 then goto L0b630a;
#L0b6308.   return v7  @type object;
#L0b630a.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v14) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6310.   v10:= temp  @type object;
#L0b6312.   call temp:=  [|java:math:BigInteger.signum|](v10) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b6318.   v10:= temp;
#L0b631a.   if v10 >= 0 then goto L0b6380;
#L0b631e.   v0:= 2  @length 4;
#L0b6320.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6326.   v2:= temp;
#L0b6328.   v10:= v14.[|java:math:BigDecimal.scale|] ;
#L0b632c.   v10:= (long)v10  @type i2l;
#L0b632e.   v10:= -v10  @type long;
#L0b6330.   v12:= (long)v2  @type i2l;
#L0b6332.   v10:= v10 + v12  @type long;
#L0b6334.   v12:= (long)v0  @type i2l;
#L0b6336.   v4:= v10 - v12  @type long;
#L0b633a.   v9:= new [|java:lang:StringBuilder|];
#L0b633e.   call temp:=  [|java:lang:StringBuilder.<init>|](v9, v7) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b6344.   v10:= v14.[|java:math:BigDecimal.scale|] ;
#L0b6348.   if v10 <= 0 then goto L0b63ac;
#L0b634c.   v10:= -6  @length wide16;
#L0b6350.   v10:= cmp(v4,v10);
#L0b6354.   if v10 < 0 then goto L0b63ac;
#L0b6358.   v10:= 0  @length wide16;
#L0b635c.   v10:= cmp(v4,v10);
#L0b6360.   if v10 < 0 then goto L0b6384;
#L0b6364.   v10:= v14.[|java:math:BigDecimal.scale|] ;
#L0b6368.   v10:= v2 - v10  @type int;
#L0b636c.   v11:= 46  @length 16;
#L0b6370.   call temp:=  [|java:lang:StringBuilder.insert|](v9, v10, v11) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6376.   call temp:=  [|java:lang:StringBuilder.toString|](v9) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b637c.   v7:= temp  @type object;
#L0b637e.   goto L0b6308;
#L0b6380.   v0:= 1  @length 4;
#L0b6382.   goto L0b6320;
#L0b6384.   v10:= v0 + -1;
#L0b6388.   v11:= "0." @type (object, string);
#L0b638c.   call temp:=  [|java:lang:StringBuilder.insert|](v9, v10, v11) @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6392.   v10:= v0 + 1;
#L0b6396.   v11:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b639a.   v12:= 0  @length 4;
#L0b639c.   v13:= (int)v4  @type l2i;
#L0b639e.   v13:= -v13  @type int;
#L0b63a0.   v13:= v13 + -1;
#L0b63a4.   call temp:=  [|java:lang:StringBuilder.insert|](v9, v10, v11, v12, v13) @signature [|Ljava/lang/StringBuilder;.insert:(I[CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b63aa.   goto L0b6376;
#L0b63ac.   v1:= v2 - v0  @type int;
#L0b63b0.   v10:= 3  @length wide16;
#L0b63b4.   v10:= v4 % v10  @type long;
#L0b63b8.   v8:= (int)v10  @type l2i;
#L0b63ba.   if v8 == 0 then goto L0b641a;
#L0b63be.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v14) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b63c4.   v10:= temp  @type object;
#L0b63c6.   call temp:=  [|java:math:BigInteger.signum|](v10) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b63cc.   v10:= temp;
#L0b63ce.   if v10 != 0 then goto L0b6408;
#L0b63d2.   if v8 >= 0 then goto L0b6402;
#L0b63d6.   v8:= -v8  @type int;
#L0b63d8.   v10:= (long)v8  @type i2l;
#L0b63da.   v4:= v4 + v10  @type long;
#L0b63dc.   v10:= 3  @length 4;
#L0b63de.   if v1 >= v10 then goto L0b641a;
#L0b63e2.   v6:= v8 - v1  @type int;
#L0b63e6.   v3:= v2;
#L0b63e8.   if v6 <= 0 then goto L0b6418;
#L0b63ec.   v2:= v3 + 1;
#L0b63f0.   v10:= 48  @length 16;
#L0b63f4.   call temp:=  [|java:lang:StringBuilder.insert|](v9, v3, v10) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b63fa.   v6:= v6 + -1;
#L0b63fe.   v3:= v2;
#L0b6400.   goto L0b63e8;
#L0b6402.   v8:= v8 - 3;
#L0b6406.   goto L0b63d8;
#L0b6408.   if v8 >= 0 then goto L0b6410;
#L0b640c.   v8:= v8 + 3;
#L0b6410.   v10:= (long)v8  @type i2l;
#L0b6412.   v4:= v4 - v10  @type long;
#L0b6414.   v0:= v0 + v8  @type int;
#L0b6416.   goto L0b63dc;
#L0b6418.   v2:= v3;
#L0b641a.   v10:= v2 - v0  @type int;
#L0b641e.   v11:= 1  @length 4;
#L0b6420.   if v10 < v11 then goto L0b6432;
#L0b6424.   v10:= 46  @length 16;
#L0b6428.   call temp:=  [|java:lang:StringBuilder.insert|](v9, v0, v10) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b642e.   v2:= v2 + 1;
#L0b6432.   v10:= 0  @length wide16;
#L0b6436.   v10:= cmp(v4,v10);
#L0b643a.   if v10 == 0 then goto L0b6376;
#L0b643e.   v10:= 69  @length 16;
#L0b6442.   call temp:=  [|java:lang:StringBuilder.insert|](v9, v2, v10) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6448.   v10:= 0  @length wide16;
#L0b644c.   v10:= cmp(v4,v10);
#L0b6450.   if v10 <= 0 then goto L0b6462;
#L0b6454.   v2:= v2 + 1;
#L0b6458.   v10:= 43  @length 16;
#L0b645c.   call temp:=  [|java:lang:StringBuilder.insert|](v9, v2, v10) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6462.   v2:= v2 + 1;
#L0b6466.   call temp:=  [|java:lang:Long.toString|](v4, v5) @signature [|Ljava/lang/Long;.toString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L0b646c.   v10:= temp  @type object;
#L0b646e.   call temp:=  [|java:lang:StringBuilder.insert|](v9, v2, v10) @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6474.   goto L0b6376;

   }
    procedure [|java:lang:String|] [|java:math:BigDecimal.toPlainString|] ([|java:math:BigDecimal|] v8 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.toPlainString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b6488.   v4:= 1  @length 4;
#L0b648a.   v5:= 0  @length 4;
#L0b648c.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v8) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6492.   v6:= temp  @type object;
#L0b6494.   call temp:=  [|java:math:BigInteger.toString|](v6) @signature [|Ljava/math/BigInteger;.toString:()Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b649a.   v2:= temp  @type object;
#L0b649c.   v6:= v8.[|java:math:BigDecimal.scale|] ;
#L0b64a0.   if v6 == 0 then goto L0b64b8;
#L0b64a4.   call temp:=  [|java:math:BigDecimal.isZero|](v8) @signature [|Ljava/math/BigDecimal;.isZero:()Z|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b64aa.   v6:= temp;
#L0b64ac.   if v6 == 0 then goto L0b64ba;
#L0b64b0.   v6:= v8.[|java:math:BigDecimal.scale|] ;
#L0b64b4.   if v6 >= 0 then goto L0b64ba;
#L0b64b8.   return v2  @type object;
#L0b64ba.   call temp:=  [|java:math:BigDecimal.signum|](v8) @signature [|Ljava/math/BigDecimal;.signum:()I|] @classDescriptor [|java:math:BigDecimal|] @type virtual;
#L0b64c0.   v6:= temp;
#L0b64c2.   if v6 >= 0 then goto L0b653e;
#L0b64c6.   v0:= v4;
#L0b64c8.   v1:= v8.[|java:math:BigDecimal.scale|] ;
#L0b64cc.   v3:= new [|java:lang:StringBuilder|];
#L0b64d0.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b64d6.   v6:= temp;
#L0b64d8.   v6:= v6 + 1;
#L0b64dc.   v7:= v8.[|java:math:BigDecimal.scale|] ;
#L0b64e0.   call temp:=  [|java:lang:Math.abs|](v7) @signature [|Ljava/lang/Math;.abs:(I)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b64e6.   v7:= temp;
#L0b64e8.   v6:= v6 + v7  @type int;
#L0b64ea.   call temp:=  [|java:lang:StringBuilder.<init>|](v3, v6) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b64f0.   if v0 != v4 then goto L0b64fe;
#L0b64f4.   v4:= 45  @length 16;
#L0b64f8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b64fe.   v4:= v8.[|java:math:BigDecimal.scale|] ;
#L0b6502.   if v4 <= 0 then goto L0b6590;
#L0b6506.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b650c.   v4:= temp;
#L0b650e.   v4:= v4 - v0  @type int;
#L0b6510.   v1:= v1 - v4  @type int;
#L0b6512.   if v1 < 0 then goto L0b6564;
#L0b6516.   v4:= "0." @type (object, string);
#L0b651a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6520.   v4:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b6524.   v4:= v4.length;
#L0b6526.   if v1 <= v4 then goto L0b6542;
#L0b652a.   v4:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b652e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:([C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6534.   v4:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b6538.   v4:= v4.length;
#L0b653a.   v1:= v1 - v4  @type int;
#L0b653c.   goto L0b6520;
#L0b653e.   v0:= v5;
#L0b6540.   goto L0b64c8;
#L0b6542.   v4:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b6546.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4, v5, v1) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b654c.   call temp:=  [|java:lang:String.substring|](v2, v0) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6552.   v4:= temp  @type object;
#L0b6554.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b655a.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6560.   v2:= temp  @type object;
#L0b6562.   goto L0b64b8;
#L0b6564.   v1:= v0 - v1  @type int;
#L0b6568.   call temp:=  [|java:lang:String.substring|](v2, v0, v1) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b656e.   v4:= temp  @type object;
#L0b6570.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6576.   v4:= 46  @length 16;
#L0b657a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6580.   call temp:=  [|java:lang:String.substring|](v2, v1) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6586.   v4:= temp  @type object;
#L0b6588.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b658e.   goto L0b655a;
#L0b6590.   call temp:=  [|java:lang:String.substring|](v2, v0) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6596.   v4:= temp  @type object;
#L0b6598.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b659e.   v4:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b65a2.   v4:= v4.length;
#L0b65a4.   v4:= -v4  @type int;
#L0b65a6.   if v1 >= v4 then goto L0b65be;
#L0b65aa.   v4:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b65ae.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:([C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b65b4.   v4:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b65b8.   v4:= v4.length;
#L0b65ba.   v1:= v1 + v4  @type int;
#L0b65bc.   goto L0b659e;
#L0b65be.   v4:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b65c2.   v6:= -v1  @type int;
#L0b65c4.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4, v5, v6) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b65ca.   goto L0b655a;

   }
    procedure [|java:lang:String|] [|java:math:BigDecimal.toString|] ([|java:math:BigDecimal|] v14 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L0b65dc.   v12:= 0  @length wide16;
#L0b65e0.   v11:= 46  @length 16;
#L0b65e4.   v6:= 1  @length 4;
#L0b65e6.   v7:= v14.[|java:math:BigDecimal.toStringImage|]   @type object;
#L0b65ea.   if v7 == 0 then goto L0b65f4;
#L0b65ee.   v4:= v14.[|java:math:BigDecimal.toStringImage|]   @type object;
#L0b65f2.   return v4  @type object;
#L0b65f4.   v7:= v14.[|java:math:BigDecimal.bitLength|] ;
#L0b65f8.   v8:= 32  @length 16;
#L0b65fc.   if v7 >= v8 then goto L0b661a;
#L0b6600.   v6:= v14.[|java:math:BigDecimal.smallValue|]   @wide;
#L0b6604.   v8:= v14.[|java:math:BigDecimal.scale|] ;
#L0b6608.   call temp:=  [|java:math:Conversion.toDecimalScaledString|](v6, v7, v8) @signature [|Ljava/math/Conversion;.toDecimalScaledString:(JI)Ljava/lang/String;|] @classDescriptor [|java:math:Conversion|] @type static;
#L0b660e.   v6:= temp  @type object;
#L0b6610.   v14.[|java:math:BigDecimal.toStringImage|]  := v6 @type object;
#L0b6614.   v4:= v14.[|java:math:BigDecimal.toStringImage|]   @type object;
#L0b6618.   goto L0b65f2;
#L0b661a.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v14) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6620.   v7:= temp  @type object;
#L0b6622.   call temp:=  [|java:math:BigInteger.toString|](v7) @signature [|Ljava/math/BigInteger;.toString:()Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b6628.   v4:= temp  @type object;
#L0b662a.   v7:= v14.[|java:math:BigDecimal.scale|] ;
#L0b662e.   if v7 == 0 then goto L0b65f2;
#L0b6632.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v14) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b6638.   v7:= temp  @type object;
#L0b663a.   call temp:=  [|java:math:BigInteger.signum|](v7) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b6640.   v7:= temp;
#L0b6642.   if v7 >= 0 then goto L0b66ae;
#L0b6646.   v0:= 2  @length 4;
#L0b6648.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b664e.   v1:= temp;
#L0b6650.   v7:= v14.[|java:math:BigDecimal.scale|] ;
#L0b6654.   v7:= (long)v7  @type i2l;
#L0b6656.   v7:= -v7  @type long;
#L0b6658.   v9:= (long)v1  @type i2l;
#L0b665a.   v7:= v7 + v9  @type long;
#L0b665c.   v9:= (long)v0  @type i2l;
#L0b665e.   v2:= v7 - v9  @type long;
#L0b6662.   v5:= new [|java:lang:StringBuilder|];
#L0b6666.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b666c.   call temp:=  [|java:lang:StringBuilder.append|](v5, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6672.   v7:= v14.[|java:math:BigDecimal.scale|] ;
#L0b6676.   if v7 <= 0 then goto L0b66da;
#L0b667a.   v7:= -6  @length wide16;
#L0b667e.   v7:= cmp(v2,v7);
#L0b6682.   if v7 < 0 then goto L0b66da;
#L0b6686.   v6:= cmp(v2,v12);
#L0b668a.   if v6 < 0 then goto L0b66b2;
#L0b668e.   v6:= v14.[|java:math:BigDecimal.scale|] ;
#L0b6692.   v6:= v1 - v6  @type int;
#L0b6696.   call temp:=  [|java:lang:StringBuilder.insert|](v5, v6, v11) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b669c.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b66a2.   v6:= temp  @type object;
#L0b66a4.   v14.[|java:math:BigDecimal.toStringImage|]  := v6 @type object;
#L0b66a8.   v4:= v14.[|java:math:BigDecimal.toStringImage|]   @type object;
#L0b66ac.   goto L0b65f2;
#L0b66ae.   v0:= v6;
#L0b66b0.   goto L0b6648;
#L0b66b2.   v6:= v0 + -1;
#L0b66b6.   v7:= "0." @type (object, string);
#L0b66ba.   call temp:=  [|java:lang:StringBuilder.insert|](v5, v6, v7) @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b66c0.   v6:= v0 + 1;
#L0b66c4.   v7:= @@[|java:math:BigDecimal.CH_ZEROS|]   @type object;
#L0b66c8.   v8:= 0  @length 4;
#L0b66ca.   v9:= (int)v2  @type l2i;
#L0b66cc.   v9:= -v9  @type int;
#L0b66ce.   v9:= v9 + -1;
#L0b66d2.   call temp:=  [|java:lang:StringBuilder.insert|](v5, v6, v7, v8, v9) @signature [|Ljava/lang/StringBuilder;.insert:(I[CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b66d8.   goto L0b669c;
#L0b66da.   v7:= v1 - v0  @type int;
#L0b66de.   if v7 < v6 then goto L0b66ec;
#L0b66e2.   call temp:=  [|java:lang:StringBuilder.insert|](v5, v0, v11) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b66e8.   v1:= v1 + 1;
#L0b66ec.   v6:= 69  @length 16;
#L0b66f0.   call temp:=  [|java:lang:StringBuilder.insert|](v5, v1, v6) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b66f6.   v6:= cmp(v2,v12);
#L0b66fa.   if v6 <= 0 then goto L0b670c;
#L0b66fe.   v1:= v1 + 1;
#L0b6702.   v6:= 43  @length 16;
#L0b6706.   call temp:=  [|java:lang:StringBuilder.insert|](v5, v1, v6) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b670c.   v1:= v1 + 1;
#L0b6710.   call temp:=  [|java:lang:Long.toString|](v2, v3) @signature [|Ljava/lang/Long;.toString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L0b6716.   v6:= temp  @type object;
#L0b6718.   call temp:=  [|java:lang:StringBuilder.insert|](v5, v1, v6) @signature [|Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b671e.   goto L0b669c;

   }
    procedure [|java:math:BigDecimal|] [|java:math:BigDecimal.ulp|] ([|java:math:BigDecimal|] v3 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.ulp:()Ljava/math/BigDecimal;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b6730.   v0:= 1  @length wide16;
#L0b6734.   v2:= v3.[|java:math:BigDecimal.scale|] ;
#L0b6738.   call temp:=  [|java:math:BigDecimal.valueOf|](v0, v1, v2) @signature [|Ljava/math/BigDecimal;.valueOf:(JI)Ljava/math/BigDecimal;|] @classDescriptor [|java:math:BigDecimal|] @type static;
#L0b673e.   v0:= temp  @type object;
#L0b6740.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigDecimal.unscaledValue|] ([|java:math:BigDecimal|] v1 @type (this)) @owner [|java:math:BigDecimal|] @signature [|Ljava/math/BigDecimal;.unscaledValue:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b6754.   call temp:=  [|java:math:BigDecimal.getUnscaledValue|](v1) @signature [|Ljava/math/BigDecimal;.getUnscaledValue:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0b675a.   v0:= temp  @type object;
#L0b675c.   return v0  @type object;

   }
record [|java:math:BigInt|]  @type class @AccessFlag FINAL  {
      [|int|] [|java:math:BigInt.bignum|]    @AccessFlag TRANSIENT;
   }
    procedure [|void|] [|java:math:BigInt.<init>|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b6770.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b6776.   v0:= 0  @length 4;
#L0b6778.   v1.[|java:math:BigInt.bignum|]  := v0;
#L0b677c.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.Check|] ([|boolean|] v4) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.Check:(Z)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b6790.   if v4 != 0 then goto L0b67c2;
#L0b6794.   v1:= new [|java:lang:StringBuilder|];
#L0b6798.   v2:= "(openssl)ERR: " @type (object, string);
#L0b679c.   call temp:=  [|java:lang:StringBuilder.<init>|](v1, v2) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b67a2.   call temp:=  [|java:math:BigInt.consumeErrors|](v1) @signature [|Ljava/math/BigInt;.consumeErrors:(Ljava/lang/StringBuilder;)I|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b67a8.   v0:= temp;
#L0b67aa.   if v0 <= 0 then goto L0b67c2;
#L0b67ae.   v2:= new [|java:lang:ArithmeticException|];
#L0b67b2.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b67b8.   v3:= temp  @type object;
#L0b67ba.   call temp:=  [|java:lang:ArithmeticException.<init>|](v2, v3) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b67c0.   throw v2;
#L0b67c2.   return @void ;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.addition|] ([|java:math:BigInt|] v4 @type (object), [|java:math:BigInt|] v5 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.addition:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b67d4.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b67da.   v0:= temp  @type object;
#L0b67dc.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b67e0.   v2:= v4.[|java:math:BigInt.bignum|] ;
#L0b67e4.   v3:= v5.[|java:math:BigInt.bignum|] ;
#L0b67e8.   call temp:=  [|java:math:NativeBN.BN_add|](v1, v2, v3) @signature [|Ljava/math/NativeBN;.BN_add:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b67ee.   v1:= temp;
#L0b67f0.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b67f6.   return v0  @type object;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.bigExp|] ([|java:math:BigInt|] v4 @type (object), [|java:math:BigInt|] v5 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.bigExp:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b6808.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b680e.   v0:= temp  @type object;
#L0b6810.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b6814.   v2:= v4.[|java:math:BigInt.bignum|] ;
#L0b6818.   v3:= v5.[|java:math:BigInt.bignum|] ;
#L0b681c.   call temp:=  [|java:math:NativeBN.BN_exp|](v1, v2, v3) @signature [|Ljava/math/NativeBN;.BN_exp:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6822.   v1:= temp;
#L0b6824.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b682a.   return v0  @type object;

   }
    procedure [|int|] [|java:math:BigInt.cmp|] ([|java:math:BigInt|] v2 @type (object), [|java:math:BigInt|] v3 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.cmp:(Ljava/math/BigInt;Ljava/math/BigInt;)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0b683c.   v0:= v2.[|java:math:BigInt.bignum|] ;
#L0b6840.   v1:= v3.[|java:math:BigInt.bignum|] ;
#L0b6844.   call temp:=  [|java:math:NativeBN.BN_cmp|](v0, v1) @signature [|Ljava/math/NativeBN;.BN_cmp:(II)I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b684a.   v0:= temp;
#L0b684c.   return v0;

   }
    procedure [|int|] [|java:math:BigInt.consumeErrors|] ([|java:lang:StringBuilder|] v6 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.consumeErrors:(Ljava/lang/StringBuilder;)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b6860.   v0:= 0  @length 4;
#L0b6862.   call temp:=  [|java:math:NativeBN.ERR_get_error|]() @signature [|Ljava/math/NativeBN;.ERR_get_error:()I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6868.   v1:= temp;
#L0b686a.   if v1 == 0 then goto L0b68dc;
#L0b686e.   v2:= v1 ^& 255;
#L0b6872.   v4:= 103  @length 16;
#L0b6876.   if v2 != v4 then goto L0b688a;
#L0b687a.   v4:= new [|java:lang:ArithmeticException|];
#L0b687e.   v5:= "BigInteger division by zero" @type (object, string);
#L0b6882.   call temp:=  [|java:lang:ArithmeticException.<init>|](v4, v5) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b6888.   throw v4;
#L0b688a.   v4:= 108  @length 16;
#L0b688e.   if v2 != v4 then goto L0b68a2;
#L0b6892.   v4:= new [|java:lang:ArithmeticException|];
#L0b6896.   v5:= "BigInteger not invertible" @type (object, string);
#L0b689a.   call temp:=  [|java:lang:ArithmeticException.<init>|](v4, v5) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b68a0.   throw v4;
#L0b68a2.   v4:= 65  @length 16;
#L0b68a6.   if v2 != v4 then goto L0b68b6;
#L0b68aa.   v4:= new [|java:lang:OutOfMemoryError|];
#L0b68ae.   call temp:=  [|java:lang:OutOfMemoryError.<init>|](v4) @signature [|Ljava/lang/OutOfMemoryError;.<init>:()V|] @classDescriptor [|java:lang:OutOfMemoryError|] @type direct;
#L0b68b4.   throw v4;
#L0b68b6.   call temp:=  [|java:lang:StringBuilder.append|](v6, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b68bc.   v4:= temp  @type object;
#L0b68be.   v5:= ": " @type (object, string);
#L0b68c2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b68c8.   call temp:=  [|java:math:NativeBN.ERR_error_string|](v1) @signature [|Ljava/math/NativeBN;.ERR_error_string:(I)Ljava/lang/String;|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b68ce.   v3:= temp  @type object;
#L0b68d0.   call temp:=  [|java:lang:StringBuilder.append|](v6, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b68d6.   v0:= v0 + 1;
#L0b68da.   goto L0b6862;
#L0b68dc.   return v0;

   }
    procedure [|void|] [|java:math:BigInt.division|] ([|java:math:BigInt|] v4 @type (object), [|java:math:BigInt|] v5 @type (object), [|java:math:BigInt|] v6 @type (object), [|java:math:BigInt|] v7 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.division:(Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;)V|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b68f0.   if v6 == 0 then goto L0b6924;
#L0b68f4.   call temp:=  [|java:math:BigInt.makeValid|](v6) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b68fa.   v0:= v6.[|java:math:BigInt.bignum|] ;
#L0b68fe.   if v7 == 0 then goto L0b6928;
#L0b6902.   call temp:=  [|java:math:BigInt.makeValid|](v7) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6908.   v1:= v7.[|java:math:BigInt.bignum|] ;
#L0b690c.   v2:= v4.[|java:math:BigInt.bignum|] ;
#L0b6910.   v3:= v5.[|java:math:BigInt.bignum|] ;
#L0b6914.   call temp:=  [|java:math:NativeBN.BN_div|](v0, v1, v2, v3) @signature [|Ljava/math/NativeBN;.BN_div:(IIII)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b691a.   v2:= temp;
#L0b691c.   call temp:=  [|java:math:BigInt.Check|](v2) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6922.   return @void ;
#L0b6924.   v0:= 0  @length 4;
#L0b6926.   goto L0b68fe;
#L0b6928.   v1:= 0  @length 4;
#L0b692a.   goto L0b690c;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.exp|] ([|java:math:BigInt|] v3 @type (object), [|int|] v4) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.exp:(Ljava/math/BigInt;I)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b693c.   v0:= new [|java:math:BigInt|];
#L0b6940.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6946.   v1:= (long)v4  @type i2l;
#L0b6948.   call temp:=  [|java:math:BigInt.putLongInt|](v0, v1, v2) @signature [|Ljava/math/BigInt;.putLongInt:(J)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b694e.   call temp:=  [|java:math:BigInt.bigExp|](v3, v0) @signature [|Ljava/math/BigInt;.bigExp:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6954.   v1:= temp  @type object;
#L0b6956.   return v1  @type object;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.gcd|] ([|java:math:BigInt|] v4 @type (object), [|java:math:BigInt|] v5 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.gcd:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b6968.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b696e.   v0:= temp  @type object;
#L0b6970.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b6974.   v2:= v4.[|java:math:BigInt.bignum|] ;
#L0b6978.   v3:= v5.[|java:math:BigInt.bignum|] ;
#L0b697c.   call temp:=  [|java:math:NativeBN.BN_gcd|](v1, v2, v3) @signature [|Ljava/math/NativeBN;.BN_gcd:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6982.   v1:= temp;
#L0b6984.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b698a.   return v0  @type object;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.generatePrimeDefault|] ([|int|] v7) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.generatePrimeDefault:(I)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b699c.   v2:= 0  @length 4;
#L0b699e.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b69a4.   v6:= temp  @type object;
#L0b69a6.   v0:= v6.[|java:math:BigInt.bignum|] ;
#L0b69aa.   v1:= v7;
#L0b69ac.   v3:= v2;
#L0b69ae.   v4:= v2;
#L0b69b0.   v5:= v2;
#L0b69b2.   call temp:=  [|java:math:NativeBN.BN_generate_prime_ex|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/math/NativeBN;.BN_generate_prime_ex:(IIZIII)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b69b8.   v0:= temp;
#L0b69ba.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b69c0.   return v6  @type object;

   }
    procedure [|java:lang:NumberFormatException|] [|java:math:BigInt.invalidBigInteger|] ([|java:math:BigInt|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.invalidBigInteger:(Ljava/lang/String;)Ljava/lang/NumberFormatException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b69d4.   v0:= new [|java:lang:NumberFormatException|];
#L0b69d8.   v1:= new [|java:lang:StringBuilder|];
#L0b69dc.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b69e2.   v2:= "Invalid BigInteger: " @type (object, string);
#L0b69e6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b69ec.   v1:= temp  @type object;
#L0b69ee.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b69f4.   v1:= temp  @type object;
#L0b69f6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b69fc.   v1:= temp  @type object;
#L0b69fe.   call temp:=  [|java:lang:NumberFormatException.<init>|](v0, v1) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b6a04.   throw v0;

   }
    procedure [|void|] [|java:math:BigInt.makeValid|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.makeValid:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0b6a18.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6a1c.   if v0 != 0 then goto L0b6a3c;
#L0b6a20.   call temp:=  [|java:math:NativeBN.BN_new|]() @signature [|Ljava/math/NativeBN;.BN_new:()I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6a26.   v0:= temp;
#L0b6a28.   v1.[|java:math:BigInt.bignum|]  := v0;
#L0b6a2c.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6a30.   if v0 == 0 then goto L0b6a3e;
#L0b6a34.   v0:= 1  @length 4;
#L0b6a36.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6a3c.   return @void ;
#L0b6a3e.   v0:= 0  @length 4;
#L0b6a40.   goto L0b6a36;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.modExp|] ([|java:math:BigInt|] v5 @type (object), [|java:math:BigInt|] v6 @type (object), [|java:math:BigInt|] v7 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.modExp:(Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0b6a54.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6a5a.   v0:= temp  @type object;
#L0b6a5c.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b6a60.   v2:= v5.[|java:math:BigInt.bignum|] ;
#L0b6a64.   v3:= v6.[|java:math:BigInt.bignum|] ;
#L0b6a68.   v4:= v7.[|java:math:BigInt.bignum|] ;
#L0b6a6c.   call temp:=  [|java:math:NativeBN.BN_mod_exp|](v1, v2, v3, v4) @signature [|Ljava/math/NativeBN;.BN_mod_exp:(IIII)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6a72.   v1:= temp;
#L0b6a74.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6a7a.   return v0  @type object;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.modInverse|] ([|java:math:BigInt|] v4 @type (object), [|java:math:BigInt|] v5 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.modInverse:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b6a8c.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6a92.   v0:= temp  @type object;
#L0b6a94.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b6a98.   v2:= v4.[|java:math:BigInt.bignum|] ;
#L0b6a9c.   v3:= v5.[|java:math:BigInt.bignum|] ;
#L0b6aa0.   call temp:=  [|java:math:NativeBN.BN_mod_inverse|](v1, v2, v3) @signature [|Ljava/math/NativeBN;.BN_mod_inverse:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6aa6.   v1:= temp;
#L0b6aa8.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6aae.   return v0  @type object;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.modulus|] ([|java:math:BigInt|] v4 @type (object), [|java:math:BigInt|] v5 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.modulus:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b6ac0.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6ac6.   v0:= temp  @type object;
#L0b6ac8.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b6acc.   v2:= v4.[|java:math:BigInt.bignum|] ;
#L0b6ad0.   v3:= v5.[|java:math:BigInt.bignum|] ;
#L0b6ad4.   call temp:=  [|java:math:NativeBN.BN_nnmod|](v1, v2, v3) @signature [|Ljava/math/NativeBN;.BN_nnmod:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6ada.   v1:= temp;
#L0b6adc.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6ae2.   return v0  @type object;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.newBigInt|] () @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b6af4.   v0:= new [|java:math:BigInt|];
#L0b6af8.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6afe.   call temp:=  [|java:math:NativeBN.BN_new|]() @signature [|Ljava/math/NativeBN;.BN_new:()I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6b04.   v1:= temp;
#L0b6b06.   v0.[|java:math:BigInt.bignum|]  := v1;
#L0b6b0a.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b6b0e.   if v1 == 0 then goto L0b6b1c;
#L0b6b12.   v1:= 1  @length 4;
#L0b6b14.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6b1a.   return v0  @type object;
#L0b6b1c.   v1:= 0  @length 4;
#L0b6b1e.   goto L0b6b14;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.product|] ([|java:math:BigInt|] v4 @type (object), [|java:math:BigInt|] v5 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.product:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b6b30.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6b36.   v0:= temp  @type object;
#L0b6b38.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b6b3c.   v2:= v4.[|java:math:BigInt.bignum|] ;
#L0b6b40.   v3:= v5.[|java:math:BigInt.bignum|] ;
#L0b6b44.   call temp:=  [|java:math:NativeBN.BN_mul|](v1, v2, v3) @signature [|Ljava/math/NativeBN;.BN_mul:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6b4a.   v1:= temp;
#L0b6b4c.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6b52.   return v0  @type object;

   }
    procedure [|int|] [|java:math:BigInt.remainderByPositiveInt|] ([|java:math:BigInt|] v2 @type (object), [|int|] v3) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.remainderByPositiveInt:(Ljava/math/BigInt;I)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0b6b64.   v1:= v2.[|java:math:BigInt.bignum|] ;
#L0b6b68.   call temp:=  [|java:math:NativeBN.BN_mod_word|](v1, v3) @signature [|Ljava/math/NativeBN;.BN_mod_word:(II)I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6b6e.   v0:= temp;
#L0b6b70.   v1:= -1  @length 4;
#L0b6b72.   if v0 == v1 then goto L0b6b80;
#L0b6b76.   v1:= 1  @length 4;
#L0b6b78.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6b7e.   return v0;
#L0b6b80.   v1:= 0  @length 4;
#L0b6b82.   goto L0b6b78;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.shift|] ([|java:math:BigInt|] v3 @type (object), [|int|] v4) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.shift:(Ljava/math/BigInt;I)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b6b94.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6b9a.   v0:= temp  @type object;
#L0b6b9c.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b6ba0.   v2:= v3.[|java:math:BigInt.bignum|] ;
#L0b6ba4.   call temp:=  [|java:math:NativeBN.BN_shift|](v1, v2, v4) @signature [|Ljava/math/NativeBN;.BN_shift:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6baa.   v1:= temp;
#L0b6bac.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6bb2.   return v0  @type object;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.subtraction|] ([|java:math:BigInt|] v4 @type (object), [|java:math:BigInt|] v5 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.subtraction:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b6bc4.   call temp:=  [|java:math:BigInt.newBigInt|]() @signature [|Ljava/math/BigInt;.newBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6bca.   v0:= temp  @type object;
#L0b6bcc.   v1:= v0.[|java:math:BigInt.bignum|] ;
#L0b6bd0.   v2:= v4.[|java:math:BigInt.bignum|] ;
#L0b6bd4.   v3:= v5.[|java:math:BigInt.bignum|] ;
#L0b6bd8.   call temp:=  [|java:math:NativeBN.BN_sub|](v1, v2, v3) @signature [|Ljava/math/NativeBN;.BN_sub:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6bde.   v1:= temp;
#L0b6be0.   call temp:=  [|java:math:BigInt.Check|](v1) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6be6.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:math:BigInt.toAscii|] ([|java:lang:String|] v6 @type (object), [|int|] v7) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.toAscii:(Ljava/lang/String;I)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b6bf8.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6bfe.   v2:= temp;
#L0b6c00.   v3:= new [|java:lang:StringBuilder|];
#L0b6c04.   call temp:=  [|java:lang:StringBuilder.<init>|](v3, v2) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b6c0a.   v1:= 0  @length 4;
#L0b6c0c.   if v1 >= v2 then goto L0b6c3e;
#L0b6c10.   call temp:=  [|java:lang:String.charAt|](v6, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6c16.   v0:= temp;
#L0b6c18.   call temp:=  [|java:lang:Character.digit|](v0, v7) @signature [|Ljava/lang/Character;.digit:(CI)I|] @classDescriptor [|java:lang:Character|] @type static;
#L0b6c1e.   v4:= temp;
#L0b6c20.   if v4 < 0 then goto L0b6c32;
#L0b6c24.   v5:= 9  @length 16;
#L0b6c28.   if v4 > v5 then goto L0b6c32;
#L0b6c2c.   v5:= v4 + 48;
#L0b6c30.   v0:= (char)v5  @type i2c;
#L0b6c32.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6c38.   v1:= v1 + 1;
#L0b6c3c.   goto L0b6c0c;
#L0b6c3e.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b6c44.   v5:= temp  @type object;
#L0b6c46.   return v5  @type object;

   }
    procedure [|void|] [|java:math:BigInt.add|] ([|java:math:BigInt|] v3 @type (this), [|java:math:BigInt|] v4 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.add:(Ljava/math/BigInt;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b6c58.   v0:= v3.[|java:math:BigInt.bignum|] ;
#L0b6c5c.   v1:= v3.[|java:math:BigInt.bignum|] ;
#L0b6c60.   v2:= v4.[|java:math:BigInt.bignum|] ;
#L0b6c64.   call temp:=  [|java:math:NativeBN.BN_add|](v0, v1, v2) @signature [|Ljava/math/NativeBN;.BN_add:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6c6a.   v0:= temp;
#L0b6c6c.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6c72.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.addPositiveInt|] ([|java:math:BigInt|] v1 @type (this), [|int|] v2) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.addPositiveInt:(I)V|] @Access  {
      local temp ;
        v0;
      
#L0b6c84.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6c88.   call temp:=  [|java:math:NativeBN.BN_add_word|](v0, v2) @signature [|Ljava/math/NativeBN;.BN_add_word:(II)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6c8e.   v0:= temp;
#L0b6c90.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6c96.   return @void ;

   }
    procedure [|byte|][] [|java:math:BigInt.bigEndianMagnitude|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.bigEndianMagnitude:()[B|] @Access  {
      local temp ;
        v0;
      
#L0b6ca8.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6cac.   call temp:=  [|java:math:NativeBN.BN_bn2bin|](v0) @signature [|Ljava/math/NativeBN;.BN_bn2bin:(I)[B|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6cb2.   v0:= temp  @type object;
#L0b6cb4.   return v0  @type object;

   }
    procedure [|int|] [|java:math:BigInt.bitLength|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.bitLength:()I|] @Access  {
      local temp ;
        v0;
      
#L0b6cc8.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6ccc.   call temp:=  [|java:math:NativeBN.bitLength|](v0) @signature [|Ljava/math/NativeBN;.bitLength:(I)I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6cd2.   v0:= temp;
#L0b6cd4.   return v0;

   }
    procedure [|java:lang:String|] [|java:math:BigInt.checkString|] ([|java:math:BigInt|] v6 @type (this), [|java:lang:String|] v7 @type (object), [|int|] v8) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.checkString:(Ljava/lang/String;I)Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b6ce8.   if v7 != 0 then goto L0b6cfc;
#L0b6cec.   v4:= new [|java:lang:NullPointerException|];
#L0b6cf0.   v5:= "s == null" @type (object, string);
#L0b6cf4.   call temp:=  [|java:lang:NullPointerException.<init>|](v4, v5) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b6cfa.   throw v4;
#L0b6cfc.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6d02.   v1:= temp;
#L0b6d04.   v2:= 0  @length 4;
#L0b6d06.   if v1 <= 0 then goto L0b6d2a;
#L0b6d0a.   v4:= 0  @length 4;
#L0b6d0c.   call temp:=  [|java:lang:String.charAt|](v7, v4) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6d12.   v0:= temp;
#L0b6d14.   v4:= 43  @length 16;
#L0b6d18.   if v0 != v4 then goto L0b6d3c;
#L0b6d1c.   v4:= 1  @length 4;
#L0b6d1e.   call temp:=  [|java:lang:String.substring|](v7, v4) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6d24.   v7:= temp  @type object;
#L0b6d26.   v1:= v1 + -1;
#L0b6d2a.   v4:= v1 - v2  @type int;
#L0b6d2e.   if v4 != 0 then goto L0b6d4a;
#L0b6d32.   call temp:=  [|java:math:BigInt.invalidBigInteger|](v6, v7) @signature [|Ljava/math/BigInt;.invalidBigInteger:(Ljava/lang/String;)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6d38.   v4:= temp  @type object;
#L0b6d3a.   throw v4;
#L0b6d3c.   v4:= 45  @length 16;
#L0b6d40.   if v0 != v4 then goto L0b6d2a;
#L0b6d44.   v2:= v2 + 1;
#L0b6d48.   goto L0b6d2a;
#L0b6d4a.   v3:= 0  @length 4;
#L0b6d4c.   if v2 >= v1 then goto L0b6d80;
#L0b6d50.   call temp:=  [|java:lang:String.charAt|](v7, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6d56.   v0:= temp;
#L0b6d58.   call temp:=  [|java:lang:Character.digit|](v0, v8) @signature [|Ljava/lang/Character;.digit:(CI)I|] @classDescriptor [|java:lang:Character|] @type static;
#L0b6d5e.   v4:= temp;
#L0b6d60.   v5:= -1  @length 4;
#L0b6d62.   if v4 != v5 then goto L0b6d70;
#L0b6d66.   call temp:=  [|java:math:BigInt.invalidBigInteger|](v6, v7) @signature [|Ljava/math/BigInt;.invalidBigInteger:(Ljava/lang/String;)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6d6c.   v4:= temp  @type object;
#L0b6d6e.   throw v4;
#L0b6d70.   v4:= 128  @length 16;
#L0b6d74.   if v0 <= v4 then goto L0b6d7a;
#L0b6d78.   v3:= 1  @length 4;
#L0b6d7a.   v2:= v2 + 1;
#L0b6d7e.   goto L0b6d4c;
#L0b6d80.   if v3 == 0 then goto L0b6d8c;
#L0b6d84.   call temp:=  [|java:math:BigInt.toAscii|](v7, v8) @signature [|Ljava/math/BigInt;.toAscii:(Ljava/lang/String;I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6d8a.   v7:= temp  @type object;
#L0b6d8c.   return v7  @type object;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInt.copy|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.copy:()Ljava/math/BigInt;|] @Access  {
      local temp ;
        v0;
      
#L0b6da0.   v0:= new [|java:math:BigInt|];
#L0b6da4.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6daa.   call temp:=  [|java:math:BigInt.putCopy|](v0, v1) @signature [|Ljava/math/BigInt;.putCopy:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b6db0.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:math:BigInt.decString|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.decString:()Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
      
#L0b6dc4.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6dc8.   call temp:=  [|java:math:NativeBN.BN_bn2dec|](v0) @signature [|Ljava/math/NativeBN;.BN_bn2dec:(I)Ljava/lang/String;|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6dce.   v0:= temp  @type object;
#L0b6dd0.   return v0  @type object;

   }
    procedure [|void|] [|java:math:BigInt.finalize|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0b6de4.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6de8.   if v0 == 0 then goto L0b6dfc;
#L0b6dec.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6df0.   call temp:=  [|java:math:NativeBN.BN_free|](v0) @signature [|Ljava/math/NativeBN;.BN_free:(I)V|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6df6.   v0:= 0  @length 4;
#L0b6df8.   v1.[|java:math:BigInt.bignum|]  := v0;
#L0b6dfc.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L0b6e02.   return @void ;
#L0b6e04.   v0:= Exception  @type object;
#L0b6e06.   call temp:=  [|java:lang:Object.finalize|](v1) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L0b6e0c.   throw v0;
  catch  [|any|] @[L0b6de4..L0b6dfc] goto L0b6e04;

   }
    procedure [|int|] [|java:math:BigInt.getNativeBIGNUM|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.getNativeBIGNUM:()I|] @Access  {
      local temp ;
        v0;
      
#L0b6e2c.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6e30.   return v0;

   }
    procedure [|java:lang:String|] [|java:math:BigInt.hexString|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.hexString:()Ljava/lang/String;|] @Access  {
      local temp ;
        v0;
      
#L0b6e44.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6e48.   call temp:=  [|java:math:NativeBN.BN_bn2hex|](v0) @signature [|Ljava/math/NativeBN;.BN_bn2hex:(I)Ljava/lang/String;|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6e4e.   v0:= temp  @type object;
#L0b6e50.   return v0  @type object;

   }
    procedure [|boolean|] [|java:math:BigInt.isBitSet|] ([|java:math:BigInt|] v1 @type (this), [|int|] v2) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.isBitSet:(I)Z|] @Access  {
      local temp ;
        v0;
      
#L0b6e64.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6e68.   call temp:=  [|java:math:NativeBN.BN_is_bit_set|](v0, v2) @signature [|Ljava/math/NativeBN;.BN_is_bit_set:(II)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6e6e.   v0:= temp;
#L0b6e70.   return v0;

   }
    procedure [|boolean|] [|java:math:BigInt.isPrime|] ([|java:math:BigInt|] v2 @type (this), [|int|] v3) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.isPrime:(I)Z|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0b6e84.   v0:= v2.[|java:math:BigInt.bignum|] ;
#L0b6e88.   v1:= 0  @length 4;
#L0b6e8a.   call temp:=  [|java:math:NativeBN.BN_is_prime_ex|](v0, v3, v1) @signature [|Ljava/math/NativeBN;.BN_is_prime_ex:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6e90.   v0:= temp;
#L0b6e92.   return v0;

   }
    procedure [|int|][] [|java:math:BigInt.littleEndianIntsMagnitude|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.littleEndianIntsMagnitude:()[I|] @Access  {
      local temp ;
        v0;
      
#L0b6ea4.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6ea8.   call temp:=  [|java:math:NativeBN.bn2litEndInts|](v0) @signature [|Ljava/math/NativeBN;.bn2litEndInts:(I)[I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6eae.   v0:= temp  @type object;
#L0b6eb0.   return v0  @type object;

   }
    procedure [|long|] [|java:math:BigInt.longInt|] ([|java:math:BigInt|] v2 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.longInt:()J|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0b6ec4.   v0:= v2.[|java:math:BigInt.bignum|] ;
#L0b6ec8.   call temp:=  [|java:math:NativeBN.longInt|](v0) @signature [|Ljava/math/NativeBN;.longInt:(I)J|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6ece.   v0:= temp  @type wide;
#L0b6ed0.   return v0  @type wide;

   }
    procedure [|void|] [|java:math:BigInt.multiplyByPositiveInt|] ([|java:math:BigInt|] v1 @type (this), [|int|] v2) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.multiplyByPositiveInt:(I)V|] @Access  {
      local temp ;
        v0;
      
#L0b6ee4.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b6ee8.   call temp:=  [|java:math:NativeBN.BN_mul_word|](v0, v2) @signature [|Ljava/math/NativeBN;.BN_mul_word:(II)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6eee.   v0:= temp;
#L0b6ef0.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6ef6.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.putBigEndian|] ([|java:math:BigInt|] v2 @type (this), [|byte|][] v3, [|boolean|] v4) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.putBigEndian:([BZ)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0b6f08.   call temp:=  [|java:math:BigInt.makeValid|](v2) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6f0e.   v0:= v3.length;
#L0b6f10.   v1:= v2.[|java:math:BigInt.bignum|] ;
#L0b6f14.   call temp:=  [|java:math:NativeBN.BN_bin2bn|](v3, v0, v4, v1) @signature [|Ljava/math/NativeBN;.BN_bin2bn:([BIZI)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6f1a.   v0:= temp;
#L0b6f1c.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6f22.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.putBigEndianTwosComplement|] ([|java:math:BigInt|] v2 @type (this), [|byte|][] v3) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.putBigEndianTwosComplement:([B)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0b6f34.   call temp:=  [|java:math:BigInt.makeValid|](v2) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6f3a.   v0:= v3.length;
#L0b6f3c.   v1:= v2.[|java:math:BigInt.bignum|] ;
#L0b6f40.   call temp:=  [|java:math:NativeBN.twosComp2bn|](v3, v0, v1) @signature [|Ljava/math/NativeBN;.twosComp2bn:([BII)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6f46.   v0:= temp;
#L0b6f48.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6f4e.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.putCopy|] ([|java:math:BigInt|] v2 @type (this), [|java:math:BigInt|] v3 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.putCopy:(Ljava/math/BigInt;)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0b6f60.   call temp:=  [|java:math:BigInt.makeValid|](v2) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6f66.   v0:= v2.[|java:math:BigInt.bignum|] ;
#L0b6f6a.   v1:= v3.[|java:math:BigInt.bignum|] ;
#L0b6f6e.   call temp:=  [|java:math:NativeBN.BN_copy|](v0, v1) @signature [|Ljava/math/NativeBN;.BN_copy:(II)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6f74.   v0:= temp;
#L0b6f76.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6f7c.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.putDecString|] ([|java:math:BigInt|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.putDecString:(Ljava/lang/String;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b6f90.   v2:= 10  @length 16;
#L0b6f94.   call temp:=  [|java:math:BigInt.checkString|](v3, v4, v2) @signature [|Ljava/math/BigInt;.checkString:(Ljava/lang/String;I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b6f9a.   v0:= temp  @type object;
#L0b6f9c.   call temp:=  [|java:math:BigInt.makeValid|](v3) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6fa2.   v2:= v3.[|java:math:BigInt.bignum|] ;
#L0b6fa6.   call temp:=  [|java:math:NativeBN.BN_dec2bn|](v2, v0) @signature [|Ljava/math/NativeBN;.BN_dec2bn:(ILjava/lang/String;)I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b6fac.   v1:= temp;
#L0b6fae.   if v1 <= 0 then goto L0b6fd0;
#L0b6fb2.   v2:= 1  @length 4;
#L0b6fb4.   call temp:=  [|java:math:BigInt.Check|](v2) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b6fba.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b6fc0.   v2:= temp;
#L0b6fc2.   if v1 >= v2 then goto L0b6fd4;
#L0b6fc6.   call temp:=  [|java:math:BigInt.invalidBigInteger|](v3, v4) @signature [|Ljava/math/BigInt;.invalidBigInteger:(Ljava/lang/String;)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6fcc.   v2:= temp  @type object;
#L0b6fce.   throw v2;
#L0b6fd0.   v2:= 0  @length 4;
#L0b6fd2.   goto L0b6fb4;
#L0b6fd4.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.putHexString|] ([|java:math:BigInt|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.putHexString:(Ljava/lang/String;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b6fe8.   v2:= 16  @length 16;
#L0b6fec.   call temp:=  [|java:math:BigInt.checkString|](v3, v4, v2) @signature [|Ljava/math/BigInt;.checkString:(Ljava/lang/String;I)Ljava/lang/String;|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b6ff2.   v0:= temp  @type object;
#L0b6ff4.   call temp:=  [|java:math:BigInt.makeValid|](v3) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b6ffa.   v2:= v3.[|java:math:BigInt.bignum|] ;
#L0b6ffe.   call temp:=  [|java:math:NativeBN.BN_hex2bn|](v2, v0) @signature [|Ljava/math/NativeBN;.BN_hex2bn:(ILjava/lang/String;)I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b7004.   v1:= temp;
#L0b7006.   if v1 <= 0 then goto L0b7028;
#L0b700a.   v2:= 1  @length 4;
#L0b700c.   call temp:=  [|java:math:BigInt.Check|](v2) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b7012.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b7018.   v2:= temp;
#L0b701a.   if v1 >= v2 then goto L0b702c;
#L0b701e.   call temp:=  [|java:math:BigInt.invalidBigInteger|](v3, v4) @signature [|Ljava/math/BigInt;.invalidBigInteger:(Ljava/lang/String;)Ljava/lang/NumberFormatException;|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b7024.   v2:= temp  @type object;
#L0b7026.   throw v2;
#L0b7028.   v2:= 0  @length 4;
#L0b702a.   goto L0b700c;
#L0b702c.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.putLittleEndianInts|] ([|java:math:BigInt|] v2 @type (this), [|int|][] v3, [|boolean|] v4) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.putLittleEndianInts:([IZ)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0b7040.   call temp:=  [|java:math:BigInt.makeValid|](v2) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b7046.   v0:= v3.length;
#L0b7048.   v1:= v2.[|java:math:BigInt.bignum|] ;
#L0b704c.   call temp:=  [|java:math:NativeBN.litEndInts2bn|](v3, v0, v4, v1) @signature [|Ljava/math/NativeBN;.litEndInts2bn:([IIZI)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b7052.   v0:= temp;
#L0b7054.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b705a.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.putLongInt|] ([|java:math:BigInt|] v1 @type (this), [|long|] v2) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.putLongInt:(J)V|] @Access  {
      local temp ;
        v0;
      
#L0b706c.   call temp:=  [|java:math:BigInt.makeValid|](v1) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b7072.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b7076.   call temp:=  [|java:math:NativeBN.putLongInt|](v0, v2, v3) @signature [|Ljava/math/NativeBN;.putLongInt:(IJ)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b707c.   v0:= temp;
#L0b707e.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b7084.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.putULongInt|] ([|java:math:BigInt|] v1 @type (this), [|long|] v2, [|boolean|] v4) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.putULongInt:(JZ)V|] @Access  {
      local temp ;
        v0;
      
#L0b7098.   call temp:=  [|java:math:BigInt.makeValid|](v1) @signature [|Ljava/math/BigInt;.makeValid:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b709e.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b70a2.   call temp:=  [|java:math:NativeBN.putULongInt|](v0, v2, v3, v4) @signature [|Ljava/math/NativeBN;.putULongInt:(IJZ)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b70a8.   v0:= temp;
#L0b70aa.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b70b0.   return @void ;

   }
    procedure [|void|] [|java:math:BigInt.setSign|] ([|java:math:BigInt|] v2 @type (this), [|int|] v3) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.setSign:(I)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0b70c4.   if v3 <= 0 then goto L0b70d6;
#L0b70c8.   v0:= v2.[|java:math:BigInt.bignum|] ;
#L0b70cc.   v1:= 0  @length 4;
#L0b70ce.   call temp:=  [|java:math:NativeBN.BN_set_negative|](v0, v1) @signature [|Ljava/math/NativeBN;.BN_set_negative:(II)V|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b70d4.   return @void ;
#L0b70d6.   if v3 >= 0 then goto L0b70d4;
#L0b70da.   v0:= v2.[|java:math:BigInt.bignum|] ;
#L0b70de.   v1:= 1  @length 4;
#L0b70e0.   call temp:=  [|java:math:NativeBN.BN_set_negative|](v0, v1) @signature [|Ljava/math/NativeBN;.BN_set_negative:(II)V|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b70e6.   goto L0b70d4;

   }
    procedure [|void|] [|java:math:BigInt.shift|] ([|java:math:BigInt|] v2 @type (this), [|int|] v3) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.shift:(I)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0b70f8.   v0:= v2.[|java:math:BigInt.bignum|] ;
#L0b70fc.   v1:= v2.[|java:math:BigInt.bignum|] ;
#L0b7100.   call temp:=  [|java:math:NativeBN.BN_shift|](v0, v1, v3) @signature [|Ljava/math/NativeBN;.BN_shift:(III)Z|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b7106.   v0:= temp;
#L0b7108.   call temp:=  [|java:math:BigInt.Check|](v0) @signature [|Ljava/math/BigInt;.Check:(Z)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b710e.   return @void ;

   }
    procedure [|int|] [|java:math:BigInt.sign|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.sign:()I|] @Access  {
      local temp ;
        v0;
      
#L0b7120.   v0:= v1.[|java:math:BigInt.bignum|] ;
#L0b7124.   call temp:=  [|java:math:NativeBN.sign|](v0) @signature [|Ljava/math/NativeBN;.sign:(I)I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b712a.   v0:= temp;
#L0b712c.   return v0;

   }
    procedure [|java:lang:String|] [|java:math:BigInt.toString|] ([|java:math:BigInt|] v1 @type (this)) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b7140.   call temp:=  [|java:math:BigInt.decString|](v1) @signature [|Ljava/math/BigInt;.decString:()Ljava/lang/String;|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7146.   v0:= temp  @type object;
#L0b7148.   return v0  @type object;

   }
    procedure [|boolean|] [|java:math:BigInt.twosCompFitsIntoBytes|] ([|java:math:BigInt|] v2 @type (this), [|int|] v3) @owner [|java:math:BigInt|] @signature [|Ljava/math/BigInt;.twosCompFitsIntoBytes:(I)Z|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0b715c.   v1:= v2.[|java:math:BigInt.bignum|] ;
#L0b7160.   call temp:=  [|java:math:NativeBN.bitLength|](v1) @signature [|Ljava/math/NativeBN;.bitLength:(I)I|] @classDescriptor [|java:math:NativeBN|] @type static;
#L0b7166.   v1:= temp;
#L0b7168.   v1:= v1 + 7;
#L0b716c.   v0:= v1 / 8;
#L0b7170.   if v0 > v3 then goto L0b7178;
#L0b7174.   v1:= 1  @length 4;
#L0b7176.   return v1;
#L0b7178.   v1:= 0  @length 4;
#L0b717a.   goto L0b7176;

   }
record [|java:math:BigInteger|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Number|], [|java:lang:Comparable|], [|java:io:Serializable|] {
      [|java:math:BigInt|] [|java:math:BigInteger.bigInt|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|][] [|java:math:BigInteger.digits|]    @AccessFlag TRANSIENT;
      [|int|] [|java:math:BigInteger.firstNonzeroDigit|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:math:BigInteger.hashCode|]    @AccessFlag PRIVATE_TRANSIENT;
      [|boolean|] [|java:math:BigInteger.javaIsValid|]    @AccessFlag PRIVATE_TRANSIENT;
      [|byte|][] [|java:math:BigInteger.magnitude|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:math:BigInteger.nativeIsValid|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:math:BigInteger.numberLength|]    @AccessFlag TRANSIENT;
      [|int|] [|java:math:BigInteger.sign|]    @AccessFlag TRANSIENT;
      [|int|] [|java:math:BigInteger.signum|]    @AccessFlag PRIVATE;
   }
      global [|java:math:BigInteger|] @@[|java:math:BigInteger.MINUS_ONE|]    @AccessFlag STATIC_FINAL;
      global [|java:math:BigInteger|] @@[|java:math:BigInteger.ONE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:math:BigInteger|][] @@[|java:math:BigInteger.SMALL_VALUES|]    @AccessFlag STATIC_FINAL;
      global [|java:math:BigInteger|] @@[|java:math:BigInteger.TEN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:math:BigInteger|] @@[|java:math:BigInteger.ZERO|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:math:BigInteger.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:math:BigInteger.<clinit>|] () @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b718c.   v6:= 1  @length wide16;
#L0b7190.   v3:= 0  @length 4;
#L0b7192.   v5:= 1  @length 4;
#L0b7194.   v0:= new [|java:math:BigInteger|];
#L0b7198.   v1:= 0  @length wide16;
#L0b719c.   call temp:=  [|java:math:BigInteger.<init>|](v0, v3, v1, v2) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b71a2.   @@[|java:math:BigInteger.ZERO|] := v0  @type object;
#L0b71a6.   v0:= new [|java:math:BigInteger|];
#L0b71aa.   call temp:=  [|java:math:BigInteger.<init>|](v0, v5, v6, v7) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b71b0.   @@[|java:math:BigInteger.ONE|] := v0  @type object;
#L0b71b4.   v0:= new [|java:math:BigInteger|];
#L0b71b8.   v1:= 10  @length wide16;
#L0b71bc.   call temp:=  [|java:math:BigInteger.<init>|](v0, v5, v1, v2) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b71c2.   @@[|java:math:BigInteger.TEN|] := v0  @type object;
#L0b71c6.   v0:= new [|java:math:BigInteger|];
#L0b71ca.   v1:= -1  @length 4;
#L0b71cc.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1, v6, v7) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b71d2.   @@[|java:math:BigInteger.MINUS_ONE|] := v0  @type object;
#L0b71d6.   v0:= 11  @length 16;
#L0b71da.   v0:= new [|java:math:BigInteger|][v0];
#L0b71de.   v1:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0b71e2.   v0[v3]:= v1  @type object;
#L0b71e6.   v1:= @@[|java:math:BigInteger.ONE|]   @type object;
#L0b71ea.   v0[v5]:= v1  @type object;
#L0b71ee.   v1:= 2  @length 4;
#L0b71f0.   v2:= new [|java:math:BigInteger|];
#L0b71f4.   v3:= 2  @length wide16;
#L0b71f8.   call temp:=  [|java:math:BigInteger.<init>|](v2, v5, v3, v4) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b71fe.   v0[v1]:= v2  @type object;
#L0b7202.   v1:= 3  @length 4;
#L0b7204.   v2:= new [|java:math:BigInteger|];
#L0b7208.   v3:= 3  @length wide16;
#L0b720c.   call temp:=  [|java:math:BigInteger.<init>|](v2, v5, v3, v4) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7212.   v0[v1]:= v2  @type object;
#L0b7216.   v1:= 4  @length 4;
#L0b7218.   v2:= new [|java:math:BigInteger|];
#L0b721c.   v3:= 4  @length wide16;
#L0b7220.   call temp:=  [|java:math:BigInteger.<init>|](v2, v5, v3, v4) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7226.   v0[v1]:= v2  @type object;
#L0b722a.   v1:= 5  @length 4;
#L0b722c.   v2:= new [|java:math:BigInteger|];
#L0b7230.   v3:= 5  @length wide16;
#L0b7234.   call temp:=  [|java:math:BigInteger.<init>|](v2, v5, v3, v4) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b723a.   v0[v1]:= v2  @type object;
#L0b723e.   v1:= 6  @length 4;
#L0b7240.   v2:= new [|java:math:BigInteger|];
#L0b7244.   v3:= 6  @length wide16;
#L0b7248.   call temp:=  [|java:math:BigInteger.<init>|](v2, v5, v3, v4) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b724e.   v0[v1]:= v2  @type object;
#L0b7252.   v1:= 7  @length 4;
#L0b7254.   v2:= new [|java:math:BigInteger|];
#L0b7258.   v3:= 7  @length wide16;
#L0b725c.   call temp:=  [|java:math:BigInteger.<init>|](v2, v5, v3, v4) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7262.   v0[v1]:= v2  @type object;
#L0b7266.   v1:= 8  @length 16;
#L0b726a.   v2:= new [|java:math:BigInteger|];
#L0b726e.   v3:= 8  @length wide16;
#L0b7272.   call temp:=  [|java:math:BigInteger.<init>|](v2, v5, v3, v4) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7278.   v0[v1]:= v2  @type object;
#L0b727c.   v1:= 9  @length 16;
#L0b7280.   v2:= new [|java:math:BigInteger|];
#L0b7284.   v3:= 9  @length wide16;
#L0b7288.   call temp:=  [|java:math:BigInteger.<init>|](v2, v5, v3, v4) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b728e.   v0[v1]:= v2  @type object;
#L0b7292.   v1:= 10  @length 16;
#L0b7296.   v2:= @@[|java:math:BigInteger.TEN|]   @type object;
#L0b729a.   v0[v1]:= v2  @type object;
#L0b729e.   @@[|java:math:BigInteger.SMALL_VALUES|] := v0  @type object;
#L0b72a2.   return @void ;

   }
    procedure [|void|] [|java:math:BigInteger.<init>|] ([|java:math:BigInteger|] v3 @type (this), [|int|] v4, [|int|] v5, [|java:util:Random|] v6 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<init>:(IILjava/util/Random;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b72b4.   v1:= 0  @length 4;
#L0b72b6.   call temp:=  [|java:lang:Number.<init>|](v3) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b72bc.   v3.[|java:math:BigInteger.nativeIsValid|]  := v1 @boolean;
#L0b72c0.   v3.[|java:math:BigInteger.javaIsValid|]  := v1 @boolean;
#L0b72c4.   v0:= -2  @length 4;
#L0b72c6.   v3.[|java:math:BigInteger.firstNonzeroDigit|]  := v0;
#L0b72ca.   v3.[|java:math:BigInteger.hashCode|]  := v1;
#L0b72ce.   v0:= 2  @length 4;
#L0b72d0.   if v4 >= v0 then goto L0b7306;
#L0b72d4.   v0:= new [|java:lang:ArithmeticException|];
#L0b72d8.   v1:= new [|java:lang:StringBuilder|];
#L0b72dc.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b72e2.   v2:= "bitLength < 2: " @type (object, string);
#L0b72e6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b72ec.   v1:= temp  @type object;
#L0b72ee.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b72f4.   v1:= temp  @type object;
#L0b72f6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b72fc.   v1:= temp  @type object;
#L0b72fe.   call temp:=  [|java:lang:ArithmeticException.<init>|](v0, v1) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b7304.   throw v0;
#L0b7306.   call temp:=  [|java:math:BigInt.generatePrimeDefault|](v4) @signature [|Ljava/math/BigInt;.generatePrimeDefault:(I)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b730c.   v0:= temp  @type object;
#L0b730e.   call temp:=  [|java:math:BigInteger.setBigInt|](v3, v0) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7314.   return @void ;

   }
    procedure [|void|] [|java:math:BigInteger.<init>|] ([|java:math:BigInteger|] v2 @type (this), [|int|] v3, [|int|] v4, [|int|][] v5) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b7328.   v1:= 0  @length 4;
#L0b732a.   call temp:=  [|java:lang:Number.<init>|](v2) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b7330.   v2.[|java:math:BigInteger.nativeIsValid|]  := v1 @boolean;
#L0b7334.   v2.[|java:math:BigInteger.javaIsValid|]  := v1 @boolean;
#L0b7338.   v0:= -2  @length 4;
#L0b733a.   v2.[|java:math:BigInteger.firstNonzeroDigit|]  := v0;
#L0b733e.   v2.[|java:math:BigInteger.hashCode|]  := v1;
#L0b7342.   call temp:=  [|java:math:BigInteger.setJavaRepresentation|](v2, v3, v4, v5) @signature [|Ljava/math/BigInteger;.setJavaRepresentation:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7348.   return @void ;

   }
    procedure [|void|] [|java:math:BigInteger.<init>|] ([|java:math:BigInteger|] v3 @type (this), [|int|] v4, [|long|] v5) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b735c.   v1:= 0  @length 4;
#L0b735e.   call temp:=  [|java:lang:Number.<init>|](v3) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b7364.   v3.[|java:math:BigInteger.nativeIsValid|]  := v1 @boolean;
#L0b7368.   v3.[|java:math:BigInteger.javaIsValid|]  := v1 @boolean;
#L0b736c.   v2:= -2  @length 4;
#L0b736e.   v3.[|java:math:BigInteger.firstNonzeroDigit|]  := v2;
#L0b7372.   v3.[|java:math:BigInteger.hashCode|]  := v1;
#L0b7376.   v0:= new [|java:math:BigInt|];
#L0b737a.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b7380.   if v4 >= 0 then goto L0b7386;
#L0b7384.   v1:= 1  @length 4;
#L0b7386.   call temp:=  [|java:math:BigInt.putULongInt|](v0, v5, v6, v1) @signature [|Ljava/math/BigInt;.putULongInt:(JZ)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b738c.   call temp:=  [|java:math:BigInteger.setBigInt|](v3, v0) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7392.   return @void ;

   }
    procedure [|void|] [|java:math:BigInteger.<init>|] ([|java:math:BigInteger|] v8 @type (this), [|int|] v9, [|java:util:Random|] v10 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<init>:(ILjava/util/Random;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b73a4.   v7:= 1  @length 4;
#L0b73a6.   v5:= 0  @length 4;
#L0b73a8.   call temp:=  [|java:lang:Number.<init>|](v8) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b73ae.   v8.[|java:math:BigInteger.nativeIsValid|]  := v5 @boolean;
#L0b73b2.   v8.[|java:math:BigInteger.javaIsValid|]  := v5 @boolean;
#L0b73b6.   v4:= -2  @length 4;
#L0b73b8.   v8.[|java:math:BigInteger.firstNonzeroDigit|]  := v4;
#L0b73bc.   v8.[|java:math:BigInteger.hashCode|]  := v5;
#L0b73c0.   if v9 >= 0 then goto L0b73f6;
#L0b73c4.   v4:= new [|java:lang:IllegalArgumentException|];
#L0b73c8.   v5:= new [|java:lang:StringBuilder|];
#L0b73cc.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b73d2.   v6:= "numBits < 0: " @type (object, string);
#L0b73d6.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b73dc.   v5:= temp  @type object;
#L0b73de.   call temp:=  [|java:lang:StringBuilder.append|](v5, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b73e4.   v5:= temp  @type object;
#L0b73e6.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b73ec.   v5:= temp  @type object;
#L0b73ee.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0b73f4.   throw v4;
#L0b73f6.   if v9 != 0 then goto L0b740e;
#L0b73fa.   v4:= new [|int|][v7];
#L0b73fe.   v4[v5]:= v5;
#L0b7402.   call temp:=  [|java:math:BigInteger.setJavaRepresentation|](v8, v5, v7, v4) @signature [|Ljava/math/BigInteger;.setJavaRepresentation:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7408.   v8.[|java:math:BigInteger.javaIsValid|]  := v7 @boolean;
#L0b740c.   return @void ;
#L0b740e.   v3:= 1  @length 4;
#L0b7410.   v4:= v9 + 31;
#L0b7414.   v2:= v4 ^> 5;
#L0b7418.   v0:= new [|int|][v2];
#L0b741c.   v1:= 0  @length 4;
#L0b741e.   if v1 >= v2 then goto L0b7434;
#L0b7422.   call temp:=  [|java:util:Random.nextInt|](v10) @signature [|Ljava/util/Random;.nextInt:()I|] @classDescriptor [|java:util:Random|] @type virtual;
#L0b7428.   v4:= temp;
#L0b742a.   v0[v1]:= v4;
#L0b742e.   v1:= v1 + 1;
#L0b7432.   goto L0b741e;
#L0b7434.   v4:= v2 + -1;
#L0b7438.   v5:= v0[v4];
#L0b743c.   v6:= -v9  @type int;
#L0b743e.   v6:= v6 ^& 31;
#L0b7442.   v5:= v5 ^>> v6  @type int;
#L0b7444.   v0[v4]:= v5;
#L0b7448.   call temp:=  [|java:math:BigInteger.setJavaRepresentation|](v8, v3, v2, v0) @signature [|Ljava/math/BigInteger;.setJavaRepresentation:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b744e.   goto L0b7408;

   }
    procedure [|void|] [|java:math:BigInteger.<init>|] ([|java:math:BigInteger|] v8 @type (this), [|int|] v9, [|byte|][] v10) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<init>:(I[B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b7460.   v5:= 1  @length 4;
#L0b7462.   v6:= 0  @length 4;
#L0b7464.   call temp:=  [|java:lang:Number.<init>|](v8) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b746a.   v8.[|java:math:BigInteger.nativeIsValid|]  := v6 @boolean;
#L0b746e.   v8.[|java:math:BigInteger.javaIsValid|]  := v6 @boolean;
#L0b7472.   v7:= -2  @length 4;
#L0b7474.   v8.[|java:math:BigInteger.firstNonzeroDigit|]  := v7;
#L0b7478.   v8.[|java:math:BigInteger.hashCode|]  := v6;
#L0b747c.   if v10 != 0 then goto L0b7490;
#L0b7480.   v5:= new [|java:lang:NullPointerException|];
#L0b7484.   v6:= "magnitude == null" @type (object, string);
#L0b7488.   call temp:=  [|java:lang:NullPointerException.<init>|](v5, v6) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b748e.   throw v5;
#L0b7490.   v7:= -1  @length 4;
#L0b7492.   if v9 < v7 then goto L0b749a;
#L0b7496.   if v9 <= v5 then goto L0b74cc;
#L0b749a.   v5:= new [|java:lang:NumberFormatException|];
#L0b749e.   v6:= new [|java:lang:StringBuilder|];
#L0b74a2.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b74a8.   v7:= "Invalid signum: " @type (object, string);
#L0b74ac.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b74b2.   v6:= temp  @type object;
#L0b74b4.   call temp:=  [|java:lang:StringBuilder.append|](v6, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b74ba.   v6:= temp  @type object;
#L0b74bc.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b74c2.   v6:= temp  @type object;
#L0b74c4.   call temp:=  [|java:lang:NumberFormatException.<init>|](v5, v6) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b74ca.   throw v5;
#L0b74cc.   if v9 != 0 then goto L0b74f8;
#L0b74d0.   v0:= v10  @type object;
#L0b74d2.   v4:= v0.length;
#L0b74d4.   v3:= 0  @length 4;
#L0b74d6.   if v3 >= v4 then goto L0b74f8;
#L0b74da.   v2:= v0[v3]  @byte;
#L0b74de.   if v2 == 0 then goto L0b74f2;
#L0b74e2.   v5:= new [|java:lang:NumberFormatException|];
#L0b74e6.   v6:= "signum-magnitude mismatch" @type (object, string);
#L0b74ea.   call temp:=  [|java:lang:NumberFormatException.<init>|](v5, v6) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b74f0.   throw v5;
#L0b74f2.   v3:= v3 + 1;
#L0b74f6.   goto L0b74d6;
#L0b74f8.   v1:= new [|java:math:BigInt|];
#L0b74fc.   call temp:=  [|java:math:BigInt.<init>|](v1) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b7502.   if v9 >= 0 then goto L0b7514;
#L0b7506.   call temp:=  [|java:math:BigInt.putBigEndian|](v1, v10, v5) @signature [|Ljava/math/BigInt;.putBigEndian:([BZ)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b750c.   call temp:=  [|java:math:BigInteger.setBigInt|](v8, v1) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7512.   return @void ;
#L0b7514.   v5:= v6;
#L0b7516.   goto L0b7506;

   }
    procedure [|void|] [|java:math:BigInteger.<init>|] ([|java:math:BigInteger|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7528.   v2:= 0  @length 4;
#L0b752a.   call temp:=  [|java:lang:Number.<init>|](v3) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b7530.   v3.[|java:math:BigInteger.nativeIsValid|]  := v2 @boolean;
#L0b7534.   v3.[|java:math:BigInteger.javaIsValid|]  := v2 @boolean;
#L0b7538.   v1:= -2  @length 4;
#L0b753a.   v3.[|java:math:BigInteger.firstNonzeroDigit|]  := v1;
#L0b753e.   v3.[|java:math:BigInteger.hashCode|]  := v2;
#L0b7542.   v0:= new [|java:math:BigInt|];
#L0b7546.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b754c.   call temp:=  [|java:math:BigInt.putDecString|](v0, v4) @signature [|Ljava/math/BigInt;.putDecString:(Ljava/lang/String;)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7552.   call temp:=  [|java:math:BigInteger.setBigInt|](v3, v0) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7558.   return @void ;

   }
    procedure [|void|] [|java:math:BigInteger.<init>|] ([|java:math:BigInteger|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|int|] v6) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<init>:(Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b756c.   v2:= 0  @length 4;
#L0b756e.   call temp:=  [|java:lang:Number.<init>|](v4) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b7574.   v4.[|java:math:BigInteger.nativeIsValid|]  := v2 @boolean;
#L0b7578.   v4.[|java:math:BigInteger.javaIsValid|]  := v2 @boolean;
#L0b757c.   v1:= -2  @length 4;
#L0b757e.   v4.[|java:math:BigInteger.firstNonzeroDigit|]  := v1;
#L0b7582.   v4.[|java:math:BigInteger.hashCode|]  := v2;
#L0b7586.   if v5 != 0 then goto L0b759a;
#L0b758a.   v1:= new [|java:lang:NullPointerException|];
#L0b758e.   v2:= "value == null" @type (object, string);
#L0b7592.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0b7598.   throw v1;
#L0b759a.   v1:= 10  @length 16;
#L0b759e.   if v6 != v1 then goto L0b75ba;
#L0b75a2.   v0:= new [|java:math:BigInt|];
#L0b75a6.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b75ac.   call temp:=  [|java:math:BigInt.putDecString|](v0, v5) @signature [|Ljava/math/BigInt;.putDecString:(Ljava/lang/String;)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b75b2.   call temp:=  [|java:math:BigInteger.setBigInt|](v4, v0) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b75b8.   return @void ;
#L0b75ba.   v1:= 16  @length 16;
#L0b75be.   if v6 != v1 then goto L0b75da;
#L0b75c2.   v0:= new [|java:math:BigInt|];
#L0b75c6.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b75cc.   call temp:=  [|java:math:BigInt.putHexString|](v0, v5) @signature [|Ljava/math/BigInt;.putHexString:(Ljava/lang/String;)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b75d2.   call temp:=  [|java:math:BigInteger.setBigInt|](v4, v0) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b75d8.   goto L0b75b8;
#L0b75da.   v1:= 2  @length 4;
#L0b75dc.   if v6 < v1 then goto L0b75e8;
#L0b75e0.   v1:= 36  @length 16;
#L0b75e4.   if v6 <= v1 then goto L0b761a;
#L0b75e8.   v1:= new [|java:lang:NumberFormatException|];
#L0b75ec.   v2:= new [|java:lang:StringBuilder|];
#L0b75f0.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b75f6.   v3:= "Invalid radix: " @type (object, string);
#L0b75fa.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b7600.   v2:= temp  @type object;
#L0b7602.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b7608.   v2:= temp  @type object;
#L0b760a.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b7610.   v2:= temp  @type object;
#L0b7612.   call temp:=  [|java:lang:NumberFormatException.<init>|](v1, v2) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b7618.   throw v1;
#L0b761a.   call temp:=  [|java:lang:String.isEmpty|](v5) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b7620.   v1:= temp;
#L0b7622.   if v1 == 0 then goto L0b7636;
#L0b7626.   v1:= new [|java:lang:NumberFormatException|];
#L0b762a.   v2:= "value.isEmpty()" @type (object, string);
#L0b762e.   call temp:=  [|java:lang:NumberFormatException.<init>|](v1, v2) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b7634.   throw v1;
#L0b7636.   call temp:=  [|java:math:BigInteger.parseFromString|](v4, v5, v6) @signature [|Ljava/math/BigInteger;.parseFromString:(Ljava/math/BigInteger;Ljava/lang/String;I)V|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b763c.   goto L0b75b8;

   }
    procedure [|void|] [|java:math:BigInteger.<init>|] ([|java:math:BigInteger|] v2 @type (this), [|java:math:BigInt|] v3 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0b7650.   v1:= 0  @length 4;
#L0b7652.   call temp:=  [|java:lang:Number.<init>|](v2) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b7658.   v2.[|java:math:BigInteger.nativeIsValid|]  := v1 @boolean;
#L0b765c.   v2.[|java:math:BigInteger.javaIsValid|]  := v1 @boolean;
#L0b7660.   v0:= -2  @length 4;
#L0b7662.   v2.[|java:math:BigInteger.firstNonzeroDigit|]  := v0;
#L0b7666.   v2.[|java:math:BigInteger.hashCode|]  := v1;
#L0b766a.   if v3 == 0 then goto L0b767a;
#L0b766e.   call temp:=  [|java:math:BigInt.getNativeBIGNUM|](v3) @signature [|Ljava/math/BigInt;.getNativeBIGNUM:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7674.   v0:= temp;
#L0b7676.   if v0 != 0 then goto L0b7686;
#L0b767a.   v0:= new [|java:lang:AssertionError|];
#L0b767e.   call temp:=  [|java:lang:AssertionError.<init>|](v0) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0b7684.   throw v0;
#L0b7686.   call temp:=  [|java:math:BigInteger.setBigInt|](v2, v3) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b768c.   return @void ;

   }
    procedure [|void|] [|java:math:BigInteger.<init>|] ([|java:math:BigInteger|] v3 @type (this), [|byte|][] v4) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.<init>:([B)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b76a0.   v2:= 0  @length 4;
#L0b76a2.   call temp:=  [|java:lang:Number.<init>|](v3) @signature [|Ljava/lang/Number;.<init>:()V|] @classDescriptor [|java:lang:Number|] @type direct;
#L0b76a8.   v3.[|java:math:BigInteger.nativeIsValid|]  := v2 @boolean;
#L0b76ac.   v3.[|java:math:BigInteger.javaIsValid|]  := v2 @boolean;
#L0b76b0.   v1:= -2  @length 4;
#L0b76b2.   v3.[|java:math:BigInteger.firstNonzeroDigit|]  := v1;
#L0b76b6.   v3.[|java:math:BigInteger.hashCode|]  := v2;
#L0b76ba.   v1:= v4.length;
#L0b76bc.   if v1 != 0 then goto L0b76d0;
#L0b76c0.   v1:= new [|java:lang:NumberFormatException|];
#L0b76c4.   v2:= "value.length == 0" @type (object, string);
#L0b76c8.   call temp:=  [|java:lang:NumberFormatException.<init>|](v1, v2) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0b76ce.   throw v1;
#L0b76d0.   v0:= new [|java:math:BigInt|];
#L0b76d4.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b76da.   call temp:=  [|java:math:BigInt.putBigEndianTwosComplement|](v0, v4) @signature [|Ljava/math/BigInt;.putBigEndianTwosComplement:([B)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b76e0.   call temp:=  [|java:math:BigInteger.setBigInt|](v3, v0) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b76e6.   return @void ;

   }
    procedure [|int|] [|java:math:BigInteger.inplaceAdd|] ([|int|][] v7, [|int|] v8, [|int|] v9) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.inplaceAdd:([III)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b76f8.   v5:= 0.000000L  @length wide;
#L0b7702.   v3:= (long)v9  @type i2l;
#L0b7704.   v0:= v3 ^& v5  @type long;
#L0b7708.   v2:= 0  @length 4;
#L0b770a.   v3:= 0  @length wide16;
#L0b770e.   v3:= cmp(v0,v3);
#L0b7712.   if v3 == 0 then goto L0b7736;
#L0b7716.   if v2 >= v8 then goto L0b7736;
#L0b771a.   v3:= v7[v2];
#L0b771e.   v3:= (long)v3  @type i2l;
#L0b7720.   v3:= v3 ^& v5  @type long;
#L0b7722.   v0:= v0 + v3  @type long;
#L0b7724.   v3:= (int)v0  @type l2i;
#L0b7726.   v7[v2]:= v3;
#L0b772a.   v3:= 32  @length 16;
#L0b772e.   v0:= v0 ^> v3  @type long;
#L0b7730.   v2:= v2 + 1;
#L0b7734.   goto L0b770a;
#L0b7736.   v3:= (int)v0  @type l2i;
#L0b7738.   return v3;

   }
    procedure [|int|] [|java:math:BigInteger.multiplyByInt|] ([|int|][] v9, [|int|][] v10, [|int|] v11, [|int|] v12) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.multiplyByInt:([I[III)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0b774c.   v7:= 0.000000L  @length wide;
#L0b7756.   v0:= 0  @length wide16;
#L0b775a.   v2:= 0  @length 4;
#L0b775c.   if v2 >= v11 then goto L0b7782;
#L0b7760.   v3:= v10[v2];
#L0b7764.   v3:= (long)v3  @type i2l;
#L0b7766.   v3:= v3 ^& v7  @type long;
#L0b7768.   v5:= (long)v12  @type i2l;
#L0b776a.   v5:= v5 ^& v7  @type long;
#L0b776c.   v3:= v3 * v5  @type long;
#L0b776e.   v0:= v0 + v3  @type long;
#L0b7770.   v3:= (int)v0  @type l2i;
#L0b7772.   v9[v2]:= v3;
#L0b7776.   v3:= 32  @length 16;
#L0b777a.   v0:= v0 ^>> v3  @type long;
#L0b777c.   v2:= v2 + 1;
#L0b7780.   goto L0b775c;
#L0b7782.   v3:= (int)v0  @type l2i;
#L0b7784.   return v3;

   }
    procedure [|void|] [|java:math:BigInteger.parseFromString|] ([|java:math:BigInteger|] v20 @type (object), [|java:lang:String|] v21 @type (object), [|int|] v22) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.parseFromString:(Ljava/math/BigInteger;Ljava/lang/String;I)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
      
#L0b7798.   call temp:=  [|java:lang:String.length|](v21) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b779e.   v14:= temp;
#L0b77a0.   v9:= v14;
#L0b77a2.   v18:= 0  @length 16;
#L0b77a6.   v0:= v21  @type object;
#L0b77aa.   v1:= v18;
#L0b77ae.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b77b4.   v18:= temp;
#L0b77b6.   v19:= 45  @length 16;
#L0b77ba.   v0:= v18;
#L0b77be.   v1:= v19;
#L0b77c2.   if v0 != v1 then goto L0b785a;
#L0b77c6.   v12:= -1  @length 4;
#L0b77c8.   v13:= 1  @length 4;
#L0b77ca.   v14:= v14 + -1;
#L0b77ce.   v18:= @@[|java:math:Conversion.digitFitInInt|]   @type object;
#L0b77d2.   v5:= v18[v22];
#L0b77d6.   v4:= v14 / v5  @type int;
#L0b77da.   v17:= v14 % v5  @type int;
#L0b77de.   if v17 == 0 then goto L0b77e6;
#L0b77e2.   v4:= v4 + 1;
#L0b77e6.   v8:= new [|int|][v4];
#L0b77ea.   v18:= @@[|java:math:Conversion.bigRadices|]   @type object;
#L0b77ee.   v19:= v22 + -2;
#L0b77f2.   v2:= v18[v19];
#L0b77f6.   v6:= 0  @length 4;
#L0b77f8.   if v17 != 0 then goto L0b7800;
#L0b77fc.   v17:= v5;
#L0b7800.   v15:= v13 + v17  @type int;
#L0b7804.   v16:= v13;
#L0b7808.   v7:= v6;
#L0b780a.   v0:= v16;
#L0b780e.   if v0 >= v9 then goto L0b7860;
#L0b7812.   v0:= v21  @type object;
#L0b7816.   v1:= v16;
#L0b781a.   call temp:=  [|java:lang:String.substring|](v0, v1, v15) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0b7820.   v18:= temp  @type object;
#L0b7822.   v0:= v18  @type object;
#L0b7826.   v1:= v22;
#L0b782a.   call temp:=  [|java:lang:Integer.parseInt|](v0, v1) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b7830.   v3:= temp;
#L0b7832.   call temp:=  [|java:math:BigInteger.multiplyByInt|](v8, v8, v7, v2) @signature [|Ljava/math/BigInteger;.multiplyByInt:([I[III)I|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b7838.   v10:= temp;
#L0b783a.   call temp:=  [|java:math:BigInteger.inplaceAdd|](v8, v7, v3) @signature [|Ljava/math/BigInteger;.inplaceAdd:([III)I|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0b7840.   v18:= temp;
#L0b7842.   v10:= v10 + v18  @type int;
#L0b7846.   v6:= v7 + 1;
#L0b784a.   v8[v7]:= v10;
#L0b784e.   v16:= v15;
#L0b7852.   v15:= v16 + v5  @type int;
#L0b7856.   v7:= v6;
#L0b7858.   goto L0b780a;
#L0b785a.   v12:= 1  @length 4;
#L0b785c.   v13:= 0  @length 4;
#L0b785e.   goto L0b77ce;
#L0b7860.   v11:= v7;
#L0b7862.   v0:= v20  @type object;
#L0b7866.   call temp:=  [|java:math:BigInteger.setJavaRepresentation|](v0, v12, v11, v8) @signature [|Ljava/math/BigInteger;.setJavaRepresentation:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b786c.   return @void ;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.probablePrime|] ([|int|] v2, [|java:util:Random|] v3 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.probablePrime:(ILjava/util/Random;)Ljava/math/BigInteger;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0b7880.   v0:= new [|java:math:BigInteger|];
#L0b7884.   v1:= 100  @length 16;
#L0b7888.   call temp:=  [|java:math:BigInteger.<init>|](v0, v2, v1, v3) @signature [|Ljava/math/BigInteger;.<init>:(IILjava/util/Random;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b788e.   return v0  @type object;

   }
    procedure [|void|] [|java:math:BigInteger.readObject|] ([|java:math:BigInteger|] v3 @type (this), [|java:io:ObjectInputStream|] v4 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b78a0.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v4) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0b78a6.   v0:= new [|java:math:BigInt|];
#L0b78aa.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b78b0.   v2:= v3.[|java:math:BigInteger.magnitude|]   @type object;
#L0b78b4.   v1:= v3.[|java:math:BigInteger.signum|] ;
#L0b78b8.   if v1 >= 0 then goto L0b78cc;
#L0b78bc.   v1:= 1  @length 4;
#L0b78be.   call temp:=  [|java:math:BigInt.putBigEndian|](v0, v2, v1) @signature [|Ljava/math/BigInt;.putBigEndian:([BZ)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b78c4.   call temp:=  [|java:math:BigInteger.setBigInt|](v3, v0) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b78ca.   return @void ;
#L0b78cc.   v1:= 0  @length 4;
#L0b78ce.   goto L0b78be;

   }
    procedure [|void|] [|java:math:BigInteger.setBigInt|] ([|java:math:BigInteger|] v1 @type (this), [|java:math:BigInt|] v2 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0b78e0.   v1.[|java:math:BigInteger.bigInt|]  := v2 @type object;
#L0b78e4.   v0:= 1  @length 4;
#L0b78e6.   v1.[|java:math:BigInteger.nativeIsValid|]  := v0 @boolean;
#L0b78ea.   return @void ;

   }
    procedure [|void|] [|java:math:BigInteger.setJavaRepresentation|] ([|java:math:BigInteger|] v2 @type (this), [|int|] v3, [|int|] v4, [|int|][] v5) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.setJavaRepresentation:(II[I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0b78fc.   if v4 <= 0 then goto L0b790c;
#L0b7900.   v4:= v4 + -1;
#L0b7904.   v1:= v5[v4];
#L0b7908.   if v1 == 0 then goto L0b78fc;
#L0b790c.   v0:= v4 + 1;
#L0b7910.   v1:= v5[v4];
#L0b7914.   if v1 != 0 then goto L0b791a;
#L0b7918.   v3:= 0  @length 4;
#L0b791a.   v2.[|java:math:BigInteger.sign|]  := v3;
#L0b791e.   v2.[|java:math:BigInteger.digits|]  := v5 @type object;
#L0b7922.   v2.[|java:math:BigInteger.numberLength|]  := v0;
#L0b7926.   v1:= 1  @length 4;
#L0b7928.   v2.[|java:math:BigInteger.javaIsValid|]  := v1 @boolean;
#L0b792c.   return @void ;

   }
    procedure [|byte|][] [|java:math:BigInteger.twosComplement|] ([|java:math:BigInteger|] v15 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.twosComplement:()[B|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L0b7940.   v14:= 1  @length 4;
#L0b7942.   v13:= 0  @length 4;
#L0b7944.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v15) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b794a.   v12:= v15.[|java:math:BigInteger.sign|] ;
#L0b794e.   if v12 != 0 then goto L0b795c;
#L0b7952.   v1:= new [|byte|][v14];
#L0b7956.   v1[v13]:= v13  @byte;
#L0b795a.   return v1  @type object;
#L0b795c.   v11:= v15  @type object;
#L0b795e.   call temp:=  [|java:math:BigInteger.bitLength|](v15) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7964.   v0:= temp;
#L0b7966.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v15) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b796c.   v10:= temp;
#L0b796e.   v12:= v0 ^> 3;
#L0b7972.   v3:= v12 + 1;
#L0b7976.   v1:= new [|byte|][v3];
#L0b797a.   v6:= 0  @length 4;
#L0b797c.   v2:= 4  @length 4;
#L0b797e.   v12:= v15.[|java:math:BigInteger.numberLength|] ;
#L0b7982.   v12:= v12 ^< 2;
#L0b7986.   v12:= v3 - v12  @type int;
#L0b798a.   if v12 != v14 then goto L0b79ea;
#L0b798e.   v12:= v15.[|java:math:BigInteger.sign|] ;
#L0b7992.   if v12 >= 0 then goto L0b79e6;
#L0b7996.   v12:= -1  @length 4;
#L0b7998.   v12:= (byte)v12  @type i2b;
#L0b799a.   v1[v13]:= v12  @byte;
#L0b799e.   v8:= 4  @length 4;
#L0b79a0.   v6:= v6 + 1;
#L0b79a4.   v5:= v10;
#L0b79a6.   v12:= v10 ^< 2;
#L0b79aa.   v3:= v3 - v12  @type int;
#L0b79ac.   v12:= v15.[|java:math:BigInteger.sign|] ;
#L0b79b0.   if v12 >= 0 then goto L0b7a32;
#L0b79b4.   v12:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0b79b8.   v12:= v12[v5];
#L0b79bc.   v4:= -v12  @type int;
#L0b79be.   v5:= v5 + 1;
#L0b79c2.   v12:= v15.[|java:math:BigInteger.numberLength|] ;
#L0b79c6.   if v5 != v12 then goto L0b79cc;
#L0b79ca.   v2:= v8;
#L0b79cc.   v9:= 0  @length 4;
#L0b79ce.   if v9 >= v2 then goto L0b79fa;
#L0b79d2.   v3:= v3 + -1;
#L0b79d6.   v12:= (byte)v4  @type i2b;
#L0b79d8.   v1[v3]:= v12  @byte;
#L0b79dc.   v9:= v9 + 1;
#L0b79e0.   v4:= v4 ^> 8;
#L0b79e4.   goto L0b79ce;
#L0b79e6.   v12:= v13;
#L0b79e8.   goto L0b7998;
#L0b79ea.   v7:= v3 ^& 3;
#L0b79ee.   if v7 != 0 then goto L0b79f6;
#L0b79f2.   v8:= 4  @length 4;
#L0b79f4.   goto L0b79a4;
#L0b79f6.   v8:= v7;
#L0b79f8.   goto L0b79f4;
#L0b79fa.   if v3 <= v6 then goto L0b795a;
#L0b79fe.   v12:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0b7a02.   v12:= v12[v5];
#L0b7a06.   v4:= v12 ^~ -1;
#L0b7a0a.   v5:= v5 + 1;
#L0b7a0e.   v12:= v15.[|java:math:BigInteger.numberLength|] ;
#L0b7a12.   if v5 != v12 then goto L0b7a18;
#L0b7a16.   v2:= v8;
#L0b7a18.   v9:= 0  @length 4;
#L0b7a1a.   if v9 >= v2 then goto L0b79fa;
#L0b7a1e.   v3:= v3 + -1;
#L0b7a22.   v12:= (byte)v4  @type i2b;
#L0b7a24.   v1[v3]:= v12  @byte;
#L0b7a28.   v9:= v9 + 1;
#L0b7a2c.   v4:= v4 ^> 8;
#L0b7a30.   goto L0b7a1a;
#L0b7a32.   if v3 <= v6 then goto L0b795a;
#L0b7a36.   v12:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0b7a3a.   v4:= v12[v5];
#L0b7a3e.   v5:= v5 + 1;
#L0b7a42.   v12:= v15.[|java:math:BigInteger.numberLength|] ;
#L0b7a46.   if v5 != v12 then goto L0b7a4c;
#L0b7a4a.   v2:= v8;
#L0b7a4c.   v9:= 0  @length 4;
#L0b7a4e.   if v9 >= v2 then goto L0b7a32;
#L0b7a52.   v3:= v3 + -1;
#L0b7a56.   v12:= (byte)v4  @type i2b;
#L0b7a58.   v1[v3]:= v12  @byte;
#L0b7a5c.   v9:= v9 + 1;
#L0b7a60.   v4:= v4 ^> 8;
#L0b7a64.   goto L0b7a4e;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.valueOf|] ([|long|] v4) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b7a78.   v0:= 0  @length wide16;
#L0b7a7c.   v0:= cmp(v4,v0);
#L0b7a80.   if v0 >= 0 then goto L0b7aa6;
#L0b7a84.   v0:= -1  @length wide16;
#L0b7a88.   v0:= cmp(v4,v0);
#L0b7a8c.   if v0 == 0 then goto L0b7aa0;
#L0b7a90.   v0:= new [|java:math:BigInteger|];
#L0b7a94.   v1:= -1  @length 4;
#L0b7a96.   v2:= -v4  @type long;
#L0b7a98.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1, v2, v3) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7a9e.   return v0  @type object;
#L0b7aa0.   v0:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0b7aa4.   goto L0b7a9e;
#L0b7aa6.   v0:= @@[|java:math:BigInteger.SMALL_VALUES|]   @type object;
#L0b7aaa.   v0:= v0.length;
#L0b7aac.   v0:= (long)v0  @type i2l;
#L0b7aae.   v0:= cmp(v4,v0);
#L0b7ab2.   if v0 >= 0 then goto L0b7ac2;
#L0b7ab6.   v0:= @@[|java:math:BigInteger.SMALL_VALUES|]   @type object;
#L0b7aba.   v1:= (int)v4  @type l2i;
#L0b7abc.   v0:= v0[v1]  @type object;
#L0b7ac0.   goto L0b7a9e;
#L0b7ac2.   v0:= new [|java:math:BigInteger|];
#L0b7ac6.   v1:= 1  @length 4;
#L0b7ac8.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1, v4, v5) @signature [|Ljava/math/BigInteger;.<init>:(IJ)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7ace.   goto L0b7a9e;

   }
    procedure [|void|] [|java:math:BigInteger.writeObject|] ([|java:math:BigInteger|] v2 @type (this), [|java:io:ObjectOutputStream|] v3 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0b7ae0.   call temp:=  [|java:math:BigInteger.getBigInt|](v2) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7ae6.   v0:= temp  @type object;
#L0b7ae8.   call temp:=  [|java:math:BigInt.sign|](v0) @signature [|Ljava/math/BigInt;.sign:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7aee.   v1:= temp;
#L0b7af0.   v2.[|java:math:BigInteger.signum|]  := v1;
#L0b7af4.   call temp:=  [|java:math:BigInt.bigEndianMagnitude|](v0) @signature [|Ljava/math/BigInt;.bigEndianMagnitude:()[B|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7afa.   v1:= temp  @type object;
#L0b7afc.   v2.[|java:math:BigInteger.magnitude|]  := v1 @type object;
#L0b7b00.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v3) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0b7b06.   return @void ;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.abs|] ([|java:math:BigInteger|] v3 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7b18.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7b1e.   v1:= temp  @type object;
#L0b7b20.   call temp:=  [|java:math:BigInt.sign|](v1) @signature [|Ljava/math/BigInt;.sign:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7b26.   v2:= temp;
#L0b7b28.   if v2 < 0 then goto L0b7b2e;
#L0b7b2c.   return v3  @type object;
#L0b7b2e.   call temp:=  [|java:math:BigInt.copy|](v1) @signature [|Ljava/math/BigInt;.copy:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7b34.   v0:= temp  @type object;
#L0b7b36.   v2:= 1  @length 4;
#L0b7b38.   call temp:=  [|java:math:BigInt.setSign|](v0, v2) @signature [|Ljava/math/BigInt;.setSign:(I)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7b3e.   v3:= new [|java:math:BigInteger|];
#L0b7b42.   call temp:=  [|java:math:BigInteger.<init>|](v3, v0) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7b48.   goto L0b7b2c;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.add|] ([|java:math:BigInteger|] v3 @type (this), [|java:math:BigInteger|] v4 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7b5c.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7b62.   v0:= temp  @type object;
#L0b7b64.   call temp:=  [|java:math:BigInteger.getBigInt|](v4) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7b6a.   v1:= temp  @type object;
#L0b7b6c.   call temp:=  [|java:math:BigInt.sign|](v1) @signature [|Ljava/math/BigInt;.sign:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7b72.   v2:= temp;
#L0b7b74.   if v2 != 0 then goto L0b7b7a;
#L0b7b78.   return v3  @type object;
#L0b7b7a.   call temp:=  [|java:math:BigInt.sign|](v0) @signature [|Ljava/math/BigInt;.sign:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7b80.   v2:= temp;
#L0b7b82.   if v2 != 0 then goto L0b7b8a;
#L0b7b86.   v3:= v4  @type object;
#L0b7b88.   goto L0b7b78;
#L0b7b8a.   v3:= new [|java:math:BigInteger|];
#L0b7b8e.   call temp:=  [|java:math:BigInt.addition|](v0, v1) @signature [|Ljava/math/BigInt;.addition:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b7b94.   v2:= temp  @type object;
#L0b7b96.   call temp:=  [|java:math:BigInteger.<init>|](v3, v2) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7b9c.   goto L0b7b78;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.and|] ([|java:math:BigInteger|] v1 @type (this), [|java:math:BigInteger|] v2 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.and:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b7bb0.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v1) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7bb6.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v2) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7bbc.   call temp:=  [|java:math:Logical.and|](v1, v2) @signature [|Ljava/math/Logical;.and:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b7bc2.   v0:= temp  @type object;
#L0b7bc4.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.andNot|] ([|java:math:BigInteger|] v1 @type (this), [|java:math:BigInteger|] v2 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.andNot:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b7bd8.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v1) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7bde.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v2) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7be4.   call temp:=  [|java:math:Logical.andNot|](v1, v2) @signature [|Ljava/math/Logical;.andNot:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b7bea.   v0:= temp  @type object;
#L0b7bec.   return v0  @type object;

   }
    procedure [|int|] [|java:math:BigInteger.bitCount|] ([|java:math:BigInteger|] v1 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.bitCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b7c00.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v1) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7c06.   call temp:=  [|java:math:BitLevel.bitCount|](v1) @signature [|Ljava/math/BitLevel;.bitCount:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b7c0c.   v0:= temp;
#L0b7c0e.   return v0;

   }
    procedure [|int|] [|java:math:BigInteger.bitLength|] ([|java:math:BigInteger|] v1 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.bitLength:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b7c20.   v0:= v1.[|java:math:BigInteger.nativeIsValid|]   @boolean;
#L0b7c24.   if v0 != 0 then goto L0b7c3a;
#L0b7c28.   v0:= v1.[|java:math:BigInteger.javaIsValid|]   @boolean;
#L0b7c2c.   if v0 == 0 then goto L0b7c3a;
#L0b7c30.   call temp:=  [|java:math:BitLevel.bitLength|](v1) @signature [|Ljava/math/BitLevel;.bitLength:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b7c36.   v0:= temp;
#L0b7c38.   return v0;
#L0b7c3a.   call temp:=  [|java:math:BigInteger.getBigInt|](v1) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7c40.   v0:= temp  @type object;
#L0b7c42.   call temp:=  [|java:math:BigInt.bitLength|](v0) @signature [|Ljava/math/BigInt;.bitLength:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7c48.   v0:= temp;
#L0b7c4a.   goto L0b7c38;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.clearBit|] ([|java:math:BigInteger|] v1 @type (this), [|int|] v2) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.clearBit:(I)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b7c5c.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v1) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7c62.   call temp:=  [|java:math:BigInteger.testBit|](v1, v2) @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7c68.   v0:= temp;
#L0b7c6a.   if v0 == 0 then goto L0b7c76;
#L0b7c6e.   call temp:=  [|java:math:BitLevel.flipBit|](v1, v2) @signature [|Ljava/math/BitLevel;.flipBit:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b7c74.   v1:= temp  @type object;
#L0b7c76.   return v1  @type object;

   }
    procedure [|int|] [|java:math:BigInteger.compareTo|] ([|java:math:BigInteger|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0b7c88.   v2:= ([|java:math:BigInteger|])v2;
#L0b7c8c.   call temp:=  [|java:math:BigInteger.compareTo|](v1, v2) @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7c92.   v0:= temp;
#L0b7c94.   return v0;

   }
    procedure [|int|] [|java:math:BigInteger.compareTo|] ([|java:math:BigInteger|] v2 @type (this), [|java:math:BigInteger|] v3 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b7ca8.   call temp:=  [|java:math:BigInteger.getBigInt|](v2) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7cae.   v0:= temp  @type object;
#L0b7cb0.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7cb6.   v1:= temp  @type object;
#L0b7cb8.   call temp:=  [|java:math:BigInt.cmp|](v0, v1) @signature [|Ljava/math/BigInt;.cmp:(Ljava/math/BigInt;Ljava/math/BigInt;)I|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b7cbe.   v0:= temp;
#L0b7cc0.   return v0;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.copy|] ([|java:math:BigInteger|] v4 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.copy:()Ljava/math/BigInteger;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b7cd4.   v3:= 0  @length 4;
#L0b7cd6.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v4) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7cdc.   v1:= v4.[|java:math:BigInteger.numberLength|] ;
#L0b7ce0.   v0:= new [|int|][v1];
#L0b7ce4.   v1:= v4.[|java:math:BigInteger.digits|]   @type object;
#L0b7ce8.   v2:= v4.[|java:math:BigInteger.numberLength|] ;
#L0b7cec.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0b7cf2.   v1:= new [|java:math:BigInteger|];
#L0b7cf6.   v2:= v4.[|java:math:BigInteger.sign|] ;
#L0b7cfa.   v3:= v4.[|java:math:BigInteger.numberLength|] ;
#L0b7cfe.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2, v3, v0) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7d04.   return v1  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.divide|] ([|java:math:BigInteger|] v4 @type (this), [|java:math:BigInteger|] v5 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b7d18.   v0:= new [|java:math:BigInt|];
#L0b7d1c.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b7d22.   call temp:=  [|java:math:BigInteger.getBigInt|](v4) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7d28.   v1:= temp  @type object;
#L0b7d2a.   call temp:=  [|java:math:BigInteger.getBigInt|](v5) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7d30.   v2:= temp  @type object;
#L0b7d32.   v3:= 0  @length 4;
#L0b7d34.   call temp:=  [|java:math:BigInt.division|](v1, v2, v0, v3) @signature [|Ljava/math/BigInt;.division:(Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b7d3a.   v1:= new [|java:math:BigInteger|];
#L0b7d3e.   call temp:=  [|java:math:BigInteger.<init>|](v1, v0) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7d44.   return v1  @type object;

   }
    procedure [|java:math:BigInteger|][] [|java:math:BigInteger.divideAndRemainder|] ([|java:math:BigInteger|] v6 @type (this), [|java:math:BigInteger|] v7 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.divideAndRemainder:(Ljava/math/BigInteger;)[Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b7d58.   call temp:=  [|java:math:BigInteger.getBigInt|](v7) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7d5e.   v0:= temp  @type object;
#L0b7d60.   v1:= new [|java:math:BigInt|];
#L0b7d64.   call temp:=  [|java:math:BigInt.<init>|](v1) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b7d6a.   v2:= new [|java:math:BigInt|];
#L0b7d6e.   call temp:=  [|java:math:BigInt.<init>|](v2) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b7d74.   call temp:=  [|java:math:BigInteger.getBigInt|](v6) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7d7a.   v3:= temp  @type object;
#L0b7d7c.   call temp:=  [|java:math:BigInt.division|](v3, v0, v1, v2) @signature [|Ljava/math/BigInt;.division:(Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b7d82.   v3:= 2  @length 4;
#L0b7d84.   v3:= new [|java:math:BigInteger|][v3];
#L0b7d88.   v4:= 0  @length 4;
#L0b7d8a.   v5:= new [|java:math:BigInteger|];
#L0b7d8e.   call temp:=  [|java:math:BigInteger.<init>|](v5, v1) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7d94.   v3[v4]:= v5  @type object;
#L0b7d98.   v4:= 1  @length 4;
#L0b7d9a.   v5:= new [|java:math:BigInteger|];
#L0b7d9e.   call temp:=  [|java:math:BigInteger.<init>|](v5, v2) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7da4.   v3[v4]:= v5  @type object;
#L0b7da8.   return v3  @type object;

   }
    procedure [|double|] [|java:math:BigInteger.doubleValue|] ([|java:math:BigInteger|] v2 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.doubleValue:()D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b7dbc.   call temp:=  [|java:math:Conversion.bigInteger2Double|](v2) @signature [|Ljava/math/Conversion;.bigInteger2Double:(Ljava/math/BigInteger;)D|] @classDescriptor [|java:math:Conversion|] @type static;
#L0b7dc2.   v0:= temp  @type wide;
#L0b7dc4.   return v0  @type wide;

   }
    procedure [|boolean|] [|java:math:BigInteger.equals|] ([|java:math:BigInteger|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7dd8.   v0:= 1  @length 4;
#L0b7dda.   v1:= 0  @length 4;
#L0b7ddc.   if v3 != v4 then goto L0b7de2;
#L0b7de0.   return v0;
#L0b7de2.   v2:= instanceof @varname v4 @type [|java:math:BigInteger|];
#L0b7de6.   if v2 == 0 then goto L0b7dfe;
#L0b7dea.   v4:= ([|java:math:BigInteger|])v4;
#L0b7dee.   call temp:=  [|java:math:BigInteger.compareTo|](v3, v4) @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7df4.   v2:= temp;
#L0b7df6.   if v2 == 0 then goto L0b7de0;
#L0b7dfa.   v0:= v1;
#L0b7dfc.   goto L0b7de0;
#L0b7dfe.   v0:= v1;
#L0b7e00.   goto L0b7de0;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.flipBit|] ([|java:math:BigInteger|] v3 @type (this), [|int|] v4) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.flipBit:(I)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7e14.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v3) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7e1a.   if v4 >= 0 then goto L0b7e50;
#L0b7e1e.   v0:= new [|java:lang:ArithmeticException|];
#L0b7e22.   v1:= new [|java:lang:StringBuilder|];
#L0b7e26.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b7e2c.   v2:= "n < 0: " @type (object, string);
#L0b7e30.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b7e36.   v1:= temp  @type object;
#L0b7e38.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b7e3e.   v1:= temp  @type object;
#L0b7e40.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b7e46.   v1:= temp  @type object;
#L0b7e48.   call temp:=  [|java:lang:ArithmeticException.<init>|](v0, v1) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b7e4e.   throw v0;
#L0b7e50.   call temp:=  [|java:math:BitLevel.flipBit|](v3, v4) @signature [|Ljava/math/BitLevel;.flipBit:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b7e56.   v0:= temp  @type object;
#L0b7e58.   return v0  @type object;

   }
    procedure [|float|] [|java:math:BigInteger.floatValue|] ([|java:math:BigInteger|] v2 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.floatValue:()F|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b7e6c.   call temp:=  [|java:math:BigInteger.doubleValue|](v2) @signature [|Ljava/math/BigInteger;.doubleValue:()D|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7e72.   v0:= temp  @type wide;
#L0b7e74.   v0:= (float)v0  @type d2f;
#L0b7e76.   return v0;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.gcd|] ([|java:math:BigInteger|] v3 @type (this), [|java:math:BigInteger|] v4 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7e88.   v0:= new [|java:math:BigInteger|];
#L0b7e8c.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7e92.   v1:= temp  @type object;
#L0b7e94.   call temp:=  [|java:math:BigInteger.getBigInt|](v4) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7e9a.   v2:= temp  @type object;
#L0b7e9c.   call temp:=  [|java:math:BigInt.gcd|](v1, v2) @signature [|Ljava/math/BigInt;.gcd:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b7ea2.   v1:= temp  @type object;
#L0b7ea4.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7eaa.   return v0  @type object;

   }
    procedure [|java:math:BigInt|] [|java:math:BigInteger.getBigInt|] ([|java:math:BigInteger|] v3 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7ebc.   v1:= v3.[|java:math:BigInteger.nativeIsValid|]   @boolean;
#L0b7ec0.   if v1 == 0 then goto L0b7eca;
#L0b7ec4.   v0:= v3.[|java:math:BigInteger.bigInt|]   @type object;
#L0b7ec8.   return v0  @type object;
#L0b7eca.   (@monitorenter v3)
#L0b7ecc.   v1:= v3.[|java:math:BigInteger.nativeIsValid|]   @boolean;
#L0b7ed0.   if v1 == 0 then goto L0b7ee2;
#L0b7ed4.   v0:= v3.[|java:math:BigInteger.bigInt|]   @type object;
#L0b7ed8.   (@monitorexit v3)
#L0b7eda.   goto L0b7ec8;
#L0b7edc.   v1:= Exception  @type object;
#L0b7ede.   (@monitorexit v3)
#L0b7ee0.   throw v1;
#L0b7ee2.   v0:= new [|java:math:BigInt|];
#L0b7ee6.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b7eec.   v2:= v3.[|java:math:BigInteger.digits|]   @type object;
#L0b7ef0.   v1:= v3.[|java:math:BigInteger.sign|] ;
#L0b7ef4.   if v1 >= 0 then goto L0b7f0a;
#L0b7ef8.   v1:= 1  @length 4;
#L0b7efa.   call temp:=  [|java:math:BigInt.putLittleEndianInts|](v0, v2, v1) @signature [|Ljava/math/BigInt;.putLittleEndianInts:([IZ)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b7f00.   call temp:=  [|java:math:BigInteger.setBigInt|](v3, v0) @signature [|Ljava/math/BigInteger;.setBigInt:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b7f06.   (@monitorexit v3)
#L0b7f08.   goto L0b7ec8;
#L0b7f0a.   v1:= 0  @length 4;
#L0b7f0c.   goto L0b7efa;
  catch  [|any|] @[L0b7ecc..L0b7ee0] goto L0b7edc;
  catch  [|any|] @[L0b7ee2..L0b7f08] goto L0b7edc;

   }
    procedure [|int|] [|java:math:BigInteger.getFirstNonzeroDigit|] ([|java:math:BigInteger|] v3 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7f34.   v1:= v3.[|java:math:BigInteger.firstNonzeroDigit|] ;
#L0b7f38.   v2:= -2  @length 4;
#L0b7f3a.   if v1 != v2 then goto L0b7f4c;
#L0b7f3e.   v1:= v3.[|java:math:BigInteger.sign|] ;
#L0b7f42.   if v1 != 0 then goto L0b7f52;
#L0b7f46.   v0:= -1  @length 4;
#L0b7f48.   v3.[|java:math:BigInteger.firstNonzeroDigit|]  := v0;
#L0b7f4c.   v1:= v3.[|java:math:BigInteger.firstNonzeroDigit|] ;
#L0b7f50.   return v1;
#L0b7f52.   v0:= 0  @length 4;
#L0b7f54.   v1:= v3.[|java:math:BigInteger.digits|]   @type object;
#L0b7f58.   v1:= v1[v0];
#L0b7f5c.   if v1 != 0 then goto L0b7f48;
#L0b7f60.   v0:= v0 + 1;
#L0b7f64.   goto L0b7f54;

   }
    procedure [|int|] [|java:math:BigInteger.getLowestSetBit|] ([|java:math:BigInteger|] v3 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.getLowestSetBit:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7f78.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v3) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7f7e.   v1:= v3.[|java:math:BigInteger.sign|] ;
#L0b7f82.   if v1 != 0 then goto L0b7f8a;
#L0b7f86.   v1:= -1  @length 4;
#L0b7f88.   return v1;
#L0b7f8a.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v3) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7f90.   v0:= temp;
#L0b7f92.   v1:= v0 ^< 5;
#L0b7f96.   v2:= v3.[|java:math:BigInteger.digits|]   @type object;
#L0b7f9a.   v2:= v2[v0];
#L0b7f9e.   call temp:=  [|java:lang:Integer.numberOfTrailingZeros|](v2) @signature [|Ljava/lang/Integer;.numberOfTrailingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b7fa4.   v2:= temp;
#L0b7fa6.   v1:= v1 + v2  @type int;
#L0b7fa8.   goto L0b7f88;

   }
    procedure [|int|] [|java:math:BigInteger.hashCode|] ([|java:math:BigInteger|] v3 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b7fbc.   v1:= v3.[|java:math:BigInteger.hashCode|] ;
#L0b7fc0.   if v1 == 0 then goto L0b7fca;
#L0b7fc4.   v1:= v3.[|java:math:BigInteger.hashCode|] ;
#L0b7fc8.   return v1;
#L0b7fca.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v3) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b7fd0.   v0:= 0  @length 4;
#L0b7fd2.   v1:= v3.[|java:math:BigInteger.numberLength|] ;
#L0b7fd6.   if v0 >= v1 then goto L0b7ff6;
#L0b7fda.   v1:= v3.[|java:math:BigInteger.hashCode|] ;
#L0b7fde.   v1:= v1 * 33;
#L0b7fe2.   v2:= v3.[|java:math:BigInteger.digits|]   @type object;
#L0b7fe6.   v2:= v2[v0];
#L0b7fea.   v1:= v1 + v2  @type int;
#L0b7fec.   v3.[|java:math:BigInteger.hashCode|]  := v1;
#L0b7ff0.   v0:= v0 + 1;
#L0b7ff4.   goto L0b7fd2;
#L0b7ff6.   v1:= v3.[|java:math:BigInteger.hashCode|] ;
#L0b7ffa.   v2:= v3.[|java:math:BigInteger.sign|] ;
#L0b7ffe.   v1:= v1 * v2  @type int;
#L0b8000.   v3.[|java:math:BigInteger.hashCode|]  := v1;
#L0b8004.   v1:= v3.[|java:math:BigInteger.hashCode|] ;
#L0b8008.   goto L0b7fc8;

   }
    procedure [|int|] [|java:math:BigInteger.intValue|] ([|java:math:BigInteger|] v3 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.intValue:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b801c.   v0:= v3.[|java:math:BigInteger.nativeIsValid|]   @boolean;
#L0b8020.   if v0 == 0 then goto L0b8046;
#L0b8024.   v0:= v3.[|java:math:BigInteger.bigInt|]   @type object;
#L0b8028.   v1:= 4  @length 4;
#L0b802a.   call temp:=  [|java:math:BigInt.twosCompFitsIntoBytes|](v0, v1) @signature [|Ljava/math/BigInt;.twosCompFitsIntoBytes:(I)Z|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b8030.   v0:= temp;
#L0b8032.   if v0 == 0 then goto L0b8046;
#L0b8036.   v0:= v3.[|java:math:BigInteger.bigInt|]   @type object;
#L0b803a.   call temp:=  [|java:math:BigInt.longInt|](v0) @signature [|Ljava/math/BigInt;.longInt:()J|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b8040.   v0:= temp  @type wide;
#L0b8042.   v0:= (int)v0  @type l2i;
#L0b8044.   return v0;
#L0b8046.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v3) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b804c.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0b8050.   v1:= v3.[|java:math:BigInteger.digits|]   @type object;
#L0b8054.   v2:= 0  @length 4;
#L0b8056.   v1:= v1[v2];
#L0b805a.   v0:= v0 * v1  @type int;
#L0b805c.   goto L0b8044;

   }
    procedure [|boolean|] [|java:math:BigInteger.isProbablePrime|] ([|java:math:BigInteger|] v1 @type (this), [|int|] v2) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.isProbablePrime:(I)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b8070.   if v2 > 0 then goto L0b8078;
#L0b8074.   v0:= 1  @length 4;
#L0b8076.   return v0;
#L0b8078.   call temp:=  [|java:math:BigInteger.getBigInt|](v1) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b807e.   v0:= temp  @type object;
#L0b8080.   call temp:=  [|java:math:BigInt.isPrime|](v0, v2) @signature [|Ljava/math/BigInt;.isPrime:(I)Z|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b8086.   v0:= temp;
#L0b8088.   goto L0b8076;

   }
    procedure [|long|] [|java:math:BigInteger.longValue|] ([|java:math:BigInteger|] v8 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.longValue:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b809c.   v6:= 0.000000L  @length wide;
#L0b80a6.   v4:= 1  @length 4;
#L0b80a8.   v5:= 0  @length 4;
#L0b80aa.   v2:= v8.[|java:math:BigInteger.nativeIsValid|]   @boolean;
#L0b80ae.   if v2 == 0 then goto L0b80d4;
#L0b80b2.   v2:= v8.[|java:math:BigInteger.bigInt|]   @type object;
#L0b80b6.   v3:= 8  @length 16;
#L0b80ba.   call temp:=  [|java:math:BigInt.twosCompFitsIntoBytes|](v2, v3) @signature [|Ljava/math/BigInt;.twosCompFitsIntoBytes:(I)Z|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b80c0.   v2:= temp;
#L0b80c2.   if v2 == 0 then goto L0b80d4;
#L0b80c6.   v2:= v8.[|java:math:BigInteger.bigInt|]   @type object;
#L0b80ca.   call temp:=  [|java:math:BigInt.longInt|](v2) @signature [|Ljava/math/BigInt;.longInt:()J|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b80d0.   v2:= temp  @type wide;
#L0b80d2.   return v2  @type wide;
#L0b80d4.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v8) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b80da.   v2:= v8.[|java:math:BigInteger.numberLength|] ;
#L0b80de.   if v2 <= v4 then goto L0b810c;
#L0b80e2.   v2:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b80e6.   v2:= v2[v4];
#L0b80ea.   v2:= (long)v2  @type i2l;
#L0b80ec.   v4:= 32  @length 16;
#L0b80f0.   v2:= v2 ^< v4  @type long;
#L0b80f2.   v4:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b80f6.   v4:= v4[v5];
#L0b80fa.   v4:= (long)v4  @type i2l;
#L0b80fc.   v4:= v4 ^& v6  @type long;
#L0b80fe.   v0:= v2 ^| v4  @type long;
#L0b8102.   v2:= v8.[|java:math:BigInteger.sign|] ;
#L0b8106.   v2:= (long)v2  @type i2l;
#L0b8108.   v2:= v2 * v0  @type long;
#L0b810a.   goto L0b80d2;
#L0b810c.   v2:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b8110.   v2:= v2[v5];
#L0b8114.   v2:= (long)v2  @type i2l;
#L0b8116.   v0:= v2 ^& v6  @type long;
#L0b811a.   goto L0b8102;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.max|] ([|java:math:BigInteger|] v2 @type (this), [|java:math:BigInteger|] v3 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.max:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b812c.   call temp:=  [|java:math:BigInteger.compareTo|](v2, v3) @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8132.   v0:= temp;
#L0b8134.   v1:= 1  @length 4;
#L0b8136.   if v0 != v1 then goto L0b813c;
#L0b813a.   return v2  @type object;
#L0b813c.   v2:= v3  @type object;
#L0b813e.   goto L0b813a;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.min|] ([|java:math:BigInteger|] v2 @type (this), [|java:math:BigInteger|] v3 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.min:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b8150.   call temp:=  [|java:math:BigInteger.compareTo|](v2, v3) @signature [|Ljava/math/BigInteger;.compareTo:(Ljava/math/BigInteger;)I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8156.   v0:= temp;
#L0b8158.   v1:= -1  @length 4;
#L0b815a.   if v0 != v1 then goto L0b8160;
#L0b815e.   return v2  @type object;
#L0b8160.   v2:= v3  @type object;
#L0b8162.   goto L0b815e;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.mod|] ([|java:math:BigInteger|] v3 @type (this), [|java:math:BigInteger|] v4 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b8174.   call temp:=  [|java:math:BigInteger.signum|](v4) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b817a.   v0:= temp;
#L0b817c.   if v0 > 0 then goto L0b8190;
#L0b8180.   v0:= new [|java:lang:ArithmeticException|];
#L0b8184.   v1:= "m.signum() <= 0" @type (object, string);
#L0b8188.   call temp:=  [|java:lang:ArithmeticException.<init>|](v0, v1) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b818e.   throw v0;
#L0b8190.   v0:= new [|java:math:BigInteger|];
#L0b8194.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b819a.   v1:= temp  @type object;
#L0b819c.   call temp:=  [|java:math:BigInteger.getBigInt|](v4) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b81a2.   v2:= temp  @type object;
#L0b81a4.   call temp:=  [|java:math:BigInt.modulus|](v1, v2) @signature [|Ljava/math/BigInt;.modulus:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b81aa.   v1:= temp  @type object;
#L0b81ac.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b81b2.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.modInverse|] ([|java:math:BigInteger|] v3 @type (this), [|java:math:BigInteger|] v4 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b81c4.   call temp:=  [|java:math:BigInteger.signum|](v4) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b81ca.   v0:= temp;
#L0b81cc.   if v0 > 0 then goto L0b81e0;
#L0b81d0.   v0:= new [|java:lang:ArithmeticException|];
#L0b81d4.   v1:= "modulus not positive" @type (object, string);
#L0b81d8.   call temp:=  [|java:lang:ArithmeticException.<init>|](v0, v1) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b81de.   throw v0;
#L0b81e0.   v0:= new [|java:math:BigInteger|];
#L0b81e4.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b81ea.   v1:= temp  @type object;
#L0b81ec.   call temp:=  [|java:math:BigInteger.getBigInt|](v4) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b81f2.   v2:= temp  @type object;
#L0b81f4.   call temp:=  [|java:math:BigInt.modInverse|](v1, v2) @signature [|Ljava/math/BigInt;.modInverse:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b81fa.   v1:= temp  @type object;
#L0b81fc.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b8202.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.modPow|] ([|java:math:BigInteger|] v5 @type (this), [|java:math:BigInteger|] v6 @type (object), [|java:math:BigInteger|] v7 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.modPow:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0b8214.   call temp:=  [|java:math:BigInteger.signum|](v7) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b821a.   v1:= temp;
#L0b821c.   if v1 > 0 then goto L0b8230;
#L0b8220.   v1:= new [|java:lang:ArithmeticException|];
#L0b8224.   v2:= "m.signum() <= 0" @type (object, string);
#L0b8228.   call temp:=  [|java:lang:ArithmeticException.<init>|](v1, v2) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b822e.   throw v1;
#L0b8230.   call temp:=  [|java:math:BigInteger.signum|](v6) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8236.   v1:= temp;
#L0b8238.   if v1 >= 0 then goto L0b8270;
#L0b823c.   call temp:=  [|java:math:BigInteger.modInverse|](v5, v7) @signature [|Ljava/math/BigInteger;.modInverse:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8242.   v0:= temp  @type object;
#L0b8244.   v1:= new [|java:math:BigInteger|];
#L0b8248.   call temp:=  [|java:math:BigInteger.getBigInt|](v0) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b824e.   v2:= temp  @type object;
#L0b8250.   call temp:=  [|java:math:BigInteger.getBigInt|](v6) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8256.   v3:= temp  @type object;
#L0b8258.   call temp:=  [|java:math:BigInteger.getBigInt|](v7) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b825e.   v4:= temp  @type object;
#L0b8260.   call temp:=  [|java:math:BigInt.modExp|](v2, v3, v4) @signature [|Ljava/math/BigInt;.modExp:(Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b8266.   v2:= temp  @type object;
#L0b8268.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b826e.   return v1  @type object;
#L0b8270.   v0:= v5  @type object;
#L0b8272.   goto L0b8244;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.multiply|] ([|java:math:BigInteger|] v3 @type (this), [|java:math:BigInteger|] v4 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b8284.   v0:= new [|java:math:BigInteger|];
#L0b8288.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b828e.   v1:= temp  @type object;
#L0b8290.   call temp:=  [|java:math:BigInteger.getBigInt|](v4) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8296.   v2:= temp  @type object;
#L0b8298.   call temp:=  [|java:math:BigInt.product|](v1, v2) @signature [|Ljava/math/BigInt;.product:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b829e.   v1:= temp  @type object;
#L0b82a0.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b82a6.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.negate|] ([|java:math:BigInteger|] v4 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.negate:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b82b8.   call temp:=  [|java:math:BigInteger.getBigInt|](v4) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b82be.   v1:= temp  @type object;
#L0b82c0.   call temp:=  [|java:math:BigInt.sign|](v1) @signature [|Ljava/math/BigInt;.sign:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b82c6.   v2:= temp;
#L0b82c8.   if v2 != 0 then goto L0b82ce;
#L0b82cc.   return v4  @type object;
#L0b82ce.   call temp:=  [|java:math:BigInt.copy|](v1) @signature [|Ljava/math/BigInt;.copy:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b82d4.   v0:= temp  @type object;
#L0b82d6.   v3:= -v2  @type int;
#L0b82d8.   call temp:=  [|java:math:BigInt.setSign|](v0, v3) @signature [|Ljava/math/BigInt;.setSign:(I)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b82de.   v4:= new [|java:math:BigInteger|];
#L0b82e2.   call temp:=  [|java:math:BigInteger.<init>|](v4, v0) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b82e8.   goto L0b82cc;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.nextProbablePrime|] ([|java:math:BigInteger|] v2 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.nextProbablePrime:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0b82fc.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0b8300.   if v0 >= 0 then goto L0b8314;
#L0b8304.   v0:= new [|java:lang:ArithmeticException|];
#L0b8308.   v1:= "sign < 0" @type (object, string);
#L0b830c.   call temp:=  [|java:lang:ArithmeticException.<init>|](v0, v1) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b8312.   throw v0;
#L0b8314.   call temp:=  [|java:math:Primality.nextProbablePrime|](v2) @signature [|Ljava/math/Primality;.nextProbablePrime:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Primality|] @type static;
#L0b831a.   v0:= temp  @type object;
#L0b831c.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.not|] ([|java:math:BigInteger|] v1 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.not:()Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b8330.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v1) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8336.   call temp:=  [|java:math:Logical.not|](v1) @signature [|Ljava/math/Logical;.not:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b833c.   v0:= temp  @type object;
#L0b833e.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.or|] ([|java:math:BigInteger|] v1 @type (this), [|java:math:BigInteger|] v2 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.or:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b8350.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v1) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8356.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v2) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b835c.   call temp:=  [|java:math:Logical.or|](v1, v2) @signature [|Ljava/math/Logical;.or:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b8362.   v0:= temp  @type object;
#L0b8364.   return v0  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.pow|] ([|java:math:BigInteger|] v3 @type (this), [|int|] v4) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b8378.   if v4 >= 0 then goto L0b83ae;
#L0b837c.   v0:= new [|java:lang:ArithmeticException|];
#L0b8380.   v1:= new [|java:lang:StringBuilder|];
#L0b8384.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b838a.   v2:= "exp < 0: " @type (object, string);
#L0b838e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b8394.   v1:= temp  @type object;
#L0b8396.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b839c.   v1:= temp  @type object;
#L0b839e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b83a4.   v1:= temp  @type object;
#L0b83a6.   call temp:=  [|java:lang:ArithmeticException.<init>|](v0, v1) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b83ac.   throw v0;
#L0b83ae.   v0:= new [|java:math:BigInteger|];
#L0b83b2.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b83b8.   v1:= temp  @type object;
#L0b83ba.   call temp:=  [|java:math:BigInt.exp|](v1, v4) @signature [|Ljava/math/BigInt;.exp:(Ljava/math/BigInt;I)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b83c0.   v1:= temp  @type object;
#L0b83c2.   call temp:=  [|java:math:BigInteger.<init>|](v0, v1) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b83c8.   return v0  @type object;

   }
    procedure [|void|] [|java:math:BigInteger.prepareJavaRepresentation|] ([|java:math:BigInteger|] v4 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b83dc.   v2:= v4.[|java:math:BigInteger.javaIsValid|]   @boolean;
#L0b83e0.   if v2 == 0 then goto L0b83e6;
#L0b83e4.   return @void ;
#L0b83e6.   (@monitorenter v4)
#L0b83e8.   v2:= v4.[|java:math:BigInteger.javaIsValid|]   @boolean;
#L0b83ec.   if v2 == 0 then goto L0b83fa;
#L0b83f0.   (@monitorexit v4)
#L0b83f2.   goto L0b83e4;
#L0b83f4.   v2:= Exception  @type object;
#L0b83f6.   (@monitorexit v4)
#L0b83f8.   throw v2;
#L0b83fa.   v2:= v4.[|java:math:BigInteger.bigInt|]   @type object;
#L0b83fe.   call temp:=  [|java:math:BigInt.sign|](v2) @signature [|Ljava/math/BigInt;.sign:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b8404.   v1:= temp;
#L0b8406.   if v1 == 0 then goto L0b8422;
#L0b840a.   v2:= v4.[|java:math:BigInteger.bigInt|]   @type object;
#L0b840e.   call temp:=  [|java:math:BigInt.littleEndianIntsMagnitude|](v2) @signature [|Ljava/math/BigInt;.littleEndianIntsMagnitude:()[I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b8414.   v0:= temp  @type object;
#L0b8416.   v2:= v0.length;
#L0b8418.   call temp:=  [|java:math:BigInteger.setJavaRepresentation|](v4, v1, v2, v0) @signature [|Ljava/math/BigInteger;.setJavaRepresentation:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b841e.   (@monitorexit v4)
#L0b8420.   goto L0b83e4;
#L0b8422.   v2:= 1  @length 4;
#L0b8424.   v0:= new [|int|][v2];
#L0b8428.   v2:= 0  @length 4;
#L0b842a.   v3:= 0  @length 4;
#L0b842c.   v0[v2]:= v3;
#L0b8430.   goto L0b8416;
  catch  [|any|] @[L0b83e8..L0b83f8] goto L0b83f4;
  catch  [|any|] @[L0b83fa..L0b8430] goto L0b83f4;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.remainder|] ([|java:math:BigInteger|] v4 @type (this), [|java:math:BigInteger|] v5 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.remainder:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b8458.   v0:= new [|java:math:BigInt|];
#L0b845c.   call temp:=  [|java:math:BigInt.<init>|](v0) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0b8462.   call temp:=  [|java:math:BigInteger.getBigInt|](v4) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8468.   v1:= temp  @type object;
#L0b846a.   call temp:=  [|java:math:BigInteger.getBigInt|](v5) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8470.   v2:= temp  @type object;
#L0b8472.   v3:= 0  @length 4;
#L0b8474.   call temp:=  [|java:math:BigInt.division|](v1, v2, v3, v0) @signature [|Ljava/math/BigInt;.division:(Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b847a.   v1:= new [|java:math:BigInteger|];
#L0b847e.   call temp:=  [|java:math:BigInteger.<init>|](v1, v0) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b8484.   return v1  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.setBit|] ([|java:math:BigInteger|] v1 @type (this), [|int|] v2) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.setBit:(I)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b8498.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v1) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b849e.   call temp:=  [|java:math:BigInteger.testBit|](v1, v2) @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b84a4.   v0:= temp;
#L0b84a6.   if v0 != 0 then goto L0b84b2;
#L0b84aa.   call temp:=  [|java:math:BitLevel.flipBit|](v1, v2) @signature [|Ljava/math/BitLevel;.flipBit:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b84b0.   v1:= temp  @type object;
#L0b84b2.   return v1  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.shiftLeft|] ([|java:math:BigInteger|] v3 @type (this), [|int|] v4) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b84c4.   if v4 != 0 then goto L0b84ca;
#L0b84c8.   return v3  @type object;
#L0b84ca.   call temp:=  [|java:math:BigInteger.signum|](v3) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b84d0.   v0:= temp;
#L0b84d2.   if v0 == 0 then goto L0b84c8;
#L0b84d6.   if v0 > 0 then goto L0b84de;
#L0b84da.   if v4 < 0 then goto L0b84fc;
#L0b84de.   v1:= new [|java:math:BigInteger|];
#L0b84e2.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b84e8.   v2:= temp  @type object;
#L0b84ea.   call temp:=  [|java:math:BigInt.shift|](v2, v4) @signature [|Ljava/math/BigInt;.shift:(Ljava/math/BigInt;I)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b84f0.   v2:= temp  @type object;
#L0b84f2.   call temp:=  [|java:math:BigInteger.<init>|](v1, v2) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b84f8.   v3:= v1  @type object;
#L0b84fa.   goto L0b84c8;
#L0b84fc.   v1:= -v4  @type int;
#L0b84fe.   call temp:=  [|java:math:BitLevel.shiftRight|](v3, v1) @signature [|Ljava/math/BitLevel;.shiftRight:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b8504.   v3:= temp  @type object;
#L0b8506.   goto L0b84c8;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.shiftLeftOneBit|] ([|java:math:BigInteger|] v1 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.shiftLeftOneBit:()Ljava/math/BigInteger;|] @Access  {
      local temp ;
        v0;
      
#L0b8518.   call temp:=  [|java:math:BigInteger.signum|](v1) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b851e.   v0:= temp;
#L0b8520.   if v0 != 0 then goto L0b8526;
#L0b8524.   return v1  @type object;
#L0b8526.   call temp:=  [|java:math:BitLevel.shiftLeftOneBit|](v1) @signature [|Ljava/math/BitLevel;.shiftLeftOneBit:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b852c.   v1:= temp  @type object;
#L0b852e.   goto L0b8524;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.shiftRight|] ([|java:math:BigInteger|] v1 @type (this), [|int|] v2) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b8540.   v0:= -v2  @type int;
#L0b8542.   call temp:=  [|java:math:BigInteger.shiftLeft|](v1, v0) @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8548.   v0:= temp  @type object;
#L0b854a.   return v0  @type object;

   }
    procedure [|int|] [|java:math:BigInteger.signum|] ([|java:math:BigInteger|] v1 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.signum:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b855c.   v0:= v1.[|java:math:BigInteger.javaIsValid|]   @boolean;
#L0b8560.   if v0 == 0 then goto L0b856a;
#L0b8564.   v0:= v1.[|java:math:BigInteger.sign|] ;
#L0b8568.   return v0;
#L0b856a.   call temp:=  [|java:math:BigInteger.getBigInt|](v1) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8570.   v0:= temp  @type object;
#L0b8572.   call temp:=  [|java:math:BigInt.sign|](v0) @signature [|Ljava/math/BigInt;.sign:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b8578.   v0:= temp;
#L0b857a.   goto L0b8568;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.subtract|] ([|java:math:BigInteger|] v3 @type (this), [|java:math:BigInteger|] v4 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b858c.   call temp:=  [|java:math:BigInteger.getBigInt|](v3) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8592.   v0:= temp  @type object;
#L0b8594.   call temp:=  [|java:math:BigInteger.getBigInt|](v4) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b859a.   v1:= temp  @type object;
#L0b859c.   call temp:=  [|java:math:BigInt.sign|](v1) @signature [|Ljava/math/BigInt;.sign:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b85a2.   v2:= temp;
#L0b85a4.   if v2 != 0 then goto L0b85aa;
#L0b85a8.   return v3  @type object;
#L0b85aa.   v3:= new [|java:math:BigInteger|];
#L0b85ae.   call temp:=  [|java:math:BigInt.subtraction|](v0, v1) @signature [|Ljava/math/BigInt;.subtraction:(Ljava/math/BigInt;Ljava/math/BigInt;)Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type static;
#L0b85b4.   v2:= temp  @type object;
#L0b85b6.   call temp:=  [|java:math:BigInteger.<init>|](v3, v2) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b85bc.   goto L0b85a8;

   }
    procedure [|boolean|] [|java:math:BigInteger.testBit|] ([|java:math:BigInteger|] v7 @type (this), [|int|] v8) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.testBit:(I)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0b85d0.   v4:= 1  @length 4;
#L0b85d2.   v5:= 0  @length 4;
#L0b85d4.   if v8 >= 0 then goto L0b860a;
#L0b85d8.   v4:= new [|java:lang:ArithmeticException|];
#L0b85dc.   v5:= new [|java:lang:StringBuilder|];
#L0b85e0.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b85e6.   v6:= "n < 0: " @type (object, string);
#L0b85ea.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b85f0.   v5:= temp  @type object;
#L0b85f2.   call temp:=  [|java:lang:StringBuilder.append|](v5, v8) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b85f8.   v5:= temp  @type object;
#L0b85fa.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b8600.   v5:= temp  @type object;
#L0b8602.   call temp:=  [|java:lang:ArithmeticException.<init>|](v4, v5) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0b8608.   throw v4;
#L0b860a.   call temp:=  [|java:math:BigInteger.signum|](v7) @signature [|Ljava/math/BigInteger;.signum:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8610.   v3:= temp;
#L0b8612.   if v3 <= 0 then goto L0b8638;
#L0b8616.   v6:= v7.[|java:math:BigInteger.nativeIsValid|]   @boolean;
#L0b861a.   if v6 == 0 then goto L0b8638;
#L0b861e.   v6:= v7.[|java:math:BigInteger.javaIsValid|]   @boolean;
#L0b8622.   if v6 != 0 then goto L0b8638;
#L0b8626.   call temp:=  [|java:math:BigInteger.getBigInt|](v7) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b862c.   v4:= temp  @type object;
#L0b862e.   call temp:=  [|java:math:BigInt.isBitSet|](v4, v8) @signature [|Ljava/math/BigInt;.isBitSet:(I)Z|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b8634.   v4:= temp;
#L0b8636.   return v4;
#L0b8638.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v7) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b863e.   if v8 != 0 then goto L0b8656;
#L0b8642.   v6:= v7.[|java:math:BigInteger.digits|]   @type object;
#L0b8646.   v6:= v6[v5];
#L0b864a.   v6:= v6 ^& 1;
#L0b864e.   if v6 != 0 then goto L0b8636;
#L0b8652.   v4:= v5;
#L0b8654.   goto L0b8636;
#L0b8656.   v2:= v8 ^> 5;
#L0b865a.   v6:= v7.[|java:math:BigInteger.numberLength|] ;
#L0b865e.   if v2 < v6 then goto L0b866a;
#L0b8662.   if v3 < 0 then goto L0b8636;
#L0b8666.   v4:= v5;
#L0b8668.   goto L0b8636;
#L0b866a.   v6:= v7.[|java:math:BigInteger.digits|]   @type object;
#L0b866e.   v0:= v6[v2];
#L0b8672.   v6:= v8 ^& 31;
#L0b8676.   v8:= v4 ^< v6  @type int;
#L0b867a.   if v3 >= 0 then goto L0b8694;
#L0b867e.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v7) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8684.   v1:= temp;
#L0b8686.   if v2 >= v1 then goto L0b868e;
#L0b868a.   v4:= v5;
#L0b868c.   goto L0b8636;
#L0b868e.   if v1 != v2 then goto L0b86a0;
#L0b8692.   v0:= -v0  @type int;
#L0b8694.   v6:= v0 ^& v8  @type int;
#L0b8698.   if v6 != 0 then goto L0b8636;
#L0b869c.   v4:= v5;
#L0b869e.   goto L0b8636;
#L0b86a0.   v0:= v0 ^~ -1;
#L0b86a4.   goto L0b8694;

   }
    procedure [|byte|][] [|java:math:BigInteger.toByteArray|] ([|java:math:BigInteger|] v1 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.toByteArray:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b86b8.   call temp:=  [|java:math:BigInteger.twosComplement|](v1) @signature [|Ljava/math/BigInteger;.twosComplement:()[B|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b86be.   v0:= temp  @type object;
#L0b86c0.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:math:BigInteger.toString|] ([|java:math:BigInteger|] v1 @type (this)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b86d4.   call temp:=  [|java:math:BigInteger.getBigInt|](v1) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b86da.   v0:= temp  @type object;
#L0b86dc.   call temp:=  [|java:math:BigInt.decString|](v0) @signature [|Ljava/math/BigInt;.decString:()Ljava/lang/String;|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b86e2.   v0:= temp  @type object;
#L0b86e4.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:math:BigInteger.toString|] ([|java:math:BigInteger|] v1 @type (this), [|int|] v2) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.toString:(I)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b86f8.   v0:= 10  @length 16;
#L0b86fc.   if v2 != v0 then goto L0b8712;
#L0b8700.   call temp:=  [|java:math:BigInteger.getBigInt|](v1) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8706.   v0:= temp  @type object;
#L0b8708.   call temp:=  [|java:math:BigInt.decString|](v0) @signature [|Ljava/math/BigInt;.decString:()Ljava/lang/String;|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0b870e.   v0:= temp  @type object;
#L0b8710.   return v0  @type object;
#L0b8712.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v1) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8718.   call temp:=  [|java:math:Conversion.bigInteger2String|](v1, v2) @signature [|Ljava/math/Conversion;.bigInteger2String:(Ljava/math/BigInteger;I)Ljava/lang/String;|] @classDescriptor [|java:math:Conversion|] @type static;
#L0b871e.   v0:= temp  @type object;
#L0b8720.   goto L0b8710;

   }
    procedure [|java:math:BigInteger|] [|java:math:BigInteger.xor|] ([|java:math:BigInteger|] v1 @type (this), [|java:math:BigInteger|] v2 @type (object)) @owner [|java:math:BigInteger|] @signature [|Ljava/math/BigInteger;.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0b8734.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v1) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b873a.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v2) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8740.   call temp:=  [|java:math:Logical.xor|](v1, v2) @signature [|Ljava/math/Logical;.xor:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b8746.   v0:= temp  @type object;
#L0b8748.   return v0  @type object;

   }
record [|java:math:BitLevel|]  @type class @AccessFlag   {
   }
    procedure [|void|] [|java:math:BitLevel.<init>|] ([|java:math:BitLevel|] v0 @type (this)) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0b875c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b8762.   return @void ;

   }
    procedure [|int|] [|java:math:BitLevel.bitCount|] ([|java:math:BigInteger|] v3 @type (object)) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.bitCount:(Ljava/math/BigInteger;)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b8774.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v3) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b877a.   v0:= 0  @length 4;
#L0b877c.   v2:= v3.[|java:math:BigInteger.sign|] ;
#L0b8780.   if v2 != 0 then goto L0b8788;
#L0b8784.   v2:= 0  @length 4;
#L0b8786.   return v2;
#L0b8788.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v3) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b878e.   v1:= temp;
#L0b8790.   v2:= v3.[|java:math:BigInteger.sign|] ;
#L0b8794.   if v2 <= 0 then goto L0b87b8;
#L0b8798.   v2:= v3.[|java:math:BigInteger.numberLength|] ;
#L0b879c.   if v1 >= v2 then goto L0b8800;
#L0b87a0.   v2:= v3.[|java:math:BigInteger.digits|]   @type object;
#L0b87a4.   v2:= v2[v1];
#L0b87a8.   call temp:=  [|java:lang:Integer.bitCount|](v2) @signature [|Ljava/lang/Integer;.bitCount:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b87ae.   v2:= temp;
#L0b87b0.   v0:= v0 + v2  @type int;
#L0b87b2.   v1:= v1 + 1;
#L0b87b6.   goto L0b8798;
#L0b87b8.   v2:= v3.[|java:math:BigInteger.digits|]   @type object;
#L0b87bc.   v2:= v2[v1];
#L0b87c0.   v2:= -v2  @type int;
#L0b87c2.   call temp:=  [|java:lang:Integer.bitCount|](v2) @signature [|Ljava/lang/Integer;.bitCount:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b87c8.   v2:= temp;
#L0b87ca.   v0:= v0 + v2  @type int;
#L0b87cc.   v1:= v1 + 1;
#L0b87d0.   v2:= v3.[|java:math:BigInteger.numberLength|] ;
#L0b87d4.   if v1 >= v2 then goto L0b87f4;
#L0b87d8.   v2:= v3.[|java:math:BigInteger.digits|]   @type object;
#L0b87dc.   v2:= v2[v1];
#L0b87e0.   v2:= v2 ^~ -1;
#L0b87e4.   call temp:=  [|java:lang:Integer.bitCount|](v2) @signature [|Ljava/lang/Integer;.bitCount:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b87ea.   v2:= temp;
#L0b87ec.   v0:= v0 + v2  @type int;
#L0b87ee.   v1:= v1 + 1;
#L0b87f2.   goto L0b87d0;
#L0b87f4.   v2:= v3.[|java:math:BigInteger.numberLength|] ;
#L0b87f8.   v2:= v2 ^< 5;
#L0b87fc.   v0:= v2 - v0  @type int;
#L0b8800.   v2:= v0;
#L0b8802.   goto L0b8786;

   }
    procedure [|int|] [|java:math:BitLevel.bitLength|] ([|java:math:BigInteger|] v5 @type (object)) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.bitLength:(Ljava/math/BigInteger;)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0b8814.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v5) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b881a.   v3:= v5.[|java:math:BigInteger.sign|] ;
#L0b881e.   if v3 != 0 then goto L0b8826;
#L0b8822.   v0:= 0  @length 4;
#L0b8824.   return v0;
#L0b8826.   v3:= v5.[|java:math:BigInteger.numberLength|] ;
#L0b882a.   v0:= v3 ^< 5;
#L0b882e.   v3:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0b8832.   v4:= v5.[|java:math:BigInteger.numberLength|] ;
#L0b8836.   v4:= v4 + -1;
#L0b883a.   v1:= v3[v4];
#L0b883e.   v3:= v5.[|java:math:BigInteger.sign|] ;
#L0b8842.   if v3 >= 0 then goto L0b885e;
#L0b8846.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v5) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b884c.   v2:= temp;
#L0b884e.   v3:= v5.[|java:math:BigInteger.numberLength|] ;
#L0b8852.   v3:= v3 + -1;
#L0b8856.   if v2 != v3 then goto L0b885e;
#L0b885a.   v1:= v1 + -1;
#L0b885e.   call temp:=  [|java:lang:Integer.numberOfLeadingZeros|](v1) @signature [|Ljava/lang/Integer;.numberOfLeadingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b8864.   v3:= temp;
#L0b8866.   v0:= v0 - v3  @type int;
#L0b8868.   goto L0b8824;

   }
    procedure [|java:math:BigInteger|] [|java:math:BitLevel.flipBit|] ([|java:math:BigInteger|] v13 @type (object), [|int|] v14) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.flipBit:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L0b887c.   v8:= 1  @length 4;
#L0b887e.   v12:= -1  @length 4;
#L0b8880.   v11:= 0  @length 4;
#L0b8882.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v13) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8888.   v9:= v13.[|java:math:BigInteger.sign|] ;
#L0b888c.   if v9 != 0 then goto L0b88e4;
#L0b8890.   v7:= v8;
#L0b8892.   v4:= v14 ^> 5;
#L0b8896.   v0:= v14 ^& 31;
#L0b889a.   v9:= v4 + 1;
#L0b889e.   v10:= v13.[|java:math:BigInteger.numberLength|] ;
#L0b88a2.   call temp:=  [|java:lang:Math.max|](v9, v10) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b88a8.   v9:= temp;
#L0b88aa.   v6:= v9 + 1;
#L0b88ae.   v5:= new [|int|][v6];
#L0b88b2.   v1:= v8 ^< v0  @type int;
#L0b88b6.   v8:= v13.[|java:math:BigInteger.digits|]   @type object;
#L0b88ba.   v9:= v13.[|java:math:BigInteger.numberLength|] ;
#L0b88be.   call temp:=  [|java:lang:System.arraycopy|](v8, v11, v5, v11, v9) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0b88c4.   v8:= v13.[|java:math:BigInteger.sign|] ;
#L0b88c8.   if v8 >= 0 then goto L0b896c;
#L0b88cc.   v8:= v13.[|java:math:BigInteger.numberLength|] ;
#L0b88d0.   if v4 < v8 then goto L0b88ea;
#L0b88d4.   v5[v4]:= v1;
#L0b88d8.   v8:= new [|java:math:BigInteger|];
#L0b88dc.   call temp:=  [|java:math:BigInteger.<init>|](v8, v7, v6, v5) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b88e2.   return v8  @type object;
#L0b88e4.   v7:= v13.[|java:math:BigInteger.sign|] ;
#L0b88e8.   goto L0b8892;
#L0b88ea.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v13) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b88f0.   v2:= temp;
#L0b88f2.   if v4 <= v2 then goto L0b8902;
#L0b88f6.   v8:= v5[v4];
#L0b88fa.   v8:= v8 ^~ v1  @type int;
#L0b88fc.   v5[v4]:= v8;
#L0b8900.   goto L0b88d8;
#L0b8902.   if v4 >= v2 then goto L0b8930;
#L0b8906.   v8:= -v1  @type int;
#L0b8908.   v5[v4]:= v8;
#L0b890c.   v3:= v4 + 1;
#L0b8910.   if v3 >= v2 then goto L0b891e;
#L0b8914.   v5[v3]:= v12;
#L0b8918.   v3:= v3 + 1;
#L0b891c.   goto L0b8910;
#L0b891e.   v8:= v5[v3];
#L0b8922.   v9:= v8 + -1;
#L0b8926.   v5[v3]:= v9;
#L0b892a.   v5[v3]:= v8;
#L0b892e.   goto L0b88d8;
#L0b8930.   v3:= v4;
#L0b8932.   v8:= v5[v4];
#L0b8936.   v8:= -v8  @type int;
#L0b8938.   v8:= v8 ^~ v1  @type int;
#L0b893a.   v8:= -v8  @type int;
#L0b893c.   v5[v3]:= v8;
#L0b8940.   v8:= v5[v3];
#L0b8944.   if v8 != 0 then goto L0b88d8;
#L0b8948.   v3:= v3 + 1;
#L0b894c.   v8:= v5[v3];
#L0b8950.   if v8 != v12 then goto L0b895e;
#L0b8954.   v5[v3]:= v11;
#L0b8958.   v3:= v3 + 1;
#L0b895c.   goto L0b894c;
#L0b895e.   v8:= v5[v3];
#L0b8962.   v8:= v8 + 1;
#L0b8966.   v5[v3]:= v8;
#L0b896a.   goto L0b88d8;
#L0b896c.   v8:= v5[v4];
#L0b8970.   v8:= v8 ^~ v1  @type int;
#L0b8972.   v5[v4]:= v8;
#L0b8976.   goto L0b88d8;

   }
    procedure [|boolean|] [|java:math:BitLevel.nonZeroDroppedBits|] ([|int|] v5, [|int|][] v6) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.nonZeroDroppedBits:(I[I)Z|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0b8988.   v2:= v5 ^> 5;
#L0b898c.   v0:= v5 ^& 31;
#L0b8990.   v1:= 0  @length 4;
#L0b8992.   if v1 >= v2 then goto L0b89a4;
#L0b8996.   v3:= v6[v1];
#L0b899a.   if v3 != 0 then goto L0b89a4;
#L0b899e.   v1:= v1 + 1;
#L0b89a2.   goto L0b8992;
#L0b89a4.   if v1 != v2 then goto L0b89b6;
#L0b89a8.   v3:= v6[v1];
#L0b89ac.   v4:= v0 - 32;
#L0b89b0.   v3:= v3 ^< v4  @type int;
#L0b89b2.   if v3 == 0 then goto L0b89ba;
#L0b89b6.   v3:= 1  @length 4;
#L0b89b8.   return v3;
#L0b89ba.   v3:= 0  @length 4;
#L0b89bc.   goto L0b89b8;

   }
    procedure [|java:math:BigInteger|] [|java:math:BitLevel.shiftLeftOneBit|] ([|java:math:BigInteger|] v5 @type (object)) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.shiftLeftOneBit:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0b89d0.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v5) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b89d6.   v2:= v5.[|java:math:BigInteger.numberLength|] ;
#L0b89da.   v1:= v2 + 1;
#L0b89de.   v0:= new [|int|][v1];
#L0b89e2.   v3:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0b89e6.   call temp:=  [|java:math:BitLevel.shiftLeftOneBit|](v0, v3, v2) @signature [|Ljava/math/BitLevel;.shiftLeftOneBit:([I[II)V|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b89ec.   v3:= new [|java:math:BigInteger|];
#L0b89f0.   v4:= v5.[|java:math:BigInteger.sign|] ;
#L0b89f4.   call temp:=  [|java:math:BigInteger.<init>|](v3, v4, v1, v0) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b89fa.   return v3  @type object;

   }
    procedure [|void|] [|java:math:BitLevel.shiftLeftOneBit|] ([|int|][] v4, [|int|][] v5, [|int|] v6) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.shiftLeftOneBit:([I[II)V|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0b8a0c.   v0:= 0  @length 4;
#L0b8a0e.   v1:= 0  @length 4;
#L0b8a10.   if v1 >= v6 then goto L0b8a2c;
#L0b8a14.   v2:= v5[v1];
#L0b8a18.   v3:= v2 ^< 1;
#L0b8a1c.   v3:= v3 ^| v0  @type int;
#L0b8a1e.   v4[v1]:= v3;
#L0b8a22.   v0:= v2 ^>> 31;
#L0b8a26.   v1:= v1 + 1;
#L0b8a2a.   goto L0b8a10;
#L0b8a2c.   if v0 == 0 then goto L0b8a34;
#L0b8a30.   v4[v6]:= v0;
#L0b8a34.   return @void ;

   }
    procedure [|java:math:BigInteger|] [|java:math:BitLevel.shiftRight|] ([|java:math:BigInteger|] v6 @type (object), [|int|] v7) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.shiftRight:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b8a48.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v6) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8a4e.   v1:= v7 ^> 5;
#L0b8a52.   v7:= v7 ^& 31;
#L0b8a56.   v4:= v6.[|java:math:BigInteger.numberLength|] ;
#L0b8a5a.   if v1 < v4 then goto L0b8a72;
#L0b8a5e.   v4:= v6.[|java:math:BigInteger.sign|] ;
#L0b8a62.   if v4 >= 0 then goto L0b8a6c;
#L0b8a66.   v4:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0b8a6a.   return v4  @type object;
#L0b8a6c.   v4:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0b8a70.   goto L0b8a6a;
#L0b8a72.   v4:= v6.[|java:math:BigInteger.numberLength|] ;
#L0b8a76.   v3:= v4 - v1  @type int;
#L0b8a7a.   v4:= v3 + 1;
#L0b8a7e.   v2:= new [|int|][v4];
#L0b8a82.   v4:= v6.[|java:math:BigInteger.digits|]   @type object;
#L0b8a86.   call temp:=  [|java:math:BitLevel.shiftRight|](v2, v3, v4, v1, v7) @signature [|Ljava/math/BitLevel;.shiftRight:([II[III)Z|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b8a8c.   v4:= v6.[|java:math:BigInteger.sign|] ;
#L0b8a90.   if v4 >= 0 then goto L0b8af6;
#L0b8a94.   v0:= 0  @length 4;
#L0b8a96.   if v0 >= v1 then goto L0b8aac;
#L0b8a9a.   v4:= v6.[|java:math:BigInteger.digits|]   @type object;
#L0b8a9e.   v4:= v4[v0];
#L0b8aa2.   if v4 != 0 then goto L0b8aac;
#L0b8aa6.   v0:= v0 + 1;
#L0b8aaa.   goto L0b8a96;
#L0b8aac.   if v0 < v1 then goto L0b8ac6;
#L0b8ab0.   if v7 <= 0 then goto L0b8af6;
#L0b8ab4.   v4:= v6.[|java:math:BigInteger.digits|]   @type object;
#L0b8ab8.   v4:= v4[v0];
#L0b8abc.   v5:= v7 - 32;
#L0b8ac0.   v4:= v4 ^< v5  @type int;
#L0b8ac2.   if v4 == 0 then goto L0b8af6;
#L0b8ac6.   v0:= 0  @length 4;
#L0b8ac8.   if v0 >= v3 then goto L0b8ae2;
#L0b8acc.   v4:= v2[v0];
#L0b8ad0.   v5:= -1  @length 4;
#L0b8ad2.   if v4 != v5 then goto L0b8ae2;
#L0b8ad6.   v4:= 0  @length 4;
#L0b8ad8.   v2[v0]:= v4;
#L0b8adc.   v0:= v0 + 1;
#L0b8ae0.   goto L0b8ac8;
#L0b8ae2.   if v0 != v3 then goto L0b8aea;
#L0b8ae6.   v3:= v3 + 1;
#L0b8aea.   v4:= v2[v0];
#L0b8aee.   v4:= v4 + 1;
#L0b8af2.   v2[v0]:= v4;
#L0b8af6.   v4:= new [|java:math:BigInteger|];
#L0b8afa.   v5:= v6.[|java:math:BigInteger.sign|] ;
#L0b8afe.   call temp:=  [|java:math:BigInteger.<init>|](v4, v5, v3, v2) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b8b04.   goto L0b8a6a;

   }
    procedure [|boolean|] [|java:math:BitLevel.shiftRight|] ([|int|][] v6, [|int|] v7, [|int|][] v8, [|int|] v9, [|int|] v10) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.shiftRight:([II[III)Z|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0b8b18.   v4:= 1  @length 4;
#L0b8b1a.   v5:= 0  @length 4;
#L0b8b1c.   v0:= 1  @length 4;
#L0b8b1e.   v1:= 0  @length 4;
#L0b8b20.   if v1 >= v9 then goto L0b8b3a;
#L0b8b24.   v3:= v8[v1];
#L0b8b28.   if v3 != 0 then goto L0b8b36;
#L0b8b2c.   v3:= v4;
#L0b8b2e.   v0:= v0 ^& v3  @type int;
#L0b8b30.   v1:= v1 + 1;
#L0b8b34.   goto L0b8b20;
#L0b8b36.   v3:= v5;
#L0b8b38.   goto L0b8b2e;
#L0b8b3a.   if v10 != 0 then goto L0b8b48;
#L0b8b3e.   call temp:=  [|java:lang:System.arraycopy|](v8, v9, v6, v5, v7) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0b8b44.   v1:= v7;
#L0b8b46.   return v0;
#L0b8b48.   v2:= v10 - 32;
#L0b8b4c.   v3:= v8[v1];
#L0b8b50.   v3:= v3 ^< v2  @type int;
#L0b8b52.   if v3 != 0 then goto L0b8b86;
#L0b8b56.   v0:= v0 ^& v4  @type int;
#L0b8b58.   v1:= 0  @length 4;
#L0b8b5a.   v3:= v7 + -1;
#L0b8b5e.   if v1 >= v3 then goto L0b8b8a;
#L0b8b62.   v3:= v1 + v9  @type int;
#L0b8b66.   v3:= v8[v3];
#L0b8b6a.   v3:= v3 ^>> v10  @type int;
#L0b8b6c.   v4:= v1 + v9  @type int;
#L0b8b70.   v4:= v4 + 1;
#L0b8b74.   v4:= v8[v4];
#L0b8b78.   v4:= v4 ^< v2  @type int;
#L0b8b7a.   v3:= v3 ^| v4  @type int;
#L0b8b7c.   v6[v1]:= v3;
#L0b8b80.   v1:= v1 + 1;
#L0b8b84.   goto L0b8b5a;
#L0b8b86.   v4:= v5;
#L0b8b88.   goto L0b8b56;
#L0b8b8a.   v3:= v1 + v9  @type int;
#L0b8b8e.   v3:= v8[v3];
#L0b8b92.   v3:= v3 ^>> v10  @type int;
#L0b8b94.   v6[v1]:= v3;
#L0b8b98.   v1:= v1 + 1;
#L0b8b9c.   goto L0b8b46;

   }
    procedure [|boolean|] [|java:math:BitLevel.testBit|] ([|java:math:BigInteger|] v3 @type (object), [|int|] v4) @owner [|java:math:BitLevel|] @signature [|Ljava/math/BitLevel;.testBit:(Ljava/math/BigInteger;I)Z|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0b8bb0.   v0:= 1  @length 4;
#L0b8bb2.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v3) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8bb8.   v1:= v3.[|java:math:BigInteger.digits|]   @type object;
#L0b8bbc.   v2:= v4 ^> 5;
#L0b8bc0.   v1:= v1[v2];
#L0b8bc4.   v2:= v4 ^& 31;
#L0b8bc8.   v2:= v0 ^< v2  @type int;
#L0b8bcc.   v1:= v1 ^& v2  @type int;
#L0b8bce.   if v1 == 0 then goto L0b8bd4;
#L0b8bd2.   return v0;
#L0b8bd4.   v0:= 0  @length 4;
#L0b8bd6.   goto L0b8bd2;

   }
record [|java:math:Conversion|]  @type class @AccessFlag   {
   }
      global [|int|][] @@[|java:math:Conversion.bigRadices|]    @AccessFlag STATIC_FINAL;
      global [|int|][] @@[|java:math:Conversion.digitFitInInt|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:math:Conversion.<clinit>|] () @owner [|java:math:Conversion|] @signature [|Ljava/math/Conversion;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0b8be8.   v0:= 37  @length 16;
#L0b8bec.   v0:= new [|int|][v0];
#L0b8bf0.   goto L0b8c10;
#L0b8bf6.   @@[|java:math:Conversion.digitFitInInt|] := v0  @type object;
#L0b8bfa.   v0:= 35  @length 16;
#L0b8bfe.   v0:= new [|int|][v0];
#L0b8c02.   goto L0b8cac;
#L0b8c08.   @@[|java:math:Conversion.bigRadices|] := v0  @type object;
#L0b8c0c.   return @void ;
#L0b8c0e.   
#L0b8c10.   v0:=`[-1, -1, 31, 19, 15, 13, 11, 11, 10, 9, 9, 8, 8, 8, 8, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5 ];
               goto L0b8bf6;
#L0b8cac.   v0:=`[-2147483648, 1162261467, 1073741824, 1220703125, 362797056, 1977326743, 1073741824, 387420489, 1000000000, 214358881, 429981696, 815730721, 1475789056, 170859375, 268435456, 410338673, 612220032, 893871739, 1280000000, 1801088541, 113379904, 148035889, 191102976, 244140625, 308915776, 387420489, 481890304, 594823321, 729000000, 887503681, 1073741824, 1291467969, 1544804416, 1838265625, 60466176 ];
               goto L0b8c08;

   }
    procedure [|void|] [|java:math:Conversion.<init>|] ([|java:math:Conversion|] v0 @type (this)) @owner [|java:math:Conversion|] @signature [|Ljava/math/Conversion;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0b8d50.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b8d56.   return @void ;

   }
    procedure [|double|] [|java:math:Conversion.bigInteger2Double|] ([|java:math:BigInteger|] v17 @type (object)) @owner [|java:math:Conversion|] @signature [|Ljava/math/Conversion;.bigInteger2Double:(Ljava/math/BigInteger;)D|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
      
#L0b8d68.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v17) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8d6e.   v0:= v17  @type object;
#L0b8d72.   v13:= v0.[|java:math:BigInteger.numberLength|] ;
#L0b8d76.   v14:= 2  @length 4;
#L0b8d78.   if v13 < v14 then goto L0b8d9c;
#L0b8d7c.   v0:= v17  @type object;
#L0b8d80.   v13:= v0.[|java:math:BigInteger.numberLength|] ;
#L0b8d84.   v14:= 2  @length 4;
#L0b8d86.   if v13 != v14 then goto L0b8da8;
#L0b8d8a.   v0:= v17  @type object;
#L0b8d8e.   v13:= v0.[|java:math:BigInteger.digits|]   @type object;
#L0b8d92.   v14:= 1  @length 4;
#L0b8d94.   v13:= v13[v14];
#L0b8d98.   if v13 <= 0 then goto L0b8da8;
#L0b8d9c.   call temp:=  [|java:math:BigInteger.longValue|](v17) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8da2.   v13:= temp  @type wide;
#L0b8da4.   v13:= (double)v13  @type l2d;
#L0b8da6.   return v13  @type wide;
#L0b8da8.   v0:= v17  @type object;
#L0b8dac.   v13:= v0.[|java:math:BigInteger.numberLength|] ;
#L0b8db0.   v14:= 32  @length 16;
#L0b8db4.   if v13 <= v14 then goto L0b8dd0;
#L0b8db8.   v0:= v17  @type object;
#L0b8dbc.   v13:= v0.[|java:math:BigInteger.sign|] ;
#L0b8dc0.   if v13 <= 0 then goto L0b8dca;
#L0b8dc4.   v13:= 9218868437227405312L  @length wide_high16;
#L0b8dc8.   goto L0b8da6;
#L0b8dca.   v13:= -4503599627370496L  @length wide_high16;
#L0b8dce.   goto L0b8da6;
#L0b8dd0.   call temp:=  [|java:math:BigInteger.abs|](v17) @signature [|Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8dd6.   v13:= temp  @type object;
#L0b8dd8.   call temp:=  [|java:math:BigInteger.bitLength|](v13) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8dde.   v1:= temp;
#L0b8de0.   v13:= v1 + -1;
#L0b8de4.   v3:= (long)v13  @type i2l;
#L0b8de6.   v2:= v1 + -54;
#L0b8dea.   call temp:=  [|java:math:BigInteger.abs|](v17) @signature [|Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8df0.   v13:= temp  @type object;
#L0b8df2.   call temp:=  [|java:math:BigInteger.shiftRight|](v13, v2) @signature [|Ljava/math/BigInteger;.shiftRight:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8df8.   v13:= temp  @type object;
#L0b8dfa.   call temp:=  [|java:math:BigInteger.longValue|](v13) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8e00.   v5:= temp  @type wide;
#L0b8e02.   v13:= 0.000000L  @length wide;
#L0b8e0c.   v7:= v5 ^& v13  @type long;
#L0b8e10.   v13:= 1023  @length wide16;
#L0b8e14.   v13:= cmp(v3,v13);
#L0b8e18.   if v13 != 0 then goto L0b8e7c;
#L0b8e1c.   v13:= 0.000000L  @length wide;
#L0b8e26.   v13:= cmp(v7,v13);
#L0b8e2a.   if v13 != 0 then goto L0b8e46;
#L0b8e2e.   v0:= v17  @type object;
#L0b8e32.   v13:= v0.[|java:math:BigInteger.sign|] ;
#L0b8e36.   if v13 <= 0 then goto L0b8e40;
#L0b8e3a.   v13:= 9218868437227405312L  @length wide_high16;
#L0b8e3e.   goto L0b8da6;
#L0b8e40.   v13:= -4503599627370496L  @length wide_high16;
#L0b8e44.   goto L0b8da6;
#L0b8e46.   v13:= 0.000000L  @length wide;
#L0b8e50.   v13:= cmp(v7,v13);
#L0b8e54.   if v13 != 0 then goto L0b8e7c;
#L0b8e58.   v0:= v17  @type object;
#L0b8e5c.   v13:= v0.[|java:math:BigInteger.sign|] ;
#L0b8e60.   if v13 <= 0 then goto L0b8e70;
#L0b8e64.   v13:= 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000L  @length wide;
#L0b8e6e.   goto L0b8da6;
#L0b8e70.   v13:= -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.000000L  @length wide;
#L0b8e7a.   goto L0b8da6;
#L0b8e7c.   v13:= 1  @length wide16;
#L0b8e80.   v13:= v13 ^& v7  @type long;
#L0b8e82.   v15:= 1  @length wide16;
#L0b8e86.   v13:= cmp(v13,v15);
#L0b8e8a.   if v13 != 0 then goto L0b8eba;
#L0b8e8e.   v13:= 2  @length wide16;
#L0b8e92.   v13:= v13 ^& v7  @type long;
#L0b8e94.   v15:= 2  @length wide16;
#L0b8e98.   v13:= cmp(v13,v15);
#L0b8e9c.   if v13 == 0 then goto L0b8eb4;
#L0b8ea0.   v0:= v17  @type object;
#L0b8ea4.   v13:= v0.[|java:math:BigInteger.digits|]   @type object;
#L0b8ea8.   call temp:=  [|java:math:BitLevel.nonZeroDroppedBits|](v2, v13) @signature [|Ljava/math/BitLevel;.nonZeroDroppedBits:(I[I)Z|] @classDescriptor [|java:math:BitLevel|] @type static;
#L0b8eae.   v13:= temp;
#L0b8eb0.   if v13 == 0 then goto L0b8eba;
#L0b8eb4.   v13:= 2  @length wide16;
#L0b8eb8.   v7:= v7 + v13  @type long;
#L0b8eba.   v13:= 1  @length 4;
#L0b8ebc.   v7:= v7 ^> v13  @type long;
#L0b8ebe.   v0:= v17  @type object;
#L0b8ec2.   v13:= v0.[|java:math:BigInteger.sign|] ;
#L0b8ec6.   if v13 >= 0 then goto L0b8ef6;
#L0b8eca.   v9:= -9223372036854775808L  @length wide_high16;
#L0b8ece.   v13:= 1023  @length wide16;
#L0b8ed2.   v13:= v13 + v3  @type long;
#L0b8ed4.   v15:= 52  @length 16;
#L0b8ed8.   v13:= v13 ^< v15  @type long;
#L0b8eda.   v15:= 9218868437227405312L  @length wide_high16;
#L0b8ede.   v3:= v13 ^& v15  @type long;
#L0b8ee2.   v13:= v9 ^| v3  @type long;
#L0b8ee6.   v11:= v13 ^| v7  @type long;
#L0b8eea.   call temp:=  [|java:lang:Double.longBitsToDouble|](v11, v12) @signature [|Ljava/lang/Double;.longBitsToDouble:(J)D|] @classDescriptor [|java:lang:Double|] @type static;
#L0b8ef0.   v13:= temp  @type wide;
#L0b8ef2.   goto L0b8da6;
#L0b8ef6.   v9:= 0  @length wide16;
#L0b8efa.   goto L0b8ece;

   }
    procedure [|java:lang:String|] [|java:math:Conversion.bigInteger2String|] ([|java:math:BigInteger|] v28 @type (object), [|int|] v29) @owner [|java:math:Conversion|] @signature [|Ljava/math/Conversion;.bigInteger2String:(Ljava/math/BigInteger;I)Ljava/lang/String;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
        v25;
        v26;
        v27;
      
#L0b8f0c.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v28) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8f12.   v0:= v28  @type object;
#L0b8f16.   v0:= v0.[|java:math:BigInteger.sign|] ;
#L0b8f1a.   v18:= v0;
#L0b8f1e.   v0:= v28  @type object;
#L0b8f22.   v13:= v0.[|java:math:BigInteger.numberLength|] ;
#L0b8f26.   v0:= v28  @type object;
#L0b8f2a.   v9:= v0.[|java:math:BigInteger.digits|]   @type object;
#L0b8f2e.   if v18 != 0 then goto L0b8f38;
#L0b8f32.   v23:= "0" @type (object, string);
#L0b8f36.   return v23  @type object;
#L0b8f38.   v23:= 1  @length 16;
#L0b8f3c.   v0:= v23;
#L0b8f40.   if v13 != v0 then goto L0b8f80;
#L0b8f44.   v23:= v13 + -1;
#L0b8f48.   v10:= v9[v23];
#L0b8f4c.   v0:= (long)v10  @type i2l;
#L0b8f4e.   v23:= v0  @type wide;
#L0b8f52.   v25:= 0.000000L  @length wide;
#L0b8f5c.   v21:= v23 ^& v25  @type long;
#L0b8f60.   if v18 >= 0 then goto L0b8f6e;
#L0b8f64.   v0:= v21  @type wide;
#L0b8f68.   v0:= -v0  @type long;
#L0b8f6a.   v21:= v0  @type wide;
#L0b8f6e.   v0:= v21  @type wide;
#L0b8f72.   v2:= v29;
#L0b8f76.   call temp:=  [|java:lang:Long.toString|](v0, v1, v2) @signature [|Ljava/lang/Long;.toString:(JI)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L0b8f7c.   v23:= temp  @type object;
#L0b8f7e.   goto L0b8f36;
#L0b8f80.   v23:= 10  @length 16;
#L0b8f84.   v0:= v29;
#L0b8f88.   v1:= v23;
#L0b8f8c.   if v0 == v1 then goto L0b8fb0;
#L0b8f90.   v23:= 2  @length 16;
#L0b8f94.   v0:= v29;
#L0b8f98.   v1:= v23;
#L0b8f9c.   if v0 < v1 then goto L0b8fb0;
#L0b8fa0.   v23:= 36  @length 16;
#L0b8fa4.   v0:= v29;
#L0b8fa8.   v1:= v23;
#L0b8fac.   if v0 <= v1 then goto L0b8fba;
#L0b8fb0.   call temp:=  [|java:math:BigInteger.toString|](v28) @signature [|Ljava/math/BigInteger;.toString:()Ljava/lang/String;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8fb6.   v23:= temp  @type object;
#L0b8fb8.   goto L0b8f36;
#L0b8fba.   v0:= v29;
#L0b8fbe.   v0:= (double)v0  @type i2d;
#L0b8fc0.   v23:= v0  @type wide;
#L0b8fc4.   call temp:=  [|java:lang:Math.log|](v23, v24) @signature [|Ljava/lang/Math;.log:(D)D|] @classDescriptor [|java:lang:Math|] @type static;
#L0b8fca.   v23:= temp  @type wide;
#L0b8fcc.   v25:= 4611686018427387904L  @length wide_high16;
#L0b8fd0.   call temp:=  [|java:lang:Math.log|](v25, v26) @signature [|Ljava/lang/Math;.log:(D)D|] @classDescriptor [|java:lang:Math|] @type static;
#L0b8fd6.   v25:= temp  @type wide;
#L0b8fd8.   v4:= v23 / v25  @type double;
#L0b8fdc.   call temp:=  [|java:math:BigInteger.abs|](v28) @signature [|Ljava/math/BigInteger;.abs:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8fe2.   v23:= temp  @type object;
#L0b8fe4.   call temp:=  [|java:math:BigInteger.bitLength|](v23) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b8fea.   v23:= temp;
#L0b8fec.   v0:= v23;
#L0b8ff0.   v0:= (double)v0  @type i2d;
#L0b8ff2.   v23:= v0  @type wide;
#L0b8ff6.   v24:= v23 / v4  @type double;
#L0b8ffa.   if v18 >= 0 then goto L0b90da;
#L0b8ffe.   v23:= 1  @length 16;
#L0b9002.   v0:= v23;
#L0b9006.   v0:= (double)v0  @type i2d;
#L0b9008.   v26:= v0  @type wide;
#L0b900c.   v23:= v24 + v26  @type double;
#L0b9010.   v0:= v23  @type wide;
#L0b9014.   v0:= (int)v0  @type d2i;
#L0b9016.   v23:= v0;
#L0b901a.   v16:= v23 + 1;
#L0b901e.   v0:= v16;
#L0b9022.   v0:= new [|char|][v0];
#L0b9026.   v17:= v0  @type object;
#L0b902a.   v7:= v16;
#L0b902e.   v23:= 16  @length 16;
#L0b9032.   v0:= v29;
#L0b9036.   v1:= v23;
#L0b903a.   if v0 == v1 then goto L0b9130;
#L0b903e.   v0:= new [|int|][v13];
#L0b9042.   v19:= v0  @type object;
#L0b9046.   v23:= 0  @length 16;
#L0b904a.   v24:= 0  @length 16;
#L0b904e.   v0:= v23;
#L0b9052.   v1:= v19  @type object;
#L0b9056.   v2:= v24;
#L0b905a.   call temp:=  [|java:lang:System.arraycopy|](v9, v0, v1, v2, v13) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0b9060.   v20:= v13;
#L0b9064.   v23:= @@[|java:math:Conversion.digitFitInInt|]   @type object;
#L0b9068.   v6:= v23[v29];
#L0b906c.   v23:= @@[|java:math:Conversion.bigRadices|]   @type object;
#L0b9070.   v24:= v29 + -2;
#L0b9074.   v3:= v23[v24];
#L0b9078.   v0:= v19  @type object;
#L0b907c.   v1:= v19  @type object;
#L0b9080.   v2:= v20;
#L0b9084.   call temp:=  [|java:math:Division.divideArrayByInt|](v0, v1, v2, v3) @signature [|Ljava/math/Division;.divideArrayByInt:([I[III)I|] @classDescriptor [|java:math:Division|] @type static;
#L0b908a.   v15:= temp;
#L0b908c.   v14:= v7;
#L0b908e.   v7:= v7 + -1;
#L0b9092.   v23:= v15 % v29  @type int;
#L0b9096.   v0:= v23;
#L0b909a.   v1:= v29;
#L0b909e.   call temp:=  [|java:lang:Character.forDigit|](v0, v1) @signature [|Ljava/lang/Character;.forDigit:(II)C|] @classDescriptor [|java:lang:Character|] @type static;
#L0b90a4.   v23:= temp;
#L0b90a6.   v17[v7]:= v23  @char;
#L0b90aa.   v15:= v15 / v29  @type int;
#L0b90ae.   if v15 == 0 then goto L0b90b6;
#L0b90b2.   if v7 != 0 then goto L0b908e;
#L0b90b6.   v23:= v6 - v14  @type int;
#L0b90ba.   v8:= v23 + v7  @type int;
#L0b90be.   v11:= 0  @length 4;
#L0b90c0.   if v11 >= v8 then goto L0b90e0;
#L0b90c4.   if v7 <= 0 then goto L0b90e0;
#L0b90c8.   v7:= v7 + -1;
#L0b90cc.   v23:= 48  @length 16;
#L0b90d0.   v17[v7]:= v23  @char;
#L0b90d4.   v11:= v11 + 1;
#L0b90d8.   goto L0b90c0;
#L0b90da.   v23:= 0  @length 16;
#L0b90de.   goto L0b9002;
#L0b90e0.   v11:= v20 + -1;
#L0b90e4.   if v11 <= 0 then goto L0b90f6;
#L0b90e8.   v23:= v19[v11];
#L0b90ec.   if v23 != 0 then goto L0b90f6;
#L0b90f0.   v11:= v11 + -1;
#L0b90f4.   goto L0b90e4;
#L0b90f6.   v20:= v11 + 1;
#L0b90fa.   v23:= 1  @length 16;
#L0b90fe.   v0:= v20;
#L0b9102.   v1:= v23;
#L0b9106.   if v0 != v1 then goto L0b9078;
#L0b910a.   v23:= 0  @length 16;
#L0b910e.   v23:= v19[v23];
#L0b9112.   if v23 != 0 then goto L0b9078;
#L0b9116.   v23:= v17[v7]  @char;
#L0b911a.   v24:= 48  @length 16;
#L0b911e.   v0:= v23;
#L0b9122.   v1:= v24;
#L0b9126.   if v0 != v1 then goto L0b917c;
#L0b912a.   v7:= v7 + 1;
#L0b912e.   goto L0b9116;
#L0b9130.   v11:= 0  @length 4;
#L0b9132.   if v11 >= v13 then goto L0b9116;
#L0b9136.   v12:= 0  @length 4;
#L0b9138.   v23:= 8  @length 16;
#L0b913c.   v0:= v23;
#L0b9140.   if v12 >= v0 then goto L0b9176;
#L0b9144.   if v7 <= 0 then goto L0b9176;
#L0b9148.   v23:= v9[v11];
#L0b914c.   v24:= v12 ^< 2;
#L0b9150.   v23:= v23 ^> v24  @type int;
#L0b9154.   v15:= v23 ^& 15;
#L0b9158.   v7:= v7 + -1;
#L0b915c.   v23:= 16  @length 16;
#L0b9160.   v0:= v23;
#L0b9164.   call temp:=  [|java:lang:Character.forDigit|](v15, v0) @signature [|Ljava/lang/Character;.forDigit:(II)C|] @classDescriptor [|java:lang:Character|] @type static;
#L0b916a.   v23:= temp;
#L0b916c.   v17[v7]:= v23  @char;
#L0b9170.   v12:= v12 + 1;
#L0b9174.   goto L0b9138;
#L0b9176.   v11:= v11 + 1;
#L0b917a.   goto L0b9132;
#L0b917c.   v23:= -1  @length 16;
#L0b9180.   v0:= v18;
#L0b9184.   v1:= v23;
#L0b9188.   if v0 != v1 then goto L0b9198;
#L0b918c.   v7:= v7 + -1;
#L0b9190.   v23:= 45  @length 16;
#L0b9194.   v17[v7]:= v23  @char;
#L0b9198.   v23:= new [|java:lang:String|];
#L0b919c.   v24:= v16 - v7  @type int;
#L0b91a0.   v0:= v23  @type object;
#L0b91a4.   v1:= v17  @type object;
#L0b91a8.   v2:= v24;
#L0b91ac.   call temp:=  [|java:lang:String.<init>|](v0, v1, v7, v2) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0b91b2.   goto L0b8f36;

   }
    procedure [|long|] [|java:math:Conversion.divideLongByBillion|] ([|long|] v14) @owner [|java:math:Conversion|] @signature [|Ljava/math/Conversion;.divideLongByBillion:(J)J|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L0b91c8.   v12:= 1  @length 4;
#L0b91ca.   v10:= 0  @length wide16;
#L0b91ce.   v10:= cmp(v14,v10);
#L0b91d2.   if v10 < 0 then goto L0b91fc;
#L0b91d6.    v2:= 0.004724  @length wide32;
#L0b91dc.   v6:= v14 / v2  @type long;
#L0b91e0.   v8:= v14 % v2  @type long;
#L0b91e4.   v10:= 32  @length 16;
#L0b91e8.   v10:= v8 ^< v10  @type long;
#L0b91ec.   v12:= 0.000000L  @length wide;
#L0b91f6.   v12:= v12 ^& v6  @type long;
#L0b91f8.   v10:= v10 ^| v12  @type long;
#L0b91fa.   return v10  @type wide;
#L0b91fc.   v0:= v14 ^>> v12  @type long;
#L0b9200.    v4:= 0.000000  @length wide32;
#L0b9206.   v6:= v0 / v4  @type long;
#L0b920a.   v8:= v0 % v4  @type long;
#L0b920e.   v10:= v8 ^< v12  @type long;
#L0b9212.   v12:= 1  @length wide16;
#L0b9216.   v12:= v12 ^& v14  @type long;
#L0b9218.   v8:= v10 + v12  @type long;
#L0b921c.   goto L0b91e4;

   }
    procedure [|java:lang:String|] [|java:math:Conversion.toDecimalScaledString|] ([|long|] v23, [|int|] v25) @owner [|java:math:Conversion|] @signature [|Ljava/math/Conversion;.toDecimalScaledString:(JI)Ljava/lang/String;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
      
#L0b9230.   v17:= 0  @length wide16;
#L0b9234.   v17:= cmp(v23,v17);
#L0b9238.   if v17 >= 0 then goto L0b92a2;
#L0b923c.   v8:= 1  @length 4;
#L0b923e.   if v8 == 0 then goto L0b924c;
#L0b9242.   v0:= v23  @type wide;
#L0b9246.   v0:= -v0  @type long;
#L0b9248.   v23:= v0  @type wide;
#L0b924c.   v17:= 0  @length wide16;
#L0b9250.   v17:= cmp(v23,v17);
#L0b9254.   if v17 != 0 then goto L0b92f4;
#L0b9258.   goto L0b9558;
#L0b925e.   v13:= new [|java:lang:StringBuilder|];
#L0b9262.   call temp:=  [|java:lang:StringBuilder.<init>|](v13) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b9268.   if v25 >= 0 then goto L0b92d0;
#L0b926c.   v17:= "0E+" @type (object, string);
#L0b9270.   v0:= v17  @type object;
#L0b9274.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b927a.   v17:= -2147483648  @length high16;
#L0b927e.   v0:= v25;
#L0b9282.   v1:= v17;
#L0b9286.   if v0 != v1 then goto L0b92e0;
#L0b928a.   v17:= "2147483648" @type (object, string);
#L0b928e.   v0:= v17  @type object;
#L0b9292.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b9298.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b929e.   v17:= temp  @type object;
#L0b92a0.   return v17  @type object;
#L0b92a2.   v8:= 0  @length 4;
#L0b92a4.   goto L0b923e;
#L0b92a6.   v17:= "0" @type (object, string);
#L0b92aa.   goto L0b92a0;
#L0b92ac.   v17:= "0.0" @type (object, string);
#L0b92b0.   goto L0b92a0;
#L0b92b2.   v17:= "0.00" @type (object, string);
#L0b92b6.   goto L0b92a0;
#L0b92b8.   v17:= "0.000" @type (object, string);
#L0b92bc.   goto L0b92a0;
#L0b92be.   v17:= "0.0000" @type (object, string);
#L0b92c2.   goto L0b92a0;
#L0b92c4.   v17:= "0.00000" @type (object, string);
#L0b92c8.   goto L0b92a0;
#L0b92ca.   v17:= "0.000000" @type (object, string);
#L0b92ce.   goto L0b92a0;
#L0b92d0.   v17:= "0E" @type (object, string);
#L0b92d4.   v0:= v17  @type object;
#L0b92d8.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b92de.   goto L0b927a;
#L0b92e0.   v0:= v25;
#L0b92e4.   v0:= -v0  @type int;
#L0b92e6.   v17:= v0;
#L0b92ea.   call temp:=  [|java:lang:Integer.toString|](v17) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b92f0.   v17:= temp  @type object;
#L0b92f2.   goto L0b928e;
#L0b92f4.   v11:= 18  @length 16;
#L0b92f8.   v17:= 19  @length 16;
#L0b92fc.   v0:= v17;
#L0b9300.   v12:= new [|char|][v0];
#L0b9304.   v2:= v11;
#L0b9306.   v15:= v23  @type wide;
#L0b930a.   v9:= v15  @type wide;
#L0b930c.   v17:= 10  @length wide16;
#L0b9310.   v15:= v15 / v17  @type long;
#L0b9314.   v2:= v2 + -1;
#L0b9318.   v17:= 48  @length wide16;
#L0b931c.   v19:= 10  @length wide16;
#L0b9320.   v19:= v19 * v15  @type long;
#L0b9324.   v19:= v9 - v19  @type long;
#L0b9328.   v17:= v17 + v19  @type long;
#L0b932c.   v0:= v17  @type wide;
#L0b9330.   v0:= (int)v0  @type l2i;
#L0b9332.   v17:= v0;
#L0b9336.   v0:= v17;
#L0b933a.   v0:= (char)v0  @type i2c;
#L0b933c.   v17:= v0;
#L0b9340.   v12[v2]:= v17  @char;
#L0b9344.   v17:= 0  @length wide16;
#L0b9348.   v17:= cmp(v15,v17);
#L0b934c.   if v17 != 0 then goto L0b930a;
#L0b9350.   v0:= (long)v11  @type i2l;
#L0b9352.   v17:= v0  @type wide;
#L0b9356.   v0:= (long)v2  @type i2l;
#L0b9358.   v19:= v0  @type wide;
#L0b935c.   v17:= v17 - v19  @type long;
#L0b9360.   v0:= v25;
#L0b9364.   v0:= (long)v0  @type i2l;
#L0b9366.   v19:= v0  @type wide;
#L0b936a.   v17:= v17 - v19  @type long;
#L0b936e.   v19:= 1  @length wide16;
#L0b9372.   v4:= v17 - v19  @type long;
#L0b9376.   if v25 != 0 then goto L0b93a2;
#L0b937a.   if v8 == 0 then goto L0b938a;
#L0b937e.   v2:= v2 + -1;
#L0b9382.   v17:= 45  @length 16;
#L0b9386.   v12[v2]:= v17  @char;
#L0b938a.   v17:= new [|java:lang:String|];
#L0b938e.   v18:= v11 - v2  @type int;
#L0b9392.   v0:= v17  @type object;
#L0b9396.   v1:= v18;
#L0b939a.   call temp:=  [|java:lang:String.<init>|](v0, v12, v2, v1) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0b93a0.   goto L0b92a0;
#L0b93a2.   if v25 <= 0 then goto L0b948e;
#L0b93a6.   v17:= -6  @length wide16;
#L0b93aa.   v17:= cmp(v4,v17);
#L0b93ae.   if v17 < 0 then goto L0b948e;
#L0b93b2.   v17:= 0  @length wide16;
#L0b93b6.   v17:= cmp(v4,v17);
#L0b93ba.   if v17 < 0 then goto L0b941c;
#L0b93be.   v0:= (int)v4  @type l2i;
#L0b93c0.   v17:= v0;
#L0b93c4.   v6:= v2 + v17  @type int;
#L0b93c8.   v7:= v11 + -1;
#L0b93cc.   if v7 < v6 then goto L0b93e2;
#L0b93d0.   v17:= v7 + 1;
#L0b93d4.   v18:= v12[v7]  @char;
#L0b93d8.   v12[v17]:= v18  @char;
#L0b93dc.   v7:= v7 + -1;
#L0b93e0.   goto L0b93cc;
#L0b93e2.   v6:= v6 + 1;
#L0b93e6.   v17:= 46  @length 16;
#L0b93ea.   v12[v6]:= v17  @char;
#L0b93ee.   if v8 == 0 then goto L0b93fe;
#L0b93f2.   v2:= v2 + -1;
#L0b93f6.   v17:= 45  @length 16;
#L0b93fa.   v12[v2]:= v17  @char;
#L0b93fe.   v17:= new [|java:lang:String|];
#L0b9402.   v18:= v11 - v2  @type int;
#L0b9406.   v18:= v18 + 1;
#L0b940a.   v0:= v17  @type object;
#L0b940e.   v1:= v18;
#L0b9412.   call temp:=  [|java:lang:String.<init>|](v0, v12, v2, v1) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0b9418.   goto L0b92a0;
#L0b941c.   v7:= 2  @length 4;
#L0b941e.   v0:= (long)v7  @type i2l;
#L0b9420.   v17:= v0  @type wide;
#L0b9424.   v0:= -v4  @type long;
#L0b9426.   v19:= v0  @type wide;
#L0b942a.   v21:= 1  @length wide16;
#L0b942e.   v19:= v19 + v21  @type long;
#L0b9432.   v17:= cmp(v17,v19);
#L0b9436.   if v17 >= 0 then goto L0b944c;
#L0b943a.   v2:= v2 + -1;
#L0b943e.   v17:= 48  @length 16;
#L0b9442.   v12[v2]:= v17  @char;
#L0b9446.   v7:= v7 + 1;
#L0b944a.   goto L0b941e;
#L0b944c.   v2:= v2 + -1;
#L0b9450.   v17:= 46  @length 16;
#L0b9454.   v12[v2]:= v17  @char;
#L0b9458.   v2:= v2 + -1;
#L0b945c.   v17:= 48  @length 16;
#L0b9460.   v12[v2]:= v17  @char;
#L0b9464.   if v8 == 0 then goto L0b9474;
#L0b9468.   v2:= v2 + -1;
#L0b946c.   v17:= 45  @length 16;
#L0b9470.   v12[v2]:= v17  @char;
#L0b9474.   v17:= new [|java:lang:String|];
#L0b9478.   v18:= v11 - v2  @type int;
#L0b947c.   v0:= v17  @type object;
#L0b9480.   v1:= v18;
#L0b9484.   call temp:=  [|java:lang:String.<init>|](v0, v12, v2, v1) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0b948a.   goto L0b92a0;
#L0b948e.   v14:= v2 + 1;
#L0b9492.   v3:= v11;
#L0b9494.   v13:= new [|java:lang:StringBuilder|];
#L0b9498.   v17:= v14 - 34;
#L0b949c.   v0:= v17;
#L0b94a0.   call temp:=  [|java:lang:StringBuilder.<init>|](v13, v0) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b94a6.   if v8 == 0 then goto L0b94b8;
#L0b94aa.   v17:= 45  @length 16;
#L0b94ae.   v0:= v17;
#L0b94b2.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b94b8.   v17:= v14 - 18;
#L0b94bc.   v18:= 1  @length 16;
#L0b94c0.   v0:= v17;
#L0b94c4.   v1:= v18;
#L0b94c8.   if v0 < v1 then goto L0b9548;
#L0b94cc.   v17:= v12[v2]  @char;
#L0b94d0.   v0:= v17;
#L0b94d4.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b94da.   v17:= 46  @length 16;
#L0b94de.   v0:= v17;
#L0b94e2.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b94e8.   v17:= v2 + 1;
#L0b94ec.   v18:= v11 - v2  @type int;
#L0b94f0.   v18:= v18 + -1;
#L0b94f4.   v0:= v17;
#L0b94f8.   v1:= v18;
#L0b94fc.   call temp:=  [|java:lang:StringBuilder.append|](v13, v12, v0, v1) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b9502.   v17:= 69  @length 16;
#L0b9506.   v0:= v17;
#L0b950a.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b9510.   v17:= 0  @length wide16;
#L0b9514.   v17:= cmp(v4,v17);
#L0b9518.   if v17 <= 0 then goto L0b952a;
#L0b951c.   v17:= 43  @length 16;
#L0b9520.   v0:= v17;
#L0b9524.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b952a.   call temp:=  [|java:lang:Long.toString|](v4, v5) @signature [|Ljava/lang/Long;.toString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L0b9530.   v17:= temp  @type object;
#L0b9532.   v0:= v17  @type object;
#L0b9536.   call temp:=  [|java:lang:StringBuilder.append|](v13, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b953c.   call temp:=  [|java:lang:StringBuilder.toString|](v13) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b9542.   v17:= temp  @type object;
#L0b9544.   goto L0b92a0;
#L0b9548.   v17:= v11 - v2  @type int;
#L0b954c.   v0:= v17;
#L0b9550.   call temp:=  [|java:lang:StringBuilder.append|](v13, v12, v2, v0) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b9556.   goto L0b9502;
#L0b9558.   switch  v25
                 | 0 => goto L0b92a6
                 | 1 => goto L0b92ac
                 | 2 => goto L0b92b2
                 | 3 => goto L0b92b8
                 | 4 => goto L0b92be
                 | 5 => goto L0b92c4
                 | 6 => goto L0b92ca
                 | => goto L0b925e;

   }
    procedure [|java:lang:String|] [|java:math:Conversion.toDecimalScaledString|] ([|java:math:BigInteger|] v41 @type (object), [|int|] v42) @owner [|java:math:Conversion|] @signature [|Ljava/math/Conversion;.toDecimalScaledString:(Ljava/math/BigInteger;I)Ljava/lang/String;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
        v25;
        v26;
        v27;
        v28;
        v29;
        v30;
        v31;
        v32;
        v33;
        v34;
        v35;
        v36;
        v37;
        v38;
        v39;
        v40;
      
#L0b958c.   call temp:=  [|java:math:BigInteger.prepareJavaRepresentation|](v41) @signature [|Ljava/math/BigInteger;.prepareJavaRepresentation:()V|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9592.   v0:= v41  @type object;
#L0b9596.   v0:= v0.[|java:math:BigInteger.sign|] ;
#L0b959a.   v27:= v0;
#L0b959e.   v0:= v41  @type object;
#L0b95a2.   v15:= v0.[|java:math:BigInteger.numberLength|] ;
#L0b95a6.   v0:= v41  @type object;
#L0b95aa.   v6:= v0.[|java:math:BigInteger.digits|]   @type object;
#L0b95ae.   if v27 != 0 then goto L0b9638;
#L0b95b2.   goto L0b9a38;
#L0b95b8.   v24:= new [|java:lang:StringBuilder|];
#L0b95bc.   call temp:=  [|java:lang:StringBuilder.<init>|](v24) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b95c2.   if v42 >= 0 then goto L0b9624;
#L0b95c6.   v35:= "0E+" @type (object, string);
#L0b95ca.   v0:= v24  @type object;
#L0b95ce.   v1:= v35  @type object;
#L0b95d2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b95d8.   v0:= v42;
#L0b95dc.   v0:= -v0  @type int;
#L0b95de.   v35:= v0;
#L0b95e2.   v0:= v24  @type object;
#L0b95e6.   v1:= v35;
#L0b95ea.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b95f0.   call temp:=  [|java:lang:StringBuilder.toString|](v24) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b95f6.   v35:= temp  @type object;
#L0b95f8.   return v35  @type object;
#L0b95fa.   v35:= "0" @type (object, string);
#L0b95fe.   goto L0b95f8;
#L0b9600.   v35:= "0.0" @type (object, string);
#L0b9604.   goto L0b95f8;
#L0b9606.   v35:= "0.00" @type (object, string);
#L0b960a.   goto L0b95f8;
#L0b960c.   v35:= "0.000" @type (object, string);
#L0b9610.   goto L0b95f8;
#L0b9612.   v35:= "0.0000" @type (object, string);
#L0b9616.   goto L0b95f8;
#L0b9618.   v35:= "0.00000" @type (object, string);
#L0b961c.   goto L0b95f8;
#L0b961e.   v35:= "0.000000" @type (object, string);
#L0b9622.   goto L0b95f8;
#L0b9624.   v35:= "0E" @type (object, string);
#L0b9628.   v0:= v24  @type object;
#L0b962c.   v1:= v35  @type object;
#L0b9630.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b9636.   goto L0b95d8;
#L0b9638.   v35:= v15 * 10;
#L0b963c.   v35:= v35 + 1;
#L0b9640.   v22:= v35 + 7;
#L0b9644.   v35:= v22 + 1;
#L0b9648.   v0:= v35;
#L0b964c.   v0:= new [|char|][v0];
#L0b9650.   v23:= v0  @type object;
#L0b9654.   v4:= v22;
#L0b9658.   v35:= 1  @length 16;
#L0b965c.   v0:= v35;
#L0b9660.   if v15 != v0 then goto L0b973c;
#L0b9664.   v35:= 0  @length 16;
#L0b9668.   v9:= v6[v35];
#L0b966c.   if v9 >= 0 then goto L0b970c;
#L0b9670.   v0:= (long)v9  @type i2l;
#L0b9672.   v35:= v0  @type wide;
#L0b9676.   v37:= 0.000000L  @length wide;
#L0b9680.   v33:= v35 ^& v37  @type long;
#L0b9684.   v16:= v33  @type wide;
#L0b9688.   v35:= 10  @length wide16;
#L0b968c.   v33:= v33 / v35  @type long;
#L0b9690.   v4:= v4 + -1;
#L0b9694.   v35:= 10  @length wide16;
#L0b9698.   v35:= v35 * v33  @type long;
#L0b969c.   v35:= v16 - v35  @type long;
#L0b96a0.   v0:= v35  @type wide;
#L0b96a4.   v0:= (int)v0  @type l2i;
#L0b96a6.   v35:= v0;
#L0b96aa.   v35:= v35 + 48;
#L0b96ae.   v0:= v35;
#L0b96b2.   v0:= (char)v0  @type i2c;
#L0b96b4.   v35:= v0;
#L0b96b8.   v23[v4]:= v35  @char;
#L0b96bc.   v35:= 0  @length wide16;
#L0b96c0.   v35:= cmp(v33,v35);
#L0b96c4.   if v35 != 0 then goto L0b9684;
#L0b96c8.   if v27 >= 0 then goto L0b9860;
#L0b96cc.   v14:= 1  @length 4;
#L0b96ce.   v35:= v22 - v4  @type int;
#L0b96d2.   v35:= v35 - v42  @type int;
#L0b96d6.   v8:= v35 + -1;
#L0b96da.   if v42 != 0 then goto L0b9866;
#L0b96de.   if v14 == 0 then goto L0b96ee;
#L0b96e2.   v4:= v4 + -1;
#L0b96e6.   v35:= 45  @length 16;
#L0b96ea.   v23[v4]:= v35  @char;
#L0b96ee.   v35:= new [|java:lang:String|];
#L0b96f2.   v36:= v22 - v4  @type int;
#L0b96f6.   v0:= v35  @type object;
#L0b96fa.   v1:= v23  @type object;
#L0b96fe.   v2:= v36;
#L0b9702.   call temp:=  [|java:lang:String.<init>|](v0, v1, v4, v2) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0b9708.   goto L0b95f8;
#L0b970c.   v33:= v9;
#L0b9710.   v16:= v33;
#L0b9714.   v33:= v33 / 10;
#L0b9718.   v4:= v4 + -1;
#L0b971c.   v35:= v33 * 10;
#L0b9720.   v35:= v16 - v35  @type int;
#L0b9724.   v35:= v35 + 48;
#L0b9728.   v0:= v35;
#L0b972c.   v0:= (char)v0  @type i2c;
#L0b972e.   v35:= v0;
#L0b9732.   v23[v4]:= v35  @char;
#L0b9736.   if v33 != 0 then goto L0b9710;
#L0b973a.   goto L0b96c8;
#L0b973c.   v0:= new [|int|][v15];
#L0b9740.   v29:= v0  @type object;
#L0b9744.   v32:= v15;
#L0b9748.   v35:= 0  @length 16;
#L0b974c.   v36:= 0  @length 16;
#L0b9750.   v0:= v35;
#L0b9754.   v1:= v29  @type object;
#L0b9758.   v2:= v36;
#L0b975c.   v3:= v32;
#L0b9760.   call temp:=  [|java:lang:System.arraycopy|](v6, v0, v1, v2, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0b9766.   v25:= 0  @length wide16;
#L0b976a.   v11:= v32 + -1;
#L0b976e.   if v11 < 0 then goto L0b97d2;
#L0b9772.   v35:= 32  @length 16;
#L0b9776.   v35:= v25 ^< v35  @type long;
#L0b977a.   v37:= v29[v11];
#L0b977e.   v0:= v37;
#L0b9782.   v0:= (long)v0  @type i2l;
#L0b9784.   v37:= v0  @type wide;
#L0b9788.   v39:= 0.000000L  @length wide;
#L0b9792.   v37:= v37 ^& v39  @type long;
#L0b9796.   v30:= v35 + v37  @type long;
#L0b979a.   call temp:=  [|java:math:Conversion.divideLongByBillion|](v30, v31) @signature [|Ljava/math/Conversion;.divideLongByBillion:(J)J|] @classDescriptor [|java:math:Conversion|] @type static;
#L0b97a0.   v19:= temp  @type wide;
#L0b97a2.   v0:= v19  @type wide;
#L0b97a6.   v0:= (int)v0  @type l2i;
#L0b97a8.   v35:= v0;
#L0b97ac.   v29[v11]:= v35;
#L0b97b0.   v35:= 32  @length 16;
#L0b97b4.   v35:= v19 ^> v35  @type long;
#L0b97b8.   v0:= v35  @type wide;
#L0b97bc.   v0:= (int)v0  @type l2i;
#L0b97be.   v35:= v0;
#L0b97c2.   v0:= v35;
#L0b97c6.   v0:= (long)v0  @type i2l;
#L0b97c8.   v25:= v0  @type wide;
#L0b97cc.   v11:= v11 + -1;
#L0b97d0.   goto L0b976e;
#L0b97d2.   v0:= v25  @type wide;
#L0b97d6.   v0:= (int)v0  @type l2i;
#L0b97d8.   v21:= v0;
#L0b97dc.   v18:= v4;
#L0b97e0.   v4:= v4 + -1;
#L0b97e4.   v35:= v21 % 10;
#L0b97e8.   v35:= v35 + 48;
#L0b97ec.   v0:= v35;
#L0b97f0.   v0:= (char)v0  @type i2c;
#L0b97f2.   v35:= v0;
#L0b97f6.   v23[v4]:= v35  @char;
#L0b97fa.   v21:= v21 / 10;
#L0b97fe.   if v21 == 0 then goto L0b9806;
#L0b9802.   if v4 != 0 then goto L0b97e0;
#L0b9806.   v35:= v18 - 9;
#L0b980a.   v5:= v35 + v4  @type int;
#L0b980e.   v10:= 0  @length 4;
#L0b9810.   if v10 >= v5 then goto L0b982a;
#L0b9814.   if v4 <= 0 then goto L0b982a;
#L0b9818.   v4:= v4 + -1;
#L0b981c.   v35:= 48  @length 16;
#L0b9820.   v23[v4]:= v35  @char;
#L0b9824.   v10:= v10 + 1;
#L0b9828.   goto L0b9810;
#L0b982a.   v13:= v32 + -1;
#L0b982e.   v35:= v29[v13];
#L0b9832.   if v35 != 0 then goto L0b985a;
#L0b9836.   if v13 != 0 then goto L0b9854;
#L0b983a.   v35:= v23[v4]  @char;
#L0b983e.   v36:= 48  @length 16;
#L0b9842.   v0:= v35;
#L0b9846.   v1:= v36;
#L0b984a.   if v0 != v1 then goto L0b96c8;
#L0b984e.   v4:= v4 + 1;
#L0b9852.   goto L0b983a;
#L0b9854.   v13:= v13 + -1;
#L0b9858.   goto L0b982e;
#L0b985a.   v32:= v13 + 1;
#L0b985e.   goto L0b9766;
#L0b9860.   v14:= 0  @length 4;
#L0b9862.   goto L0b96ce;
#L0b9866.   if v42 <= 0 then goto L0b9942;
#L0b986a.   v35:= -6  @length 16;
#L0b986e.   v0:= v35;
#L0b9872.   if v8 < v0 then goto L0b9942;
#L0b9876.   if v8 < 0 then goto L0b98d6;
#L0b987a.   v12:= v4 + v8  @type int;
#L0b987e.   v13:= v22 + -1;
#L0b9882.   if v13 < v12 then goto L0b9898;
#L0b9886.   v35:= v13 + 1;
#L0b988a.   v36:= v23[v13]  @char;
#L0b988e.   v23[v35]:= v36  @char;
#L0b9892.   v13:= v13 + -1;
#L0b9896.   goto L0b9882;
#L0b9898.   v12:= v12 + 1;
#L0b989c.   v35:= 46  @length 16;
#L0b98a0.   v23[v12]:= v35  @char;
#L0b98a4.   if v14 == 0 then goto L0b98b4;
#L0b98a8.   v4:= v4 + -1;
#L0b98ac.   v35:= 45  @length 16;
#L0b98b0.   v23[v4]:= v35  @char;
#L0b98b4.   v35:= new [|java:lang:String|];
#L0b98b8.   v36:= v22 - v4  @type int;
#L0b98bc.   v36:= v36 + 1;
#L0b98c0.   v0:= v35  @type object;
#L0b98c4.   v1:= v23  @type object;
#L0b98c8.   v2:= v36;
#L0b98cc.   call temp:=  [|java:lang:String.<init>|](v0, v1, v4, v2) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0b98d2.   goto L0b95f8;
#L0b98d6.   v13:= 2  @length 4;
#L0b98d8.   v0:= -v8  @type int;
#L0b98da.   v35:= v0;
#L0b98de.   v35:= v35 + 1;
#L0b98e2.   v0:= v35;
#L0b98e6.   if v13 >= v0 then goto L0b98fc;
#L0b98ea.   v4:= v4 + -1;
#L0b98ee.   v35:= 48  @length 16;
#L0b98f2.   v23[v4]:= v35  @char;
#L0b98f6.   v13:= v13 + 1;
#L0b98fa.   goto L0b98d8;
#L0b98fc.   v4:= v4 + -1;
#L0b9900.   v35:= 46  @length 16;
#L0b9904.   v23[v4]:= v35  @char;
#L0b9908.   v4:= v4 + -1;
#L0b990c.   v35:= 48  @length 16;
#L0b9910.   v23[v4]:= v35  @char;
#L0b9914.   if v14 == 0 then goto L0b9924;
#L0b9918.   v4:= v4 + -1;
#L0b991c.   v35:= 45  @length 16;
#L0b9920.   v23[v4]:= v35  @char;
#L0b9924.   v35:= new [|java:lang:String|];
#L0b9928.   v36:= v22 - v4  @type int;
#L0b992c.   v0:= v35  @type object;
#L0b9930.   v1:= v23  @type object;
#L0b9934.   v2:= v36;
#L0b9938.   call temp:=  [|java:lang:String.<init>|](v0, v1, v4, v2) @signature [|Ljava/lang/String;.<init>:([CII)V|] @classDescriptor [|java:lang:String|] @type direct;
#L0b993e.   goto L0b95f8;
#L0b9942.   v28:= v4 + 1;
#L0b9946.   v7:= v22;
#L0b994a.   v24:= new [|java:lang:StringBuilder|];
#L0b994e.   v35:= v7 + 16;
#L0b9952.   v35:= v35 - v28  @type int;
#L0b9956.   v0:= v24  @type object;
#L0b995a.   v1:= v35;
#L0b995e.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0b9964.   if v14 == 0 then goto L0b997a;
#L0b9968.   v35:= 45  @length 16;
#L0b996c.   v0:= v24  @type object;
#L0b9970.   v1:= v35;
#L0b9974.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b997a.   v35:= v7 - v28  @type int;
#L0b997e.   v36:= 1  @length 16;
#L0b9982.   v0:= v35;
#L0b9986.   v1:= v36;
#L0b998a.   if v0 < v1 then goto L0b9a1e;
#L0b998e.   v35:= v23[v4]  @char;
#L0b9992.   v0:= v24  @type object;
#L0b9996.   v1:= v35;
#L0b999a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b99a0.   v35:= 46  @length 16;
#L0b99a4.   v0:= v24  @type object;
#L0b99a8.   v1:= v35;
#L0b99ac.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b99b2.   v35:= v4 + 1;
#L0b99b6.   v36:= v22 - v4  @type int;
#L0b99ba.   v36:= v36 + -1;
#L0b99be.   v0:= v24  @type object;
#L0b99c2.   v1:= v23  @type object;
#L0b99c6.   v2:= v35;
#L0b99ca.   v3:= v36;
#L0b99ce.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1, v2, v3) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b99d4.   v35:= 69  @length 16;
#L0b99d8.   v0:= v24  @type object;
#L0b99dc.   v1:= v35;
#L0b99e0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b99e6.   if v8 <= 0 then goto L0b99fc;
#L0b99ea.   v35:= 43  @length 16;
#L0b99ee.   v0:= v24  @type object;
#L0b99f2.   v1:= v35;
#L0b99f6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b99fc.   call temp:=  [|java:lang:Integer.toString|](v8) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0b9a02.   v35:= temp  @type object;
#L0b9a04.   v0:= v24  @type object;
#L0b9a08.   v1:= v35  @type object;
#L0b9a0c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b9a12.   call temp:=  [|java:lang:StringBuilder.toString|](v24) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b9a18.   v35:= temp  @type object;
#L0b9a1a.   goto L0b95f8;
#L0b9a1e.   v35:= v22 - v4  @type int;
#L0b9a22.   v0:= v24  @type object;
#L0b9a26.   v1:= v23  @type object;
#L0b9a2a.   v2:= v35;
#L0b9a2e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1, v4, v2) @signature [|Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0b9a34.   goto L0b99d4;
#L0b9a36.   
#L0b9a38.   switch  v42
                 | 0 => goto L0b95fa
                 | 1 => goto L0b9600
                 | 2 => goto L0b9606
                 | 3 => goto L0b960c
                 | 4 => goto L0b9612
                 | 5 => goto L0b9618
                 | 6 => goto L0b961e
                 | => goto L0b95b8;

   }
record [|java:math:Division|]  @type class @AccessFlag   {
   }
    procedure [|void|] [|java:math:Division.<init>|] ([|java:math:Division|] v0 @type (this)) @owner [|java:math:Division|] @signature [|Ljava/math/Division;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0b9a6c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b9a72.   return @void ;

   }
    procedure [|int|] [|java:math:Division.divideArrayByInt|] ([|int|][] v21, [|int|][] v22, [|int|] v23, [|int|] v24) @owner [|java:math:Division|] @signature [|Ljava/math/Division;.divideArrayByInt:([I[III)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
      
#L0b9a84.   v11:= 0  @length wide16;
#L0b9a88.   v0:= v24;
#L0b9a8c.   v15:= (long)v0  @type i2l;
#L0b9a8e.   v17:= 0.000000L  @length wide;
#L0b9a98.   v4:= v15 ^& v17  @type long;
#L0b9a9c.   v8:= v23 + -1;
#L0b9aa0.   if v8 < 0 then goto L0b9b5e;
#L0b9aa4.   v15:= 32  @length 16;
#L0b9aa8.   v15:= v11 ^< v15  @type long;
#L0b9aac.   v17:= v22[v8];
#L0b9ab0.   v0:= v17;
#L0b9ab4.   v0:= (long)v0  @type i2l;
#L0b9ab6.   v17:= v0  @type wide;
#L0b9aba.   v19:= 0.000000L  @length wide;
#L0b9ac4.   v17:= v17 ^& v19  @type long;
#L0b9ac8.   v13:= v15 ^| v17  @type long;
#L0b9acc.   v15:= 0  @length wide16;
#L0b9ad0.   v15:= cmp(v13,v15);
#L0b9ad4.   if v15 < 0 then goto L0b9af8;
#L0b9ad8.   v9:= v13 / v4  @type long;
#L0b9adc.   v11:= v13 % v4  @type long;
#L0b9ae0.   v15:= 0.000000L  @length wide;
#L0b9aea.   v15:= v15 ^& v9  @type long;
#L0b9aec.   v15:= (int)v15  @type l2i;
#L0b9aee.   v21[v8]:= v15;
#L0b9af2.   v8:= v8 + -1;
#L0b9af6.   goto L0b9aa0;
#L0b9af8.   v15:= 1  @length 4;
#L0b9afa.   v2:= v13 ^>> v15  @type long;
#L0b9afe.   v15:= v24 ^>> 1;
#L0b9b02.   v6:= (long)v15  @type i2l;
#L0b9b04.   v9:= v2 / v6  @type long;
#L0b9b08.   v11:= v2 % v6  @type long;
#L0b9b0c.   v15:= 1  @length 4;
#L0b9b0e.   v15:= v11 ^< v15  @type long;
#L0b9b12.   v17:= 1  @length wide16;
#L0b9b16.   v17:= v17 ^& v13  @type long;
#L0b9b1a.   v11:= v15 + v17  @type long;
#L0b9b1e.   v15:= v24 ^& 1;
#L0b9b22.   if v15 == 0 then goto L0b9ae0;
#L0b9b26.   v15:= cmp(v9,v11);
#L0b9b2a.   if v15 > 0 then goto L0b9b32;
#L0b9b2e.   v11:= v11 - v9  @type long;
#L0b9b30.   goto L0b9ae0;
#L0b9b32.   v15:= v9 - v11  @type long;
#L0b9b36.   v15:= cmp(v15,v4);
#L0b9b3a.   if v15 > 0 then goto L0b9b4c;
#L0b9b3e.   v15:= v4 - v9  @type long;
#L0b9b42.   v11:= v11 + v15  @type long;
#L0b9b44.   v15:= 1  @length wide16;
#L0b9b48.   v9:= v9 - v15  @type long;
#L0b9b4a.   goto L0b9ae0;
#L0b9b4c.   v15:= 1  @length 4;
#L0b9b4e.   v15:= v4 ^< v15  @type long;
#L0b9b52.   v15:= v15 - v9  @type long;
#L0b9b54.   v11:= v11 + v15  @type long;
#L0b9b56.   v15:= 2  @length wide16;
#L0b9b5a.   v9:= v9 - v15  @type long;
#L0b9b5c.   goto L0b9ae0;
#L0b9b5e.   v15:= (int)v11  @type l2i;
#L0b9b60.   return v15;

   }
record [|java:math:Logical|]  @type class @AccessFlag   {
   }
    procedure [|void|] [|java:math:Logical.<init>|] ([|java:math:Logical|] v0 @type (this)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0b9b74.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0b9b7a.   return @void ;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.and|] ([|java:math:BigInteger|] v2 @type (object), [|java:math:BigInteger|] v3 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.and:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0b9b8c.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0b9b90.   if v0 == 0 then goto L0b9b9c;
#L0b9b94.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0b9b98.   if v0 != 0 then goto L0b9ba2;
#L0b9b9c.   v2:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0b9ba0.   return v2  @type object;
#L0b9ba2.   v0:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0b9ba6.   call temp:=  [|java:math:BigInteger.equals|](v3, v0) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9bac.   v0:= temp;
#L0b9bae.   if v0 != 0 then goto L0b9ba0;
#L0b9bb2.   v0:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0b9bb6.   call temp:=  [|java:math:BigInteger.equals|](v2, v0) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9bbc.   v0:= temp;
#L0b9bbe.   if v0 == 0 then goto L0b9bc6;
#L0b9bc2.   v2:= v3  @type object;
#L0b9bc4.   goto L0b9ba0;
#L0b9bc6.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0b9bca.   if v0 <= 0 then goto L0b9bea;
#L0b9bce.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0b9bd2.   if v0 <= 0 then goto L0b9be0;
#L0b9bd6.   call temp:=  [|java:math:Logical.andPositive|](v2, v3) @signature [|Ljava/math/Logical;.andPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b9bdc.   v2:= temp  @type object;
#L0b9bde.   goto L0b9ba0;
#L0b9be0.   call temp:=  [|java:math:Logical.andDiffSigns|](v2, v3) @signature [|Ljava/math/Logical;.andDiffSigns:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b9be6.   v2:= temp  @type object;
#L0b9be8.   goto L0b9ba0;
#L0b9bea.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0b9bee.   if v0 <= 0 then goto L0b9bfc;
#L0b9bf2.   call temp:=  [|java:math:Logical.andDiffSigns|](v3, v2) @signature [|Ljava/math/Logical;.andDiffSigns:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b9bf8.   v2:= temp  @type object;
#L0b9bfa.   goto L0b9ba0;
#L0b9bfc.   v0:= v2.[|java:math:BigInteger.numberLength|] ;
#L0b9c00.   v1:= v3.[|java:math:BigInteger.numberLength|] ;
#L0b9c04.   if v0 <= v1 then goto L0b9c12;
#L0b9c08.   call temp:=  [|java:math:Logical.andNegative|](v2, v3) @signature [|Ljava/math/Logical;.andNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b9c0e.   v2:= temp  @type object;
#L0b9c10.   goto L0b9ba0;
#L0b9c12.   call temp:=  [|java:math:Logical.andNegative|](v3, v2) @signature [|Ljava/math/Logical;.andNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b9c18.   v2:= temp  @type object;
#L0b9c1a.   goto L0b9ba0;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.andDiffSigns|] ([|java:math:BigInteger|] v8 @type (object), [|java:math:BigInteger|] v9 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.andDiffSigns:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b9c2c.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v8) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9c32.   v2:= temp;
#L0b9c34.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v9) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9c3a.   v1:= temp;
#L0b9c3c.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0b9c40.   if v1 < v6 then goto L0b9c4a;
#L0b9c44.   v6:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0b9c48.   return v6  @type object;
#L0b9c4a.   v5:= v8.[|java:math:BigInteger.numberLength|] ;
#L0b9c4e.   v4:= new [|int|][v5];
#L0b9c52.   call temp:=  [|java:lang:Math.max|](v2, v1) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b9c58.   v0:= temp;
#L0b9c5a.   if v0 != v1 then goto L0b9c7a;
#L0b9c5e.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9c62.   v6:= v6[v0];
#L0b9c66.   v6:= -v6  @type int;
#L0b9c68.   v7:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b9c6c.   v7:= v7[v0];
#L0b9c70.   v6:= v6 ^& v7  @type int;
#L0b9c72.   v4[v0]:= v6;
#L0b9c76.   v0:= v0 + 1;
#L0b9c7a.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0b9c7e.   v7:= v8.[|java:math:BigInteger.numberLength|] ;
#L0b9c82.   call temp:=  [|java:lang:Math.min|](v6, v7) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b9c88.   v3:= temp;
#L0b9c8a.   if v0 >= v3 then goto L0b9cae;
#L0b9c8e.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9c92.   v6:= v6[v0];
#L0b9c96.   v6:= v6 ^~ -1;
#L0b9c9a.   v7:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b9c9e.   v7:= v7[v0];
#L0b9ca2.   v6:= v6 ^& v7  @type int;
#L0b9ca4.   v4[v0]:= v6;
#L0b9ca8.   v0:= v0 + 1;
#L0b9cac.   goto L0b9c8a;
#L0b9cae.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0b9cb2.   if v0 < v6 then goto L0b9cd0;
#L0b9cb6.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0b9cba.   if v0 >= v6 then goto L0b9cd0;
#L0b9cbe.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b9cc2.   v6:= v6[v0];
#L0b9cc6.   v4[v0]:= v6;
#L0b9cca.   v0:= v0 + 1;
#L0b9cce.   goto L0b9cb6;
#L0b9cd0.   v6:= new [|java:math:BigInteger|];
#L0b9cd4.   v7:= 1  @length 4;
#L0b9cd6.   call temp:=  [|java:math:BigInteger.<init>|](v6, v7, v5, v4) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b9cdc.   goto L0b9c48;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.andNegative|] ([|java:math:BigInteger|] v9 @type (object), [|java:math:BigInteger|] v10 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.andNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0b9cf0.   v8:= -1  @length 4;
#L0b9cf2.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v9) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9cf8.   v2:= temp;
#L0b9cfa.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v10) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9d00.   v3:= temp;
#L0b9d02.   v6:= v10.[|java:math:BigInteger.numberLength|] ;
#L0b9d06.   if v2 < v6 then goto L0b9d0c;
#L0b9d0a.   return v9  @type object;
#L0b9d0c.   call temp:=  [|java:lang:Math.max|](v3, v2) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b9d12.   v1:= temp;
#L0b9d14.   if v3 <= v2 then goto L0b9d62;
#L0b9d18.   v6:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0b9d1c.   v6:= v6[v1];
#L0b9d20.   v6:= -v6  @type int;
#L0b9d22.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9d26.   v7:= v7[v1];
#L0b9d2a.   v7:= v7 ^~ -1;
#L0b9d2e.   v0:= v6 ^& v7  @type int;
#L0b9d32.   if v0 != 0 then goto L0b9de4;
#L0b9d36.   v1:= v1 + 1;
#L0b9d3a.   v6:= v10.[|java:math:BigInteger.numberLength|] ;
#L0b9d3e.   if v1 >= v6 then goto L0b9d9c;
#L0b9d42.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9d46.   v6:= v6[v1];
#L0b9d4a.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0b9d4e.   v7:= v7[v1];
#L0b9d52.   v6:= v6 ^| v7  @type int;
#L0b9d54.   v0:= v6 ^~ -1;
#L0b9d58.   if v0 != 0 then goto L0b9d9c;
#L0b9d5c.   v1:= v1 + 1;
#L0b9d60.   goto L0b9d3a;
#L0b9d62.   if v3 >= v2 then goto L0b9d82;
#L0b9d66.   v6:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0b9d6a.   v6:= v6[v1];
#L0b9d6e.   v6:= v6 ^~ -1;
#L0b9d72.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9d76.   v7:= v7[v1];
#L0b9d7a.   v7:= -v7  @type int;
#L0b9d7c.   v0:= v6 ^& v7  @type int;
#L0b9d80.   goto L0b9d32;
#L0b9d82.   v6:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0b9d86.   v6:= v6[v1];
#L0b9d8a.   v6:= -v6  @type int;
#L0b9d8c.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9d90.   v7:= v7[v1];
#L0b9d94.   v7:= -v7  @type int;
#L0b9d96.   v0:= v6 ^& v7  @type int;
#L0b9d9a.   goto L0b9d32;
#L0b9d9c.   if v0 != 0 then goto L0b9de4;
#L0b9da0.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0b9da4.   if v1 >= v6 then goto L0b9dbe;
#L0b9da8.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9dac.   v6:= v6[v1];
#L0b9db0.   v0:= v6 ^~ -1;
#L0b9db4.   if v0 != 0 then goto L0b9dbe;
#L0b9db8.   v1:= v1 + 1;
#L0b9dbc.   goto L0b9da0;
#L0b9dbe.   if v0 != 0 then goto L0b9de4;
#L0b9dc2.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0b9dc6.   v5:= v6 + 1;
#L0b9dca.   v4:= new [|int|][v5];
#L0b9dce.   v6:= v5 + -1;
#L0b9dd2.   v7:= 1  @length 4;
#L0b9dd4.   v4[v6]:= v7;
#L0b9dd8.   v9:= new [|java:math:BigInteger|];
#L0b9ddc.   call temp:=  [|java:math:BigInteger.<init>|](v9, v8, v5, v4) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b9de2.   goto L0b9d0a;
#L0b9de4.   v5:= v9.[|java:math:BigInteger.numberLength|] ;
#L0b9de8.   v4:= new [|int|][v5];
#L0b9dec.   v6:= -v0  @type int;
#L0b9dee.   v4[v1]:= v6;
#L0b9df2.   v1:= v1 + 1;
#L0b9df6.   v6:= v10.[|java:math:BigInteger.numberLength|] ;
#L0b9dfa.   if v1 >= v6 then goto L0b9e1a;
#L0b9dfe.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9e02.   v6:= v6[v1];
#L0b9e06.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0b9e0a.   v7:= v7[v1];
#L0b9e0e.   v6:= v6 ^| v7  @type int;
#L0b9e10.   v4[v1]:= v6;
#L0b9e14.   v1:= v1 + 1;
#L0b9e18.   goto L0b9df6;
#L0b9e1a.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0b9e1e.   if v1 >= v6 then goto L0b9e34;
#L0b9e22.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9e26.   v6:= v6[v1];
#L0b9e2a.   v4[v1]:= v6;
#L0b9e2e.   v1:= v1 + 1;
#L0b9e32.   goto L0b9e1a;
#L0b9e34.   v9:= new [|java:math:BigInteger|];
#L0b9e38.   call temp:=  [|java:math:BigInteger.<init>|](v9, v8, v5, v4) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0b9e3e.   goto L0b9d0a;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.andNot|] ([|java:math:BigInteger|] v1 @type (object), [|java:math:BigInteger|] v2 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.andNot:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
      
#L0b9e54.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0b9e58.   if v0 != 0 then goto L0b9e5e;
#L0b9e5c.   return v1  @type object;
#L0b9e5e.   v0:= v1.[|java:math:BigInteger.sign|] ;
#L0b9e62.   if v0 != 0 then goto L0b9e6c;
#L0b9e66.   v1:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0b9e6a.   goto L0b9e5c;
#L0b9e6c.   v0:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0b9e70.   call temp:=  [|java:math:BigInteger.equals|](v1, v0) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9e76.   v0:= temp;
#L0b9e78.   if v0 == 0 then goto L0b9e86;
#L0b9e7c.   call temp:=  [|java:math:BigInteger.not|](v2) @signature [|Ljava/math/BigInteger;.not:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9e82.   v1:= temp  @type object;
#L0b9e84.   goto L0b9e5c;
#L0b9e86.   v0:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0b9e8a.   call temp:=  [|java:math:BigInteger.equals|](v2, v0) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9e90.   v0:= temp;
#L0b9e92.   if v0 == 0 then goto L0b9e9c;
#L0b9e96.   v1:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0b9e9a.   goto L0b9e5c;
#L0b9e9c.   v0:= v1.[|java:math:BigInteger.sign|] ;
#L0b9ea0.   if v0 <= 0 then goto L0b9ec0;
#L0b9ea4.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0b9ea8.   if v0 <= 0 then goto L0b9eb6;
#L0b9eac.   call temp:=  [|java:math:Logical.andNotPositive|](v1, v2) @signature [|Ljava/math/Logical;.andNotPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b9eb2.   v1:= temp  @type object;
#L0b9eb4.   goto L0b9e5c;
#L0b9eb6.   call temp:=  [|java:math:Logical.andNotPositiveNegative|](v1, v2) @signature [|Ljava/math/Logical;.andNotPositiveNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b9ebc.   v1:= temp  @type object;
#L0b9ebe.   goto L0b9e5c;
#L0b9ec0.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0b9ec4.   if v0 <= 0 then goto L0b9ed2;
#L0b9ec8.   call temp:=  [|java:math:Logical.andNotNegativePositive|](v1, v2) @signature [|Ljava/math/Logical;.andNotNegativePositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b9ece.   v1:= temp  @type object;
#L0b9ed0.   goto L0b9e5c;
#L0b9ed2.   call temp:=  [|java:math:Logical.andNotNegative|](v1, v2) @signature [|Ljava/math/Logical;.andNotNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0b9ed8.   v1:= temp  @type object;
#L0b9eda.   goto L0b9e5c;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.andNotNegative|] ([|java:math:BigInteger|] v8 @type (object), [|java:math:BigInteger|] v9 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.andNotNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0b9eec.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v8) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9ef2.   v2:= temp;
#L0b9ef4.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v9) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0b9efa.   v1:= temp;
#L0b9efc.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0b9f00.   if v2 < v6 then goto L0b9f0a;
#L0b9f04.   v6:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0b9f08.   return v6  @type object;
#L0b9f0a.   v5:= v9.[|java:math:BigInteger.numberLength|] ;
#L0b9f0e.   v4:= new [|int|][v5];
#L0b9f12.   v0:= v2;
#L0b9f14.   if v2 >= v1 then goto L0b9fd0;
#L0b9f18.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b9f1c.   v6:= v6[v0];
#L0b9f20.   v6:= -v6  @type int;
#L0b9f22.   v4[v0]:= v6;
#L0b9f26.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0b9f2a.   call temp:=  [|java:lang:Math.min|](v6, v1) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b9f30.   v3:= temp;
#L0b9f32.   v0:= v0 + 1;
#L0b9f36.   if v0 >= v3 then goto L0b9f50;
#L0b9f3a.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b9f3e.   v6:= v6[v0];
#L0b9f42.   v6:= v6 ^~ -1;
#L0b9f46.   v4[v0]:= v6;
#L0b9f4a.   v0:= v0 + 1;
#L0b9f4e.   goto L0b9f36;
#L0b9f50.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0b9f54.   if v0 != v6 then goto L0b9fb0;
#L0b9f58.   if v0 >= v1 then goto L0b9f68;
#L0b9f5c.   v6:= -1  @length 4;
#L0b9f5e.   v4[v0]:= v6;
#L0b9f62.   v0:= v0 + 1;
#L0b9f66.   goto L0b9f58;
#L0b9f68.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9f6c.   v6:= v6[v0];
#L0b9f70.   v6:= v6 + -1;
#L0b9f74.   v4[v0]:= v6;
#L0b9f78.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0b9f7c.   v7:= v9.[|java:math:BigInteger.numberLength|] ;
#L0b9f80.   call temp:=  [|java:lang:Math.min|](v6, v7) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0b9f86.   v3:= temp;
#L0b9f88.   v0:= v0 + 1;
#L0b9f8c.   if v0 >= v3 then goto L0ba00c;
#L0b9f90.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b9f94.   v6:= v6[v0];
#L0b9f98.   v6:= v6 ^~ -1;
#L0b9f9c.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9fa0.   v7:= v7[v0];
#L0b9fa4.   v6:= v6 ^& v7  @type int;
#L0b9fa6.   v4[v0]:= v6;
#L0b9faa.   v0:= v0 + 1;
#L0b9fae.   goto L0b9f8c;
#L0b9fb0.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b9fb4.   v6:= v6[v0];
#L0b9fb8.   v6:= v6 ^~ -1;
#L0b9fbc.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9fc0.   v7:= v7[v0];
#L0b9fc4.   v7:= v7 + -1;
#L0b9fc8.   v6:= v6 ^& v7  @type int;
#L0b9fca.   v4[v0]:= v6;
#L0b9fce.   goto L0b9f78;
#L0b9fd0.   if v1 >= v2 then goto L0b9fee;
#L0b9fd4.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b9fd8.   v6:= v6[v0];
#L0b9fdc.   v6:= -v6  @type int;
#L0b9fde.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9fe2.   v7:= v7[v0];
#L0b9fe6.   v6:= v6 ^& v7  @type int;
#L0b9fe8.   v4[v0]:= v6;
#L0b9fec.   goto L0b9f78;
#L0b9fee.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0b9ff2.   v6:= v6[v0];
#L0b9ff6.   v6:= -v6  @type int;
#L0b9ff8.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0b9ffc.   v7:= v7[v0];
#L0ba000.   v7:= v7 + -1;
#L0ba004.   v6:= v6 ^& v7  @type int;
#L0ba006.   v4[v0]:= v6;
#L0ba00a.   goto L0b9f78;
#L0ba00c.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0ba010.   if v0 >= v6 then goto L0ba026;
#L0ba014.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0ba018.   v6:= v6[v0];
#L0ba01c.   v4[v0]:= v6;
#L0ba020.   v0:= v0 + 1;
#L0ba024.   goto L0ba00c;
#L0ba026.   v6:= new [|java:math:BigInteger|];
#L0ba02a.   v7:= 1  @length 4;
#L0ba02c.   call temp:=  [|java:math:BigInteger.<init>|](v6, v7, v5, v4) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba032.   goto L0b9f08;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.andNotNegativePositive|] ([|java:math:BigInteger|] v10 @type (object), [|java:math:BigInteger|] v11 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.andNotNegativePositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0ba048.   v9:= -1  @length 4;
#L0ba04a.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v10) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba050.   v2:= temp;
#L0ba052.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v11) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba058.   v3:= temp;
#L0ba05a.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba05e.   if v2 < v7 then goto L0ba064;
#L0ba062.   return v10  @type object;
#L0ba064.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba068.   v8:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba06c.   call temp:=  [|java:lang:Math.max|](v7, v8) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba072.   v6:= temp;
#L0ba074.   v1:= v2;
#L0ba076.   if v3 <= v2 then goto L0ba0c4;
#L0ba07a.   v5:= new [|int|][v6];
#L0ba07e.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba082.   call temp:=  [|java:lang:Math.min|](v7, v3) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba088.   v4:= temp;
#L0ba08a.   if v1 >= v4 then goto L0ba0a0;
#L0ba08e.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba092.   v7:= v7[v1];
#L0ba096.   v5[v1]:= v7;
#L0ba09a.   v1:= v1 + 1;
#L0ba09e.   goto L0ba08a;
#L0ba0a0.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba0a4.   if v1 != v7 then goto L0ba18c;
#L0ba0a8.   v1:= v3;
#L0ba0aa.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba0ae.   if v1 >= v7 then goto L0ba18c;
#L0ba0b2.   v7:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba0b6.   v7:= v7[v1];
#L0ba0ba.   v5[v1]:= v7;
#L0ba0be.   v1:= v1 + 1;
#L0ba0c2.   goto L0ba0aa;
#L0ba0c4.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba0c8.   v7:= v7[v1];
#L0ba0cc.   v7:= -v7  @type int;
#L0ba0ce.   v8:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba0d2.   v8:= v8[v1];
#L0ba0d6.   v8:= v8 ^~ -1;
#L0ba0da.   v0:= v7 ^& v8  @type int;
#L0ba0de.   if v0 != 0 then goto L0ba17e;
#L0ba0e2.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba0e6.   v8:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba0ea.   call temp:=  [|java:lang:Math.min|](v7, v8) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba0f0.   v4:= temp;
#L0ba0f2.   v1:= v1 + 1;
#L0ba0f6.   if v1 >= v4 then goto L0ba11a;
#L0ba0fa.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba0fe.   v7:= v7[v1];
#L0ba102.   v8:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba106.   v8:= v8[v1];
#L0ba10a.   v7:= v7 ^| v8  @type int;
#L0ba10c.   v0:= v7 ^~ -1;
#L0ba110.   if v0 != 0 then goto L0ba11a;
#L0ba114.   v1:= v1 + 1;
#L0ba118.   goto L0ba0f6;
#L0ba11a.   if v0 != 0 then goto L0ba17e;
#L0ba11e.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba122.   if v1 >= v7 then goto L0ba13c;
#L0ba126.   v7:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba12a.   v7:= v7[v1];
#L0ba12e.   v0:= v7 ^~ -1;
#L0ba132.   if v0 != 0 then goto L0ba13c;
#L0ba136.   v1:= v1 + 1;
#L0ba13a.   goto L0ba11e;
#L0ba13c.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba140.   if v1 >= v7 then goto L0ba15a;
#L0ba144.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba148.   v7:= v7[v1];
#L0ba14c.   v0:= v7 ^~ -1;
#L0ba150.   if v0 != 0 then goto L0ba15a;
#L0ba154.   v1:= v1 + 1;
#L0ba158.   goto L0ba13c;
#L0ba15a.   if v0 != 0 then goto L0ba17e;
#L0ba15e.   v6:= v6 + 1;
#L0ba162.   v5:= new [|int|][v6];
#L0ba166.   v7:= v6 + -1;
#L0ba16a.   v8:= 1  @length 4;
#L0ba16c.   v5[v7]:= v8;
#L0ba170.   v10:= new [|java:math:BigInteger|];
#L0ba174.   call temp:=  [|java:math:BigInteger.<init>|](v10, v9, v6, v5) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba17a.   goto L0ba062;
#L0ba17e.   v5:= new [|int|][v6];
#L0ba182.   v7:= -v0  @type int;
#L0ba184.   v5[v1]:= v7;
#L0ba188.   v1:= v1 + 1;
#L0ba18c.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba190.   v8:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba194.   call temp:=  [|java:lang:Math.min|](v7, v8) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba19a.   v4:= temp;
#L0ba19c.   if v1 >= v4 then goto L0ba1bc;
#L0ba1a0.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba1a4.   v7:= v7[v1];
#L0ba1a8.   v8:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba1ac.   v8:= v8[v1];
#L0ba1b0.   v7:= v7 ^| v8  @type int;
#L0ba1b2.   v5[v1]:= v7;
#L0ba1b6.   v1:= v1 + 1;
#L0ba1ba.   goto L0ba19c;
#L0ba1bc.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba1c0.   if v1 >= v7 then goto L0ba1d6;
#L0ba1c4.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba1c8.   v7:= v7[v1];
#L0ba1cc.   v5[v1]:= v7;
#L0ba1d0.   v1:= v1 + 1;
#L0ba1d4.   goto L0ba1bc;
#L0ba1d6.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba1da.   if v1 >= v7 then goto L0ba1f0;
#L0ba1de.   v7:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba1e2.   v7:= v7[v1];
#L0ba1e6.   v5[v1]:= v7;
#L0ba1ea.   v1:= v1 + 1;
#L0ba1ee.   goto L0ba1d6;
#L0ba1f0.   v10:= new [|java:math:BigInteger|];
#L0ba1f4.   call temp:=  [|java:math:BigInteger.<init>|](v10, v9, v6, v5) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba1fa.   goto L0ba062;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.andNotPositive|] ([|java:math:BigInteger|] v6 @type (object), [|java:math:BigInteger|] v7 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.andNotPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0ba210.   v3:= v6.[|java:math:BigInteger.numberLength|] ;
#L0ba214.   v2:= new [|int|][v3];
#L0ba218.   v3:= v6.[|java:math:BigInteger.numberLength|] ;
#L0ba21c.   v4:= v7.[|java:math:BigInteger.numberLength|] ;
#L0ba220.   call temp:=  [|java:lang:Math.min|](v3, v4) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba226.   v1:= temp;
#L0ba228.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v6) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba22e.   v0:= temp;
#L0ba230.   if v0 >= v1 then goto L0ba254;
#L0ba234.   v3:= v6.[|java:math:BigInteger.digits|]   @type object;
#L0ba238.   v3:= v3[v0];
#L0ba23c.   v4:= v7.[|java:math:BigInteger.digits|]   @type object;
#L0ba240.   v4:= v4[v0];
#L0ba244.   v4:= v4 ^~ -1;
#L0ba248.   v3:= v3 ^& v4  @type int;
#L0ba24a.   v2[v0]:= v3;
#L0ba24e.   v0:= v0 + 1;
#L0ba252.   goto L0ba230;
#L0ba254.   v3:= v6.[|java:math:BigInteger.numberLength|] ;
#L0ba258.   if v0 >= v3 then goto L0ba26e;
#L0ba25c.   v3:= v6.[|java:math:BigInteger.digits|]   @type object;
#L0ba260.   v3:= v3[v0];
#L0ba264.   v2[v0]:= v3;
#L0ba268.   v0:= v0 + 1;
#L0ba26c.   goto L0ba254;
#L0ba26e.   v3:= new [|java:math:BigInteger|];
#L0ba272.   v4:= 1  @length 4;
#L0ba274.   v5:= v6.[|java:math:BigInteger.numberLength|] ;
#L0ba278.   call temp:=  [|java:math:BigInteger.<init>|](v3, v4, v5, v2) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba27e.   return v3  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.andNotPositiveNegative|] ([|java:math:BigInteger|] v7 @type (object), [|java:math:BigInteger|] v8 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.andNotPositiveNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ba290.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v8) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba296.   v1:= temp;
#L0ba298.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v7) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba29e.   v2:= temp;
#L0ba2a0.   v5:= v7.[|java:math:BigInteger.numberLength|] ;
#L0ba2a4.   if v1 < v5 then goto L0ba2aa;
#L0ba2a8.   return v7  @type object;
#L0ba2aa.   v5:= v7.[|java:math:BigInteger.numberLength|] ;
#L0ba2ae.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0ba2b2.   call temp:=  [|java:lang:Math.min|](v5, v6) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba2b8.   v4:= temp;
#L0ba2ba.   v3:= new [|int|][v4];
#L0ba2be.   v0:= v2;
#L0ba2c0.   if v0 >= v1 then goto L0ba2d6;
#L0ba2c4.   v5:= v7.[|java:math:BigInteger.digits|]   @type object;
#L0ba2c8.   v5:= v5[v0];
#L0ba2cc.   v3[v0]:= v5;
#L0ba2d0.   v0:= v0 + 1;
#L0ba2d4.   goto L0ba2c0;
#L0ba2d6.   if v0 != v1 then goto L0ba2f8;
#L0ba2da.   v5:= v7.[|java:math:BigInteger.digits|]   @type object;
#L0ba2de.   v5:= v5[v0];
#L0ba2e2.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0ba2e6.   v6:= v6[v0];
#L0ba2ea.   v6:= v6 + -1;
#L0ba2ee.   v5:= v5 ^& v6  @type int;
#L0ba2f0.   v3[v0]:= v5;
#L0ba2f4.   v0:= v0 + 1;
#L0ba2f8.   if v0 >= v4 then goto L0ba318;
#L0ba2fc.   v5:= v7.[|java:math:BigInteger.digits|]   @type object;
#L0ba300.   v5:= v5[v0];
#L0ba304.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0ba308.   v6:= v6[v0];
#L0ba30c.   v5:= v5 ^& v6  @type int;
#L0ba30e.   v3[v0]:= v5;
#L0ba312.   v0:= v0 + 1;
#L0ba316.   goto L0ba2f8;
#L0ba318.   v7:= new [|java:math:BigInteger|];
#L0ba31c.   v5:= 1  @length 4;
#L0ba31e.   call temp:=  [|java:math:BigInteger.<init>|](v7, v5, v4, v3) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba324.   goto L0ba2a8;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.andPositive|] ([|java:math:BigInteger|] v5 @type (object), [|java:math:BigInteger|] v6 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.andPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ba338.   v3:= v5.[|java:math:BigInteger.numberLength|] ;
#L0ba33c.   v4:= v6.[|java:math:BigInteger.numberLength|] ;
#L0ba340.   call temp:=  [|java:lang:Math.min|](v3, v4) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba346.   v2:= temp;
#L0ba348.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v5) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba34e.   v3:= temp;
#L0ba350.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v6) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba356.   v4:= temp;
#L0ba358.   call temp:=  [|java:lang:Math.max|](v3, v4) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba35e.   v0:= temp;
#L0ba360.   if v0 < v2 then goto L0ba36a;
#L0ba364.   v3:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0ba368.   return v3  @type object;
#L0ba36a.   v1:= new [|int|][v2];
#L0ba36e.   if v0 >= v2 then goto L0ba38e;
#L0ba372.   v3:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0ba376.   v3:= v3[v0];
#L0ba37a.   v4:= v6.[|java:math:BigInteger.digits|]   @type object;
#L0ba37e.   v4:= v4[v0];
#L0ba382.   v3:= v3 ^& v4  @type int;
#L0ba384.   v1[v0]:= v3;
#L0ba388.   v0:= v0 + 1;
#L0ba38c.   goto L0ba36e;
#L0ba38e.   v3:= new [|java:math:BigInteger|];
#L0ba392.   v4:= 1  @length 4;
#L0ba394.   call temp:=  [|java:math:BigInteger.<init>|](v3, v4, v2, v1) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba39a.   goto L0ba368;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.not|] ([|java:math:BigInteger|] v5 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.not:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ba3ac.   v4:= -1  @length 4;
#L0ba3ae.   v2:= v5.[|java:math:BigInteger.sign|] ;
#L0ba3b2.   if v2 != 0 then goto L0ba3bc;
#L0ba3b6.   v2:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0ba3ba.   return v2  @type object;
#L0ba3bc.   v2:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0ba3c0.   call temp:=  [|java:math:BigInteger.equals|](v5, v2) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba3c6.   v2:= temp;
#L0ba3c8.   if v2 == 0 then goto L0ba3d2;
#L0ba3cc.   v2:= @@[|java:math:BigInteger.ZERO|]   @type object;
#L0ba3d0.   goto L0ba3ba;
#L0ba3d2.   v2:= v5.[|java:math:BigInteger.numberLength|] ;
#L0ba3d6.   v2:= v2 + 1;
#L0ba3da.   v1:= new [|int|][v2];
#L0ba3de.   v2:= v5.[|java:math:BigInteger.sign|] ;
#L0ba3e2.   if v2 <= 0 then goto L0ba44e;
#L0ba3e6.   v2:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0ba3ea.   v3:= v5.[|java:math:BigInteger.numberLength|] ;
#L0ba3ee.   v3:= v3 + -1;
#L0ba3f2.   v2:= v2[v3];
#L0ba3f6.   if v2 == v4 then goto L0ba40e;
#L0ba3fa.   v0:= 0  @length 4;
#L0ba3fc.   v2:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0ba400.   v2:= v2[v0];
#L0ba404.   if v2 != v4 then goto L0ba466;
#L0ba408.   v0:= v0 + 1;
#L0ba40c.   goto L0ba3fc;
#L0ba40e.   v0:= 0  @length 4;
#L0ba410.   v2:= v5.[|java:math:BigInteger.numberLength|] ;
#L0ba414.   if v0 >= v2 then goto L0ba42a;
#L0ba418.   v2:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0ba41c.   v2:= v2[v0];
#L0ba420.   if v2 != v4 then goto L0ba42a;
#L0ba424.   v0:= v0 + 1;
#L0ba428.   goto L0ba410;
#L0ba42a.   v2:= v5.[|java:math:BigInteger.numberLength|] ;
#L0ba42e.   if v0 != v2 then goto L0ba466;
#L0ba432.   v2:= 1  @length 4;
#L0ba434.   v1[v0]:= v2;
#L0ba438.   v2:= new [|java:math:BigInteger|];
#L0ba43c.   v3:= v5.[|java:math:BigInteger.sign|] ;
#L0ba440.   v3:= -v3  @type int;
#L0ba442.   v4:= v0 + 1;
#L0ba446.   call temp:=  [|java:math:BigInteger.<init>|](v2, v3, v4, v1) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba44c.   goto L0ba3ba;
#L0ba44e.   v0:= 0  @length 4;
#L0ba450.   v2:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0ba454.   v2:= v2[v0];
#L0ba458.   if v2 != 0 then goto L0ba466;
#L0ba45c.   v1[v0]:= v4;
#L0ba460.   v0:= v0 + 1;
#L0ba464.   goto L0ba450;
#L0ba466.   v2:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0ba46a.   v2:= v2[v0];
#L0ba46e.   v3:= v5.[|java:math:BigInteger.sign|] ;
#L0ba472.   v2:= v2 + v3  @type int;
#L0ba474.   v1[v0]:= v2;
#L0ba478.   v0:= v0 + 1;
#L0ba47c.   v2:= v5.[|java:math:BigInteger.numberLength|] ;
#L0ba480.   if v0 >= v2 then goto L0ba496;
#L0ba484.   v2:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0ba488.   v2:= v2[v0];
#L0ba48c.   v1[v0]:= v2;
#L0ba490.   v0:= v0 + 1;
#L0ba494.   goto L0ba47c;
#L0ba496.   v2:= new [|java:math:BigInteger|];
#L0ba49a.   v3:= v5.[|java:math:BigInteger.sign|] ;
#L0ba49e.   v3:= -v3  @type int;
#L0ba4a0.   call temp:=  [|java:math:BigInteger.<init>|](v2, v3, v0, v1) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba4a6.   goto L0ba3ba;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.or|] ([|java:math:BigInteger|] v2 @type (object), [|java:math:BigInteger|] v3 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.or:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0ba4b8.   v0:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0ba4bc.   call temp:=  [|java:math:BigInteger.equals|](v3, v0) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba4c2.   v0:= temp;
#L0ba4c4.   if v0 != 0 then goto L0ba4d8;
#L0ba4c8.   v0:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0ba4cc.   call temp:=  [|java:math:BigInteger.equals|](v2, v0) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba4d2.   v0:= temp;
#L0ba4d4.   if v0 == 0 then goto L0ba4de;
#L0ba4d8.   v2:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0ba4dc.   return v2  @type object;
#L0ba4de.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0ba4e2.   if v0 == 0 then goto L0ba4dc;
#L0ba4e6.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0ba4ea.   if v0 != 0 then goto L0ba4f2;
#L0ba4ee.   v2:= v3  @type object;
#L0ba4f0.   goto L0ba4dc;
#L0ba4f2.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0ba4f6.   if v0 <= 0 then goto L0ba52c;
#L0ba4fa.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0ba4fe.   if v0 <= 0 then goto L0ba522;
#L0ba502.   v0:= v2.[|java:math:BigInteger.numberLength|] ;
#L0ba506.   v1:= v3.[|java:math:BigInteger.numberLength|] ;
#L0ba50a.   if v0 <= v1 then goto L0ba518;
#L0ba50e.   call temp:=  [|java:math:Logical.orPositive|](v2, v3) @signature [|Ljava/math/Logical;.orPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba514.   v2:= temp  @type object;
#L0ba516.   goto L0ba4dc;
#L0ba518.   call temp:=  [|java:math:Logical.orPositive|](v3, v2) @signature [|Ljava/math/Logical;.orPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba51e.   v2:= temp  @type object;
#L0ba520.   goto L0ba4dc;
#L0ba522.   call temp:=  [|java:math:Logical.orDiffSigns|](v2, v3) @signature [|Ljava/math/Logical;.orDiffSigns:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba528.   v2:= temp  @type object;
#L0ba52a.   goto L0ba4dc;
#L0ba52c.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0ba530.   if v0 <= 0 then goto L0ba53e;
#L0ba534.   call temp:=  [|java:math:Logical.orDiffSigns|](v3, v2) @signature [|Ljava/math/Logical;.orDiffSigns:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba53a.   v2:= temp  @type object;
#L0ba53c.   goto L0ba4dc;
#L0ba53e.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v3) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba544.   v0:= temp;
#L0ba546.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v2) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba54c.   v1:= temp;
#L0ba54e.   if v0 <= v1 then goto L0ba55c;
#L0ba552.   call temp:=  [|java:math:Logical.orNegative|](v3, v2) @signature [|Ljava/math/Logical;.orNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba558.   v2:= temp  @type object;
#L0ba55a.   goto L0ba4dc;
#L0ba55c.   call temp:=  [|java:math:Logical.orNegative|](v2, v3) @signature [|Ljava/math/Logical;.orNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba562.   v2:= temp  @type object;
#L0ba564.   goto L0ba4dc;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.orDiffSigns|] ([|java:math:BigInteger|] v9 @type (object), [|java:math:BigInteger|] v10 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.orDiffSigns:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0ba578.   v8:= -1  @length 4;
#L0ba57a.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v10) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba580.   v1:= temp;
#L0ba582.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v9) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba588.   v2:= temp;
#L0ba58a.   v6:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba58e.   if v2 < v6 then goto L0ba594;
#L0ba592.   return v10  @type object;
#L0ba594.   v5:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba598.   v4:= new [|int|][v5];
#L0ba59c.   if v1 >= v2 then goto L0ba5b8;
#L0ba5a0.   v0:= v1;
#L0ba5a2.   if v0 >= v2 then goto L0ba61e;
#L0ba5a6.   v6:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba5aa.   v6:= v6[v0];
#L0ba5ae.   v4[v0]:= v6;
#L0ba5b2.   v0:= v0 + 1;
#L0ba5b6.   goto L0ba5a2;
#L0ba5b8.   if v2 >= v1 then goto L0ba672;
#L0ba5bc.   v0:= v2;
#L0ba5be.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0ba5c2.   v6:= v6[v0];
#L0ba5c6.   v6:= -v6  @type int;
#L0ba5c8.   v4[v0]:= v6;
#L0ba5cc.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0ba5d0.   call temp:=  [|java:lang:Math.min|](v6, v1) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba5d6.   v3:= temp;
#L0ba5d8.   v0:= v0 + 1;
#L0ba5dc.   if v0 >= v3 then goto L0ba5f6;
#L0ba5e0.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0ba5e4.   v6:= v6[v0];
#L0ba5e8.   v6:= v6 ^~ -1;
#L0ba5ec.   v4[v0]:= v6;
#L0ba5f0.   v0:= v0 + 1;
#L0ba5f4.   goto L0ba5dc;
#L0ba5f6.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0ba5fa.   if v0 == v6 then goto L0ba652;
#L0ba5fe.   v6:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba602.   v6:= v6[v0];
#L0ba606.   v6:= -v6  @type int;
#L0ba608.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0ba60c.   v7:= v7[v0];
#L0ba610.   v6:= v6 ^| v7  @type int;
#L0ba612.   v6:= v6 ^~ -1;
#L0ba616.   v4[v0]:= v6;
#L0ba61a.   v0:= v0 + 1;
#L0ba61e.   v6:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba622.   v7:= v9.[|java:math:BigInteger.numberLength|] ;
#L0ba626.   call temp:=  [|java:lang:Math.min|](v6, v7) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba62c.   v3:= temp;
#L0ba62e.   if v0 >= v3 then goto L0ba694;
#L0ba632.   v6:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba636.   v6:= v6[v0];
#L0ba63a.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0ba63e.   v7:= v7[v0];
#L0ba642.   v7:= v7 ^~ -1;
#L0ba646.   v6:= v6 ^& v7  @type int;
#L0ba648.   v4[v0]:= v6;
#L0ba64c.   v0:= v0 + 1;
#L0ba650.   goto L0ba62e;
#L0ba652.   if v0 >= v1 then goto L0ba660;
#L0ba656.   v4[v0]:= v8;
#L0ba65a.   v0:= v0 + 1;
#L0ba65e.   goto L0ba652;
#L0ba660.   v6:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba664.   v6:= v6[v0];
#L0ba668.   v6:= v6 + -1;
#L0ba66c.   v4[v0]:= v6;
#L0ba670.   goto L0ba61a;
#L0ba672.   v0:= v2;
#L0ba674.   v6:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba678.   v6:= v6[v0];
#L0ba67c.   v6:= -v6  @type int;
#L0ba67e.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0ba682.   v7:= v7[v0];
#L0ba686.   v6:= v6 ^| v7  @type int;
#L0ba688.   v6:= -v6  @type int;
#L0ba68a.   v4[v0]:= v6;
#L0ba68e.   v0:= v0 + 1;
#L0ba692.   goto L0ba61e;
#L0ba694.   v6:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba698.   if v0 >= v6 then goto L0ba6ae;
#L0ba69c.   v6:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba6a0.   v6:= v6[v0];
#L0ba6a4.   v4[v0]:= v6;
#L0ba6a8.   v0:= v0 + 1;
#L0ba6ac.   goto L0ba694;
#L0ba6ae.   v10:= new [|java:math:BigInteger|];
#L0ba6b2.   call temp:=  [|java:math:BigInteger.<init>|](v10, v8, v5, v4) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba6b8.   goto L0ba592;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.orNegative|] ([|java:math:BigInteger|] v7 @type (object), [|java:math:BigInteger|] v8 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.orNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ba6cc.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v8) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba6d2.   v1:= temp;
#L0ba6d4.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v7) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba6da.   v2:= temp;
#L0ba6dc.   v5:= v8.[|java:math:BigInteger.numberLength|] ;
#L0ba6e0.   if v2 < v5 then goto L0ba6e6;
#L0ba6e4.   return v8  @type object;
#L0ba6e6.   v5:= v7.[|java:math:BigInteger.numberLength|] ;
#L0ba6ea.   if v1 < v5 then goto L0ba6f2;
#L0ba6ee.   v8:= v7  @type object;
#L0ba6f0.   goto L0ba6e4;
#L0ba6f2.   v5:= v7.[|java:math:BigInteger.numberLength|] ;
#L0ba6f6.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0ba6fa.   call temp:=  [|java:lang:Math.min|](v5, v6) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba700.   v4:= temp;
#L0ba702.   v3:= new [|int|][v4];
#L0ba706.   if v1 != v2 then goto L0ba74c;
#L0ba70a.   v5:= v7.[|java:math:BigInteger.digits|]   @type object;
#L0ba70e.   v5:= v5[v2];
#L0ba712.   v5:= -v5  @type int;
#L0ba714.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0ba718.   v6:= v6[v2];
#L0ba71c.   v6:= -v6  @type int;
#L0ba71e.   v5:= v5 ^| v6  @type int;
#L0ba720.   v5:= -v5  @type int;
#L0ba722.   v3[v2]:= v5;
#L0ba726.   v0:= v2;
#L0ba728.   v0:= v0 + 1;
#L0ba72c.   if v0 >= v4 then goto L0ba780;
#L0ba730.   v5:= v7.[|java:math:BigInteger.digits|]   @type object;
#L0ba734.   v5:= v5[v0];
#L0ba738.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0ba73c.   v6:= v6[v0];
#L0ba740.   v5:= v5 ^& v6  @type int;
#L0ba742.   v3[v0]:= v5;
#L0ba746.   v0:= v0 + 1;
#L0ba74a.   goto L0ba72c;
#L0ba74c.   v0:= v1;
#L0ba74e.   if v0 >= v2 then goto L0ba764;
#L0ba752.   v5:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0ba756.   v5:= v5[v0];
#L0ba75a.   v3[v0]:= v5;
#L0ba75e.   v0:= v0 + 1;
#L0ba762.   goto L0ba74e;
#L0ba764.   v5:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0ba768.   v5:= v5[v0];
#L0ba76c.   v6:= v7.[|java:math:BigInteger.digits|]   @type object;
#L0ba770.   v6:= v6[v0];
#L0ba774.   v6:= v6 + -1;
#L0ba778.   v5:= v5 ^& v6  @type int;
#L0ba77a.   v3[v0]:= v5;
#L0ba77e.   goto L0ba728;
#L0ba780.   v8:= new [|java:math:BigInteger|];
#L0ba784.   v5:= -1  @length 4;
#L0ba786.   call temp:=  [|java:math:BigInteger.<init>|](v8, v5, v4, v3) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba78c.   goto L0ba6e4;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.orPositive|] ([|java:math:BigInteger|] v5 @type (object), [|java:math:BigInteger|] v6 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.orPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ba7a0.   v2:= v5.[|java:math:BigInteger.numberLength|] ;
#L0ba7a4.   v1:= new [|int|][v2];
#L0ba7a8.   v0:= 0  @length 4;
#L0ba7aa.   v3:= v6.[|java:math:BigInteger.numberLength|] ;
#L0ba7ae.   if v0 >= v3 then goto L0ba7ce;
#L0ba7b2.   v3:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0ba7b6.   v3:= v3[v0];
#L0ba7ba.   v4:= v6.[|java:math:BigInteger.digits|]   @type object;
#L0ba7be.   v4:= v4[v0];
#L0ba7c2.   v3:= v3 ^| v4  @type int;
#L0ba7c4.   v1[v0]:= v3;
#L0ba7c8.   v0:= v0 + 1;
#L0ba7cc.   goto L0ba7aa;
#L0ba7ce.   if v0 >= v2 then goto L0ba7e4;
#L0ba7d2.   v3:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0ba7d6.   v3:= v3[v0];
#L0ba7da.   v1[v0]:= v3;
#L0ba7de.   v0:= v0 + 1;
#L0ba7e2.   goto L0ba7ce;
#L0ba7e4.   v3:= new [|java:math:BigInteger|];
#L0ba7e8.   v4:= 1  @length 4;
#L0ba7ea.   call temp:=  [|java:math:BigInteger.<init>|](v3, v4, v2, v1) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0ba7f0.   return v3  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.xor|] ([|java:math:BigInteger|] v2 @type (object), [|java:math:BigInteger|] v3 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.xor:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0ba804.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0ba808.   if v0 != 0 then goto L0ba80e;
#L0ba80c.   return v2  @type object;
#L0ba80e.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0ba812.   if v0 != 0 then goto L0ba81a;
#L0ba816.   v2:= v3  @type object;
#L0ba818.   goto L0ba80c;
#L0ba81a.   v0:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0ba81e.   call temp:=  [|java:math:BigInteger.equals|](v3, v0) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba824.   v0:= temp;
#L0ba826.   if v0 == 0 then goto L0ba834;
#L0ba82a.   call temp:=  [|java:math:BigInteger.not|](v2) @signature [|Ljava/math/BigInteger;.not:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba830.   v2:= temp  @type object;
#L0ba832.   goto L0ba80c;
#L0ba834.   v0:= @@[|java:math:BigInteger.MINUS_ONE|]   @type object;
#L0ba838.   call temp:=  [|java:math:BigInteger.equals|](v2, v0) @signature [|Ljava/math/BigInteger;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba83e.   v0:= temp;
#L0ba840.   if v0 == 0 then goto L0ba84e;
#L0ba844.   call temp:=  [|java:math:BigInteger.not|](v3) @signature [|Ljava/math/BigInteger;.not:()Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba84a.   v2:= temp  @type object;
#L0ba84c.   goto L0ba80c;
#L0ba84e.   v0:= v2.[|java:math:BigInteger.sign|] ;
#L0ba852.   if v0 <= 0 then goto L0ba888;
#L0ba856.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0ba85a.   if v0 <= 0 then goto L0ba87e;
#L0ba85e.   v0:= v2.[|java:math:BigInteger.numberLength|] ;
#L0ba862.   v1:= v3.[|java:math:BigInteger.numberLength|] ;
#L0ba866.   if v0 <= v1 then goto L0ba874;
#L0ba86a.   call temp:=  [|java:math:Logical.xorPositive|](v2, v3) @signature [|Ljava/math/Logical;.xorPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba870.   v2:= temp  @type object;
#L0ba872.   goto L0ba80c;
#L0ba874.   call temp:=  [|java:math:Logical.xorPositive|](v3, v2) @signature [|Ljava/math/Logical;.xorPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba87a.   v2:= temp  @type object;
#L0ba87c.   goto L0ba80c;
#L0ba87e.   call temp:=  [|java:math:Logical.xorDiffSigns|](v2, v3) @signature [|Ljava/math/Logical;.xorDiffSigns:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba884.   v2:= temp  @type object;
#L0ba886.   goto L0ba80c;
#L0ba888.   v0:= v3.[|java:math:BigInteger.sign|] ;
#L0ba88c.   if v0 <= 0 then goto L0ba89a;
#L0ba890.   call temp:=  [|java:math:Logical.xorDiffSigns|](v3, v2) @signature [|Ljava/math/Logical;.xorDiffSigns:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba896.   v2:= temp  @type object;
#L0ba898.   goto L0ba80c;
#L0ba89a.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v3) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba8a0.   v0:= temp;
#L0ba8a2.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v2) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba8a8.   v1:= temp;
#L0ba8aa.   if v0 <= v1 then goto L0ba8b8;
#L0ba8ae.   call temp:=  [|java:math:Logical.xorNegative|](v3, v2) @signature [|Ljava/math/Logical;.xorNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba8b4.   v2:= temp  @type object;
#L0ba8b6.   goto L0ba80c;
#L0ba8b8.   call temp:=  [|java:math:Logical.xorNegative|](v2, v3) @signature [|Ljava/math/Logical;.xorNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Logical|] @type static;
#L0ba8be.   v2:= temp  @type object;
#L0ba8c0.   goto L0ba80c;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.xorDiffSigns|] ([|java:math:BigInteger|] v10 @type (object), [|java:math:BigInteger|] v11 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.xorDiffSigns:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0ba8d4.   v9:= -1  @length 4;
#L0ba8d6.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba8da.   v8:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba8de.   call temp:=  [|java:lang:Math.max|](v7, v8) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba8e4.   v6:= temp;
#L0ba8e6.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v11) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba8ec.   v2:= temp;
#L0ba8ee.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v10) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0ba8f4.   v3:= temp;
#L0ba8f6.   if v2 >= v3 then goto L0ba954;
#L0ba8fa.   v5:= new [|int|][v6];
#L0ba8fe.   v1:= v2;
#L0ba900.   v7:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba904.   v7:= v7[v1];
#L0ba908.   v5[v1]:= v7;
#L0ba90c.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba910.   call temp:=  [|java:lang:Math.min|](v7, v3) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba916.   v4:= temp;
#L0ba918.   v1:= v1 + 1;
#L0ba91c.   if v1 >= v4 then goto L0ba932;
#L0ba920.   v7:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba924.   v7:= v7[v1];
#L0ba928.   v5[v1]:= v7;
#L0ba92c.   v1:= v1 + 1;
#L0ba930.   goto L0ba91c;
#L0ba932.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba936.   if v1 != v7 then goto L0ba9ba;
#L0ba93a.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba93e.   if v1 >= v7 then goto L0ba9ba;
#L0ba942.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba946.   v7:= v7[v1];
#L0ba94a.   v5[v1]:= v7;
#L0ba94e.   v1:= v1 + 1;
#L0ba952.   goto L0ba93a;
#L0ba954.   if v3 >= v2 then goto L0baa1a;
#L0ba958.   v5:= new [|int|][v6];
#L0ba95c.   v1:= v3;
#L0ba95e.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba962.   v7:= v7[v1];
#L0ba966.   v7:= -v7  @type int;
#L0ba968.   v5[v1]:= v7;
#L0ba96c.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba970.   call temp:=  [|java:lang:Math.min|](v7, v2) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba976.   v4:= temp;
#L0ba978.   v1:= v1 + 1;
#L0ba97c.   if v1 >= v4 then goto L0ba996;
#L0ba980.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba984.   v7:= v7[v1];
#L0ba988.   v7:= v7 ^~ -1;
#L0ba98c.   v5[v1]:= v7;
#L0ba990.   v1:= v1 + 1;
#L0ba994.   goto L0ba97c;
#L0ba996.   if v1 != v2 then goto L0ba9f2;
#L0ba99a.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba99e.   v7:= v7[v1];
#L0ba9a2.   v8:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba9a6.   v8:= v8[v1];
#L0ba9aa.   v8:= -v8  @type int;
#L0ba9ac.   v7:= v7 ^~ v8  @type int;
#L0ba9ae.   v7:= v7 ^~ -1;
#L0ba9b2.   v5[v1]:= v7;
#L0ba9b6.   v1:= v1 + 1;
#L0ba9ba.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0ba9be.   v8:= v10.[|java:math:BigInteger.numberLength|] ;
#L0ba9c2.   call temp:=  [|java:lang:Math.min|](v7, v8) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0ba9c8.   v4:= temp;
#L0ba9ca.   if v1 >= v4 then goto L0baae4;
#L0ba9ce.   v7:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0ba9d2.   v7:= v7[v1];
#L0ba9d6.   v7:= v7 ^~ -1;
#L0ba9da.   v8:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0ba9de.   v8:= v8[v1];
#L0ba9e2.   v7:= v7 ^~ v8  @type int;
#L0ba9e4.   v7:= v7 ^~ -1;
#L0ba9e8.   v5[v1]:= v7;
#L0ba9ec.   v1:= v1 + 1;
#L0ba9f0.   goto L0ba9ca;
#L0ba9f2.   if v1 >= v2 then goto L0baa00;
#L0ba9f6.   v5[v1]:= v9;
#L0ba9fa.   v1:= v1 + 1;
#L0ba9fe.   goto L0ba9f2;
#L0baa00.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0baa04.   if v1 >= v7 then goto L0ba9ba;
#L0baa08.   v7:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0baa0c.   v7:= v7[v1];
#L0baa10.   v5[v1]:= v7;
#L0baa14.   v1:= v1 + 1;
#L0baa18.   goto L0baa00;
#L0baa1a.   v1:= v2;
#L0baa1c.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0baa20.   v7:= v7[v1];
#L0baa24.   v8:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0baa28.   v8:= v8[v1];
#L0baa2c.   v8:= -v8  @type int;
#L0baa2e.   v0:= v7 ^~ v8  @type int;
#L0baa32.   if v0 != 0 then goto L0baad2;
#L0baa36.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0baa3a.   v8:= v11.[|java:math:BigInteger.numberLength|] ;
#L0baa3e.   call temp:=  [|java:lang:Math.min|](v7, v8) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0baa44.   v4:= temp;
#L0baa46.   v1:= v1 + 1;
#L0baa4a.   if v1 >= v4 then goto L0baa70;
#L0baa4e.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0baa52.   v7:= v7[v1];
#L0baa56.   v8:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0baa5a.   v8:= v8[v1];
#L0baa5e.   v8:= v8 ^~ -1;
#L0baa62.   v0:= v7 ^~ v8  @type int;
#L0baa66.   if v0 != 0 then goto L0baa70;
#L0baa6a.   v1:= v1 + 1;
#L0baa6e.   goto L0baa4a;
#L0baa70.   if v0 != 0 then goto L0baad2;
#L0baa74.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0baa78.   if v1 >= v7 then goto L0baa92;
#L0baa7c.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0baa80.   v7:= v7[v1];
#L0baa84.   v0:= v7 ^~ -1;
#L0baa88.   if v0 != 0 then goto L0baa92;
#L0baa8c.   v1:= v1 + 1;
#L0baa90.   goto L0baa74;
#L0baa92.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0baa96.   if v1 >= v7 then goto L0baab0;
#L0baa9a.   v7:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0baa9e.   v7:= v7[v1];
#L0baaa2.   v0:= v7 ^~ -1;
#L0baaa6.   if v0 != 0 then goto L0baab0;
#L0baaaa.   v1:= v1 + 1;
#L0baaae.   goto L0baa92;
#L0baab0.   if v0 != 0 then goto L0baad2;
#L0baab4.   v6:= v6 + 1;
#L0baab8.   v5:= new [|int|][v6];
#L0baabc.   v7:= v6 + -1;
#L0baac0.   v8:= 1  @length 4;
#L0baac2.   v5[v7]:= v8;
#L0baac6.   v7:= new [|java:math:BigInteger|];
#L0baaca.   call temp:=  [|java:math:BigInteger.<init>|](v7, v9, v6, v5) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0baad0.   return v7  @type object;
#L0baad2.   v5:= new [|int|][v6];
#L0baad6.   v7:= -v0  @type int;
#L0baad8.   v5[v1]:= v7;
#L0baadc.   v1:= v1 + 1;
#L0baae0.   goto L0ba9ba;
#L0baae4.   v7:= v10.[|java:math:BigInteger.numberLength|] ;
#L0baae8.   if v1 >= v7 then goto L0baafe;
#L0baaec.   v7:= v10.[|java:math:BigInteger.digits|]   @type object;
#L0baaf0.   v7:= v7[v1];
#L0baaf4.   v5[v1]:= v7;
#L0baaf8.   v1:= v1 + 1;
#L0baafc.   goto L0baae4;
#L0baafe.   v7:= v11.[|java:math:BigInteger.numberLength|] ;
#L0bab02.   if v1 >= v7 then goto L0bab18;
#L0bab06.   v7:= v11.[|java:math:BigInteger.digits|]   @type object;
#L0bab0a.   v7:= v7[v1];
#L0bab0e.   v5[v1]:= v7;
#L0bab12.   v1:= v1 + 1;
#L0bab16.   goto L0baafe;
#L0bab18.   v7:= new [|java:math:BigInteger|];
#L0bab1c.   call temp:=  [|java:math:BigInteger.<init>|](v7, v9, v6, v5) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0bab22.   goto L0baad0;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.xorNegative|] ([|java:math:BigInteger|] v8 @type (object), [|java:math:BigInteger|] v9 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.xorNegative:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0bab34.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0bab38.   v7:= v9.[|java:math:BigInteger.numberLength|] ;
#L0bab3c.   call temp:=  [|java:lang:Math.max|](v6, v7) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0bab42.   v5:= temp;
#L0bab44.   v4:= new [|int|][v5];
#L0bab48.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v8) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bab4e.   v2:= temp;
#L0bab50.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v9) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bab56.   v1:= temp;
#L0bab58.   v0:= v1;
#L0bab5a.   if v2 != v1 then goto L0babac;
#L0bab5e.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0bab62.   v6:= v6[v0];
#L0bab66.   v6:= -v6  @type int;
#L0bab68.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0bab6c.   v7:= v7[v0];
#L0bab70.   v7:= -v7  @type int;
#L0bab72.   v6:= v6 ^~ v7  @type int;
#L0bab74.   v4[v0]:= v6;
#L0bab78.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0bab7c.   v7:= v9.[|java:math:BigInteger.numberLength|] ;
#L0bab80.   call temp:=  [|java:lang:Math.min|](v6, v7) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0bab86.   v3:= temp;
#L0bab88.   v0:= v0 + 1;
#L0bab8c.   if v0 >= v3 then goto L0bac2c;
#L0bab90.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0bab94.   v6:= v6[v0];
#L0bab98.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0bab9c.   v7:= v7[v0];
#L0baba0.   v6:= v6 ^~ v7  @type int;
#L0baba2.   v4[v0]:= v6;
#L0baba6.   v0:= v0 + 1;
#L0babaa.   goto L0bab8c;
#L0babac.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0babb0.   v6:= v6[v0];
#L0babb4.   v6:= -v6  @type int;
#L0babb6.   v4[v0]:= v6;
#L0babba.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0babbe.   call temp:=  [|java:lang:Math.min|](v6, v2) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0babc4.   v3:= temp;
#L0babc6.   v0:= v0 + 1;
#L0babca.   if v0 >= v3 then goto L0babe4;
#L0babce.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0babd2.   v6:= v6[v0];
#L0babd6.   v6:= v6 ^~ -1;
#L0babda.   v4[v0]:= v6;
#L0babde.   v0:= v0 + 1;
#L0babe2.   goto L0babca;
#L0babe4.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0babe8.   if v0 != v6 then goto L0bac0e;
#L0babec.   if v0 >= v2 then goto L0babfc;
#L0babf0.   v6:= -1  @length 4;
#L0babf2.   v4[v0]:= v6;
#L0babf6.   v0:= v0 + 1;
#L0babfa.   goto L0babec;
#L0babfc.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0bac00.   v6:= v6[v0];
#L0bac04.   v6:= v6 + -1;
#L0bac08.   v4[v0]:= v6;
#L0bac0c.   goto L0bab78;
#L0bac0e.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0bac12.   v6:= v6[v0];
#L0bac16.   v6:= -v6  @type int;
#L0bac18.   v7:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0bac1c.   v7:= v7[v0];
#L0bac20.   v7:= v7 ^~ -1;
#L0bac24.   v6:= v6 ^~ v7  @type int;
#L0bac26.   v4[v0]:= v6;
#L0bac2a.   goto L0bab78;
#L0bac2c.   v6:= v8.[|java:math:BigInteger.numberLength|] ;
#L0bac30.   if v0 >= v6 then goto L0bac46;
#L0bac34.   v6:= v8.[|java:math:BigInteger.digits|]   @type object;
#L0bac38.   v6:= v6[v0];
#L0bac3c.   v4[v0]:= v6;
#L0bac40.   v0:= v0 + 1;
#L0bac44.   goto L0bac2c;
#L0bac46.   v6:= v9.[|java:math:BigInteger.numberLength|] ;
#L0bac4a.   if v0 >= v6 then goto L0bac60;
#L0bac4e.   v6:= v9.[|java:math:BigInteger.digits|]   @type object;
#L0bac52.   v6:= v6[v0];
#L0bac56.   v4[v0]:= v6;
#L0bac5a.   v0:= v0 + 1;
#L0bac5e.   goto L0bac46;
#L0bac60.   v6:= new [|java:math:BigInteger|];
#L0bac64.   v7:= 1  @length 4;
#L0bac66.   call temp:=  [|java:math:BigInteger.<init>|](v6, v7, v5, v4) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0bac6c.   return v6  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:Logical.xorPositive|] ([|java:math:BigInteger|] v5 @type (object), [|java:math:BigInteger|] v6 @type (object)) @owner [|java:math:Logical|] @signature [|Ljava/math/Logical;.xorPositive:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0bac80.   v2:= v5.[|java:math:BigInteger.numberLength|] ;
#L0bac84.   v1:= new [|int|][v2];
#L0bac88.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v5) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bac8e.   v3:= temp;
#L0bac90.   call temp:=  [|java:math:BigInteger.getFirstNonzeroDigit|](v6) @signature [|Ljava/math/BigInteger;.getFirstNonzeroDigit:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bac96.   v4:= temp;
#L0bac98.   call temp:=  [|java:lang:Math.min|](v3, v4) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0bac9e.   v0:= temp;
#L0baca0.   v3:= v6.[|java:math:BigInteger.numberLength|] ;
#L0baca4.   if v0 >= v3 then goto L0bacc4;
#L0baca8.   v3:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0bacac.   v3:= v3[v0];
#L0bacb0.   v4:= v6.[|java:math:BigInteger.digits|]   @type object;
#L0bacb4.   v4:= v4[v0];
#L0bacb8.   v3:= v3 ^~ v4  @type int;
#L0bacba.   v1[v0]:= v3;
#L0bacbe.   v0:= v0 + 1;
#L0bacc2.   goto L0baca0;
#L0bacc4.   v3:= v5.[|java:math:BigInteger.numberLength|] ;
#L0bacc8.   if v0 >= v3 then goto L0bacde;
#L0baccc.   v3:= v5.[|java:math:BigInteger.digits|]   @type object;
#L0bacd0.   v3:= v3[v0];
#L0bacd4.   v1[v0]:= v3;
#L0bacd8.   v0:= v0 + 1;
#L0bacdc.   goto L0bacc4;
#L0bacde.   v3:= new [|java:math:BigInteger|];
#L0bace2.   v4:= 1  @length 4;
#L0bace4.   call temp:=  [|java:math:BigInteger.<init>|](v3, v4, v2, v1) @signature [|Ljava/math/BigInteger;.<init>:(II[I)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0bacea.   return v3  @type object;

   }
record [|java:math:MathContext|]  @type class @AccessFlag PUBLIC_FINAL extends  [|java:io:Serializable|] {
      [|int|] [|java:math:MathContext.precision|]    @AccessFlag PRIVATE_FINAL;
      [|java:math:RoundingMode|] [|java:math:MathContext.roundingMode|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:math:MathContext|] @@[|java:math:MathContext.DECIMAL128|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:math:MathContext|] @@[|java:math:MathContext.DECIMAL32|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:math:MathContext|] @@[|java:math:MathContext.DECIMAL64|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:math:MathContext|] @@[|java:math:MathContext.UNLIMITED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:math:MathContext.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:math:MathContext.<clinit>|] () @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bacfc.   v0:= new [|java:math:MathContext|];
#L0bad00.   v1:= 34  @length 16;
#L0bad04.   v2:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0bad08.   call temp:=  [|java:math:MathContext.<init>|](v0, v1, v2) @signature [|Ljava/math/MathContext;.<init>:(ILjava/math/RoundingMode;)V|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0bad0e.   @@[|java:math:MathContext.DECIMAL128|] := v0  @type object;
#L0bad12.   v0:= new [|java:math:MathContext|];
#L0bad16.   v1:= 7  @length 4;
#L0bad18.   v2:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0bad1c.   call temp:=  [|java:math:MathContext.<init>|](v0, v1, v2) @signature [|Ljava/math/MathContext;.<init>:(ILjava/math/RoundingMode;)V|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0bad22.   @@[|java:math:MathContext.DECIMAL32|] := v0  @type object;
#L0bad26.   v0:= new [|java:math:MathContext|];
#L0bad2a.   v1:= 16  @length 16;
#L0bad2e.   v2:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0bad32.   call temp:=  [|java:math:MathContext.<init>|](v0, v1, v2) @signature [|Ljava/math/MathContext;.<init>:(ILjava/math/RoundingMode;)V|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0bad38.   @@[|java:math:MathContext.DECIMAL64|] := v0  @type object;
#L0bad3c.   v0:= new [|java:math:MathContext|];
#L0bad40.   v1:= 0  @length 4;
#L0bad42.   v2:= @@[|java:math:RoundingMode.HALF_UP|]   @type object;
#L0bad46.   call temp:=  [|java:math:MathContext.<init>|](v0, v1, v2) @signature [|Ljava/math/MathContext;.<init>:(ILjava/math/RoundingMode;)V|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0bad4c.   @@[|java:math:MathContext.UNLIMITED|] := v0  @type object;
#L0bad50.   return @void ;

   }
    procedure [|void|] [|java:math:MathContext.<init>|] ([|java:math:MathContext|] v1 @type (this), [|int|] v2) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0bad64.   v0:= @@[|java:math:RoundingMode.HALF_UP|]   @type object;
#L0bad68.   call temp:=  [|java:math:MathContext.<init>|](v1, v2, v0) @signature [|Ljava/math/MathContext;.<init>:(ILjava/math/RoundingMode;)V|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0bad6e.   return @void ;

   }
    procedure [|void|] [|java:math:MathContext.<init>|] ([|java:math:MathContext|] v0 @type (this), [|int|] v1, [|java:math:RoundingMode|] v2 @type (object)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.<init>:(ILjava/math/RoundingMode;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bad80.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bad86.   v0.[|java:math:MathContext.precision|]  := v1;
#L0bad8a.   v0.[|java:math:MathContext.roundingMode|]  := v2 @type object;
#L0bad8e.   call temp:=  [|java:math:MathContext.checkValid|](v0) @signature [|Ljava/math/MathContext;.checkValid:()V|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0bad94.   return @void ;

   }
    procedure [|void|] [|java:math:MathContext.<init>|] ([|java:math:MathContext|] v8 @type (this), [|java:lang:String|] v9 @type (object)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0bada8.   call temp:=  [|java:lang:Object.<init>|](v8) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0badae.   v6:= "precision=" @type (object, string);
#L0badb2.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0badb8.   v1:= temp;
#L0badba.   v6:= "roundingMode=" @type (object, string);
#L0badbe.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0badc4.   v3:= temp;
#L0badc6.   v6:= "precision=" @type (object, string);
#L0badca.   call temp:=  [|java:lang:String.startsWith|](v9, v6) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0badd0.   v6:= temp;
#L0badd2.   if v6 == 0 then goto L0bade8;
#L0badd6.   v6:= 32  @length 16;
#L0badda.   call temp:=  [|java:lang:String.indexOf|](v9, v6, v1) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0bade0.   v5:= temp;
#L0bade2.   v6:= -1  @length 4;
#L0bade4.   if v5 != v6 then goto L0badf6;
#L0bade8.   v6:= "Missing precision" @type (object, string);
#L0badec.   call temp:=  [|java:math:MathContext.invalidMathContext|](v8, v6, v9) @signature [|Ljava/math/MathContext;.invalidMathContext:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0badf2.   v6:= temp  @type object;
#L0badf4.   throw v6;
#L0badf6.   call temp:=  [|java:lang:String.substring|](v9, v1, v5) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0badfc.   v2:= temp  @type object;
#L0badfe.   call temp:=  [|java:lang:Integer.parseInt|](v2) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0bae04.   v6:= temp;
#L0bae06.   v8.[|java:math:MathContext.precision|]  := v6;
#L0bae0a.   v4:= v5 + 1;
#L0bae0e.   v6:= "roundingMode=" @type (object, string);
#L0bae12.   v7:= 0  @length 4;
#L0bae14.   call temp:=  [|java:lang:String.regionMatches|](v9, v4, v6, v7, v3) @signature [|Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0bae1a.   v6:= temp;
#L0bae1c.   if v6 != 0 then goto L0bae3e;
#L0bae20.   v6:= "Missing rounding mode" @type (object, string);
#L0bae24.   call temp:=  [|java:math:MathContext.invalidMathContext|](v8, v6, v9) @signature [|Ljava/math/MathContext;.invalidMathContext:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0bae2a.   v6:= temp  @type object;
#L0bae2c.   throw v6;
#L0bae2e.   v0:= Exception  @type object;
#L0bae30.   v6:= "Bad precision" @type (object, string);
#L0bae34.   call temp:=  [|java:math:MathContext.invalidMathContext|](v8, v6, v9) @signature [|Ljava/math/MathContext;.invalidMathContext:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0bae3a.   v6:= temp  @type object;
#L0bae3c.   throw v6;
#L0bae3e.   v4:= v4 + v3  @type int;
#L0bae40.   call temp:=  [|java:lang:String.substring|](v9, v4) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0bae46.   v6:= temp  @type object;
#L0bae48.   call temp:=  [|java:math:RoundingMode.valueOf|](v6) @signature [|Ljava/math/RoundingMode;.valueOf:(Ljava/lang/String;)Ljava/math/RoundingMode;|] @classDescriptor [|java:math:RoundingMode|] @type static;
#L0bae4e.   v6:= temp  @type object;
#L0bae50.   v8.[|java:math:MathContext.roundingMode|]  := v6 @type object;
#L0bae54.   call temp:=  [|java:math:MathContext.checkValid|](v8) @signature [|Ljava/math/MathContext;.checkValid:()V|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0bae5a.   return @void ;
  catch  [|java:lang:NumberFormatException|] @[L0badfe..L0bae0a] goto L0bae2e;

   }
    procedure [|void|] [|java:math:MathContext.checkValid|] ([|java:math:MathContext|] v3 @type (this)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.checkValid:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bae7c.   v0:= v3.[|java:math:MathContext.precision|] ;
#L0bae80.   if v0 >= 0 then goto L0baeba;
#L0bae84.   v0:= new [|java:lang:IllegalArgumentException|];
#L0bae88.   v1:= new [|java:lang:StringBuilder|];
#L0bae8c.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bae92.   v2:= "Negative precision: " @type (object, string);
#L0bae96.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bae9c.   v1:= temp  @type object;
#L0bae9e.   v2:= v3.[|java:math:MathContext.precision|] ;
#L0baea2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0baea8.   v1:= temp  @type object;
#L0baeaa.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0baeb0.   v1:= temp  @type object;
#L0baeb2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0baeb8.   throw v0;
#L0baeba.   v0:= v3.[|java:math:MathContext.roundingMode|]   @type object;
#L0baebe.   if v0 != 0 then goto L0baed2;
#L0baec2.   v0:= new [|java:lang:NullPointerException|];
#L0baec6.   v1:= "roundingMode == null" @type (object, string);
#L0baeca.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0baed0.   throw v0;
#L0baed2.   return @void ;

   }
    procedure [|java:lang:IllegalArgumentException|] [|java:math:MathContext.invalidMathContext|] ([|java:math:MathContext|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.invalidMathContext:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0baee4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0baee8.   v1:= new [|java:lang:StringBuilder|];
#L0baeec.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0baef2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0baef8.   v1:= temp  @type object;
#L0baefa.   v2:= ": " @type (object, string);
#L0baefe.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0baf04.   v1:= temp  @type object;
#L0baf06.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0baf0c.   v1:= temp  @type object;
#L0baf0e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0baf14.   v1:= temp  @type object;
#L0baf16.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0baf1c.   throw v0;

   }
    procedure [|void|] [|java:math:MathContext.readObject|] ([|java:math:MathContext|] v3 @type (this), [|java:io:ObjectInputStream|] v4 @type (object)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0baf30.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v4) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0baf36.   call temp:=  [|java:math:MathContext.checkValid|](v3) @signature [|Ljava/math/MathContext;.checkValid:()V|] @classDescriptor [|java:math:MathContext|] @type direct;
#L0baf3c.   return @void ;
#L0baf3e.   v0:= Exception  @type object;
#L0baf40.   v1:= new [|java:io:StreamCorruptedException|];
#L0baf44.   call temp:=  [|java:lang:Exception.getMessage|](v0) @signature [|Ljava/lang/Exception;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:Exception|] @type virtual;
#L0baf4a.   v2:= temp  @type object;
#L0baf4c.   call temp:=  [|java:io:StreamCorruptedException.<init>|](v1, v2) @signature [|Ljava/io/StreamCorruptedException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:StreamCorruptedException|] @type direct;
#L0baf52.   throw v1;
  catch  [|java:lang:Exception|] @[L0baf36..L0baf3c] goto L0baf3e;

   }
    procedure [|boolean|] [|java:math:MathContext.equals|] ([|java:math:MathContext|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0baf74.   v0:= instanceof @varname v3 @type [|java:math:MathContext|];
#L0baf78.   if v0 == 0 then goto L0bafaa;
#L0baf7c.   v0:= v3  @type object;
#L0baf7e.   v0:= ([|java:math:MathContext|])v0;
#L0baf82.   call temp:=  [|java:math:MathContext.getPrecision|](v0) @signature [|Ljava/math/MathContext;.getPrecision:()I|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0baf88.   v0:= temp;
#L0baf8a.   v1:= v2.[|java:math:MathContext.precision|] ;
#L0baf8e.   if v0 != v1 then goto L0bafaa;
#L0baf92.   v3:= ([|java:math:MathContext|])v3;
#L0baf96.   call temp:=  [|java:math:MathContext.getRoundingMode|](v3) @signature [|Ljava/math/MathContext;.getRoundingMode:()Ljava/math/RoundingMode;|] @classDescriptor [|java:math:MathContext|] @type virtual;
#L0baf9c.   v0:= temp  @type object;
#L0baf9e.   v1:= v2.[|java:math:MathContext.roundingMode|]   @type object;
#L0bafa2.   if v0 != v1 then goto L0bafaa;
#L0bafa6.   v0:= 1  @length 4;
#L0bafa8.   return v0;
#L0bafaa.   v0:= 0  @length 4;
#L0bafac.   goto L0bafa8;

   }
    procedure [|int|] [|java:math:MathContext.getPrecision|] ([|java:math:MathContext|] v1 @type (this)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.getPrecision:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bafc0.   v0:= v1.[|java:math:MathContext.precision|] ;
#L0bafc4.   return v0;

   }
    procedure [|java:math:RoundingMode|] [|java:math:MathContext.getRoundingMode|] ([|java:math:MathContext|] v1 @type (this)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.getRoundingMode:()Ljava/math/RoundingMode;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bafd8.   v0:= v1.[|java:math:MathContext.roundingMode|]   @type object;
#L0bafdc.   return v0  @type object;

   }
    procedure [|int|] [|java:math:MathContext.hashCode|] ([|java:math:MathContext|] v2 @type (this)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0baff0.   v0:= v2.[|java:math:MathContext.precision|] ;
#L0baff4.   v0:= v0 ^< 3;
#L0baff8.   v1:= v2.[|java:math:MathContext.roundingMode|]   @type object;
#L0baffc.   call temp:=  [|java:math:RoundingMode.ordinal|](v1) @signature [|Ljava/math/RoundingMode;.ordinal:()I|] @classDescriptor [|java:math:RoundingMode|] @type virtual;
#L0bb002.   v1:= temp;
#L0bb004.   v0:= v0 ^| v1  @type int;
#L0bb006.   return v0;

   }
    procedure [|java:lang:String|] [|java:math:MathContext.toString|] ([|java:math:MathContext|] v2 @type (this)) @owner [|java:math:MathContext|] @signature [|Ljava/math/MathContext;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0bb018.   v0:= new [|java:lang:StringBuilder|];
#L0bb01c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bb022.   v1:= "precision=" @type (object, string);
#L0bb026.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bb02c.   v0:= temp  @type object;
#L0bb02e.   v1:= v2.[|java:math:MathContext.precision|] ;
#L0bb032.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bb038.   v0:= temp  @type object;
#L0bb03a.   v1:= " roundingMode=" @type (object, string);
#L0bb03e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bb044.   v0:= temp  @type object;
#L0bb046.   v1:= v2.[|java:math:MathContext.roundingMode|]   @type object;
#L0bb04a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bb050.   v0:= temp  @type object;
#L0bb052.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bb058.   v0:= temp  @type object;
#L0bb05a.   return v0  @type object;

   }
record [|java:math:Multiplication|]  @type class @AccessFlag   {
   }
      global [|java:math:BigInteger|][] @@[|java:math:Multiplication.bigFivePows|]    @AccessFlag STATIC_FINAL;
      global [|java:math:BigInteger|][] @@[|java:math:Multiplication.bigTenPows|]    @AccessFlag STATIC_FINAL;
      global [|int|][] @@[|java:math:Multiplication.fivePows|]    @AccessFlag STATIC_FINAL;
      global [|int|][] @@[|java:math:Multiplication.tenPows|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:math:Multiplication.<clinit>|] () @owner [|java:math:Multiplication|] @signature [|Ljava/math/Multiplication;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0bb06c.   v4:= 32  @length 16;
#L0bb070.   v3:= 10  @length 16;
#L0bb074.   v3:= new [|int|][v3];
#L0bb078.   goto L0bb13c;
#L0bb07e.   @@[|java:math:Multiplication.tenPows|] := v3  @type object;
#L0bb082.   v3:= 14  @length 16;
#L0bb086.   v3:= new [|int|][v3];
#L0bb08a.   goto L0bb16c;
#L0bb090.   @@[|java:math:Multiplication.fivePows|] := v3  @type object;
#L0bb094.   v3:= new [|java:math:BigInteger|][v4];
#L0bb098.   @@[|java:math:Multiplication.bigTenPows|] := v3  @type object;
#L0bb09c.   v3:= new [|java:math:BigInteger|][v4];
#L0bb0a0.   @@[|java:math:Multiplication.bigFivePows|] := v3  @type object;
#L0bb0a4.   v0:= 1  @length wide16;
#L0bb0a8.   v2:= 0  @length 4;
#L0bb0aa.   v3:= 18  @length 16;
#L0bb0ae.   if v2 > v3 then goto L0bb0e2;
#L0bb0b2.   v3:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb0b6.   call temp:=  [|java:math:BigInteger.valueOf|](v0, v1) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0bb0bc.   v4:= temp  @type object;
#L0bb0be.   v3[v2]:= v4  @type object;
#L0bb0c2.   v3:= @@[|java:math:Multiplication.bigTenPows|]   @type object;
#L0bb0c6.   v4:= v0 ^< v2  @type long;
#L0bb0ca.   call temp:=  [|java:math:BigInteger.valueOf|](v4, v5) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0bb0d0.   v4:= temp  @type object;
#L0bb0d2.   v3[v2]:= v4  @type object;
#L0bb0d6.   v3:= 5  @length wide16;
#L0bb0da.   v0:= v0 * v3  @type long;
#L0bb0dc.   v2:= v2 + 1;
#L0bb0e0.   goto L0bb0aa;
#L0bb0e2.   v3:= @@[|java:math:Multiplication.bigTenPows|]   @type object;
#L0bb0e6.   v3:= v3.length;
#L0bb0e8.   if v2 >= v3 then goto L0bb138;
#L0bb0ec.   v3:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb0f0.   v4:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb0f4.   v5:= v2 + -1;
#L0bb0f8.   v4:= v4[v5]  @type object;
#L0bb0fc.   v5:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb100.   v6:= 1  @length 4;
#L0bb102.   v5:= v5[v6]  @type object;
#L0bb106.   call temp:=  [|java:math:BigInteger.multiply|](v4, v5) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb10c.   v4:= temp  @type object;
#L0bb10e.   v3[v2]:= v4  @type object;
#L0bb112.   v3:= @@[|java:math:Multiplication.bigTenPows|]   @type object;
#L0bb116.   v4:= @@[|java:math:Multiplication.bigTenPows|]   @type object;
#L0bb11a.   v5:= v2 + -1;
#L0bb11e.   v4:= v4[v5]  @type object;
#L0bb122.   v5:= @@[|java:math:BigInteger.TEN|]   @type object;
#L0bb126.   call temp:=  [|java:math:BigInteger.multiply|](v4, v5) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb12c.   v4:= temp  @type object;
#L0bb12e.   v3[v2]:= v4  @type object;
#L0bb132.   v2:= v2 + 1;
#L0bb136.   goto L0bb0e2;
#L0bb138.   return @void ;
#L0bb13a.   
#L0bb13c.   v3:=`[1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 ];
               goto L0bb07e;
#L0bb16c.   v3:=`[1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625, 48828125, 244140625, 1220703125 ];
               goto L0bb090;

   }
    procedure [|void|] [|java:math:Multiplication.<init>|] ([|java:math:Multiplication|] v0 @type (this)) @owner [|java:math:Multiplication|] @signature [|Ljava/math/Multiplication;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0bb1bc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bb1c2.   return @void ;

   }
    procedure [|java:math:BigInteger|] [|java:math:Multiplication.multiplyByFivePow|] ([|java:math:BigInteger|] v2 @type (object), [|int|] v3) @owner [|java:math:Multiplication|] @signature [|Ljava/math/Multiplication;.multiplyByFivePow:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0bb1d4.   v0:= @@[|java:math:Multiplication.fivePows|]   @type object;
#L0bb1d8.   v0:= v0.length;
#L0bb1da.   if v3 >= v0 then goto L0bb1f0;
#L0bb1de.   v0:= @@[|java:math:Multiplication.fivePows|]   @type object;
#L0bb1e2.   v0:= v0[v3];
#L0bb1e6.   call temp:=  [|java:math:Multiplication.multiplyByPositiveInt|](v2, v0) @signature [|Ljava/math/Multiplication;.multiplyByPositiveInt:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0bb1ec.   v0:= temp  @type object;
#L0bb1ee.   return v0  @type object;
#L0bb1f0.   v0:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb1f4.   v0:= v0.length;
#L0bb1f6.   if v3 >= v0 then goto L0bb20c;
#L0bb1fa.   v0:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb1fe.   v0:= v0[v3]  @type object;
#L0bb202.   call temp:=  [|java:math:BigInteger.multiply|](v2, v0) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb208.   v0:= temp  @type object;
#L0bb20a.   goto L0bb1ee;
#L0bb20c.   v0:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb210.   v1:= 1  @length 4;
#L0bb212.   v0:= v0[v1]  @type object;
#L0bb216.   call temp:=  [|java:math:BigInteger.pow|](v0, v3) @signature [|Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb21c.   v0:= temp  @type object;
#L0bb21e.   call temp:=  [|java:math:BigInteger.multiply|](v2, v0) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb224.   v0:= temp  @type object;
#L0bb226.   goto L0bb1ee;

   }
    procedure [|java:math:BigInteger|] [|java:math:Multiplication.multiplyByPositiveInt|] ([|java:math:BigInteger|] v2 @type (object), [|int|] v3) @owner [|java:math:Multiplication|] @signature [|Ljava/math/Multiplication;.multiplyByPositiveInt:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0bb238.   call temp:=  [|java:math:BigInteger.getBigInt|](v2) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb23e.   v1:= temp  @type object;
#L0bb240.   call temp:=  [|java:math:BigInt.copy|](v1) @signature [|Ljava/math/BigInt;.copy:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb246.   v0:= temp  @type object;
#L0bb248.   call temp:=  [|java:math:BigInt.multiplyByPositiveInt|](v0, v3) @signature [|Ljava/math/BigInt;.multiplyByPositiveInt:(I)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb24e.   v1:= new [|java:math:BigInteger|];
#L0bb252.   call temp:=  [|java:math:BigInteger.<init>|](v1, v0) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0bb258.   return v1  @type object;

   }
    procedure [|java:math:BigInteger|] [|java:math:Multiplication.multiplyByTenPow|] ([|java:math:BigInteger|] v2 @type (object), [|long|] v3) @owner [|java:math:Multiplication|] @signature [|Ljava/math/Multiplication;.multiplyByTenPow:(Ljava/math/BigInteger;J)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0bb26c.   v0:= @@[|java:math:Multiplication.tenPows|]   @type object;
#L0bb270.   v0:= v0.length;
#L0bb272.   v0:= (long)v0  @type i2l;
#L0bb274.   v0:= cmp(v3,v0);
#L0bb278.   if v0 >= 0 then goto L0bb290;
#L0bb27c.   v0:= @@[|java:math:Multiplication.tenPows|]   @type object;
#L0bb280.   v1:= (int)v3  @type l2i;
#L0bb282.   v0:= v0[v1];
#L0bb286.   call temp:=  [|java:math:Multiplication.multiplyByPositiveInt|](v2, v0) @signature [|Ljava/math/Multiplication;.multiplyByPositiveInt:(Ljava/math/BigInteger;I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0bb28c.   v0:= temp  @type object;
#L0bb28e.   return v0  @type object;
#L0bb290.   call temp:=  [|java:math:Multiplication.powerOf10|](v3, v4) @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:Multiplication|] @type static;
#L0bb296.   v0:= temp  @type object;
#L0bb298.   call temp:=  [|java:math:BigInteger.multiply|](v2, v0) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb29e.   v0:= temp  @type object;
#L0bb2a0.   goto L0bb28e;

   }
    procedure [|java:math:BigInteger|] [|java:math:Multiplication.powerOf10|] ([|long|] v13) @owner [|java:math:Multiplication|] @signature [|Ljava/math/Multiplication;.powerOf10:(J)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L0bb2b4.   v2:= (int)v13  @type l2i;
#L0bb2b6.   v7:= @@[|java:math:Multiplication.bigTenPows|]   @type object;
#L0bb2ba.   v7:= v7.length;
#L0bb2bc.   v7:= (long)v7  @type i2l;
#L0bb2be.   v7:= cmp(v13,v7);
#L0bb2c2.   if v7 >= 0 then goto L0bb2d0;
#L0bb2c6.   v7:= @@[|java:math:Multiplication.bigTenPows|]   @type object;
#L0bb2ca.   v6:= v7[v2]  @type object;
#L0bb2ce.   return v6  @type object;
#L0bb2d0.   v7:= 50  @length wide16;
#L0bb2d4.   v7:= cmp(v13,v7);
#L0bb2d8.   if v7 > 0 then goto L0bb2ea;
#L0bb2dc.   v7:= @@[|java:math:BigInteger.TEN|]   @type object;
#L0bb2e0.   call temp:=  [|java:math:BigInteger.pow|](v7, v2) @signature [|Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb2e6.   v6:= temp  @type object;
#L0bb2e8.   goto L0bb2ce;
#L0bb2ea.   v7:= 1000  @length wide16;
#L0bb2ee.   v7:= cmp(v13,v7);
#L0bb2f2.   if v7 > 0 then goto L0bb312;
#L0bb2f6.   v7:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb2fa.   v8:= 1  @length 4;
#L0bb2fc.   v7:= v7[v8]  @type object;
#L0bb300.   call temp:=  [|java:math:BigInteger.pow|](v7, v2) @signature [|Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb306.   v7:= temp  @type object;
#L0bb308.   call temp:=  [|java:math:BigInteger.shiftLeft|](v7, v2) @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb30e.   v6:= temp  @type object;
#L0bb310.   goto L0bb2ce;
#L0bb312.   v7:= 1  @length wide16;
#L0bb316.   v9:= (double)v13  @type l2d;
#L0bb318.   v11:= 2.408240L  @length wide;
#L0bb322.   v9:= v9 / v11  @type double;
#L0bb324.   v9:= (long)v9  @type d2l;
#L0bb326.   v0:= v7 + v9  @type long;
#L0bb32a.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L0bb330.   v7:= temp  @type object;
#L0bb332.   call temp:=  [|java:lang:Runtime.freeMemory|](v7) @signature [|Ljava/lang/Runtime;.freeMemory:()J|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L0bb338.   v7:= temp  @type wide;
#L0bb33a.   v7:= cmp(v0,v7);
#L0bb33e.   if v7 <= 0 then goto L0bb34e;
#L0bb342.   v7:= new [|java:lang:ArithmeticException|];
#L0bb346.   call temp:=  [|java:lang:ArithmeticException.<init>|](v7) @signature [|Ljava/lang/ArithmeticException;.<init>:()V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0bb34c.   throw v7;
#L0bb34e.    v7:= nan  @length wide32;
#L0bb354.   v7:= cmp(v13,v7);
#L0bb358.   if v7 > 0 then goto L0bb378;
#L0bb35c.   v7:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb360.   v8:= 1  @length 4;
#L0bb362.   v7:= v7[v8]  @type object;
#L0bb366.   call temp:=  [|java:math:BigInteger.pow|](v7, v2) @signature [|Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb36c.   v7:= temp  @type object;
#L0bb36e.   call temp:=  [|java:math:BigInteger.shiftLeft|](v7, v2) @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb374.   v6:= temp  @type object;
#L0bb376.   goto L0bb2ce;
#L0bb378.   v7:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb37c.   v8:= 1  @length 4;
#L0bb37e.   v7:= v7[v8]  @type object;
#L0bb382.    v8:= nan;
#L0bb388.   call temp:=  [|java:math:BigInteger.pow|](v7, v8) @signature [|Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb38e.   v5:= temp  @type object;
#L0bb390.   v6:= v5  @type object;
#L0bb392.    v7:= nan  @length wide32;
#L0bb398.   v3:= v13 - v7  @type long;
#L0bb39c.    v7:= nan  @length wide32;
#L0bb3a2.   v7:= v13 % v7  @type long;
#L0bb3a6.   v2:= (int)v7  @type l2i;
#L0bb3a8.    v7:= nan  @length wide32;
#L0bb3ae.   v7:= cmp(v3,v7);
#L0bb3b2.   if v7 <= 0 then goto L0bb3c8;
#L0bb3b6.   call temp:=  [|java:math:BigInteger.multiply|](v6, v5) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb3bc.   v6:= temp  @type object;
#L0bb3be.    v7:= nan  @length wide32;
#L0bb3c4.   v3:= v3 - v7  @type long;
#L0bb3c6.   goto L0bb3a8;
#L0bb3c8.   v7:= @@[|java:math:Multiplication.bigFivePows|]   @type object;
#L0bb3cc.   v8:= 1  @length 4;
#L0bb3ce.   v7:= v7[v8]  @type object;
#L0bb3d2.   call temp:=  [|java:math:BigInteger.pow|](v7, v2) @signature [|Ljava/math/BigInteger;.pow:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb3d8.   v7:= temp  @type object;
#L0bb3da.   call temp:=  [|java:math:BigInteger.multiply|](v6, v7) @signature [|Ljava/math/BigInteger;.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb3e0.   v6:= temp  @type object;
#L0bb3e2.    v7:= nan;
#L0bb3e8.   call temp:=  [|java:math:BigInteger.shiftLeft|](v6, v7) @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb3ee.   v6:= temp  @type object;
#L0bb3f0.    v7:= nan  @length wide32;
#L0bb3f6.   v3:= v13 - v7  @type long;
#L0bb3fa.    v7:= nan  @length wide32;
#L0bb400.   v7:= cmp(v3,v7);
#L0bb404.   if v7 <= 0 then goto L0bb420;
#L0bb408.    v7:= nan;
#L0bb40e.   call temp:=  [|java:math:BigInteger.shiftLeft|](v6, v7) @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb414.   v6:= temp  @type object;
#L0bb416.    v7:= nan  @length wide32;
#L0bb41c.   v3:= v3 - v7  @type long;
#L0bb41e.   goto L0bb3fa;
#L0bb420.   call temp:=  [|java:math:BigInteger.shiftLeft|](v6, v2) @signature [|Ljava/math/BigInteger;.shiftLeft:(I)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb426.   v6:= temp  @type object;
#L0bb428.   goto L0bb2ce;

   }
record [|java:math:NativeBN|]  @type class @AccessFlag FINAL  {
   }
    procedure [|void|] [|java:math:NativeBN.<init>|] ([|java:math:NativeBN|] v0 @type (this)) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0bb43c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bb442.   return @void ;

   }
    procedure [|boolean|] [|java:math:NativeBN.BN_add|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_add:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_add_word|] ([|int|] v0, [|int|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_add_word:(II)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_bin2bn|] ([|byte|][] v0, [|int|] v1, [|boolean|] v2, [|int|] v3) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_bin2bn:([BIZI)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|java:math:NativeBN.BN_bn2bin|] ([|int|] v0) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_bn2bin:(I)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:math:NativeBN.BN_bn2dec|] ([|int|] v0) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_bn2dec:(I)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:math:NativeBN.BN_bn2hex|] ([|int|] v0) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_bn2hex:(I)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:math:NativeBN.BN_cmp|] ([|int|] v0, [|int|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_cmp:(II)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_copy|] ([|int|] v0, [|int|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_copy:(II)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:math:NativeBN.BN_dec2bn|] ([|int|] v0, [|java:lang:String|] v1 @type (object)) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_dec2bn:(ILjava/lang/String;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_div|] ([|int|] v0, [|int|] v1, [|int|] v2, [|int|] v3) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_div:(IIII)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:math:NativeBN.BN_div_word|] ([|int|] v0, [|int|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_div_word:(II)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_exp|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_exp:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:math:NativeBN.BN_free|] ([|int|] v0) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_free:(I)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_gcd|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_gcd:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_generate_prime_ex|] ([|int|] v0, [|int|] v1, [|boolean|] v2, [|int|] v3, [|int|] v4, [|int|] v5) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_generate_prime_ex:(IIZIII)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:math:NativeBN.BN_hex2bn|] ([|int|] v0, [|java:lang:String|] v1 @type (object)) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_hex2bn:(ILjava/lang/String;)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_is_bit_set|] ([|int|] v0, [|int|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_is_bit_set:(II)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_is_prime_ex|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_is_prime_ex:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_mod_exp|] ([|int|] v0, [|int|] v1, [|int|] v2, [|int|] v3) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_mod_exp:(IIII)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_mod_inverse|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_mod_inverse:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:math:NativeBN.BN_mod_word|] ([|int|] v0, [|int|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_mod_word:(II)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_mul|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_mul:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_mul_word|] ([|int|] v0, [|int|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_mul_word:(II)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:math:NativeBN.BN_new|] () @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_new:()I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_nnmod|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_nnmod:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:math:NativeBN.BN_set_negative|] ([|int|] v0, [|int|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_set_negative:(II)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_shift|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_shift:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_sub|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_sub:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.BN_sub_word|] ([|int|] v0, [|int|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.BN_sub_word:(II)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|java:lang:String|] [|java:math:NativeBN.ERR_error_string|] ([|int|] v0) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.ERR_error_string:(I)Ljava/lang/String;|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:math:NativeBN.ERR_get_error|] () @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.ERR_get_error:()I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:math:NativeBN.bitLength|] ([|int|] v0) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.bitLength:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|][] [|java:math:NativeBN.bn2litEndInts|] ([|int|] v0) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.bn2litEndInts:(I)[I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.litEndInts2bn|] ([|int|][] v0, [|int|] v1, [|boolean|] v2, [|int|] v3) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.litEndInts2bn:([IIZI)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|java:math:NativeBN.longInt|] ([|int|] v0) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.longInt:(I)J|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.modifyBit|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.modifyBit:(III)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.putLongInt|] ([|int|] v0, [|long|] v1) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.putLongInt:(IJ)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.putULongInt|] ([|int|] v0, [|long|] v1, [|boolean|] v3) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.putULongInt:(IJZ)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:math:NativeBN.sign|] ([|int|] v0) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.sign:(I)I|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:math:NativeBN.twosComp2bn|] ([|byte|][] v0, [|int|] v1, [|int|] v2) @owner [|java:math:NativeBN|] @signature [|Ljava/math/NativeBN;.twosComp2bn:([BII)Z|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
record [|java:math:Primality|]  @type class @AccessFlag   {
   }
      global [|java:math:BigInteger|][] @@[|java:math:Primality.BIprimes|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|][] @@[|java:math:Primality.primes|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:math:Primality.<clinit>|] () @owner [|java:math:Primality|] @signature [|Ljava/math/Primality;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0bb454.   v1:= 172  @length 16;
#L0bb458.   v1:= new [|int|][v1];
#L0bb45c.   goto L0bb4a4;
#L0bb462.   @@[|java:math:Primality.primes|] := v1  @type object;
#L0bb466.   v1:= @@[|java:math:Primality.primes|]   @type object;
#L0bb46a.   v1:= v1.length;
#L0bb46c.   v1:= new [|java:math:BigInteger|][v1];
#L0bb470.   @@[|java:math:Primality.BIprimes|] := v1  @type object;
#L0bb474.   v0:= 0  @length 4;
#L0bb476.   v1:= @@[|java:math:Primality.primes|]   @type object;
#L0bb47a.   v1:= v1.length;
#L0bb47c.   if v0 >= v1 then goto L0bb4a0;
#L0bb480.   v1:= @@[|java:math:Primality.BIprimes|]   @type object;
#L0bb484.   v2:= @@[|java:math:Primality.primes|]   @type object;
#L0bb488.   v2:= v2[v0];
#L0bb48c.   v2:= (long)v2  @type i2l;
#L0bb48e.   call temp:=  [|java:math:BigInteger.valueOf|](v2, v3) @signature [|Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;|] @classDescriptor [|java:math:BigInteger|] @type static;
#L0bb494.   v2:= temp  @type object;
#L0bb496.   v1[v0]:= v2  @type object;
#L0bb49a.   v0:= v0 + 1;
#L0bb49e.   goto L0bb476;
#L0bb4a0.   return @void ;
#L0bb4a2.   
#L0bb4a4.   v1:=`[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021 ];
               goto L0bb462;

   }
    procedure [|void|] [|java:math:Primality.<init>|] ([|java:math:Primality|] v0 @type (this)) @owner [|java:math:Primality|] @signature [|Ljava/math/Primality;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0bb76c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bb772.   return @void ;

   }
    procedure [|java:math:BigInteger|] [|java:math:Primality.nextProbablePrime|] ([|java:math:BigInteger|] v12 @type (object)) @owner [|java:math:Primality|] @signature [|Ljava/math/Primality;.nextProbablePrime:(Ljava/math/BigInteger;)Ljava/math/BigInteger;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L0bb784.   v9:= 0  @length 4;
#L0bb786.   v0:= 1024  @length 16;
#L0bb78a.   v10:= @@[|java:math:Primality.primes|]   @type object;
#L0bb78e.   v10:= v10.length;
#L0bb790.   v5:= new [|int|][v10];
#L0bb794.   v2:= new [|boolean|][v0];
#L0bb798.   call temp:=  [|java:math:BigInteger.getBigInt|](v12) @signature [|Ljava/math/BigInteger;.getBigInt:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0bb79e.   v6:= temp  @type object;
#L0bb7a0.   call temp:=  [|java:math:BigInt.bitLength|](v6) @signature [|Ljava/math/BigInt;.bitLength:()I|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb7a6.   v10:= temp;
#L0bb7a8.   v11:= 10  @length 16;
#L0bb7ac.   if v10 > v11 then goto L0bb7ee;
#L0bb7b0.   call temp:=  [|java:math:BigInt.longInt|](v6) @signature [|Ljava/math/BigInt;.longInt:()J|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb7b6.   v10:= temp  @type wide;
#L0bb7b8.   v4:= (int)v10  @type l2i;
#L0bb7ba.   v10:= @@[|java:math:Primality.primes|]   @type object;
#L0bb7be.   v11:= @@[|java:math:Primality.primes|]   @type object;
#L0bb7c2.   v11:= v11.length;
#L0bb7c4.   v11:= v11 + -1;
#L0bb7c8.   v10:= v10[v11];
#L0bb7cc.   if v4 >= v10 then goto L0bb7ee;
#L0bb7d0.   v1:= 0  @length 4;
#L0bb7d2.   v9:= @@[|java:math:Primality.primes|]   @type object;
#L0bb7d6.   v9:= v9[v1];
#L0bb7da.   if v4 < v9 then goto L0bb7e4;
#L0bb7de.   v1:= v1 + 1;
#L0bb7e2.   goto L0bb7d2;
#L0bb7e4.   v9:= @@[|java:math:Primality.BIprimes|]   @type object;
#L0bb7e8.   v9:= v9[v1]  @type object;
#L0bb7ec.   return v9  @type object;
#L0bb7ee.   call temp:=  [|java:math:BigInt.copy|](v6) @signature [|Ljava/math/BigInt;.copy:()Ljava/math/BigInt;|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb7f4.   v8:= temp  @type object;
#L0bb7f6.   v7:= new [|java:math:BigInt|];
#L0bb7fa.   call temp:=  [|java:math:BigInt.<init>|](v7) @signature [|Ljava/math/BigInt;.<init>:()V|] @classDescriptor [|java:math:BigInt|] @type direct;
#L0bb800.   v10:= 2  @length 4;
#L0bb802.   call temp:=  [|java:math:BigInt.remainderByPositiveInt|](v6, v10) @signature [|Ljava/math/BigInt;.remainderByPositiveInt:(Ljava/math/BigInt;I)I|] @classDescriptor [|java:math:BigInt|] @type static;
#L0bb808.   v10:= temp;
#L0bb80a.   v10:= v10 + 1;
#L0bb80e.   call temp:=  [|java:math:BigInt.addPositiveInt|](v8, v10) @signature [|Ljava/math/BigInt;.addPositiveInt:(I)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb814.   v1:= 0  @length 4;
#L0bb816.   v10:= @@[|java:math:Primality.primes|]   @type object;
#L0bb81a.   v10:= v10.length;
#L0bb81c.   if v1 >= v10 then goto L0bb842;
#L0bb820.   v10:= @@[|java:math:Primality.primes|]   @type object;
#L0bb824.   v10:= v10[v1];
#L0bb828.   call temp:=  [|java:math:BigInt.remainderByPositiveInt|](v8, v10) @signature [|Ljava/math/BigInt;.remainderByPositiveInt:(Ljava/math/BigInt;I)I|] @classDescriptor [|java:math:BigInt|] @type static;
#L0bb82e.   v10:= temp;
#L0bb830.   v10:= v10 - v0  @type int;
#L0bb832.   v5[v1]:= v10;
#L0bb836.   v1:= v1 + 1;
#L0bb83a.   goto L0bb816;
#L0bb83c.   call temp:=  [|java:math:BigInt.addPositiveInt|](v8, v0) @signature [|Ljava/math/BigInt;.addPositiveInt:(I)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb842.   call temp:=  [|java:util:Arrays.fill|](v2, v9) @signature [|Ljava/util/Arrays;.fill:([ZZ)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0bb848.   v1:= 0  @length 4;
#L0bb84a.   v10:= @@[|java:math:Primality.primes|]   @type object;
#L0bb84e.   v10:= v10.length;
#L0bb850.   if v1 >= v10 then goto L0bb8a0;
#L0bb854.   v10:= v5[v1];
#L0bb858.   v10:= v10 + v0  @type int;
#L0bb85a.   v11:= @@[|java:math:Primality.primes|]   @type object;
#L0bb85e.   v11:= v11[v1];
#L0bb862.   v10:= v10 % v11  @type int;
#L0bb864.   v5[v1]:= v10;
#L0bb868.   v10:= v5[v1];
#L0bb86c.   if v10 != 0 then goto L0bb888;
#L0bb870.   v3:= v9;
#L0bb872.   if v3 >= v0 then goto L0bb89a;
#L0bb876.   v10:= 1  @length 4;
#L0bb878.   v2[v3]:= v10  @boolean;
#L0bb87c.   v10:= @@[|java:math:Primality.primes|]   @type object;
#L0bb880.   v10:= v10[v1];
#L0bb884.   v3:= v3 + v10  @type int;
#L0bb886.   goto L0bb872;
#L0bb888.   v10:= @@[|java:math:Primality.primes|]   @type object;
#L0bb88c.   v10:= v10[v1];
#L0bb890.   v11:= v5[v1];
#L0bb894.   v3:= v10 - v11  @type int;
#L0bb898.   goto L0bb872;
#L0bb89a.   v1:= v1 + 1;
#L0bb89e.   goto L0bb84a;
#L0bb8a0.   v3:= 0  @length 4;
#L0bb8a2.   if v3 >= v0 then goto L0bb83c;
#L0bb8a6.   v10:= v2[v3]  @boolean;
#L0bb8aa.   if v10 != 0 then goto L0bb8d6;
#L0bb8ae.   call temp:=  [|java:math:BigInt.putCopy|](v7, v8) @signature [|Ljava/math/BigInt;.putCopy:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb8b4.   call temp:=  [|java:math:BigInt.addPositiveInt|](v7, v3) @signature [|Ljava/math/BigInt;.addPositiveInt:(I)V|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb8ba.   v10:= 100  @length 16;
#L0bb8be.   call temp:=  [|java:math:BigInt.isPrime|](v7, v10) @signature [|Ljava/math/BigInt;.isPrime:(I)Z|] @classDescriptor [|java:math:BigInt|] @type virtual;
#L0bb8c4.   v10:= temp;
#L0bb8c6.   if v10 == 0 then goto L0bb8d6;
#L0bb8ca.   v9:= new [|java:math:BigInteger|];
#L0bb8ce.   call temp:=  [|java:math:BigInteger.<init>|](v9, v7) @signature [|Ljava/math/BigInteger;.<init>:(Ljava/math/BigInt;)V|] @classDescriptor [|java:math:BigInteger|] @type direct;
#L0bb8d4.   goto L0bb7ec;
#L0bb8d6.   v3:= v3 + 1;
#L0bb8da.   goto L0bb8a2;

   }
record [|java:math:RoundingMode|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
      [|int|] [|java:math:RoundingMode.bigDecimalRM|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:math:RoundingMode|][] @@[|java:math:RoundingMode.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:math:RoundingMode|] @@[|java:math:RoundingMode.CEILING|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:math:RoundingMode|] @@[|java:math:RoundingMode.DOWN|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:math:RoundingMode|] @@[|java:math:RoundingMode.FLOOR|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:math:RoundingMode|] @@[|java:math:RoundingMode.HALF_DOWN|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:math:RoundingMode|] @@[|java:math:RoundingMode.HALF_EVEN|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:math:RoundingMode|] @@[|java:math:RoundingMode.HALF_UP|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:math:RoundingMode|] @@[|java:math:RoundingMode.UNNECESSARY|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:math:RoundingMode|] @@[|java:math:RoundingMode.UP|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:math:RoundingMode.<clinit>|] () @owner [|java:math:RoundingMode|] @signature [|Ljava/math/RoundingMode;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0bb8ec.   v8:= 4  @length 4;
#L0bb8ee.   v7:= 3  @length 4;
#L0bb8f0.   v6:= 2  @length 4;
#L0bb8f2.   v5:= 1  @length 4;
#L0bb8f4.   v4:= 0  @length 4;
#L0bb8f6.   v0:= new [|java:math:RoundingMode|];
#L0bb8fa.   v1:= "UP" @type (object, string);
#L0bb8fe.   call temp:=  [|java:math:RoundingMode.<init>|](v0, v1, v4, v4) @signature [|Ljava/math/RoundingMode;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:math:RoundingMode|] @type direct;
#L0bb904.   @@[|java:math:RoundingMode.UP|] := v0  @type object;
#L0bb908.   v0:= new [|java:math:RoundingMode|];
#L0bb90c.   v1:= "DOWN" @type (object, string);
#L0bb910.   call temp:=  [|java:math:RoundingMode.<init>|](v0, v1, v5, v5) @signature [|Ljava/math/RoundingMode;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:math:RoundingMode|] @type direct;
#L0bb916.   @@[|java:math:RoundingMode.DOWN|] := v0  @type object;
#L0bb91a.   v0:= new [|java:math:RoundingMode|];
#L0bb91e.   v1:= "CEILING" @type (object, string);
#L0bb922.   call temp:=  [|java:math:RoundingMode.<init>|](v0, v1, v6, v6) @signature [|Ljava/math/RoundingMode;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:math:RoundingMode|] @type direct;
#L0bb928.   @@[|java:math:RoundingMode.CEILING|] := v0  @type object;
#L0bb92c.   v0:= new [|java:math:RoundingMode|];
#L0bb930.   v1:= "FLOOR" @type (object, string);
#L0bb934.   call temp:=  [|java:math:RoundingMode.<init>|](v0, v1, v7, v7) @signature [|Ljava/math/RoundingMode;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:math:RoundingMode|] @type direct;
#L0bb93a.   @@[|java:math:RoundingMode.FLOOR|] := v0  @type object;
#L0bb93e.   v0:= new [|java:math:RoundingMode|];
#L0bb942.   v1:= "HALF_UP" @type (object, string);
#L0bb946.   call temp:=  [|java:math:RoundingMode.<init>|](v0, v1, v8, v8) @signature [|Ljava/math/RoundingMode;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:math:RoundingMode|] @type direct;
#L0bb94c.   @@[|java:math:RoundingMode.HALF_UP|] := v0  @type object;
#L0bb950.   v0:= new [|java:math:RoundingMode|];
#L0bb954.   v1:= "HALF_DOWN" @type (object, string);
#L0bb958.   v2:= 5  @length 4;
#L0bb95a.   v3:= 5  @length 4;
#L0bb95c.   call temp:=  [|java:math:RoundingMode.<init>|](v0, v1, v2, v3) @signature [|Ljava/math/RoundingMode;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:math:RoundingMode|] @type direct;
#L0bb962.   @@[|java:math:RoundingMode.HALF_DOWN|] := v0  @type object;
#L0bb966.   v0:= new [|java:math:RoundingMode|];
#L0bb96a.   v1:= "HALF_EVEN" @type (object, string);
#L0bb96e.   v2:= 6  @length 4;
#L0bb970.   v3:= 6  @length 4;
#L0bb972.   call temp:=  [|java:math:RoundingMode.<init>|](v0, v1, v2, v3) @signature [|Ljava/math/RoundingMode;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:math:RoundingMode|] @type direct;
#L0bb978.   @@[|java:math:RoundingMode.HALF_EVEN|] := v0  @type object;
#L0bb97c.   v0:= new [|java:math:RoundingMode|];
#L0bb980.   v1:= "UNNECESSARY" @type (object, string);
#L0bb984.   v2:= 7  @length 4;
#L0bb986.   v3:= 7  @length 4;
#L0bb988.   call temp:=  [|java:math:RoundingMode.<init>|](v0, v1, v2, v3) @signature [|Ljava/math/RoundingMode;.<init>:(Ljava/lang/String;II)V|] @classDescriptor [|java:math:RoundingMode|] @type direct;
#L0bb98e.   @@[|java:math:RoundingMode.UNNECESSARY|] := v0  @type object;
#L0bb992.   v0:= 8  @length 16;
#L0bb996.   v0:= new [|java:math:RoundingMode|][v0];
#L0bb99a.   v1:= @@[|java:math:RoundingMode.UP|]   @type object;
#L0bb99e.   v0[v4]:= v1  @type object;
#L0bb9a2.   v1:= @@[|java:math:RoundingMode.DOWN|]   @type object;
#L0bb9a6.   v0[v5]:= v1  @type object;
#L0bb9aa.   v1:= @@[|java:math:RoundingMode.CEILING|]   @type object;
#L0bb9ae.   v0[v6]:= v1  @type object;
#L0bb9b2.   v1:= @@[|java:math:RoundingMode.FLOOR|]   @type object;
#L0bb9b6.   v0[v7]:= v1  @type object;
#L0bb9ba.   v1:= @@[|java:math:RoundingMode.HALF_UP|]   @type object;
#L0bb9be.   v0[v8]:= v1  @type object;
#L0bb9c2.   v1:= 5  @length 4;
#L0bb9c4.   v2:= @@[|java:math:RoundingMode.HALF_DOWN|]   @type object;
#L0bb9c8.   v0[v1]:= v2  @type object;
#L0bb9cc.   v1:= 6  @length 4;
#L0bb9ce.   v2:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0bb9d2.   v0[v1]:= v2  @type object;
#L0bb9d6.   v1:= 7  @length 4;
#L0bb9d8.   v2:= @@[|java:math:RoundingMode.UNNECESSARY|]   @type object;
#L0bb9dc.   v0[v1]:= v2  @type object;
#L0bb9e0.   @@[|java:math:RoundingMode.$VALUES|] := v0  @type object;
#L0bb9e4.   return @void ;

   }
    procedure [|void|] [|java:math:RoundingMode.<init>|] ([|java:math:RoundingMode|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2, [|int|] v3) @owner [|java:math:RoundingMode|] @signature [|Ljava/math/RoundingMode;.<init>:(Ljava/lang/String;II)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0bb9f8.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0bb9fe.   v0.[|java:math:RoundingMode.bigDecimalRM|]  := v3;
#L0bba02.   return @void ;

   }
    procedure [|java:math:RoundingMode|] [|java:math:RoundingMode.valueOf|] ([|int|] v2) @owner [|java:math:RoundingMode|] @signature [|Ljava/math/RoundingMode;.valueOf:(I)Ljava/math/RoundingMode;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0bba14.   goto L0bba5c;
#L0bba1a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0bba1e.   v1:= "Invalid rounding mode" @type (object, string);
#L0bba22.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bba28.   throw v0;
#L0bba2a.   v0:= @@[|java:math:RoundingMode.CEILING|]   @type object;
#L0bba2e.   return v0  @type object;
#L0bba30.   v0:= @@[|java:math:RoundingMode.DOWN|]   @type object;
#L0bba34.   goto L0bba2e;
#L0bba36.   v0:= @@[|java:math:RoundingMode.FLOOR|]   @type object;
#L0bba3a.   goto L0bba2e;
#L0bba3c.   v0:= @@[|java:math:RoundingMode.HALF_DOWN|]   @type object;
#L0bba40.   goto L0bba2e;
#L0bba42.   v0:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0bba46.   goto L0bba2e;
#L0bba48.   v0:= @@[|java:math:RoundingMode.HALF_UP|]   @type object;
#L0bba4c.   goto L0bba2e;
#L0bba4e.   v0:= @@[|java:math:RoundingMode.UNNECESSARY|]   @type object;
#L0bba52.   goto L0bba2e;
#L0bba54.   v0:= @@[|java:math:RoundingMode.UP|]   @type object;
#L0bba58.   goto L0bba2e;
#L0bba5a.   
#L0bba5c.   switch  v2
                 | 0 => goto L0bba54
                 | 1 => goto L0bba30
                 | 2 => goto L0bba2a
                 | 3 => goto L0bba36
                 | 4 => goto L0bba48
                 | 5 => goto L0bba3c
                 | 6 => goto L0bba42
                 | 7 => goto L0bba4e
                 | => goto L0bba1a;

   }
    procedure [|java:math:RoundingMode|] [|java:math:RoundingMode.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:math:RoundingMode|] @signature [|Ljava/math/RoundingMode;.valueOf:(Ljava/lang/String;)Ljava/math/RoundingMode;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0bba94.   v0:= new [|java:math:RoundingMode|];
#L0bba98.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0bba9e.   v0:= temp  @type object;
#L0bbaa0.   v0:= ([|java:math:RoundingMode|])v0;
#L0bbaa4.   return v0  @type object;

   }
    procedure [|java:math:RoundingMode|][] [|java:math:RoundingMode.values|] () @owner [|java:math:RoundingMode|] @signature [|Ljava/math/RoundingMode;.values:()[Ljava/math/RoundingMode;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0bbab8.   v0:= @@[|java:math:RoundingMode.$VALUES|]   @type object;
#L0bbabc.   call temp:=  [|java:math:RoundingMode[].clone|](v0) @signature [|[Ljava/math/RoundingMode;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:math:RoundingMode[]|] @type virtual;
#L0bbac2.   v0:= temp  @type object;
#L0bbac4.   v0:= ([|java:math:RoundingMode|][])v0;
#L0bbac8.   return v0  @type object;

   }
record [|java:net:AddressCache$AddressCacheEntry|]  @type class @AccessFlag   {
      [|long|] [|java:net:AddressCache$AddressCacheEntry.expiryNanos|]    @AccessFlag FINAL;
      [|java:lang:Object|] [|java:net:AddressCache$AddressCacheEntry.value|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:net:AddressCache$AddressCacheEntry.<init>|] ([|java:net:AddressCache$AddressCacheEntry|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:net:AddressCache$AddressCacheEntry|] @signature [|Ljava/net/AddressCache$AddressCacheEntry;.<init>:(Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0bbadc.   call temp:=  [|java:lang:Object.<init>|](v4) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bbae2.   v4.[|java:net:AddressCache$AddressCacheEntry.value|]  := v5 @type object;
#L0bbae6.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0bbaec.   v0:= temp  @type wide;
#L0bbaee.    v2:= 3682841906313063468698296987418624.000000  @length wide32;
#L0bbaf4.   v0:= v0 + v2  @type long;
#L0bbaf6.   v4.[|java:net:AddressCache$AddressCacheEntry.expiryNanos|]  := v0 @wide;
#L0bbafa.   return @void ;

   }
record [|java:net:AddressCache|]  @type class @AccessFlag   {
      [|libcore:util:BasicLruCache|] [|java:net:AddressCache.cache|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|java:net:AddressCache.MAX_ENTRIES|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:net:AddressCache.TTL_NANOS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:net:AddressCache.<init>|] ([|java:net:AddressCache|] v2 @type (this)) @owner [|java:net:AddressCache|] @signature [|Ljava/net/AddressCache;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0bbb0c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bbb12.   v0:= new [|libcore:util:BasicLruCache|];
#L0bbb16.   v1:= 16  @length 16;
#L0bbb1a.   call temp:=  [|libcore:util:BasicLruCache.<init>|](v0, v1) @signature [|Llibcore/util/BasicLruCache;.<init>:(I)V|] @classDescriptor [|libcore:util:BasicLruCache|] @type direct;
#L0bbb20.   v2.[|java:net:AddressCache.cache|]  := v0 @type object;
#L0bbb24.   return @void ;

   }
    procedure [|void|] [|java:net:AddressCache.clear|] ([|java:net:AddressCache|] v1 @type (this)) @owner [|java:net:AddressCache|] @signature [|Ljava/net/AddressCache;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bbb38.   v0:= v1.[|java:net:AddressCache.cache|]   @type object;
#L0bbb3c.   call temp:=  [|libcore:util:BasicLruCache.evictAll|](v0) @signature [|Llibcore/util/BasicLruCache;.evictAll:()V|] @classDescriptor [|libcore:util:BasicLruCache|] @type virtual;
#L0bbb42.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:net:AddressCache.get|] ([|java:net:AddressCache|] v5 @type (this), [|java:lang:String|] v6 @type (object)) @owner [|java:net:AddressCache|] @signature [|Ljava/net/AddressCache;.get:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0bbb54.   v1:= v5.[|java:net:AddressCache.cache|]   @type object;
#L0bbb58.   call temp:=  [|libcore:util:BasicLruCache.get|](v1, v6) @signature [|Llibcore/util/BasicLruCache;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|libcore:util:BasicLruCache|] @type virtual;
#L0bbb5e.   v0:= temp  @type object;
#L0bbb60.   v0:= ([|java:net:AddressCache$AddressCacheEntry|])v0;
#L0bbb64.   if v0 == 0 then goto L0bbb82;
#L0bbb68.   v1:= v0.[|java:net:AddressCache$AddressCacheEntry.expiryNanos|]   @wide;
#L0bbb6c.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0bbb72.   v3:= temp  @type wide;
#L0bbb74.   v1:= cmp(v1,v3);
#L0bbb78.   if v1 < 0 then goto L0bbb82;
#L0bbb7c.   v1:= v0.[|java:net:AddressCache$AddressCacheEntry.value|]   @type object;
#L0bbb80.   return v1  @type object;
#L0bbb82.   v1:= 0  @length 4;
#L0bbb84.   goto L0bbb80;

   }
    procedure [|void|] [|java:net:AddressCache.put|] ([|java:net:AddressCache|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:net:InetAddress|][] v4 @type (object)) @owner [|java:net:AddressCache|] @signature [|Ljava/net/AddressCache;.put:(Ljava/lang/String;[Ljava/net/InetAddress;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0bbb98.   v0:= v2.[|java:net:AddressCache.cache|]   @type object;
#L0bbb9c.   v1:= new [|java:net:AddressCache$AddressCacheEntry|];
#L0bbba0.   call temp:=  [|java:net:AddressCache$AddressCacheEntry.<init>|](v1, v4) @signature [|Ljava/net/AddressCache$AddressCacheEntry;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:net:AddressCache$AddressCacheEntry|] @type direct;
#L0bbba6.   call temp:=  [|libcore:util:BasicLruCache.put|](v0, v3, v1) @signature [|Llibcore/util/BasicLruCache;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|libcore:util:BasicLruCache|] @type virtual;
#L0bbbac.   return @void ;

   }
    procedure [|void|] [|java:net:AddressCache.putUnknownHost|] ([|java:net:AddressCache|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:net:AddressCache|] @signature [|Ljava/net/AddressCache;.putUnknownHost:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0bbbc0.   v0:= v2.[|java:net:AddressCache.cache|]   @type object;
#L0bbbc4.   v1:= new [|java:net:AddressCache$AddressCacheEntry|];
#L0bbbc8.   call temp:=  [|java:net:AddressCache$AddressCacheEntry.<init>|](v1, v4) @signature [|Ljava/net/AddressCache$AddressCacheEntry;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:net:AddressCache$AddressCacheEntry|] @type direct;
#L0bbbce.   call temp:=  [|libcore:util:BasicLruCache.put|](v0, v3, v1) @signature [|Llibcore/util/BasicLruCache;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|libcore:util:BasicLruCache|] @type virtual;
#L0bbbd4.   return @void ;

   }
record [|java:net:Authenticator$RequestorType|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:net:Authenticator$RequestorType|][] @@[|java:net:Authenticator$RequestorType.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:net:Authenticator$RequestorType|] @@[|java:net:Authenticator$RequestorType.PROXY|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:net:Authenticator$RequestorType|] @@[|java:net:Authenticator$RequestorType.SERVER|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:net:Authenticator$RequestorType.<clinit>|] () @owner [|java:net:Authenticator$RequestorType|] @signature [|Ljava/net/Authenticator$RequestorType;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0bbbe8.   v3:= 1  @length 4;
#L0bbbea.   v2:= 0  @length 4;
#L0bbbec.   v0:= new [|java:net:Authenticator$RequestorType|];
#L0bbbf0.   v1:= "PROXY" @type (object, string);
#L0bbbf4.   call temp:=  [|java:net:Authenticator$RequestorType.<init>|](v0, v1, v2) @signature [|Ljava/net/Authenticator$RequestorType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:net:Authenticator$RequestorType|] @type direct;
#L0bbbfa.   @@[|java:net:Authenticator$RequestorType.PROXY|] := v0  @type object;
#L0bbbfe.   v0:= new [|java:net:Authenticator$RequestorType|];
#L0bbc02.   v1:= "SERVER" @type (object, string);
#L0bbc06.   call temp:=  [|java:net:Authenticator$RequestorType.<init>|](v0, v1, v3) @signature [|Ljava/net/Authenticator$RequestorType;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:net:Authenticator$RequestorType|] @type direct;
#L0bbc0c.   @@[|java:net:Authenticator$RequestorType.SERVER|] := v0  @type object;
#L0bbc10.   v0:= 2  @length 4;
#L0bbc12.   v0:= new [|java:net:Authenticator$RequestorType|][v0];
#L0bbc16.   v1:= @@[|java:net:Authenticator$RequestorType.PROXY|]   @type object;
#L0bbc1a.   v0[v2]:= v1  @type object;
#L0bbc1e.   v1:= @@[|java:net:Authenticator$RequestorType.SERVER|]   @type object;
#L0bbc22.   v0[v3]:= v1  @type object;
#L0bbc26.   @@[|java:net:Authenticator$RequestorType.$VALUES|] := v0  @type object;
#L0bbc2a.   return @void ;

   }
    procedure [|void|] [|java:net:Authenticator$RequestorType.<init>|] ([|java:net:Authenticator$RequestorType|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:net:Authenticator$RequestorType|] @signature [|Ljava/net/Authenticator$RequestorType;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0bbc3c.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0bbc42.   return @void ;

   }
    procedure [|java:net:Authenticator$RequestorType|] [|java:net:Authenticator$RequestorType.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:net:Authenticator$RequestorType|] @signature [|Ljava/net/Authenticator$RequestorType;.valueOf:(Ljava/lang/String;)Ljava/net/Authenticator$RequestorType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0bbc54.   v0:= new [|java:net:Authenticator$RequestorType|];
#L0bbc58.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0bbc5e.   v0:= temp  @type object;
#L0bbc60.   v0:= ([|java:net:Authenticator$RequestorType|])v0;
#L0bbc64.   return v0  @type object;

   }
    procedure [|java:net:Authenticator$RequestorType|][] [|java:net:Authenticator$RequestorType.values|] () @owner [|java:net:Authenticator$RequestorType|] @signature [|Ljava/net/Authenticator$RequestorType;.values:()[Ljava/net/Authenticator$RequestorType;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0bbc78.   v0:= @@[|java:net:Authenticator$RequestorType.$VALUES|]   @type object;
#L0bbc7c.   call temp:=  [|java:net:Authenticator$RequestorType[].clone|](v0) @signature [|[Ljava/net/Authenticator$RequestorType;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:net:Authenticator$RequestorType[]|] @type virtual;
#L0bbc82.   v0:= temp  @type object;
#L0bbc84.   v0:= ([|java:net:Authenticator$RequestorType|][])v0;
#L0bbc88.   return v0  @type object;

   }
record [|java:net:Authenticator|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
      [|java:net:InetAddress|] [|java:net:Authenticator.addr|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:net:Authenticator.host|]    @AccessFlag PRIVATE;
      [|int|] [|java:net:Authenticator.port|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:net:Authenticator.prompt|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:net:Authenticator.protocol|]    @AccessFlag PRIVATE;
      [|java:net:Authenticator$RequestorType|] [|java:net:Authenticator.rt|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:net:Authenticator.scheme|]    @AccessFlag PRIVATE;
      [|java:net:URL|] [|java:net:Authenticator.url|]    @AccessFlag PRIVATE;
   }
      global [|java:net:Authenticator|] @@[|java:net:Authenticator.thisAuthenticator|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:net:Authenticator.<init>|] ([|java:net:Authenticator|] v0 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbc9c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bbca2.   return @void ;

   }
    procedure [|java:net:PasswordAuthentication|] [|java:net:Authenticator.requestPasswordAuthentication|] ([|java:lang:String|] v3 @type (object), [|java:net:InetAddress|] v4 @type (object), [|int|] v5, [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object), [|java:lang:String|] v8 @type (object)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.requestPasswordAuthentication:(Ljava/lang/String;Ljava/net/InetAddress;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/PasswordAuthentication;|] @Access PUBLIC_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bbcb4.   v1:= new [|java:net:Authenticator|];
#L0bbcb8.   (@monitorenter v1)
#L0bbcba.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbcbe.   if v0 != 0 then goto L0bbcc8;
#L0bbcc2.   v0:= 0  @length 4;
#L0bbcc4.   (@monitorexit v1)
#L0bbcc6.   return v0  @type object;
#L0bbcc8.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbccc.   v0.[|java:net:Authenticator.host|]  := v3 @type object;
#L0bbcd0.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbcd4.   v0.[|java:net:Authenticator.addr|]  := v4 @type object;
#L0bbcd8.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbcdc.   v0.[|java:net:Authenticator.port|]  := v5;
#L0bbce0.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbce4.   v0.[|java:net:Authenticator.protocol|]  := v6 @type object;
#L0bbce8.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbcec.   v0.[|java:net:Authenticator.prompt|]  := v7 @type object;
#L0bbcf0.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbcf4.   v0.[|java:net:Authenticator.scheme|]  := v8 @type object;
#L0bbcf8.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbcfc.   v2:= @@[|java:net:Authenticator$RequestorType.SERVER|]   @type object;
#L0bbd00.   v0.[|java:net:Authenticator.rt|]  := v2 @type object;
#L0bbd04.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd08.   call temp:=  [|java:net:Authenticator.getPasswordAuthentication|](v0) @signature [|Ljava/net/Authenticator;.getPasswordAuthentication:()Ljava/net/PasswordAuthentication;|] @classDescriptor [|java:net:Authenticator|] @type virtual;
#L0bbd0e.   v0:= temp  @type object;
#L0bbd10.   goto L0bbcc4;
#L0bbd12.   v0:= Exception  @type object;
#L0bbd14.   (@monitorexit v1)
#L0bbd16.   throw v0;
  catch  [|any|] @[L0bbcba..L0bbcbe] goto L0bbd12;
  catch  [|any|] @[L0bbcc8..L0bbd0e] goto L0bbd12;

   }
    procedure [|java:net:PasswordAuthentication|] [|java:net:Authenticator.requestPasswordAuthentication|] ([|java:lang:String|] v1 @type (object), [|java:net:InetAddress|] v2 @type (object), [|int|] v3, [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:net:URL|] v7 @type (object), [|java:net:Authenticator$RequestorType|] v8 @type (object)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.requestPasswordAuthentication:(Ljava/lang/String;Ljava/net/InetAddress;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/URL;Ljava/net/Authenticator$RequestorType;)Ljava/net/PasswordAuthentication;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0bbd3c.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd40.   if v0 != 0 then goto L0bbd48;
#L0bbd44.   v0:= 0  @length 4;
#L0bbd46.   return v0  @type object;
#L0bbd48.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd4c.   v0.[|java:net:Authenticator.host|]  := v1 @type object;
#L0bbd50.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd54.   v0.[|java:net:Authenticator.addr|]  := v2 @type object;
#L0bbd58.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd5c.   v0.[|java:net:Authenticator.port|]  := v3;
#L0bbd60.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd64.   v0.[|java:net:Authenticator.protocol|]  := v4 @type object;
#L0bbd68.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd6c.   v0.[|java:net:Authenticator.prompt|]  := v5 @type object;
#L0bbd70.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd74.   v0.[|java:net:Authenticator.scheme|]  := v6 @type object;
#L0bbd78.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd7c.   v0.[|java:net:Authenticator.url|]  := v7 @type object;
#L0bbd80.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd84.   v0.[|java:net:Authenticator.rt|]  := v8 @type object;
#L0bbd88.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbd8c.   call temp:=  [|java:net:Authenticator.getPasswordAuthentication|](v0) @signature [|Ljava/net/Authenticator;.getPasswordAuthentication:()Ljava/net/PasswordAuthentication;|] @classDescriptor [|java:net:Authenticator|] @type virtual;
#L0bbd92.   v0:= temp  @type object;
#L0bbd94.   goto L0bbd46;

   }
    procedure [|java:net:PasswordAuthentication|] [|java:net:Authenticator.requestPasswordAuthentication|] ([|java:net:InetAddress|] v3 @type (object), [|int|] v4, [|java:lang:String|] v5 @type (object), [|java:lang:String|] v6 @type (object), [|java:lang:String|] v7 @type (object)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.requestPasswordAuthentication:(Ljava/net/InetAddress;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/PasswordAuthentication;|] @Access PUBLIC_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bbda8.   v1:= new [|java:net:Authenticator|];
#L0bbdac.   (@monitorenter v1)
#L0bbdae.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbdb2.   if v0 != 0 then goto L0bbdbc;
#L0bbdb6.   v0:= 0  @length 4;
#L0bbdb8.   (@monitorexit v1)
#L0bbdba.   return v0  @type object;
#L0bbdbc.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbdc0.   v0.[|java:net:Authenticator.addr|]  := v3 @type object;
#L0bbdc4.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbdc8.   v0.[|java:net:Authenticator.port|]  := v4;
#L0bbdcc.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbdd0.   v0.[|java:net:Authenticator.protocol|]  := v5 @type object;
#L0bbdd4.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbdd8.   v0.[|java:net:Authenticator.prompt|]  := v6 @type object;
#L0bbddc.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbde0.   v0.[|java:net:Authenticator.scheme|]  := v7 @type object;
#L0bbde4.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbde8.   v2:= @@[|java:net:Authenticator$RequestorType.SERVER|]   @type object;
#L0bbdec.   v0.[|java:net:Authenticator.rt|]  := v2 @type object;
#L0bbdf0.   v0:= @@[|java:net:Authenticator.thisAuthenticator|]   @type object;
#L0bbdf4.   call temp:=  [|java:net:Authenticator.getPasswordAuthentication|](v0) @signature [|Ljava/net/Authenticator;.getPasswordAuthentication:()Ljava/net/PasswordAuthentication;|] @classDescriptor [|java:net:Authenticator|] @type virtual;
#L0bbdfa.   v0:= temp  @type object;
#L0bbdfc.   goto L0bbdb8;
#L0bbdfe.   v0:= Exception  @type object;
#L0bbe00.   (@monitorexit v1)
#L0bbe02.   throw v0;
  catch  [|any|] @[L0bbdae..L0bbdb2] goto L0bbdfe;
  catch  [|any|] @[L0bbdbc..L0bbdfa] goto L0bbdfe;

   }
    procedure [|void|] [|java:net:Authenticator.setDefault|] ([|java:net:Authenticator|] v0 @type (object)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.setDefault:(Ljava/net/Authenticator;)V|] @Access PUBLIC_STATIC {
      local temp ;
      
#L0bbe28.   @@[|java:net:Authenticator.thisAuthenticator|] := v0  @type object;
#L0bbe2c.   return @void ;

   }
    procedure [|java:net:PasswordAuthentication|] [|java:net:Authenticator.getPasswordAuthentication|] ([|java:net:Authenticator|] v1 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.getPasswordAuthentication:()Ljava/net/PasswordAuthentication;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0bbe40.   v0:= 0  @length 4;
#L0bbe42.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:net:Authenticator.getRequestingHost|] ([|java:net:Authenticator|] v1 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.getRequestingHost:()Ljava/lang/String;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0bbe54.   v0:= v1.[|java:net:Authenticator.host|]   @type object;
#L0bbe58.   return v0  @type object;

   }
    procedure [|int|] [|java:net:Authenticator.getRequestingPort|] ([|java:net:Authenticator|] v1 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.getRequestingPort:()I|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0bbe6c.   v0:= v1.[|java:net:Authenticator.port|] ;
#L0bbe70.   return v0;

   }
    procedure [|java:lang:String|] [|java:net:Authenticator.getRequestingPrompt|] ([|java:net:Authenticator|] v1 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.getRequestingPrompt:()Ljava/lang/String;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0bbe84.   v0:= v1.[|java:net:Authenticator.prompt|]   @type object;
#L0bbe88.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:net:Authenticator.getRequestingProtocol|] ([|java:net:Authenticator|] v1 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.getRequestingProtocol:()Ljava/lang/String;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0bbe9c.   v0:= v1.[|java:net:Authenticator.protocol|]   @type object;
#L0bbea0.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:net:Authenticator.getRequestingScheme|] ([|java:net:Authenticator|] v1 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.getRequestingScheme:()Ljava/lang/String;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0bbeb4.   v0:= v1.[|java:net:Authenticator.scheme|]   @type object;
#L0bbeb8.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|java:net:Authenticator.getRequestingSite|] ([|java:net:Authenticator|] v1 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.getRequestingSite:()Ljava/net/InetAddress;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0bbecc.   v0:= v1.[|java:net:Authenticator.addr|]   @type object;
#L0bbed0.   return v0  @type object;

   }
    procedure [|java:net:URL|] [|java:net:Authenticator.getRequestingURL|] ([|java:net:Authenticator|] v1 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.getRequestingURL:()Ljava/net/URL;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0bbee4.   v0:= v1.[|java:net:Authenticator.url|]   @type object;
#L0bbee8.   return v0  @type object;

   }
    procedure [|java:net:Authenticator$RequestorType|] [|java:net:Authenticator.getRequestorType|] ([|java:net:Authenticator|] v1 @type (this)) @owner [|java:net:Authenticator|] @signature [|Ljava/net/Authenticator;.getRequestorType:()Ljava/net/Authenticator$RequestorType;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0bbefc.   v0:= v1.[|java:net:Authenticator.rt|]   @type object;
#L0bbf00.   return v0  @type object;

   }
record [|java:net:SocketException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:net:SocketException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:net:SocketException.<init>|] ([|java:net:SocketException|] v0 @type (this)) @owner [|java:net:SocketException|] @signature [|Ljava/net/SocketException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbf14.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0bbf1a.   return @void ;

   }
    procedure [|void|] [|java:net:SocketException.<init>|] ([|java:net:SocketException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:net:SocketException|] @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbf2c.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0bbf32.   return @void ;

   }
    procedure [|void|] [|java:net:SocketException.<init>|] ([|java:net:SocketException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:net:SocketException|] @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbf44.   call temp:=  [|java:io:IOException.<init>|](v0, v1, v2) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0bbf4a.   return @void ;

   }
    procedure [|void|] [|java:net:SocketException.<init>|] ([|java:net:SocketException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:net:SocketException|] @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbf5c.   call temp:=  [|java:io:IOException.<init>|](v0, v1) @signature [|Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0bbf62.   return @void ;

   }
record [|java:net:BindException|]  @type class @AccessFlag PUBLIC  extends [|java:net:SocketException|] {
   }
      global [|long|] @@[|java:net:BindException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:net:BindException.<init>|] ([|java:net:BindException|] v0 @type (this)) @owner [|java:net:BindException|] @signature [|Ljava/net/BindException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbf74.   call temp:=  [|java:net:SocketException.<init>|](v0) @signature [|Ljava/net/SocketException;.<init>:()V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bbf7a.   return @void ;

   }
    procedure [|void|] [|java:net:BindException.<init>|] ([|java:net:BindException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:net:BindException|] @signature [|Ljava/net/BindException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbf8c.   call temp:=  [|java:net:SocketException.<init>|](v0, v1) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bbf92.   return @void ;

   }
    procedure [|void|] [|java:net:BindException.<init>|] ([|java:net:BindException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:net:BindException|] @signature [|Ljava/net/BindException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbfa4.   call temp:=  [|java:net:SocketException.<init>|](v0, v1, v2) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bbfaa.   return @void ;

   }
record [|java:net:CacheRequest|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:net:CacheRequest.<init>|] ([|java:net:CacheRequest|] v0 @type (this)) @owner [|java:net:CacheRequest|] @signature [|Ljava/net/CacheRequest;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbfbc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bbfc2.   return @void ;

   }
    procedure [|void|] [|java:net:CacheRequest.abort|] () @owner [|java:net:CacheRequest|] @signature [|Ljava/net/CacheRequest;.abort:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:OutputStream|] [|java:net:CacheRequest.getBody|] () @owner [|java:net:CacheRequest|] @signature [|Ljava/net/CacheRequest;.getBody:()Ljava/io/OutputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:net:CacheResponse|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:net:CacheResponse.<init>|] ([|java:net:CacheResponse|] v0 @type (this)) @owner [|java:net:CacheResponse|] @signature [|Ljava/net/CacheResponse;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbfd4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bbfda.   return @void ;

   }
    procedure [|java:io:InputStream|] [|java:net:CacheResponse.getBody|] () @owner [|java:net:CacheResponse|] @signature [|Ljava/net/CacheResponse;.getBody:()Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Map|] [|java:net:CacheResponse.getHeaders|] () @owner [|java:net:CacheResponse|] @signature [|Ljava/net/CacheResponse;.getHeaders:()Ljava/util/Map;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:net:ConnectException|]  @type class @AccessFlag PUBLIC  extends [|java:net:SocketException|] {
   }
      global [|long|] @@[|java:net:ConnectException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:net:ConnectException.<init>|] ([|java:net:ConnectException|] v0 @type (this)) @owner [|java:net:ConnectException|] @signature [|Ljava/net/ConnectException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bbfec.   call temp:=  [|java:net:SocketException.<init>|](v0) @signature [|Ljava/net/SocketException;.<init>:()V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bbff2.   return @void ;

   }
    procedure [|void|] [|java:net:ConnectException.<init>|] ([|java:net:ConnectException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:net:ConnectException|] @signature [|Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bc004.   call temp:=  [|java:net:SocketException.<init>|](v0, v1) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bc00a.   return @void ;

   }
    procedure [|void|] [|java:net:ConnectException.<init>|] ([|java:net:ConnectException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:net:ConnectException|] @signature [|Ljava/net/ConnectException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bc01c.   call temp:=  [|java:net:SocketException.<init>|](v0, v1, v2) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bc022.   return @void ;

   }
record [|java:net:ContentHandler|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:net:ContentHandler.<init>|] ([|java:net:ContentHandler|] v0 @type (this)) @owner [|java:net:ContentHandler|] @signature [|Ljava/net/ContentHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bc034.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bc03a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:net:ContentHandler.getContent|] ([|java:net:URLConnection|] v0 @type (object)) @owner [|java:net:ContentHandler|] @signature [|Ljava/net/ContentHandler;.getContent:(Ljava/net/URLConnection;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:net:ContentHandler.getContent|] ([|java:net:ContentHandler|] v3 @type (this), [|java:net:URLConnection|] v4 @type (object), [|java:lang:Class|][] v5 @type (object)) @owner [|java:net:ContentHandler|] @signature [|Ljava/net/ContentHandler;.getContent:(Ljava/net/URLConnection;[Ljava/lang/Class;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bc04c.   call temp:=  [|java:net:ContentHandler.getContent|](v3, v4) @signature [|Ljava/net/ContentHandler;.getContent:(Ljava/net/URLConnection;)Ljava/lang/Object;|] @classDescriptor [|java:net:ContentHandler|] @type virtual;
#L0bc052.   v0:= temp  @type object;
#L0bc054.   v1:= 0  @length 4;
#L0bc056.   v2:= v5.length;
#L0bc058.   if v1 >= v2 then goto L0bc074;
#L0bc05c.   v2:= v5[v1]  @type object;
#L0bc060.   call temp:=  [|java:lang:Class.isInstance|](v2, v0) @signature [|Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0bc066.   v2:= temp;
#L0bc068.   if v2 == 0 then goto L0bc06e;
#L0bc06c.   return v0  @type object;
#L0bc06e.   v1:= v1 + 1;
#L0bc072.   goto L0bc056;
#L0bc074.   v0:= 0  @length 4;
#L0bc076.   goto L0bc06c;

   }
record [|java:net:ContentHandlerFactory|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:net:ContentHandler|] [|java:net:ContentHandlerFactory.createContentHandler|] ([|java:lang:String|] v0 @type (object)) @owner [|java:net:ContentHandlerFactory|] @signature [|Ljava/net/ContentHandlerFactory;.createContentHandler:(Ljava/lang/String;)Ljava/net/ContentHandler;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:net:CookieHandler|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
      global [|java:net:CookieHandler|] @@[|java:net:CookieHandler.systemWideCookieHandler|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:net:CookieHandler.<init>|] ([|java:net:CookieHandler|] v0 @type (this)) @owner [|java:net:CookieHandler|] @signature [|Ljava/net/CookieHandler;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bc088.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bc08e.   return @void ;

   }
    procedure [|java:net:CookieHandler|] [|java:net:CookieHandler.getDefault|] () @owner [|java:net:CookieHandler|] @signature [|Ljava/net/CookieHandler;.getDefault:()Ljava/net/CookieHandler;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0bc0a0.   v0:= @@[|java:net:CookieHandler.systemWideCookieHandler|]   @type object;
#L0bc0a4.   return v0  @type object;

   }
    procedure [|void|] [|java:net:CookieHandler.setDefault|] ([|java:net:CookieHandler|] v0 @type (object)) @owner [|java:net:CookieHandler|] @signature [|Ljava/net/CookieHandler;.setDefault:(Ljava/net/CookieHandler;)V|] @Access PUBLIC_STATIC {
      local temp ;
      
#L0bc0b8.   @@[|java:net:CookieHandler.systemWideCookieHandler|] := v0  @type object;
#L0bc0bc.   return @void ;

   }
    procedure [|java:util:Map|] [|java:net:CookieHandler.get|] ([|java:net:URI|] v0 @type (object), [|java:util:Map|] v1 @type (object)) @owner [|java:net:CookieHandler|] @signature [|Ljava/net/CookieHandler;.get:(Ljava/net/URI;Ljava/util/Map;)Ljava/util/Map;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:CookieHandler.put|] ([|java:net:URI|] v0 @type (object), [|java:util:Map|] v1 @type (object)) @owner [|java:net:CookieHandler|] @signature [|Ljava/net/CookieHandler;.put:(Ljava/net/URI;Ljava/util/Map;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:net:CookieManager|]  @type class @AccessFlag PUBLIC  extends [|java:net:CookieHandler|] {
      [|java:net:CookiePolicy|] [|java:net:CookieManager.policy|]    @AccessFlag PRIVATE;
      [|java:net:CookieStore|] [|java:net:CookieManager.store|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:String|] @@[|java:net:CookieManager.VERSION_ONE_HEADER|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:net:CookieManager.VERSION_ZERO_HEADER|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:net:CookieManager.<init>|] ([|java:net:CookieManager|] v1 @type (this)) @owner [|java:net:CookieManager|] @signature [|Ljava/net/CookieManager;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0bc0d0.   v0:= 0  @length 4;
#L0bc0d2.   call temp:=  [|java:net:CookieManager.<init>|](v1, v0, v0) @signature [|Ljava/net/CookieManager;.<init>:(Ljava/net/CookieStore;Ljava/net/CookiePolicy;)V|] @classDescriptor [|java:net:CookieManager|] @type direct;
#L0bc0d8.   return @void ;

   }
    procedure [|void|] [|java:net:CookieManager.<init>|] ([|java:net:CookieManager|] v0 @type (this), [|java:net:CookieStore|] v1 @type (object), [|java:net:CookiePolicy|] v2 @type (object)) @owner [|java:net:CookieManager|] @signature [|Ljava/net/CookieManager;.<init>:(Ljava/net/CookieStore;Ljava/net/CookiePolicy;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bc0ec.   call temp:=  [|java:net:CookieHandler.<init>|](v0) @signature [|Ljava/net/CookieHandler;.<init>:()V|] @classDescriptor [|java:net:CookieHandler|] @type direct;
#L0bc0f2.   if v1 != 0 then goto L0bc100;
#L0bc0f6.   v1:= new [|java:net:CookieStoreImpl|];
#L0bc0fa.   call temp:=  [|java:net:CookieStoreImpl.<init>|](v1) @signature [|Ljava/net/CookieStoreImpl;.<init>:()V|] @classDescriptor [|java:net:CookieStoreImpl|] @type direct;
#L0bc100.   v0.[|java:net:CookieManager.store|]  := v1 @type object;
#L0bc104.   if v2 != 0 then goto L0bc10c;
#L0bc108.   v2:= @@[|java:net:CookiePolicy.ACCEPT_ORIGINAL_SERVER|]   @type object;
#L0bc10c.   v0.[|java:net:CookieManager.policy|]  := v2 @type object;
#L0bc110.   return @void ;

   }
    procedure [|java:util:Map|] [|java:net:CookieManager.cookiesToHeaders|] ([|java:util:List|] v7 @type (object)) @owner [|java:net:CookieManager|] @signature [|Ljava/net/CookieManager;.cookiesToHeaders:(Ljava/util/List;)Ljava/util/Map;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0bc124.   call temp:=  [|java:util:List.isEmpty|](v7) @signature [|Ljava/util/List;.isEmpty:()Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc12a.   v5:= temp;
#L0bc12c.   if v5 == 0 then goto L0bc13a;
#L0bc130.   call temp:=  [|java:util:Collections.emptyMap|]() @signature [|Ljava/util/Collections;.emptyMap:()Ljava/util/Map;|] @classDescriptor [|java:util:Collections|] @type static;
#L0bc136.   v5:= temp  @type object;
#L0bc138.   return v5  @type object;
#L0bc13a.   v4:= new [|java:lang:StringBuilder|];
#L0bc13e.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bc144.   v3:= 1  @length 4;
#L0bc146.   call temp:=  [|java:util:List.iterator|](v7) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc14c.   v2:= temp  @type object;
#L0bc14e.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc154.   v5:= temp;
#L0bc156.   if v5 == 0 then goto L0bc178;
#L0bc15a.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc160.   v0:= temp  @type object;
#L0bc162.   v0:= ([|java:net:HttpCookie|])v0;
#L0bc166.   call temp:=  [|java:net:HttpCookie.getVersion|](v0) @signature [|Ljava/net/HttpCookie;.getVersion:()I|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc16c.   v5:= temp;
#L0bc16e.   call temp:=  [|java:lang:Math.min|](v3, v5) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0bc174.   v3:= temp;
#L0bc176.   goto L0bc14e;
#L0bc178.   v5:= 1  @length 4;
#L0bc17a.   if v3 != v5 then goto L0bc188;
#L0bc17e.   v5:= "$Version=\"1\"; " @type (object, string);
#L0bc182.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bc188.   v5:= 0  @length 4;
#L0bc18a.   call temp:=  [|java:util:List.get|](v7, v5) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc190.   v5:= temp  @type object;
#L0bc192.   v5:= ([|java:net:HttpCookie|])v5;
#L0bc196.   call temp:=  [|java:net:HttpCookie.toString|](v5) @signature [|Ljava/net/HttpCookie;.toString:()Ljava/lang/String;|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc19c.   v5:= temp  @type object;
#L0bc19e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bc1a4.   v1:= 1  @length 4;
#L0bc1a6.   call temp:=  [|java:util:List.size|](v7) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0bc1ac.   v5:= temp;
#L0bc1ae.   if v1 >= v5 then goto L0bc1de;
#L0bc1b2.   v5:= "; " @type (object, string);
#L0bc1b6.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bc1bc.   v6:= temp  @type object;
#L0bc1be.   call temp:=  [|java:util:List.get|](v7, v1) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc1c4.   v5:= temp  @type object;
#L0bc1c6.   v5:= ([|java:net:HttpCookie|])v5;
#L0bc1ca.   call temp:=  [|java:net:HttpCookie.toString|](v5) @signature [|Ljava/net/HttpCookie;.toString:()Ljava/lang/String;|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc1d0.   v5:= temp  @type object;
#L0bc1d2.   call temp:=  [|java:lang:StringBuilder.append|](v6, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bc1d8.   v1:= v1 + 1;
#L0bc1dc.   goto L0bc1a6;
#L0bc1de.   v5:= "Cookie" @type (object, string);
#L0bc1e2.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bc1e8.   v6:= temp  @type object;
#L0bc1ea.   call temp:=  [|java:util:Collections.singletonList|](v6) @signature [|Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L0bc1f0.   v6:= temp  @type object;
#L0bc1f2.   call temp:=  [|java:util:Collections.singletonMap|](v5, v6) @signature [|Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;|] @classDescriptor [|java:util:Collections|] @type static;
#L0bc1f8.   v5:= temp  @type object;
#L0bc1fa.   goto L0bc138;

   }
    procedure [|java:util:List|] [|java:net:CookieManager.parseCookie|] ([|java:util:Map|] v9 @type (object)) @owner [|java:net:CookieManager|] @signature [|Ljava/net/CookieManager;.parseCookie:(Ljava/util/Map;)Ljava/util/List;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0bc20c.   v2:= new [|java:util:ArrayList|];
#L0bc210.   call temp:=  [|java:util:ArrayList.<init>|](v2) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0bc216.   call temp:=  [|java:util:Map.entrySet|](v9) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc21c.   v8:= temp  @type object;
#L0bc21e.   call temp:=  [|java:util:Set.iterator|](v8) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0bc224.   v4:= temp  @type object;
#L0bc226.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc22c.   v8:= temp;
#L0bc22e.   if v8 == 0 then goto L0bc2ce;
#L0bc232.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc238.   v3:= temp  @type object;
#L0bc23a.   v3:= ([|java:util:Map$Entry|])v3;
#L0bc23e.   call temp:=  [|java:util:Map$Entry.getKey|](v3) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0bc244.   v7:= temp  @type object;
#L0bc246.   v7:= ([|java:lang:String|])v7;
#L0bc24a.   if v7 == 0 then goto L0bc226;
#L0bc24e.   v8:= "Set-cookie" @type (object, string);
#L0bc252.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v7, v8) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0bc258.   v8:= temp;
#L0bc25a.   if v8 != 0 then goto L0bc26e;
#L0bc25e.   v8:= "Set-cookie2" @type (object, string);
#L0bc262.   call temp:=  [|java:lang:String.equalsIgnoreCase|](v7, v8) @signature [|Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0bc268.   v8:= temp;
#L0bc26a.   if v8 == 0 then goto L0bc226;
#L0bc26e.   call temp:=  [|java:util:Map$Entry.getValue|](v3) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0bc274.   v8:= temp  @type object;
#L0bc276.   v8:= ([|java:util:List|])v8;
#L0bc27a.   call temp:=  [|java:util:List.iterator|](v8) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc280.   v5:= temp  @type object;
#L0bc282.   call temp:=  [|java:util:Iterator.hasNext|](v5) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc288.   v8:= temp;
#L0bc28a.   if v8 == 0 then goto L0bc226;
#L0bc28e.   call temp:=  [|java:util:Iterator.next|](v5) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc294.   v1:= temp  @type object;
#L0bc296.   v1:= ([|java:lang:String|])v1;
#L0bc29a.   call temp:=  [|java:net:HttpCookie.parse|](v1) @signature [|Ljava/net/HttpCookie;.parse:(Ljava/lang/String;)Ljava/util/List;|] @classDescriptor [|java:net:HttpCookie|] @type static;
#L0bc2a0.   v8:= temp  @type object;
#L0bc2a2.   call temp:=  [|java:util:List.iterator|](v8) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc2a8.   v6:= temp  @type object;
#L0bc2aa.   call temp:=  [|java:util:Iterator.hasNext|](v6) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc2b0.   v8:= temp;
#L0bc2b2.   if v8 == 0 then goto L0bc282;
#L0bc2b6.   call temp:=  [|java:util:Iterator.next|](v6) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc2bc.   v0:= temp  @type object;
#L0bc2be.   v0:= ([|java:net:HttpCookie|])v0;
#L0bc2c2.   call temp:=  [|java:util:List.add|](v2, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc2c8.   goto L0bc2aa;
#L0bc2ca.   v8:= Exception  @type object;
#L0bc2cc.   goto L0bc282;
#L0bc2ce.   return v2  @type object;
  catch  [|java:lang:IllegalArgumentException|] @[L0bc29a..L0bc2c8] goto L0bc2ca;

   }
    procedure [|java:lang:String|] [|java:net:CookieManager.pathToCookiePath|] ([|java:lang:String|] v3 @type (object)) @owner [|java:net:CookieManager|] @signature [|Ljava/net/CookieManager;.pathToCookiePath:(Ljava/lang/String;)Ljava/lang/String;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bc2f0.   if v3 != 0 then goto L0bc2fa;
#L0bc2f4.   v1:= "/" @type (object, string);
#L0bc2f8.   return v1  @type object;
#L0bc2fa.   v1:= 47  @length 16;
#L0bc2fe.   call temp:=  [|java:lang:String.lastIndexOf|](v3, v1) @signature [|Ljava/lang/String;.lastIndexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0bc304.   v0:= temp;
#L0bc306.   v1:= 0  @length 4;
#L0bc308.   v2:= v0 + 1;
#L0bc30c.   call temp:=  [|java:lang:String.substring|](v3, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0bc312.   v1:= temp  @type object;
#L0bc314.   goto L0bc2f8;

   }
    procedure [|java:util:Map|] [|java:net:CookieManager.get|] ([|java:net:CookieManager|] v4 @type (this), [|java:net:URI|] v5 @type (object), [|java:util:Map|] v6 @type (object)) @owner [|java:net:CookieManager|] @signature [|Ljava/net/CookieManager;.get:(Ljava/net/URI;Ljava/util/Map;)Ljava/util/Map;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0bc328.   if v5 == 0 then goto L0bc330;
#L0bc32c.   if v6 != 0 then goto L0bc33c;
#L0bc330.   v3:= new [|java:lang:IllegalArgumentException|];
#L0bc334.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bc33a.   throw v3;
#L0bc33c.   v2:= new [|java:util:ArrayList|];
#L0bc340.   call temp:=  [|java:util:ArrayList.<init>|](v2) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0bc346.   v3:= v4.[|java:net:CookieManager.store|]   @type object;
#L0bc34a.   call temp:=  [|java:net:CookieStore.get|](v3, v5) @signature [|Ljava/net/CookieStore;.get:(Ljava/net/URI;)Ljava/util/List;|] @classDescriptor [|java:net:CookieStore|] @type interface;
#L0bc350.   v3:= temp  @type object;
#L0bc352.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc358.   v1:= temp  @type object;
#L0bc35a.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc360.   v3:= temp;
#L0bc362.   if v3 == 0 then goto L0bc39e;
#L0bc366.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc36c.   v0:= temp  @type object;
#L0bc36e.   v0:= ([|java:net:HttpCookie|])v0;
#L0bc372.   call temp:=  [|java:net:HttpCookie.pathMatches|](v0, v5) @signature [|Ljava/net/HttpCookie;.pathMatches:(Ljava/net/HttpCookie;Ljava/net/URI;)Z|] @classDescriptor [|java:net:HttpCookie|] @type static;
#L0bc378.   v3:= temp;
#L0bc37a.   if v3 == 0 then goto L0bc35a;
#L0bc37e.   call temp:=  [|java:net:HttpCookie.secureMatches|](v0, v5) @signature [|Ljava/net/HttpCookie;.secureMatches:(Ljava/net/HttpCookie;Ljava/net/URI;)Z|] @classDescriptor [|java:net:HttpCookie|] @type static;
#L0bc384.   v3:= temp;
#L0bc386.   if v3 == 0 then goto L0bc35a;
#L0bc38a.   call temp:=  [|java:net:HttpCookie.portMatches|](v0, v5) @signature [|Ljava/net/HttpCookie;.portMatches:(Ljava/net/HttpCookie;Ljava/net/URI;)Z|] @classDescriptor [|java:net:HttpCookie|] @type static;
#L0bc390.   v3:= temp;
#L0bc392.   if v3 == 0 then goto L0bc35a;
#L0bc396.   call temp:=  [|java:util:List.add|](v2, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc39c.   goto L0bc35a;
#L0bc39e.   call temp:=  [|java:net:CookieManager.cookiesToHeaders|](v2) @signature [|Ljava/net/CookieManager;.cookiesToHeaders:(Ljava/util/List;)Ljava/util/Map;|] @classDescriptor [|java:net:CookieManager|] @type static;
#L0bc3a4.   v3:= temp  @type object;
#L0bc3a6.   return v3  @type object;

   }
    procedure [|java:net:CookieStore|] [|java:net:CookieManager.getCookieStore|] ([|java:net:CookieManager|] v1 @type (this)) @owner [|java:net:CookieManager|] @signature [|Ljava/net/CookieManager;.getCookieStore:()Ljava/net/CookieStore;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bc3b8.   v0:= v1.[|java:net:CookieManager.store|]   @type object;
#L0bc3bc.   return v0  @type object;

   }
    procedure [|void|] [|java:net:CookieManager.put|] ([|java:net:CookieManager|] v5 @type (this), [|java:net:URI|] v6 @type (object), [|java:util:Map|] v7 @type (object)) @owner [|java:net:CookieManager|] @signature [|Ljava/net/CookieManager;.put:(Ljava/net/URI;Ljava/util/Map;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0bc3d0.   if v6 == 0 then goto L0bc3d8;
#L0bc3d4.   if v7 != 0 then goto L0bc3e4;
#L0bc3d8.   v3:= new [|java:lang:IllegalArgumentException|];
#L0bc3dc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bc3e2.   throw v3;
#L0bc3e4.   call temp:=  [|java:net:CookieManager.parseCookie|](v7) @signature [|Ljava/net/CookieManager;.parseCookie:(Ljava/util/Map;)Ljava/util/List;|] @classDescriptor [|java:net:CookieManager|] @type static;
#L0bc3ea.   v1:= temp  @type object;
#L0bc3ec.   call temp:=  [|java:util:List.iterator|](v1) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc3f2.   v2:= temp  @type object;
#L0bc3f4.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc3fa.   v3:= temp;
#L0bc3fc.   if v3 == 0 then goto L0bc4ba;
#L0bc400.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc406.   v0:= temp  @type object;
#L0bc408.   v0:= ([|java:net:HttpCookie|])v0;
#L0bc40c.   call temp:=  [|java:net:HttpCookie.getDomain|](v0) @signature [|Ljava/net/HttpCookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc412.   v3:= temp  @type object;
#L0bc414.   if v3 != 0 then goto L0bc426;
#L0bc418.   call temp:=  [|java:net:URI.getHost|](v6) @signature [|Ljava/net/URI;.getHost:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0bc41e.   v3:= temp  @type object;
#L0bc420.   call temp:=  [|java:net:HttpCookie.setDomain|](v0, v3) @signature [|Ljava/net/HttpCookie;.setDomain:(Ljava/lang/String;)V|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc426.   call temp:=  [|java:net:HttpCookie.getPath|](v0) @signature [|Ljava/net/HttpCookie;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc42c.   v3:= temp  @type object;
#L0bc42e.   if v3 != 0 then goto L0bc492;
#L0bc432.   call temp:=  [|java:net:URI.getPath|](v6) @signature [|Ljava/net/URI;.getPath:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0bc438.   v3:= temp  @type object;
#L0bc43a.   call temp:=  [|java:net:CookieManager.pathToCookiePath|](v3) @signature [|Ljava/net/CookieManager;.pathToCookiePath:(Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:net:CookieManager|] @type static;
#L0bc440.   v3:= temp  @type object;
#L0bc442.   call temp:=  [|java:net:HttpCookie.setPath|](v0, v3) @signature [|Ljava/net/HttpCookie;.setPath:(Ljava/lang/String;)V|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc448.   v3:= "" @type (object, string);
#L0bc44c.   call temp:=  [|java:net:HttpCookie.getPortlist|](v0) @signature [|Ljava/net/HttpCookie;.getPortlist:()Ljava/lang/String;|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc452.   v4:= temp  @type object;
#L0bc454.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0bc45a.   v3:= temp;
#L0bc45c.   if v3 == 0 then goto L0bc4a0;
#L0bc460.   call temp:=  [|java:net:URI.getEffectivePort|](v6) @signature [|Ljava/net/URI;.getEffectivePort:()I|] @classDescriptor [|java:net:URI|] @type virtual;
#L0bc466.   v3:= temp;
#L0bc468.   call temp:=  [|java:lang:Integer.toString|](v3) @signature [|Ljava/lang/Integer;.toString:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0bc46e.   v3:= temp  @type object;
#L0bc470.   call temp:=  [|java:net:HttpCookie.setPortlist|](v0, v3) @signature [|Ljava/net/HttpCookie;.setPortlist:(Ljava/lang/String;)V|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc476.   v3:= v5.[|java:net:CookieManager.policy|]   @type object;
#L0bc47a.   call temp:=  [|java:net:CookiePolicy.shouldAccept|](v3, v6, v0) @signature [|Ljava/net/CookiePolicy;.shouldAccept:(Ljava/net/URI;Ljava/net/HttpCookie;)Z|] @classDescriptor [|java:net:CookiePolicy|] @type interface;
#L0bc480.   v3:= temp;
#L0bc482.   if v3 == 0 then goto L0bc3f4;
#L0bc486.   v3:= v5.[|java:net:CookieManager.store|]   @type object;
#L0bc48a.   call temp:=  [|java:net:CookieStore.add|](v3, v6, v0) @signature [|Ljava/net/CookieStore;.add:(Ljava/net/URI;Ljava/net/HttpCookie;)V|] @classDescriptor [|java:net:CookieStore|] @type interface;
#L0bc490.   goto L0bc3f4;
#L0bc492.   call temp:=  [|java:net:HttpCookie.pathMatches|](v0, v6) @signature [|Ljava/net/HttpCookie;.pathMatches:(Ljava/net/HttpCookie;Ljava/net/URI;)Z|] @classDescriptor [|java:net:HttpCookie|] @type static;
#L0bc498.   v3:= temp;
#L0bc49a.   if v3 != 0 then goto L0bc448;
#L0bc49e.   goto L0bc3f4;
#L0bc4a0.   call temp:=  [|java:net:HttpCookie.getPortlist|](v0) @signature [|Ljava/net/HttpCookie;.getPortlist:()Ljava/lang/String;|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc4a6.   v3:= temp  @type object;
#L0bc4a8.   if v3 == 0 then goto L0bc476;
#L0bc4ac.   call temp:=  [|java:net:HttpCookie.portMatches|](v0, v6) @signature [|Ljava/net/HttpCookie;.portMatches:(Ljava/net/HttpCookie;Ljava/net/URI;)Z|] @classDescriptor [|java:net:HttpCookie|] @type static;
#L0bc4b2.   v3:= temp;
#L0bc4b4.   if v3 != 0 then goto L0bc476;
#L0bc4b8.   goto L0bc3f4;
#L0bc4ba.   return @void ;

   }
    procedure [|void|] [|java:net:CookieManager.setCookiePolicy|] ([|java:net:CookieManager|] v0 @type (this), [|java:net:CookiePolicy|] v1 @type (object)) @owner [|java:net:CookieManager|] @signature [|Ljava/net/CookieManager;.setCookiePolicy:(Ljava/net/CookiePolicy;)V|] @Access PUBLIC {
      local temp ;
      
#L0bc4cc.   if v1 == 0 then goto L0bc4d4;
#L0bc4d0.   v0.[|java:net:CookieManager.policy|]  := v1 @type object;
#L0bc4d4.   return @void ;

   }
record [|java:net:CookiePolicy|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|java:net:CookiePolicy|] @@[|java:net:CookiePolicy.ACCEPT_ALL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:net:CookiePolicy|] @@[|java:net:CookiePolicy.ACCEPT_NONE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:net:CookiePolicy|] @@[|java:net:CookiePolicy.ACCEPT_ORIGINAL_SERVER|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:net:CookiePolicy.<clinit>|] () @owner [|java:net:CookiePolicy|] @signature [|Ljava/net/CookiePolicy;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0bc4e8.   v0:= new [|java:net:CookiePolicy$1|];
#L0bc4ec.   call temp:=  [|java:net:CookiePolicy$1.<init>|](v0) @signature [|Ljava/net/CookiePolicy$1;.<init>:()V|] @classDescriptor [|java:net:CookiePolicy$1|] @type direct;
#L0bc4f2.   @@[|java:net:CookiePolicy.ACCEPT_ALL|] := v0  @type object;
#L0bc4f6.   v0:= new [|java:net:CookiePolicy$2|];
#L0bc4fa.   call temp:=  [|java:net:CookiePolicy$2.<init>|](v0) @signature [|Ljava/net/CookiePolicy$2;.<init>:()V|] @classDescriptor [|java:net:CookiePolicy$2|] @type direct;
#L0bc500.   @@[|java:net:CookiePolicy.ACCEPT_NONE|] := v0  @type object;
#L0bc504.   v0:= new [|java:net:CookiePolicy$3|];
#L0bc508.   call temp:=  [|java:net:CookiePolicy$3.<init>|](v0) @signature [|Ljava/net/CookiePolicy$3;.<init>:()V|] @classDescriptor [|java:net:CookiePolicy$3|] @type direct;
#L0bc50e.   @@[|java:net:CookiePolicy.ACCEPT_ORIGINAL_SERVER|] := v0  @type object;
#L0bc512.   return @void ;

   }
    procedure [|boolean|] [|java:net:CookiePolicy.shouldAccept|] ([|java:net:URI|] v0 @type (object), [|java:net:HttpCookie|] v1 @type (object)) @owner [|java:net:CookiePolicy|] @signature [|Ljava/net/CookiePolicy;.shouldAccept:(Ljava/net/URI;Ljava/net/HttpCookie;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:net:CookiePolicy$1|]  @type class @AccessFlag FINAL extends  [|java:net:CookiePolicy|] {
   }
    procedure [|void|] [|java:net:CookiePolicy$1.<init>|] ([|java:net:CookiePolicy$1|] v0 @type (this)) @owner [|java:net:CookiePolicy$1|] @signature [|Ljava/net/CookiePolicy$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0bc524.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bc52a.   return @void ;

   }
    procedure [|boolean|] [|java:net:CookiePolicy$1.shouldAccept|] ([|java:net:CookiePolicy$1|] v1 @type (this), [|java:net:URI|] v2 @type (object), [|java:net:HttpCookie|] v3 @type (object)) @owner [|java:net:CookiePolicy$1|] @signature [|Ljava/net/CookiePolicy$1;.shouldAccept:(Ljava/net/URI;Ljava/net/HttpCookie;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bc53c.   v0:= 1  @length 4;
#L0bc53e.   return v0;

   }
record [|java:net:CookiePolicy$2|]  @type class @AccessFlag FINAL extends  [|java:net:CookiePolicy|] {
   }
    procedure [|void|] [|java:net:CookiePolicy$2.<init>|] ([|java:net:CookiePolicy$2|] v0 @type (this)) @owner [|java:net:CookiePolicy$2|] @signature [|Ljava/net/CookiePolicy$2;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0bc550.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bc556.   return @void ;

   }
    procedure [|boolean|] [|java:net:CookiePolicy$2.shouldAccept|] ([|java:net:CookiePolicy$2|] v1 @type (this), [|java:net:URI|] v2 @type (object), [|java:net:HttpCookie|] v3 @type (object)) @owner [|java:net:CookiePolicy$2|] @signature [|Ljava/net/CookiePolicy$2;.shouldAccept:(Ljava/net/URI;Ljava/net/HttpCookie;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bc568.   v0:= 0  @length 4;
#L0bc56a.   return v0;

   }
record [|java:net:CookiePolicy$3|]  @type class @AccessFlag FINAL extends  [|java:net:CookiePolicy|] {
   }
    procedure [|void|] [|java:net:CookiePolicy$3.<init>|] ([|java:net:CookiePolicy$3|] v0 @type (this)) @owner [|java:net:CookiePolicy$3|] @signature [|Ljava/net/CookiePolicy$3;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0bc57c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bc582.   return @void ;

   }
    procedure [|boolean|] [|java:net:CookiePolicy$3.shouldAccept|] ([|java:net:CookiePolicy$3|] v2 @type (this), [|java:net:URI|] v3 @type (object), [|java:net:HttpCookie|] v4 @type (object)) @owner [|java:net:CookiePolicy$3|] @signature [|Ljava/net/CookiePolicy$3;.shouldAccept:(Ljava/net/URI;Ljava/net/HttpCookie;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0bc594.   call temp:=  [|java:net:HttpCookie.getDomain|](v4) @signature [|Ljava/net/HttpCookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc59a.   v0:= temp  @type object;
#L0bc59c.   call temp:=  [|java:net:URI.getHost|](v3) @signature [|Ljava/net/URI;.getHost:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0bc5a2.   v1:= temp  @type object;
#L0bc5a4.   call temp:=  [|java:net:HttpCookie.domainMatches|](v0, v1) @signature [|Ljava/net/HttpCookie;.domainMatches:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|java:net:HttpCookie|] @type static;
#L0bc5aa.   v0:= temp;
#L0bc5ac.   return v0;

   }
record [|java:net:CookieStore|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:net:CookieStore.add|] ([|java:net:URI|] v0 @type (object), [|java:net:HttpCookie|] v1 @type (object)) @owner [|java:net:CookieStore|] @signature [|Ljava/net/CookieStore;.add:(Ljava/net/URI;Ljava/net/HttpCookie;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:List|] [|java:net:CookieStore.get|] ([|java:net:URI|] v0 @type (object)) @owner [|java:net:CookieStore|] @signature [|Ljava/net/CookieStore;.get:(Ljava/net/URI;)Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:List|] [|java:net:CookieStore.getCookies|] () @owner [|java:net:CookieStore|] @signature [|Ljava/net/CookieStore;.getCookies:()Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:List|] [|java:net:CookieStore.getURIs|] () @owner [|java:net:CookieStore|] @signature [|Ljava/net/CookieStore;.getURIs:()Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:net:CookieStore.remove|] ([|java:net:URI|] v0 @type (object), [|java:net:HttpCookie|] v1 @type (object)) @owner [|java:net:CookieStore|] @signature [|Ljava/net/CookieStore;.remove:(Ljava/net/URI;Ljava/net/HttpCookie;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:net:CookieStore.removeAll|] () @owner [|java:net:CookieStore|] @signature [|Ljava/net/CookieStore;.removeAll:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:net:CookieStoreImpl|]  @type class @AccessFlag FINAL extends  [|java:net:CookieStore|] {
      [|java:util:Map|] [|java:net:CookieStoreImpl.map|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:net:CookieStoreImpl.<init>|] ([|java:net:CookieStoreImpl|] v1 @type (this)) @owner [|java:net:CookieStoreImpl|] @signature [|Ljava/net/CookieStoreImpl;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L0bc5c0.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bc5c6.   v0:= new [|java:util:HashMap|];
#L0bc5ca.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0bc5d0.   v1.[|java:net:CookieStoreImpl.map|]  := v0 @type object;
#L0bc5d4.   return @void ;

   }
    procedure [|java:net:URI|] [|java:net:CookieStoreImpl.cookiesUri|] ([|java:net:CookieStoreImpl|] v6 @type (this), [|java:net:URI|] v7 @type (object)) @owner [|java:net:CookieStoreImpl|] @signature [|Ljava/net/CookieStoreImpl;.cookiesUri:(Ljava/net/URI;)Ljava/net/URI;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0bc5e8.   v1:= 0  @length 4;
#L0bc5ea.   if v7 != 0 then goto L0bc5f2;
#L0bc5ee.   v7:= v1  @type object;
#L0bc5f0.   return v7  @type object;
#L0bc5f2.   v1:= new [|java:net:URI|];
#L0bc5f6.   v2:= "http" @type (object, string);
#L0bc5fa.   call temp:=  [|java:net:URI.getHost|](v7) @signature [|Ljava/net/URI;.getHost:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0bc600.   v3:= temp  @type object;
#L0bc602.   v4:= 0  @length 4;
#L0bc604.   v5:= 0  @length 4;
#L0bc606.   call temp:=  [|java:net:URI.<init>|](v1, v2, v3, v4, v5) @signature [|Ljava/net/URI;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:net:URI|] @type direct;
#L0bc60c.   v7:= v1  @type object;
#L0bc60e.   goto L0bc5f0;
#L0bc610.   v0:= Exception  @type object;
#L0bc612.   goto L0bc5f0;
  catch  [|java:net:URISyntaxException|] @[L0bc5f2..L0bc60c] goto L0bc610;

   }
    procedure [|void|] [|java:net:CookieStoreImpl.add|] ([|java:net:CookieStoreImpl|] v3 @type (this), [|java:net:URI|] v4 @type (object), [|java:net:HttpCookie|] v5 @type (object)) @owner [|java:net:CookieStoreImpl|] @signature [|Ljava/net/CookieStoreImpl;.add:(Ljava/net/URI;Ljava/net/HttpCookie;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bc634.   (@monitorenter v3)
#L0bc636.   if v5 != 0 then goto L0bc650;
#L0bc63a.   v1:= new [|java:lang:NullPointerException|];
#L0bc63e.   v2:= "cookie == null" @type (object, string);
#L0bc642.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0bc648.   throw v1;
#L0bc64a.   v1:= Exception  @type object;
#L0bc64c.   (@monitorexit v3)
#L0bc64e.   throw v1;
#L0bc650.   call temp:=  [|java:net:CookieStoreImpl.cookiesUri|](v3, v4) @signature [|Ljava/net/CookieStoreImpl;.cookiesUri:(Ljava/net/URI;)Ljava/net/URI;|] @classDescriptor [|java:net:CookieStoreImpl|] @type direct;
#L0bc656.   v4:= temp  @type object;
#L0bc658.   v1:= v3.[|java:net:CookieStoreImpl.map|]   @type object;
#L0bc65c.   call temp:=  [|java:util:Map.get|](v1, v4) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc662.   v0:= temp  @type object;
#L0bc664.   v0:= ([|java:util:List|])v0;
#L0bc668.   if v0 != 0 then goto L0bc68a;
#L0bc66c.   v0:= new [|java:util:ArrayList|];
#L0bc670.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0bc676.   v1:= v3.[|java:net:CookieStoreImpl.map|]   @type object;
#L0bc67a.   call temp:=  [|java:util:Map.put|](v1, v4, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc680.   call temp:=  [|java:util:List.add|](v0, v5) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc686.   (@monitorexit v3)
#L0bc688.   return @void ;
#L0bc68a.   call temp:=  [|java:util:List.remove|](v0, v5) @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc690.   goto L0bc680;
  catch  [|any|] @[L0bc63a..L0bc64a] goto L0bc64a;
  catch  [|any|] @[L0bc650..L0bc686] goto L0bc64a;
  catch  [|any|] @[L0bc68a..L0bc690] goto L0bc64a;

   }
    procedure [|java:util:List|] [|java:net:CookieStoreImpl.get|] ([|java:net:CookieStoreImpl|] v9 @type (this), [|java:net:URI|] v10 @type (object)) @owner [|java:net:CookieStoreImpl|] @signature [|Ljava/net/CookieStoreImpl;.get:(Ljava/net/URI;)Ljava/util/List;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0bc6c0.   (@monitorenter v9)
#L0bc6c2.   if v10 != 0 then goto L0bc6dc;
#L0bc6c6.   v7:= new [|java:lang:NullPointerException|];
#L0bc6ca.   v8:= "uri == null" @type (object, string);
#L0bc6ce.   call temp:=  [|java:lang:NullPointerException.<init>|](v7, v8) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0bc6d4.   throw v7;
#L0bc6d6.   v7:= Exception  @type object;
#L0bc6d8.   (@monitorexit v9)
#L0bc6da.   throw v7;
#L0bc6dc.   v6:= new [|java:util:ArrayList|];
#L0bc6e0.   call temp:=  [|java:util:ArrayList.<init>|](v6) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0bc6e6.   v7:= v9.[|java:net:CookieStoreImpl.map|]   @type object;
#L0bc6ea.   call temp:=  [|java:util:Map.get|](v7, v10) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc6f0.   v1:= temp  @type object;
#L0bc6f2.   v1:= ([|java:util:List|])v1;
#L0bc6f6.   if v1 == 0 then goto L0bc736;
#L0bc6fa.   call temp:=  [|java:util:List.iterator|](v1) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc700.   v4:= temp  @type object;
#L0bc702.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc708.   v7:= temp;
#L0bc70a.   if v7 == 0 then goto L0bc736;
#L0bc70e.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc714.   v0:= temp  @type object;
#L0bc716.   v0:= ([|java:net:HttpCookie|])v0;
#L0bc71a.   call temp:=  [|java:net:HttpCookie.hasExpired|](v0) @signature [|Ljava/net/HttpCookie;.hasExpired:()Z|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc720.   v7:= temp;
#L0bc722.   if v7 == 0 then goto L0bc72e;
#L0bc726.   call temp:=  [|java:util:Iterator.remove|](v4) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc72c.   goto L0bc702;
#L0bc72e.   call temp:=  [|java:util:List.add|](v6, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc734.   goto L0bc702;
#L0bc736.   v7:= v9.[|java:net:CookieStoreImpl.map|]   @type object;
#L0bc73a.   call temp:=  [|java:util:Map.entrySet|](v7) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc740.   v7:= temp  @type object;
#L0bc742.   call temp:=  [|java:util:Set.iterator|](v7) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0bc748.   v5:= temp  @type object;
#L0bc74a.   call temp:=  [|java:util:Iterator.hasNext|](v5) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc750.   v7:= temp;
#L0bc752.   if v7 == 0 then goto L0bc7e6;
#L0bc756.   call temp:=  [|java:util:Iterator.next|](v5) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc75c.   v2:= temp  @type object;
#L0bc75e.   v2:= ([|java:util:Map$Entry|])v2;
#L0bc762.   call temp:=  [|java:util:Map$Entry.getKey|](v2) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0bc768.   v7:= temp  @type object;
#L0bc76a.   call temp:=  [|java:net:URI.equals|](v10, v7) @signature [|Ljava/net/URI;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:net:URI|] @type virtual;
#L0bc770.   v7:= temp;
#L0bc772.   if v7 != 0 then goto L0bc74a;
#L0bc776.   call temp:=  [|java:util:Map$Entry.getValue|](v2) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0bc77c.   v3:= temp  @type object;
#L0bc77e.   v3:= ([|java:util:List|])v3;
#L0bc782.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc788.   v4:= temp  @type object;
#L0bc78a.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc790.   v7:= temp;
#L0bc792.   if v7 == 0 then goto L0bc74a;
#L0bc796.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc79c.   v0:= temp  @type object;
#L0bc79e.   v0:= ([|java:net:HttpCookie|])v0;
#L0bc7a2.   call temp:=  [|java:net:HttpCookie.getDomain|](v0) @signature [|Ljava/net/HttpCookie;.getDomain:()Ljava/lang/String;|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc7a8.   v7:= temp  @type object;
#L0bc7aa.   call temp:=  [|java:net:URI.getHost|](v10) @signature [|Ljava/net/URI;.getHost:()Ljava/lang/String;|] @classDescriptor [|java:net:URI|] @type virtual;
#L0bc7b0.   v8:= temp  @type object;
#L0bc7b2.   call temp:=  [|java:net:HttpCookie.domainMatches|](v7, v8) @signature [|Ljava/net/HttpCookie;.domainMatches:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|java:net:HttpCookie|] @type static;
#L0bc7b8.   v7:= temp;
#L0bc7ba.   if v7 == 0 then goto L0bc78a;
#L0bc7be.   call temp:=  [|java:net:HttpCookie.hasExpired|](v0) @signature [|Ljava/net/HttpCookie;.hasExpired:()Z|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc7c4.   v7:= temp;
#L0bc7c6.   if v7 == 0 then goto L0bc7d2;
#L0bc7ca.   call temp:=  [|java:util:Iterator.remove|](v4) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc7d0.   goto L0bc78a;
#L0bc7d2.   call temp:=  [|java:util:List.contains|](v6, v0) @signature [|Ljava/util/List;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc7d8.   v7:= temp;
#L0bc7da.   if v7 != 0 then goto L0bc78a;
#L0bc7de.   call temp:=  [|java:util:List.add|](v6, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc7e4.   goto L0bc78a;
#L0bc7e6.   call temp:=  [|java:util:Collections.unmodifiableList|](v6) @signature [|Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L0bc7ec.   v7:= temp  @type object;
#L0bc7ee.   (@monitorexit v9)
#L0bc7f0.   return v7  @type object;
  catch  [|any|] @[L0bc6c6..L0bc6d6] goto L0bc6d6;
  catch  [|any|] @[L0bc6dc..L0bc7ec] goto L0bc6d6;

   }
    procedure [|java:util:List|] [|java:net:CookieStoreImpl.getCookies|] ([|java:net:CookieStoreImpl|] v6 @type (this)) @owner [|java:net:CookieStoreImpl|] @signature [|Ljava/net/CookieStoreImpl;.getCookies:()Ljava/util/List;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0bc818.   (@monitorenter v6)
#L0bc81a.   v4:= new [|java:util:ArrayList|];
#L0bc81e.   call temp:=  [|java:util:ArrayList.<init>|](v4) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0bc824.   v5:= v6.[|java:net:CookieStoreImpl.map|]   @type object;
#L0bc828.   call temp:=  [|java:util:Map.values|](v5) @signature [|Ljava/util/Map;.values:()Ljava/util/Collection;|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc82e.   v5:= temp  @type object;
#L0bc830.   call temp:=  [|java:util:Collection.iterator|](v5) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L0bc836.   v2:= temp  @type object;
#L0bc838.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc83e.   v5:= temp;
#L0bc840.   if v5 == 0 then goto L0bc89e;
#L0bc844.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc84a.   v3:= temp  @type object;
#L0bc84c.   v3:= ([|java:util:List|])v3;
#L0bc850.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0bc856.   v1:= temp  @type object;
#L0bc858.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc85e.   v5:= temp;
#L0bc860.   if v5 == 0 then goto L0bc838;
#L0bc864.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc86a.   v0:= temp  @type object;
#L0bc86c.   v0:= ([|java:net:HttpCookie|])v0;
#L0bc870.   call temp:=  [|java:net:HttpCookie.hasExpired|](v0) @signature [|Ljava/net/HttpCookie;.hasExpired:()Z|] @classDescriptor [|java:net:HttpCookie|] @type virtual;
#L0bc876.   v5:= temp;
#L0bc878.   if v5 == 0 then goto L0bc88a;
#L0bc87c.   call temp:=  [|java:util:Iterator.remove|](v1) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0bc882.   goto L0bc858;
#L0bc884.   v5:= Exception  @type object;
#L0bc886.   (@monitorexit v6)
#L0bc888.   throw v5;
#L0bc88a.   call temp:=  [|java:util:List.contains|](v4, v0) @signature [|Ljava/util/List;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc890.   v5:= temp;
#L0bc892.   if v5 != 0 then goto L0bc858;
#L0bc896.   call temp:=  [|java:util:List.add|](v4, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc89c.   goto L0bc858;
#L0bc89e.   call temp:=  [|java:util:Collections.unmodifiableList|](v4) @signature [|Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L0bc8a4.   v5:= temp  @type object;
#L0bc8a6.   (@monitorexit v6)
#L0bc8a8.   return v5  @type object;
  catch  [|any|] @[L0bc81a..L0bc882] goto L0bc884;
  catch  [|any|] @[L0bc88a..L0bc8a4] goto L0bc884;

   }
    procedure [|java:util:List|] [|java:net:CookieStoreImpl.getURIs|] ([|java:net:CookieStoreImpl|] v2 @type (this)) @owner [|java:net:CookieStoreImpl|] @signature [|Ljava/net/CookieStoreImpl;.getURIs:()Ljava/util/List;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0bc8d0.   (@monitorenter v2)
#L0bc8d2.   v0:= new [|java:util:ArrayList|];
#L0bc8d6.   v1:= v2.[|java:net:CookieStoreImpl.map|]   @type object;
#L0bc8da.   call temp:=  [|java:util:Map.keySet|](v1) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc8e0.   v1:= temp  @type object;
#L0bc8e2.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0bc8e8.   v1:= 0  @length 4;
#L0bc8ea.   call temp:=  [|java:util:List.remove|](v0, v1) @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc8f0.   call temp:=  [|java:util:Collections.unmodifiableList|](v0) @signature [|Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L0bc8f6.   v1:= temp  @type object;
#L0bc8f8.   (@monitorexit v2)
#L0bc8fa.   return v1  @type object;
#L0bc8fc.   v1:= Exception  @type object;
#L0bc8fe.   (@monitorexit v2)
#L0bc900.   throw v1;
  catch  [|any|] @[L0bc8d2..L0bc8f6] goto L0bc8fc;

   }
    procedure [|boolean|] [|java:net:CookieStoreImpl.remove|] ([|java:net:CookieStoreImpl|] v3 @type (this), [|java:net:URI|] v4 @type (object), [|java:net:HttpCookie|] v5 @type (object)) @owner [|java:net:CookieStoreImpl|] @signature [|Ljava/net/CookieStoreImpl;.remove:(Ljava/net/URI;Ljava/net/HttpCookie;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bc920.   (@monitorenter v3)
#L0bc922.   if v5 != 0 then goto L0bc93c;
#L0bc926.   v1:= new [|java:lang:NullPointerException|];
#L0bc92a.   v2:= "cookie == null" @type (object, string);
#L0bc92e.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0bc934.   throw v1;
#L0bc936.   v1:= Exception  @type object;
#L0bc938.   (@monitorexit v3)
#L0bc93a.   throw v1;
#L0bc93c.   v1:= v3.[|java:net:CookieStoreImpl.map|]   @type object;
#L0bc940.   call temp:=  [|java:net:CookieStoreImpl.cookiesUri|](v3, v4) @signature [|Ljava/net/CookieStoreImpl;.cookiesUri:(Ljava/net/URI;)Ljava/net/URI;|] @classDescriptor [|java:net:CookieStoreImpl|] @type direct;
#L0bc946.   v2:= temp  @type object;
#L0bc948.   call temp:=  [|java:util:Map.get|](v1, v2) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc94e.   v0:= temp  @type object;
#L0bc950.   v0:= ([|java:util:List|])v0;
#L0bc954.   if v0 == 0 then goto L0bc964;
#L0bc958.   call temp:=  [|java:util:List.remove|](v0, v5) @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0bc95e.   v1:= temp;
#L0bc960.   (@monitorexit v3)
#L0bc962.   return v1;
#L0bc964.   v1:= 0  @length 4;
#L0bc966.   goto L0bc960;
  catch  [|any|] @[L0bc926..L0bc936] goto L0bc936;
  catch  [|any|] @[L0bc93c..L0bc95e] goto L0bc936;

   }
    procedure [|boolean|] [|java:net:CookieStoreImpl.removeAll|] ([|java:net:CookieStoreImpl|] v2 @type (this)) @owner [|java:net:CookieStoreImpl|] @signature [|Ljava/net/CookieStoreImpl;.removeAll:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0bc98c.   (@monitorenter v2)
#L0bc98e.   v1:= v2.[|java:net:CookieStoreImpl.map|]   @type object;
#L0bc992.   call temp:=  [|java:util:Map.isEmpty|](v1) @signature [|Ljava/util/Map;.isEmpty:()Z|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc998.   v1:= temp;
#L0bc99a.   if v1 != 0 then goto L0bc9ae;
#L0bc99e.   v0:= 1  @length 4;
#L0bc9a0.   v1:= v2.[|java:net:CookieStoreImpl.map|]   @type object;
#L0bc9a4.   call temp:=  [|java:util:Map.clear|](v1) @signature [|Ljava/util/Map;.clear:()V|] @classDescriptor [|java:util:Map|] @type interface;
#L0bc9aa.   (@monitorexit v2)
#L0bc9ac.   return v0;
#L0bc9ae.   v0:= 0  @length 4;
#L0bc9b0.   goto L0bc9a0;
#L0bc9b2.   v1:= Exception  @type object;
#L0bc9b4.   (@monitorexit v2)
#L0bc9b6.   throw v1;
  catch  [|any|] @[L0bc98e..L0bc9aa] goto L0bc9b2;

   }
record [|java:net:DatagramPacket|]  @type class @AccessFlag PUBLIC_FINAL  {
      [|java:net:InetAddress|] [|java:net:DatagramPacket.address|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:net:DatagramPacket.data|]    @AccessFlag PRIVATE;
      [|int|] [|java:net:DatagramPacket.length|]    @AccessFlag PRIVATE;
      [|int|] [|java:net:DatagramPacket.offset|]    @AccessFlag PRIVATE;
      [|int|] [|java:net:DatagramPacket.port|]    @AccessFlag PRIVATE;
      [|int|] [|java:net:DatagramPacket.userSuppliedLength|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:net:DatagramPacket.<init>|] ([|java:net:DatagramPacket|] v1 @type (this), [|byte|][] v2, [|int|] v3) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.<init>:([BI)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0bc9d4.   v0:= 0  @length 4;
#L0bc9d6.   call temp:=  [|java:net:DatagramPacket.<init>|](v1, v2, v0, v3) @signature [|Ljava/net/DatagramPacket;.<init>:([BII)V|] @classDescriptor [|java:net:DatagramPacket|] @type direct;
#L0bc9dc.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramPacket.<init>|] ([|java:net:DatagramPacket|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.<init>:([BII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0bc9f0.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bc9f6.   v0:= -1  @length 4;
#L0bc9f8.   v1.[|java:net:DatagramPacket.port|]  := v0;
#L0bc9fc.   v0:= 0  @length 4;
#L0bc9fe.   v1.[|java:net:DatagramPacket.offset|]  := v0;
#L0bca02.   call temp:=  [|java:net:DatagramPacket.setData|](v1, v2, v3, v4) @signature [|Ljava/net/DatagramPacket;.setData:([BII)V|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bca08.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramPacket.<init>|] ([|java:net:DatagramPacket|] v0 @type (this), [|byte|][] v1, [|int|] v2, [|int|] v3, [|java:net:InetAddress|] v4 @type (object), [|int|] v5) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.<init>:([BIILjava/net/InetAddress;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bca1c.   call temp:=  [|java:net:DatagramPacket.<init>|](v0, v1, v2, v3) @signature [|Ljava/net/DatagramPacket;.<init>:([BII)V|] @classDescriptor [|java:net:DatagramPacket|] @type direct;
#L0bca22.   call temp:=  [|java:net:DatagramPacket.setPort|](v0, v5) @signature [|Ljava/net/DatagramPacket;.setPort:(I)V|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bca28.   v0.[|java:net:DatagramPacket.address|]  := v4 @type object;
#L0bca2c.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramPacket.<init>|] ([|java:net:DatagramPacket|] v0 @type (this), [|byte|][] v1, [|int|] v2, [|int|] v3, [|java:net:SocketAddress|] v4 @type (object)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.<init>:([BIILjava/net/SocketAddress;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0bca40.   call temp:=  [|java:net:DatagramPacket.<init>|](v0, v1, v2, v3) @signature [|Ljava/net/DatagramPacket;.<init>:([BII)V|] @classDescriptor [|java:net:DatagramPacket|] @type direct;
#L0bca46.   call temp:=  [|java:net:DatagramPacket.setSocketAddress|](v0, v4) @signature [|Ljava/net/DatagramPacket;.setSocketAddress:(Ljava/net/SocketAddress;)V|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bca4c.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramPacket.<init>|] ([|java:net:DatagramPacket|] v6 @type (this), [|byte|][] v7, [|int|] v8, [|java:net:InetAddress|] v9 @type (object), [|int|] v10) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.<init>:([BILjava/net/InetAddress;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0bca60.   v2:= 0  @length 4;
#L0bca62.   v0:= v6  @type object;
#L0bca64.   v1:= v7  @type object;
#L0bca66.   v3:= v8;
#L0bca68.   v4:= v9  @type object;
#L0bca6a.   v5:= v10;
#L0bca6c.   call temp:=  [|java:net:DatagramPacket.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/net/DatagramPacket;.<init>:([BIILjava/net/InetAddress;I)V|] @classDescriptor [|java:net:DatagramPacket|] @type direct;
#L0bca72.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramPacket.<init>|] ([|java:net:DatagramPacket|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|java:net:SocketAddress|] v4 @type (object)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.<init>:([BILjava/net/SocketAddress;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0bca84.   v0:= 0  @length 4;
#L0bca86.   call temp:=  [|java:net:DatagramPacket.<init>|](v1, v2, v0, v3) @signature [|Ljava/net/DatagramPacket;.<init>:([BII)V|] @classDescriptor [|java:net:DatagramPacket|] @type direct;
#L0bca8c.   call temp:=  [|java:net:DatagramPacket.setSocketAddress|](v1, v4) @signature [|Ljava/net/DatagramPacket;.setSocketAddress:(Ljava/net/SocketAddress;)V|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bca92.   return @void ;

   }
    procedure [|java:net:InetAddress|] [|java:net:DatagramPacket.getAddress|] ([|java:net:DatagramPacket|] v1 @type (this)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.getAddress:()Ljava/net/InetAddress;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0bcaa4.   (@monitorenter v1)
#L0bcaa6.   v0:= v1.[|java:net:DatagramPacket.address|]   @type object;
#L0bcaaa.   (@monitorexit v1)
#L0bcaac.   return v0  @type object;
#L0bcaae.   v0:= Exception  @type object;
#L0bcab0.   (@monitorexit v1)
#L0bcab2.   throw v0;
  catch  [|any|] @[L0bcaa6..L0bcaaa] goto L0bcaae;

   }
    procedure [|byte|][] [|java:net:DatagramPacket.getData|] ([|java:net:DatagramPacket|] v1 @type (this)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.getData:()[B|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0bcad0.   (@monitorenter v1)
#L0bcad2.   v0:= v1.[|java:net:DatagramPacket.data|]   @type object;
#L0bcad6.   (@monitorexit v1)
#L0bcad8.   return v0  @type object;
#L0bcada.   v0:= Exception  @type object;
#L0bcadc.   (@monitorexit v1)
#L0bcade.   throw v0;
  catch  [|any|] @[L0bcad2..L0bcad6] goto L0bcada;

   }
    procedure [|int|] [|java:net:DatagramPacket.getLength|] ([|java:net:DatagramPacket|] v1 @type (this)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.getLength:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0bcafc.   (@monitorenter v1)
#L0bcafe.   v0:= v1.[|java:net:DatagramPacket.length|] ;
#L0bcb02.   (@monitorexit v1)
#L0bcb04.   return v0;
#L0bcb06.   v0:= Exception  @type object;
#L0bcb08.   (@monitorexit v1)
#L0bcb0a.   throw v0;
  catch  [|any|] @[L0bcafe..L0bcb02] goto L0bcb06;

   }
    procedure [|int|] [|java:net:DatagramPacket.getOffset|] ([|java:net:DatagramPacket|] v1 @type (this)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.getOffset:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0bcb28.   (@monitorenter v1)
#L0bcb2a.   v0:= v1.[|java:net:DatagramPacket.offset|] ;
#L0bcb2e.   (@monitorexit v1)
#L0bcb30.   return v0;
#L0bcb32.   v0:= Exception  @type object;
#L0bcb34.   (@monitorexit v1)
#L0bcb36.   throw v0;
  catch  [|any|] @[L0bcb2a..L0bcb2e] goto L0bcb32;

   }
    procedure [|int|] [|java:net:DatagramPacket.getPort|] ([|java:net:DatagramPacket|] v1 @type (this)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.getPort:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0bcb54.   (@monitorenter v1)
#L0bcb56.   v0:= v1.[|java:net:DatagramPacket.port|] ;
#L0bcb5a.   (@monitorexit v1)
#L0bcb5c.   return v0;
#L0bcb5e.   v0:= Exception  @type object;
#L0bcb60.   (@monitorexit v1)
#L0bcb62.   throw v0;
  catch  [|any|] @[L0bcb56..L0bcb5a] goto L0bcb5e;

   }
    procedure [|java:net:SocketAddress|] [|java:net:DatagramPacket.getSocketAddress|] ([|java:net:DatagramPacket|] v3 @type (this)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.getSocketAddress:()Ljava/net/SocketAddress;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bcb80.   (@monitorenter v3)
#L0bcb82.   v0:= new [|java:net:InetSocketAddress|];
#L0bcb86.   call temp:=  [|java:net:DatagramPacket.getAddress|](v3) @signature [|Ljava/net/DatagramPacket;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bcb8c.   v1:= temp  @type object;
#L0bcb8e.   call temp:=  [|java:net:DatagramPacket.getPort|](v3) @signature [|Ljava/net/DatagramPacket;.getPort:()I|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bcb94.   v2:= temp;
#L0bcb96.   call temp:=  [|java:net:InetSocketAddress.<init>|](v0, v1, v2) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L0bcb9c.   (@monitorexit v3)
#L0bcb9e.   return v0  @type object;
#L0bcba0.   v0:= Exception  @type object;
#L0bcba2.   (@monitorexit v3)
#L0bcba4.   throw v0;
  catch  [|any|] @[L0bcb82..L0bcb9c] goto L0bcba0;

   }
    procedure [|void|] [|java:net:DatagramPacket.resetLengthForReceive|] ([|java:net:DatagramPacket|] v1 @type (this)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.resetLengthForReceive:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bcbc4.   v0:= v1.[|java:net:DatagramPacket.userSuppliedLength|] ;
#L0bcbc8.   v1.[|java:net:DatagramPacket.length|]  := v0;
#L0bcbcc.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramPacket.setAddress|] ([|java:net:DatagramPacket|] v1 @type (this), [|java:net:InetAddress|] v2 @type (object)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.setAddress:(Ljava/net/InetAddress;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0bcbe0.   (@monitorenter v1)
#L0bcbe2.   v1.[|java:net:DatagramPacket.address|]  := v2 @type object;
#L0bcbe6.   (@monitorexit v1)
#L0bcbe8.   return @void ;
#L0bcbea.   v0:= Exception  @type object;
#L0bcbec.   (@monitorexit v1)
#L0bcbee.   throw v0;
  catch  [|any|] @[L0bcbe2..L0bcbe6] goto L0bcbea;

   }
    procedure [|void|] [|java:net:DatagramPacket.setData|] ([|java:net:DatagramPacket|] v1 @type (this), [|byte|][] v2) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.setData:([B)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0bcc0c.   (@monitorenter v1)
#L0bcc0e.   v0:= v2.length;
#L0bcc10.   v1.[|java:net:DatagramPacket.length|]  := v0;
#L0bcc14.   v0:= v1.[|java:net:DatagramPacket.length|] ;
#L0bcc18.   v1.[|java:net:DatagramPacket.userSuppliedLength|]  := v0;
#L0bcc1c.   v1.[|java:net:DatagramPacket.data|]  := v2 @type object;
#L0bcc20.   v0:= 0  @length 4;
#L0bcc22.   v1.[|java:net:DatagramPacket.offset|]  := v0;
#L0bcc26.   (@monitorexit v1)
#L0bcc28.   return @void ;
#L0bcc2a.   v0:= Exception  @type object;
#L0bcc2c.   (@monitorexit v1)
#L0bcc2e.   throw v0;
  catch  [|any|] @[L0bcc0e..L0bcc26] goto L0bcc2a;

   }
    procedure [|void|] [|java:net:DatagramPacket.setData|] ([|java:net:DatagramPacket|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.setData:([BII)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0bcc4c.   (@monitorenter v1)
#L0bcc4e.   v0:= v3 ^| v4  @type int;
#L0bcc52.   if v0 < 0 then goto L0bcc64;
#L0bcc56.   v0:= v2.length;
#L0bcc58.   if v3 > v0 then goto L0bcc64;
#L0bcc5c.   v0:= v2.length;
#L0bcc5e.   v0:= v0 - v3  @type int;
#L0bcc60.   if v4 <= v0 then goto L0bcc76;
#L0bcc64.   v0:= new [|java:lang:IllegalArgumentException|];
#L0bcc68.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bcc6e.   throw v0;
#L0bcc70.   v0:= Exception  @type object;
#L0bcc72.   (@monitorexit v1)
#L0bcc74.   throw v0;
#L0bcc76.   v1.[|java:net:DatagramPacket.data|]  := v2 @type object;
#L0bcc7a.   v1.[|java:net:DatagramPacket.offset|]  := v3;
#L0bcc7e.   v1.[|java:net:DatagramPacket.length|]  := v4;
#L0bcc82.   v1.[|java:net:DatagramPacket.userSuppliedLength|]  := v4;
#L0bcc86.   (@monitorexit v1)
#L0bcc88.   return @void ;
  catch  [|any|] @[L0bcc56..L0bcc70] goto L0bcc70;
  catch  [|any|] @[L0bcc76..L0bcc86] goto L0bcc70;

   }
    procedure [|void|] [|java:net:DatagramPacket.setLength|] ([|java:net:DatagramPacket|] v3 @type (this), [|int|] v4) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.setLength:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bccb0.   (@monitorenter v3)
#L0bccb2.   if v4 < 0 then goto L0bccc6;
#L0bccb6.   v0:= v3.[|java:net:DatagramPacket.offset|] ;
#L0bccba.   v0:= v0 + v4  @type int;
#L0bccbc.   v1:= v3.[|java:net:DatagramPacket.data|]   @type object;
#L0bccc0.   v1:= v1.length;
#L0bccc2.   if v0 <= v1 then goto L0bcd30;
#L0bccc6.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L0bccca.   v1:= new [|java:lang:StringBuilder|];
#L0bccce.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bccd4.   v2:= "length=" @type (object, string);
#L0bccd8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bccde.   v1:= temp  @type object;
#L0bcce0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bcce6.   v1:= temp  @type object;
#L0bcce8.   v2:= ", offset=" @type (object, string);
#L0bccec.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bccf2.   v1:= temp  @type object;
#L0bccf4.   v2:= v3.[|java:net:DatagramPacket.offset|] ;
#L0bccf8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bccfe.   v1:= temp  @type object;
#L0bcd00.   v2:= ", buffer size=" @type (object, string);
#L0bcd04.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bcd0a.   v1:= temp  @type object;
#L0bcd0c.   v2:= v3.[|java:net:DatagramPacket.data|]   @type object;
#L0bcd10.   v2:= v2.length;
#L0bcd12.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bcd18.   v1:= temp  @type object;
#L0bcd1a.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bcd20.   v1:= temp  @type object;
#L0bcd22.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0bcd28.   throw v0;
#L0bcd2a.   v0:= Exception  @type object;
#L0bcd2c.   (@monitorexit v3)
#L0bcd2e.   throw v0;
#L0bcd30.   v3.[|java:net:DatagramPacket.length|]  := v4;
#L0bcd34.   v3.[|java:net:DatagramPacket.userSuppliedLength|]  := v4;
#L0bcd38.   (@monitorexit v3)
#L0bcd3a.   return @void ;
  catch  [|any|] @[L0bccb6..L0bcd2a] goto L0bcd2a;
  catch  [|any|] @[L0bcd30..L0bcd38] goto L0bcd2a;

   }
    procedure [|void|] [|java:net:DatagramPacket.setPort|] ([|java:net:DatagramPacket|] v3 @type (this), [|int|] v4) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.setPort:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bcd60.   (@monitorenter v3)
#L0bcd62.   if v4 < 0 then goto L0bcd70;
#L0bcd66.    v0:= 0.000000;
#L0bcd6c.   if v4 <= v0 then goto L0bcda8;
#L0bcd70.   v0:= new [|java:lang:IllegalArgumentException|];
#L0bcd74.   v1:= new [|java:lang:StringBuilder|];
#L0bcd78.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bcd7e.   v2:= "Port out of range: " @type (object, string);
#L0bcd82.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bcd88.   v1:= temp  @type object;
#L0bcd8a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bcd90.   v1:= temp  @type object;
#L0bcd92.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bcd98.   v1:= temp  @type object;
#L0bcd9a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bcda0.   throw v0;
#L0bcda2.   v0:= Exception  @type object;
#L0bcda4.   (@monitorexit v3)
#L0bcda6.   throw v0;
#L0bcda8.   v3.[|java:net:DatagramPacket.port|]  := v4;
#L0bcdac.   (@monitorexit v3)
#L0bcdae.   return @void ;
  catch  [|any|] @[L0bcd70..L0bcda2] goto L0bcda2;
  catch  [|any|] @[L0bcda8..L0bcdac] goto L0bcda2;

   }
    procedure [|void|] [|java:net:DatagramPacket.setReceivedLength|] ([|java:net:DatagramPacket|] v0 @type (this), [|int|] v1) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.setReceivedLength:(I)V|] @Access PUBLIC {
      local temp ;
      
#L0bcdd4.   v0.[|java:net:DatagramPacket.length|]  := v1;
#L0bcdd8.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramPacket.setSocketAddress|] ([|java:net:DatagramPacket|] v5 @type (this), [|java:net:SocketAddress|] v6 @type (object)) @owner [|java:net:DatagramPacket|] @signature [|Ljava/net/DatagramPacket;.setSocketAddress:(Ljava/net/SocketAddress;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0bcdec.   (@monitorenter v5)
#L0bcdee.   v2:= instanceof @varname v6 @type [|java:net:InetSocketAddress|];
#L0bcdf2.   if v2 != 0 then goto L0bce3e;
#L0bcdf6.   v3:= new [|java:lang:IllegalArgumentException|];
#L0bcdfa.   v2:= new [|java:lang:StringBuilder|];
#L0bcdfe.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bce04.   v4:= "Socket address not an InetSocketAddress: " @type (object, string);
#L0bce08.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bce0e.   v4:= temp  @type object;
#L0bce10.   if v6 != 0 then goto L0bce34;
#L0bce14.   v2:= 0  @length 4;
#L0bce16.   call temp:=  [|java:lang:StringBuilder.append|](v4, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bce1c.   v2:= temp  @type object;
#L0bce1e.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bce24.   v2:= temp  @type object;
#L0bce26.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bce2c.   throw v3;
#L0bce2e.   v2:= Exception  @type object;
#L0bce30.   (@monitorexit v5)
#L0bce32.   throw v2;
#L0bce34.   call temp:=  [|java:lang:Object.getClass|](v6) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0bce3a.   v2:= temp  @type object;
#L0bce3c.   goto L0bce16;
#L0bce3e.   v0:= v6  @type object;
#L0bce40.   v0:= ([|java:net:InetSocketAddress|])v0;
#L0bce44.   v1:= v0  @type object;
#L0bce46.   call temp:=  [|java:net:InetSocketAddress.isUnresolved|](v1) @signature [|Ljava/net/InetSocketAddress;.isUnresolved:()Z|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bce4c.   v2:= temp;
#L0bce4e.   if v2 == 0 then goto L0bce84;
#L0bce52.   v2:= new [|java:lang:IllegalArgumentException|];
#L0bce56.   v3:= new [|java:lang:StringBuilder|];
#L0bce5a.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bce60.   v4:= "Socket address unresolved: " @type (object, string);
#L0bce64.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bce6a.   v3:= temp  @type object;
#L0bce6c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bce72.   v3:= temp  @type object;
#L0bce74.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bce7a.   v3:= temp  @type object;
#L0bce7c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bce82.   throw v2;
#L0bce84.   call temp:=  [|java:net:InetSocketAddress.getPort|](v1) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bce8a.   v2:= temp;
#L0bce8c.   v5.[|java:net:DatagramPacket.port|]  := v2;
#L0bce90.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v1) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bce96.   v2:= temp  @type object;
#L0bce98.   v5.[|java:net:DatagramPacket.address|]  := v2 @type object;
#L0bce9c.   (@monitorexit v5)
#L0bce9e.   return @void ;
  catch  [|any|] @[L0bcdee..L0bce2e] goto L0bce2e;
  catch  [|any|] @[L0bce34..L0bce9c] goto L0bce2e;

   }
record [|java:net:DatagramSocket|]  @type class @AccessFlag PUBLIC  {
      [|java:net:InetAddress|] [|java:net:DatagramSocket.address|]    @AccessFlag ;
      [|java:net:DatagramSocketImpl|] [|java:net:DatagramSocket.impl|]    @AccessFlag ;
      [|boolean|] [|java:net:DatagramSocket.isBound|]    @AccessFlag ;
      [|boolean|] [|java:net:DatagramSocket.isClosed|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:net:DatagramSocket.isConnected|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:net:DatagramSocket.lock|]    @AccessFlag PRIVATE;
      [|java:net:SocketException|] [|java:net:DatagramSocket.pendingConnectException|]    @AccessFlag PRIVATE;
      [|int|] [|java:net:DatagramSocket.port|]    @AccessFlag ;
   }
      global [|java:net:DatagramSocketImplFactory|] @@[|java:net:DatagramSocket.factory|]    @AccessFlag STATIC;
    procedure [|void|] [|java:net:DatagramSocket.<init>|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0bcec4.   v0:= 0  @length 4;
#L0bcec6.   call temp:=  [|java:net:DatagramSocket.<init>|](v1, v0) @signature [|Ljava/net/DatagramSocket;.<init>:(I)V|] @classDescriptor [|java:net:DatagramSocket|] @type direct;
#L0bcecc.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.<init>|] ([|java:net:DatagramSocket|] v2 @type (this), [|int|] v3) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0bcee0.   v1:= 0  @length 4;
#L0bcee2.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bcee8.   v0:= -1  @length 4;
#L0bceea.   v2.[|java:net:DatagramSocket.port|]  := v0;
#L0bceee.   v2.[|java:net:DatagramSocket.isBound|]  := v1 @boolean;
#L0bcef2.   v2.[|java:net:DatagramSocket.isConnected|]  := v1 @boolean;
#L0bcef6.   v2.[|java:net:DatagramSocket.isClosed|]  := v1 @boolean;
#L0bcefa.   v0:= new [|java:lang:Object|];
#L0bcefe.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bcf04.   v2.[|java:net:DatagramSocket.lock|]  := v0 @type object;
#L0bcf08.   call temp:=  [|java:net:DatagramSocket.checkPort|](v2, v3) @signature [|Ljava/net/DatagramSocket;.checkPort:(I)V|] @classDescriptor [|java:net:DatagramSocket|] @type direct;
#L0bcf0e.   v0:= @@[|java:net:Inet4Address.ANY|]   @type object;
#L0bcf12.   call temp:=  [|java:net:DatagramSocket.createSocket|](v2, v3, v0) @signature [|Ljava/net/DatagramSocket;.createSocket:(ILjava/net/InetAddress;)V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bcf18.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.<init>|] ([|java:net:DatagramSocket|] v2 @type (this), [|int|] v3, [|java:net:InetAddress|] v4 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.<init>:(ILjava/net/InetAddress;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0bcf2c.   v1:= 0  @length 4;
#L0bcf2e.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bcf34.   v0:= -1  @length 4;
#L0bcf36.   v2.[|java:net:DatagramSocket.port|]  := v0;
#L0bcf3a.   v2.[|java:net:DatagramSocket.isBound|]  := v1 @boolean;
#L0bcf3e.   v2.[|java:net:DatagramSocket.isConnected|]  := v1 @boolean;
#L0bcf42.   v2.[|java:net:DatagramSocket.isClosed|]  := v1 @boolean;
#L0bcf46.   v0:= new [|java:lang:Object|];
#L0bcf4a.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bcf50.   v2.[|java:net:DatagramSocket.lock|]  := v0 @type object;
#L0bcf54.   call temp:=  [|java:net:DatagramSocket.checkPort|](v2, v3) @signature [|Ljava/net/DatagramSocket;.checkPort:(I)V|] @classDescriptor [|java:net:DatagramSocket|] @type direct;
#L0bcf5a.   if v4 != 0 then goto L0bcf62;
#L0bcf5e.   v4:= @@[|java:net:Inet4Address.ANY|]   @type object;
#L0bcf62.   call temp:=  [|java:net:DatagramSocket.createSocket|](v2, v3, v4) @signature [|Ljava/net/DatagramSocket;.createSocket:(ILjava/net/InetAddress;)V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bcf68.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.<init>|] ([|java:net:DatagramSocket|] v2 @type (this), [|java:net:DatagramSocketImpl|] v3 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.<init>:(Ljava/net/DatagramSocketImpl;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0bcf7c.   v1:= 0  @length 4;
#L0bcf7e.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bcf84.   v0:= -1  @length 4;
#L0bcf86.   v2.[|java:net:DatagramSocket.port|]  := v0;
#L0bcf8a.   v2.[|java:net:DatagramSocket.isBound|]  := v1 @boolean;
#L0bcf8e.   v2.[|java:net:DatagramSocket.isConnected|]  := v1 @boolean;
#L0bcf92.   v2.[|java:net:DatagramSocket.isClosed|]  := v1 @boolean;
#L0bcf96.   v0:= new [|java:lang:Object|];
#L0bcf9a.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bcfa0.   v2.[|java:net:DatagramSocket.lock|]  := v0 @type object;
#L0bcfa4.   if v3 != 0 then goto L0bcfb8;
#L0bcfa8.   v0:= new [|java:lang:NullPointerException|];
#L0bcfac.   v1:= "socketImpl == null" @type (object, string);
#L0bcfb0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0bcfb6.   throw v0;
#L0bcfb8.   v2.[|java:net:DatagramSocket.impl|]  := v3 @type object;
#L0bcfbc.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.<init>|] ([|java:net:DatagramSocket|] v4 @type (this), [|java:net:SocketAddress|] v5 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.<init>:(Ljava/net/SocketAddress;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0bcfd0.   v2:= 0  @length 4;
#L0bcfd2.   call temp:=  [|java:lang:Object.<init>|](v4) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bcfd8.   v1:= -1  @length 4;
#L0bcfda.   v4.[|java:net:DatagramSocket.port|]  := v1;
#L0bcfde.   v4.[|java:net:DatagramSocket.isBound|]  := v2 @boolean;
#L0bcfe2.   v4.[|java:net:DatagramSocket.isConnected|]  := v2 @boolean;
#L0bcfe6.   v4.[|java:net:DatagramSocket.isClosed|]  := v2 @boolean;
#L0bcfea.   v1:= new [|java:lang:Object|];
#L0bcfee.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bcff4.   v4.[|java:net:DatagramSocket.lock|]  := v1 @type object;
#L0bcff8.   if v5 == 0 then goto L0bd052;
#L0bcffc.   v1:= instanceof @varname v5 @type [|java:net:InetSocketAddress|];
#L0bd000.   if v1 != 0 then goto L0bd03e;
#L0bd004.   v1:= new [|java:lang:IllegalArgumentException|];
#L0bd008.   v2:= new [|java:lang:StringBuilder|];
#L0bd00c.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bd012.   v3:= "Local address not an InetSocketAddress: " @type (object, string);
#L0bd016.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd01c.   v2:= temp  @type object;
#L0bd01e.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0bd024.   v3:= temp  @type object;
#L0bd026.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd02c.   v2:= temp  @type object;
#L0bd02e.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd034.   v2:= temp  @type object;
#L0bd036.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bd03c.   throw v1;
#L0bd03e.   v1:= v5  @type object;
#L0bd040.   v1:= ([|java:net:InetSocketAddress|])v1;
#L0bd044.   call temp:=  [|java:net:InetSocketAddress.getPort|](v1) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bd04a.   v1:= temp;
#L0bd04c.   call temp:=  [|java:net:DatagramSocket.checkPort|](v4, v1) @signature [|Ljava/net/DatagramSocket;.checkPort:(I)V|] @classDescriptor [|java:net:DatagramSocket|] @type direct;
#L0bd052.   v1:= @@[|java:net:DatagramSocket.factory|]   @type object;
#L0bd056.   if v1 == 0 then goto L0bd088;
#L0bd05a.   v1:= @@[|java:net:DatagramSocket.factory|]   @type object;
#L0bd05e.   call temp:=  [|java:net:DatagramSocketImplFactory.createDatagramSocketImpl|](v1) @signature [|Ljava/net/DatagramSocketImplFactory;.createDatagramSocketImpl:()Ljava/net/DatagramSocketImpl;|] @classDescriptor [|java:net:DatagramSocketImplFactory|] @type interface;
#L0bd064.   v1:= temp  @type object;
#L0bd066.   v4.[|java:net:DatagramSocket.impl|]  := v1 @type object;
#L0bd06a.   v1:= v4.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd06e.   call temp:=  [|java:net:DatagramSocketImpl.create|](v1) @signature [|Ljava/net/DatagramSocketImpl;.create:()V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd074.   if v5 == 0 then goto L0bd07e;
#L0bd078.   call temp:=  [|java:net:DatagramSocket.bind|](v4, v5) @signature [|Ljava/net/DatagramSocket;.bind:(Ljava/net/SocketAddress;)V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd07e.   v1:= 1  @length 4;
#L0bd080.   call temp:=  [|java:net:DatagramSocket.setBroadcast|](v4, v1) @signature [|Ljava/net/DatagramSocket;.setBroadcast:(Z)V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd086.   return @void ;
#L0bd088.   v1:= new [|java:net:PlainDatagramSocketImpl|];
#L0bd08c.   call temp:=  [|java:net:PlainDatagramSocketImpl.<init>|](v1) @signature [|Ljava/net/PlainDatagramSocketImpl;.<init>:()V|] @classDescriptor [|java:net:PlainDatagramSocketImpl|] @type direct;
#L0bd092.   goto L0bd066;
#L0bd094.   v0:= Exception  @type object;
#L0bd096.   call temp:=  [|java:net:DatagramSocket.close|](v4) @signature [|Ljava/net/DatagramSocket;.close:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd09c.   throw v0;
  catch  [|java:net:SocketException|] @[L0bd078..L0bd07e] goto L0bd094;

   }
    procedure [|void|] [|java:net:DatagramSocket.checkPort|] ([|java:net:DatagramSocket|] v3 @type (this), [|int|] v4) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.checkPort:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd0c0.   if v4 < 0 then goto L0bd0ce;
#L0bd0c4.    v0:= 0.000000;
#L0bd0ca.   if v4 <= v0 then goto L0bd100;
#L0bd0ce.   v0:= new [|java:lang:IllegalArgumentException|];
#L0bd0d2.   v1:= new [|java:lang:StringBuilder|];
#L0bd0d6.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bd0dc.   v2:= "Port out of range: " @type (object, string);
#L0bd0e0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd0e6.   v1:= temp  @type object;
#L0bd0e8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd0ee.   v1:= temp  @type object;
#L0bd0f0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd0f6.   v1:= temp  @type object;
#L0bd0f8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bd0fe.   throw v0;
#L0bd100.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.ensureBound|] ([|java:net:DatagramSocket|] v3 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.ensureBound:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd114.   call temp:=  [|java:net:DatagramSocket.isBound|](v3) @signature [|Ljava/net/DatagramSocket;.isBound:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd11a.   v0:= temp;
#L0bd11c.   if v0 != 0 then goto L0bd136;
#L0bd120.   v0:= v3.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd124.   v1:= 0  @length 4;
#L0bd126.   v2:= @@[|java:net:Inet4Address.ANY|]   @type object;
#L0bd12a.   call temp:=  [|java:net:DatagramSocketImpl.bind|](v0, v1, v2) @signature [|Ljava/net/DatagramSocketImpl;.bind:(ILjava/net/InetAddress;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd130.   v0:= 1  @length 4;
#L0bd132.   v3.[|java:net:DatagramSocket.isBound|]  := v0 @boolean;
#L0bd136.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.setDatagramSocketImplFactory|] ([|java:net:DatagramSocketImplFactory|] v3 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.setDatagramSocketImplFactory:(Ljava/net/DatagramSocketImplFactory;)V|] @Access PUBLIC_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd148.   v1:= new [|java:net:DatagramSocket|];
#L0bd14c.   (@monitorenter v1)
#L0bd14e.   v0:= @@[|java:net:DatagramSocket.factory|]   @type object;
#L0bd152.   if v0 == 0 then goto L0bd16c;
#L0bd156.   v0:= new [|java:net:SocketException|];
#L0bd15a.   v2:= "Factory already set" @type (object, string);
#L0bd15e.   call temp:=  [|java:net:SocketException.<init>|](v0, v2) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bd164.   throw v0;
#L0bd166.   v0:= Exception  @type object;
#L0bd168.   (@monitorexit v1)
#L0bd16a.   throw v0;
#L0bd16c.   @@[|java:net:DatagramSocket.factory|] := v3  @type object;
#L0bd170.   (@monitorexit v1)
#L0bd172.   return @void ;
  catch  [|any|] @[L0bd14e..L0bd166] goto L0bd166;
  catch  [|any|] @[L0bd16c..L0bd170] goto L0bd166;

   }
    procedure [|void|] [|java:net:DatagramSocket.bind|] ([|java:net:DatagramSocket|] v6 @type (this), [|java:net:SocketAddress|] v7 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.bind:(Ljava/net/SocketAddress;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0bd198.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v6) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd19e.   v2:= 0  @length 4;
#L0bd1a0.   v0:= @@[|java:net:Inet4Address.ANY|]   @type object;
#L0bd1a4.   if v7 == 0 then goto L0bd244;
#L0bd1a8.   v3:= instanceof @varname v7 @type [|java:net:InetSocketAddress|];
#L0bd1ac.   if v3 != 0 then goto L0bd1ea;
#L0bd1b0.   v3:= new [|java:lang:IllegalArgumentException|];
#L0bd1b4.   v4:= new [|java:lang:StringBuilder|];
#L0bd1b8.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bd1be.   v5:= "Local address not an InetSocketAddress: " @type (object, string);
#L0bd1c2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd1c8.   v4:= temp  @type object;
#L0bd1ca.   call temp:=  [|java:lang:Object.getClass|](v7) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0bd1d0.   v5:= temp  @type object;
#L0bd1d2.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd1d8.   v4:= temp  @type object;
#L0bd1da.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd1e0.   v4:= temp  @type object;
#L0bd1e2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bd1e8.   throw v3;
#L0bd1ea.   v1:= v7  @type object;
#L0bd1ec.   v1:= ([|java:net:InetSocketAddress|])v1;
#L0bd1f0.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v1) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bd1f6.   v0:= temp  @type object;
#L0bd1f8.   if v0 != 0 then goto L0bd236;
#L0bd1fc.   v3:= new [|java:net:SocketException|];
#L0bd200.   v4:= new [|java:lang:StringBuilder|];
#L0bd204.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bd20a.   v5:= "Host is unresolved: " @type (object, string);
#L0bd20e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd214.   v4:= temp  @type object;
#L0bd216.   call temp:=  [|java:net:InetSocketAddress.getHostName|](v1) @signature [|Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bd21c.   v5:= temp  @type object;
#L0bd21e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd224.   v4:= temp  @type object;
#L0bd226.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd22c.   v4:= temp  @type object;
#L0bd22e.   call temp:=  [|java:net:SocketException.<init>|](v3, v4) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bd234.   throw v3;
#L0bd236.   call temp:=  [|java:net:InetSocketAddress.getPort|](v1) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bd23c.   v2:= temp;
#L0bd23e.   call temp:=  [|java:net:DatagramSocket.checkPort|](v6, v2) @signature [|Ljava/net/DatagramSocket;.checkPort:(I)V|] @classDescriptor [|java:net:DatagramSocket|] @type direct;
#L0bd244.   v3:= v6.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd248.   call temp:=  [|java:net:DatagramSocketImpl.bind|](v3, v2, v0) @signature [|Ljava/net/DatagramSocketImpl;.bind:(ILjava/net/InetAddress;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd24e.   v3:= 1  @length 4;
#L0bd250.   v6.[|java:net:DatagramSocket.isBound|]  := v3 @boolean;
#L0bd254.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.checkOpen|] ([|java:net:DatagramSocket|] v2 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0bd268.   call temp:=  [|java:net:DatagramSocket.isClosed|](v2) @signature [|Ljava/net/DatagramSocket;.isClosed:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd26e.   v0:= temp;
#L0bd270.   if v0 == 0 then goto L0bd284;
#L0bd274.   v0:= new [|java:net:SocketException|];
#L0bd278.   v1:= "Socket is closed" @type (object, string);
#L0bd27c.   call temp:=  [|java:net:SocketException.<init>|](v0, v1) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bd282.   throw v0;
#L0bd284.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.close|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd298.   v0:= 1  @length 4;
#L0bd29a.   v1.[|java:net:DatagramSocket.isClosed|]  := v0 @boolean;
#L0bd29e.   v0:= v1.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd2a2.   call temp:=  [|java:net:DatagramSocketImpl.close|](v0) @signature [|Ljava/net/DatagramSocketImpl;.close:()V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd2a8.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.connect|] ([|java:net:DatagramSocket|] v3 @type (this), [|java:net:InetAddress|] v4 @type (object), [|int|] v5) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.connect:(Ljava/net/InetAddress;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd2bc.   if v4 != 0 then goto L0bd2d0;
#L0bd2c0.   v1:= new [|java:lang:IllegalArgumentException|];
#L0bd2c4.   v2:= "address == null" @type (object, string);
#L0bd2c8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bd2ce.   throw v1;
#L0bd2d0.   v1:= new [|java:net:InetSocketAddress|];
#L0bd2d4.   call temp:=  [|java:net:InetSocketAddress.<init>|](v1, v4, v5) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L0bd2da.   call temp:=  [|java:net:DatagramSocket.connect|](v3, v1) @signature [|Ljava/net/DatagramSocket;.connect:(Ljava/net/SocketAddress;)V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd2e0.   return @void ;
#L0bd2e2.   v0:= Exception  @type object;
#L0bd2e4.   v3.[|java:net:DatagramSocket.pendingConnectException|]  := v0 @type object;
#L0bd2e8.   goto L0bd2e0;
  catch  [|java:net:SocketException|] @[L0bd2d0..L0bd2e0] goto L0bd2e2;

   }
    procedure [|void|] [|java:net:DatagramSocket.connect|] ([|java:net:DatagramSocket|] v5 @type (this), [|java:net:SocketAddress|] v6 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.connect:(Ljava/net/SocketAddress;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0bd30c.   if v6 != 0 then goto L0bd320;
#L0bd310.   v1:= new [|java:lang:IllegalArgumentException|];
#L0bd314.   v2:= "peer == null" @type (object, string);
#L0bd318.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bd31e.   throw v1;
#L0bd320.   v1:= instanceof @varname v6 @type [|java:net:InetSocketAddress|];
#L0bd324.   if v1 != 0 then goto L0bd362;
#L0bd328.   v1:= new [|java:lang:IllegalArgumentException|];
#L0bd32c.   v2:= new [|java:lang:StringBuilder|];
#L0bd330.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bd336.   v3:= "peer not an InetSocketAddress: " @type (object, string);
#L0bd33a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd340.   v2:= temp  @type object;
#L0bd342.   call temp:=  [|java:lang:Object.getClass|](v6) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0bd348.   v3:= temp  @type object;
#L0bd34a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd350.   v2:= temp  @type object;
#L0bd352.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd358.   v2:= temp  @type object;
#L0bd35a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bd360.   throw v1;
#L0bd362.   v0:= v6  @type object;
#L0bd364.   v0:= ([|java:net:InetSocketAddress|])v0;
#L0bd368.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v0) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bd36e.   v1:= temp  @type object;
#L0bd370.   if v1 != 0 then goto L0bd3ae;
#L0bd374.   v1:= new [|java:net:SocketException|];
#L0bd378.   v2:= new [|java:lang:StringBuilder|];
#L0bd37c.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0bd382.   v3:= "Host is unresolved: " @type (object, string);
#L0bd386.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd38c.   v2:= temp  @type object;
#L0bd38e.   call temp:=  [|java:net:InetSocketAddress.getHostName|](v0) @signature [|Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bd394.   v3:= temp  @type object;
#L0bd396.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd39c.   v2:= temp  @type object;
#L0bd39e.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0bd3a4.   v2:= temp  @type object;
#L0bd3a6.   call temp:=  [|java:net:SocketException.<init>|](v1, v2) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bd3ac.   throw v1;
#L0bd3ae.   v2:= v5.[|java:net:DatagramSocket.lock|]   @type object;
#L0bd3b2.   (@monitorenter v2)
#L0bd3b4.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v5) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd3ba.   call temp:=  [|java:net:DatagramSocket.ensureBound|](v5) @signature [|Ljava/net/DatagramSocket;.ensureBound:()V|] @classDescriptor [|java:net:DatagramSocket|] @type direct;
#L0bd3c0.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v0) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bd3c6.   v1:= temp  @type object;
#L0bd3c8.   v5.[|java:net:DatagramSocket.address|]  := v1 @type object;
#L0bd3cc.   call temp:=  [|java:net:InetSocketAddress.getPort|](v0) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0bd3d2.   v1:= temp;
#L0bd3d4.   v5.[|java:net:DatagramSocket.port|]  := v1;
#L0bd3d8.   v1:= 1  @length 4;
#L0bd3da.   v5.[|java:net:DatagramSocket.isConnected|]  := v1 @boolean;
#L0bd3de.   v1:= v5.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd3e2.   v3:= v5.[|java:net:DatagramSocket.address|]   @type object;
#L0bd3e6.   v4:= v5.[|java:net:DatagramSocket.port|] ;
#L0bd3ea.   call temp:=  [|java:net:DatagramSocketImpl.connect|](v1, v3, v4) @signature [|Ljava/net/DatagramSocketImpl;.connect:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd3f0.   (@monitorexit v2)
#L0bd3f2.   return @void ;
#L0bd3f4.   v1:= Exception  @type object;
#L0bd3f6.   (@monitorexit v2)
#L0bd3f8.   throw v1;
  catch  [|any|] @[L0bd3b4..L0bd3f8] goto L0bd3f4;

   }
    procedure [|void|] [|java:net:DatagramSocket.createSocket|] ([|java:net:DatagramSocket|] v2 @type (this), [|int|] v3, [|java:net:InetAddress|] v4 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.createSocket:(ILjava/net/InetAddress;)V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0bd418.   (@monitorenter v2)
#L0bd41a.   v1:= @@[|java:net:DatagramSocket.factory|]   @type object;
#L0bd41e.   if v1 == 0 then goto L0bd450;
#L0bd422.   v1:= @@[|java:net:DatagramSocket.factory|]   @type object;
#L0bd426.   call temp:=  [|java:net:DatagramSocketImplFactory.createDatagramSocketImpl|](v1) @signature [|Ljava/net/DatagramSocketImplFactory;.createDatagramSocketImpl:()Ljava/net/DatagramSocketImpl;|] @classDescriptor [|java:net:DatagramSocketImplFactory|] @type interface;
#L0bd42c.   v1:= temp  @type object;
#L0bd42e.   v2.[|java:net:DatagramSocket.impl|]  := v1 @type object;
#L0bd432.   v1:= v2.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd436.   call temp:=  [|java:net:DatagramSocketImpl.create|](v1) @signature [|Ljava/net/DatagramSocketImpl;.create:()V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd43c.   v1:= v2.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd440.   call temp:=  [|java:net:DatagramSocketImpl.bind|](v1, v3, v4) @signature [|Ljava/net/DatagramSocketImpl;.bind:(ILjava/net/InetAddress;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd446.   v1:= 1  @length 4;
#L0bd448.   v2.[|java:net:DatagramSocket.isBound|]  := v1 @boolean;
#L0bd44c.   (@monitorexit v2)
#L0bd44e.   return @void ;
#L0bd450.   v1:= new [|java:net:PlainDatagramSocketImpl|];
#L0bd454.   call temp:=  [|java:net:PlainDatagramSocketImpl.<init>|](v1) @signature [|Ljava/net/PlainDatagramSocketImpl;.<init>:()V|] @classDescriptor [|java:net:PlainDatagramSocketImpl|] @type direct;
#L0bd45a.   goto L0bd42e;
#L0bd45c.   v1:= Exception  @type object;
#L0bd45e.   (@monitorexit v2)
#L0bd460.   throw v1;
#L0bd462.   v0:= Exception  @type object;
#L0bd464.   call temp:=  [|java:net:DatagramSocket.close|](v2) @signature [|Ljava/net/DatagramSocket;.close:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd46a.   throw v0;
  catch  [|any|] @[L0bd41a..L0bd43c] goto L0bd45c;
  catch  [|java:net:SocketException|] @[L0bd43c..L0bd44c] goto L0bd462;
  catch  [|any|] @[L0bd43c..L0bd44c] goto L0bd45c;
  catch  [|any|] @[L0bd450..L0bd45a] goto L0bd45c;
  catch  [|any|] @[L0bd464..L0bd46a] goto L0bd45c;

   }
    procedure [|void|] [|java:net:DatagramSocket.disconnect|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.disconnect:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd4a4.   call temp:=  [|java:net:DatagramSocket.isClosed|](v1) @signature [|Ljava/net/DatagramSocket;.isClosed:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd4aa.   v0:= temp;
#L0bd4ac.   if v0 != 0 then goto L0bd4bc;
#L0bd4b0.   call temp:=  [|java:net:DatagramSocket.isConnected|](v1) @signature [|Ljava/net/DatagramSocket;.isConnected:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd4b6.   v0:= temp;
#L0bd4b8.   if v0 != 0 then goto L0bd4be;
#L0bd4bc.   return @void ;
#L0bd4be.   v0:= v1.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd4c2.   call temp:=  [|java:net:DatagramSocketImpl.disconnect|](v0) @signature [|Ljava/net/DatagramSocketImpl;.disconnect:()V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd4c8.   v0:= 0  @length 4;
#L0bd4ca.   v1.[|java:net:DatagramSocket.address|]  := v0 @type object;
#L0bd4ce.   v0:= -1  @length 4;
#L0bd4d0.   v1.[|java:net:DatagramSocket.port|]  := v0;
#L0bd4d4.   v0:= 0  @length 4;
#L0bd4d6.   v1.[|java:net:DatagramSocket.isConnected|]  := v0 @boolean;
#L0bd4da.   goto L0bd4bc;

   }
    procedure [|boolean|] [|java:net:DatagramSocket.getBroadcast|] ([|java:net:DatagramSocket|] v2 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getBroadcast:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0bd4ec.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v2) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd4f2.   v0:= v2.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd4f6.   v1:= 32  @length 16;
#L0bd4fa.   call temp:=  [|java:net:DatagramSocketImpl.getOption|](v0, v1) @signature [|Ljava/net/DatagramSocketImpl;.getOption:(I)Ljava/lang/Object;|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd500.   v0:= temp  @type object;
#L0bd502.   v0:= ([|java:lang:Boolean|])v0;
#L0bd506.   call temp:=  [|java:lang:Boolean.booleanValue|](v0) @signature [|Ljava/lang/Boolean;.booleanValue:()Z|] @classDescriptor [|java:lang:Boolean|] @type virtual;
#L0bd50c.   v0:= temp;
#L0bd50e.   return v0;

   }
    procedure [|java:nio:channels:DatagramChannel|] [|java:net:DatagramSocket.getChannel|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getChannel:()Ljava/nio/channels/DatagramChannel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd520.   v0:= 0  @length 4;
#L0bd522.   return v0  @type object;

   }
    procedure [|java:io:FileDescriptor|] [|java:net:DatagramSocket.getFileDescriptor$|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getFileDescriptor$:()Ljava/io/FileDescriptor;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0bd534.   v0:= v1.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd538.   v0:= v0.[|java:net:DatagramSocketImpl.fd|]   @type object;
#L0bd53c.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|java:net:DatagramSocket.getInetAddress|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getInetAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd550.   v0:= v1.[|java:net:DatagramSocket.address|]   @type object;
#L0bd554.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|java:net:DatagramSocket.getLocalAddress|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getLocalAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd568.   call temp:=  [|java:net:DatagramSocket.isClosed|](v1) @signature [|Ljava/net/DatagramSocket;.isClosed:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd56e.   v0:= temp;
#L0bd570.   if v0 == 0 then goto L0bd578;
#L0bd574.   v0:= 0  @length 4;
#L0bd576.   return v0  @type object;
#L0bd578.   call temp:=  [|java:net:DatagramSocket.isBound|](v1) @signature [|Ljava/net/DatagramSocket;.isBound:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd57e.   v0:= temp;
#L0bd580.   if v0 != 0 then goto L0bd58a;
#L0bd584.   v0:= @@[|java:net:Inet4Address.ANY|]   @type object;
#L0bd588.   goto L0bd576;
#L0bd58a.   v0:= v1.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd58e.   call temp:=  [|java:net:DatagramSocketImpl.getLocalAddress|](v0) @signature [|Ljava/net/DatagramSocketImpl;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd594.   v0:= temp  @type object;
#L0bd596.   goto L0bd576;

   }
    procedure [|int|] [|java:net:DatagramSocket.getLocalPort|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getLocalPort:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd5a8.   call temp:=  [|java:net:DatagramSocket.isClosed|](v1) @signature [|Ljava/net/DatagramSocket;.isClosed:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd5ae.   v0:= temp;
#L0bd5b0.   if v0 == 0 then goto L0bd5b8;
#L0bd5b4.   v0:= -1  @length 4;
#L0bd5b6.   return v0;
#L0bd5b8.   call temp:=  [|java:net:DatagramSocket.isBound|](v1) @signature [|Ljava/net/DatagramSocket;.isBound:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd5be.   v0:= temp;
#L0bd5c0.   if v0 != 0 then goto L0bd5c8;
#L0bd5c4.   v0:= 0  @length 4;
#L0bd5c6.   goto L0bd5b6;
#L0bd5c8.   v0:= v1.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd5cc.   call temp:=  [|java:net:DatagramSocketImpl.getLocalPort|](v0) @signature [|Ljava/net/DatagramSocketImpl;.getLocalPort:()I|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd5d2.   v0:= temp;
#L0bd5d4.   goto L0bd5b6;

   }
    procedure [|java:net:SocketAddress|] [|java:net:DatagramSocket.getLocalSocketAddress|] ([|java:net:DatagramSocket|] v3 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getLocalSocketAddress:()Ljava/net/SocketAddress;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd5e8.   call temp:=  [|java:net:DatagramSocket.isBound|](v3) @signature [|Ljava/net/DatagramSocket;.isBound:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd5ee.   v0:= temp;
#L0bd5f0.   if v0 != 0 then goto L0bd5f8;
#L0bd5f4.   v0:= 0  @length 4;
#L0bd5f6.   return v0  @type object;
#L0bd5f8.   v0:= new [|java:net:InetSocketAddress|];
#L0bd5fc.   call temp:=  [|java:net:DatagramSocket.getLocalAddress|](v3) @signature [|Ljava/net/DatagramSocket;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd602.   v1:= temp  @type object;
#L0bd604.   call temp:=  [|java:net:DatagramSocket.getLocalPort|](v3) @signature [|Ljava/net/DatagramSocket;.getLocalPort:()I|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd60a.   v2:= temp;
#L0bd60c.   call temp:=  [|java:net:InetSocketAddress.<init>|](v0, v1, v2) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L0bd612.   goto L0bd5f6;

   }
    procedure [|int|] [|java:net:DatagramSocket.getPort|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getPort:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd624.   v0:= v1.[|java:net:DatagramSocket.port|] ;
#L0bd628.   return v0;

   }
    procedure [|int|] [|java:net:DatagramSocket.getReceiveBufferSize|] ([|java:net:DatagramSocket|] v2 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getReceiveBufferSize:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0bd63c.   (@monitorenter v2)
#L0bd63e.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v2) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd644.   v0:= v2.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd648.   v1:= 4098  @length 16;
#L0bd64c.   call temp:=  [|java:net:DatagramSocketImpl.getOption|](v0, v1) @signature [|Ljava/net/DatagramSocketImpl;.getOption:(I)Ljava/lang/Object;|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd652.   v0:= temp  @type object;
#L0bd654.   v0:= ([|java:lang:Integer|])v0;
#L0bd658.   call temp:=  [|java:lang:Integer.intValue|](v0) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L0bd65e.   v0:= temp;
#L0bd660.   (@monitorexit v2)
#L0bd662.   return v0;
#L0bd664.   v0:= Exception  @type object;
#L0bd666.   (@monitorexit v2)
#L0bd668.   throw v0;
  catch  [|any|] @[L0bd63e..L0bd65e] goto L0bd664;

   }
    procedure [|java:net:SocketAddress|] [|java:net:DatagramSocket.getRemoteSocketAddress|] ([|java:net:DatagramSocket|] v3 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getRemoteSocketAddress:()Ljava/net/SocketAddress;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd688.   call temp:=  [|java:net:DatagramSocket.isConnected|](v3) @signature [|Ljava/net/DatagramSocket;.isConnected:()Z|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd68e.   v0:= temp;
#L0bd690.   if v0 != 0 then goto L0bd698;
#L0bd694.   v0:= 0  @length 4;
#L0bd696.   return v0  @type object;
#L0bd698.   v0:= new [|java:net:InetSocketAddress|];
#L0bd69c.   call temp:=  [|java:net:DatagramSocket.getInetAddress|](v3) @signature [|Ljava/net/DatagramSocket;.getInetAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd6a2.   v1:= temp  @type object;
#L0bd6a4.   call temp:=  [|java:net:DatagramSocket.getPort|](v3) @signature [|Ljava/net/DatagramSocket;.getPort:()I|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd6aa.   v2:= temp;
#L0bd6ac.   call temp:=  [|java:net:InetSocketAddress.<init>|](v0, v1, v2) @signature [|Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:InetSocketAddress|] @type direct;
#L0bd6b2.   goto L0bd696;

   }
    procedure [|boolean|] [|java:net:DatagramSocket.getReuseAddress|] ([|java:net:DatagramSocket|] v2 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getReuseAddress:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0bd6c4.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v2) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd6ca.   v0:= v2.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd6ce.   v1:= 4  @length 4;
#L0bd6d0.   call temp:=  [|java:net:DatagramSocketImpl.getOption|](v0, v1) @signature [|Ljava/net/DatagramSocketImpl;.getOption:(I)Ljava/lang/Object;|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd6d6.   v0:= temp  @type object;
#L0bd6d8.   v0:= ([|java:lang:Boolean|])v0;
#L0bd6dc.   call temp:=  [|java:lang:Boolean.booleanValue|](v0) @signature [|Ljava/lang/Boolean;.booleanValue:()Z|] @classDescriptor [|java:lang:Boolean|] @type virtual;
#L0bd6e2.   v0:= temp;
#L0bd6e4.   return v0;

   }
    procedure [|int|] [|java:net:DatagramSocket.getSendBufferSize|] ([|java:net:DatagramSocket|] v2 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getSendBufferSize:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0bd6f8.   (@monitorenter v2)
#L0bd6fa.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v2) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd700.   v0:= v2.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd704.   v1:= 4097  @length 16;
#L0bd708.   call temp:=  [|java:net:DatagramSocketImpl.getOption|](v0, v1) @signature [|Ljava/net/DatagramSocketImpl;.getOption:(I)Ljava/lang/Object;|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd70e.   v0:= temp  @type object;
#L0bd710.   v0:= ([|java:lang:Integer|])v0;
#L0bd714.   call temp:=  [|java:lang:Integer.intValue|](v0) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L0bd71a.   v0:= temp;
#L0bd71c.   (@monitorexit v2)
#L0bd71e.   return v0;
#L0bd720.   v0:= Exception  @type object;
#L0bd722.   (@monitorexit v2)
#L0bd724.   throw v0;
  catch  [|any|] @[L0bd6fa..L0bd71a] goto L0bd720;

   }
    procedure [|int|] [|java:net:DatagramSocket.getSoTimeout|] ([|java:net:DatagramSocket|] v2 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getSoTimeout:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0bd744.   (@monitorenter v2)
#L0bd746.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v2) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd74c.   v0:= v2.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd750.   v1:= 4102  @length 16;
#L0bd754.   call temp:=  [|java:net:DatagramSocketImpl.getOption|](v0, v1) @signature [|Ljava/net/DatagramSocketImpl;.getOption:(I)Ljava/lang/Object;|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd75a.   v0:= temp  @type object;
#L0bd75c.   v0:= ([|java:lang:Integer|])v0;
#L0bd760.   call temp:=  [|java:lang:Integer.intValue|](v0) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L0bd766.   v0:= temp;
#L0bd768.   (@monitorexit v2)
#L0bd76a.   return v0;
#L0bd76c.   v0:= Exception  @type object;
#L0bd76e.   (@monitorexit v2)
#L0bd770.   throw v0;
  catch  [|any|] @[L0bd746..L0bd766] goto L0bd76c;

   }
    procedure [|int|] [|java:net:DatagramSocket.getTrafficClass|] ([|java:net:DatagramSocket|] v2 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.getTrafficClass:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0bd790.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v2) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd796.   v0:= v2.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd79a.   v1:= 3  @length 4;
#L0bd79c.   call temp:=  [|java:net:DatagramSocketImpl.getOption|](v0, v1) @signature [|Ljava/net/DatagramSocketImpl;.getOption:(I)Ljava/lang/Object;|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd7a2.   v0:= temp  @type object;
#L0bd7a4.   v0:= ([|java:lang:Integer|])v0;
#L0bd7a8.   call temp:=  [|java:lang:Integer.intValue|](v0) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L0bd7ae.   v0:= temp;
#L0bd7b0.   return v0;

   }
    procedure [|boolean|] [|java:net:DatagramSocket.isBound|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.isBound:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd7c4.   v0:= v1.[|java:net:DatagramSocket.isBound|]   @boolean;
#L0bd7c8.   return v0;

   }
    procedure [|boolean|] [|java:net:DatagramSocket.isClosed|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.isClosed:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd7dc.   v0:= v1.[|java:net:DatagramSocket.isClosed|]   @boolean;
#L0bd7e0.   return v0;

   }
    procedure [|boolean|] [|java:net:DatagramSocket.isConnected|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.isConnected:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0bd7f4.   v0:= v1.[|java:net:DatagramSocket.isConnected|]   @boolean;
#L0bd7f8.   return v0;

   }
    procedure [|boolean|] [|java:net:DatagramSocket.isMulticastSocket|] ([|java:net:DatagramSocket|] v1 @type (this)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.isMulticastSocket:()Z|] @Access  {
      local temp ;
        v0;
      
#L0bd80c.   v0:= 0  @length 4;
#L0bd80e.   return v0;

   }
    procedure [|void|] [|java:net:DatagramSocket.receive|] ([|java:net:DatagramSocket|] v3 @type (this), [|java:net:DatagramPacket|] v4 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.receive:(Ljava/net/DatagramPacket;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd820.   (@monitorenter v3)
#L0bd822.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v3) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd828.   call temp:=  [|java:net:DatagramSocket.ensureBound|](v3) @signature [|Ljava/net/DatagramSocket;.ensureBound:()V|] @classDescriptor [|java:net:DatagramSocket|] @type direct;
#L0bd82e.   if v4 != 0 then goto L0bd848;
#L0bd832.   v0:= new [|java:lang:NullPointerException|];
#L0bd836.   v1:= "pack == null" @type (object, string);
#L0bd83a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0bd840.   throw v0;
#L0bd842.   v0:= Exception  @type object;
#L0bd844.   (@monitorexit v3)
#L0bd846.   throw v0;
#L0bd848.   v0:= v3.[|java:net:DatagramSocket.pendingConnectException|]   @type object;
#L0bd84c.   if v0 == 0 then goto L0bd864;
#L0bd850.   v0:= new [|java:net:SocketException|];
#L0bd854.   v1:= "Pending connect failure" @type (object, string);
#L0bd858.   v2:= v3.[|java:net:DatagramSocket.pendingConnectException|]   @type object;
#L0bd85c.   call temp:=  [|java:net:SocketException.<init>|](v0, v1, v2) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0bd862.   throw v0;
#L0bd864.   call temp:=  [|java:net:DatagramPacket.resetLengthForReceive|](v4) @signature [|Ljava/net/DatagramPacket;.resetLengthForReceive:()V|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bd86a.   v0:= v3.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd86e.   call temp:=  [|java:net:DatagramSocketImpl.receive|](v0, v4) @signature [|Ljava/net/DatagramSocketImpl;.receive:(Ljava/net/DatagramPacket;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd874.   (@monitorexit v3)
#L0bd876.   return @void ;
  catch  [|any|] @[L0bd822..L0bd842] goto L0bd842;
  catch  [|any|] @[L0bd848..L0bd874] goto L0bd842;

   }
    procedure [|void|] [|java:net:DatagramSocket.send|] ([|java:net:DatagramSocket|] v3 @type (this), [|java:net:DatagramPacket|] v4 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.send:(Ljava/net/DatagramPacket;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd89c.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v3) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd8a2.   call temp:=  [|java:net:DatagramSocket.ensureBound|](v3) @signature [|Ljava/net/DatagramSocket;.ensureBound:()V|] @classDescriptor [|java:net:DatagramSocket|] @type direct;
#L0bd8a8.   call temp:=  [|java:net:DatagramPacket.getAddress|](v4) @signature [|Ljava/net/DatagramPacket;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bd8ae.   v0:= temp  @type object;
#L0bd8b0.   v1:= v3.[|java:net:DatagramSocket.address|]   @type object;
#L0bd8b4.   if v1 == 0 then goto L0bd90c;
#L0bd8b8.   if v0 == 0 then goto L0bd8ec;
#L0bd8bc.   v1:= v3.[|java:net:DatagramSocket.address|]   @type object;
#L0bd8c0.   call temp:=  [|java:net:InetAddress.equals|](v1, v0) @signature [|Ljava/net/InetAddress;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:net:InetAddress|] @type virtual;
#L0bd8c6.   v1:= temp;
#L0bd8c8.   if v1 == 0 then goto L0bd8dc;
#L0bd8cc.   v1:= v3.[|java:net:DatagramSocket.port|] ;
#L0bd8d0.   call temp:=  [|java:net:DatagramPacket.getPort|](v4) @signature [|Ljava/net/DatagramPacket;.getPort:()I|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bd8d6.   v2:= temp;
#L0bd8d8.   if v1 == v2 then goto L0bd900;
#L0bd8dc.   v1:= new [|java:lang:IllegalArgumentException|];
#L0bd8e0.   v2:= "Packet address mismatch with connected address" @type (object, string);
#L0bd8e4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bd8ea.   throw v1;
#L0bd8ec.   v1:= v3.[|java:net:DatagramSocket.address|]   @type object;
#L0bd8f0.   call temp:=  [|java:net:DatagramPacket.setAddress|](v4, v1) @signature [|Ljava/net/DatagramPacket;.setAddress:(Ljava/net/InetAddress;)V|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bd8f6.   v1:= v3.[|java:net:DatagramSocket.port|] ;
#L0bd8fa.   call temp:=  [|java:net:DatagramPacket.setPort|](v4, v1) @signature [|Ljava/net/DatagramPacket;.setPort:(I)V|] @classDescriptor [|java:net:DatagramPacket|] @type virtual;
#L0bd900.   v1:= v3.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd904.   call temp:=  [|java:net:DatagramSocketImpl.send|](v1, v4) @signature [|Ljava/net/DatagramSocketImpl;.send:(Ljava/net/DatagramPacket;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd90a.   return @void ;
#L0bd90c.   if v0 != 0 then goto L0bd900;
#L0bd910.   v1:= new [|java:lang:NullPointerException|];
#L0bd914.   v2:= "Destination address is null" @type (object, string);
#L0bd918.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0bd91e.   throw v1;

   }
    procedure [|void|] [|java:net:DatagramSocket.setBroadcast|] ([|java:net:DatagramSocket|] v3 @type (this), [|boolean|] v4) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.setBroadcast:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd930.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v3) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd936.   v0:= v3.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd93a.   v1:= 32  @length 16;
#L0bd93e.   call temp:=  [|java:lang:Boolean.valueOf|](v4) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L0bd944.   v2:= temp  @type object;
#L0bd946.   call temp:=  [|java:net:DatagramSocketImpl.setOption|](v0, v1, v2) @signature [|Ljava/net/DatagramSocketImpl;.setOption:(ILjava/lang/Object;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd94c.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.setNetworkInterface|] ([|java:net:DatagramSocket|] v6 @type (this), [|java:net:NetworkInterface|] v7 @type (object)) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.setNetworkInterface:(Ljava/net/NetworkInterface;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0bd960.   if v7 != 0 then goto L0bd974;
#L0bd964.   v1:= new [|java:lang:NullPointerException|];
#L0bd968.   v2:= "netInterface == null" @type (object, string);
#L0bd96c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0bd972.   throw v1;
#L0bd974.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L0bd978.   v2:= v6.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd97c.   v2:= v2.[|java:net:DatagramSocketImpl.fd|]   @type object;
#L0bd980.   v3:= @@[|libcore:io:OsConstants.SOL_SOCKET|] ;
#L0bd984.   v4:= @@[|libcore:io:OsConstants.SO_BINDTODEVICE|] ;
#L0bd988.   call temp:=  [|java:net:NetworkInterface.getName|](v7) @signature [|Ljava/net/NetworkInterface;.getName:()Ljava/lang/String;|] @classDescriptor [|java:net:NetworkInterface|] @type virtual;
#L0bd98e.   v5:= temp  @type object;
#L0bd990.   call temp:=  [|libcore:io:Os.setsockoptIfreq|](v1, v2, v3, v4, v5) @signature [|Llibcore/io/Os;.setsockoptIfreq:(Ljava/io/FileDescriptor;IILjava/lang/String;)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0bd996.   return @void ;
#L0bd998.   v0:= Exception  @type object;
#L0bd99a.   call temp:=  [|libcore:io:ErrnoException.rethrowAsSocketException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsSocketException:()Ljava/net/SocketException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L0bd9a0.   v1:= temp  @type object;
#L0bd9a2.   throw v1;
  catch  [|libcore:io:ErrnoException|] @[L0bd974..L0bd996] goto L0bd998;

   }
    procedure [|void|] [|java:net:DatagramSocket.setReceiveBufferSize|] ([|java:net:DatagramSocket|] v3 @type (this), [|int|] v4) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.setReceiveBufferSize:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bd9c4.   (@monitorenter v3)
#L0bd9c6.   v0:= 1  @length 4;
#L0bd9c8.   if v4 >= v0 then goto L0bd9e2;
#L0bd9cc.   v0:= new [|java:lang:IllegalArgumentException|];
#L0bd9d0.   v1:= "size < 1" @type (object, string);
#L0bd9d4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bd9da.   throw v0;
#L0bd9dc.   v0:= Exception  @type object;
#L0bd9de.   (@monitorexit v3)
#L0bd9e0.   throw v0;
#L0bd9e2.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v3) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bd9e8.   v0:= v3.[|java:net:DatagramSocket.impl|]   @type object;
#L0bd9ec.   v1:= 4098  @length 16;
#L0bd9f0.   call temp:=  [|java:lang:Integer.valueOf|](v4) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0bd9f6.   v2:= temp  @type object;
#L0bd9f8.   call temp:=  [|java:net:DatagramSocketImpl.setOption|](v0, v1, v2) @signature [|Ljava/net/DatagramSocketImpl;.setOption:(ILjava/lang/Object;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bd9fe.   (@monitorexit v3)
#L0bda00.   return @void ;
  catch  [|any|] @[L0bd9cc..L0bd9dc] goto L0bd9dc;
  catch  [|any|] @[L0bd9e2..L0bd9fe] goto L0bd9dc;

   }
    procedure [|void|] [|java:net:DatagramSocket.setReuseAddress|] ([|java:net:DatagramSocket|] v3 @type (this), [|boolean|] v4) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.setReuseAddress:(Z)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bda28.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v3) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bda2e.   v0:= v3.[|java:net:DatagramSocket.impl|]   @type object;
#L0bda32.   v1:= 4  @length 4;
#L0bda34.   call temp:=  [|java:lang:Boolean.valueOf|](v4) @signature [|Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;|] @classDescriptor [|java:lang:Boolean|] @type static;
#L0bda3a.   v2:= temp  @type object;
#L0bda3c.   call temp:=  [|java:net:DatagramSocketImpl.setOption|](v0, v1, v2) @signature [|Ljava/net/DatagramSocketImpl;.setOption:(ILjava/lang/Object;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bda42.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocket.setSendBufferSize|] ([|java:net:DatagramSocket|] v3 @type (this), [|int|] v4) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.setSendBufferSize:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bda54.   (@monitorenter v3)
#L0bda56.   v0:= 1  @length 4;
#L0bda58.   if v4 >= v0 then goto L0bda72;
#L0bda5c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0bda60.   v1:= "size < 1" @type (object, string);
#L0bda64.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bda6a.   throw v0;
#L0bda6c.   v0:= Exception  @type object;
#L0bda6e.   (@monitorexit v3)
#L0bda70.   throw v0;
#L0bda72.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v3) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bda78.   v0:= v3.[|java:net:DatagramSocket.impl|]   @type object;
#L0bda7c.   v1:= 4097  @length 16;
#L0bda80.   call temp:=  [|java:lang:Integer.valueOf|](v4) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0bda86.   v2:= temp  @type object;
#L0bda88.   call temp:=  [|java:net:DatagramSocketImpl.setOption|](v0, v1, v2) @signature [|Ljava/net/DatagramSocketImpl;.setOption:(ILjava/lang/Object;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bda8e.   (@monitorexit v3)
#L0bda90.   return @void ;
  catch  [|any|] @[L0bda5c..L0bda6c] goto L0bda6c;
  catch  [|any|] @[L0bda72..L0bda8e] goto L0bda6c;

   }
    procedure [|void|] [|java:net:DatagramSocket.setSoTimeout|] ([|java:net:DatagramSocket|] v3 @type (this), [|int|] v4) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.setSoTimeout:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bdab8.   (@monitorenter v3)
#L0bdaba.   if v4 >= 0 then goto L0bdad4;
#L0bdabe.   v0:= new [|java:lang:IllegalArgumentException|];
#L0bdac2.   v1:= "timeout < 0" @type (object, string);
#L0bdac6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bdacc.   throw v0;
#L0bdace.   v0:= Exception  @type object;
#L0bdad0.   (@monitorexit v3)
#L0bdad2.   throw v0;
#L0bdad4.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v3) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bdada.   v0:= v3.[|java:net:DatagramSocket.impl|]   @type object;
#L0bdade.   v1:= 4102  @length 16;
#L0bdae2.   call temp:=  [|java:lang:Integer.valueOf|](v4) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0bdae8.   v2:= temp  @type object;
#L0bdaea.   call temp:=  [|java:net:DatagramSocketImpl.setOption|](v0, v1, v2) @signature [|Ljava/net/DatagramSocketImpl;.setOption:(ILjava/lang/Object;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bdaf0.   (@monitorexit v3)
#L0bdaf2.   return @void ;
  catch  [|any|] @[L0bdabe..L0bdace] goto L0bdace;
  catch  [|any|] @[L0bdad4..L0bdaf0] goto L0bdace;

   }
    procedure [|void|] [|java:net:DatagramSocket.setTrafficClass|] ([|java:net:DatagramSocket|] v3 @type (this), [|int|] v4) @owner [|java:net:DatagramSocket|] @signature [|Ljava/net/DatagramSocket;.setTrafficClass:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0bdb18.   call temp:=  [|java:net:DatagramSocket.checkOpen|](v3) @signature [|Ljava/net/DatagramSocket;.checkOpen:()V|] @classDescriptor [|java:net:DatagramSocket|] @type virtual;
#L0bdb1e.   if v4 < 0 then goto L0bdb2a;
#L0bdb22.   v0:= 255  @length 16;
#L0bdb26.   if v4 <= v0 then goto L0bdb36;
#L0bdb2a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0bdb2e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0bdb34.   throw v0;
#L0bdb36.   v0:= v3.[|java:net:DatagramSocket.impl|]   @type object;
#L0bdb3a.   v1:= 3  @length 4;
#L0bdb3c.   call temp:=  [|java:lang:Integer.valueOf|](v4) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0bdb42.   v2:= temp  @type object;
#L0bdb44.   call temp:=  [|java:net:DatagramSocketImpl.setOption|](v0, v1, v2) @signature [|Ljava/net/DatagramSocketImpl;.setOption:(ILjava/lang/Object;)V|] @classDescriptor [|java:net:DatagramSocketImpl|] @type virtual;
#L0bdb4a.   return @void ;

   }
record [|java:net:SocketOptions|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
      global [|int|] @@[|java:net:SocketOptions.IP_MULTICAST_IF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.IP_MULTICAST_IF2|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.IP_MULTICAST_LOOP|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.IP_TOS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.SO_BINDADDR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.SO_BROADCAST|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.SO_KEEPALIVE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.SO_LINGER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.SO_OOBINLINE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.SO_RCVBUF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.SO_REUSEADDR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.SO_SNDBUF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.SO_TIMEOUT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:net:SocketOptions.TCP_NODELAY|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|java:lang:Object|] [|java:net:SocketOptions.getOption|] ([|int|] v0) @owner [|java:net:SocketOptions|] @signature [|Ljava/net/SocketOptions;.getOption:(I)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:SocketOptions.setOption|] ([|int|] v0, [|java:lang:Object|] v1 @type (object)) @owner [|java:net:SocketOptions|] @signature [|Ljava/net/SocketOptions;.setOption:(ILjava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:net:DatagramSocketImpl|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:net:SocketOptions|] {
      [|java:io:FileDescriptor|] [|java:net:DatagramSocketImpl.fd|]    @AccessFlag PROTECTED;
      [|int|] [|java:net:DatagramSocketImpl.localPort|]    @AccessFlag PROTECTED;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.<init>|] ([|java:net:DatagramSocketImpl|] v1 @type (this)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0bdb5c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0bdb62.   v0:= -1  @length 4;
#L0bdb64.   v1.[|java:net:DatagramSocketImpl.localPort|]  := v0;
#L0bdb68.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocketImpl.bind|] ([|int|] v0, [|java:net:InetAddress|] v1 @type (object)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.bind:(ILjava/net/InetAddress;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.close|] () @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.close:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.connect|] ([|java:net:DatagramSocketImpl|] v0 @type (this), [|java:net:InetAddress|] v1 @type (object), [|int|] v2) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.connect:(Ljava/net/InetAddress;I)V|] @Access PROTECTED {
      local temp ;
      
#L0bdb7c.   return @void ;

   }
    procedure [|void|] [|java:net:DatagramSocketImpl.create|] () @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.create:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.disconnect|] ([|java:net:DatagramSocketImpl|] v0 @type (this)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.disconnect:()V|] @Access PROTECTED {
      local temp ;
      
#L0bdb90.   return @void ;

   }
    procedure [|java:io:FileDescriptor|] [|java:net:DatagramSocketImpl.getFileDescriptor|] ([|java:net:DatagramSocketImpl|] v1 @type (this)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.getFileDescriptor:()Ljava/io/FileDescriptor;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0bdba4.   v0:= v1.[|java:net:DatagramSocketImpl.fd|]   @type object;
#L0bdba8.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|java:net:DatagramSocketImpl.getLocalAddress|] ([|java:net:DatagramSocketImpl|] v1 @type (this)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.getLocalAddress:()Ljava/net/InetAddress;|] @Access  {
      local temp ;
        v0;
      
#L0bdbbc.   v0:= v1.[|java:net:DatagramSocketImpl.fd|]   @type object;
#L0bdbc0.   call temp:=  [|libcore:io:IoBridge.getSocketLocalAddress|](v0) @signature [|Llibcore/io/IoBridge;.getSocketLocalAddress:(Ljava/io/FileDescriptor;)Ljava/net/InetAddress;|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L0bdbc6.   v0:= temp  @type object;
#L0bdbc8.   return v0  @type object;

   }
    procedure [|int|] [|java:net:DatagramSocketImpl.getLocalPort|] ([|java:net:DatagramSocketImpl|] v1 @type (this)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.getLocalPort:()I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0bdbdc.   v0:= v1.[|java:net:DatagramSocketImpl.localPort|] ;
#L0bdbe0.   return v0;

   }
    procedure [|byte|] [|java:net:DatagramSocketImpl.getTTL|] () @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.getTTL:()B|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:net:DatagramSocketImpl.getTimeToLive|] () @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.getTimeToLive:()I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.join|] ([|java:net:InetAddress|] v0 @type (object)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.join:(Ljava/net/InetAddress;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.joinGroup|] ([|java:net:SocketAddress|] v0 @type (object), [|java:net:NetworkInterface|] v1 @type (object)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.joinGroup:(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.leave|] ([|java:net:InetAddress|] v0 @type (object)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.leave:(Ljava/net/InetAddress;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.leaveGroup|] ([|java:net:SocketAddress|] v0 @type (object), [|java:net:NetworkInterface|] v1 @type (object)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.leaveGroup:(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:net:DatagramSocketImpl.peek|] ([|java:net:InetAddress|] v0 @type (object)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.peek:(Ljava/net/InetAddress;)I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:net:DatagramSocketImpl.peekData|] ([|java:net:DatagramPacket|] v0 @type (object)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.peekData:(Ljava/net/DatagramPacket;)I|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.receive|] ([|java:net:DatagramPacket|] v0 @type (object)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.receive:(Ljava/net/DatagramPacket;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.send|] ([|java:net:DatagramPacket|] v0 @type (object)) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.send:(Ljava/net/DatagramPacket;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.setTTL|] ([|byte|] v0) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.setTTL:(B)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:net:DatagramSocketImpl.setTimeToLive|] ([|int|] v0) @owner [|java:net:DatagramSocketImpl|] @signature [|Ljava/net/DatagramSocketImpl;.setTimeToLive:(I)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
record [|java:net:DatagramSocketImplFactory|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:net:DatagramSocketImpl|] [|java:net:DatagramSocketImplFactory.createDatagramSocketImpl|] () @owner [|java:net:DatagramSocketImplFactory|] @signature [|Ljava/net/DatagramSocketImplFactory;.createDatagramSocketImpl:()Ljava/net/DatagramSocketImpl;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:net:FileNameMap|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:String|] [|java:net:FileNameMap.getContentTypeFor|] ([|java:lang:String|] v0 @type (object)) @owner [|java:net:FileNameMap|] @signature [|Ljava/net/FileNameMap;.getContentTypeFor:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
