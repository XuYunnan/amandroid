record [|java:nio:HeapByteBuffer|]  @type class @AccessFlag ABSTRACT  extends [|java:nio:BaseByteBuffer|] {
      [|byte|][] [|java:nio:HeapByteBuffer.backingArray|]    @AccessFlag FINAL;
      [|int|] [|java:nio:HeapByteBuffer.offset|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:nio:HeapByteBuffer.<init>|] ([|java:nio:HeapByteBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d1308.   v0:= new [|byte|][v3];
#L0d130c.   v1:= 0  @length 4;
#L0d130e.   call temp:=  [|java:nio:HeapByteBuffer.<init>|](v2, v0, v3, v1) @signature [|Ljava/nio/HeapByteBuffer;.<init>:([BII)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type direct;
#L0d1314.   return @void ;

   }
    procedure [|void|] [|java:nio:HeapByteBuffer.<init>|] ([|java:nio:HeapByteBuffer|] v2 @type (this), [|byte|][] v3) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.<init>:([B)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d1328.   v0:= v3.length;
#L0d132a.   v1:= 0  @length 4;
#L0d132c.   call temp:=  [|java:nio:HeapByteBuffer.<init>|](v2, v3, v0, v1) @signature [|Ljava/nio/HeapByteBuffer;.<init>:([BII)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type direct;
#L0d1332.   return @void ;

   }
    procedure [|void|] [|java:nio:HeapByteBuffer.<init>|] ([|java:nio:HeapByteBuffer|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.<init>:([BII)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d1344.   v0:= 0  @length 4;
#L0d1346.   call temp:=  [|java:nio:BaseByteBuffer.<init>|](v3, v5, v0) @signature [|Ljava/nio/BaseByteBuffer;.<init>:(ILjava/nio/MemoryBlock;)V|] @classDescriptor [|java:nio:BaseByteBuffer|] @type direct;
#L0d134c.   v3.[|java:nio:HeapByteBuffer.backingArray|]  := v4 @type object;
#L0d1350.   v3.[|java:nio:HeapByteBuffer.offset|]  := v6;
#L0d1354.   v0:= v6 + v5  @type int;
#L0d1358.   v1:= v4.length;
#L0d135a.   if v0 <= v1 then goto L0d13ba;
#L0d135e.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L0d1362.   v1:= new [|java:lang:StringBuilder|];
#L0d1366.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0d136c.   v2:= "backingArray.length=" @type (object, string);
#L0d1370.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d1376.   v1:= temp  @type object;
#L0d1378.   v2:= v4.length;
#L0d137a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d1380.   v1:= temp  @type object;
#L0d1382.   v2:= ", capacity=" @type (object, string);
#L0d1386.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d138c.   v1:= temp  @type object;
#L0d138e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d1394.   v1:= temp  @type object;
#L0d1396.   v2:= ", offset=" @type (object, string);
#L0d139a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d13a0.   v1:= temp  @type object;
#L0d13a2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d13a8.   v1:= temp  @type object;
#L0d13aa.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d13b0.   v1:= temp  @type object;
#L0d13b2.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0d13b8.   throw v0;
#L0d13ba.   return @void ;

   }
    procedure [|byte|] [|java:nio:HeapByteBuffer.get|] ([|java:nio:HeapByteBuffer|] v4 @type (this)) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.get:()B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d13cc.   v0:= v4.[|java:nio:HeapByteBuffer.position|] ;
#L0d13d0.   v1:= v4.[|java:nio:HeapByteBuffer.limit|] ;
#L0d13d4.   if v0 != v1 then goto L0d13e4;
#L0d13d8.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d13dc.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d13e2.   throw v0;
#L0d13e4.   v0:= v4.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d13e8.   v1:= v4.[|java:nio:HeapByteBuffer.offset|] ;
#L0d13ec.   v2:= v4.[|java:nio:HeapByteBuffer.position|] ;
#L0d13f0.   v3:= v2 + 1;
#L0d13f4.   v4.[|java:nio:HeapByteBuffer.position|]  := v3;
#L0d13f8.   v1:= v1 + v2  @type int;
#L0d13fa.   v0:= v0[v1]  @byte;
#L0d13fe.   return v0;

   }
    procedure [|byte|] [|java:nio:HeapByteBuffer.get|] ([|java:nio:HeapByteBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.get:(I)B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d1410.   call temp:=  [|java:nio:HeapByteBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/HeapByteBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d1416.   v0:= v2.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d141a.   v1:= v2.[|java:nio:HeapByteBuffer.offset|] ;
#L0d141e.   v1:= v1 + v3  @type int;
#L0d1420.   v0:= v0[v1]  @byte;
#L0d1424.   return v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:HeapByteBuffer.get|] ([|java:nio:HeapByteBuffer|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d1438.   v0:= 1  @length 4;
#L0d143a.   v1:= v4.length;
#L0d143c.   call temp:=  [|java:nio:HeapByteBuffer.checkGetBounds|](v3, v0, v1, v5, v6) @signature [|Ljava/nio/HeapByteBuffer;.checkGetBounds:(IIII)I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d1442.   v0:= v3.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d1446.   v1:= v3.[|java:nio:HeapByteBuffer.offset|] ;
#L0d144a.   v2:= v3.[|java:nio:HeapByteBuffer.position|] ;
#L0d144e.   v1:= v1 + v2  @type int;
#L0d1450.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v4, v5, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d1456.   v0:= v3.[|java:nio:HeapByteBuffer.position|] ;
#L0d145a.   v0:= v0 + v6  @type int;
#L0d145c.   v3.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d1460.   return v3  @type object;

   }
    procedure [|void|] [|java:nio:HeapByteBuffer.get|] ([|java:nio:HeapByteBuffer|] v7 @type (this), [|char|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.get:([CII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d1474.   v5:= 2  @length 4;
#L0d1476.   v0:= v8.length;
#L0d1478.   call temp:=  [|java:nio:HeapByteBuffer.checkGetBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/HeapByteBuffer;.checkGetBounds:(IIII)I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d147e.   v2:= temp;
#L0d1480.   v3:= v7.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d1484.   v0:= v7.[|java:nio:HeapByteBuffer.offset|] ;
#L0d1488.   v1:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d148c.   v4:= v0 + v1  @type int;
#L0d1490.   v0:= v7.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d1494.   v6:= v0.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d1498.   v0:= v8  @type object;
#L0d149a.   v1:= v9;
#L0d149c.   call temp:=  [|libcore:io:Memory.unsafeBulkGet|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkGet:(Ljava/lang/Object;II[BIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d14a2.   v0:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d14a6.   v0:= v0 + v2  @type int;
#L0d14a8.   v7.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d14ac.   return @void ;

   }
    procedure [|void|] [|java:nio:HeapByteBuffer.get|] ([|java:nio:HeapByteBuffer|] v7 @type (this), [|double|][] v8, [|int|] v10, [|int|] v11) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.get:([DII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d14c0.   v5:= 8  @length 16;
#L0d14c4.   v0:= v8.length;
#L0d14c6.   call temp:=  [|java:nio:HeapByteBuffer.checkGetBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/HeapByteBuffer;.checkGetBounds:(IIII)I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d14cc.   v2:= temp;
#L0d14ce.   v3:= v7.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d14d2.   v0:= v7.[|java:nio:HeapByteBuffer.offset|] ;
#L0d14d6.   v1:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d14da.   v4:= v0 + v1  @type int;
#L0d14de.   v0:= v7.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d14e2.   v6:= v0.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d14e6.   v0:= v8  @type object;
#L0d14e8.   v1:= v9;
#L0d14ea.   call temp:=  [|libcore:io:Memory.unsafeBulkGet|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkGet:(Ljava/lang/Object;II[BIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d14f0.   v0:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d14f4.   v0:= v0 + v2  @type int;
#L0d14f6.   v7.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d14fa.   return @void ;

   }
    procedure [|void|] [|java:nio:HeapByteBuffer.get|] ([|java:nio:HeapByteBuffer|] v7 @type (this), [|float|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.get:([FII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d150c.   v5:= 4  @length 4;
#L0d150e.   v0:= v8.length;
#L0d1510.   call temp:=  [|java:nio:HeapByteBuffer.checkGetBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/HeapByteBuffer;.checkGetBounds:(IIII)I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d1516.   v2:= temp;
#L0d1518.   v3:= v7.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d151c.   v0:= v7.[|java:nio:HeapByteBuffer.offset|] ;
#L0d1520.   v1:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d1524.   v4:= v0 + v1  @type int;
#L0d1528.   v0:= v7.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d152c.   v6:= v0.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d1530.   v0:= v8  @type object;
#L0d1532.   v1:= v9;
#L0d1534.   call temp:=  [|libcore:io:Memory.unsafeBulkGet|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkGet:(Ljava/lang/Object;II[BIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d153a.   v0:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d153e.   v0:= v0 + v2  @type int;
#L0d1540.   v7.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d1544.   return @void ;

   }
    procedure [|void|] [|java:nio:HeapByteBuffer.get|] ([|java:nio:HeapByteBuffer|] v7 @type (this), [|int|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.get:([III)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d1558.   v5:= 4  @length 4;
#L0d155a.   v0:= v8.length;
#L0d155c.   call temp:=  [|java:nio:HeapByteBuffer.checkGetBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/HeapByteBuffer;.checkGetBounds:(IIII)I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d1562.   v2:= temp;
#L0d1564.   v3:= v7.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d1568.   v0:= v7.[|java:nio:HeapByteBuffer.offset|] ;
#L0d156c.   v1:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d1570.   v4:= v0 + v1  @type int;
#L0d1574.   v0:= v7.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d1578.   v6:= v0.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d157c.   v0:= v8  @type object;
#L0d157e.   v1:= v9;
#L0d1580.   call temp:=  [|libcore:io:Memory.unsafeBulkGet|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkGet:(Ljava/lang/Object;II[BIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d1586.   v0:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d158a.   v0:= v0 + v2  @type int;
#L0d158c.   v7.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d1590.   return @void ;

   }
    procedure [|void|] [|java:nio:HeapByteBuffer.get|] ([|java:nio:HeapByteBuffer|] v7 @type (this), [|long|][] v8, [|int|] v10, [|int|] v11) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.get:([JII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d15a4.   v5:= 8  @length 16;
#L0d15a8.   v0:= v8.length;
#L0d15aa.   call temp:=  [|java:nio:HeapByteBuffer.checkGetBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/HeapByteBuffer;.checkGetBounds:(IIII)I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d15b0.   v2:= temp;
#L0d15b2.   v3:= v7.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d15b6.   v0:= v7.[|java:nio:HeapByteBuffer.offset|] ;
#L0d15ba.   v1:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d15be.   v4:= v0 + v1  @type int;
#L0d15c2.   v0:= v7.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d15c6.   v6:= v0.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d15ca.   v0:= v8  @type object;
#L0d15cc.   v1:= v9;
#L0d15ce.   call temp:=  [|libcore:io:Memory.unsafeBulkGet|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkGet:(Ljava/lang/Object;II[BIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d15d4.   v0:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d15d8.   v0:= v0 + v2  @type int;
#L0d15da.   v7.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d15de.   return @void ;

   }
    procedure [|void|] [|java:nio:HeapByteBuffer.get|] ([|java:nio:HeapByteBuffer|] v7 @type (this), [|short|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.get:([SII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d15f0.   v5:= 2  @length 4;
#L0d15f2.   v0:= v8.length;
#L0d15f4.   call temp:=  [|java:nio:HeapByteBuffer.checkGetBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/HeapByteBuffer;.checkGetBounds:(IIII)I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d15fa.   v2:= temp;
#L0d15fc.   v3:= v7.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d1600.   v0:= v7.[|java:nio:HeapByteBuffer.offset|] ;
#L0d1604.   v1:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d1608.   v4:= v0 + v1  @type int;
#L0d160c.   v0:= v7.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d1610.   v6:= v0.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d1614.   v0:= v8  @type object;
#L0d1616.   v1:= v9;
#L0d1618.   call temp:=  [|libcore:io:Memory.unsafeBulkGet|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkGet:(Ljava/lang/Object;II[BIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d161e.   v0:= v7.[|java:nio:HeapByteBuffer.position|] ;
#L0d1622.   v0:= v0 + v2  @type int;
#L0d1624.   v7.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d1628.   return @void ;

   }
    procedure [|char|] [|java:nio:HeapByteBuffer.getChar|] ([|java:nio:HeapByteBuffer|] v5 @type (this)) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getChar:()C|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d163c.   v2:= v5.[|java:nio:HeapByteBuffer.position|] ;
#L0d1640.   v0:= v2 + 2;
#L0d1644.   v2:= v5.[|java:nio:HeapByteBuffer.limit|] ;
#L0d1648.   if v0 <= v2 then goto L0d1658;
#L0d164c.   v2:= new [|java:nio:BufferUnderflowException|];
#L0d1650.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v2) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d1656.   throw v2;
#L0d1658.   v2:= v5.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d165c.   v3:= v5.[|java:nio:HeapByteBuffer.offset|] ;
#L0d1660.   v4:= v5.[|java:nio:HeapByteBuffer.position|] ;
#L0d1664.   v3:= v3 + v4  @type int;
#L0d1666.   v4:= v5.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d166a.   call temp:=  [|libcore:io:Memory.peekShort|](v2, v3, v4) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d1670.   v2:= temp;
#L0d1672.   v1:= (char)v2  @type i2c;
#L0d1674.   v5.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d1678.   return v1;

   }
    procedure [|char|] [|java:nio:HeapByteBuffer.getChar|] ([|java:nio:HeapByteBuffer|] v3 @type (this), [|int|] v4) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getChar:(I)C|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d168c.   v0:= 2  @length 4;
#L0d168e.   call temp:=  [|java:nio:HeapByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/HeapByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d1694.   v0:= v3.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d1698.   v1:= v3.[|java:nio:HeapByteBuffer.offset|] ;
#L0d169c.   v1:= v1 + v4  @type int;
#L0d169e.   v2:= v3.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d16a2.   call temp:=  [|libcore:io:Memory.peekShort|](v0, v1, v2) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d16a8.   v0:= temp;
#L0d16aa.   v0:= (char)v0  @type i2c;
#L0d16ac.   return v0;

   }
    procedure [|double|] [|java:nio:HeapByteBuffer.getDouble|] ([|java:nio:HeapByteBuffer|] v2 @type (this)) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getDouble:()D|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d16c0.   call temp:=  [|java:nio:HeapByteBuffer.getLong|](v2) @signature [|Ljava/nio/HeapByteBuffer;.getLong:()J|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d16c6.   v0:= temp  @type wide;
#L0d16c8.   call temp:=  [|java:lang:Double.longBitsToDouble|](v0, v1) @signature [|Ljava/lang/Double;.longBitsToDouble:(J)D|] @classDescriptor [|java:lang:Double|] @type static;
#L0d16ce.   v0:= temp  @type wide;
#L0d16d0.   return v0  @type wide;

   }
    procedure [|double|] [|java:nio:HeapByteBuffer.getDouble|] ([|java:nio:HeapByteBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getDouble:(I)D|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d16e4.   call temp:=  [|java:nio:HeapByteBuffer.getLong|](v2, v3) @signature [|Ljava/nio/HeapByteBuffer;.getLong:(I)J|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d16ea.   v0:= temp  @type wide;
#L0d16ec.   call temp:=  [|java:lang:Double.longBitsToDouble|](v0, v1) @signature [|Ljava/lang/Double;.longBitsToDouble:(J)D|] @classDescriptor [|java:lang:Double|] @type static;
#L0d16f2.   v0:= temp  @type wide;
#L0d16f4.   return v0  @type wide;

   }
    procedure [|float|] [|java:nio:HeapByteBuffer.getFloat|] ([|java:nio:HeapByteBuffer|] v1 @type (this)) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getFloat:()F|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d1708.   call temp:=  [|java:nio:HeapByteBuffer.getInt|](v1) @signature [|Ljava/nio/HeapByteBuffer;.getInt:()I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d170e.   v0:= temp;
#L0d1710.   call temp:=  [|java:lang:Float.intBitsToFloat|](v0) @signature [|Ljava/lang/Float;.intBitsToFloat:(I)F|] @classDescriptor [|java:lang:Float|] @type static;
#L0d1716.   v0:= temp;
#L0d1718.   return v0;

   }
    procedure [|float|] [|java:nio:HeapByteBuffer.getFloat|] ([|java:nio:HeapByteBuffer|] v1 @type (this), [|int|] v2) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getFloat:(I)F|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d172c.   call temp:=  [|java:nio:HeapByteBuffer.getInt|](v1, v2) @signature [|Ljava/nio/HeapByteBuffer;.getInt:(I)I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d1732.   v0:= temp;
#L0d1734.   call temp:=  [|java:lang:Float.intBitsToFloat|](v0) @signature [|Ljava/lang/Float;.intBitsToFloat:(I)F|] @classDescriptor [|java:lang:Float|] @type static;
#L0d173a.   v0:= temp;
#L0d173c.   return v0;

   }
    procedure [|int|] [|java:nio:HeapByteBuffer.getInt|] ([|java:nio:HeapByteBuffer|] v5 @type (this)) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getInt:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d1750.   v2:= v5.[|java:nio:HeapByteBuffer.position|] ;
#L0d1754.   v0:= v2 + 4;
#L0d1758.   v2:= v5.[|java:nio:HeapByteBuffer.limit|] ;
#L0d175c.   if v0 <= v2 then goto L0d176c;
#L0d1760.   v2:= new [|java:nio:BufferUnderflowException|];
#L0d1764.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v2) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d176a.   throw v2;
#L0d176c.   v2:= v5.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d1770.   v3:= v5.[|java:nio:HeapByteBuffer.offset|] ;
#L0d1774.   v4:= v5.[|java:nio:HeapByteBuffer.position|] ;
#L0d1778.   v3:= v3 + v4  @type int;
#L0d177a.   v4:= v5.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d177e.   call temp:=  [|libcore:io:Memory.peekInt|](v2, v3, v4) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d1784.   v1:= temp;
#L0d1786.   v5.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d178a.   return v1;

   }
    procedure [|int|] [|java:nio:HeapByteBuffer.getInt|] ([|java:nio:HeapByteBuffer|] v3 @type (this), [|int|] v4) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getInt:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d179c.   v0:= 4  @length 4;
#L0d179e.   call temp:=  [|java:nio:HeapByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/HeapByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d17a4.   v0:= v3.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d17a8.   v1:= v3.[|java:nio:HeapByteBuffer.offset|] ;
#L0d17ac.   v1:= v1 + v4  @type int;
#L0d17ae.   v2:= v3.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d17b2.   call temp:=  [|libcore:io:Memory.peekInt|](v0, v1, v2) @signature [|Llibcore/io/Memory;.peekInt:([BILjava/nio/ByteOrder;)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d17b8.   v0:= temp;
#L0d17ba.   return v0;

   }
    procedure [|long|] [|java:nio:HeapByteBuffer.getLong|] ([|java:nio:HeapByteBuffer|] v6 @type (this)) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getLong:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0d17cc.   v3:= v6.[|java:nio:HeapByteBuffer.position|] ;
#L0d17d0.   v0:= v3 + 8;
#L0d17d4.   v3:= v6.[|java:nio:HeapByteBuffer.limit|] ;
#L0d17d8.   if v0 <= v3 then goto L0d17e8;
#L0d17dc.   v3:= new [|java:nio:BufferUnderflowException|];
#L0d17e0.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v3) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d17e6.   throw v3;
#L0d17e8.   v3:= v6.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d17ec.   v4:= v6.[|java:nio:HeapByteBuffer.offset|] ;
#L0d17f0.   v5:= v6.[|java:nio:HeapByteBuffer.position|] ;
#L0d17f4.   v4:= v4 + v5  @type int;
#L0d17f6.   v5:= v6.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d17fa.   call temp:=  [|libcore:io:Memory.peekLong|](v3, v4, v5) @signature [|Llibcore/io/Memory;.peekLong:([BILjava/nio/ByteOrder;)J|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d1800.   v1:= temp  @type wide;
#L0d1802.   v6.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d1806.   return v1  @type wide;

   }
    procedure [|long|] [|java:nio:HeapByteBuffer.getLong|] ([|java:nio:HeapByteBuffer|] v3 @type (this), [|int|] v4) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getLong:(I)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d1818.   v0:= 8  @length 16;
#L0d181c.   call temp:=  [|java:nio:HeapByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/HeapByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d1822.   v0:= v3.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d1826.   v1:= v3.[|java:nio:HeapByteBuffer.offset|] ;
#L0d182a.   v1:= v1 + v4  @type int;
#L0d182c.   v2:= v3.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d1830.   call temp:=  [|libcore:io:Memory.peekLong|](v0, v1, v2) @signature [|Llibcore/io/Memory;.peekLong:([BILjava/nio/ByteOrder;)J|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d1836.   v0:= temp  @type wide;
#L0d1838.   return v0  @type wide;

   }
    procedure [|short|] [|java:nio:HeapByteBuffer.getShort|] ([|java:nio:HeapByteBuffer|] v5 @type (this)) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getShort:()S|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d184c.   v2:= v5.[|java:nio:HeapByteBuffer.position|] ;
#L0d1850.   v0:= v2 + 2;
#L0d1854.   v2:= v5.[|java:nio:HeapByteBuffer.limit|] ;
#L0d1858.   if v0 <= v2 then goto L0d1868;
#L0d185c.   v2:= new [|java:nio:BufferUnderflowException|];
#L0d1860.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v2) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d1866.   throw v2;
#L0d1868.   v2:= v5.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d186c.   v3:= v5.[|java:nio:HeapByteBuffer.offset|] ;
#L0d1870.   v4:= v5.[|java:nio:HeapByteBuffer.position|] ;
#L0d1874.   v3:= v3 + v4  @type int;
#L0d1876.   v4:= v5.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d187a.   call temp:=  [|libcore:io:Memory.peekShort|](v2, v3, v4) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d1880.   v1:= temp;
#L0d1882.   v5.[|java:nio:HeapByteBuffer.position|]  := v0;
#L0d1886.   return v1;

   }
    procedure [|short|] [|java:nio:HeapByteBuffer.getShort|] ([|java:nio:HeapByteBuffer|] v3 @type (this), [|int|] v4) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.getShort:(I)S|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d1898.   v0:= 2  @length 4;
#L0d189a.   call temp:=  [|java:nio:HeapByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/HeapByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d18a0.   v0:= v3.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d18a4.   v1:= v3.[|java:nio:HeapByteBuffer.offset|] ;
#L0d18a8.   v1:= v1 + v4  @type int;
#L0d18aa.   v2:= v3.[|java:nio:HeapByteBuffer.order|]   @type object;
#L0d18ae.   call temp:=  [|libcore:io:Memory.peekShort|](v0, v1, v2) @signature [|Llibcore/io/Memory;.peekShort:([BILjava/nio/ByteOrder;)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d18b4.   v0:= temp;
#L0d18b6.   return v0;

   }
    procedure [|boolean|] [|java:nio:HeapByteBuffer.isDirect|] ([|java:nio:HeapByteBuffer|] v1 @type (this)) @owner [|java:nio:HeapByteBuffer|] @signature [|Ljava/nio/HeapByteBuffer;.isDirect:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d18c8.   v0:= 0  @length 4;
#L0d18ca.   return v0;

   }
record [|java:nio:IntBuffer|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:Buffer|], [|java:lang:Comparable|] {
   }
    procedure [|void|] [|java:nio:IntBuffer.<init>|] ([|java:nio:IntBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d18dc.   v0:= 2  @length 4;
#L0d18de.   v1:= 0  @length 4;
#L0d18e0.   call temp:=  [|java:nio:Buffer.<init>|](v2, v0, v3, v1) @signature [|Ljava/nio/Buffer;.<init>:(IILjava/nio/MemoryBlock;)V|] @classDescriptor [|java:nio:Buffer|] @type direct;
#L0d18e6.   return @void ;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.allocate|] ([|int|] v3) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.allocate:(I)Ljava/nio/IntBuffer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d18f8.   if v3 >= 0 then goto L0d192e;
#L0d18fc.   v0:= new [|java:lang:IllegalArgumentException|];
#L0d1900.   v1:= new [|java:lang:StringBuilder|];
#L0d1904.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0d190a.   v2:= "capacity < 0: " @type (object, string);
#L0d190e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d1914.   v1:= temp  @type object;
#L0d1916.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d191c.   v1:= temp  @type object;
#L0d191e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d1924.   v1:= temp  @type object;
#L0d1926.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d192c.   throw v0;
#L0d192e.   v0:= new [|java:nio:ReadWriteIntArrayBuffer|];
#L0d1932.   call temp:=  [|java:nio:ReadWriteIntArrayBuffer.<init>|](v0, v3) @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:ReadWriteIntArrayBuffer|] @type direct;
#L0d1938.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.wrap|] ([|int|][] v2) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.wrap:([I)Ljava/nio/IntBuffer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0d194c.   v0:= 0  @length 4;
#L0d194e.   v1:= v2.length;
#L0d1950.   call temp:=  [|java:nio:IntBuffer.wrap|](v2, v0, v1) @signature [|Ljava/nio/IntBuffer;.wrap:([III)Ljava/nio/IntBuffer;|] @classDescriptor [|java:nio:IntBuffer|] @type static;
#L0d1956.   v0:= temp  @type object;
#L0d1958.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.wrap|] ([|int|][] v2, [|int|] v3, [|int|] v4) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.wrap:([III)Ljava/nio/IntBuffer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0d196c.   v1:= v2.length;
#L0d196e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v3, v4) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d1974.   v0:= new [|java:nio:ReadWriteIntArrayBuffer|];
#L0d1978.   call temp:=  [|java:nio:ReadWriteIntArrayBuffer.<init>|](v0, v2) @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.<init>:([I)V|] @classDescriptor [|java:nio:ReadWriteIntArrayBuffer|] @type direct;
#L0d197e.   v0.[|java:nio:IntBuffer.position|]  := v3;
#L0d1982.   v1:= v3 + v4  @type int;
#L0d1986.   v0.[|java:nio:IntBuffer.limit|]  := v1;
#L0d198a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:nio:IntBuffer.array|] ([|java:nio:IntBuffer|] v1 @type (this)) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.array:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0d199c.   call temp:=  [|java:nio:IntBuffer.array|](v1) @signature [|Ljava/nio/IntBuffer;.array:()[I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d19a2.   v0:= temp  @type object;
#L0d19a4.   return v0  @type object;

   }
    procedure [|int|][] [|java:nio:IntBuffer.array|] ([|java:nio:IntBuffer|] v1 @type (this)) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.array:()[I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d19b8.   call temp:=  [|java:nio:IntBuffer.protectedArray|](v1) @signature [|Ljava/nio/IntBuffer;.protectedArray:()[I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d19be.   v0:= temp  @type object;
#L0d19c0.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:IntBuffer.arrayOffset|] ([|java:nio:IntBuffer|] v1 @type (this)) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.arrayOffset:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d19d4.   call temp:=  [|java:nio:IntBuffer.protectedArrayOffset|](v1) @signature [|Ljava/nio/IntBuffer;.protectedArrayOffset:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d19da.   v0:= temp;
#L0d19dc.   return v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.asReadOnlyBuffer|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.asReadOnlyBuffer:()Ljava/nio/IntBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.compact|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.compact:()Ljava/nio/IntBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:IntBuffer.compareTo|] ([|java:nio:IntBuffer|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0d19f0.   v2:= ([|java:nio:IntBuffer|])v2;
#L0d19f4.   call temp:=  [|java:nio:IntBuffer.compareTo|](v1, v2) @signature [|Ljava/nio/IntBuffer;.compareTo:(Ljava/nio/IntBuffer;)I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d19fa.   v0:= temp;
#L0d19fc.   return v0;

   }
    procedure [|int|] [|java:nio:IntBuffer.compareTo|] ([|java:nio:IntBuffer|] v7 @type (this), [|java:nio:IntBuffer|] v8 @type (object)) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.compareTo:(Ljava/nio/IntBuffer;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d1a10.   call temp:=  [|java:nio:IntBuffer.remaining|](v7) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1a16.   v5:= temp;
#L0d1a18.   call temp:=  [|java:nio:IntBuffer.remaining|](v8) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1a1e.   v6:= temp;
#L0d1a20.   if v5 >= v6 then goto L0d1a54;
#L0d1a24.   call temp:=  [|java:nio:IntBuffer.remaining|](v7) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1a2a.   v0:= temp;
#L0d1a2c.   v4:= v7.[|java:nio:IntBuffer.position|] ;
#L0d1a30.   v2:= v8.[|java:nio:IntBuffer.position|] ;
#L0d1a34.   if v0 <= 0 then goto L0d1a70;
#L0d1a38.   call temp:=  [|java:nio:IntBuffer.get|](v7, v4) @signature [|Ljava/nio/IntBuffer;.get:(I)I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1a3e.   v3:= temp;
#L0d1a40.   call temp:=  [|java:nio:IntBuffer.get|](v8, v2) @signature [|Ljava/nio/IntBuffer;.get:(I)I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1a46.   v1:= temp;
#L0d1a48.   if v3 == v1 then goto L0d1a62;
#L0d1a4c.   if v3 >= v1 then goto L0d1a5e;
#L0d1a50.   v5:= -1  @length 4;
#L0d1a52.   return v5;
#L0d1a54.   call temp:=  [|java:nio:IntBuffer.remaining|](v8) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1a5a.   v0:= temp;
#L0d1a5c.   goto L0d1a2c;
#L0d1a5e.   v5:= 1  @length 4;
#L0d1a60.   goto L0d1a52;
#L0d1a62.   v4:= v4 + 1;
#L0d1a66.   v2:= v2 + 1;
#L0d1a6a.   v0:= v0 + -1;
#L0d1a6e.   goto L0d1a34;
#L0d1a70.   call temp:=  [|java:nio:IntBuffer.remaining|](v7) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1a76.   v5:= temp;
#L0d1a78.   call temp:=  [|java:nio:IntBuffer.remaining|](v8) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1a7e.   v6:= temp;
#L0d1a80.   v5:= v5 - v6  @type int;
#L0d1a82.   goto L0d1a52;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.duplicate|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.duplicate:()Ljava/nio/IntBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:IntBuffer.equals|] ([|java:nio:IntBuffer|] v9 @type (this), [|java:lang:Object|] v10 @type (object)) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0d1a94.   v6:= 0  @length 4;
#L0d1a96.   v7:= instanceof @varname v10 @type [|java:nio:IntBuffer|];
#L0d1a9a.   if v7 != 0 then goto L0d1aa0;
#L0d1a9e.   return v6;
#L0d1aa0.   v3:= v10  @type object;
#L0d1aa2.   v3:= ([|java:nio:IntBuffer|])v3;
#L0d1aa6.   call temp:=  [|java:nio:IntBuffer.remaining|](v9) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1aac.   v7:= temp;
#L0d1aae.   call temp:=  [|java:nio:IntBuffer.remaining|](v3) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1ab4.   v8:= temp;
#L0d1ab6.   if v7 != v8 then goto L0d1a9e;
#L0d1aba.   v1:= v9.[|java:nio:IntBuffer.position|] ;
#L0d1abe.   v4:= v3.[|java:nio:IntBuffer.position|] ;
#L0d1ac2.   v0:= 1  @length 4;
#L0d1ac4.   v5:= v4;
#L0d1ac6.   v2:= v1;
#L0d1ac8.   if v0 == 0 then goto L0d1afc;
#L0d1acc.   v7:= v9.[|java:nio:IntBuffer.limit|] ;
#L0d1ad0.   if v2 >= v7 then goto L0d1afc;
#L0d1ad4.   v1:= v2 + 1;
#L0d1ad8.   call temp:=  [|java:nio:IntBuffer.get|](v9, v2) @signature [|Ljava/nio/IntBuffer;.get:(I)I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1ade.   v7:= temp;
#L0d1ae0.   v4:= v5 + 1;
#L0d1ae4.   call temp:=  [|java:nio:IntBuffer.get|](v3, v5) @signature [|Ljava/nio/IntBuffer;.get:(I)I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1aea.   v8:= temp;
#L0d1aec.   if v7 != v8 then goto L0d1af8;
#L0d1af0.   v0:= 1  @length 4;
#L0d1af2.   v5:= v4;
#L0d1af4.   v2:= v1;
#L0d1af6.   goto L0d1ac8;
#L0d1af8.   v0:= v6;
#L0d1afa.   goto L0d1af2;
#L0d1afc.   v6:= v0;
#L0d1afe.   goto L0d1a9e;

   }
    procedure [|int|] [|java:nio:IntBuffer.get|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.get:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:IntBuffer.get|] ([|int|] v0) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.get:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.get|] ([|java:nio:IntBuffer|] v2 @type (this), [|int|][] v3) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.get:([I)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d1b10.   v0:= 0  @length 4;
#L0d1b12.   v1:= v3.length;
#L0d1b14.   call temp:=  [|java:nio:IntBuffer.get|](v2, v3, v0, v1) @signature [|Ljava/nio/IntBuffer;.get:([III)Ljava/nio/IntBuffer;|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1b1a.   v0:= temp  @type object;
#L0d1b1c.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.get|] ([|java:nio:IntBuffer|] v2 @type (this), [|int|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.get:([III)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d1b30.   v1:= v3.length;
#L0d1b32.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d1b38.   call temp:=  [|java:nio:IntBuffer.remaining|](v2) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1b3e.   v1:= temp;
#L0d1b40.   if v5 <= v1 then goto L0d1b50;
#L0d1b44.   v1:= new [|java:nio:BufferUnderflowException|];
#L0d1b48.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v1) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d1b4e.   throw v1;
#L0d1b50.   v0:= v4;
#L0d1b52.   v1:= v4 + v5  @type int;
#L0d1b56.   if v0 >= v1 then goto L0d1b6c;
#L0d1b5a.   call temp:=  [|java:nio:IntBuffer.get|](v2) @signature [|Ljava/nio/IntBuffer;.get:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1b60.   v1:= temp;
#L0d1b62.   v3[v0]:= v1;
#L0d1b66.   v0:= v0 + 1;
#L0d1b6a.   goto L0d1b52;
#L0d1b6c.   return v2  @type object;

   }
    procedure [|boolean|] [|java:nio:IntBuffer.hasArray|] ([|java:nio:IntBuffer|] v1 @type (this)) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.hasArray:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d1b80.   call temp:=  [|java:nio:IntBuffer.protectedHasArray|](v1) @signature [|Ljava/nio/IntBuffer;.protectedHasArray:()Z|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1b86.   v0:= temp;
#L0d1b88.   return v0;

   }
    procedure [|int|] [|java:nio:IntBuffer.hashCode|] ([|java:nio:IntBuffer|] v4 @type (this)) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d1b9c.   v1:= v4.[|java:nio:IntBuffer.position|] ;
#L0d1ba0.   v0:= 0  @length 4;
#L0d1ba2.   v3:= v4.[|java:nio:IntBuffer.limit|] ;
#L0d1ba6.   if v1 >= v3 then goto L0d1bbc;
#L0d1baa.   v2:= v1 + 1;
#L0d1bae.   call temp:=  [|java:nio:IntBuffer.get|](v4, v1) @signature [|Ljava/nio/IntBuffer;.get:(I)I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1bb4.   v3:= temp;
#L0d1bb6.   v0:= v0 + v3  @type int;
#L0d1bb8.   v1:= v2;
#L0d1bba.   goto L0d1ba2;
#L0d1bbc.   return v0;

   }
    procedure [|boolean|] [|java:nio:IntBuffer.isDirect|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.isDirect:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:ByteOrder|] [|java:nio:IntBuffer.order|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.order:()Ljava/nio/ByteOrder;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|][] [|java:nio:IntBuffer.protectedArray|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.protectedArray:()[I|] @Access ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:IntBuffer.protectedArrayOffset|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.protectedArrayOffset:()I|] @Access ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:IntBuffer.protectedHasArray|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.protectedHasArray:()Z|] @Access ABSTRACT {
      # return;
   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.put|] ([|int|] v0) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.put:(I)Ljava/nio/IntBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.put|] ([|int|] v0, [|int|] v1) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.put:(II)Ljava/nio/IntBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.put|] ([|java:nio:IntBuffer|] v3 @type (this), [|java:nio:IntBuffer|] v4 @type (object)) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.put:(Ljava/nio/IntBuffer;)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d1bd0.   if v4 != v3 then goto L0d1be4;
#L0d1bd4.   v1:= new [|java:lang:IllegalArgumentException|];
#L0d1bd8.   v2:= "src == this" @type (object, string);
#L0d1bdc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d1be2.   throw v1;
#L0d1be4.   call temp:=  [|java:nio:IntBuffer.remaining|](v4) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1bea.   v1:= temp;
#L0d1bec.   call temp:=  [|java:nio:IntBuffer.remaining|](v3) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1bf2.   v2:= temp;
#L0d1bf4.   if v1 <= v2 then goto L0d1c04;
#L0d1bf8.   v1:= new [|java:nio:BufferOverflowException|];
#L0d1bfc.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d1c02.   throw v1;
#L0d1c04.   call temp:=  [|java:nio:IntBuffer.remaining|](v4) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1c0a.   v1:= temp;
#L0d1c0c.   v0:= new [|int|][v1];
#L0d1c10.   call temp:=  [|java:nio:IntBuffer.get|](v4, v0) @signature [|Ljava/nio/IntBuffer;.get:([I)Ljava/nio/IntBuffer;|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1c16.   call temp:=  [|java:nio:IntBuffer.put|](v3, v0) @signature [|Ljava/nio/IntBuffer;.put:([I)Ljava/nio/IntBuffer;|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1c1c.   return v3  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.put|] ([|java:nio:IntBuffer|] v2 @type (this), [|int|][] v3) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.put:([I)Ljava/nio/IntBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d1c30.   v0:= 0  @length 4;
#L0d1c32.   v1:= v3.length;
#L0d1c34.   call temp:=  [|java:nio:IntBuffer.put|](v2, v3, v0, v1) @signature [|Ljava/nio/IntBuffer;.put:([III)Ljava/nio/IntBuffer;|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1c3a.   v0:= temp  @type object;
#L0d1c3c.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.put|] ([|java:nio:IntBuffer|] v2 @type (this), [|int|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.put:([III)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d1c50.   v1:= v3.length;
#L0d1c52.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d1c58.   call temp:=  [|java:nio:IntBuffer.remaining|](v2) @signature [|Ljava/nio/IntBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1c5e.   v1:= temp;
#L0d1c60.   if v5 <= v1 then goto L0d1c70;
#L0d1c64.   v1:= new [|java:nio:BufferOverflowException|];
#L0d1c68.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d1c6e.   throw v1;
#L0d1c70.   v0:= v4;
#L0d1c72.   v1:= v4 + v5  @type int;
#L0d1c76.   if v0 >= v1 then goto L0d1c8a;
#L0d1c7a.   v1:= v3[v0];
#L0d1c7e.   call temp:=  [|java:nio:IntBuffer.put|](v2, v1) @signature [|Ljava/nio/IntBuffer;.put:(I)Ljava/nio/IntBuffer;|] @classDescriptor [|java:nio:IntBuffer|] @type virtual;
#L0d1c84.   v0:= v0 + 1;
#L0d1c88.   goto L0d1c72;
#L0d1c8a.   return v2  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntBuffer.slice|] () @owner [|java:nio:IntBuffer|] @signature [|Ljava/nio/IntBuffer;.slice:()Ljava/nio/IntBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:nio:IntArrayBuffer|]  @type class @AccessFlag ABSTRACT  extends [|java:nio:IntBuffer|] {
      [|int|][] [|java:nio:IntArrayBuffer.backingArray|]    @AccessFlag PROTECTED_FINAL;
      [|int|] [|java:nio:IntArrayBuffer.offset|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|java:nio:IntArrayBuffer.<init>|] ([|java:nio:IntArrayBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:IntArrayBuffer|] @signature [|Ljava/nio/IntArrayBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d1c9c.   v0:= new [|int|][v3];
#L0d1ca0.   v1:= 0  @length 4;
#L0d1ca2.   call temp:=  [|java:nio:IntArrayBuffer.<init>|](v2, v3, v0, v1) @signature [|Ljava/nio/IntArrayBuffer;.<init>:(I[II)V|] @classDescriptor [|java:nio:IntArrayBuffer|] @type direct;
#L0d1ca8.   return @void ;

   }
    procedure [|void|] [|java:nio:IntArrayBuffer.<init>|] ([|java:nio:IntArrayBuffer|] v0 @type (this), [|int|] v1, [|int|][] v2, [|int|] v3) @owner [|java:nio:IntArrayBuffer|] @signature [|Ljava/nio/IntArrayBuffer;.<init>:(I[II)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d1cbc.   call temp:=  [|java:nio:IntBuffer.<init>|](v0, v1) @signature [|Ljava/nio/IntBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:IntBuffer|] @type direct;
#L0d1cc2.   v0.[|java:nio:IntArrayBuffer.backingArray|]  := v2 @type object;
#L0d1cc6.   v0.[|java:nio:IntArrayBuffer.offset|]  := v3;
#L0d1cca.   return @void ;

   }
    procedure [|void|] [|java:nio:IntArrayBuffer.<init>|] ([|java:nio:IntArrayBuffer|] v2 @type (this), [|int|][] v3) @owner [|java:nio:IntArrayBuffer|] @signature [|Ljava/nio/IntArrayBuffer;.<init>:([I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d1cdc.   v0:= v3.length;
#L0d1cde.   v1:= 0  @length 4;
#L0d1ce0.   call temp:=  [|java:nio:IntArrayBuffer.<init>|](v2, v0, v3, v1) @signature [|Ljava/nio/IntArrayBuffer;.<init>:(I[II)V|] @classDescriptor [|java:nio:IntArrayBuffer|] @type direct;
#L0d1ce6.   return @void ;

   }
    procedure [|int|] [|java:nio:IntArrayBuffer.get|] ([|java:nio:IntArrayBuffer|] v4 @type (this)) @owner [|java:nio:IntArrayBuffer|] @signature [|Ljava/nio/IntArrayBuffer;.get:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d1cf8.   v0:= v4.[|java:nio:IntArrayBuffer.position|] ;
#L0d1cfc.   v1:= v4.[|java:nio:IntArrayBuffer.limit|] ;
#L0d1d00.   if v0 != v1 then goto L0d1d10;
#L0d1d04.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d1d08.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d1d0e.   throw v0;
#L0d1d10.   v0:= v4.[|java:nio:IntArrayBuffer.backingArray|]   @type object;
#L0d1d14.   v1:= v4.[|java:nio:IntArrayBuffer.offset|] ;
#L0d1d18.   v2:= v4.[|java:nio:IntArrayBuffer.position|] ;
#L0d1d1c.   v3:= v2 + 1;
#L0d1d20.   v4.[|java:nio:IntArrayBuffer.position|]  := v3;
#L0d1d24.   v1:= v1 + v2  @type int;
#L0d1d26.   v0:= v0[v1];
#L0d1d2a.   return v0;

   }
    procedure [|int|] [|java:nio:IntArrayBuffer.get|] ([|java:nio:IntArrayBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:IntArrayBuffer|] @signature [|Ljava/nio/IntArrayBuffer;.get:(I)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d1d3c.   call temp:=  [|java:nio:IntArrayBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/IntArrayBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:IntArrayBuffer|] @type virtual;
#L0d1d42.   v0:= v2.[|java:nio:IntArrayBuffer.backingArray|]   @type object;
#L0d1d46.   v1:= v2.[|java:nio:IntArrayBuffer.offset|] ;
#L0d1d4a.   v1:= v1 + v3  @type int;
#L0d1d4c.   v0:= v0[v1];
#L0d1d50.   return v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntArrayBuffer.get|] ([|java:nio:IntArrayBuffer|] v3 @type (this), [|int|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:IntArrayBuffer|] @signature [|Ljava/nio/IntArrayBuffer;.get:([III)Ljava/nio/IntBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d1d64.   call temp:=  [|java:nio:IntArrayBuffer.remaining|](v3) @signature [|Ljava/nio/IntArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:IntArrayBuffer|] @type virtual;
#L0d1d6a.   v0:= temp;
#L0d1d6c.   if v6 <= v0 then goto L0d1d7c;
#L0d1d70.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d1d74.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d1d7a.   throw v0;
#L0d1d7c.   v0:= v3.[|java:nio:IntArrayBuffer.backingArray|]   @type object;
#L0d1d80.   v1:= v3.[|java:nio:IntArrayBuffer.offset|] ;
#L0d1d84.   v2:= v3.[|java:nio:IntArrayBuffer.position|] ;
#L0d1d88.   v1:= v1 + v2  @type int;
#L0d1d8a.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v4, v5, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d1d90.   v0:= v3.[|java:nio:IntArrayBuffer.position|] ;
#L0d1d94.   v0:= v0 + v6  @type int;
#L0d1d96.   v3.[|java:nio:IntArrayBuffer.position|]  := v0;
#L0d1d9a.   return v3  @type object;

   }
    procedure [|boolean|] [|java:nio:IntArrayBuffer.isDirect|] ([|java:nio:IntArrayBuffer|] v1 @type (this)) @owner [|java:nio:IntArrayBuffer|] @signature [|Ljava/nio/IntArrayBuffer;.isDirect:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d1dac.   v0:= 0  @length 4;
#L0d1dae.   return v0;

   }
    procedure [|java:nio:ByteOrder|] [|java:nio:IntArrayBuffer.order|] ([|java:nio:IntArrayBuffer|] v1 @type (this)) @owner [|java:nio:IntArrayBuffer|] @signature [|Ljava/nio/IntArrayBuffer;.order:()Ljava/nio/ByteOrder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d1dc0.   call temp:=  [|java:nio:ByteOrder.nativeOrder|]() @signature [|Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteOrder|] @type static;
#L0d1dc6.   v0:= temp  @type object;
#L0d1dc8.   return v0  @type object;

   }
record [|java:nio:IntToByteBufferAdapter|]  @type class @AccessFlag FINAL  extends [|java:nio:IntBuffer|] {
      [|java:nio:ByteBuffer|] [|java:nio:IntToByteBufferAdapter.byteBuffer|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:IntToByteBufferAdapter.<init>|] ([|java:nio:IntToByteBufferAdapter|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d1ddc.   call temp:=  [|java:nio:ByteBuffer.capacity|](v2) @signature [|Ljava/nio/ByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1de2.   v0:= temp;
#L0d1de4.   v0:= v0 / 4;
#L0d1de8.   call temp:=  [|java:nio:IntBuffer.<init>|](v1, v0) @signature [|Ljava/nio/IntBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:IntBuffer|] @type direct;
#L0d1dee.   v1.[|java:nio:IntToByteBufferAdapter.byteBuffer|]  := v2 @type object;
#L0d1df2.   v0:= v1.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1df6.   call temp:=  [|java:nio:ByteBuffer.clear|](v0) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1dfc.   v0:= v2.[|java:nio:ByteBuffer.effectiveDirectAddress|] ;
#L0d1e00.   v1.[|java:nio:IntToByteBufferAdapter.effectiveDirectAddress|]  := v0;
#L0d1e04.   return @void ;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntToByteBufferAdapter.asIntBuffer|] ([|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.asIntBuffer:(Ljava/nio/ByteBuffer;)Ljava/nio/IntBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0d1e18.   call temp:=  [|java:nio:ByteBuffer.slice|](v2) @signature [|Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1e1e.   v0:= temp  @type object;
#L0d1e20.   call temp:=  [|java:nio:ByteBuffer.order|](v2) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1e26.   v1:= temp  @type object;
#L0d1e28.   call temp:=  [|java:nio:ByteBuffer.order|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1e2e.   v1:= new [|java:nio:IntToByteBufferAdapter|];
#L0d1e32.   call temp:=  [|java:nio:IntToByteBufferAdapter.<init>|](v1, v0) @signature [|Ljava/nio/IntToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:IntToByteBufferAdapter|] @type direct;
#L0d1e38.   return v1  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntToByteBufferAdapter.asReadOnlyBuffer|] ([|java:nio:IntToByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.asReadOnlyBuffer:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d1e4c.   v0:= new [|java:nio:IntToByteBufferAdapter|];
#L0d1e50.   v1:= v3.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1e54.   call temp:=  [|java:nio:ByteBuffer.asReadOnlyBuffer|](v1) @signature [|Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1e5a.   v1:= temp  @type object;
#L0d1e5c.   call temp:=  [|java:nio:IntToByteBufferAdapter.<init>|](v0, v1) @signature [|Ljava/nio/IntToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:IntToByteBufferAdapter|] @type direct;
#L0d1e62.   v1:= v3.[|java:nio:IntToByteBufferAdapter.limit|] ;
#L0d1e66.   v0.[|java:nio:IntToByteBufferAdapter.limit|]  := v1;
#L0d1e6a.   v1:= v3.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d1e6e.   v0.[|java:nio:IntToByteBufferAdapter.position|]  := v1;
#L0d1e72.   v1:= v3.[|java:nio:IntToByteBufferAdapter.mark|] ;
#L0d1e76.   v0.[|java:nio:IntToByteBufferAdapter.mark|]  := v1;
#L0d1e7a.   v1:= v0.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1e7e.   v2:= v3.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1e82.   v2:= v2.[|java:nio:ByteBuffer.order|]   @type object;
#L0d1e86.   v1.[|java:nio:ByteBuffer.order|]  := v2 @type object;
#L0d1e8a.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntToByteBufferAdapter.compact|] ([|java:nio:IntToByteBufferAdapter|] v2 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.compact:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d1e9c.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1ea0.   call temp:=  [|java:nio:ByteBuffer.isReadOnly|](v0) @signature [|Ljava/nio/ByteBuffer;.isReadOnly:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1ea6.   v0:= temp;
#L0d1ea8.   if v0 == 0 then goto L0d1eb8;
#L0d1eac.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d1eb0.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d1eb6.   throw v0;
#L0d1eb8.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1ebc.   v1:= v2.[|java:nio:IntToByteBufferAdapter.limit|] ;
#L0d1ec0.   v1:= v1 * 4;
#L0d1ec4.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1eca.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1ece.   v1:= v2.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d1ed2.   v1:= v1 * 4;
#L0d1ed6.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1edc.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1ee0.   call temp:=  [|java:nio:ByteBuffer.compact|](v0) @signature [|Ljava/nio/ByteBuffer;.compact:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1ee6.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1eea.   call temp:=  [|java:nio:ByteBuffer.clear|](v0) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1ef0.   v0:= v2.[|java:nio:IntToByteBufferAdapter.limit|] ;
#L0d1ef4.   v1:= v2.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d1ef8.   v0:= v0 - v1  @type int;
#L0d1efa.   v2.[|java:nio:IntToByteBufferAdapter.position|]  := v0;
#L0d1efe.   v0:= v2.[|java:nio:IntToByteBufferAdapter.capacity|] ;
#L0d1f02.   v2.[|java:nio:IntToByteBufferAdapter.limit|]  := v0;
#L0d1f06.   v0:= -1  @length 4;
#L0d1f08.   v2.[|java:nio:IntToByteBufferAdapter.mark|]  := v0;
#L0d1f0c.   return v2  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntToByteBufferAdapter.duplicate|] ([|java:nio:IntToByteBufferAdapter|] v4 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.duplicate:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d1f20.   v2:= v4.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1f24.   call temp:=  [|java:nio:ByteBuffer.duplicate|](v2) @signature [|Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1f2a.   v2:= temp  @type object;
#L0d1f2c.   v3:= v4.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1f30.   call temp:=  [|java:nio:ByteBuffer.order|](v3) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1f36.   v3:= temp  @type object;
#L0d1f38.   call temp:=  [|java:nio:ByteBuffer.order|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1f3e.   v0:= temp  @type object;
#L0d1f40.   v1:= new [|java:nio:IntToByteBufferAdapter|];
#L0d1f44.   call temp:=  [|java:nio:IntToByteBufferAdapter.<init>|](v1, v0) @signature [|Ljava/nio/IntToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:IntToByteBufferAdapter|] @type direct;
#L0d1f4a.   v2:= v4.[|java:nio:IntToByteBufferAdapter.limit|] ;
#L0d1f4e.   v1.[|java:nio:IntToByteBufferAdapter.limit|]  := v2;
#L0d1f52.   v2:= v4.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d1f56.   v1.[|java:nio:IntToByteBufferAdapter.position|]  := v2;
#L0d1f5a.   v2:= v4.[|java:nio:IntToByteBufferAdapter.mark|] ;
#L0d1f5e.   v1.[|java:nio:IntToByteBufferAdapter.mark|]  := v2;
#L0d1f62.   return v1  @type object;

   }
    procedure [|int|] [|java:nio:IntToByteBufferAdapter.get|] ([|java:nio:IntToByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.get:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d1f74.   v0:= v3.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d1f78.   v1:= v3.[|java:nio:IntToByteBufferAdapter.limit|] ;
#L0d1f7c.   if v0 != v1 then goto L0d1f8c;
#L0d1f80.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d1f84.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d1f8a.   throw v0;
#L0d1f8c.   v0:= v3.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1f90.   v1:= v3.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d1f94.   v2:= v1 + 1;
#L0d1f98.   v3.[|java:nio:IntToByteBufferAdapter.position|]  := v2;
#L0d1f9c.   v1:= v1 * 4;
#L0d1fa0.   call temp:=  [|java:nio:ByteBuffer.getInt|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.getInt:(I)I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1fa6.   v0:= temp;
#L0d1fa8.   return v0;

   }
    procedure [|int|] [|java:nio:IntToByteBufferAdapter.get|] ([|java:nio:IntToByteBufferAdapter|] v2 @type (this), [|int|] v3) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.get:(I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d1fbc.   call temp:=  [|java:nio:IntToByteBufferAdapter.checkIndex|](v2, v3) @signature [|Ljava/nio/IntToByteBufferAdapter;.checkIndex:(I)V|] @classDescriptor [|java:nio:IntToByteBufferAdapter|] @type virtual;
#L0d1fc2.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1fc6.   v1:= v3 * 4;
#L0d1fca.   call temp:=  [|java:nio:ByteBuffer.getInt|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.getInt:(I)I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1fd0.   v0:= temp;
#L0d1fd2.   return v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntToByteBufferAdapter.get|] ([|java:nio:IntToByteBufferAdapter|] v2 @type (this), [|int|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.get:([III)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d1fe4.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1fe8.   v1:= v2.[|java:nio:IntToByteBufferAdapter.limit|] ;
#L0d1fec.   v1:= v1 * 4;
#L0d1ff0.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d1ff6.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d1ffa.   v1:= v2.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d1ffe.   v1:= v1 * 4;
#L0d2002.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2008.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d200c.   v0:= instanceof @varname v0 @type [|java:nio:DirectByteBuffer|];
#L0d2010.   if v0 == 0 then goto L0d202e;
#L0d2014.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2018.   v0:= ([|java:nio:DirectByteBuffer|])v0;
#L0d201c.   call temp:=  [|java:nio:DirectByteBuffer.get|](v0, v3, v4, v5) @signature [|Ljava/nio/DirectByteBuffer;.get:([III)V|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d2022.   v0:= v2.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d2026.   v0:= v0 + v5  @type int;
#L0d2028.   v2.[|java:nio:IntToByteBufferAdapter.position|]  := v0;
#L0d202c.   return v2  @type object;
#L0d202e.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2032.   v0:= ([|java:nio:HeapByteBuffer|])v0;
#L0d2036.   call temp:=  [|java:nio:HeapByteBuffer.get|](v0, v3, v4, v5) @signature [|Ljava/nio/HeapByteBuffer;.get:([III)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d203c.   goto L0d2022;

   }
    procedure [|boolean|] [|java:nio:IntToByteBufferAdapter.isDirect|] ([|java:nio:IntToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.isDirect:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d2050.   v0:= v1.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2054.   call temp:=  [|java:nio:ByteBuffer.isDirect|](v0) @signature [|Ljava/nio/ByteBuffer;.isDirect:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d205a.   v0:= temp;
#L0d205c.   return v0;

   }
    procedure [|boolean|] [|java:nio:IntToByteBufferAdapter.isReadOnly|] ([|java:nio:IntToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d2070.   v0:= v1.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2074.   call temp:=  [|java:nio:ByteBuffer.isReadOnly|](v0) @signature [|Ljava/nio/ByteBuffer;.isReadOnly:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d207a.   v0:= temp;
#L0d207c.   return v0;

   }
    procedure [|java:nio:ByteOrder|] [|java:nio:IntToByteBufferAdapter.order|] ([|java:nio:IntToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.order:()Ljava/nio/ByteOrder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d2090.   v0:= v1.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2094.   call temp:=  [|java:nio:ByteBuffer.order|](v0) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d209a.   v0:= temp  @type object;
#L0d209c.   return v0  @type object;

   }
    procedure [|int|][] [|java:nio:IntToByteBufferAdapter.protectedArray|] ([|java:nio:IntToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.protectedArray:()[I|] @Access  {
      local temp ;
        v0;
      
#L0d20b0.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0d20b4.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0d20ba.   throw v0;

   }
    procedure [|int|] [|java:nio:IntToByteBufferAdapter.protectedArrayOffset|] ([|java:nio:IntToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d20cc.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0d20d0.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0d20d6.   throw v0;

   }
    procedure [|boolean|] [|java:nio:IntToByteBufferAdapter.protectedHasArray|] ([|java:nio:IntToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d20e8.   v0:= 0  @length 4;
#L0d20ea.   return v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntToByteBufferAdapter.put|] ([|java:nio:IntToByteBufferAdapter|] v3 @type (this), [|int|] v4) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.put:(I)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d20fc.   v0:= v3.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d2100.   v1:= v3.[|java:nio:IntToByteBufferAdapter.limit|] ;
#L0d2104.   if v0 != v1 then goto L0d2114;
#L0d2108.   v0:= new [|java:nio:BufferOverflowException|];
#L0d210c.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d2112.   throw v0;
#L0d2114.   v0:= v3.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2118.   v1:= v3.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d211c.   v2:= v1 + 1;
#L0d2120.   v3.[|java:nio:IntToByteBufferAdapter.position|]  := v2;
#L0d2124.   v1:= v1 * 4;
#L0d2128.   call temp:=  [|java:nio:ByteBuffer.putInt|](v0, v1, v4) @signature [|Ljava/nio/ByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d212e.   return v3  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntToByteBufferAdapter.put|] ([|java:nio:IntToByteBufferAdapter|] v2 @type (this), [|int|] v3, [|int|] v4) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.put:(II)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d2140.   call temp:=  [|java:nio:IntToByteBufferAdapter.checkIndex|](v2, v3) @signature [|Ljava/nio/IntToByteBufferAdapter;.checkIndex:(I)V|] @classDescriptor [|java:nio:IntToByteBufferAdapter|] @type virtual;
#L0d2146.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d214a.   v1:= v3 * 4;
#L0d214e.   call temp:=  [|java:nio:ByteBuffer.putInt|](v0, v1, v4) @signature [|Ljava/nio/ByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2154.   return v2  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntToByteBufferAdapter.put|] ([|java:nio:IntToByteBufferAdapter|] v2 @type (this), [|int|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.put:([III)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d2168.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d216c.   v1:= v2.[|java:nio:IntToByteBufferAdapter.limit|] ;
#L0d2170.   v1:= v1 * 4;
#L0d2174.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d217a.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d217e.   v1:= v2.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d2182.   v1:= v1 * 4;
#L0d2186.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d218c.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2190.   v0:= instanceof @varname v0 @type [|java:nio:ReadWriteDirectByteBuffer|];
#L0d2194.   if v0 == 0 then goto L0d21b2;
#L0d2198.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d219c.   v0:= ([|java:nio:ReadWriteDirectByteBuffer|])v0;
#L0d21a0.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.put|](v0, v3, v4, v5) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([III)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d21a6.   v0:= v2.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d21aa.   v0:= v0 + v5  @type int;
#L0d21ac.   v2.[|java:nio:IntToByteBufferAdapter.position|]  := v0;
#L0d21b0.   return v2  @type object;
#L0d21b2.   v0:= v2.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d21b6.   v0:= ([|java:nio:ReadWriteHeapByteBuffer|])v0;
#L0d21ba.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.put|](v0, v3, v4, v5) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([III)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d21c0.   goto L0d21a6;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:IntToByteBufferAdapter.slice|] ([|java:nio:IntToByteBufferAdapter|] v4 @type (this)) @owner [|java:nio:IntToByteBufferAdapter|] @signature [|Ljava/nio/IntToByteBufferAdapter;.slice:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d21d4.   v2:= v4.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d21d8.   v3:= v4.[|java:nio:IntToByteBufferAdapter.limit|] ;
#L0d21dc.   v3:= v3 * 4;
#L0d21e0.   call temp:=  [|java:nio:ByteBuffer.limit|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d21e6.   v2:= v4.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d21ea.   v3:= v4.[|java:nio:IntToByteBufferAdapter.position|] ;
#L0d21ee.   v3:= v3 * 4;
#L0d21f2.   call temp:=  [|java:nio:ByteBuffer.position|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d21f8.   v2:= v4.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d21fc.   call temp:=  [|java:nio:ByteBuffer.slice|](v2) @signature [|Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2202.   v2:= temp  @type object;
#L0d2204.   v3:= v4.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2208.   call temp:=  [|java:nio:ByteBuffer.order|](v3) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d220e.   v3:= temp  @type object;
#L0d2210.   call temp:=  [|java:nio:ByteBuffer.order|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2216.   v0:= temp  @type object;
#L0d2218.   v1:= new [|java:nio:IntToByteBufferAdapter|];
#L0d221c.   call temp:=  [|java:nio:IntToByteBufferAdapter.<init>|](v1, v0) @signature [|Ljava/nio/IntToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:IntToByteBufferAdapter|] @type direct;
#L0d2222.   v2:= v4.[|java:nio:IntToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2226.   call temp:=  [|java:nio:ByteBuffer.clear|](v2) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d222c.   return v1  @type object;

   }
record [|java:nio:InvalidMarkException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:InvalidMarkException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:InvalidMarkException.<init>|] ([|java:nio:InvalidMarkException|] v0 @type (this)) @owner [|java:nio:InvalidMarkException|] @signature [|Ljava/nio/InvalidMarkException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d2240.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0d2246.   return @void ;

   }
    procedure [|void|] [|java:nio:InvalidMarkException.<init>|] ([|java:nio:InvalidMarkException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:nio:InvalidMarkException|] @signature [|Ljava/nio/InvalidMarkException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d2258.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0d225e.   return @void ;

   }
record [|java:nio:IoVec$Direction|]  @type class @AccessFlag FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:nio:IoVec$Direction|][] @@[|java:nio:IoVec$Direction.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:nio:IoVec$Direction|] @@[|java:nio:IoVec$Direction.READV|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:nio:IoVec$Direction|] @@[|java:nio:IoVec$Direction.WRITEV|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:nio:IoVec$Direction.<clinit>|] () @owner [|java:nio:IoVec$Direction|] @signature [|Ljava/nio/IoVec$Direction;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d2270.   v3:= 1  @length 4;
#L0d2272.   v2:= 0  @length 4;
#L0d2274.   v0:= new [|java:nio:IoVec$Direction|];
#L0d2278.   v1:= "READV" @type (object, string);
#L0d227c.   call temp:=  [|java:nio:IoVec$Direction.<init>|](v0, v1, v2) @signature [|Ljava/nio/IoVec$Direction;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:nio:IoVec$Direction|] @type direct;
#L0d2282.   @@[|java:nio:IoVec$Direction.READV|] := v0  @type object;
#L0d2286.   v0:= new [|java:nio:IoVec$Direction|];
#L0d228a.   v1:= "WRITEV" @type (object, string);
#L0d228e.   call temp:=  [|java:nio:IoVec$Direction.<init>|](v0, v1, v3) @signature [|Ljava/nio/IoVec$Direction;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:nio:IoVec$Direction|] @type direct;
#L0d2294.   @@[|java:nio:IoVec$Direction.WRITEV|] := v0  @type object;
#L0d2298.   v0:= 2  @length 4;
#L0d229a.   v0:= new [|java:nio:IoVec$Direction|][v0];
#L0d229e.   v1:= @@[|java:nio:IoVec$Direction.READV|]   @type object;
#L0d22a2.   v0[v2]:= v1  @type object;
#L0d22a6.   v1:= @@[|java:nio:IoVec$Direction.WRITEV|]   @type object;
#L0d22aa.   v0[v3]:= v1  @type object;
#L0d22ae.   @@[|java:nio:IoVec$Direction.$VALUES|] := v0  @type object;
#L0d22b2.   return @void ;

   }
    procedure [|void|] [|java:nio:IoVec$Direction.<init>|] ([|java:nio:IoVec$Direction|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:nio:IoVec$Direction|] @signature [|Ljava/nio/IoVec$Direction;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0d22c4.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0d22ca.   return @void ;

   }
    procedure [|java:nio:IoVec$Direction|] [|java:nio:IoVec$Direction.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:nio:IoVec$Direction|] @signature [|Ljava/nio/IoVec$Direction;.valueOf:(Ljava/lang/String;)Ljava/nio/IoVec$Direction;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d22dc.   v0:= new [|java:nio:IoVec$Direction|];
#L0d22e0.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0d22e6.   v0:= temp  @type object;
#L0d22e8.   v0:= ([|java:nio:IoVec$Direction|])v0;
#L0d22ec.   return v0  @type object;

   }
    procedure [|java:nio:IoVec$Direction|][] [|java:nio:IoVec$Direction.values|] () @owner [|java:nio:IoVec$Direction|] @signature [|Ljava/nio/IoVec$Direction;.values:()[Ljava/nio/IoVec$Direction;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d2300.   v0:= @@[|java:nio:IoVec$Direction.$VALUES|]   @type object;
#L0d2304.   call temp:=  [|java:nio:IoVec$Direction[].clone|](v0) @signature [|[Ljava/nio/IoVec$Direction;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:nio:IoVec$Direction[]|] @type virtual;
#L0d230a.   v0:= temp  @type object;
#L0d230c.   v0:= ([|java:nio:IoVec$Direction|][])v0;
#L0d2310.   return v0  @type object;

   }
record [|java:nio:IoVec|]  @type class @AccessFlag FINAL  {
      [|int|] [|java:nio:IoVec.bufferCount|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:ByteBuffer|][] [|java:nio:IoVec.byteBuffers|]    @AccessFlag PRIVATE_FINAL;
      [|int|][] [|java:nio:IoVec.byteCounts|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:IoVec$Direction|] [|java:nio:IoVec.direction|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Object|][] [|java:nio:IoVec.ioBuffers|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:nio:IoVec.offset|]    @AccessFlag PRIVATE_FINAL;
      [|int|][] [|java:nio:IoVec.offsets|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:IoVec.<init>|] ([|java:nio:IoVec|] v1 @type (this), [|java:nio:ByteBuffer|][] v2 @type (object), [|int|] v3, [|int|] v4, [|java:nio:IoVec$Direction|] v5 @type (object)) @owner [|java:nio:IoVec|] @signature [|Ljava/nio/IoVec;.<init>:([Ljava/nio/ByteBuffer;IILjava/nio/IoVec$Direction;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d2324.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d232a.   v1.[|java:nio:IoVec.byteBuffers|]  := v2 @type object;
#L0d232e.   v1.[|java:nio:IoVec.offset|]  := v3;
#L0d2332.   v1.[|java:nio:IoVec.bufferCount|]  := v4;
#L0d2336.   v1.[|java:nio:IoVec.direction|]  := v5 @type object;
#L0d233a.   v0:= new [|java:lang:Object|][v4];
#L0d233e.   v1.[|java:nio:IoVec.ioBuffers|]  := v0 @type object;
#L0d2342.   v0:= new [|int|][v4];
#L0d2346.   v1.[|java:nio:IoVec.offsets|]  := v0 @type object;
#L0d234a.   v0:= new [|int|][v4];
#L0d234e.   v1.[|java:nio:IoVec.byteCounts|]  := v0 @type object;
#L0d2352.   return @void ;

   }
    procedure [|void|] [|java:nio:IoVec.didTransfer|] ([|java:nio:IoVec|] v4 @type (this), [|int|] v5) @owner [|java:nio:IoVec|] @signature [|Ljava/nio/IoVec;.didTransfer:(I)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d2364.   v1:= 0  @length 4;
#L0d2366.   if v5 <= 0 then goto L0d23ce;
#L0d236a.   v2:= v4.[|java:nio:IoVec.bufferCount|] ;
#L0d236e.   if v1 >= v2 then goto L0d23ce;
#L0d2372.   v2:= v4.[|java:nio:IoVec.byteBuffers|]   @type object;
#L0d2376.   v3:= v4.[|java:nio:IoVec.offset|] ;
#L0d237a.   v3:= v3 + v1  @type int;
#L0d237c.   v0:= v2[v3]  @type object;
#L0d2380.   v2:= v4.[|java:nio:IoVec.byteCounts|]   @type object;
#L0d2384.   v2:= v2[v1];
#L0d2388.   if v2 >= v5 then goto L0d23aa;
#L0d238c.   call temp:=  [|java:nio:ByteBuffer.limit|](v0) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2392.   v2:= temp;
#L0d2394.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v2) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d239a.   v2:= v4.[|java:nio:IoVec.byteCounts|]   @type object;
#L0d239e.   v2:= v2[v1];
#L0d23a2.   v5:= v5 - v2  @type int;
#L0d23a4.   v1:= v1 + 1;
#L0d23a8.   goto L0d2366;
#L0d23aa.   v2:= v4.[|java:nio:IoVec.direction|]   @type object;
#L0d23ae.   v3:= @@[|java:nio:IoVec$Direction.WRITEV|]   @type object;
#L0d23b2.   if v2 != v3 then goto L0d23ca;
#L0d23b6.   call temp:=  [|java:nio:ByteBuffer.position|](v0) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d23bc.   v2:= temp;
#L0d23be.   v2:= v2 + v5  @type int;
#L0d23c0.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v2) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d23c6.   v5:= 0  @length 4;
#L0d23c8.   goto L0d23a4;
#L0d23ca.   v2:= 0  @length 4;
#L0d23cc.   goto L0d23be;
#L0d23ce.   return @void ;

   }
    procedure [|int|] [|java:nio:IoVec.doTransfer|] ([|java:nio:IoVec|] v6 @type (this), [|java:io:FileDescriptor|] v7 @type (object)) @owner [|java:nio:IoVec|] @signature [|Ljava/nio/IoVec;.doTransfer:(Ljava/io/FileDescriptor;)I|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0d23e0.   v2:= v6.[|java:nio:IoVec.direction|]   @type object;
#L0d23e4.   v3:= @@[|java:nio:IoVec$Direction.READV|]   @type object;
#L0d23e8.   if v2 != v3 then goto L0d240c;
#L0d23ec.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d23f0.   v3:= v6.[|java:nio:IoVec.ioBuffers|]   @type object;
#L0d23f4.   v4:= v6.[|java:nio:IoVec.offsets|]   @type object;
#L0d23f8.   v5:= v6.[|java:nio:IoVec.byteCounts|]   @type object;
#L0d23fc.   call temp:=  [|libcore:io:Os.readv|](v2, v7, v3, v4, v5) @signature [|Llibcore/io/Os;.readv:(Ljava/io/FileDescriptor;[Ljava/lang/Object;[I[I)I|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d2402.   v1:= temp;
#L0d2404.   if v1 != 0 then goto L0d240a;
#L0d2408.   v1:= -1  @length 4;
#L0d240a.   return v1;
#L0d240c.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d2410.   v3:= v6.[|java:nio:IoVec.ioBuffers|]   @type object;
#L0d2414.   v4:= v6.[|java:nio:IoVec.offsets|]   @type object;
#L0d2418.   v5:= v6.[|java:nio:IoVec.byteCounts|]   @type object;
#L0d241c.   call temp:=  [|libcore:io:Os.writev|](v2, v7, v3, v4, v5) @signature [|Llibcore/io/Os;.writev:(Ljava/io/FileDescriptor;[Ljava/lang/Object;[I[I)I|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d2422.   v1:= temp;
#L0d2424.   goto L0d240a;
#L0d2426.   v0:= Exception  @type object;
#L0d2428.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L0d242e.   v2:= temp  @type object;
#L0d2430.   throw v2;
  catch  [|libcore:io:ErrnoException|] @[L0d23e0..L0d2422] goto L0d2426;

   }
    procedure [|int|] [|java:nio:IoVec.init|] ([|java:nio:IoVec|] v7 @type (this)) @owner [|java:nio:IoVec|] @signature [|Ljava/nio/IoVec;.init:()I|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d2454.   v3:= 0  @length 4;
#L0d2456.   v1:= 0  @length 4;
#L0d2458.   v4:= v7.[|java:nio:IoVec.bufferCount|] ;
#L0d245c.   if v1 >= v4 then goto L0d24e8;
#L0d2460.   v4:= v7.[|java:nio:IoVec.byteBuffers|]   @type object;
#L0d2464.   v5:= v7.[|java:nio:IoVec.offset|] ;
#L0d2468.   v5:= v5 + v1  @type int;
#L0d246a.   v0:= v4[v5]  @type object;
#L0d246e.   v4:= v7.[|java:nio:IoVec.direction|]   @type object;
#L0d2472.   v5:= @@[|java:nio:IoVec$Direction.READV|]   @type object;
#L0d2476.   if v4 != v5 then goto L0d2480;
#L0d247a.   call temp:=  [|java:nio:ByteBuffer.checkWritable|](v0) @signature [|Ljava/nio/ByteBuffer;.checkWritable:()V|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2480.   call temp:=  [|java:nio:ByteBuffer.remaining|](v0) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2486.   v2:= temp;
#L0d2488.   call temp:=  [|java:nio:ByteBuffer.isDirect|](v0) @signature [|Ljava/nio/ByteBuffer;.isDirect:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d248e.   v4:= temp;
#L0d2490.   if v4 == 0 then goto L0d24bc;
#L0d2494.   v4:= v7.[|java:nio:IoVec.ioBuffers|]   @type object;
#L0d2498.   v4[v1]:= v0  @type object;
#L0d249c.   v4:= v7.[|java:nio:IoVec.offsets|]   @type object;
#L0d24a0.   call temp:=  [|java:nio:ByteBuffer.position|](v0) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d24a6.   v5:= temp;
#L0d24a8.   v4[v1]:= v5;
#L0d24ac.   v4:= v7.[|java:nio:IoVec.byteCounts|]   @type object;
#L0d24b0.   v4[v1]:= v2;
#L0d24b4.   v3:= v3 + v2  @type int;
#L0d24b6.   v1:= v1 + 1;
#L0d24ba.   goto L0d2458;
#L0d24bc.   v4:= v7.[|java:nio:IoVec.ioBuffers|]   @type object;
#L0d24c0.   call temp:=  [|java:nio:NioUtils.unsafeArray|](v0) @signature [|Ljava/nio/NioUtils;.unsafeArray:(Ljava/nio/ByteBuffer;)[B|] @classDescriptor [|java:nio:NioUtils|] @type static;
#L0d24c6.   v5:= temp  @type object;
#L0d24c8.   v4[v1]:= v5  @type object;
#L0d24cc.   v4:= v7.[|java:nio:IoVec.offsets|]   @type object;
#L0d24d0.   call temp:=  [|java:nio:NioUtils.unsafeArrayOffset|](v0) @signature [|Ljava/nio/NioUtils;.unsafeArrayOffset:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:NioUtils|] @type static;
#L0d24d6.   v5:= temp;
#L0d24d8.   call temp:=  [|java:nio:ByteBuffer.position|](v0) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d24de.   v6:= temp;
#L0d24e0.   v5:= v5 + v6  @type int;
#L0d24e2.   v4[v1]:= v5;
#L0d24e6.   goto L0d24ac;
#L0d24e8.   return v3;

   }
record [|java:nio:LongBuffer|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:Buffer|], [|java:lang:Comparable|] {
   }
    procedure [|void|] [|java:nio:LongBuffer.<init>|] ([|java:nio:LongBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d24fc.   v0:= 3  @length 4;
#L0d24fe.   v1:= 0  @length 4;
#L0d2500.   call temp:=  [|java:nio:Buffer.<init>|](v2, v0, v3, v1) @signature [|Ljava/nio/Buffer;.<init>:(IILjava/nio/MemoryBlock;)V|] @classDescriptor [|java:nio:Buffer|] @type direct;
#L0d2506.   return @void ;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.allocate|] ([|int|] v3) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.allocate:(I)Ljava/nio/LongBuffer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d2518.   if v3 >= 0 then goto L0d254e;
#L0d251c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0d2520.   v1:= new [|java:lang:StringBuilder|];
#L0d2524.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0d252a.   v2:= "capacity < 0: " @type (object, string);
#L0d252e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d2534.   v1:= temp  @type object;
#L0d2536.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d253c.   v1:= temp  @type object;
#L0d253e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d2544.   v1:= temp  @type object;
#L0d2546.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d254c.   throw v0;
#L0d254e.   v0:= new [|java:nio:ReadWriteLongArrayBuffer|];
#L0d2552.   call temp:=  [|java:nio:ReadWriteLongArrayBuffer.<init>|](v0, v3) @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:ReadWriteLongArrayBuffer|] @type direct;
#L0d2558.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.wrap|] ([|long|][] v2) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.wrap:([J)Ljava/nio/LongBuffer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0d256c.   v0:= 0  @length 4;
#L0d256e.   v1:= v2.length;
#L0d2570.   call temp:=  [|java:nio:LongBuffer.wrap|](v2, v0, v1) @signature [|Ljava/nio/LongBuffer;.wrap:([JII)Ljava/nio/LongBuffer;|] @classDescriptor [|java:nio:LongBuffer|] @type static;
#L0d2576.   v0:= temp  @type object;
#L0d2578.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.wrap|] ([|long|][] v2, [|int|] v4, [|int|] v5) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.wrap:([JII)Ljava/nio/LongBuffer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0d258c.   v1:= v2.length;
#L0d258e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v3, v4) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d2594.   v0:= new [|java:nio:ReadWriteLongArrayBuffer|];
#L0d2598.   call temp:=  [|java:nio:ReadWriteLongArrayBuffer.<init>|](v0, v2) @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.<init>:([J)V|] @classDescriptor [|java:nio:ReadWriteLongArrayBuffer|] @type direct;
#L0d259e.   v0.[|java:nio:LongBuffer.position|]  := v3;
#L0d25a2.   v1:= v3 + v4  @type int;
#L0d25a6.   v0.[|java:nio:LongBuffer.limit|]  := v1;
#L0d25aa.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:nio:LongBuffer.array|] ([|java:nio:LongBuffer|] v1 @type (this)) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.array:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0d25bc.   call temp:=  [|java:nio:LongBuffer.array|](v1) @signature [|Ljava/nio/LongBuffer;.array:()[J|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d25c2.   v0:= temp  @type object;
#L0d25c4.   return v0  @type object;

   }
    procedure [|long|][] [|java:nio:LongBuffer.array|] ([|java:nio:LongBuffer|] v1 @type (this)) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.array:()[J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d25d8.   call temp:=  [|java:nio:LongBuffer.protectedArray|](v1) @signature [|Ljava/nio/LongBuffer;.protectedArray:()[J|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d25de.   v0:= temp  @type object;
#L0d25e0.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:LongBuffer.arrayOffset|] ([|java:nio:LongBuffer|] v1 @type (this)) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.arrayOffset:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d25f4.   call temp:=  [|java:nio:LongBuffer.protectedArrayOffset|](v1) @signature [|Ljava/nio/LongBuffer;.protectedArrayOffset:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d25fa.   v0:= temp;
#L0d25fc.   return v0;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.asReadOnlyBuffer|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.asReadOnlyBuffer:()Ljava/nio/LongBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.compact|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.compact:()Ljava/nio/LongBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:LongBuffer.compareTo|] ([|java:nio:LongBuffer|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0d2610.   v2:= ([|java:nio:LongBuffer|])v2;
#L0d2614.   call temp:=  [|java:nio:LongBuffer.compareTo|](v1, v2) @signature [|Ljava/nio/LongBuffer;.compareTo:(Ljava/nio/LongBuffer;)I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d261a.   v0:= temp;
#L0d261c.   return v0;

   }
    procedure [|int|] [|java:nio:LongBuffer.compareTo|] ([|java:nio:LongBuffer|] v9 @type (this), [|java:nio:LongBuffer|] v10 @type (object)) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.compareTo:(Ljava/nio/LongBuffer;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0d2630.   call temp:=  [|java:nio:LongBuffer.remaining|](v9) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2636.   v7:= temp;
#L0d2638.   call temp:=  [|java:nio:LongBuffer.remaining|](v10) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d263e.   v8:= temp;
#L0d2640.   if v7 >= v8 then goto L0d267c;
#L0d2644.   call temp:=  [|java:nio:LongBuffer.remaining|](v9) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d264a.   v0:= temp;
#L0d264c.   v6:= v9.[|java:nio:LongBuffer.position|] ;
#L0d2650.   v3:= v10.[|java:nio:LongBuffer.position|] ;
#L0d2654.   if v0 <= 0 then goto L0d2698;
#L0d2658.   call temp:=  [|java:nio:LongBuffer.get|](v9, v6) @signature [|Ljava/nio/LongBuffer;.get:(I)J|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d265e.   v4:= temp  @type wide;
#L0d2660.   call temp:=  [|java:nio:LongBuffer.get|](v10, v3) @signature [|Ljava/nio/LongBuffer;.get:(I)J|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2666.   v1:= temp  @type wide;
#L0d2668.   v7:= cmp(v4,v1);
#L0d266c.   if v7 == 0 then goto L0d268a;
#L0d2670.   v7:= cmp(v4,v1);
#L0d2674.   if v7 >= 0 then goto L0d2686;
#L0d2678.   v7:= -1  @length 4;
#L0d267a.   return v7;
#L0d267c.   call temp:=  [|java:nio:LongBuffer.remaining|](v10) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2682.   v0:= temp;
#L0d2684.   goto L0d264c;
#L0d2686.   v7:= 1  @length 4;
#L0d2688.   goto L0d267a;
#L0d268a.   v6:= v6 + 1;
#L0d268e.   v3:= v3 + 1;
#L0d2692.   v0:= v0 + -1;
#L0d2696.   goto L0d2654;
#L0d2698.   call temp:=  [|java:nio:LongBuffer.remaining|](v9) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d269e.   v7:= temp;
#L0d26a0.   call temp:=  [|java:nio:LongBuffer.remaining|](v10) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d26a6.   v8:= temp;
#L0d26a8.   v7:= v7 - v8  @type int;
#L0d26aa.   goto L0d267a;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.duplicate|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.duplicate:()Ljava/nio/LongBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:LongBuffer.equals|] ([|java:nio:LongBuffer|] v11 @type (this), [|java:lang:Object|] v12 @type (object)) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L0d26bc.   v6:= 0  @length 4;
#L0d26be.   v7:= instanceof @varname v12 @type [|java:nio:LongBuffer|];
#L0d26c2.   if v7 != 0 then goto L0d26c8;
#L0d26c6.   return v6;
#L0d26c8.   v3:= v12  @type object;
#L0d26ca.   v3:= ([|java:nio:LongBuffer|])v3;
#L0d26ce.   call temp:=  [|java:nio:LongBuffer.remaining|](v11) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d26d4.   v7:= temp;
#L0d26d6.   call temp:=  [|java:nio:LongBuffer.remaining|](v3) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d26dc.   v8:= temp;
#L0d26de.   if v7 != v8 then goto L0d26c6;
#L0d26e2.   v1:= v11.[|java:nio:LongBuffer.position|] ;
#L0d26e6.   v4:= v3.[|java:nio:LongBuffer.position|] ;
#L0d26ea.   v0:= 1  @length 4;
#L0d26ec.   v5:= v4;
#L0d26ee.   v2:= v1;
#L0d26f0.   if v0 == 0 then goto L0d2728;
#L0d26f4.   v7:= v11.[|java:nio:LongBuffer.limit|] ;
#L0d26f8.   if v2 >= v7 then goto L0d2728;
#L0d26fc.   v1:= v2 + 1;
#L0d2700.   call temp:=  [|java:nio:LongBuffer.get|](v11, v2) @signature [|Ljava/nio/LongBuffer;.get:(I)J|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2706.   v7:= temp  @type wide;
#L0d2708.   v4:= v5 + 1;
#L0d270c.   call temp:=  [|java:nio:LongBuffer.get|](v3, v5) @signature [|Ljava/nio/LongBuffer;.get:(I)J|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2712.   v9:= temp  @type wide;
#L0d2714.   v7:= cmp(v7,v9);
#L0d2718.   if v7 != 0 then goto L0d2724;
#L0d271c.   v0:= 1  @length 4;
#L0d271e.   v5:= v4;
#L0d2720.   v2:= v1;
#L0d2722.   goto L0d26f0;
#L0d2724.   v0:= v6;
#L0d2726.   goto L0d271e;
#L0d2728.   v6:= v0;
#L0d272a.   goto L0d26c6;

   }
    procedure [|long|] [|java:nio:LongBuffer.get|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.get:()J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:nio:LongBuffer.get|] ([|int|] v0) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.get:(I)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.get|] ([|java:nio:LongBuffer|] v2 @type (this), [|long|][] v3) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.get:([J)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d273c.   v0:= 0  @length 4;
#L0d273e.   v1:= v3.length;
#L0d2740.   call temp:=  [|java:nio:LongBuffer.get|](v2, v3, v0, v1) @signature [|Ljava/nio/LongBuffer;.get:([JII)Ljava/nio/LongBuffer;|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2746.   v0:= temp  @type object;
#L0d2748.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.get|] ([|java:nio:LongBuffer|] v3 @type (this), [|long|][] v4, [|int|] v6, [|int|] v7) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.get:([JII)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d275c.   v1:= v4.length;
#L0d275e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v5, v6) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d2764.   call temp:=  [|java:nio:LongBuffer.remaining|](v3) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d276a.   v1:= temp;
#L0d276c.   if v6 <= v1 then goto L0d277c;
#L0d2770.   v1:= new [|java:nio:BufferUnderflowException|];
#L0d2774.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v1) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d277a.   throw v1;
#L0d277c.   v0:= v5;
#L0d277e.   v1:= v5 + v6  @type int;
#L0d2782.   if v0 >= v1 then goto L0d2798;
#L0d2786.   call temp:=  [|java:nio:LongBuffer.get|](v3) @signature [|Ljava/nio/LongBuffer;.get:()J|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d278c.   v1:= temp  @type wide;
#L0d278e.   v4[v0]:= v1  @wide;
#L0d2792.   v0:= v0 + 1;
#L0d2796.   goto L0d277e;
#L0d2798.   return v3  @type object;

   }
    procedure [|boolean|] [|java:nio:LongBuffer.hasArray|] ([|java:nio:LongBuffer|] v1 @type (this)) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.hasArray:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d27ac.   call temp:=  [|java:nio:LongBuffer.protectedHasArray|](v1) @signature [|Ljava/nio/LongBuffer;.protectedHasArray:()Z|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d27b2.   v0:= temp;
#L0d27b4.   return v0;

   }
    procedure [|int|] [|java:nio:LongBuffer.hashCode|] ([|java:nio:LongBuffer|] v8 @type (this)) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0d27c8.   v3:= v8.[|java:nio:LongBuffer.position|] ;
#L0d27cc.   v0:= 0  @length 4;
#L0d27ce.   v5:= v8.[|java:nio:LongBuffer.limit|] ;
#L0d27d2.   if v3 >= v5 then goto L0d27f8;
#L0d27d6.   v4:= v3 + 1;
#L0d27da.   call temp:=  [|java:nio:LongBuffer.get|](v8, v3) @signature [|Ljava/nio/LongBuffer;.get:(I)J|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d27e0.   v1:= temp  @type wide;
#L0d27e2.   v5:= (int)v1  @type l2i;
#L0d27e4.   v5:= v5 + v0  @type int;
#L0d27e6.   v6:= 32  @length 16;
#L0d27ea.   v6:= v1 ^> v6  @type long;
#L0d27ee.   v6:= (int)v6  @type l2i;
#L0d27f0.   v0:= v5 ^~ v6  @type int;
#L0d27f4.   v3:= v4;
#L0d27f6.   goto L0d27ce;
#L0d27f8.   return v0;

   }
    procedure [|boolean|] [|java:nio:LongBuffer.isDirect|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.isDirect:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:ByteOrder|] [|java:nio:LongBuffer.order|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.order:()Ljava/nio/ByteOrder;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|][] [|java:nio:LongBuffer.protectedArray|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.protectedArray:()[J|] @Access ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:LongBuffer.protectedArrayOffset|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.protectedArrayOffset:()I|] @Access ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:LongBuffer.protectedHasArray|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.protectedHasArray:()Z|] @Access ABSTRACT {
      # return;
   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.put|] ([|int|] v0, [|long|] v1) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.put:(IJ)Ljava/nio/LongBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.put|] ([|long|] v0) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.put:(J)Ljava/nio/LongBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.put|] ([|java:nio:LongBuffer|] v3 @type (this), [|java:nio:LongBuffer|] v4 @type (object)) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.put:(Ljava/nio/LongBuffer;)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d280c.   if v4 != v3 then goto L0d2820;
#L0d2810.   v1:= new [|java:lang:IllegalArgumentException|];
#L0d2814.   v2:= "src == this" @type (object, string);
#L0d2818.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d281e.   throw v1;
#L0d2820.   call temp:=  [|java:nio:LongBuffer.remaining|](v4) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2826.   v1:= temp;
#L0d2828.   call temp:=  [|java:nio:LongBuffer.remaining|](v3) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d282e.   v2:= temp;
#L0d2830.   if v1 <= v2 then goto L0d2840;
#L0d2834.   v1:= new [|java:nio:BufferOverflowException|];
#L0d2838.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d283e.   throw v1;
#L0d2840.   call temp:=  [|java:nio:LongBuffer.remaining|](v4) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2846.   v1:= temp;
#L0d2848.   v0:= new [|long|][v1];
#L0d284c.   call temp:=  [|java:nio:LongBuffer.get|](v4, v0) @signature [|Ljava/nio/LongBuffer;.get:([J)Ljava/nio/LongBuffer;|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2852.   call temp:=  [|java:nio:LongBuffer.put|](v3, v0) @signature [|Ljava/nio/LongBuffer;.put:([J)Ljava/nio/LongBuffer;|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2858.   return v3  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.put|] ([|java:nio:LongBuffer|] v2 @type (this), [|long|][] v3) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.put:([J)Ljava/nio/LongBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d286c.   v0:= 0  @length 4;
#L0d286e.   v1:= v3.length;
#L0d2870.   call temp:=  [|java:nio:LongBuffer.put|](v2, v3, v0, v1) @signature [|Ljava/nio/LongBuffer;.put:([JII)Ljava/nio/LongBuffer;|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d2876.   v0:= temp  @type object;
#L0d2878.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.put|] ([|java:nio:LongBuffer|] v3 @type (this), [|long|][] v4, [|int|] v6, [|int|] v7) @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.put:([JII)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d288c.   v1:= v4.length;
#L0d288e.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v5, v6) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d2894.   call temp:=  [|java:nio:LongBuffer.remaining|](v3) @signature [|Ljava/nio/LongBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d289a.   v1:= temp;
#L0d289c.   if v6 <= v1 then goto L0d28ac;
#L0d28a0.   v1:= new [|java:nio:BufferOverflowException|];
#L0d28a4.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d28aa.   throw v1;
#L0d28ac.   v0:= v5;
#L0d28ae.   v1:= v5 + v6  @type int;
#L0d28b2.   if v0 >= v1 then goto L0d28c6;
#L0d28b6.   v1:= v4[v0]  @wide;
#L0d28ba.   call temp:=  [|java:nio:LongBuffer.put|](v3, v1, v2) @signature [|Ljava/nio/LongBuffer;.put:(J)Ljava/nio/LongBuffer;|] @classDescriptor [|java:nio:LongBuffer|] @type virtual;
#L0d28c0.   v0:= v0 + 1;
#L0d28c4.   goto L0d28ae;
#L0d28c6.   return v3  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongBuffer.slice|] () @owner [|java:nio:LongBuffer|] @signature [|Ljava/nio/LongBuffer;.slice:()Ljava/nio/LongBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:nio:LongArrayBuffer|]  @type class @AccessFlag ABSTRACT  extends [|java:nio:LongBuffer|] {
      [|long|][] [|java:nio:LongArrayBuffer.backingArray|]    @AccessFlag PROTECTED_FINAL;
      [|int|] [|java:nio:LongArrayBuffer.offset|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|java:nio:LongArrayBuffer.<init>|] ([|java:nio:LongArrayBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:LongArrayBuffer|] @signature [|Ljava/nio/LongArrayBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d28d8.   v0:= new [|long|][v3];
#L0d28dc.   v1:= 0  @length 4;
#L0d28de.   call temp:=  [|java:nio:LongArrayBuffer.<init>|](v2, v3, v0, v1) @signature [|Ljava/nio/LongArrayBuffer;.<init>:(I[JI)V|] @classDescriptor [|java:nio:LongArrayBuffer|] @type direct;
#L0d28e4.   return @void ;

   }
    procedure [|void|] [|java:nio:LongArrayBuffer.<init>|] ([|java:nio:LongArrayBuffer|] v0 @type (this), [|int|] v1, [|long|][] v2, [|int|] v4) @owner [|java:nio:LongArrayBuffer|] @signature [|Ljava/nio/LongArrayBuffer;.<init>:(I[JI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d28f8.   call temp:=  [|java:nio:LongBuffer.<init>|](v0, v1) @signature [|Ljava/nio/LongBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:LongBuffer|] @type direct;
#L0d28fe.   v0.[|java:nio:LongArrayBuffer.backingArray|]  := v2 @type object;
#L0d2902.   v0.[|java:nio:LongArrayBuffer.offset|]  := v3;
#L0d2906.   return @void ;

   }
    procedure [|void|] [|java:nio:LongArrayBuffer.<init>|] ([|java:nio:LongArrayBuffer|] v2 @type (this), [|long|][] v3) @owner [|java:nio:LongArrayBuffer|] @signature [|Ljava/nio/LongArrayBuffer;.<init>:([J)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d2918.   v0:= v3.length;
#L0d291a.   v1:= 0  @length 4;
#L0d291c.   call temp:=  [|java:nio:LongArrayBuffer.<init>|](v2, v0, v3, v1) @signature [|Ljava/nio/LongArrayBuffer;.<init>:(I[JI)V|] @classDescriptor [|java:nio:LongArrayBuffer|] @type direct;
#L0d2922.   return @void ;

   }
    procedure [|long|] [|java:nio:LongArrayBuffer.get|] ([|java:nio:LongArrayBuffer|] v4 @type (this)) @owner [|java:nio:LongArrayBuffer|] @signature [|Ljava/nio/LongArrayBuffer;.get:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d2934.   v0:= v4.[|java:nio:LongArrayBuffer.position|] ;
#L0d2938.   v1:= v4.[|java:nio:LongArrayBuffer.limit|] ;
#L0d293c.   if v0 != v1 then goto L0d294c;
#L0d2940.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d2944.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d294a.   throw v0;
#L0d294c.   v0:= v4.[|java:nio:LongArrayBuffer.backingArray|]   @type object;
#L0d2950.   v1:= v4.[|java:nio:LongArrayBuffer.offset|] ;
#L0d2954.   v2:= v4.[|java:nio:LongArrayBuffer.position|] ;
#L0d2958.   v3:= v2 + 1;
#L0d295c.   v4.[|java:nio:LongArrayBuffer.position|]  := v3;
#L0d2960.   v1:= v1 + v2  @type int;
#L0d2962.   v0:= v0[v1]  @wide;
#L0d2966.   return v0  @type wide;

   }
    procedure [|long|] [|java:nio:LongArrayBuffer.get|] ([|java:nio:LongArrayBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:LongArrayBuffer|] @signature [|Ljava/nio/LongArrayBuffer;.get:(I)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d2978.   call temp:=  [|java:nio:LongArrayBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/LongArrayBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:LongArrayBuffer|] @type virtual;
#L0d297e.   v0:= v2.[|java:nio:LongArrayBuffer.backingArray|]   @type object;
#L0d2982.   v1:= v2.[|java:nio:LongArrayBuffer.offset|] ;
#L0d2986.   v1:= v1 + v3  @type int;
#L0d2988.   v0:= v0[v1]  @wide;
#L0d298c.   return v0  @type wide;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongArrayBuffer.get|] ([|java:nio:LongArrayBuffer|] v3 @type (this), [|long|][] v4, [|int|] v6, [|int|] v7) @owner [|java:nio:LongArrayBuffer|] @signature [|Ljava/nio/LongArrayBuffer;.get:([JII)Ljava/nio/LongBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d29a0.   call temp:=  [|java:nio:LongArrayBuffer.remaining|](v3) @signature [|Ljava/nio/LongArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:LongArrayBuffer|] @type virtual;
#L0d29a6.   v0:= temp;
#L0d29a8.   if v6 <= v0 then goto L0d29b8;
#L0d29ac.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d29b0.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d29b6.   throw v0;
#L0d29b8.   v0:= v3.[|java:nio:LongArrayBuffer.backingArray|]   @type object;
#L0d29bc.   v1:= v3.[|java:nio:LongArrayBuffer.offset|] ;
#L0d29c0.   v2:= v3.[|java:nio:LongArrayBuffer.position|] ;
#L0d29c4.   v1:= v1 + v2  @type int;
#L0d29c6.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v4, v5, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d29cc.   v0:= v3.[|java:nio:LongArrayBuffer.position|] ;
#L0d29d0.   v0:= v0 + v6  @type int;
#L0d29d2.   v3.[|java:nio:LongArrayBuffer.position|]  := v0;
#L0d29d6.   return v3  @type object;

   }
    procedure [|boolean|] [|java:nio:LongArrayBuffer.isDirect|] ([|java:nio:LongArrayBuffer|] v1 @type (this)) @owner [|java:nio:LongArrayBuffer|] @signature [|Ljava/nio/LongArrayBuffer;.isDirect:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d29e8.   v0:= 0  @length 4;
#L0d29ea.   return v0;

   }
    procedure [|java:nio:ByteOrder|] [|java:nio:LongArrayBuffer.order|] ([|java:nio:LongArrayBuffer|] v1 @type (this)) @owner [|java:nio:LongArrayBuffer|] @signature [|Ljava/nio/LongArrayBuffer;.order:()Ljava/nio/ByteOrder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d29fc.   call temp:=  [|java:nio:ByteOrder.nativeOrder|]() @signature [|Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteOrder|] @type static;
#L0d2a02.   v0:= temp  @type object;
#L0d2a04.   return v0  @type object;

   }
record [|java:nio:LongToByteBufferAdapter|]  @type class @AccessFlag FINAL  extends [|java:nio:LongBuffer|] {
      [|java:nio:ByteBuffer|] [|java:nio:LongToByteBufferAdapter.byteBuffer|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:LongToByteBufferAdapter.<init>|] ([|java:nio:LongToByteBufferAdapter|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d2a18.   call temp:=  [|java:nio:ByteBuffer.capacity|](v2) @signature [|Ljava/nio/ByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2a1e.   v0:= temp;
#L0d2a20.   v0:= v0 / 8;
#L0d2a24.   call temp:=  [|java:nio:LongBuffer.<init>|](v1, v0) @signature [|Ljava/nio/LongBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:LongBuffer|] @type direct;
#L0d2a2a.   v1.[|java:nio:LongToByteBufferAdapter.byteBuffer|]  := v2 @type object;
#L0d2a2e.   v0:= v1.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2a32.   call temp:=  [|java:nio:ByteBuffer.clear|](v0) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2a38.   v0:= v2.[|java:nio:ByteBuffer.effectiveDirectAddress|] ;
#L0d2a3c.   v1.[|java:nio:LongToByteBufferAdapter.effectiveDirectAddress|]  := v0;
#L0d2a40.   return @void ;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongToByteBufferAdapter.asLongBuffer|] ([|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.asLongBuffer:(Ljava/nio/ByteBuffer;)Ljava/nio/LongBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0d2a54.   call temp:=  [|java:nio:ByteBuffer.slice|](v2) @signature [|Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2a5a.   v0:= temp  @type object;
#L0d2a5c.   call temp:=  [|java:nio:ByteBuffer.order|](v2) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2a62.   v1:= temp  @type object;
#L0d2a64.   call temp:=  [|java:nio:ByteBuffer.order|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2a6a.   v1:= new [|java:nio:LongToByteBufferAdapter|];
#L0d2a6e.   call temp:=  [|java:nio:LongToByteBufferAdapter.<init>|](v1, v0) @signature [|Ljava/nio/LongToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:LongToByteBufferAdapter|] @type direct;
#L0d2a74.   return v1  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongToByteBufferAdapter.asReadOnlyBuffer|] ([|java:nio:LongToByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.asReadOnlyBuffer:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d2a88.   v0:= new [|java:nio:LongToByteBufferAdapter|];
#L0d2a8c.   v1:= v3.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2a90.   call temp:=  [|java:nio:ByteBuffer.asReadOnlyBuffer|](v1) @signature [|Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2a96.   v1:= temp  @type object;
#L0d2a98.   call temp:=  [|java:nio:LongToByteBufferAdapter.<init>|](v0, v1) @signature [|Ljava/nio/LongToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:LongToByteBufferAdapter|] @type direct;
#L0d2a9e.   v1:= v3.[|java:nio:LongToByteBufferAdapter.limit|] ;
#L0d2aa2.   v0.[|java:nio:LongToByteBufferAdapter.limit|]  := v1;
#L0d2aa6.   v1:= v3.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2aaa.   v0.[|java:nio:LongToByteBufferAdapter.position|]  := v1;
#L0d2aae.   v1:= v3.[|java:nio:LongToByteBufferAdapter.mark|] ;
#L0d2ab2.   v0.[|java:nio:LongToByteBufferAdapter.mark|]  := v1;
#L0d2ab6.   v1:= v0.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2aba.   v2:= v3.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2abe.   v2:= v2.[|java:nio:ByteBuffer.order|]   @type object;
#L0d2ac2.   v1.[|java:nio:ByteBuffer.order|]  := v2 @type object;
#L0d2ac6.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongToByteBufferAdapter.compact|] ([|java:nio:LongToByteBufferAdapter|] v2 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.compact:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d2ad8.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2adc.   call temp:=  [|java:nio:ByteBuffer.isReadOnly|](v0) @signature [|Ljava/nio/ByteBuffer;.isReadOnly:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2ae2.   v0:= temp;
#L0d2ae4.   if v0 == 0 then goto L0d2af4;
#L0d2ae8.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d2aec.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d2af2.   throw v0;
#L0d2af4.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2af8.   v1:= v2.[|java:nio:LongToByteBufferAdapter.limit|] ;
#L0d2afc.   v1:= v1 * 8;
#L0d2b00.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2b06.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2b0a.   v1:= v2.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2b0e.   v1:= v1 * 8;
#L0d2b12.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2b18.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2b1c.   call temp:=  [|java:nio:ByteBuffer.compact|](v0) @signature [|Ljava/nio/ByteBuffer;.compact:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2b22.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2b26.   call temp:=  [|java:nio:ByteBuffer.clear|](v0) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2b2c.   v0:= v2.[|java:nio:LongToByteBufferAdapter.limit|] ;
#L0d2b30.   v1:= v2.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2b34.   v0:= v0 - v1  @type int;
#L0d2b36.   v2.[|java:nio:LongToByteBufferAdapter.position|]  := v0;
#L0d2b3a.   v0:= v2.[|java:nio:LongToByteBufferAdapter.capacity|] ;
#L0d2b3e.   v2.[|java:nio:LongToByteBufferAdapter.limit|]  := v0;
#L0d2b42.   v0:= -1  @length 4;
#L0d2b44.   v2.[|java:nio:LongToByteBufferAdapter.mark|]  := v0;
#L0d2b48.   return v2  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongToByteBufferAdapter.duplicate|] ([|java:nio:LongToByteBufferAdapter|] v4 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.duplicate:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d2b5c.   v2:= v4.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2b60.   call temp:=  [|java:nio:ByteBuffer.duplicate|](v2) @signature [|Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2b66.   v2:= temp  @type object;
#L0d2b68.   v3:= v4.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2b6c.   call temp:=  [|java:nio:ByteBuffer.order|](v3) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2b72.   v3:= temp  @type object;
#L0d2b74.   call temp:=  [|java:nio:ByteBuffer.order|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2b7a.   v0:= temp  @type object;
#L0d2b7c.   v1:= new [|java:nio:LongToByteBufferAdapter|];
#L0d2b80.   call temp:=  [|java:nio:LongToByteBufferAdapter.<init>|](v1, v0) @signature [|Ljava/nio/LongToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:LongToByteBufferAdapter|] @type direct;
#L0d2b86.   v2:= v4.[|java:nio:LongToByteBufferAdapter.limit|] ;
#L0d2b8a.   v1.[|java:nio:LongToByteBufferAdapter.limit|]  := v2;
#L0d2b8e.   v2:= v4.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2b92.   v1.[|java:nio:LongToByteBufferAdapter.position|]  := v2;
#L0d2b96.   v2:= v4.[|java:nio:LongToByteBufferAdapter.mark|] ;
#L0d2b9a.   v1.[|java:nio:LongToByteBufferAdapter.mark|]  := v2;
#L0d2b9e.   return v1  @type object;

   }
    procedure [|long|] [|java:nio:LongToByteBufferAdapter.get|] ([|java:nio:LongToByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.get:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d2bb0.   v0:= v3.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2bb4.   v1:= v3.[|java:nio:LongToByteBufferAdapter.limit|] ;
#L0d2bb8.   if v0 != v1 then goto L0d2bc8;
#L0d2bbc.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d2bc0.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d2bc6.   throw v0;
#L0d2bc8.   v0:= v3.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2bcc.   v1:= v3.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2bd0.   v2:= v1 + 1;
#L0d2bd4.   v3.[|java:nio:LongToByteBufferAdapter.position|]  := v2;
#L0d2bd8.   v1:= v1 * 8;
#L0d2bdc.   call temp:=  [|java:nio:ByteBuffer.getLong|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.getLong:(I)J|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2be2.   v0:= temp  @type wide;
#L0d2be4.   return v0  @type wide;

   }
    procedure [|long|] [|java:nio:LongToByteBufferAdapter.get|] ([|java:nio:LongToByteBufferAdapter|] v2 @type (this), [|int|] v3) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.get:(I)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d2bf8.   call temp:=  [|java:nio:LongToByteBufferAdapter.checkIndex|](v2, v3) @signature [|Ljava/nio/LongToByteBufferAdapter;.checkIndex:(I)V|] @classDescriptor [|java:nio:LongToByteBufferAdapter|] @type virtual;
#L0d2bfe.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2c02.   v1:= v3 * 8;
#L0d2c06.   call temp:=  [|java:nio:ByteBuffer.getLong|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.getLong:(I)J|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2c0c.   v0:= temp  @type wide;
#L0d2c0e.   return v0  @type wide;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongToByteBufferAdapter.get|] ([|java:nio:LongToByteBufferAdapter|] v2 @type (this), [|long|][] v3, [|int|] v5, [|int|] v6) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.get:([JII)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d2c20.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2c24.   v1:= v2.[|java:nio:LongToByteBufferAdapter.limit|] ;
#L0d2c28.   v1:= v1 * 8;
#L0d2c2c.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2c32.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2c36.   v1:= v2.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2c3a.   v1:= v1 * 8;
#L0d2c3e.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2c44.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2c48.   v0:= instanceof @varname v0 @type [|java:nio:DirectByteBuffer|];
#L0d2c4c.   if v0 == 0 then goto L0d2c6a;
#L0d2c50.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2c54.   v0:= ([|java:nio:DirectByteBuffer|])v0;
#L0d2c58.   call temp:=  [|java:nio:DirectByteBuffer.get|](v0, v3, v4, v5) @signature [|Ljava/nio/DirectByteBuffer;.get:([JII)V|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d2c5e.   v0:= v2.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2c62.   v0:= v0 + v5  @type int;
#L0d2c64.   v2.[|java:nio:LongToByteBufferAdapter.position|]  := v0;
#L0d2c68.   return v2  @type object;
#L0d2c6a.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2c6e.   v0:= ([|java:nio:HeapByteBuffer|])v0;
#L0d2c72.   call temp:=  [|java:nio:HeapByteBuffer.get|](v0, v3, v4, v5) @signature [|Ljava/nio/HeapByteBuffer;.get:([JII)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d2c78.   goto L0d2c5e;

   }
    procedure [|boolean|] [|java:nio:LongToByteBufferAdapter.isDirect|] ([|java:nio:LongToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.isDirect:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d2c8c.   v0:= v1.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2c90.   call temp:=  [|java:nio:ByteBuffer.isDirect|](v0) @signature [|Ljava/nio/ByteBuffer;.isDirect:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2c96.   v0:= temp;
#L0d2c98.   return v0;

   }
    procedure [|boolean|] [|java:nio:LongToByteBufferAdapter.isReadOnly|] ([|java:nio:LongToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d2cac.   v0:= v1.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2cb0.   call temp:=  [|java:nio:ByteBuffer.isReadOnly|](v0) @signature [|Ljava/nio/ByteBuffer;.isReadOnly:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2cb6.   v0:= temp;
#L0d2cb8.   return v0;

   }
    procedure [|java:nio:ByteOrder|] [|java:nio:LongToByteBufferAdapter.order|] ([|java:nio:LongToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.order:()Ljava/nio/ByteOrder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d2ccc.   v0:= v1.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2cd0.   call temp:=  [|java:nio:ByteBuffer.order|](v0) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2cd6.   v0:= temp  @type object;
#L0d2cd8.   return v0  @type object;

   }
    procedure [|long|][] [|java:nio:LongToByteBufferAdapter.protectedArray|] ([|java:nio:LongToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.protectedArray:()[J|] @Access  {
      local temp ;
        v0;
      
#L0d2cec.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0d2cf0.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0d2cf6.   throw v0;

   }
    procedure [|int|] [|java:nio:LongToByteBufferAdapter.protectedArrayOffset|] ([|java:nio:LongToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d2d08.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0d2d0c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0d2d12.   throw v0;

   }
    procedure [|boolean|] [|java:nio:LongToByteBufferAdapter.protectedHasArray|] ([|java:nio:LongToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d2d24.   v0:= 0  @length 4;
#L0d2d26.   return v0;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongToByteBufferAdapter.put|] ([|java:nio:LongToByteBufferAdapter|] v2 @type (this), [|int|] v3, [|long|] v4) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.put:(IJ)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d2d38.   call temp:=  [|java:nio:LongToByteBufferAdapter.checkIndex|](v2, v3) @signature [|Ljava/nio/LongToByteBufferAdapter;.checkIndex:(I)V|] @classDescriptor [|java:nio:LongToByteBufferAdapter|] @type virtual;
#L0d2d3e.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2d42.   v1:= v3 * 8;
#L0d2d46.   call temp:=  [|java:nio:ByteBuffer.putLong|](v0, v1, v4, v5) @signature [|Ljava/nio/ByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2d4c.   return v2  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongToByteBufferAdapter.put|] ([|java:nio:LongToByteBufferAdapter|] v3 @type (this), [|long|] v4) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.put:(J)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d2d60.   v0:= v3.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2d64.   v1:= v3.[|java:nio:LongToByteBufferAdapter.limit|] ;
#L0d2d68.   if v0 != v1 then goto L0d2d78;
#L0d2d6c.   v0:= new [|java:nio:BufferOverflowException|];
#L0d2d70.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d2d76.   throw v0;
#L0d2d78.   v0:= v3.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2d7c.   v1:= v3.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2d80.   v2:= v1 + 1;
#L0d2d84.   v3.[|java:nio:LongToByteBufferAdapter.position|]  := v2;
#L0d2d88.   v1:= v1 * 8;
#L0d2d8c.   call temp:=  [|java:nio:ByteBuffer.putLong|](v0, v1, v4, v5) @signature [|Ljava/nio/ByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2d92.   return v3  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongToByteBufferAdapter.put|] ([|java:nio:LongToByteBufferAdapter|] v2 @type (this), [|long|][] v3, [|int|] v5, [|int|] v6) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.put:([JII)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d2da4.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2da8.   v1:= v2.[|java:nio:LongToByteBufferAdapter.limit|] ;
#L0d2dac.   v1:= v1 * 8;
#L0d2db0.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2db6.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2dba.   v1:= v2.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2dbe.   v1:= v1 * 8;
#L0d2dc2.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2dc8.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2dcc.   v0:= instanceof @varname v0 @type [|java:nio:ReadWriteDirectByteBuffer|];
#L0d2dd0.   if v0 == 0 then goto L0d2dee;
#L0d2dd4.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2dd8.   v0:= ([|java:nio:ReadWriteDirectByteBuffer|])v0;
#L0d2ddc.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.put|](v0, v3, v4, v5) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([JII)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d2de2.   v0:= v2.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2de6.   v0:= v0 + v5  @type int;
#L0d2de8.   v2.[|java:nio:LongToByteBufferAdapter.position|]  := v0;
#L0d2dec.   return v2  @type object;
#L0d2dee.   v0:= v2.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2df2.   v0:= ([|java:nio:ReadWriteHeapByteBuffer|])v0;
#L0d2df6.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.put|](v0, v3, v4, v5) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([JII)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d2dfc.   goto L0d2de2;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:LongToByteBufferAdapter.slice|] ([|java:nio:LongToByteBufferAdapter|] v4 @type (this)) @owner [|java:nio:LongToByteBufferAdapter|] @signature [|Ljava/nio/LongToByteBufferAdapter;.slice:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d2e10.   v2:= v4.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2e14.   v3:= v4.[|java:nio:LongToByteBufferAdapter.limit|] ;
#L0d2e18.   v3:= v3 * 8;
#L0d2e1c.   call temp:=  [|java:nio:ByteBuffer.limit|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2e22.   v2:= v4.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2e26.   v3:= v4.[|java:nio:LongToByteBufferAdapter.position|] ;
#L0d2e2a.   v3:= v3 * 8;
#L0d2e2e.   call temp:=  [|java:nio:ByteBuffer.position|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2e34.   v2:= v4.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2e38.   call temp:=  [|java:nio:ByteBuffer.slice|](v2) @signature [|Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2e3e.   v2:= temp  @type object;
#L0d2e40.   v3:= v4.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2e44.   call temp:=  [|java:nio:ByteBuffer.order|](v3) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2e4a.   v3:= temp  @type object;
#L0d2e4c.   call temp:=  [|java:nio:ByteBuffer.order|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2e52.   v0:= temp  @type object;
#L0d2e54.   v1:= new [|java:nio:LongToByteBufferAdapter|];
#L0d2e58.   call temp:=  [|java:nio:LongToByteBufferAdapter.<init>|](v1, v0) @signature [|Ljava/nio/LongToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:LongToByteBufferAdapter|] @type direct;
#L0d2e5e.   v2:= v4.[|java:nio:LongToByteBufferAdapter.byteBuffer|]   @type object;
#L0d2e62.   call temp:=  [|java:nio:ByteBuffer.clear|](v2) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2e68.   return v1  @type object;

   }
record [|java:nio:MappedByteBuffer|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:ByteBuffer|] {
      [|java:nio:channels:FileChannel$MapMode|] [|java:nio:MappedByteBuffer.mapMode|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:DirectByteBuffer|] [|java:nio:MappedByteBuffer.wrapped|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:nio:MappedByteBuffer.<init>|] ([|java:nio:MappedByteBuffer|] v3 @type (this), [|java:nio:ByteBuffer|] v4 @type (object)) @owner [|java:nio:MappedByteBuffer|] @signature [|Ljava/nio/MappedByteBuffer;.<init>:(Ljava/nio/ByteBuffer;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d2e7c.   v0:= v4.[|java:nio:ByteBuffer.capacity|] ;
#L0d2e80.   v1:= v4.[|java:nio:ByteBuffer.block|]   @type object;
#L0d2e84.   call temp:=  [|java:nio:ByteBuffer.<init>|](v3, v0, v1) @signature [|Ljava/nio/ByteBuffer;.<init>:(ILjava/nio/MemoryBlock;)V|] @classDescriptor [|java:nio:ByteBuffer|] @type direct;
#L0d2e8a.   call temp:=  [|java:nio:ByteBuffer.isDirect|](v4) @signature [|Ljava/nio/ByteBuffer;.isDirect:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d2e90.   v0:= temp;
#L0d2e92.   if v0 != 0 then goto L0d2ec8;
#L0d2e96.   v0:= new [|java:lang:IllegalArgumentException|];
#L0d2e9a.   v1:= new [|java:lang:StringBuilder|];
#L0d2e9e.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0d2ea4.   v2:= "directBuffer is not a direct buffer: " @type (object, string);
#L0d2ea8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d2eae.   v1:= temp  @type object;
#L0d2eb0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d2eb6.   v1:= temp  @type object;
#L0d2eb8.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d2ebe.   v1:= temp  @type object;
#L0d2ec0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d2ec6.   throw v0;
#L0d2ec8.   v4:= ([|java:nio:DirectByteBuffer|])v4;
#L0d2ecc.   v3.[|java:nio:MappedByteBuffer.wrapped|]  := v4 @type object;
#L0d2ed0.   v0:= 0  @length 4;
#L0d2ed2.   v3.[|java:nio:MappedByteBuffer.mapMode|]  := v0 @type object;
#L0d2ed6.   return @void ;

   }
    procedure [|void|] [|java:nio:MappedByteBuffer.<init>|] ([|java:nio:MappedByteBuffer|] v1 @type (this), [|java:nio:MemoryBlock|] v2 @type (object), [|int|] v3, [|int|] v4, [|java:nio:channels:FileChannel$MapMode|] v5 @type (object)) @owner [|java:nio:MappedByteBuffer|] @signature [|Ljava/nio/MappedByteBuffer;.<init>:(Ljava/nio/MemoryBlock;IILjava/nio/channels/FileChannel$MapMode;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d2ee8.   call temp:=  [|java:nio:ByteBuffer.<init>|](v1, v3, v2) @signature [|Ljava/nio/ByteBuffer;.<init>:(ILjava/nio/MemoryBlock;)V|] @classDescriptor [|java:nio:ByteBuffer|] @type direct;
#L0d2eee.   v1.[|java:nio:MappedByteBuffer.mapMode|]  := v5 @type object;
#L0d2ef2.   v0:= @@[|java:nio:channels:FileChannel$MapMode.READ_ONLY|]   @type object;
#L0d2ef6.   if v5 != v0 then goto L0d2f0a;
#L0d2efa.   v0:= new [|java:nio:ReadOnlyDirectByteBuffer|];
#L0d2efe.   call temp:=  [|java:nio:ReadOnlyDirectByteBuffer.<init>|](v0, v2, v3, v4) @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:ReadOnlyDirectByteBuffer|] @type direct;
#L0d2f04.   v1.[|java:nio:MappedByteBuffer.wrapped|]  := v0 @type object;
#L0d2f08.   return @void ;
#L0d2f0a.   v0:= new [|java:nio:ReadWriteDirectByteBuffer|];
#L0d2f0e.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.<init>|](v0, v2, v3, v4) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type direct;
#L0d2f14.   v1.[|java:nio:MappedByteBuffer.wrapped|]  := v0 @type object;
#L0d2f18.   goto L0d2f08;

   }
    procedure [|java:nio:MappedByteBuffer|] [|java:nio:MappedByteBuffer.force|] ([|java:nio:MappedByteBuffer|] v7 @type (this)) @owner [|java:nio:MappedByteBuffer|] @signature [|Ljava/nio/MappedByteBuffer;.force:()Ljava/nio/MappedByteBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d2f2c.   v0:= v7.[|java:nio:MappedByteBuffer.mapMode|]   @type object;
#L0d2f30.   v1:= @@[|java:nio:channels:FileChannel$MapMode.READ_WRITE|]   @type object;
#L0d2f34.   if v0 != v1 then goto L0d2f60;
#L0d2f38.   v0:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d2f3c.   v1:= v7.[|java:nio:MappedByteBuffer.block|]   @type object;
#L0d2f40.   call temp:=  [|java:nio:MemoryBlock.toInt|](v1) @signature [|Ljava/nio/MemoryBlock;.toInt:()I|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d2f46.   v1:= temp;
#L0d2f48.   v1:= (long)v1  @type i2l;
#L0d2f4a.   v3:= v7.[|java:nio:MappedByteBuffer.block|]   @type object;
#L0d2f4e.   call temp:=  [|java:nio:MemoryBlock.getSize|](v3) @signature [|Ljava/nio/MemoryBlock;.getSize:()J|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d2f54.   v3:= temp  @type wide;
#L0d2f56.   v5:= @@[|libcore:io:OsConstants.MS_SYNC|] ;
#L0d2f5a.   call temp:=  [|libcore:io:Os.msync|](v0, v1, v2, v3, v4, v5) @signature [|Llibcore/io/Os;.msync:(JJI)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d2f60.   return v7  @type object;
#L0d2f62.   v6:= Exception  @type object;
#L0d2f64.   v0:= new [|java:lang:AssertionError|];
#L0d2f68.   call temp:=  [|java:lang:AssertionError.<init>|](v0, v6) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0d2f6e.   throw v0;
  catch  [|libcore:io:ErrnoException|] @[L0d2f38..L0d2f60] goto L0d2f62;

   }
    procedure [|boolean|] [|java:nio:MappedByteBuffer.isLoaded|] ([|java:nio:MappedByteBuffer|] v15 @type (this)) @owner [|java:nio:MappedByteBuffer|] @signature [|Ljava/nio/MappedByteBuffer;.isLoaded:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L0d2f90.   v0:= v15.[|java:nio:MappedByteBuffer.block|]   @type object;
#L0d2f94.   call temp:=  [|java:nio:MemoryBlock.toInt|](v0) @signature [|Ljava/nio/MemoryBlock;.toInt:()I|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d2f9a.   v0:= temp;
#L0d2f9c.   v1:= (long)v0  @type i2l;
#L0d2f9e.   v0:= v15.[|java:nio:MappedByteBuffer.block|]   @type object;
#L0d2fa2.   call temp:=  [|java:nio:MemoryBlock.getSize|](v0) @signature [|Ljava/nio/MemoryBlock;.getSize:()J|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d2fa8.   v3:= temp  @type wide;
#L0d2faa.   v11:= 0  @length wide16;
#L0d2fae.   v0:= cmp(v3,v11);
#L0d2fb2.   if v0 != 0 then goto L0d2fba;
#L0d2fb6.   v0:= 1  @length 4;
#L0d2fb8.   return v0;
#L0d2fba.   v0:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d2fbe.   v11:= @@[|libcore:io:OsConstants._SC_PAGE_SIZE|] ;
#L0d2fc2.   call temp:=  [|libcore:io:Os.sysconf|](v0, v11) @signature [|Llibcore/io/Os;.sysconf:(I)J|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d2fc8.   v11:= temp  @type wide;
#L0d2fca.   v10:= (int)v11  @type l2i;
#L0d2fcc.   v11:= (long)v10  @type i2l;
#L0d2fce.   v11:= v1 % v11  @type long;
#L0d2fd2.   v9:= (int)v11  @type l2i;
#L0d2fd4.   v11:= (long)v9  @type i2l;
#L0d2fd6.   v1:= v1 - v11  @type long;
#L0d2fd8.   v11:= (long)v9  @type i2l;
#L0d2fda.   v3:= v3 + v11  @type long;
#L0d2fdc.   v11:= (long)v10  @type i2l;
#L0d2fde.   v11:= v11 + v3  @type long;
#L0d2fe0.   v13:= 1  @length wide16;
#L0d2fe4.   v11:= v11 - v13  @type long;
#L0d2fe6.   v13:= (long)v10  @type i2l;
#L0d2fe8.   v11:= v11 / v13  @type long;
#L0d2fea.   v8:= (int)v11  @type l2i;
#L0d2fec.   v5:= new [|byte|][v8];
#L0d2ff0.   v0:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d2ff4.   call temp:=  [|libcore:io:Os.mincore|](v0, v1, v2, v3, v4, v5) @signature [|Llibcore/io/Os;.mincore:(JJ[B)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d2ffa.   v7:= 0  @length 4;
#L0d2ffc.   v0:= v5.length;
#L0d2ffe.   if v7 >= v0 then goto L0d301a;
#L0d3002.   v0:= v5[v7]  @byte;
#L0d3006.   v0:= v0 ^& 1;
#L0d300a.   v11:= 1  @length 4;
#L0d300c.   if v0 == v11 then goto L0d3014;
#L0d3010.   v0:= 0  @length 4;
#L0d3012.   goto L0d2fb8;
#L0d3014.   v7:= v7 + 1;
#L0d3018.   goto L0d2ffc;
#L0d301a.   v0:= 1  @length 4;
#L0d301c.   goto L0d2fb8;
#L0d301e.   v6:= Exception  @type object;
#L0d3020.   v0:= 0  @length 4;
#L0d3022.   goto L0d2fb8;
  catch  [|libcore:io:ErrnoException|] @[L0d2fba..L0d3006] goto L0d301e;

   }
    procedure [|java:nio:MappedByteBuffer|] [|java:nio:MappedByteBuffer.load|] ([|java:nio:MappedByteBuffer|] v5 @type (this)) @owner [|java:nio:MappedByteBuffer|] @signature [|Ljava/nio/MappedByteBuffer;.load:()Ljava/nio/MappedByteBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d3044.   v0:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d3048.   v1:= v5.[|java:nio:MappedByteBuffer.block|]   @type object;
#L0d304c.   call temp:=  [|java:nio:MemoryBlock.toInt|](v1) @signature [|Ljava/nio/MemoryBlock;.toInt:()I|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d3052.   v1:= temp;
#L0d3054.   v1:= (long)v1  @type i2l;
#L0d3056.   v3:= v5.[|java:nio:MappedByteBuffer.block|]   @type object;
#L0d305a.   call temp:=  [|java:nio:MemoryBlock.getSize|](v3) @signature [|Ljava/nio/MemoryBlock;.getSize:()J|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d3060.   v3:= temp  @type wide;
#L0d3062.   call temp:=  [|libcore:io:Os.mlock|](v0, v1, v2, v3, v4) @signature [|Llibcore/io/Os;.mlock:(JJ)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d3068.   v0:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d306c.   v1:= v5.[|java:nio:MappedByteBuffer.block|]   @type object;
#L0d3070.   call temp:=  [|java:nio:MemoryBlock.toInt|](v1) @signature [|Ljava/nio/MemoryBlock;.toInt:()I|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d3076.   v1:= temp;
#L0d3078.   v1:= (long)v1  @type i2l;
#L0d307a.   v3:= v5.[|java:nio:MappedByteBuffer.block|]   @type object;
#L0d307e.   call temp:=  [|java:nio:MemoryBlock.getSize|](v3) @signature [|Ljava/nio/MemoryBlock;.getSize:()J|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d3084.   v3:= temp  @type wide;
#L0d3086.   call temp:=  [|libcore:io:Os.munlock|](v0, v1, v2, v3, v4) @signature [|Llibcore/io/Os;.munlock:(JJ)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d308c.   return v5  @type object;
#L0d308e.   v0:= Exception  @type object;
#L0d3090.   goto L0d308c;
  catch  [|libcore:io:ErrnoException|] @[L0d3044..L0d308c] goto L0d308e;

   }
record [|java:nio:MappedByteBufferAdapter|]  @type class @AccessFlag FINAL  extends [|java:nio:MappedByteBuffer|] {
   }
    procedure [|void|] [|java:nio:MappedByteBufferAdapter.<init>|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d30b4.   call temp:=  [|java:nio:MappedByteBuffer.<init>|](v1, v2) @signature [|Ljava/nio/MappedByteBuffer;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:MappedByteBuffer|] @type direct;
#L0d30ba.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d30be.   v0:= v0.[|java:nio:DirectByteBuffer.effectiveDirectAddress|] ;
#L0d30c2.   v1.[|java:nio:MappedByteBufferAdapter.effectiveDirectAddress|]  := v0;
#L0d30c6.   return @void ;

   }
    procedure [|void|] [|java:nio:MappedByteBufferAdapter.<init>|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|java:nio:MemoryBlock|] v2 @type (object), [|int|] v3, [|int|] v4, [|java:nio:channels:FileChannel$MapMode|] v5 @type (object)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.<init>:(Ljava/nio/MemoryBlock;IILjava/nio/channels/FileChannel$MapMode;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d30d8.   call temp:=  [|java:nio:MappedByteBuffer.<init>|](v1, v2, v3, v4, v5) @signature [|Ljava/nio/MappedByteBuffer;.<init>:(Ljava/nio/MemoryBlock;IILjava/nio/channels/FileChannel$MapMode;)V|] @classDescriptor [|java:nio:MappedByteBuffer|] @type direct;
#L0d30de.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d30e2.   v0:= v0.[|java:nio:DirectByteBuffer.effectiveDirectAddress|] ;
#L0d30e6.   v1.[|java:nio:MappedByteBufferAdapter.effectiveDirectAddress|]  := v0;
#L0d30ea.   return @void ;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:MappedByteBufferAdapter.asCharBuffer|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.asCharBuffer:()Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d30fc.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3100.   call temp:=  [|java:nio:DirectByteBuffer.asCharBuffer|](v0) @signature [|Ljava/nio/DirectByteBuffer;.asCharBuffer:()Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3106.   v0:= temp  @type object;
#L0d3108.   return v0  @type object;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:MappedByteBufferAdapter.asDoubleBuffer|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.asDoubleBuffer:()Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d311c.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3120.   call temp:=  [|java:nio:DirectByteBuffer.asDoubleBuffer|](v0) @signature [|Ljava/nio/DirectByteBuffer;.asDoubleBuffer:()Ljava/nio/DoubleBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3126.   v0:= temp  @type object;
#L0d3128.   return v0  @type object;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:MappedByteBufferAdapter.asFloatBuffer|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.asFloatBuffer:()Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d313c.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3140.   call temp:=  [|java:nio:DirectByteBuffer.asFloatBuffer|](v0) @signature [|Ljava/nio/DirectByteBuffer;.asFloatBuffer:()Ljava/nio/FloatBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3146.   v0:= temp  @type object;
#L0d3148.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:MappedByteBufferAdapter.asIntBuffer|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.asIntBuffer:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d315c.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3160.   call temp:=  [|java:nio:DirectByteBuffer.asIntBuffer|](v0) @signature [|Ljava/nio/DirectByteBuffer;.asIntBuffer:()Ljava/nio/IntBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3166.   v0:= temp  @type object;
#L0d3168.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:MappedByteBufferAdapter.asLongBuffer|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.asLongBuffer:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d317c.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3180.   call temp:=  [|java:nio:DirectByteBuffer.asLongBuffer|](v0) @signature [|Ljava/nio/DirectByteBuffer;.asLongBuffer:()Ljava/nio/LongBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3186.   v0:= temp  @type object;
#L0d3188.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.asReadOnlyBuffer|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d319c.   v0:= new [|java:nio:MappedByteBufferAdapter|];
#L0d31a0.   v1:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d31a4.   call temp:=  [|java:nio:DirectByteBuffer.asReadOnlyBuffer|](v1) @signature [|Ljava/nio/DirectByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d31aa.   v1:= temp  @type object;
#L0d31ac.   call temp:=  [|java:nio:MappedByteBufferAdapter.<init>|](v0, v1) @signature [|Ljava/nio/MappedByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type direct;
#L0d31b2.   v1:= v2.[|java:nio:MappedByteBufferAdapter.limit|] ;
#L0d31b6.   call temp:=  [|java:nio:MappedByteBufferAdapter.limit|](v0, v1) @signature [|Ljava/nio/MappedByteBufferAdapter;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type virtual;
#L0d31bc.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d31c0.   call temp:=  [|java:nio:MappedByteBufferAdapter.position|](v0, v1) @signature [|Ljava/nio/MappedByteBufferAdapter;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type virtual;
#L0d31c6.   v1:= v2.[|java:nio:MappedByteBufferAdapter.mark|] ;
#L0d31ca.   v0.[|java:nio:MappedByteBufferAdapter.mark|]  := v1;
#L0d31ce.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:MappedByteBufferAdapter.asShortBuffer|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.asShortBuffer:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d31e0.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d31e4.   call temp:=  [|java:nio:DirectByteBuffer.asShortBuffer|](v0) @signature [|Ljava/nio/DirectByteBuffer;.asShortBuffer:()Ljava/nio/ShortBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d31ea.   v0:= temp  @type object;
#L0d31ec.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.compact|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.compact:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d3200.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3204.   call temp:=  [|java:nio:DirectByteBuffer.isReadOnly|](v0) @signature [|Ljava/nio/DirectByteBuffer;.isReadOnly:()Z|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d320a.   v0:= temp;
#L0d320c.   if v0 == 0 then goto L0d321c;
#L0d3210.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d3214.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d321a.   throw v0;
#L0d321c.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3220.   call temp:=  [|java:nio:DirectByteBuffer.compact|](v0) @signature [|Ljava/nio/DirectByteBuffer;.compact:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3226.   v0:= v1.[|java:nio:MappedByteBufferAdapter.capacity|] ;
#L0d322a.   call temp:=  [|java:nio:MappedByteBufferAdapter.limit|](v1, v0) @signature [|Ljava/nio/MappedByteBufferAdapter;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type virtual;
#L0d3230.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3234.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0) @signature [|Ljava/nio/DirectByteBuffer;.position:()I|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d323a.   v0:= temp;
#L0d323c.   call temp:=  [|java:nio:MappedByteBufferAdapter.position|](v1, v0) @signature [|Ljava/nio/MappedByteBufferAdapter;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type virtual;
#L0d3242.   v0:= -1  @length 4;
#L0d3244.   v1.[|java:nio:MappedByteBufferAdapter.mark|]  := v0;
#L0d3248.   return v1  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.duplicate|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.duplicate:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d325c.   v0:= new [|java:nio:MappedByteBufferAdapter|];
#L0d3260.   v1:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3264.   call temp:=  [|java:nio:DirectByteBuffer.duplicate|](v1) @signature [|Ljava/nio/DirectByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d326a.   v1:= temp  @type object;
#L0d326c.   call temp:=  [|java:nio:MappedByteBufferAdapter.<init>|](v0, v1) @signature [|Ljava/nio/MappedByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type direct;
#L0d3272.   v1:= v2.[|java:nio:MappedByteBufferAdapter.limit|] ;
#L0d3276.   call temp:=  [|java:nio:MappedByteBufferAdapter.limit|](v0, v1) @signature [|Ljava/nio/MappedByteBufferAdapter;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type virtual;
#L0d327c.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3280.   call temp:=  [|java:nio:MappedByteBufferAdapter.position|](v0, v1) @signature [|Ljava/nio/MappedByteBufferAdapter;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type virtual;
#L0d3286.   v1:= v2.[|java:nio:MappedByteBufferAdapter.mark|] ;
#L0d328a.   v0.[|java:nio:MappedByteBufferAdapter.mark|]  := v1;
#L0d328e.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:MappedByteBufferAdapter.free|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.free:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d32a0.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d32a4.   call temp:=  [|java:nio:DirectByteBuffer.free|](v0) @signature [|Ljava/nio/DirectByteBuffer;.free:()V|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d32aa.   return @void ;

   }
    procedure [|byte|] [|java:nio:MappedByteBufferAdapter.get|] ([|java:nio:MappedByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.get:()B|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d32bc.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d32c0.   v2:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d32c4.   call temp:=  [|java:nio:DirectByteBuffer.position|](v1, v2) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d32ca.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d32ce.   call temp:=  [|java:nio:DirectByteBuffer.get|](v1) @signature [|Ljava/nio/DirectByteBuffer;.get:()B|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d32d4.   v0:= temp;
#L0d32d6.   v1:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d32da.   v1:= v1 + 1;
#L0d32de.   v3.[|java:nio:MappedByteBufferAdapter.position|]  := v1;
#L0d32e2.   return v0;

   }
    procedure [|byte|] [|java:nio:MappedByteBufferAdapter.get|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|int|] v2) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.get:(I)B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d32f4.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d32f8.   call temp:=  [|java:nio:DirectByteBuffer.get|](v0, v2) @signature [|Ljava/nio/DirectByteBuffer;.get:(I)B|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d32fe.   v0:= temp;
#L0d3300.   return v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.get|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.get:([BII)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d3314.   v1:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3318.   call temp:=  [|java:nio:DirectByteBuffer.get|](v1, v3, v4, v5) @signature [|Ljava/nio/DirectByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d331e.   v0:= temp  @type object;
#L0d3320.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3324.   v1:= v1 + v5  @type int;
#L0d3326.   v2.[|java:nio:MappedByteBufferAdapter.position|]  := v1;
#L0d332a.   return v0  @type object;

   }
    procedure [|char|] [|java:nio:MappedByteBufferAdapter.getChar|] ([|java:nio:MappedByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getChar:()C|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d333c.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3340.   v2:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3344.   call temp:=  [|java:nio:DirectByteBuffer.position|](v1, v2) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d334a.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d334e.   call temp:=  [|java:nio:DirectByteBuffer.getChar|](v1) @signature [|Ljava/nio/DirectByteBuffer;.getChar:()C|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3354.   v0:= temp;
#L0d3356.   v1:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d335a.   v1:= v1 + 2;
#L0d335e.   v3.[|java:nio:MappedByteBufferAdapter.position|]  := v1;
#L0d3362.   return v0;

   }
    procedure [|char|] [|java:nio:MappedByteBufferAdapter.getChar|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|int|] v2) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getChar:(I)C|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d3374.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3378.   call temp:=  [|java:nio:DirectByteBuffer.getChar|](v0, v2) @signature [|Ljava/nio/DirectByteBuffer;.getChar:(I)C|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d337e.   v0:= temp;
#L0d3380.   return v0;

   }
    procedure [|double|] [|java:nio:MappedByteBufferAdapter.getDouble|] ([|java:nio:MappedByteBufferAdapter|] v4 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getDouble:()D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d3394.   v2:= v4.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3398.   v3:= v4.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d339c.   call temp:=  [|java:nio:DirectByteBuffer.position|](v2, v3) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d33a2.   v2:= v4.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d33a6.   call temp:=  [|java:nio:DirectByteBuffer.getDouble|](v2) @signature [|Ljava/nio/DirectByteBuffer;.getDouble:()D|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d33ac.   v0:= temp  @type wide;
#L0d33ae.   v2:= v4.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d33b2.   v2:= v2 + 8;
#L0d33b6.   v4.[|java:nio:MappedByteBufferAdapter.position|]  := v2;
#L0d33ba.   return v0  @type wide;

   }
    procedure [|double|] [|java:nio:MappedByteBufferAdapter.getDouble|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getDouble:(I)D|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d33cc.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d33d0.   call temp:=  [|java:nio:DirectByteBuffer.getDouble|](v0, v3) @signature [|Ljava/nio/DirectByteBuffer;.getDouble:(I)D|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d33d6.   v0:= temp  @type wide;
#L0d33d8.   return v0  @type wide;

   }
    procedure [|float|] [|java:nio:MappedByteBufferAdapter.getFloat|] ([|java:nio:MappedByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getFloat:()F|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d33ec.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d33f0.   v2:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d33f4.   call temp:=  [|java:nio:DirectByteBuffer.position|](v1, v2) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d33fa.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d33fe.   call temp:=  [|java:nio:DirectByteBuffer.getFloat|](v1) @signature [|Ljava/nio/DirectByteBuffer;.getFloat:()F|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3404.   v0:= temp;
#L0d3406.   v1:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d340a.   v1:= v1 + 4;
#L0d340e.   v3.[|java:nio:MappedByteBufferAdapter.position|]  := v1;
#L0d3412.   return v0;

   }
    procedure [|float|] [|java:nio:MappedByteBufferAdapter.getFloat|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|int|] v2) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getFloat:(I)F|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d3424.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3428.   call temp:=  [|java:nio:DirectByteBuffer.getFloat|](v0, v2) @signature [|Ljava/nio/DirectByteBuffer;.getFloat:(I)F|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d342e.   v0:= temp;
#L0d3430.   return v0;

   }
    procedure [|int|] [|java:nio:MappedByteBufferAdapter.getInt|] ([|java:nio:MappedByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getInt:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d3444.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3448.   v2:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d344c.   call temp:=  [|java:nio:DirectByteBuffer.position|](v1, v2) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3452.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3456.   call temp:=  [|java:nio:DirectByteBuffer.getInt|](v1) @signature [|Ljava/nio/DirectByteBuffer;.getInt:()I|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d345c.   v0:= temp;
#L0d345e.   v1:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3462.   v1:= v1 + 4;
#L0d3466.   v3.[|java:nio:MappedByteBufferAdapter.position|]  := v1;
#L0d346a.   return v0;

   }
    procedure [|int|] [|java:nio:MappedByteBufferAdapter.getInt|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|int|] v2) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getInt:(I)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d347c.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3480.   call temp:=  [|java:nio:DirectByteBuffer.getInt|](v0, v2) @signature [|Ljava/nio/DirectByteBuffer;.getInt:(I)I|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3486.   v0:= temp;
#L0d3488.   return v0;

   }
    procedure [|long|] [|java:nio:MappedByteBufferAdapter.getLong|] ([|java:nio:MappedByteBufferAdapter|] v4 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getLong:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d349c.   v2:= v4.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d34a0.   v3:= v4.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d34a4.   call temp:=  [|java:nio:DirectByteBuffer.position|](v2, v3) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d34aa.   v2:= v4.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d34ae.   call temp:=  [|java:nio:DirectByteBuffer.getLong|](v2) @signature [|Ljava/nio/DirectByteBuffer;.getLong:()J|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d34b4.   v0:= temp  @type wide;
#L0d34b6.   v2:= v4.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d34ba.   v2:= v2 + 8;
#L0d34be.   v4.[|java:nio:MappedByteBufferAdapter.position|]  := v2;
#L0d34c2.   return v0  @type wide;

   }
    procedure [|long|] [|java:nio:MappedByteBufferAdapter.getLong|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getLong:(I)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d34d4.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d34d8.   call temp:=  [|java:nio:DirectByteBuffer.getLong|](v0, v3) @signature [|Ljava/nio/DirectByteBuffer;.getLong:(I)J|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d34de.   v0:= temp  @type wide;
#L0d34e0.   return v0  @type wide;

   }
    procedure [|short|] [|java:nio:MappedByteBufferAdapter.getShort|] ([|java:nio:MappedByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getShort:()S|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d34f4.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d34f8.   v2:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d34fc.   call temp:=  [|java:nio:DirectByteBuffer.position|](v1, v2) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3502.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3506.   call temp:=  [|java:nio:DirectByteBuffer.getShort|](v1) @signature [|Ljava/nio/DirectByteBuffer;.getShort:()S|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d350c.   v0:= temp;
#L0d350e.   v1:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3512.   v1:= v1 + 2;
#L0d3516.   v3.[|java:nio:MappedByteBufferAdapter.position|]  := v1;
#L0d351a.   return v0;

   }
    procedure [|short|] [|java:nio:MappedByteBufferAdapter.getShort|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|int|] v2) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.getShort:(I)S|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d352c.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3530.   call temp:=  [|java:nio:DirectByteBuffer.getShort|](v0, v2) @signature [|Ljava/nio/DirectByteBuffer;.getShort:(I)S|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3536.   v0:= temp;
#L0d3538.   return v0;

   }
    procedure [|boolean|] [|java:nio:MappedByteBufferAdapter.isDirect|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.isDirect:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d354c.   v0:= 1  @length 4;
#L0d354e.   return v0;

   }
    procedure [|boolean|] [|java:nio:MappedByteBufferAdapter.isReadOnly|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d3560.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3564.   call temp:=  [|java:nio:DirectByteBuffer.isReadOnly|](v0) @signature [|Ljava/nio/DirectByteBuffer;.isReadOnly:()Z|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d356a.   v0:= temp;
#L0d356c.   return v0;

   }
    procedure [|void|] [|java:nio:MappedByteBufferAdapter.limitImpl|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|int|] v2) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.limitImpl:(I)V|] @Access  {
      local temp ;
        v0;
      
#L0d3580.   call temp:=  [|java:nio:MappedByteBuffer.limitImpl|](v1, v2) @signature [|Ljava/nio/MappedByteBuffer;.limitImpl:(I)V|] @classDescriptor [|java:nio:MappedByteBuffer|] @type super;
#L0d3586.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d358a.   call temp:=  [|java:nio:DirectByteBuffer.limit|](v0, v2) @signature [|Ljava/nio/DirectByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3590.   return @void ;

   }
    procedure [|void|] [|java:nio:MappedByteBufferAdapter.orderImpl|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|java:nio:ByteOrder|] v2 @type (object)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.orderImpl:(Ljava/nio/ByteOrder;)V|] @Access  {
      local temp ;
        v0;
      
#L0d35a4.   call temp:=  [|java:nio:MappedByteBuffer.orderImpl|](v1, v2) @signature [|Ljava/nio/MappedByteBuffer;.orderImpl:(Ljava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MappedByteBuffer|] @type super;
#L0d35aa.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d35ae.   call temp:=  [|java:nio:DirectByteBuffer.order|](v0, v2) @signature [|Ljava/nio/DirectByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d35b4.   return @void ;

   }
    procedure [|void|] [|java:nio:MappedByteBufferAdapter.positionImpl|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this), [|int|] v2) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.positionImpl:(I)V|] @Access  {
      local temp ;
        v0;
      
#L0d35c8.   call temp:=  [|java:nio:MappedByteBuffer.positionImpl|](v1, v2) @signature [|Ljava/nio/MappedByteBuffer;.positionImpl:(I)V|] @classDescriptor [|java:nio:MappedByteBuffer|] @type super;
#L0d35ce.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d35d2.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v2) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d35d8.   return @void ;

   }
    procedure [|byte|][] [|java:nio:MappedByteBufferAdapter.protectedArray|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.protectedArray:()[B|] @Access  {
      local temp ;
        v0;
      
#L0d35ec.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d35f0.   call temp:=  [|java:nio:DirectByteBuffer.protectedArray|](v0) @signature [|Ljava/nio/DirectByteBuffer;.protectedArray:()[B|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d35f6.   v0:= temp  @type object;
#L0d35f8.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:MappedByteBufferAdapter.protectedArrayOffset|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d360c.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3610.   call temp:=  [|java:nio:DirectByteBuffer.protectedArrayOffset|](v0) @signature [|Ljava/nio/DirectByteBuffer;.protectedArrayOffset:()I|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3616.   v0:= temp;
#L0d3618.   return v0;

   }
    procedure [|boolean|] [|java:nio:MappedByteBufferAdapter.protectedHasArray|] ([|java:nio:MappedByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d362c.   v0:= v1.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3630.   call temp:=  [|java:nio:DirectByteBuffer.protectedHasArray|](v0) @signature [|Ljava/nio/DirectByteBuffer;.protectedHasArray:()Z|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3636.   v0:= temp;
#L0d3638.   return v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.put|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|byte|] v3) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.put:(B)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d364c.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3650.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3654.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d365a.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d365e.   call temp:=  [|java:nio:DirectByteBuffer.put|](v0, v3) @signature [|Ljava/nio/DirectByteBuffer;.put:(B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3664.   v0:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3668.   v0:= v0 + 1;
#L0d366c.   v2.[|java:nio:MappedByteBufferAdapter.position|]  := v0;
#L0d3670.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.put|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3, [|byte|] v4) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.put:(IB)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d3684.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3688.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d368c.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3692.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3696.   call temp:=  [|java:nio:DirectByteBuffer.put|](v0, v3, v4) @signature [|Ljava/nio/DirectByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d369c.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.put|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.put:([BII)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d36b0.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d36b4.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d36b8.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d36be.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d36c2.   call temp:=  [|java:nio:DirectByteBuffer.put|](v0, v3, v4, v5) @signature [|Ljava/nio/DirectByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d36c8.   v0:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d36cc.   v0:= v0 + v5  @type int;
#L0d36ce.   v2.[|java:nio:MappedByteBufferAdapter.position|]  := v0;
#L0d36d2.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putChar|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|char|] v3) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putChar:(C)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d36e4.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d36e8.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d36ec.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d36f2.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d36f6.   call temp:=  [|java:nio:DirectByteBuffer.putChar|](v0, v3) @signature [|Ljava/nio/DirectByteBuffer;.putChar:(C)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d36fc.   v0:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3700.   v0:= v0 + 2;
#L0d3704.   v2.[|java:nio:MappedByteBufferAdapter.position|]  := v0;
#L0d3708.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putChar|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3, [|char|] v4) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putChar:(IC)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d371c.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3720.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3724.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d372a.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d372e.   call temp:=  [|java:nio:DirectByteBuffer.putChar|](v0, v3, v4) @signature [|Ljava/nio/DirectByteBuffer;.putChar:(IC)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3734.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putDouble|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|double|] v3) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putDouble:(D)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d3748.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d374c.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3750.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3756.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d375a.   call temp:=  [|java:nio:DirectByteBuffer.putDouble|](v0, v3, v4) @signature [|Ljava/nio/DirectByteBuffer;.putDouble:(D)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3760.   v0:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3764.   v0:= v0 + 8;
#L0d3768.   v2.[|java:nio:MappedByteBufferAdapter.position|]  := v0;
#L0d376c.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putDouble|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3, [|double|] v4) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putDouble:(ID)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d3780.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3784.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3788.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d378e.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3792.   call temp:=  [|java:nio:DirectByteBuffer.putDouble|](v0, v3, v4, v5) @signature [|Ljava/nio/DirectByteBuffer;.putDouble:(ID)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3798.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putFloat|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|float|] v3) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putFloat:(F)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d37ac.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d37b0.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d37b4.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d37ba.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d37be.   call temp:=  [|java:nio:DirectByteBuffer.putFloat|](v0, v3) @signature [|Ljava/nio/DirectByteBuffer;.putFloat:(F)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d37c4.   v0:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d37c8.   v0:= v0 + 4;
#L0d37cc.   v2.[|java:nio:MappedByteBufferAdapter.position|]  := v0;
#L0d37d0.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putFloat|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3, [|float|] v4) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putFloat:(IF)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d37e4.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d37e8.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d37ec.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d37f2.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d37f6.   call temp:=  [|java:nio:DirectByteBuffer.putFloat|](v0, v3, v4) @signature [|Ljava/nio/DirectByteBuffer;.putFloat:(IF)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d37fc.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putInt|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putInt:(I)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d3810.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3814.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3818.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d381e.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3822.   call temp:=  [|java:nio:DirectByteBuffer.putInt|](v0, v3) @signature [|Ljava/nio/DirectByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3828.   v0:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d382c.   v0:= v0 + 4;
#L0d3830.   v2.[|java:nio:MappedByteBufferAdapter.position|]  := v0;
#L0d3834.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putInt|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3, [|int|] v4) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putInt:(II)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d3848.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d384c.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3850.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3856.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d385a.   call temp:=  [|java:nio:DirectByteBuffer.putInt|](v0, v3, v4) @signature [|Ljava/nio/DirectByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3860.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putLong|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3, [|long|] v4) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putLong:(IJ)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d3874.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3878.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d387c.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3882.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3886.   call temp:=  [|java:nio:DirectByteBuffer.putLong|](v0, v3, v4, v5) @signature [|Ljava/nio/DirectByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d388c.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putLong|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|long|] v3) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putLong:(J)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d38a0.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d38a4.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d38a8.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d38ae.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d38b2.   call temp:=  [|java:nio:DirectByteBuffer.putLong|](v0, v3, v4) @signature [|Ljava/nio/DirectByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d38b8.   v0:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d38bc.   v0:= v0 + 8;
#L0d38c0.   v2.[|java:nio:MappedByteBufferAdapter.position|]  := v0;
#L0d38c4.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putShort|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|int|] v3, [|short|] v4) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putShort:(IS)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d38d8.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d38dc.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d38e0.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d38e6.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d38ea.   call temp:=  [|java:nio:DirectByteBuffer.putShort|](v0, v3, v4) @signature [|Ljava/nio/DirectByteBuffer;.putShort:(IS)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d38f0.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.putShort|] ([|java:nio:MappedByteBufferAdapter|] v2 @type (this), [|short|] v3) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.putShort:(S)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d3904.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3908.   v1:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d390c.   call temp:=  [|java:nio:DirectByteBuffer.position|](v0, v1) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3912.   v0:= v2.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3916.   call temp:=  [|java:nio:DirectByteBuffer.putShort|](v0, v3) @signature [|Ljava/nio/DirectByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d391c.   v0:= v2.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3920.   v0:= v0 + 2;
#L0d3924.   v2.[|java:nio:MappedByteBufferAdapter.position|]  := v0;
#L0d3928.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:MappedByteBufferAdapter.slice|] ([|java:nio:MappedByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:MappedByteBufferAdapter|] @signature [|Ljava/nio/MappedByteBufferAdapter;.slice:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d393c.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3940.   v2:= v3.[|java:nio:MappedByteBufferAdapter.position|] ;
#L0d3944.   call temp:=  [|java:nio:DirectByteBuffer.position|](v1, v2) @signature [|Ljava/nio/DirectByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d394a.   v0:= new [|java:nio:MappedByteBufferAdapter|];
#L0d394e.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3952.   call temp:=  [|java:nio:DirectByteBuffer.slice|](v1) @signature [|Ljava/nio/DirectByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d3958.   v1:= temp  @type object;
#L0d395a.   call temp:=  [|java:nio:MappedByteBufferAdapter.<init>|](v0, v1) @signature [|Ljava/nio/MappedByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type direct;
#L0d3960.   v1:= v3.[|java:nio:MappedByteBufferAdapter.wrapped|]   @type object;
#L0d3964.   call temp:=  [|java:nio:DirectByteBuffer.clear|](v1) @signature [|Ljava/nio/DirectByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d396a.   return v0  @type object;

   }
record [|java:nio:MemoryBlock$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|java:nio:MemoryBlock|]  @type class @AccessFlag   {
      [|int|] [|java:nio:MemoryBlock.address|]    @AccessFlag PROTECTED;
      [|long|] [|java:nio:MemoryBlock.size|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|java:nio:MemoryBlock.<init>|] ([|java:nio:MemoryBlock|] v0 @type (this), [|int|] v1, [|long|] v2) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.<init>:(IJ)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0d397c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d3982.   v0.[|java:nio:MemoryBlock.address|]  := v1;
#L0d3986.   v0.[|java:nio:MemoryBlock.size|]  := v2 @wide;
#L0d398a.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.<init>|] ([|java:nio:MemoryBlock|] v0 @type (this), [|int|] v1, [|long|] v2, [|java:nio:MemoryBlock$1|] v4 @type (object)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.<init>:(IJLjava/nio/MemoryBlock$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L0d399c.   call temp:=  [|java:nio:MemoryBlock.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/MemoryBlock;.<init>:(IJ)V|] @classDescriptor [|java:nio:MemoryBlock|] @type direct;
#L0d39a2.   return @void ;

   }
    procedure [|java:nio:MemoryBlock|] [|java:nio:MemoryBlock.allocate|] ([|int|] v7) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.allocate:(I)Ljava/nio/MemoryBlock;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d39b4.   call temp:=  [|dalvik:system:VMRuntime.getRuntime|]() @signature [|Ldalvik/system/VMRuntime;.getRuntime:()Ldalvik/system/VMRuntime;|] @classDescriptor [|dalvik:system:VMRuntime|] @type static;
#L0d39ba.   v6:= temp  @type object;
#L0d39bc.   v0:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0d39c0.   call temp:=  [|dalvik:system:VMRuntime.newNonMovableArray|](v6, v0, v7) @signature [|Ldalvik/system/VMRuntime;.newNonMovableArray:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|dalvik:system:VMRuntime|] @type virtual;
#L0d39c6.   v0:= temp  @type object;
#L0d39c8.   v0:= ([|byte|][])v0;
#L0d39cc.   v1:= v0  @type object;
#L0d39ce.   v1:= ([|byte|][])v1;
#L0d39d2.   call temp:=  [|dalvik:system:VMRuntime.addressOf|](v6, v1) @signature [|Ldalvik/system/VMRuntime;.addressOf:(Ljava/lang/Object;)J|] @classDescriptor [|dalvik:system:VMRuntime|] @type virtual;
#L0d39d8.   v3:= temp  @type wide;
#L0d39da.   v2:= (int)v3  @type l2i;
#L0d39dc.   v0:= new [|java:nio:MemoryBlock$NonMovableHeapBlock|];
#L0d39e0.   v3:= (long)v7  @type i2l;
#L0d39e2.   v5:= 0  @length 4;
#L0d39e4.   call temp:=  [|java:nio:MemoryBlock$NonMovableHeapBlock.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/nio/MemoryBlock$NonMovableHeapBlock;.<init>:([BIJLjava/nio/MemoryBlock$1;)V|] @classDescriptor [|java:nio:MemoryBlock$NonMovableHeapBlock|] @type direct;
#L0d39ea.   return v0  @type object;

   }
    procedure [|java:nio:MemoryBlock|] [|java:nio:MemoryBlock.mmap|] ([|java:io:FileDescriptor|] v14 @type (object), [|long|] v15, [|long|] v17, [|java:nio:channels:FileChannel$MapMode|] v19 @type (object)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.mmap:(Ljava/io/FileDescriptor;JJLjava/nio/channels/FileChannel$MapMode;)Ljava/nio/MemoryBlock;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L0d39fc.   v2:= 0  @length wide16;
#L0d3a00.   v2:= cmp(v17,v2);
#L0d3a04.   if v2 != 0 then goto L0d3a1a;
#L0d3a08.   v2:= new [|java:nio:MemoryBlock|];
#L0d3a0c.   v3:= 0  @length 4;
#L0d3a0e.   v4:= 0  @length wide16;
#L0d3a12.   call temp:=  [|java:nio:MemoryBlock.<init>|](v2, v3, v4, v5) @signature [|Ljava/nio/MemoryBlock;.<init>:(IJ)V|] @classDescriptor [|java:nio:MemoryBlock|] @type direct;
#L0d3a18.   return v2  @type object;
#L0d3a1a.   v2:= 0  @length wide16;
#L0d3a1e.   v2:= cmp(v15,v2);
#L0d3a22.   if v2 < 0 then goto L0d3a4e;
#L0d3a26.   v2:= 0  @length wide16;
#L0d3a2a.   v2:= cmp(v17,v2);
#L0d3a2e.   if v2 < 0 then goto L0d3a4e;
#L0d3a32.    v2:= nan  @length wide32;
#L0d3a38.   v2:= cmp(v15,v2);
#L0d3a3c.   if v2 > 0 then goto L0d3a4e;
#L0d3a40.    v2:= nan  @length wide32;
#L0d3a46.   v2:= cmp(v17,v2);
#L0d3a4a.   if v2 <= 0 then goto L0d3a9a;
#L0d3a4e.   v2:= new [|java:lang:IllegalArgumentException|];
#L0d3a52.   v3:= new [|java:lang:StringBuilder|];
#L0d3a56.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0d3a5c.   v4:= "offset=" @type (object, string);
#L0d3a60.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3a66.   v3:= temp  @type object;
#L0d3a68.   v0:= v15  @type wide;
#L0d3a6a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3a70.   v3:= temp  @type object;
#L0d3a72.   v4:= " size=" @type (object, string);
#L0d3a76.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3a7c.   v3:= temp  @type object;
#L0d3a7e.   v0:= v17  @type wide;
#L0d3a82.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3a88.   v3:= temp  @type object;
#L0d3a8a.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3a90.   v3:= temp  @type object;
#L0d3a92.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d3a98.   throw v2;
#L0d3a9a.   v2:= @@[|java:nio:channels:FileChannel$MapMode.PRIVATE|]   @type object;
#L0d3a9e.   v0:= v19  @type object;
#L0d3aa2.   if v0 != v2 then goto L0d3aee;
#L0d3aa6.   v2:= @@[|libcore:io:OsConstants.PROT_READ|] ;
#L0d3aaa.   v3:= @@[|libcore:io:OsConstants.PROT_WRITE|] ;
#L0d3aae.   v7:= v2 ^| v3  @type int;
#L0d3ab2.   v8:= @@[|libcore:io:OsConstants.MAP_PRIVATE|] ;
#L0d3ab6.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d3aba.   v3:= 0  @length wide16;
#L0d3abe.   v5:= v17  @type wide;
#L0d3ac2.   v9:= v14  @type object;
#L0d3ac4.   v10:= v15  @type wide;
#L0d3ac6.   call temp:=  [|libcore:io:Os.mmap|](v2, v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature [|Llibcore/io/Os;.mmap:(JJIILjava/io/FileDescriptor;J)J|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d3acc.   v2:= temp  @type wide;
#L0d3ace.   v12:= (int)v2  @type l2i;
#L0d3ad0.   v2:= new [|java:nio:MemoryBlock$MemoryMappedBlock|];
#L0d3ad4.   v3:= 0  @length 4;
#L0d3ad6.   v0:= v17  @type wide;
#L0d3ada.   call temp:=  [|java:nio:MemoryBlock$MemoryMappedBlock.<init>|](v2, v12, v0, v1, v3) @signature [|Ljava/nio/MemoryBlock$MemoryMappedBlock;.<init>:(IJLjava/nio/MemoryBlock$1;)V|] @classDescriptor [|java:nio:MemoryBlock$MemoryMappedBlock|] @type direct;
#L0d3ae0.   goto L0d3a18;
#L0d3ae2.   v13:= Exception  @type object;
#L0d3ae4.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v13) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L0d3aea.   v2:= temp  @type object;
#L0d3aec.   throw v2;
#L0d3aee.   v2:= @@[|java:nio:channels:FileChannel$MapMode.READ_ONLY|]   @type object;
#L0d3af2.   v0:= v19  @type object;
#L0d3af6.   if v0 != v2 then goto L0d3b04;
#L0d3afa.   v7:= @@[|libcore:io:OsConstants.PROT_READ|] ;
#L0d3afe.   v8:= @@[|libcore:io:OsConstants.MAP_SHARED|] ;
#L0d3b02.   goto L0d3ab6;
#L0d3b04.   v2:= @@[|libcore:io:OsConstants.PROT_READ|] ;
#L0d3b08.   v3:= @@[|libcore:io:OsConstants.PROT_WRITE|] ;
#L0d3b0c.   v7:= v2 ^| v3  @type int;
#L0d3b10.   v8:= @@[|libcore:io:OsConstants.MAP_SHARED|] ;
#L0d3b14.   goto L0d3ab6;
  catch  [|libcore:io:ErrnoException|] @[L0d3ab6..L0d3ae0] goto L0d3ae2;

   }
    procedure [|java:nio:MemoryBlock|] [|java:nio:MemoryBlock.wrapFromJni|] ([|int|] v2, [|long|] v3) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.wrapFromJni:(IJ)Ljava/nio/MemoryBlock;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0d3b38.   v0:= new [|java:nio:MemoryBlock$UnmanagedBlock|];
#L0d3b3c.   v1:= 0  @length 4;
#L0d3b3e.   call temp:=  [|java:nio:MemoryBlock$UnmanagedBlock.<init>|](v0, v2, v3, v4, v1) @signature [|Ljava/nio/MemoryBlock$UnmanagedBlock;.<init>:(IJLjava/nio/MemoryBlock$1;)V|] @classDescriptor [|java:nio:MemoryBlock$UnmanagedBlock|] @type direct;
#L0d3b44.   return v0  @type object;

   }
    procedure [|byte|][] [|java:nio:MemoryBlock.array|] ([|java:nio:MemoryBlock|] v1 @type (this)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.array:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d3b58.   v0:= 0  @length 4;
#L0d3b5a.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:MemoryBlock.free|] ([|java:nio:MemoryBlock|] v0 @type (this)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.free:()V|] @Access PUBLIC {
      local temp ;
      
#L0d3b6c.   return @void ;

   }
    procedure [|long|] [|java:nio:MemoryBlock.getSize|] ([|java:nio:MemoryBlock|] v2 @type (this)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.getSize:()J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d3b80.   v0:= v2.[|java:nio:MemoryBlock.size|]   @wide;
#L0d3b84.   return v0  @type wide;

   }
    procedure [|byte|] [|java:nio:MemoryBlock.peekByte|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekByte:(I)B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3b98.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3b9c.   v0:= v0 + v2  @type int;
#L0d3b9e.   call temp:=  [|libcore:io:Memory.peekByte|](v0) @signature [|Llibcore/io/Memory;.peekByte:(I)B|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3ba4.   v0:= temp;
#L0d3ba6.   return v0;

   }
    procedure [|void|] [|java:nio:MemoryBlock.peekByteArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekByteArray:(I[BII)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3bb8.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3bbc.   v0:= v0 + v2  @type int;
#L0d3bbe.   call temp:=  [|libcore:io:Memory.peekByteArray|](v0, v3, v4, v5) @signature [|Llibcore/io/Memory;.peekByteArray:(I[BII)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3bc4.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.peekCharArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|char|][] v3, [|int|] v4, [|int|] v5, [|boolean|] v6) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekCharArray:(I[CIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3bd8.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3bdc.   v0:= v0 + v2  @type int;
#L0d3bde.   call temp:=  [|libcore:io:Memory.peekCharArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.peekCharArray:(I[CIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3be4.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.peekDoubleArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|double|][] v3, [|int|] v5, [|int|] v6, [|boolean|] v7) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekDoubleArray:(I[DIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3bf8.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3bfc.   v0:= v0 + v2  @type int;
#L0d3bfe.   call temp:=  [|libcore:io:Memory.peekDoubleArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.peekDoubleArray:(I[DIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3c04.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.peekFloatArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|float|][] v3, [|int|] v4, [|int|] v5, [|boolean|] v6) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekFloatArray:(I[FIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3c18.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3c1c.   v0:= v0 + v2  @type int;
#L0d3c1e.   call temp:=  [|libcore:io:Memory.peekFloatArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.peekFloatArray:(I[FIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3c24.   return @void ;

   }
    procedure [|int|] [|java:nio:MemoryBlock.peekInt|] ([|java:nio:MemoryBlock|] v2 @type (this), [|int|] v3, [|java:nio:ByteOrder|] v4 @type (object)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekInt:(ILjava/nio/ByteOrder;)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d3c38.   v0:= v2.[|java:nio:MemoryBlock.address|] ;
#L0d3c3c.   v0:= v0 + v3  @type int;
#L0d3c3e.   v1:= v4.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d3c42.   call temp:=  [|libcore:io:Memory.peekInt|](v0, v1) @signature [|Llibcore/io/Memory;.peekInt:(IZ)I|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3c48.   v0:= temp;
#L0d3c4a.   return v0;

   }
    procedure [|void|] [|java:nio:MemoryBlock.peekIntArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|int|][] v3, [|int|] v4, [|int|] v5, [|boolean|] v6) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekIntArray:(I[IIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3c5c.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3c60.   v0:= v0 + v2  @type int;
#L0d3c62.   call temp:=  [|libcore:io:Memory.peekIntArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.peekIntArray:(I[IIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3c68.   return @void ;

   }
    procedure [|long|] [|java:nio:MemoryBlock.peekLong|] ([|java:nio:MemoryBlock|] v2 @type (this), [|int|] v3, [|java:nio:ByteOrder|] v4 @type (object)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekLong:(ILjava/nio/ByteOrder;)J|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d3c7c.   v0:= v2.[|java:nio:MemoryBlock.address|] ;
#L0d3c80.   v0:= v0 + v3  @type int;
#L0d3c82.   v1:= v4.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d3c86.   call temp:=  [|libcore:io:Memory.peekLong|](v0, v1) @signature [|Llibcore/io/Memory;.peekLong:(IZ)J|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3c8c.   v0:= temp  @type wide;
#L0d3c8e.   return v0  @type wide;

   }
    procedure [|void|] [|java:nio:MemoryBlock.peekLongArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|long|][] v3, [|int|] v5, [|int|] v6, [|boolean|] v7) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekLongArray:(I[JIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3ca0.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3ca4.   v0:= v0 + v2  @type int;
#L0d3ca6.   call temp:=  [|libcore:io:Memory.peekLongArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.peekLongArray:(I[JIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3cac.   return @void ;

   }
    procedure [|short|] [|java:nio:MemoryBlock.peekShort|] ([|java:nio:MemoryBlock|] v2 @type (this), [|int|] v3, [|java:nio:ByteOrder|] v4 @type (object)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekShort:(ILjava/nio/ByteOrder;)S|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d3cc0.   v0:= v2.[|java:nio:MemoryBlock.address|] ;
#L0d3cc4.   v0:= v0 + v3  @type int;
#L0d3cc6.   v1:= v4.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d3cca.   call temp:=  [|libcore:io:Memory.peekShort|](v0, v1) @signature [|Llibcore/io/Memory;.peekShort:(IZ)S|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3cd0.   v0:= temp;
#L0d3cd2.   return v0;

   }
    procedure [|void|] [|java:nio:MemoryBlock.peekShortArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|short|][] v3, [|int|] v4, [|int|] v5, [|boolean|] v6) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.peekShortArray:(I[SIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3ce4.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3ce8.   v0:= v0 + v2  @type int;
#L0d3cea.   call temp:=  [|libcore:io:Memory.peekShortArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.peekShortArray:(I[SIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3cf0.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeByte|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|byte|] v3) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeByte:(IB)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3d04.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3d08.   v0:= v0 + v2  @type int;
#L0d3d0a.   call temp:=  [|libcore:io:Memory.pokeByte|](v0, v3) @signature [|Llibcore/io/Memory;.pokeByte:(IB)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3d10.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeByteArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeByteArray:(I[BII)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3d24.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3d28.   v0:= v0 + v2  @type int;
#L0d3d2a.   call temp:=  [|libcore:io:Memory.pokeByteArray|](v0, v3, v4, v5) @signature [|Llibcore/io/Memory;.pokeByteArray:(I[BII)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3d30.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeCharArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|char|][] v3, [|int|] v4, [|int|] v5, [|boolean|] v6) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeCharArray:(I[CIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3d44.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3d48.   v0:= v0 + v2  @type int;
#L0d3d4a.   call temp:=  [|libcore:io:Memory.pokeCharArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.pokeCharArray:(I[CIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3d50.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeDoubleArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|double|][] v3, [|int|] v5, [|int|] v6, [|boolean|] v7) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeDoubleArray:(I[DIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3d64.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3d68.   v0:= v0 + v2  @type int;
#L0d3d6a.   call temp:=  [|libcore:io:Memory.pokeDoubleArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.pokeDoubleArray:(I[DIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3d70.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeFloatArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|float|][] v3, [|int|] v4, [|int|] v5, [|boolean|] v6) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeFloatArray:(I[FIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3d84.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3d88.   v0:= v0 + v2  @type int;
#L0d3d8a.   call temp:=  [|libcore:io:Memory.pokeFloatArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.pokeFloatArray:(I[FIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3d90.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeInt|] ([|java:nio:MemoryBlock|] v2 @type (this), [|int|] v3, [|int|] v4, [|java:nio:ByteOrder|] v5 @type (object)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeInt:(IILjava/nio/ByteOrder;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d3da4.   v0:= v2.[|java:nio:MemoryBlock.address|] ;
#L0d3da8.   v0:= v0 + v3  @type int;
#L0d3daa.   v1:= v5.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d3dae.   call temp:=  [|libcore:io:Memory.pokeInt|](v0, v4, v1) @signature [|Llibcore/io/Memory;.pokeInt:(IIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3db4.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeIntArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|int|][] v3, [|int|] v4, [|int|] v5, [|boolean|] v6) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeIntArray:(I[IIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3dc8.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3dcc.   v0:= v0 + v2  @type int;
#L0d3dce.   call temp:=  [|libcore:io:Memory.pokeIntArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.pokeIntArray:(I[IIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3dd4.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeLong|] ([|java:nio:MemoryBlock|] v2 @type (this), [|int|] v3, [|long|] v4, [|java:nio:ByteOrder|] v6 @type (object)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeLong:(IJLjava/nio/ByteOrder;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d3de8.   v0:= v2.[|java:nio:MemoryBlock.address|] ;
#L0d3dec.   v0:= v0 + v3  @type int;
#L0d3dee.   v1:= v6.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d3df2.   call temp:=  [|libcore:io:Memory.pokeLong|](v0, v4, v5, v1) @signature [|Llibcore/io/Memory;.pokeLong:(IJZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3df8.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeLongArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|long|][] v3, [|int|] v5, [|int|] v6, [|boolean|] v7) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeLongArray:(I[JIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3e0c.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3e10.   v0:= v0 + v2  @type int;
#L0d3e12.   call temp:=  [|libcore:io:Memory.pokeLongArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.pokeLongArray:(I[JIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3e18.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeShort|] ([|java:nio:MemoryBlock|] v2 @type (this), [|int|] v3, [|short|] v4, [|java:nio:ByteOrder|] v5 @type (object)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeShort:(ISLjava/nio/ByteOrder;)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d3e2c.   v0:= v2.[|java:nio:MemoryBlock.address|] ;
#L0d3e30.   v0:= v0 + v3  @type int;
#L0d3e32.   v1:= v5.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d3e36.   call temp:=  [|libcore:io:Memory.pokeShort|](v0, v4, v1) @signature [|Llibcore/io/Memory;.pokeShort:(ISZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3e3c.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock.pokeShortArray|] ([|java:nio:MemoryBlock|] v1 @type (this), [|int|] v2, [|short|][] v3, [|int|] v4, [|int|] v5, [|boolean|] v6) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.pokeShortArray:(I[SIIZ)V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3e50.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3e54.   v0:= v0 + v2  @type int;
#L0d3e56.   call temp:=  [|libcore:io:Memory.pokeShortArray|](v0, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.pokeShortArray:(I[SIIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d3e5c.   return @void ;

   }
    procedure [|int|] [|java:nio:MemoryBlock.toInt|] ([|java:nio:MemoryBlock|] v1 @type (this)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.toInt:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d3e70.   v0:= v1.[|java:nio:MemoryBlock.address|] ;
#L0d3e74.   return v0;

   }
    procedure [|java:lang:String|] [|java:nio:MemoryBlock.toString|] ([|java:nio:MemoryBlock|] v2 @type (this)) @owner [|java:nio:MemoryBlock|] @signature [|Ljava/nio/MemoryBlock;.toString:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d3e88.   v0:= new [|java:lang:StringBuilder|];
#L0d3e8c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0d3e92.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0d3e98.   v1:= temp  @type object;
#L0d3e9a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0d3ea0.   v1:= temp  @type object;
#L0d3ea2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3ea8.   v0:= temp  @type object;
#L0d3eaa.   v1:= "[" @type (object, string);
#L0d3eae.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3eb4.   v0:= temp  @type object;
#L0d3eb6.   v1:= v2.[|java:nio:MemoryBlock.address|] ;
#L0d3eba.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3ec0.   v0:= temp  @type object;
#L0d3ec2.   v1:= "]" @type (object, string);
#L0d3ec6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3ecc.   v0:= temp  @type object;
#L0d3ece.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d3ed4.   v0:= temp  @type object;
#L0d3ed6.   return v0  @type object;

   }
record [|java:nio:MemoryBlock$MemoryMappedBlock|]  @type class @AccessFlag   extends [|java:nio:MemoryBlock|] {
   }
    procedure [|void|] [|java:nio:MemoryBlock$MemoryMappedBlock.<init>|] ([|java:nio:MemoryBlock$MemoryMappedBlock|] v1 @type (this), [|int|] v2, [|long|] v3) @owner [|java:nio:MemoryBlock$MemoryMappedBlock|] @signature [|Ljava/nio/MemoryBlock$MemoryMappedBlock;.<init>:(IJ)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d3ee8.   v0:= 0  @length 4;
#L0d3eea.   call temp:=  [|java:nio:MemoryBlock.<init>|](v1, v2, v3, v4, v0) @signature [|Ljava/nio/MemoryBlock;.<init>:(IJLjava/nio/MemoryBlock$1;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type direct;
#L0d3ef0.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock$MemoryMappedBlock.<init>|] ([|java:nio:MemoryBlock$MemoryMappedBlock|] v0 @type (this), [|int|] v1, [|long|] v2, [|java:nio:MemoryBlock$1|] v4 @type (object)) @owner [|java:nio:MemoryBlock$MemoryMappedBlock|] @signature [|Ljava/nio/MemoryBlock$MemoryMappedBlock;.<init>:(IJLjava/nio/MemoryBlock$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L0d3f04.   call temp:=  [|java:nio:MemoryBlock$MemoryMappedBlock.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/MemoryBlock$MemoryMappedBlock;.<init>:(IJ)V|] @classDescriptor [|java:nio:MemoryBlock$MemoryMappedBlock|] @type direct;
#L0d3f0a.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock$MemoryMappedBlock.finalize|] ([|java:nio:MemoryBlock$MemoryMappedBlock|] v0 @type (this)) @owner [|java:nio:MemoryBlock$MemoryMappedBlock|] @signature [|Ljava/nio/MemoryBlock$MemoryMappedBlock;.finalize:()V|] @Access PROTECTED {
      local temp ;
      
#L0d3f1c.   call temp:=  [|java:nio:MemoryBlock$MemoryMappedBlock.free|](v0) @signature [|Ljava/nio/MemoryBlock$MemoryMappedBlock;.free:()V|] @classDescriptor [|java:nio:MemoryBlock$MemoryMappedBlock|] @type virtual;
#L0d3f22.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock$MemoryMappedBlock.free|] ([|java:nio:MemoryBlock$MemoryMappedBlock|] v6 @type (this)) @owner [|java:nio:MemoryBlock$MemoryMappedBlock|] @signature [|Ljava/nio/MemoryBlock$MemoryMappedBlock;.free:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0d3f34.   v1:= v6.[|java:nio:MemoryBlock$MemoryMappedBlock.address|] ;
#L0d3f38.   if v1 == 0 then goto L0d3f56;
#L0d3f3c.   v1:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d3f40.   v2:= v6.[|java:nio:MemoryBlock$MemoryMappedBlock.address|] ;
#L0d3f44.   v2:= (long)v2  @type i2l;
#L0d3f46.   v4:= v6.[|java:nio:MemoryBlock$MemoryMappedBlock.size|]   @wide;
#L0d3f4a.   call temp:=  [|libcore:io:Os.munmap|](v1, v2, v3, v4, v5) @signature [|Llibcore/io/Os;.munmap:(JJ)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d3f50.   v1:= 0  @length 4;
#L0d3f52.   v6.[|java:nio:MemoryBlock$MemoryMappedBlock.address|]  := v1;
#L0d3f56.   return @void ;
#L0d3f58.   v0:= Exception  @type object;
#L0d3f5a.   v1:= new [|java:lang:AssertionError|];
#L0d3f5e.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0d3f64.   throw v1;
  catch  [|libcore:io:ErrnoException|] @[L0d3f3c..L0d3f50] goto L0d3f58;

   }
record [|java:nio:MemoryBlock$NonMovableHeapBlock|]  @type class @AccessFlag   extends [|java:nio:MemoryBlock|] {
      [|byte|][] [|java:nio:MemoryBlock$NonMovableHeapBlock.array|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:nio:MemoryBlock$NonMovableHeapBlock.<init>|] ([|java:nio:MemoryBlock$NonMovableHeapBlock|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|long|] v4) @owner [|java:nio:MemoryBlock$NonMovableHeapBlock|] @signature [|Ljava/nio/MemoryBlock$NonMovableHeapBlock;.<init>:([BIJ)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d3f88.   v0:= 0  @length 4;
#L0d3f8a.   call temp:=  [|java:nio:MemoryBlock.<init>|](v1, v3, v4, v5, v0) @signature [|Ljava/nio/MemoryBlock;.<init>:(IJLjava/nio/MemoryBlock$1;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type direct;
#L0d3f90.   v1.[|java:nio:MemoryBlock$NonMovableHeapBlock.array|]  := v2 @type object;
#L0d3f94.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock$NonMovableHeapBlock.<init>|] ([|java:nio:MemoryBlock$NonMovableHeapBlock|] v0 @type (this), [|byte|][] v1, [|int|] v2, [|long|] v3, [|java:nio:MemoryBlock$1|] v5 @type (object)) @owner [|java:nio:MemoryBlock$NonMovableHeapBlock|] @signature [|Ljava/nio/MemoryBlock$NonMovableHeapBlock;.<init>:([BIJLjava/nio/MemoryBlock$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L0d3fa8.   call temp:=  [|java:nio:MemoryBlock$NonMovableHeapBlock.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/nio/MemoryBlock$NonMovableHeapBlock;.<init>:([BIJ)V|] @classDescriptor [|java:nio:MemoryBlock$NonMovableHeapBlock|] @type direct;
#L0d3fae.   return @void ;

   }
    procedure [|byte|][] [|java:nio:MemoryBlock$NonMovableHeapBlock.array|] ([|java:nio:MemoryBlock$NonMovableHeapBlock|] v1 @type (this)) @owner [|java:nio:MemoryBlock$NonMovableHeapBlock|] @signature [|Ljava/nio/MemoryBlock$NonMovableHeapBlock;.array:()[B|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d3fc0.   v0:= v1.[|java:nio:MemoryBlock$NonMovableHeapBlock.array|]   @type object;
#L0d3fc4.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:MemoryBlock$NonMovableHeapBlock.free|] ([|java:nio:MemoryBlock$NonMovableHeapBlock|] v1 @type (this)) @owner [|java:nio:MemoryBlock$NonMovableHeapBlock|] @signature [|Ljava/nio/MemoryBlock$NonMovableHeapBlock;.free:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d3fd8.   v0:= 0  @length 4;
#L0d3fda.   v1.[|java:nio:MemoryBlock$NonMovableHeapBlock.array|]  := v0 @type object;
#L0d3fde.   v0:= 0  @length 4;
#L0d3fe0.   v1.[|java:nio:MemoryBlock$NonMovableHeapBlock.address|]  := v0;
#L0d3fe4.   return @void ;

   }
record [|java:nio:MemoryBlock$UnmanagedBlock|]  @type class @AccessFlag   extends [|java:nio:MemoryBlock|] {
   }
    procedure [|void|] [|java:nio:MemoryBlock$UnmanagedBlock.<init>|] ([|java:nio:MemoryBlock$UnmanagedBlock|] v1 @type (this), [|int|] v2, [|long|] v3) @owner [|java:nio:MemoryBlock$UnmanagedBlock|] @signature [|Ljava/nio/MemoryBlock$UnmanagedBlock;.<init>:(IJ)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d3ff8.   v0:= 0  @length 4;
#L0d3ffa.   call temp:=  [|java:nio:MemoryBlock.<init>|](v1, v2, v3, v4, v0) @signature [|Ljava/nio/MemoryBlock;.<init>:(IJLjava/nio/MemoryBlock$1;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type direct;
#L0d4000.   return @void ;

   }
    procedure [|void|] [|java:nio:MemoryBlock$UnmanagedBlock.<init>|] ([|java:nio:MemoryBlock$UnmanagedBlock|] v0 @type (this), [|int|] v1, [|long|] v2, [|java:nio:MemoryBlock$1|] v4 @type (object)) @owner [|java:nio:MemoryBlock$UnmanagedBlock|] @signature [|Ljava/nio/MemoryBlock$UnmanagedBlock;.<init>:(IJLjava/nio/MemoryBlock$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L0d4014.   call temp:=  [|java:nio:MemoryBlock$UnmanagedBlock.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/MemoryBlock$UnmanagedBlock;.<init>:(IJ)V|] @classDescriptor [|java:nio:MemoryBlock$UnmanagedBlock|] @type direct;
#L0d401a.   return @void ;

   }
record [|java:nio:NIOAccess|]  @type class @AccessFlag FINAL  {
   }
    procedure [|void|] [|java:nio:NIOAccess.<init>|] ([|java:nio:NIOAccess|] v0 @type (this)) @owner [|java:nio:NIOAccess|] @signature [|Ljava/nio/NIOAccess;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d402c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d4032.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:nio:NIOAccess.getBaseArray|] ([|java:nio:Buffer|] v1 @type (object)) @owner [|java:nio:NIOAccess|] @signature [|Ljava/nio/NIOAccess;.getBaseArray:(Ljava/nio/Buffer;)Ljava/lang/Object;|] @Access STATIC {
      local temp ;
        v0;
      
#L0d4044.   call temp:=  [|java:nio:Buffer.hasArray|](v1) @signature [|Ljava/nio/Buffer;.hasArray:()Z|] @classDescriptor [|java:nio:Buffer|] @type virtual;
#L0d404a.   v0:= temp;
#L0d404c.   if v0 == 0 then goto L0d405a;
#L0d4050.   call temp:=  [|java:nio:Buffer.array|](v1) @signature [|Ljava/nio/Buffer;.array:()Ljava/lang/Object;|] @classDescriptor [|java:nio:Buffer|] @type virtual;
#L0d4056.   v0:= temp  @type object;
#L0d4058.   return v0  @type object;
#L0d405a.   v0:= 0  @length 4;
#L0d405c.   goto L0d4058;

   }
    procedure [|int|] [|java:nio:NIOAccess.getBaseArrayOffset|] ([|java:nio:Buffer|] v2 @type (object)) @owner [|java:nio:NIOAccess|] @signature [|Ljava/nio/NIOAccess;.getBaseArrayOffset:(Ljava/nio/Buffer;)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0d4070.   call temp:=  [|java:nio:Buffer.hasArray|](v2) @signature [|Ljava/nio/Buffer;.hasArray:()Z|] @classDescriptor [|java:nio:Buffer|] @type virtual;
#L0d4076.   v0:= temp;
#L0d4078.   if v0 == 0 then goto L0d4092;
#L0d407c.   call temp:=  [|java:nio:Buffer.arrayOffset|](v2) @signature [|Ljava/nio/Buffer;.arrayOffset:()I|] @classDescriptor [|java:nio:Buffer|] @type virtual;
#L0d4082.   v0:= temp;
#L0d4084.   v1:= v2.[|java:nio:Buffer.position|] ;
#L0d4088.   v0:= v0 + v1  @type int;
#L0d408a.   v1:= v2.[|java:nio:Buffer._elementSizeShift|] ;
#L0d408e.   v0:= v0 ^< v1  @type int;
#L0d4090.   return v0;
#L0d4092.   v0:= 0  @length 4;
#L0d4094.   goto L0d4090;

   }
    procedure [|long|] [|java:nio:NIOAccess.getBasePointer|] ([|java:nio:Buffer|] v3 @type (object)) @owner [|java:nio:NIOAccess|] @signature [|Ljava/nio/NIOAccess;.getBasePointer:(Ljava/nio/Buffer;)J|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d40a8.   v0:= v3.[|java:nio:Buffer.effectiveDirectAddress|] ;
#L0d40ac.   if v0 != 0 then goto L0d40b6;
#L0d40b0.   v1:= 0  @length wide16;
#L0d40b4.   return v1  @type wide;
#L0d40b6.   v1:= v3.[|java:nio:Buffer.position|] ;
#L0d40ba.   v2:= v3.[|java:nio:Buffer._elementSizeShift|] ;
#L0d40be.   v1:= v1 ^< v2  @type int;
#L0d40c0.   v1:= v1 + v0  @type int;
#L0d40c2.   v1:= (long)v1  @type i2l;
#L0d40c4.   goto L0d40b4;

   }
record [|java:nio:NioUtils|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
    procedure [|void|] [|java:nio:NioUtils.<init>|] ([|java:nio:NioUtils|] v0 @type (this)) @owner [|java:nio:NioUtils|] @signature [|Ljava/nio/NioUtils;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0d40d8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d40de.   return @void ;

   }
    procedure [|void|] [|java:nio:NioUtils.freeDirectBuffer|] ([|java:nio:ByteBuffer|] v1 @type (object)) @owner [|java:nio:NioUtils|] @signature [|Ljava/nio/NioUtils;.freeDirectBuffer:(Ljava/nio/ByteBuffer;)V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d40f0.   if v1 != 0 then goto L0d40f6;
#L0d40f4.   return @void ;
#L0d40f6.   v0:= instanceof @varname v1 @type [|java:nio:DirectByteBuffer|];
#L0d40fa.   if v0 == 0 then goto L0d410a;
#L0d40fe.   v1:= ([|java:nio:DirectByteBuffer|])v1;
#L0d4102.   call temp:=  [|java:nio:DirectByteBuffer.free|](v1) @signature [|Ljava/nio/DirectByteBuffer;.free:()V|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d4108.   goto L0d40f4;
#L0d410a.   v0:= instanceof @varname v1 @type [|java:nio:MappedByteBuffer|];
#L0d410e.   if v0 == 0 then goto L0d411e;
#L0d4112.   v1:= ([|java:nio:MappedByteBufferAdapter|])v1;
#L0d4116.   call temp:=  [|java:nio:MappedByteBufferAdapter.free|](v1) @signature [|Ljava/nio/MappedByteBufferAdapter;.free:()V|] @classDescriptor [|java:nio:MappedByteBufferAdapter|] @type virtual;
#L0d411c.   goto L0d40f4;
#L0d411e.   v0:= new [|java:lang:AssertionError|];
#L0d4122.   call temp:=  [|java:lang:AssertionError.<init>|](v0) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0d4128.   throw v0;

   }
    procedure [|int|] [|java:nio:NioUtils.getDirectBufferAddress|] ([|java:nio:Buffer|] v1 @type (object)) @owner [|java:nio:NioUtils|] @signature [|Ljava/nio/NioUtils;.getDirectBufferAddress:(Ljava/nio/Buffer;)I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d413c.   v0:= v1.[|java:nio:Buffer.effectiveDirectAddress|] ;
#L0d4140.   return v0;

   }
    procedure [|java:io:FileDescriptor|] [|java:nio:NioUtils.getFD|] ([|java:nio:channels:FileChannel|] v1 @type (object)) @owner [|java:nio:NioUtils|] @signature [|Ljava/nio/NioUtils;.getFD:(Ljava/nio/channels/FileChannel;)Ljava/io/FileDescriptor;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d4154.   v1:= ([|java:nio:FileChannelImpl|])v1;
#L0d4158.   call temp:=  [|java:nio:FileChannelImpl.getFD|](v1) @signature [|Ljava/nio/FileChannelImpl;.getFD:()Ljava/io/FileDescriptor;|] @classDescriptor [|java:nio:FileChannelImpl|] @type virtual;
#L0d415e.   v0:= temp  @type object;
#L0d4160.   return v0  @type object;

   }
    procedure [|java:nio:channels:FileChannel|] [|java:nio:NioUtils.newFileChannel|] ([|java:lang:Object|] v1 @type (object), [|java:io:FileDescriptor|] v2 @type (object), [|int|] v3) @owner [|java:nio:NioUtils|] @signature [|Ljava/nio/NioUtils;.newFileChannel:(Ljava/lang/Object;Ljava/io/FileDescriptor;I)Ljava/nio/channels/FileChannel;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d4174.   v0:= new [|java:nio:FileChannelImpl|];
#L0d4178.   call temp:=  [|java:nio:FileChannelImpl.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/FileChannelImpl;.<init>:(Ljava/lang/Object;Ljava/io/FileDescriptor;I)V|] @classDescriptor [|java:nio:FileChannelImpl|] @type direct;
#L0d417e.   return v0  @type object;

   }
    procedure [|byte|][] [|java:nio:NioUtils.unsafeArray|] ([|java:nio:ByteBuffer|] v1 @type (object)) @owner [|java:nio:NioUtils|] @signature [|Ljava/nio/NioUtils;.unsafeArray:(Ljava/nio/ByteBuffer;)[B|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d4190.   v1:= ([|java:nio:HeapByteBuffer|])v1;
#L0d4194.   v0:= v1.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d4198.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:NioUtils.unsafeArrayOffset|] ([|java:nio:ByteBuffer|] v1 @type (object)) @owner [|java:nio:NioUtils|] @signature [|Ljava/nio/NioUtils;.unsafeArrayOffset:(Ljava/nio/ByteBuffer;)I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d41ac.   v1:= ([|java:nio:HeapByteBuffer|])v1;
#L0d41b0.   v0:= v1.[|java:nio:HeapByteBuffer.offset|] ;
#L0d41b4.   return v0;

   }
record [|java:nio:PipeImpl$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|java:nio:channels:Pipe$SinkChannel|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:channels:spi:AbstractSelectableChannel|], [|java:nio:channels:WritableByteChannel|], [|java:nio:channels:GatheringByteChannel|] {
   }
    procedure [|void|] [|java:nio:channels:Pipe$SinkChannel.<init>|] ([|java:nio:channels:Pipe$SinkChannel|] v0 @type (this), [|java:nio:channels:spi:SelectorProvider|] v1 @type (object)) @owner [|java:nio:channels:Pipe$SinkChannel|] @signature [|Ljava/nio/channels/Pipe$SinkChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0d41c8.   call temp:=  [|java:nio:channels:spi:AbstractSelectableChannel.<init>|](v0, v1) @signature [|Ljava/nio/channels/spi/AbstractSelectableChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:spi:AbstractSelectableChannel|] @type direct;
#L0d41ce.   return @void ;

   }
    procedure [|int|] [|java:nio:channels:Pipe$SinkChannel.validOps|] ([|java:nio:channels:Pipe$SinkChannel|] v1 @type (this)) @owner [|java:nio:channels:Pipe$SinkChannel|] @signature [|Ljava/nio/channels/Pipe$SinkChannel;.validOps:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d41e0.   v0:= 4  @length 4;
#L0d41e2.   return v0;

   }
record [|java:nio:PipeImpl$PipeSinkChannel|]  @type class @AccessFlag   extends [|java:nio:channels:Pipe$SinkChannel|], [|java:nio:FileDescriptorChannel|] {
      [|java:nio:channels:SocketChannel|] [|java:nio:PipeImpl$PipeSinkChannel.channel|]    @AccessFlag PRIVATE_FINAL;
      [|java:io:FileDescriptor|] [|java:nio:PipeImpl$PipeSinkChannel.fd|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:PipeImpl|] [|java:nio:PipeImpl$PipeSinkChannel.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:nio:PipeImpl$PipeSinkChannel.<init>|] ([|java:nio:PipeImpl$PipeSinkChannel|] v1 @type (this), [|java:nio:PipeImpl|] v2 @type (object), [|java:nio:channels:spi:SelectorProvider|] v3 @type (object), [|java:io:FileDescriptor|] v4 @type (object)) @owner [|java:nio:PipeImpl$PipeSinkChannel|] @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.<init>:(Ljava/nio/PipeImpl;Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d41f4.   v1.[|java:nio:PipeImpl$PipeSinkChannel.this$0|]  := v2 @type object;
#L0d41f8.   call temp:=  [|java:nio:channels:Pipe$SinkChannel.<init>|](v1, v3) @signature [|Ljava/nio/channels/Pipe$SinkChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:Pipe$SinkChannel|] @type direct;
#L0d41fe.   v1.[|java:nio:PipeImpl$PipeSinkChannel.fd|]  := v4 @type object;
#L0d4202.   v0:= new [|java:nio:SocketChannelImpl|];
#L0d4206.   call temp:=  [|java:nio:SocketChannelImpl.<init>|](v0, v3, v4) @signature [|Ljava/nio/SocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d420c.   v1.[|java:nio:PipeImpl$PipeSinkChannel.channel|]  := v0 @type object;
#L0d4210.   return @void ;

   }
    procedure [|void|] [|java:nio:PipeImpl$PipeSinkChannel.<init>|] ([|java:nio:PipeImpl$PipeSinkChannel|] v0 @type (this), [|java:nio:PipeImpl|] v1 @type (object), [|java:nio:channels:spi:SelectorProvider|] v2 @type (object), [|java:io:FileDescriptor|] v3 @type (object), [|java:nio:PipeImpl$1|] v4 @type (object)) @owner [|java:nio:PipeImpl$PipeSinkChannel|] @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.<init>:(Ljava/nio/PipeImpl;Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;Ljava/nio/PipeImpl$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L0d4224.   call temp:=  [|java:nio:PipeImpl$PipeSinkChannel.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.<init>:(Ljava/nio/PipeImpl;Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;)V|] @classDescriptor [|java:nio:PipeImpl$PipeSinkChannel|] @type direct;
#L0d422a.   return @void ;

   }
    procedure [|java:io:FileDescriptor|] [|java:nio:PipeImpl$PipeSinkChannel.getFD|] ([|java:nio:PipeImpl$PipeSinkChannel|] v1 @type (this)) @owner [|java:nio:PipeImpl$PipeSinkChannel|] @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.getFD:()Ljava/io/FileDescriptor;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d423c.   v0:= v1.[|java:nio:PipeImpl$PipeSinkChannel.fd|]   @type object;
#L0d4240.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:PipeImpl$PipeSinkChannel.implCloseSelectableChannel|] ([|java:nio:PipeImpl$PipeSinkChannel|] v1 @type (this)) @owner [|java:nio:PipeImpl$PipeSinkChannel|] @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.implCloseSelectableChannel:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0d4254.   v0:= v1.[|java:nio:PipeImpl$PipeSinkChannel.channel|]   @type object;
#L0d4258.   call temp:=  [|java:nio:channels:SocketChannel.close|](v0) @signature [|Ljava/nio/channels/SocketChannel;.close:()V|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d425e.   return @void ;

   }
    procedure [|void|] [|java:nio:PipeImpl$PipeSinkChannel.implConfigureBlocking|] ([|java:nio:PipeImpl$PipeSinkChannel|] v1 @type (this), [|boolean|] v2) @owner [|java:nio:PipeImpl$PipeSinkChannel|] @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.implConfigureBlocking:(Z)V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0d4270.   call temp:=  [|java:nio:PipeImpl$PipeSinkChannel.getFD|](v1) @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.getFD:()Ljava/io/FileDescriptor;|] @classDescriptor [|java:nio:PipeImpl$PipeSinkChannel|] @type virtual;
#L0d4276.   v0:= temp  @type object;
#L0d4278.   call temp:=  [|libcore:io:IoUtils.setBlocking|](v0, v2) @signature [|Llibcore/io/IoUtils;.setBlocking:(Ljava/io/FileDescriptor;Z)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L0d427e.   return @void ;

   }
    procedure [|int|] [|java:nio:PipeImpl$PipeSinkChannel.write|] ([|java:nio:PipeImpl$PipeSinkChannel|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:PipeImpl$PipeSinkChannel|] @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.write:(Ljava/nio/ByteBuffer;)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4290.   v0:= v1.[|java:nio:PipeImpl$PipeSinkChannel.channel|]   @type object;
#L0d4294.   call temp:=  [|java:nio:channels:SocketChannel.write|](v0, v2) @signature [|Ljava/nio/channels/SocketChannel;.write:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d429a.   v0:= temp;
#L0d429c.   return v0;

   }
    procedure [|long|] [|java:nio:PipeImpl$PipeSinkChannel.write|] ([|java:nio:PipeImpl$PipeSinkChannel|] v2 @type (this), [|java:nio:ByteBuffer|][] v3 @type (object)) @owner [|java:nio:PipeImpl$PipeSinkChannel|] @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.write:([Ljava/nio/ByteBuffer;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d42b0.   v0:= v2.[|java:nio:PipeImpl$PipeSinkChannel.channel|]   @type object;
#L0d42b4.   call temp:=  [|java:nio:channels:SocketChannel.write|](v0, v3) @signature [|Ljava/nio/channels/SocketChannel;.write:([Ljava/nio/ByteBuffer;)J|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d42ba.   v0:= temp  @type wide;
#L0d42bc.   return v0  @type wide;

   }
    procedure [|long|] [|java:nio:PipeImpl$PipeSinkChannel.write|] ([|java:nio:PipeImpl$PipeSinkChannel|] v2 @type (this), [|java:nio:ByteBuffer|][] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:nio:PipeImpl$PipeSinkChannel|] @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.write:([Ljava/nio/ByteBuffer;II)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d42d0.   v0:= v2.[|java:nio:PipeImpl$PipeSinkChannel.channel|]   @type object;
#L0d42d4.   call temp:=  [|java:nio:channels:SocketChannel.write|](v0, v3, v4, v5) @signature [|Ljava/nio/channels/SocketChannel;.write:([Ljava/nio/ByteBuffer;II)J|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d42da.   v0:= temp  @type wide;
#L0d42dc.   return v0  @type wide;

   }
record [|java:nio:channels:Pipe$SourceChannel|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:channels:spi:AbstractSelectableChannel|], [|java:nio:channels:ReadableByteChannel|], [|java:nio:channels:ScatteringByteChannel|] {
   }
    procedure [|void|] [|java:nio:channels:Pipe$SourceChannel.<init>|] ([|java:nio:channels:Pipe$SourceChannel|] v0 @type (this), [|java:nio:channels:spi:SelectorProvider|] v1 @type (object)) @owner [|java:nio:channels:Pipe$SourceChannel|] @signature [|Ljava/nio/channels/Pipe$SourceChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0d42f0.   call temp:=  [|java:nio:channels:spi:AbstractSelectableChannel.<init>|](v0, v1) @signature [|Ljava/nio/channels/spi/AbstractSelectableChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:spi:AbstractSelectableChannel|] @type direct;
#L0d42f6.   return @void ;

   }
    procedure [|int|] [|java:nio:channels:Pipe$SourceChannel.validOps|] ([|java:nio:channels:Pipe$SourceChannel|] v1 @type (this)) @owner [|java:nio:channels:Pipe$SourceChannel|] @signature [|Ljava/nio/channels/Pipe$SourceChannel;.validOps:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d4308.   v0:= 1  @length 4;
#L0d430a.   return v0;

   }
record [|java:nio:PipeImpl$PipeSourceChannel|]  @type class @AccessFlag   extends [|java:nio:channels:Pipe$SourceChannel|], [|java:nio:FileDescriptorChannel|] {
      [|java:nio:channels:SocketChannel|] [|java:nio:PipeImpl$PipeSourceChannel.channel|]    @AccessFlag PRIVATE_FINAL;
      [|java:io:FileDescriptor|] [|java:nio:PipeImpl$PipeSourceChannel.fd|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:PipeImpl|] [|java:nio:PipeImpl$PipeSourceChannel.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:nio:PipeImpl$PipeSourceChannel.<init>|] ([|java:nio:PipeImpl$PipeSourceChannel|] v1 @type (this), [|java:nio:PipeImpl|] v2 @type (object), [|java:nio:channels:spi:SelectorProvider|] v3 @type (object), [|java:io:FileDescriptor|] v4 @type (object)) @owner [|java:nio:PipeImpl$PipeSourceChannel|] @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.<init>:(Ljava/nio/PipeImpl;Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d431c.   v1.[|java:nio:PipeImpl$PipeSourceChannel.this$0|]  := v2 @type object;
#L0d4320.   call temp:=  [|java:nio:channels:Pipe$SourceChannel.<init>|](v1, v3) @signature [|Ljava/nio/channels/Pipe$SourceChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:Pipe$SourceChannel|] @type direct;
#L0d4326.   v1.[|java:nio:PipeImpl$PipeSourceChannel.fd|]  := v4 @type object;
#L0d432a.   v0:= new [|java:nio:SocketChannelImpl|];
#L0d432e.   call temp:=  [|java:nio:SocketChannelImpl.<init>|](v0, v3, v4) @signature [|Ljava/nio/SocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d4334.   v1.[|java:nio:PipeImpl$PipeSourceChannel.channel|]  := v0 @type object;
#L0d4338.   return @void ;

   }
    procedure [|void|] [|java:nio:PipeImpl$PipeSourceChannel.<init>|] ([|java:nio:PipeImpl$PipeSourceChannel|] v0 @type (this), [|java:nio:PipeImpl|] v1 @type (object), [|java:nio:channels:spi:SelectorProvider|] v2 @type (object), [|java:io:FileDescriptor|] v3 @type (object), [|java:nio:PipeImpl$1|] v4 @type (object)) @owner [|java:nio:PipeImpl$PipeSourceChannel|] @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.<init>:(Ljava/nio/PipeImpl;Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;Ljava/nio/PipeImpl$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L0d434c.   call temp:=  [|java:nio:PipeImpl$PipeSourceChannel.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.<init>:(Ljava/nio/PipeImpl;Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;)V|] @classDescriptor [|java:nio:PipeImpl$PipeSourceChannel|] @type direct;
#L0d4352.   return @void ;

   }
    procedure [|java:io:FileDescriptor|] [|java:nio:PipeImpl$PipeSourceChannel.getFD|] ([|java:nio:PipeImpl$PipeSourceChannel|] v1 @type (this)) @owner [|java:nio:PipeImpl$PipeSourceChannel|] @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.getFD:()Ljava/io/FileDescriptor;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4364.   v0:= v1.[|java:nio:PipeImpl$PipeSourceChannel.fd|]   @type object;
#L0d4368.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:PipeImpl$PipeSourceChannel.implCloseSelectableChannel|] ([|java:nio:PipeImpl$PipeSourceChannel|] v1 @type (this)) @owner [|java:nio:PipeImpl$PipeSourceChannel|] @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.implCloseSelectableChannel:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0d437c.   v0:= v1.[|java:nio:PipeImpl$PipeSourceChannel.channel|]   @type object;
#L0d4380.   call temp:=  [|java:nio:channels:SocketChannel.close|](v0) @signature [|Ljava/nio/channels/SocketChannel;.close:()V|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d4386.   return @void ;

   }
    procedure [|void|] [|java:nio:PipeImpl$PipeSourceChannel.implConfigureBlocking|] ([|java:nio:PipeImpl$PipeSourceChannel|] v1 @type (this), [|boolean|] v2) @owner [|java:nio:PipeImpl$PipeSourceChannel|] @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.implConfigureBlocking:(Z)V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0d4398.   call temp:=  [|java:nio:PipeImpl$PipeSourceChannel.getFD|](v1) @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.getFD:()Ljava/io/FileDescriptor;|] @classDescriptor [|java:nio:PipeImpl$PipeSourceChannel|] @type virtual;
#L0d439e.   v0:= temp  @type object;
#L0d43a0.   call temp:=  [|libcore:io:IoUtils.setBlocking|](v0, v2) @signature [|Llibcore/io/IoUtils;.setBlocking:(Ljava/io/FileDescriptor;Z)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L0d43a6.   return @void ;

   }
    procedure [|int|] [|java:nio:PipeImpl$PipeSourceChannel.read|] ([|java:nio:PipeImpl$PipeSourceChannel|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:PipeImpl$PipeSourceChannel|] @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.read:(Ljava/nio/ByteBuffer;)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d43b8.   v0:= v1.[|java:nio:PipeImpl$PipeSourceChannel.channel|]   @type object;
#L0d43bc.   call temp:=  [|java:nio:channels:SocketChannel.read|](v0, v2) @signature [|Ljava/nio/channels/SocketChannel;.read:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d43c2.   v0:= temp;
#L0d43c4.   return v0;

   }
    procedure [|long|] [|java:nio:PipeImpl$PipeSourceChannel.read|] ([|java:nio:PipeImpl$PipeSourceChannel|] v2 @type (this), [|java:nio:ByteBuffer|][] v3 @type (object)) @owner [|java:nio:PipeImpl$PipeSourceChannel|] @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.read:([Ljava/nio/ByteBuffer;)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d43d8.   v0:= v2.[|java:nio:PipeImpl$PipeSourceChannel.channel|]   @type object;
#L0d43dc.   call temp:=  [|java:nio:channels:SocketChannel.read|](v0, v3) @signature [|Ljava/nio/channels/SocketChannel;.read:([Ljava/nio/ByteBuffer;)J|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d43e2.   v0:= temp  @type wide;
#L0d43e4.   return v0  @type wide;

   }
    procedure [|long|] [|java:nio:PipeImpl$PipeSourceChannel.read|] ([|java:nio:PipeImpl$PipeSourceChannel|] v2 @type (this), [|java:nio:ByteBuffer|][] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:nio:PipeImpl$PipeSourceChannel|] @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.read:([Ljava/nio/ByteBuffer;II)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d43f8.   v0:= v2.[|java:nio:PipeImpl$PipeSourceChannel.channel|]   @type object;
#L0d43fc.   call temp:=  [|java:nio:channels:SocketChannel.read|](v0, v3, v4, v5) @signature [|Ljava/nio/channels/SocketChannel;.read:([Ljava/nio/ByteBuffer;II)J|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d4402.   v0:= temp  @type wide;
#L0d4404.   return v0  @type wide;

   }
record [|java:nio:channels:Pipe|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:nio:channels:Pipe.<init>|] ([|java:nio:channels:Pipe|] v0 @type (this)) @owner [|java:nio:channels:Pipe|] @signature [|Ljava/nio/channels/Pipe;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0d4418.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d441e.   return @void ;

   }
    procedure [|java:nio:channels:Pipe|] [|java:nio:channels:Pipe.open|] () @owner [|java:nio:channels:Pipe|] @signature [|Ljava/nio/channels/Pipe;.open:()Ljava/nio/channels/Pipe;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d4430.   call temp:=  [|java:nio:channels:spi:SelectorProvider.provider|]() @signature [|Ljava/nio/channels/spi/SelectorProvider;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type static;
#L0d4436.   v0:= temp  @type object;
#L0d4438.   call temp:=  [|java:nio:channels:spi:SelectorProvider.openPipe|](v0) @signature [|Ljava/nio/channels/spi/SelectorProvider;.openPipe:()Ljava/nio/channels/Pipe;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type virtual;
#L0d443e.   v0:= temp  @type object;
#L0d4440.   return v0  @type object;

   }
    procedure [|java:nio:channels:Pipe$SinkChannel|] [|java:nio:channels:Pipe.sink|] () @owner [|java:nio:channels:Pipe|] @signature [|Ljava/nio/channels/Pipe;.sink:()Ljava/nio/channels/Pipe$SinkChannel;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:Pipe$SourceChannel|] [|java:nio:channels:Pipe.source|] () @owner [|java:nio:channels:Pipe|] @signature [|Ljava/nio/channels/Pipe;.source:()Ljava/nio/channels/Pipe$SourceChannel;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:nio:PipeImpl|]  @type class @AccessFlag FINAL  extends [|java:nio:channels:Pipe|] {
      [|java:nio:PipeImpl$PipeSinkChannel|] [|java:nio:PipeImpl.sink|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:PipeImpl$PipeSourceChannel|] [|java:nio:PipeImpl.source|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:PipeImpl.<init>|] ([|java:nio:PipeImpl|] v7 @type (this), [|java:nio:channels:spi:SelectorProvider|] v8 @type (object)) @owner [|java:nio:PipeImpl|] @signature [|Ljava/nio/PipeImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d4454.   call temp:=  [|java:nio:channels:Pipe.<init>|](v7) @signature [|Ljava/nio/channels/Pipe;.<init>:()V|] @classDescriptor [|java:nio:channels:Pipe|] @type direct;
#L0d445a.   v4:= new [|java:io:FileDescriptor|];
#L0d445e.   call temp:=  [|java:io:FileDescriptor.<init>|](v4) @signature [|Ljava/io/FileDescriptor;.<init>:()V|] @classDescriptor [|java:io:FileDescriptor|] @type direct;
#L0d4464.   v5:= new [|java:io:FileDescriptor|];
#L0d4468.   call temp:=  [|java:io:FileDescriptor.<init>|](v5) @signature [|Ljava/io/FileDescriptor;.<init>:()V|] @classDescriptor [|java:io:FileDescriptor|] @type direct;
#L0d446e.   v0:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d4472.   v1:= @@[|libcore:io:OsConstants.AF_UNIX|] ;
#L0d4476.   v2:= @@[|libcore:io:OsConstants.SOCK_STREAM|] ;
#L0d447a.   v3:= 0  @length 4;
#L0d447c.   call temp:=  [|libcore:io:Os.socketpair|](v0, v1, v2, v3, v4, v5) @signature [|Llibcore/io/Os;.socketpair:(IIILjava/io/FileDescriptor;Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d4482.   v0:= new [|java:nio:PipeImpl$PipeSinkChannel|];
#L0d4486.   v1:= 0  @length 4;
#L0d4488.   call temp:=  [|java:nio:PipeImpl$PipeSinkChannel.<init>|](v0, v7, v8, v4, v1) @signature [|Ljava/nio/PipeImpl$PipeSinkChannel;.<init>:(Ljava/nio/PipeImpl;Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;Ljava/nio/PipeImpl$1;)V|] @classDescriptor [|java:nio:PipeImpl$PipeSinkChannel|] @type direct;
#L0d448e.   v7.[|java:nio:PipeImpl.sink|]  := v0 @type object;
#L0d4492.   v0:= new [|java:nio:PipeImpl$PipeSourceChannel|];
#L0d4496.   v1:= 0  @length 4;
#L0d4498.   call temp:=  [|java:nio:PipeImpl$PipeSourceChannel.<init>|](v0, v7, v8, v5, v1) @signature [|Ljava/nio/PipeImpl$PipeSourceChannel;.<init>:(Ljava/nio/PipeImpl;Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;Ljava/nio/PipeImpl$1;)V|] @classDescriptor [|java:nio:PipeImpl$PipeSourceChannel|] @type direct;
#L0d449e.   v7.[|java:nio:PipeImpl.source|]  := v0 @type object;
#L0d44a2.   return @void ;
#L0d44a4.   v6:= Exception  @type object;
#L0d44a6.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v6) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L0d44ac.   v0:= temp  @type object;
#L0d44ae.   throw v0;
  catch  [|libcore:io:ErrnoException|] @[L0d445a..L0d44a2] goto L0d44a4;

   }
    procedure [|java:nio:channels:Pipe$SinkChannel|] [|java:nio:PipeImpl.sink|] ([|java:nio:PipeImpl|] v1 @type (this)) @owner [|java:nio:PipeImpl|] @signature [|Ljava/nio/PipeImpl;.sink:()Ljava/nio/channels/Pipe$SinkChannel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d44d0.   v0:= v1.[|java:nio:PipeImpl.sink|]   @type object;
#L0d44d4.   return v0  @type object;

   }
    procedure [|java:nio:channels:Pipe$SourceChannel|] [|java:nio:PipeImpl.source|] ([|java:nio:PipeImpl|] v1 @type (this)) @owner [|java:nio:PipeImpl|] @signature [|Ljava/nio/PipeImpl;.source:()Ljava/nio/channels/Pipe$SourceChannel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d44e8.   v0:= v1.[|java:nio:PipeImpl.source|]   @type object;
#L0d44ec.   return v0  @type object;

   }
record [|java:nio:ReadOnlyBufferException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:UnsupportedOperationException|] {
   }
      global [|long|] @@[|java:nio:ReadOnlyBufferException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:ReadOnlyBufferException.<init>|] ([|java:nio:ReadOnlyBufferException|] v0 @type (this)) @owner [|java:nio:ReadOnlyBufferException|] @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d4500.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0d4506.   return @void ;

   }
record [|java:nio:ReadOnlyCharArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:CharArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadOnlyCharArrayBuffer.<init>|] ([|java:nio:ReadOnlyCharArrayBuffer|] v0 @type (this), [|int|] v1, [|char|][] v2, [|int|] v3) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.<init>:(I[CI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d4518.   call temp:=  [|java:nio:CharArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/CharArrayBuffer;.<init>:(I[CI)V|] @classDescriptor [|java:nio:CharArrayBuffer|] @type direct;
#L0d451e.   return @void ;

   }
    procedure [|java:nio:ReadOnlyCharArrayBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.copy|] ([|java:nio:CharArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.copy:(Ljava/nio/CharArrayBuffer;I)Ljava/nio/ReadOnlyCharArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d4530.   v0:= new [|java:nio:ReadOnlyCharArrayBuffer|];
#L0d4534.   call temp:=  [|java:nio:CharArrayBuffer.capacity|](v4) @signature [|Ljava/nio/CharArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:CharArrayBuffer|] @type virtual;
#L0d453a.   v1:= temp;
#L0d453c.   v2:= v4.[|java:nio:CharArrayBuffer.backingArray|]   @type object;
#L0d4540.   v3:= v4.[|java:nio:CharArrayBuffer.offset|] ;
#L0d4544.   call temp:=  [|java:nio:ReadOnlyCharArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.<init>:(I[CI)V|] @classDescriptor [|java:nio:ReadOnlyCharArrayBuffer|] @type direct;
#L0d454a.   v1:= v4.[|java:nio:CharArrayBuffer.limit|] ;
#L0d454e.   v0.[|java:nio:ReadOnlyCharArrayBuffer.limit|]  := v1;
#L0d4552.   call temp:=  [|java:nio:CharArrayBuffer.position|](v4) @signature [|Ljava/nio/CharArrayBuffer;.position:()I|] @classDescriptor [|java:nio:CharArrayBuffer|] @type virtual;
#L0d4558.   v1:= temp;
#L0d455a.   v0.[|java:nio:ReadOnlyCharArrayBuffer.position|]  := v1;
#L0d455e.   v0.[|java:nio:ReadOnlyCharArrayBuffer.mark|]  := v5;
#L0d4562.   return v0  @type object;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4574.   call temp:=  [|java:nio:ReadOnlyCharArrayBuffer.duplicate|](v1) @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.duplicate:()Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:ReadOnlyCharArrayBuffer|] @type virtual;
#L0d457a.   v0:= temp  @type object;
#L0d457c.   return v0  @type object;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.compact|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.compact:()Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4590.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4594.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d459a.   throw v0;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.duplicate|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.duplicate:()Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d45ac.   v0:= v1.[|java:nio:ReadOnlyCharArrayBuffer.mark|] ;
#L0d45b0.   call temp:=  [|java:nio:ReadOnlyCharArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.copy:(Ljava/nio/CharArrayBuffer;I)Ljava/nio/ReadOnlyCharArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyCharArrayBuffer|] @type static;
#L0d45b6.   v0:= temp  @type object;
#L0d45b8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyCharArrayBuffer.isReadOnly|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d45cc.   v0:= 1  @length 4;
#L0d45ce.   return v0;

   }
    procedure [|char|][] [|java:nio:ReadOnlyCharArrayBuffer.protectedArray|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.protectedArray:()[C|] @Access  {
      local temp ;
        v0;
      
#L0d45e0.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d45e4.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d45ea.   throw v0;

   }
    procedure [|int|] [|java:nio:ReadOnlyCharArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d45fc.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4600.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4606.   throw v0;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyCharArrayBuffer.protectedHasArray|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d4618.   v0:= 0  @length 4;
#L0d461a.   return v0;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.put|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this), [|char|] v2) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.put:(C)Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d462c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4630.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4636.   throw v0;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.put|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this), [|int|] v2, [|char|] v3) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.put:(IC)Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4648.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d464c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4652.   throw v0;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.put|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.put:(Ljava/lang/String;II)Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4664.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4668.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d466e.   throw v0;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.put|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this), [|java:nio:CharBuffer|] v2 @type (object)) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.put:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d4680.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4684.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d468a.   throw v0;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.put|] ([|java:nio:ReadOnlyCharArrayBuffer|] v1 @type (this), [|char|][] v2, [|int|] v3, [|int|] v4) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.put:([CII)Ljava/nio/CharBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d469c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d46a0.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d46a6.   throw v0;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadOnlyCharArrayBuffer.slice|] ([|java:nio:ReadOnlyCharArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadOnlyCharArrayBuffer|] @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.slice:()Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d46b8.   v0:= new [|java:nio:ReadOnlyCharArrayBuffer|];
#L0d46bc.   call temp:=  [|java:nio:ReadOnlyCharArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadOnlyCharArrayBuffer|] @type virtual;
#L0d46c2.   v1:= temp;
#L0d46c4.   v2:= v5.[|java:nio:ReadOnlyCharArrayBuffer.backingArray|]   @type object;
#L0d46c8.   v3:= v5.[|java:nio:ReadOnlyCharArrayBuffer.offset|] ;
#L0d46cc.   v4:= v5.[|java:nio:ReadOnlyCharArrayBuffer.position|] ;
#L0d46d0.   v3:= v3 + v4  @type int;
#L0d46d2.   call temp:=  [|java:nio:ReadOnlyCharArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.<init>:(I[CI)V|] @classDescriptor [|java:nio:ReadOnlyCharArrayBuffer|] @type direct;
#L0d46d8.   return v0  @type object;

   }
record [|java:nio:ReadOnlyDirectByteBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:DirectByteBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadOnlyDirectByteBuffer.<init>|] ([|java:nio:ReadOnlyDirectByteBuffer|] v0 @type (this), [|java:nio:MemoryBlock|] v1 @type (object), [|int|] v2, [|int|] v3) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0d46ec.   call temp:=  [|java:nio:DirectByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/DirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:DirectByteBuffer|] @type direct;
#L0d46f2.   return @void ;

   }
    procedure [|java:nio:ReadOnlyDirectByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.copy|] ([|java:nio:DirectByteBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.copy:(Ljava/nio/DirectByteBuffer;I)Ljava/nio/ReadOnlyDirectByteBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d4704.   v0:= new [|java:nio:ReadOnlyDirectByteBuffer|];
#L0d4708.   v1:= v4.[|java:nio:DirectByteBuffer.block|]   @type object;
#L0d470c.   call temp:=  [|java:nio:DirectByteBuffer.capacity|](v4) @signature [|Ljava/nio/DirectByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d4712.   v2:= temp;
#L0d4714.   v3:= v4.[|java:nio:DirectByteBuffer.offset|] ;
#L0d4718.   call temp:=  [|java:nio:ReadOnlyDirectByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:ReadOnlyDirectByteBuffer|] @type direct;
#L0d471e.   v1:= v4.[|java:nio:DirectByteBuffer.limit|] ;
#L0d4722.   v0.[|java:nio:ReadOnlyDirectByteBuffer.limit|]  := v1;
#L0d4726.   call temp:=  [|java:nio:DirectByteBuffer.position|](v4) @signature [|Ljava/nio/DirectByteBuffer;.position:()I|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d472c.   v1:= temp;
#L0d472e.   v0.[|java:nio:ReadOnlyDirectByteBuffer.position|]  := v1;
#L0d4732.   v0.[|java:nio:ReadOnlyDirectByteBuffer.mark|]  := v5;
#L0d4736.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.asReadOnlyBuffer|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4748.   v0:= v1.[|java:nio:ReadOnlyDirectByteBuffer.mark|] ;
#L0d474c.   call temp:=  [|java:nio:ReadOnlyDirectByteBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.copy:(Ljava/nio/DirectByteBuffer;I)Ljava/nio/ReadOnlyDirectByteBuffer;|] @classDescriptor [|java:nio:ReadOnlyDirectByteBuffer|] @type static;
#L0d4752.   v0:= temp  @type object;
#L0d4754.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.compact|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.compact:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4768.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d476c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4772.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.duplicate|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4784.   v0:= v1.[|java:nio:ReadOnlyDirectByteBuffer.mark|] ;
#L0d4788.   call temp:=  [|java:nio:ReadOnlyDirectByteBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.copy:(Ljava/nio/DirectByteBuffer;I)Ljava/nio/ReadOnlyDirectByteBuffer;|] @classDescriptor [|java:nio:ReadOnlyDirectByteBuffer|] @type static;
#L0d478e.   v0:= temp  @type object;
#L0d4790.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyDirectByteBuffer.isReadOnly|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d47a4.   v0:= 1  @length 4;
#L0d47a6.   return v0;

   }
    procedure [|byte|][] [|java:nio:ReadOnlyDirectByteBuffer.protectedArray|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.protectedArray:()[B|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0d47b8.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d47bc.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d47c2.   throw v0;

   }
    procedure [|int|] [|java:nio:ReadOnlyDirectByteBuffer.protectedArrayOffset|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.protectedArrayOffset:()I|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0d47d4.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d47d8.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d47de.   throw v0;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyDirectByteBuffer.protectedHasArray|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.protectedHasArray:()Z|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0d47f0.   v0:= 0  @length 4;
#L0d47f2.   return v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.put|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|byte|] v2) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.put:(B)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4804.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4808.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d480e.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.put|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|int|] v2, [|byte|] v3) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4820.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4824.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d482a.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.put|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d483c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4840.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4846.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.put|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4858.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d485c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4862.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putDouble|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|double|] v2) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putDouble:(D)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4874.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4878.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d487e.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putDouble|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|int|] v2, [|double|] v3) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putDouble:(ID)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4890.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4894.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d489a.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putFloat|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|float|] v2) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putFloat:(F)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d48ac.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d48b0.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d48b6.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putFloat|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|int|] v2, [|float|] v3) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putFloat:(IF)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d48c8.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d48cc.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d48d2.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putInt|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|int|] v2) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d48e4.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d48e8.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d48ee.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putInt|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4900.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4904.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d490a.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putLong|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|int|] v2, [|long|] v3) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d491c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4920.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4926.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putLong|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|long|] v2) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4938.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d493c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4942.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putShort|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|int|] v2, [|short|] v3) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putShort:(IS)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4954.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4958.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d495e.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.putShort|] ([|java:nio:ReadOnlyDirectByteBuffer|] v1 @type (this), [|short|] v2) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4970.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4974.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d497a.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyDirectByteBuffer.slice|] ([|java:nio:ReadOnlyDirectByteBuffer|] v5 @type (this)) @owner [|java:nio:ReadOnlyDirectByteBuffer|] @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d498c.   v0:= new [|java:nio:ReadOnlyDirectByteBuffer|];
#L0d4990.   v1:= v5.[|java:nio:ReadOnlyDirectByteBuffer.block|]   @type object;
#L0d4994.   call temp:=  [|java:nio:ReadOnlyDirectByteBuffer.remaining|](v5) @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadOnlyDirectByteBuffer|] @type virtual;
#L0d499a.   v2:= temp;
#L0d499c.   v3:= v5.[|java:nio:ReadOnlyDirectByteBuffer.offset|] ;
#L0d49a0.   v4:= v5.[|java:nio:ReadOnlyDirectByteBuffer.position|] ;
#L0d49a4.   v3:= v3 + v4  @type int;
#L0d49a6.   call temp:=  [|java:nio:ReadOnlyDirectByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:ReadOnlyDirectByteBuffer|] @type direct;
#L0d49ac.   return v0  @type object;

   }
record [|java:nio:ReadOnlyDoubleArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:DoubleArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadOnlyDoubleArrayBuffer.<init>|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v0 @type (this), [|int|] v1, [|double|][] v2, [|int|] v4) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.<init>:(I[DI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d49c0.   call temp:=  [|java:nio:DoubleArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/DoubleArrayBuffer;.<init>:(I[DI)V|] @classDescriptor [|java:nio:DoubleArrayBuffer|] @type direct;
#L0d49c6.   return @void ;

   }
    procedure [|java:nio:ReadOnlyDoubleArrayBuffer|] [|java:nio:ReadOnlyDoubleArrayBuffer.copy|] ([|java:nio:DoubleArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.copy:(Ljava/nio/DoubleArrayBuffer;I)Ljava/nio/ReadOnlyDoubleArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d49d8.   v0:= new [|java:nio:ReadOnlyDoubleArrayBuffer|];
#L0d49dc.   call temp:=  [|java:nio:DoubleArrayBuffer.capacity|](v4) @signature [|Ljava/nio/DoubleArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:DoubleArrayBuffer|] @type virtual;
#L0d49e2.   v1:= temp;
#L0d49e4.   v2:= v4.[|java:nio:DoubleArrayBuffer.backingArray|]   @type object;
#L0d49e8.   v3:= v4.[|java:nio:DoubleArrayBuffer.offset|] ;
#L0d49ec.   call temp:=  [|java:nio:ReadOnlyDoubleArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.<init>:(I[DI)V|] @classDescriptor [|java:nio:ReadOnlyDoubleArrayBuffer|] @type direct;
#L0d49f2.   v1:= v4.[|java:nio:DoubleArrayBuffer.limit|] ;
#L0d49f6.   v0.[|java:nio:ReadOnlyDoubleArrayBuffer.limit|]  := v1;
#L0d49fa.   call temp:=  [|java:nio:DoubleArrayBuffer.position|](v4) @signature [|Ljava/nio/DoubleArrayBuffer;.position:()I|] @classDescriptor [|java:nio:DoubleArrayBuffer|] @type virtual;
#L0d4a00.   v1:= temp;
#L0d4a02.   v0.[|java:nio:ReadOnlyDoubleArrayBuffer.position|]  := v1;
#L0d4a06.   v0.[|java:nio:ReadOnlyDoubleArrayBuffer.mark|]  := v5;
#L0d4a0a.   return v0  @type object;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadOnlyDoubleArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4a1c.   call temp:=  [|java:nio:ReadOnlyDoubleArrayBuffer.duplicate|](v1) @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.duplicate:()Ljava/nio/DoubleBuffer;|] @classDescriptor [|java:nio:ReadOnlyDoubleArrayBuffer|] @type virtual;
#L0d4a22.   v0:= temp  @type object;
#L0d4a24.   return v0  @type object;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadOnlyDoubleArrayBuffer.compact|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.compact:()Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4a38.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4a3c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4a42.   throw v0;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadOnlyDoubleArrayBuffer.duplicate|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.duplicate:()Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4a54.   v0:= v1.[|java:nio:ReadOnlyDoubleArrayBuffer.mark|] ;
#L0d4a58.   call temp:=  [|java:nio:ReadOnlyDoubleArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.copy:(Ljava/nio/DoubleArrayBuffer;I)Ljava/nio/ReadOnlyDoubleArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyDoubleArrayBuffer|] @type static;
#L0d4a5e.   v0:= temp  @type object;
#L0d4a60.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyDoubleArrayBuffer.isReadOnly|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4a74.   v0:= 1  @length 4;
#L0d4a76.   return v0;

   }
    procedure [|double|][] [|java:nio:ReadOnlyDoubleArrayBuffer.protectedArray|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.protectedArray:()[D|] @Access  {
      local temp ;
        v0;
      
#L0d4a88.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4a8c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4a92.   throw v0;

   }
    procedure [|int|] [|java:nio:ReadOnlyDoubleArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d4aa4.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4aa8.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4aae.   throw v0;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyDoubleArrayBuffer.protectedHasArray|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d4ac0.   v0:= 0  @length 4;
#L0d4ac2.   return v0;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadOnlyDoubleArrayBuffer.put|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this), [|double|] v2) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.put:(D)Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4ad4.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4ad8.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4ade.   throw v0;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadOnlyDoubleArrayBuffer.put|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this), [|int|] v2, [|double|] v3) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.put:(ID)Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4af0.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4af4.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4afa.   throw v0;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadOnlyDoubleArrayBuffer.put|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this), [|java:nio:DoubleBuffer|] v2 @type (object)) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.put:(Ljava/nio/DoubleBuffer;)Ljava/nio/DoubleBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d4b0c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4b10.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4b16.   throw v0;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadOnlyDoubleArrayBuffer.put|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v1 @type (this), [|double|][] v2, [|int|] v4, [|int|] v5) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.put:([DII)Ljava/nio/DoubleBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d4b28.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4b2c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4b32.   throw v0;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadOnlyDoubleArrayBuffer.slice|] ([|java:nio:ReadOnlyDoubleArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadOnlyDoubleArrayBuffer|] @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.slice:()Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d4b44.   v0:= new [|java:nio:ReadOnlyDoubleArrayBuffer|];
#L0d4b48.   call temp:=  [|java:nio:ReadOnlyDoubleArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadOnlyDoubleArrayBuffer|] @type virtual;
#L0d4b4e.   v1:= temp;
#L0d4b50.   v2:= v5.[|java:nio:ReadOnlyDoubleArrayBuffer.backingArray|]   @type object;
#L0d4b54.   v3:= v5.[|java:nio:ReadOnlyDoubleArrayBuffer.offset|] ;
#L0d4b58.   v4:= v5.[|java:nio:ReadOnlyDoubleArrayBuffer.position|] ;
#L0d4b5c.   v3:= v3 + v4  @type int;
#L0d4b5e.   call temp:=  [|java:nio:ReadOnlyDoubleArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.<init>:(I[DI)V|] @classDescriptor [|java:nio:ReadOnlyDoubleArrayBuffer|] @type direct;
#L0d4b64.   return v0  @type object;

   }
record [|java:nio:ReadOnlyFloatArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:FloatArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadOnlyFloatArrayBuffer.<init>|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v0 @type (this), [|int|] v1, [|float|][] v2, [|int|] v3) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.<init>:(I[FI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d4b78.   call temp:=  [|java:nio:FloatArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/FloatArrayBuffer;.<init>:(I[FI)V|] @classDescriptor [|java:nio:FloatArrayBuffer|] @type direct;
#L0d4b7e.   return @void ;

   }
    procedure [|java:nio:ReadOnlyFloatArrayBuffer|] [|java:nio:ReadOnlyFloatArrayBuffer.copy|] ([|java:nio:FloatArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.copy:(Ljava/nio/FloatArrayBuffer;I)Ljava/nio/ReadOnlyFloatArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d4b90.   v0:= new [|java:nio:ReadOnlyFloatArrayBuffer|];
#L0d4b94.   call temp:=  [|java:nio:FloatArrayBuffer.capacity|](v4) @signature [|Ljava/nio/FloatArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:FloatArrayBuffer|] @type virtual;
#L0d4b9a.   v1:= temp;
#L0d4b9c.   v2:= v4.[|java:nio:FloatArrayBuffer.backingArray|]   @type object;
#L0d4ba0.   v3:= v4.[|java:nio:FloatArrayBuffer.offset|] ;
#L0d4ba4.   call temp:=  [|java:nio:ReadOnlyFloatArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.<init>:(I[FI)V|] @classDescriptor [|java:nio:ReadOnlyFloatArrayBuffer|] @type direct;
#L0d4baa.   v1:= v4.[|java:nio:FloatArrayBuffer.limit|] ;
#L0d4bae.   v0.[|java:nio:ReadOnlyFloatArrayBuffer.limit|]  := v1;
#L0d4bb2.   call temp:=  [|java:nio:FloatArrayBuffer.position|](v4) @signature [|Ljava/nio/FloatArrayBuffer;.position:()I|] @classDescriptor [|java:nio:FloatArrayBuffer|] @type virtual;
#L0d4bb8.   v1:= temp;
#L0d4bba.   v0.[|java:nio:ReadOnlyFloatArrayBuffer.position|]  := v1;
#L0d4bbe.   v0.[|java:nio:ReadOnlyFloatArrayBuffer.mark|]  := v5;
#L0d4bc2.   return v0  @type object;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadOnlyFloatArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4bd4.   call temp:=  [|java:nio:ReadOnlyFloatArrayBuffer.duplicate|](v1) @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.duplicate:()Ljava/nio/FloatBuffer;|] @classDescriptor [|java:nio:ReadOnlyFloatArrayBuffer|] @type virtual;
#L0d4bda.   v0:= temp  @type object;
#L0d4bdc.   return v0  @type object;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadOnlyFloatArrayBuffer.compact|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.compact:()Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4bf0.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4bf4.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4bfa.   throw v0;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadOnlyFloatArrayBuffer.duplicate|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.duplicate:()Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4c0c.   v0:= v1.[|java:nio:ReadOnlyFloatArrayBuffer.mark|] ;
#L0d4c10.   call temp:=  [|java:nio:ReadOnlyFloatArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.copy:(Ljava/nio/FloatArrayBuffer;I)Ljava/nio/ReadOnlyFloatArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyFloatArrayBuffer|] @type static;
#L0d4c16.   v0:= temp  @type object;
#L0d4c18.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyFloatArrayBuffer.isReadOnly|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4c2c.   v0:= 1  @length 4;
#L0d4c2e.   return v0;

   }
    procedure [|float|][] [|java:nio:ReadOnlyFloatArrayBuffer.protectedArray|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.protectedArray:()[F|] @Access  {
      local temp ;
        v0;
      
#L0d4c40.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4c44.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4c4a.   throw v0;

   }
    procedure [|int|] [|java:nio:ReadOnlyFloatArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d4c5c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4c60.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4c66.   throw v0;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyFloatArrayBuffer.protectedHasArray|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d4c78.   v0:= 0  @length 4;
#L0d4c7a.   return v0;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadOnlyFloatArrayBuffer.put|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this), [|float|] v2) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.put:(F)Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4c8c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4c90.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4c96.   throw v0;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadOnlyFloatArrayBuffer.put|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this), [|int|] v2, [|float|] v3) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.put:(IF)Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4ca8.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4cac.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4cb2.   throw v0;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadOnlyFloatArrayBuffer.put|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this), [|java:nio:FloatBuffer|] v2 @type (object)) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.put:(Ljava/nio/FloatBuffer;)Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4cc4.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4cc8.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4cce.   throw v0;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadOnlyFloatArrayBuffer.put|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v1 @type (this), [|float|][] v2, [|int|] v3, [|int|] v4) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.put:([FII)Ljava/nio/FloatBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d4ce0.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4ce4.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4cea.   throw v0;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadOnlyFloatArrayBuffer.slice|] ([|java:nio:ReadOnlyFloatArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadOnlyFloatArrayBuffer|] @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.slice:()Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d4cfc.   v0:= new [|java:nio:ReadOnlyFloatArrayBuffer|];
#L0d4d00.   call temp:=  [|java:nio:ReadOnlyFloatArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadOnlyFloatArrayBuffer|] @type virtual;
#L0d4d06.   v1:= temp;
#L0d4d08.   v2:= v5.[|java:nio:ReadOnlyFloatArrayBuffer.backingArray|]   @type object;
#L0d4d0c.   v3:= v5.[|java:nio:ReadOnlyFloatArrayBuffer.offset|] ;
#L0d4d10.   v4:= v5.[|java:nio:ReadOnlyFloatArrayBuffer.position|] ;
#L0d4d14.   v3:= v3 + v4  @type int;
#L0d4d16.   call temp:=  [|java:nio:ReadOnlyFloatArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.<init>:(I[FI)V|] @classDescriptor [|java:nio:ReadOnlyFloatArrayBuffer|] @type direct;
#L0d4d1c.   return v0  @type object;

   }
record [|java:nio:ReadOnlyHeapByteBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:HeapByteBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadOnlyHeapByteBuffer.<init>|] ([|java:nio:ReadOnlyHeapByteBuffer|] v0 @type (this), [|byte|][] v1, [|int|] v2, [|int|] v3) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.<init>:([BII)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d4d30.   call temp:=  [|java:nio:HeapByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/HeapByteBuffer;.<init>:([BII)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type direct;
#L0d4d36.   return @void ;

   }
    procedure [|java:nio:ReadOnlyHeapByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.copy|] ([|java:nio:HeapByteBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.copy:(Ljava/nio/HeapByteBuffer;I)Ljava/nio/ReadOnlyHeapByteBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d4d48.   v0:= new [|java:nio:ReadOnlyHeapByteBuffer|];
#L0d4d4c.   v1:= v4.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d4d50.   call temp:=  [|java:nio:HeapByteBuffer.capacity|](v4) @signature [|Ljava/nio/HeapByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d4d56.   v2:= temp;
#L0d4d58.   v3:= v4.[|java:nio:HeapByteBuffer.offset|] ;
#L0d4d5c.   call temp:=  [|java:nio:ReadOnlyHeapByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.<init>:([BII)V|] @classDescriptor [|java:nio:ReadOnlyHeapByteBuffer|] @type direct;
#L0d4d62.   v1:= v4.[|java:nio:HeapByteBuffer.limit|] ;
#L0d4d66.   v0.[|java:nio:ReadOnlyHeapByteBuffer.limit|]  := v1;
#L0d4d6a.   call temp:=  [|java:nio:HeapByteBuffer.position|](v4) @signature [|Ljava/nio/HeapByteBuffer;.position:()I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d4d70.   v1:= temp;
#L0d4d72.   v0.[|java:nio:ReadOnlyHeapByteBuffer.position|]  := v1;
#L0d4d76.   v0.[|java:nio:ReadOnlyHeapByteBuffer.mark|]  := v5;
#L0d4d7a.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.asReadOnlyBuffer|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4d8c.   v0:= v1.[|java:nio:ReadOnlyHeapByteBuffer.mark|] ;
#L0d4d90.   call temp:=  [|java:nio:ReadOnlyHeapByteBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.copy:(Ljava/nio/HeapByteBuffer;I)Ljava/nio/ReadOnlyHeapByteBuffer;|] @classDescriptor [|java:nio:ReadOnlyHeapByteBuffer|] @type static;
#L0d4d96.   v0:= temp  @type object;
#L0d4d98.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.compact|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.compact:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4dac.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4db0.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4db6.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.duplicate|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4dc8.   v0:= v1.[|java:nio:ReadOnlyHeapByteBuffer.mark|] ;
#L0d4dcc.   call temp:=  [|java:nio:ReadOnlyHeapByteBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.copy:(Ljava/nio/HeapByteBuffer;I)Ljava/nio/ReadOnlyHeapByteBuffer;|] @classDescriptor [|java:nio:ReadOnlyHeapByteBuffer|] @type static;
#L0d4dd2.   v0:= temp  @type object;
#L0d4dd4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyHeapByteBuffer.isReadOnly|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4de8.   v0:= 1  @length 4;
#L0d4dea.   return v0;

   }
    procedure [|byte|][] [|java:nio:ReadOnlyHeapByteBuffer.protectedArray|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.protectedArray:()[B|] @Access  {
      local temp ;
        v0;
      
#L0d4dfc.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4e00.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4e06.   throw v0;

   }
    procedure [|int|] [|java:nio:ReadOnlyHeapByteBuffer.protectedArrayOffset|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d4e18.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4e1c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4e22.   throw v0;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyHeapByteBuffer.protectedHasArray|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d4e34.   v0:= 0  @length 4;
#L0d4e36.   return v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.put|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|byte|] v2) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.put:(B)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4e48.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4e4c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4e52.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.put|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|int|] v2, [|byte|] v3) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4e64.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4e68.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4e6e.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.put|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4e80.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4e84.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4e8a.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.put|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|byte|][] v2, [|int|] v3, [|int|] v4) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4e9c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4ea0.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4ea6.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putDouble|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|double|] v2) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putDouble:(D)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4eb8.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4ebc.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4ec2.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putDouble|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|int|] v2, [|double|] v3) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putDouble:(ID)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4ed4.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4ed8.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4ede.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putFloat|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|float|] v2) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putFloat:(F)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4ef0.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4ef4.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4efa.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putFloat|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|int|] v2, [|float|] v3) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putFloat:(IF)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4f0c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4f10.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4f16.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putInt|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|int|] v2) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4f28.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4f2c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4f32.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putInt|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4f44.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4f48.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4f4e.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putLong|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|int|] v2, [|long|] v3) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4f60.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4f64.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4f6a.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putLong|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|long|] v2) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4f7c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4f80.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4f86.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putShort|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|int|] v2, [|short|] v3) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putShort:(IS)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4f98.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4f9c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4fa2.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.putShort|] ([|java:nio:ReadOnlyHeapByteBuffer|] v1 @type (this), [|short|] v2) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d4fb4.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d4fb8.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d4fbe.   throw v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadOnlyHeapByteBuffer.slice|] ([|java:nio:ReadOnlyHeapByteBuffer|] v5 @type (this)) @owner [|java:nio:ReadOnlyHeapByteBuffer|] @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d4fd0.   v0:= new [|java:nio:ReadOnlyHeapByteBuffer|];
#L0d4fd4.   v1:= v5.[|java:nio:ReadOnlyHeapByteBuffer.backingArray|]   @type object;
#L0d4fd8.   call temp:=  [|java:nio:ReadOnlyHeapByteBuffer.remaining|](v5) @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadOnlyHeapByteBuffer|] @type virtual;
#L0d4fde.   v2:= temp;
#L0d4fe0.   v3:= v5.[|java:nio:ReadOnlyHeapByteBuffer.offset|] ;
#L0d4fe4.   v4:= v5.[|java:nio:ReadOnlyHeapByteBuffer.position|] ;
#L0d4fe8.   v3:= v3 + v4  @type int;
#L0d4fea.   call temp:=  [|java:nio:ReadOnlyHeapByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.<init>:([BII)V|] @classDescriptor [|java:nio:ReadOnlyHeapByteBuffer|] @type direct;
#L0d4ff0.   return v0  @type object;

   }
record [|java:nio:ReadOnlyIntArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:IntArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadOnlyIntArrayBuffer.<init>|] ([|java:nio:ReadOnlyIntArrayBuffer|] v0 @type (this), [|int|] v1, [|int|][] v2, [|int|] v3) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.<init>:(I[II)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d5004.   call temp:=  [|java:nio:IntArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/IntArrayBuffer;.<init>:(I[II)V|] @classDescriptor [|java:nio:IntArrayBuffer|] @type direct;
#L0d500a.   return @void ;

   }
    procedure [|java:nio:ReadOnlyIntArrayBuffer|] [|java:nio:ReadOnlyIntArrayBuffer.copy|] ([|java:nio:IntArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.copy:(Ljava/nio/IntArrayBuffer;I)Ljava/nio/ReadOnlyIntArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d501c.   v0:= new [|java:nio:ReadOnlyIntArrayBuffer|];
#L0d5020.   call temp:=  [|java:nio:IntArrayBuffer.capacity|](v4) @signature [|Ljava/nio/IntArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:IntArrayBuffer|] @type virtual;
#L0d5026.   v1:= temp;
#L0d5028.   v2:= v4.[|java:nio:IntArrayBuffer.backingArray|]   @type object;
#L0d502c.   v3:= v4.[|java:nio:IntArrayBuffer.offset|] ;
#L0d5030.   call temp:=  [|java:nio:ReadOnlyIntArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.<init>:(I[II)V|] @classDescriptor [|java:nio:ReadOnlyIntArrayBuffer|] @type direct;
#L0d5036.   v1:= v4.[|java:nio:IntArrayBuffer.limit|] ;
#L0d503a.   v0.[|java:nio:ReadOnlyIntArrayBuffer.limit|]  := v1;
#L0d503e.   call temp:=  [|java:nio:IntArrayBuffer.position|](v4) @signature [|Ljava/nio/IntArrayBuffer;.position:()I|] @classDescriptor [|java:nio:IntArrayBuffer|] @type virtual;
#L0d5044.   v1:= temp;
#L0d5046.   v0.[|java:nio:ReadOnlyIntArrayBuffer.position|]  := v1;
#L0d504a.   v0.[|java:nio:ReadOnlyIntArrayBuffer.mark|]  := v5;
#L0d504e.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadOnlyIntArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5060.   call temp:=  [|java:nio:ReadOnlyIntArrayBuffer.duplicate|](v1) @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.duplicate:()Ljava/nio/IntBuffer;|] @classDescriptor [|java:nio:ReadOnlyIntArrayBuffer|] @type virtual;
#L0d5066.   v0:= temp  @type object;
#L0d5068.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadOnlyIntArrayBuffer.compact|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.compact:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d507c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d5080.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d5086.   throw v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadOnlyIntArrayBuffer.duplicate|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.duplicate:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5098.   v0:= v1.[|java:nio:ReadOnlyIntArrayBuffer.mark|] ;
#L0d509c.   call temp:=  [|java:nio:ReadOnlyIntArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.copy:(Ljava/nio/IntArrayBuffer;I)Ljava/nio/ReadOnlyIntArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyIntArrayBuffer|] @type static;
#L0d50a2.   v0:= temp  @type object;
#L0d50a4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyIntArrayBuffer.isReadOnly|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d50b8.   v0:= 1  @length 4;
#L0d50ba.   return v0;

   }
    procedure [|int|][] [|java:nio:ReadOnlyIntArrayBuffer.protectedArray|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.protectedArray:()[I|] @Access  {
      local temp ;
        v0;
      
#L0d50cc.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d50d0.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d50d6.   throw v0;

   }
    procedure [|int|] [|java:nio:ReadOnlyIntArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d50e8.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d50ec.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d50f2.   throw v0;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyIntArrayBuffer.protectedHasArray|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d5104.   v0:= 0  @length 4;
#L0d5106.   return v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadOnlyIntArrayBuffer.put|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this), [|int|] v2) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.put:(I)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5118.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d511c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d5122.   throw v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadOnlyIntArrayBuffer.put|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.put:(II)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5134.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d5138.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d513e.   throw v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadOnlyIntArrayBuffer.put|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this), [|java:nio:IntBuffer|] v2 @type (object)) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.put:(Ljava/nio/IntBuffer;)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5150.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d5154.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d515a.   throw v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadOnlyIntArrayBuffer.put|] ([|java:nio:ReadOnlyIntArrayBuffer|] v1 @type (this), [|int|][] v2, [|int|] v3, [|int|] v4) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.put:([III)Ljava/nio/IntBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d516c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d5170.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d5176.   throw v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadOnlyIntArrayBuffer.slice|] ([|java:nio:ReadOnlyIntArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadOnlyIntArrayBuffer|] @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.slice:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d5188.   v0:= new [|java:nio:ReadOnlyIntArrayBuffer|];
#L0d518c.   call temp:=  [|java:nio:ReadOnlyIntArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadOnlyIntArrayBuffer|] @type virtual;
#L0d5192.   v1:= temp;
#L0d5194.   v2:= v5.[|java:nio:ReadOnlyIntArrayBuffer.backingArray|]   @type object;
#L0d5198.   v3:= v5.[|java:nio:ReadOnlyIntArrayBuffer.offset|] ;
#L0d519c.   v4:= v5.[|java:nio:ReadOnlyIntArrayBuffer.position|] ;
#L0d51a0.   v3:= v3 + v4  @type int;
#L0d51a2.   call temp:=  [|java:nio:ReadOnlyIntArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.<init>:(I[II)V|] @classDescriptor [|java:nio:ReadOnlyIntArrayBuffer|] @type direct;
#L0d51a8.   return v0  @type object;

   }
record [|java:nio:ReadOnlyLongArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:LongArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadOnlyLongArrayBuffer.<init>|] ([|java:nio:ReadOnlyLongArrayBuffer|] v0 @type (this), [|int|] v1, [|long|][] v2, [|int|] v4) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.<init>:(I[JI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d51bc.   call temp:=  [|java:nio:LongArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/LongArrayBuffer;.<init>:(I[JI)V|] @classDescriptor [|java:nio:LongArrayBuffer|] @type direct;
#L0d51c2.   return @void ;

   }
    procedure [|java:nio:ReadOnlyLongArrayBuffer|] [|java:nio:ReadOnlyLongArrayBuffer.copy|] ([|java:nio:LongArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.copy:(Ljava/nio/LongArrayBuffer;I)Ljava/nio/ReadOnlyLongArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d51d4.   v0:= new [|java:nio:ReadOnlyLongArrayBuffer|];
#L0d51d8.   call temp:=  [|java:nio:LongArrayBuffer.capacity|](v4) @signature [|Ljava/nio/LongArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:LongArrayBuffer|] @type virtual;
#L0d51de.   v1:= temp;
#L0d51e0.   v2:= v4.[|java:nio:LongArrayBuffer.backingArray|]   @type object;
#L0d51e4.   v3:= v4.[|java:nio:LongArrayBuffer.offset|] ;
#L0d51e8.   call temp:=  [|java:nio:ReadOnlyLongArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.<init>:(I[JI)V|] @classDescriptor [|java:nio:ReadOnlyLongArrayBuffer|] @type direct;
#L0d51ee.   v1:= v4.[|java:nio:LongArrayBuffer.limit|] ;
#L0d51f2.   v0.[|java:nio:ReadOnlyLongArrayBuffer.limit|]  := v1;
#L0d51f6.   call temp:=  [|java:nio:LongArrayBuffer.position|](v4) @signature [|Ljava/nio/LongArrayBuffer;.position:()I|] @classDescriptor [|java:nio:LongArrayBuffer|] @type virtual;
#L0d51fc.   v1:= temp;
#L0d51fe.   v0.[|java:nio:ReadOnlyLongArrayBuffer.position|]  := v1;
#L0d5202.   v0.[|java:nio:ReadOnlyLongArrayBuffer.mark|]  := v5;
#L0d5206.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadOnlyLongArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5218.   call temp:=  [|java:nio:ReadOnlyLongArrayBuffer.duplicate|](v1) @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.duplicate:()Ljava/nio/LongBuffer;|] @classDescriptor [|java:nio:ReadOnlyLongArrayBuffer|] @type virtual;
#L0d521e.   v0:= temp  @type object;
#L0d5220.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadOnlyLongArrayBuffer.compact|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.compact:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5234.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d5238.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d523e.   throw v0;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadOnlyLongArrayBuffer.duplicate|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.duplicate:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5250.   v0:= v1.[|java:nio:ReadOnlyLongArrayBuffer.mark|] ;
#L0d5254.   call temp:=  [|java:nio:ReadOnlyLongArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.copy:(Ljava/nio/LongArrayBuffer;I)Ljava/nio/ReadOnlyLongArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyLongArrayBuffer|] @type static;
#L0d525a.   v0:= temp  @type object;
#L0d525c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyLongArrayBuffer.isReadOnly|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5270.   v0:= 1  @length 4;
#L0d5272.   return v0;

   }
    procedure [|long|][] [|java:nio:ReadOnlyLongArrayBuffer.protectedArray|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.protectedArray:()[J|] @Access  {
      local temp ;
        v0;
      
#L0d5284.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d5288.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d528e.   throw v0;

   }
    procedure [|int|] [|java:nio:ReadOnlyLongArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d52a0.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d52a4.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d52aa.   throw v0;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyLongArrayBuffer.protectedHasArray|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d52bc.   v0:= 0  @length 4;
#L0d52be.   return v0;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadOnlyLongArrayBuffer.put|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this), [|int|] v2, [|long|] v3) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.put:(IJ)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d52d0.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d52d4.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d52da.   throw v0;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadOnlyLongArrayBuffer.put|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this), [|long|] v2) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.put:(J)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d52ec.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d52f0.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d52f6.   throw v0;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadOnlyLongArrayBuffer.put|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this), [|java:nio:LongBuffer|] v2 @type (object)) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.put:(Ljava/nio/LongBuffer;)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5308.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d530c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d5312.   throw v0;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadOnlyLongArrayBuffer.put|] ([|java:nio:ReadOnlyLongArrayBuffer|] v1 @type (this), [|long|][] v2, [|int|] v4, [|int|] v5) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.put:([JII)Ljava/nio/LongBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d5324.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d5328.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d532e.   throw v0;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadOnlyLongArrayBuffer.slice|] ([|java:nio:ReadOnlyLongArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadOnlyLongArrayBuffer|] @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.slice:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d5340.   v0:= new [|java:nio:ReadOnlyLongArrayBuffer|];
#L0d5344.   call temp:=  [|java:nio:ReadOnlyLongArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadOnlyLongArrayBuffer|] @type virtual;
#L0d534a.   v1:= temp;
#L0d534c.   v2:= v5.[|java:nio:ReadOnlyLongArrayBuffer.backingArray|]   @type object;
#L0d5350.   v3:= v5.[|java:nio:ReadOnlyLongArrayBuffer.offset|] ;
#L0d5354.   v4:= v5.[|java:nio:ReadOnlyLongArrayBuffer.position|] ;
#L0d5358.   v3:= v3 + v4  @type int;
#L0d535a.   call temp:=  [|java:nio:ReadOnlyLongArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.<init>:(I[JI)V|] @classDescriptor [|java:nio:ReadOnlyLongArrayBuffer|] @type direct;
#L0d5360.   return v0  @type object;

   }
record [|java:nio:ShortBuffer|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:Buffer|], [|java:lang:Comparable|] {
   }
    procedure [|void|] [|java:nio:ShortBuffer.<init>|] ([|java:nio:ShortBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d5374.   v0:= 1  @length 4;
#L0d5376.   v1:= 0  @length 4;
#L0d5378.   call temp:=  [|java:nio:Buffer.<init>|](v2, v0, v3, v1) @signature [|Ljava/nio/Buffer;.<init>:(IILjava/nio/MemoryBlock;)V|] @classDescriptor [|java:nio:Buffer|] @type direct;
#L0d537e.   return @void ;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.allocate|] ([|int|] v3) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.allocate:(I)Ljava/nio/ShortBuffer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d5390.   if v3 >= 0 then goto L0d53c6;
#L0d5394.   v0:= new [|java:lang:IllegalArgumentException|];
#L0d5398.   v1:= new [|java:lang:StringBuilder|];
#L0d539c.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0d53a2.   v2:= "capacity < 0: " @type (object, string);
#L0d53a6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d53ac.   v1:= temp  @type object;
#L0d53ae.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d53b4.   v1:= temp  @type object;
#L0d53b6.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d53bc.   v1:= temp  @type object;
#L0d53be.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d53c4.   throw v0;
#L0d53c6.   v0:= new [|java:nio:ReadWriteShortArrayBuffer|];
#L0d53ca.   call temp:=  [|java:nio:ReadWriteShortArrayBuffer.<init>|](v0, v3) @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:ReadWriteShortArrayBuffer|] @type direct;
#L0d53d0.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.wrap|] ([|short|][] v2) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.wrap:([S)Ljava/nio/ShortBuffer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0d53e4.   v0:= 0  @length 4;
#L0d53e6.   v1:= v2.length;
#L0d53e8.   call temp:=  [|java:nio:ShortBuffer.wrap|](v2, v0, v1) @signature [|Ljava/nio/ShortBuffer;.wrap:([SII)Ljava/nio/ShortBuffer;|] @classDescriptor [|java:nio:ShortBuffer|] @type static;
#L0d53ee.   v0:= temp  @type object;
#L0d53f0.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.wrap|] ([|short|][] v2, [|int|] v3, [|int|] v4) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.wrap:([SII)Ljava/nio/ShortBuffer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0d5404.   v1:= v2.length;
#L0d5406.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v3, v4) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d540c.   v0:= new [|java:nio:ReadWriteShortArrayBuffer|];
#L0d5410.   call temp:=  [|java:nio:ReadWriteShortArrayBuffer.<init>|](v0, v2) @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.<init>:([S)V|] @classDescriptor [|java:nio:ReadWriteShortArrayBuffer|] @type direct;
#L0d5416.   v0.[|java:nio:ShortBuffer.position|]  := v3;
#L0d541a.   v1:= v3 + v4  @type int;
#L0d541e.   v0.[|java:nio:ShortBuffer.limit|]  := v1;
#L0d5422.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:nio:ShortBuffer.array|] ([|java:nio:ShortBuffer|] v1 @type (this)) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.array:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0d5434.   call temp:=  [|java:nio:ShortBuffer.array|](v1) @signature [|Ljava/nio/ShortBuffer;.array:()[S|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d543a.   v0:= temp  @type object;
#L0d543c.   return v0  @type object;

   }
    procedure [|short|][] [|java:nio:ShortBuffer.array|] ([|java:nio:ShortBuffer|] v1 @type (this)) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.array:()[S|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d5450.   call temp:=  [|java:nio:ShortBuffer.protectedArray|](v1) @signature [|Ljava/nio/ShortBuffer;.protectedArray:()[S|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d5456.   v0:= temp  @type object;
#L0d5458.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:ShortBuffer.arrayOffset|] ([|java:nio:ShortBuffer|] v1 @type (this)) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.arrayOffset:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d546c.   call temp:=  [|java:nio:ShortBuffer.protectedArrayOffset|](v1) @signature [|Ljava/nio/ShortBuffer;.protectedArrayOffset:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d5472.   v0:= temp;
#L0d5474.   return v0;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.asReadOnlyBuffer|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.asReadOnlyBuffer:()Ljava/nio/ShortBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.compact|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.compact:()Ljava/nio/ShortBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:ShortBuffer.compareTo|] ([|java:nio:ShortBuffer|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0d5488.   v2:= ([|java:nio:ShortBuffer|])v2;
#L0d548c.   call temp:=  [|java:nio:ShortBuffer.compareTo|](v1, v2) @signature [|Ljava/nio/ShortBuffer;.compareTo:(Ljava/nio/ShortBuffer;)I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d5492.   v0:= temp;
#L0d5494.   return v0;

   }
    procedure [|int|] [|java:nio:ShortBuffer.compareTo|] ([|java:nio:ShortBuffer|] v7 @type (this), [|java:nio:ShortBuffer|] v8 @type (object)) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.compareTo:(Ljava/nio/ShortBuffer;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d54a8.   call temp:=  [|java:nio:ShortBuffer.remaining|](v7) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d54ae.   v5:= temp;
#L0d54b0.   call temp:=  [|java:nio:ShortBuffer.remaining|](v8) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d54b6.   v6:= temp;
#L0d54b8.   if v5 >= v6 then goto L0d54ec;
#L0d54bc.   call temp:=  [|java:nio:ShortBuffer.remaining|](v7) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d54c2.   v0:= temp;
#L0d54c4.   v4:= v7.[|java:nio:ShortBuffer.position|] ;
#L0d54c8.   v2:= v8.[|java:nio:ShortBuffer.position|] ;
#L0d54cc.   if v0 <= 0 then goto L0d5508;
#L0d54d0.   call temp:=  [|java:nio:ShortBuffer.get|](v7, v4) @signature [|Ljava/nio/ShortBuffer;.get:(I)S|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d54d6.   v3:= temp;
#L0d54d8.   call temp:=  [|java:nio:ShortBuffer.get|](v8, v2) @signature [|Ljava/nio/ShortBuffer;.get:(I)S|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d54de.   v1:= temp;
#L0d54e0.   if v3 == v1 then goto L0d54fa;
#L0d54e4.   if v3 >= v1 then goto L0d54f6;
#L0d54e8.   v5:= -1  @length 4;
#L0d54ea.   return v5;
#L0d54ec.   call temp:=  [|java:nio:ShortBuffer.remaining|](v8) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d54f2.   v0:= temp;
#L0d54f4.   goto L0d54c4;
#L0d54f6.   v5:= 1  @length 4;
#L0d54f8.   goto L0d54ea;
#L0d54fa.   v4:= v4 + 1;
#L0d54fe.   v2:= v2 + 1;
#L0d5502.   v0:= v0 + -1;
#L0d5506.   goto L0d54cc;
#L0d5508.   call temp:=  [|java:nio:ShortBuffer.remaining|](v7) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d550e.   v5:= temp;
#L0d5510.   call temp:=  [|java:nio:ShortBuffer.remaining|](v8) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d5516.   v6:= temp;
#L0d5518.   v5:= v5 - v6  @type int;
#L0d551a.   goto L0d54ea;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.duplicate|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.duplicate:()Ljava/nio/ShortBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:ShortBuffer.equals|] ([|java:nio:ShortBuffer|] v9 @type (this), [|java:lang:Object|] v10 @type (object)) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0d552c.   v6:= 0  @length 4;
#L0d552e.   v7:= instanceof @varname v10 @type [|java:nio:ShortBuffer|];
#L0d5532.   if v7 != 0 then goto L0d5538;
#L0d5536.   return v6;
#L0d5538.   v3:= v10  @type object;
#L0d553a.   v3:= ([|java:nio:ShortBuffer|])v3;
#L0d553e.   call temp:=  [|java:nio:ShortBuffer.remaining|](v9) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d5544.   v7:= temp;
#L0d5546.   call temp:=  [|java:nio:ShortBuffer.remaining|](v3) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d554c.   v8:= temp;
#L0d554e.   if v7 != v8 then goto L0d5536;
#L0d5552.   v1:= v9.[|java:nio:ShortBuffer.position|] ;
#L0d5556.   v4:= v3.[|java:nio:ShortBuffer.position|] ;
#L0d555a.   v0:= 1  @length 4;
#L0d555c.   v5:= v4;
#L0d555e.   v2:= v1;
#L0d5560.   if v0 == 0 then goto L0d5594;
#L0d5564.   v7:= v9.[|java:nio:ShortBuffer.limit|] ;
#L0d5568.   if v2 >= v7 then goto L0d5594;
#L0d556c.   v1:= v2 + 1;
#L0d5570.   call temp:=  [|java:nio:ShortBuffer.get|](v9, v2) @signature [|Ljava/nio/ShortBuffer;.get:(I)S|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d5576.   v7:= temp;
#L0d5578.   v4:= v5 + 1;
#L0d557c.   call temp:=  [|java:nio:ShortBuffer.get|](v3, v5) @signature [|Ljava/nio/ShortBuffer;.get:(I)S|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d5582.   v8:= temp;
#L0d5584.   if v7 != v8 then goto L0d5590;
#L0d5588.   v0:= 1  @length 4;
#L0d558a.   v5:= v4;
#L0d558c.   v2:= v1;
#L0d558e.   goto L0d5560;
#L0d5590.   v0:= v6;
#L0d5592.   goto L0d558a;
#L0d5594.   v6:= v0;
#L0d5596.   goto L0d5536;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.get|] ([|java:nio:ShortBuffer|] v2 @type (this), [|short|][] v3) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.get:([S)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d55a8.   v0:= 0  @length 4;
#L0d55aa.   v1:= v3.length;
#L0d55ac.   call temp:=  [|java:nio:ShortBuffer.get|](v2, v3, v0, v1) @signature [|Ljava/nio/ShortBuffer;.get:([SII)Ljava/nio/ShortBuffer;|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d55b2.   v0:= temp  @type object;
#L0d55b4.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.get|] ([|java:nio:ShortBuffer|] v2 @type (this), [|short|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.get:([SII)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d55c8.   v1:= v3.length;
#L0d55ca.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d55d0.   call temp:=  [|java:nio:ShortBuffer.remaining|](v2) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d55d6.   v1:= temp;
#L0d55d8.   if v5 <= v1 then goto L0d55e8;
#L0d55dc.   v1:= new [|java:nio:BufferUnderflowException|];
#L0d55e0.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v1) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d55e6.   throw v1;
#L0d55e8.   v0:= v4;
#L0d55ea.   v1:= v4 + v5  @type int;
#L0d55ee.   if v0 >= v1 then goto L0d5604;
#L0d55f2.   call temp:=  [|java:nio:ShortBuffer.get|](v2) @signature [|Ljava/nio/ShortBuffer;.get:()S|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d55f8.   v1:= temp;
#L0d55fa.   v3[v0]:= v1  @short;
#L0d55fe.   v0:= v0 + 1;
#L0d5602.   goto L0d55ea;
#L0d5604.   return v2  @type object;

   }
    procedure [|short|] [|java:nio:ShortBuffer.get|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.get:()S|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|short|] [|java:nio:ShortBuffer.get|] ([|int|] v0) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.get:(I)S|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:ShortBuffer.hasArray|] ([|java:nio:ShortBuffer|] v1 @type (this)) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.hasArray:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d5618.   call temp:=  [|java:nio:ShortBuffer.protectedHasArray|](v1) @signature [|Ljava/nio/ShortBuffer;.protectedHasArray:()Z|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d561e.   v0:= temp;
#L0d5620.   return v0;

   }
    procedure [|int|] [|java:nio:ShortBuffer.hashCode|] ([|java:nio:ShortBuffer|] v4 @type (this)) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d5634.   v1:= v4.[|java:nio:ShortBuffer.position|] ;
#L0d5638.   v0:= 0  @length 4;
#L0d563a.   v3:= v4.[|java:nio:ShortBuffer.limit|] ;
#L0d563e.   if v1 >= v3 then goto L0d5654;
#L0d5642.   v2:= v1 + 1;
#L0d5646.   call temp:=  [|java:nio:ShortBuffer.get|](v4, v1) @signature [|Ljava/nio/ShortBuffer;.get:(I)S|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d564c.   v3:= temp;
#L0d564e.   v0:= v0 + v3  @type int;
#L0d5650.   v1:= v2;
#L0d5652.   goto L0d563a;
#L0d5654.   return v0;

   }
    procedure [|boolean|] [|java:nio:ShortBuffer.isDirect|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.isDirect:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:ByteOrder|] [|java:nio:ShortBuffer.order|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.order:()Ljava/nio/ByteOrder;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|short|][] [|java:nio:ShortBuffer.protectedArray|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.protectedArray:()[S|] @Access ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:ShortBuffer.protectedArrayOffset|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.protectedArrayOffset:()I|] @Access ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:ShortBuffer.protectedHasArray|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.protectedHasArray:()Z|] @Access ABSTRACT {
      # return;
   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.put|] ([|int|] v0, [|short|] v1) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.put:(IS)Ljava/nio/ShortBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.put|] ([|java:nio:ShortBuffer|] v3 @type (this), [|java:nio:ShortBuffer|] v4 @type (object)) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.put:(Ljava/nio/ShortBuffer;)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d5668.   if v4 != v3 then goto L0d567c;
#L0d566c.   v1:= new [|java:lang:IllegalArgumentException|];
#L0d5670.   v2:= "src == this" @type (object, string);
#L0d5674.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d567a.   throw v1;
#L0d567c.   call temp:=  [|java:nio:ShortBuffer.remaining|](v4) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d5682.   v1:= temp;
#L0d5684.   call temp:=  [|java:nio:ShortBuffer.remaining|](v3) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d568a.   v2:= temp;
#L0d568c.   if v1 <= v2 then goto L0d569c;
#L0d5690.   v1:= new [|java:nio:BufferOverflowException|];
#L0d5694.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d569a.   throw v1;
#L0d569c.   call temp:=  [|java:nio:ShortBuffer.remaining|](v4) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d56a2.   v1:= temp;
#L0d56a4.   v0:= new [|short|][v1];
#L0d56a8.   call temp:=  [|java:nio:ShortBuffer.get|](v4, v0) @signature [|Ljava/nio/ShortBuffer;.get:([S)Ljava/nio/ShortBuffer;|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d56ae.   call temp:=  [|java:nio:ShortBuffer.put|](v3, v0) @signature [|Ljava/nio/ShortBuffer;.put:([S)Ljava/nio/ShortBuffer;|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d56b4.   return v3  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.put|] ([|short|] v0) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.put:(S)Ljava/nio/ShortBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.put|] ([|java:nio:ShortBuffer|] v2 @type (this), [|short|][] v3) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.put:([S)Ljava/nio/ShortBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d56c8.   v0:= 0  @length 4;
#L0d56ca.   v1:= v3.length;
#L0d56cc.   call temp:=  [|java:nio:ShortBuffer.put|](v2, v3, v0, v1) @signature [|Ljava/nio/ShortBuffer;.put:([SII)Ljava/nio/ShortBuffer;|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d56d2.   v0:= temp  @type object;
#L0d56d4.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.put|] ([|java:nio:ShortBuffer|] v2 @type (this), [|short|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.put:([SII)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d56e8.   v1:= v3.length;
#L0d56ea.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d56f0.   call temp:=  [|java:nio:ShortBuffer.remaining|](v2) @signature [|Ljava/nio/ShortBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d56f6.   v1:= temp;
#L0d56f8.   if v5 <= v1 then goto L0d5708;
#L0d56fc.   v1:= new [|java:nio:BufferOverflowException|];
#L0d5700.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d5706.   throw v1;
#L0d5708.   v0:= v4;
#L0d570a.   v1:= v4 + v5  @type int;
#L0d570e.   if v0 >= v1 then goto L0d5722;
#L0d5712.   v1:= v3[v0]  @short;
#L0d5716.   call temp:=  [|java:nio:ShortBuffer.put|](v2, v1) @signature [|Ljava/nio/ShortBuffer;.put:(S)Ljava/nio/ShortBuffer;|] @classDescriptor [|java:nio:ShortBuffer|] @type virtual;
#L0d571c.   v0:= v0 + 1;
#L0d5720.   goto L0d570a;
#L0d5722.   return v2  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortBuffer.slice|] () @owner [|java:nio:ShortBuffer|] @signature [|Ljava/nio/ShortBuffer;.slice:()Ljava/nio/ShortBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:nio:ShortArrayBuffer|]  @type class @AccessFlag ABSTRACT  extends [|java:nio:ShortBuffer|] {
      [|short|][] [|java:nio:ShortArrayBuffer.backingArray|]    @AccessFlag PROTECTED_FINAL;
      [|int|] [|java:nio:ShortArrayBuffer.offset|]    @AccessFlag PROTECTED_FINAL;
   }
    procedure [|void|] [|java:nio:ShortArrayBuffer.<init>|] ([|java:nio:ShortArrayBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:ShortArrayBuffer|] @signature [|Ljava/nio/ShortArrayBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d5734.   v0:= new [|short|][v3];
#L0d5738.   v1:= 0  @length 4;
#L0d573a.   call temp:=  [|java:nio:ShortArrayBuffer.<init>|](v2, v3, v0, v1) @signature [|Ljava/nio/ShortArrayBuffer;.<init>:(I[SI)V|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type direct;
#L0d5740.   return @void ;

   }
    procedure [|void|] [|java:nio:ShortArrayBuffer.<init>|] ([|java:nio:ShortArrayBuffer|] v0 @type (this), [|int|] v1, [|short|][] v2, [|int|] v3) @owner [|java:nio:ShortArrayBuffer|] @signature [|Ljava/nio/ShortArrayBuffer;.<init>:(I[SI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d5754.   call temp:=  [|java:nio:ShortBuffer.<init>|](v0, v1) @signature [|Ljava/nio/ShortBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:ShortBuffer|] @type direct;
#L0d575a.   v0.[|java:nio:ShortArrayBuffer.backingArray|]  := v2 @type object;
#L0d575e.   v0.[|java:nio:ShortArrayBuffer.offset|]  := v3;
#L0d5762.   return @void ;

   }
    procedure [|void|] [|java:nio:ShortArrayBuffer.<init>|] ([|java:nio:ShortArrayBuffer|] v2 @type (this), [|short|][] v3) @owner [|java:nio:ShortArrayBuffer|] @signature [|Ljava/nio/ShortArrayBuffer;.<init>:([S)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d5774.   v0:= v3.length;
#L0d5776.   v1:= 0  @length 4;
#L0d5778.   call temp:=  [|java:nio:ShortArrayBuffer.<init>|](v2, v0, v3, v1) @signature [|Ljava/nio/ShortArrayBuffer;.<init>:(I[SI)V|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type direct;
#L0d577e.   return @void ;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortArrayBuffer.get|] ([|java:nio:ShortArrayBuffer|] v3 @type (this), [|short|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:ShortArrayBuffer|] @signature [|Ljava/nio/ShortArrayBuffer;.get:([SII)Ljava/nio/ShortBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d5790.   call temp:=  [|java:nio:ShortArrayBuffer.remaining|](v3) @signature [|Ljava/nio/ShortArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type virtual;
#L0d5796.   v0:= temp;
#L0d5798.   if v6 <= v0 then goto L0d57a8;
#L0d579c.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d57a0.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d57a6.   throw v0;
#L0d57a8.   v0:= v3.[|java:nio:ShortArrayBuffer.backingArray|]   @type object;
#L0d57ac.   v1:= v3.[|java:nio:ShortArrayBuffer.offset|] ;
#L0d57b0.   v2:= v3.[|java:nio:ShortArrayBuffer.position|] ;
#L0d57b4.   v1:= v1 + v2  @type int;
#L0d57b6.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v4, v5, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d57bc.   v0:= v3.[|java:nio:ShortArrayBuffer.position|] ;
#L0d57c0.   v0:= v0 + v6  @type int;
#L0d57c2.   v3.[|java:nio:ShortArrayBuffer.position|]  := v0;
#L0d57c6.   return v3  @type object;

   }
    procedure [|short|] [|java:nio:ShortArrayBuffer.get|] ([|java:nio:ShortArrayBuffer|] v4 @type (this)) @owner [|java:nio:ShortArrayBuffer|] @signature [|Ljava/nio/ShortArrayBuffer;.get:()S|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d57d8.   v0:= v4.[|java:nio:ShortArrayBuffer.position|] ;
#L0d57dc.   v1:= v4.[|java:nio:ShortArrayBuffer.limit|] ;
#L0d57e0.   if v0 != v1 then goto L0d57f0;
#L0d57e4.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d57e8.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d57ee.   throw v0;
#L0d57f0.   v0:= v4.[|java:nio:ShortArrayBuffer.backingArray|]   @type object;
#L0d57f4.   v1:= v4.[|java:nio:ShortArrayBuffer.offset|] ;
#L0d57f8.   v2:= v4.[|java:nio:ShortArrayBuffer.position|] ;
#L0d57fc.   v3:= v2 + 1;
#L0d5800.   v4.[|java:nio:ShortArrayBuffer.position|]  := v3;
#L0d5804.   v1:= v1 + v2  @type int;
#L0d5806.   v0:= v0[v1]  @short;
#L0d580a.   return v0;

   }
    procedure [|short|] [|java:nio:ShortArrayBuffer.get|] ([|java:nio:ShortArrayBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:ShortArrayBuffer|] @signature [|Ljava/nio/ShortArrayBuffer;.get:(I)S|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d581c.   call temp:=  [|java:nio:ShortArrayBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/ShortArrayBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type virtual;
#L0d5822.   v0:= v2.[|java:nio:ShortArrayBuffer.backingArray|]   @type object;
#L0d5826.   v1:= v2.[|java:nio:ShortArrayBuffer.offset|] ;
#L0d582a.   v1:= v1 + v3  @type int;
#L0d582c.   v0:= v0[v1]  @short;
#L0d5830.   return v0;

   }
    procedure [|boolean|] [|java:nio:ShortArrayBuffer.isDirect|] ([|java:nio:ShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ShortArrayBuffer|] @signature [|Ljava/nio/ShortArrayBuffer;.isDirect:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d5844.   v0:= 0  @length 4;
#L0d5846.   return v0;

   }
    procedure [|java:nio:ByteOrder|] [|java:nio:ShortArrayBuffer.order|] ([|java:nio:ShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ShortArrayBuffer|] @signature [|Ljava/nio/ShortArrayBuffer;.order:()Ljava/nio/ByteOrder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d5858.   call temp:=  [|java:nio:ByteOrder.nativeOrder|]() @signature [|Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteOrder|] @type static;
#L0d585e.   v0:= temp  @type object;
#L0d5860.   return v0  @type object;

   }
record [|java:nio:ReadOnlyShortArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:ShortArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadOnlyShortArrayBuffer.<init>|] ([|java:nio:ReadOnlyShortArrayBuffer|] v0 @type (this), [|int|] v1, [|short|][] v2, [|int|] v3) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.<init>:(I[SI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d5874.   call temp:=  [|java:nio:ShortArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ShortArrayBuffer;.<init>:(I[SI)V|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type direct;
#L0d587a.   return @void ;

   }
    procedure [|java:nio:ReadOnlyShortArrayBuffer|] [|java:nio:ReadOnlyShortArrayBuffer.copy|] ([|java:nio:ShortArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.copy:(Ljava/nio/ShortArrayBuffer;I)Ljava/nio/ReadOnlyShortArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d588c.   v0:= new [|java:nio:ReadOnlyShortArrayBuffer|];
#L0d5890.   call temp:=  [|java:nio:ShortArrayBuffer.capacity|](v4) @signature [|Ljava/nio/ShortArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type virtual;
#L0d5896.   v1:= temp;
#L0d5898.   v2:= v4.[|java:nio:ShortArrayBuffer.backingArray|]   @type object;
#L0d589c.   v3:= v4.[|java:nio:ShortArrayBuffer.offset|] ;
#L0d58a0.   call temp:=  [|java:nio:ReadOnlyShortArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.<init>:(I[SI)V|] @classDescriptor [|java:nio:ReadOnlyShortArrayBuffer|] @type direct;
#L0d58a6.   v1:= v4.[|java:nio:ShortArrayBuffer.limit|] ;
#L0d58aa.   v0.[|java:nio:ReadOnlyShortArrayBuffer.limit|]  := v1;
#L0d58ae.   call temp:=  [|java:nio:ShortArrayBuffer.position|](v4) @signature [|Ljava/nio/ShortArrayBuffer;.position:()I|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type virtual;
#L0d58b4.   v1:= temp;
#L0d58b6.   v0.[|java:nio:ReadOnlyShortArrayBuffer.position|]  := v1;
#L0d58ba.   v0.[|java:nio:ReadOnlyShortArrayBuffer.mark|]  := v5;
#L0d58be.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadOnlyShortArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d58d0.   call temp:=  [|java:nio:ReadOnlyShortArrayBuffer.duplicate|](v1) @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.duplicate:()Ljava/nio/ShortBuffer;|] @classDescriptor [|java:nio:ReadOnlyShortArrayBuffer|] @type virtual;
#L0d58d6.   v0:= temp  @type object;
#L0d58d8.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadOnlyShortArrayBuffer.compact|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.compact:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d58ec.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d58f0.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d58f6.   throw v0;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadOnlyShortArrayBuffer.duplicate|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.duplicate:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5908.   v0:= v1.[|java:nio:ReadOnlyShortArrayBuffer.mark|] ;
#L0d590c.   call temp:=  [|java:nio:ReadOnlyShortArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.copy:(Ljava/nio/ShortArrayBuffer;I)Ljava/nio/ReadOnlyShortArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyShortArrayBuffer|] @type static;
#L0d5912.   v0:= temp  @type object;
#L0d5914.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyShortArrayBuffer.isReadOnly|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5928.   v0:= 1  @length 4;
#L0d592a.   return v0;

   }
    procedure [|short|][] [|java:nio:ReadOnlyShortArrayBuffer.protectedArray|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.protectedArray:()[S|] @Access  {
      local temp ;
        v0;
      
#L0d593c.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d5940.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d5946.   throw v0;

   }
    procedure [|int|] [|java:nio:ReadOnlyShortArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d5958.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d595c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d5962.   throw v0;

   }
    procedure [|boolean|] [|java:nio:ReadOnlyShortArrayBuffer.protectedHasArray|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d5974.   v0:= 0  @length 4;
#L0d5976.   return v0;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadOnlyShortArrayBuffer.put|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this), [|int|] v2, [|short|] v3) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.put:(IS)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5988.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d598c.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d5992.   throw v0;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadOnlyShortArrayBuffer.put|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this), [|java:nio:ShortBuffer|] v2 @type (object)) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.put:(Ljava/nio/ShortBuffer;)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d59a4.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d59a8.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d59ae.   throw v0;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadOnlyShortArrayBuffer.put|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this), [|short|] v2) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.put:(S)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d59c0.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d59c4.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d59ca.   throw v0;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadOnlyShortArrayBuffer.put|] ([|java:nio:ReadOnlyShortArrayBuffer|] v1 @type (this), [|short|][] v2, [|int|] v3, [|int|] v4) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.put:([SII)Ljava/nio/ShortBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d59dc.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d59e0.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d59e6.   throw v0;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadOnlyShortArrayBuffer.slice|] ([|java:nio:ReadOnlyShortArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadOnlyShortArrayBuffer|] @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.slice:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d59f8.   v0:= new [|java:nio:ReadOnlyShortArrayBuffer|];
#L0d59fc.   call temp:=  [|java:nio:ReadOnlyShortArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadOnlyShortArrayBuffer|] @type virtual;
#L0d5a02.   v1:= temp;
#L0d5a04.   v2:= v5.[|java:nio:ReadOnlyShortArrayBuffer.backingArray|]   @type object;
#L0d5a08.   v3:= v5.[|java:nio:ReadOnlyShortArrayBuffer.offset|] ;
#L0d5a0c.   v4:= v5.[|java:nio:ReadOnlyShortArrayBuffer.position|] ;
#L0d5a10.   v3:= v3 + v4  @type int;
#L0d5a12.   call temp:=  [|java:nio:ReadOnlyShortArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.<init>:(I[SI)V|] @classDescriptor [|java:nio:ReadOnlyShortArrayBuffer|] @type direct;
#L0d5a18.   return v0  @type object;

   }
record [|java:nio:ReadWriteCharArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:CharArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadWriteCharArrayBuffer.<init>|] ([|java:nio:ReadWriteCharArrayBuffer|] v0 @type (this), [|int|] v1) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d5a2c.   call temp:=  [|java:nio:CharArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/CharArrayBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:CharArrayBuffer|] @type direct;
#L0d5a32.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteCharArrayBuffer.<init>|] ([|java:nio:ReadWriteCharArrayBuffer|] v0 @type (this), [|int|] v1, [|char|][] v2, [|int|] v3) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.<init>:(I[CI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d5a44.   call temp:=  [|java:nio:CharArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/CharArrayBuffer;.<init>:(I[CI)V|] @classDescriptor [|java:nio:CharArrayBuffer|] @type direct;
#L0d5a4a.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteCharArrayBuffer.<init>|] ([|java:nio:ReadWriteCharArrayBuffer|] v0 @type (this), [|char|][] v1) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.<init>:([C)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d5a5c.   call temp:=  [|java:nio:CharArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/CharArrayBuffer;.<init>:([C)V|] @classDescriptor [|java:nio:CharArrayBuffer|] @type direct;
#L0d5a62.   return @void ;

   }
    procedure [|java:nio:ReadWriteCharArrayBuffer|] [|java:nio:ReadWriteCharArrayBuffer.copy|] ([|java:nio:CharArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.copy:(Ljava/nio/CharArrayBuffer;I)Ljava/nio/ReadWriteCharArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d5a74.   v0:= new [|java:nio:ReadWriteCharArrayBuffer|];
#L0d5a78.   call temp:=  [|java:nio:CharArrayBuffer.capacity|](v4) @signature [|Ljava/nio/CharArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:CharArrayBuffer|] @type virtual;
#L0d5a7e.   v1:= temp;
#L0d5a80.   v2:= v4.[|java:nio:CharArrayBuffer.backingArray|]   @type object;
#L0d5a84.   v3:= v4.[|java:nio:CharArrayBuffer.offset|] ;
#L0d5a88.   call temp:=  [|java:nio:ReadWriteCharArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.<init>:(I[CI)V|] @classDescriptor [|java:nio:ReadWriteCharArrayBuffer|] @type direct;
#L0d5a8e.   v1:= v4.[|java:nio:CharArrayBuffer.limit|] ;
#L0d5a92.   v0.[|java:nio:ReadWriteCharArrayBuffer.limit|]  := v1;
#L0d5a96.   call temp:=  [|java:nio:CharArrayBuffer.position|](v4) @signature [|Ljava/nio/CharArrayBuffer;.position:()I|] @classDescriptor [|java:nio:CharArrayBuffer|] @type virtual;
#L0d5a9c.   v1:= temp;
#L0d5a9e.   v0.[|java:nio:ReadWriteCharArrayBuffer.position|]  := v1;
#L0d5aa2.   v0.[|java:nio:ReadWriteCharArrayBuffer.mark|]  := v5;
#L0d5aa6.   return v0  @type object;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadWriteCharArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadWriteCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5ab8.   v0:= v1.[|java:nio:ReadWriteCharArrayBuffer.mark|] ;
#L0d5abc.   call temp:=  [|java:nio:ReadOnlyCharArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyCharArrayBuffer;.copy:(Ljava/nio/CharArrayBuffer;I)Ljava/nio/ReadOnlyCharArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyCharArrayBuffer|] @type static;
#L0d5ac2.   v0:= temp  @type object;
#L0d5ac4.   return v0  @type object;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadWriteCharArrayBuffer.compact|] ([|java:nio:ReadWriteCharArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.compact:()Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d5ad8.   v0:= v5.[|java:nio:ReadWriteCharArrayBuffer.backingArray|]   @type object;
#L0d5adc.   v1:= v5.[|java:nio:ReadWriteCharArrayBuffer.position|] ;
#L0d5ae0.   v2:= v5.[|java:nio:ReadWriteCharArrayBuffer.offset|] ;
#L0d5ae4.   v1:= v1 + v2  @type int;
#L0d5ae6.   v2:= v5.[|java:nio:ReadWriteCharArrayBuffer.backingArray|]   @type object;
#L0d5aea.   v3:= v5.[|java:nio:ReadWriteCharArrayBuffer.offset|] ;
#L0d5aee.   call temp:=  [|java:nio:ReadWriteCharArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteCharArrayBuffer|] @type virtual;
#L0d5af4.   v4:= temp;
#L0d5af6.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d5afc.   v0:= v5.[|java:nio:ReadWriteCharArrayBuffer.limit|] ;
#L0d5b00.   v1:= v5.[|java:nio:ReadWriteCharArrayBuffer.position|] ;
#L0d5b04.   v0:= v0 - v1  @type int;
#L0d5b06.   v5.[|java:nio:ReadWriteCharArrayBuffer.position|]  := v0;
#L0d5b0a.   v0:= v5.[|java:nio:ReadWriteCharArrayBuffer.capacity|] ;
#L0d5b0e.   v5.[|java:nio:ReadWriteCharArrayBuffer.limit|]  := v0;
#L0d5b12.   v0:= -1  @length 4;
#L0d5b14.   v5.[|java:nio:ReadWriteCharArrayBuffer.mark|]  := v0;
#L0d5b18.   return v5  @type object;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadWriteCharArrayBuffer.duplicate|] ([|java:nio:ReadWriteCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.duplicate:()Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5b2c.   v0:= v1.[|java:nio:ReadWriteCharArrayBuffer.mark|] ;
#L0d5b30.   call temp:=  [|java:nio:ReadWriteCharArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.copy:(Ljava/nio/CharArrayBuffer;I)Ljava/nio/ReadWriteCharArrayBuffer;|] @classDescriptor [|java:nio:ReadWriteCharArrayBuffer|] @type static;
#L0d5b36.   v0:= temp  @type object;
#L0d5b38.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadWriteCharArrayBuffer.isReadOnly|] ([|java:nio:ReadWriteCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5b4c.   v0:= 0  @length 4;
#L0d5b4e.   return v0;

   }
    procedure [|char|][] [|java:nio:ReadWriteCharArrayBuffer.protectedArray|] ([|java:nio:ReadWriteCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.protectedArray:()[C|] @Access  {
      local temp ;
        v0;
      
#L0d5b60.   v0:= v1.[|java:nio:ReadWriteCharArrayBuffer.backingArray|]   @type object;
#L0d5b64.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:ReadWriteCharArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadWriteCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d5b78.   v0:= v1.[|java:nio:ReadWriteCharArrayBuffer.offset|] ;
#L0d5b7c.   return v0;

   }
    procedure [|boolean|] [|java:nio:ReadWriteCharArrayBuffer.protectedHasArray|] ([|java:nio:ReadWriteCharArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d5b90.   v0:= 1  @length 4;
#L0d5b92.   return v0;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadWriteCharArrayBuffer.put|] ([|java:nio:ReadWriteCharArrayBuffer|] v4 @type (this), [|char|] v5) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.put:(C)Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d5ba4.   v0:= v4.[|java:nio:ReadWriteCharArrayBuffer.position|] ;
#L0d5ba8.   v1:= v4.[|java:nio:ReadWriteCharArrayBuffer.limit|] ;
#L0d5bac.   if v0 != v1 then goto L0d5bbc;
#L0d5bb0.   v0:= new [|java:nio:BufferOverflowException|];
#L0d5bb4.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d5bba.   throw v0;
#L0d5bbc.   v0:= v4.[|java:nio:ReadWriteCharArrayBuffer.backingArray|]   @type object;
#L0d5bc0.   v1:= v4.[|java:nio:ReadWriteCharArrayBuffer.offset|] ;
#L0d5bc4.   v2:= v4.[|java:nio:ReadWriteCharArrayBuffer.position|] ;
#L0d5bc8.   v3:= v2 + 1;
#L0d5bcc.   v4.[|java:nio:ReadWriteCharArrayBuffer.position|]  := v3;
#L0d5bd0.   v1:= v1 + v2  @type int;
#L0d5bd2.   v0[v1]:= v5  @char;
#L0d5bd6.   return v4  @type object;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadWriteCharArrayBuffer.put|] ([|java:nio:ReadWriteCharArrayBuffer|] v2 @type (this), [|int|] v3, [|char|] v4) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.put:(IC)Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d5be8.   call temp:=  [|java:nio:ReadWriteCharArrayBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:ReadWriteCharArrayBuffer|] @type virtual;
#L0d5bee.   v0:= v2.[|java:nio:ReadWriteCharArrayBuffer.backingArray|]   @type object;
#L0d5bf2.   v1:= v2.[|java:nio:ReadWriteCharArrayBuffer.offset|] ;
#L0d5bf6.   v1:= v1 + v3  @type int;
#L0d5bf8.   v0[v1]:= v4  @char;
#L0d5bfc.   return v2  @type object;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadWriteCharArrayBuffer.put|] ([|java:nio:ReadWriteCharArrayBuffer|] v3 @type (this), [|char|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.put:([CII)Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d5c10.   call temp:=  [|java:nio:ReadWriteCharArrayBuffer.remaining|](v3) @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteCharArrayBuffer|] @type virtual;
#L0d5c16.   v0:= temp;
#L0d5c18.   if v6 <= v0 then goto L0d5c28;
#L0d5c1c.   v0:= new [|java:nio:BufferOverflowException|];
#L0d5c20.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d5c26.   throw v0;
#L0d5c28.   v0:= v3.[|java:nio:ReadWriteCharArrayBuffer.backingArray|]   @type object;
#L0d5c2c.   v1:= v3.[|java:nio:ReadWriteCharArrayBuffer.offset|] ;
#L0d5c30.   v2:= v3.[|java:nio:ReadWriteCharArrayBuffer.position|] ;
#L0d5c34.   v1:= v1 + v2  @type int;
#L0d5c36.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d5c3c.   v0:= v3.[|java:nio:ReadWriteCharArrayBuffer.position|] ;
#L0d5c40.   v0:= v0 + v6  @type int;
#L0d5c42.   v3.[|java:nio:ReadWriteCharArrayBuffer.position|]  := v0;
#L0d5c46.   return v3  @type object;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:ReadWriteCharArrayBuffer.slice|] ([|java:nio:ReadWriteCharArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteCharArrayBuffer|] @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.slice:()Ljava/nio/CharBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d5c58.   v0:= new [|java:nio:ReadWriteCharArrayBuffer|];
#L0d5c5c.   call temp:=  [|java:nio:ReadWriteCharArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteCharArrayBuffer|] @type virtual;
#L0d5c62.   v1:= temp;
#L0d5c64.   v2:= v5.[|java:nio:ReadWriteCharArrayBuffer.backingArray|]   @type object;
#L0d5c68.   v3:= v5.[|java:nio:ReadWriteCharArrayBuffer.offset|] ;
#L0d5c6c.   v4:= v5.[|java:nio:ReadWriteCharArrayBuffer.position|] ;
#L0d5c70.   v3:= v3 + v4  @type int;
#L0d5c72.   call temp:=  [|java:nio:ReadWriteCharArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteCharArrayBuffer;.<init>:(I[CI)V|] @classDescriptor [|java:nio:ReadWriteCharArrayBuffer|] @type direct;
#L0d5c78.   return v0  @type object;

   }
record [|java:nio:ReadWriteDirectByteBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:DirectByteBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadWriteDirectByteBuffer.<init>|] ([|java:nio:ReadWriteDirectByteBuffer|] v2 @type (this), [|int|] v3) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d5c8c.   call temp:=  [|java:nio:MemoryBlock.allocate|](v3) @signature [|Ljava/nio/MemoryBlock;.allocate:(I)Ljava/nio/MemoryBlock;|] @classDescriptor [|java:nio:MemoryBlock|] @type static;
#L0d5c92.   v0:= temp  @type object;
#L0d5c94.   v1:= 0  @length 4;
#L0d5c96.   call temp:=  [|java:nio:DirectByteBuffer.<init>|](v2, v0, v3, v1) @signature [|Ljava/nio/DirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:DirectByteBuffer|] @type direct;
#L0d5c9c.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteDirectByteBuffer.<init>|] ([|java:nio:ReadWriteDirectByteBuffer|] v2 @type (this), [|int|] v3, [|int|] v4) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.<init>:(II)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d5cb0.   v0:= (long)v4  @type i2l;
#L0d5cb2.   call temp:=  [|java:nio:MemoryBlock.wrapFromJni|](v3, v0, v1) @signature [|Ljava/nio/MemoryBlock;.wrapFromJni:(IJ)Ljava/nio/MemoryBlock;|] @classDescriptor [|java:nio:MemoryBlock|] @type static;
#L0d5cb8.   v0:= temp  @type object;
#L0d5cba.   v1:= 0  @length 4;
#L0d5cbc.   call temp:=  [|java:nio:DirectByteBuffer.<init>|](v2, v0, v4, v1) @signature [|Ljava/nio/DirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:DirectByteBuffer|] @type direct;
#L0d5cc2.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteDirectByteBuffer.<init>|] ([|java:nio:ReadWriteDirectByteBuffer|] v0 @type (this), [|java:nio:MemoryBlock|] v1 @type (object), [|int|] v2, [|int|] v3) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d5cd4.   call temp:=  [|java:nio:DirectByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/DirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:DirectByteBuffer|] @type direct;
#L0d5cda.   return @void ;

   }
    procedure [|java:nio:ReadWriteDirectByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.copy|] ([|java:nio:DirectByteBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.copy:(Ljava/nio/DirectByteBuffer;I)Ljava/nio/ReadWriteDirectByteBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d5cec.   v0:= new [|java:nio:ReadWriteDirectByteBuffer|];
#L0d5cf0.   v1:= v4.[|java:nio:DirectByteBuffer.block|]   @type object;
#L0d5cf4.   call temp:=  [|java:nio:DirectByteBuffer.capacity|](v4) @signature [|Ljava/nio/DirectByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d5cfa.   v2:= temp;
#L0d5cfc.   v3:= v4.[|java:nio:DirectByteBuffer.offset|] ;
#L0d5d00.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type direct;
#L0d5d06.   v1:= v4.[|java:nio:DirectByteBuffer.limit|] ;
#L0d5d0a.   v0.[|java:nio:ReadWriteDirectByteBuffer.limit|]  := v1;
#L0d5d0e.   call temp:=  [|java:nio:DirectByteBuffer.position|](v4) @signature [|Ljava/nio/DirectByteBuffer;.position:()I|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d5d14.   v1:= temp;
#L0d5d16.   v0.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v1;
#L0d5d1a.   v0.[|java:nio:ReadWriteDirectByteBuffer.mark|]  := v5;
#L0d5d1e.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.asReadOnlyBuffer|] ([|java:nio:ReadWriteDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5d30.   v0:= v1.[|java:nio:ReadWriteDirectByteBuffer.mark|] ;
#L0d5d34.   call temp:=  [|java:nio:ReadOnlyDirectByteBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyDirectByteBuffer;.copy:(Ljava/nio/DirectByteBuffer;I)Ljava/nio/ReadOnlyDirectByteBuffer;|] @classDescriptor [|java:nio:ReadOnlyDirectByteBuffer|] @type static;
#L0d5d3a.   v0:= temp  @type object;
#L0d5d3c.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.compact|] ([|java:nio:ReadWriteDirectByteBuffer|] v6 @type (this)) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.compact:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0d5d50.   v1:= 0  @length 4;
#L0d5d52.   v3:= v6.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5d56.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.remaining|](v6) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d5d5c.   v0:= temp;
#L0d5d5e.   v4:= (long)v0  @type i2l;
#L0d5d60.   v0:= v6  @type object;
#L0d5d62.   v2:= v6  @type object;
#L0d5d64.   call temp:=  [|libcore:io:Memory.memmove|](v0, v1, v2, v3, v4, v5) @signature [|Llibcore/io/Memory;.memmove:(Ljava/lang/Object;ILjava/lang/Object;IJ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d5d6a.   v0:= v6.[|java:nio:ReadWriteDirectByteBuffer.limit|] ;
#L0d5d6e.   v1:= v6.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5d72.   v0:= v0 - v1  @type int;
#L0d5d74.   v6.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d5d78.   v0:= v6.[|java:nio:ReadWriteDirectByteBuffer.capacity|] ;
#L0d5d7c.   v6.[|java:nio:ReadWriteDirectByteBuffer.limit|]  := v0;
#L0d5d80.   v0:= -1  @length 4;
#L0d5d82.   v6.[|java:nio:ReadWriteDirectByteBuffer.mark|]  := v0;
#L0d5d86.   return v6  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.duplicate|] ([|java:nio:ReadWriteDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5d98.   v0:= v1.[|java:nio:ReadWriteDirectByteBuffer.mark|] ;
#L0d5d9c.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.copy:(Ljava/nio/DirectByteBuffer;I)Ljava/nio/ReadWriteDirectByteBuffer;|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type static;
#L0d5da2.   v0:= temp  @type object;
#L0d5da4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadWriteDirectByteBuffer.isReadOnly|] ([|java:nio:ReadWriteDirectByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d5db8.   v0:= 0  @length 4;
#L0d5dba.   return v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.put|] ([|java:nio:ReadWriteDirectByteBuffer|] v4 @type (this), [|byte|] v5) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:(B)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d5dcc.   v0:= v4.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5dd0.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.limit|] ;
#L0d5dd4.   if v0 != v1 then goto L0d5de4;
#L0d5dd8.   v0:= new [|java:nio:BufferOverflowException|];
#L0d5ddc.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d5de2.   throw v0;
#L0d5de4.   v0:= v4.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d5de8.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d5dec.   v2:= v4.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5df0.   v3:= v2 + 1;
#L0d5df4.   v4.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v3;
#L0d5df8.   v1:= v1 + v2  @type int;
#L0d5dfa.   call temp:=  [|java:nio:MemoryBlock.pokeByte|](v0, v1, v5) @signature [|Ljava/nio/MemoryBlock;.pokeByte:(IB)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d5e00.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.put|] ([|java:nio:ReadWriteDirectByteBuffer|] v2 @type (this), [|int|] v3, [|byte|] v4) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d5e14.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d5e1a.   v0:= v2.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d5e1e.   v1:= v2.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d5e22.   v1:= v1 + v3  @type int;
#L0d5e24.   call temp:=  [|java:nio:MemoryBlock.pokeByte|](v0, v1, v4) @signature [|Ljava/nio/MemoryBlock;.pokeByte:(IB)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d5e2a.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.put|] ([|java:nio:ReadWriteDirectByteBuffer|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d5e3c.   v0:= 1  @length 4;
#L0d5e3e.   v1:= v4.length;
#L0d5e40.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkPutBounds|](v3, v0, v1, v5, v6) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d5e46.   v0:= v3.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d5e4a.   v1:= v3.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d5e4e.   v2:= v3.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5e52.   v1:= v1 + v2  @type int;
#L0d5e54.   call temp:=  [|java:nio:MemoryBlock.pokeByteArray|](v0, v1, v4, v5, v6) @signature [|Ljava/nio/MemoryBlock;.pokeByteArray:(I[BII)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d5e5a.   v0:= v3.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5e5e.   v0:= v0 + v6  @type int;
#L0d5e60.   v3.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d5e64.   return v3  @type object;

   }
    procedure [|void|] [|java:nio:ReadWriteDirectByteBuffer.put|] ([|java:nio:ReadWriteDirectByteBuffer|] v7 @type (this), [|char|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([CII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d5e78.   v0:= 2  @length 4;
#L0d5e7a.   v1:= v8.length;
#L0d5e7c.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkPutBounds|](v7, v0, v1, v9, v10) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d5e82.   v6:= temp;
#L0d5e84.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d5e88.   v1:= v7.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d5e8c.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5e90.   v1:= v1 + v2  @type int;
#L0d5e92.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d5e96.   v5:= v2.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d5e9a.   v2:= v8  @type object;
#L0d5e9c.   v3:= v9;
#L0d5e9e.   v4:= v10;
#L0d5ea0.   call temp:=  [|java:nio:MemoryBlock.pokeCharArray|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/nio/MemoryBlock;.pokeCharArray:(I[CIIZ)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d5ea6.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5eaa.   v0:= v0 + v6  @type int;
#L0d5eac.   v7.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d5eb0.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteDirectByteBuffer.put|] ([|java:nio:ReadWriteDirectByteBuffer|] v7 @type (this), [|double|][] v8, [|int|] v10, [|int|] v11) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([DII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d5ec4.   v0:= 8  @length 16;
#L0d5ec8.   v1:= v8.length;
#L0d5eca.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkPutBounds|](v7, v0, v1, v9, v10) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d5ed0.   v6:= temp;
#L0d5ed2.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d5ed6.   v1:= v7.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d5eda.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5ede.   v1:= v1 + v2  @type int;
#L0d5ee0.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d5ee4.   v5:= v2.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d5ee8.   v2:= v8  @type object;
#L0d5eea.   v3:= v9;
#L0d5eec.   v4:= v10;
#L0d5eee.   call temp:=  [|java:nio:MemoryBlock.pokeDoubleArray|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/nio/MemoryBlock;.pokeDoubleArray:(I[DIIZ)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d5ef4.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5ef8.   v0:= v0 + v6  @type int;
#L0d5efa.   v7.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d5efe.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteDirectByteBuffer.put|] ([|java:nio:ReadWriteDirectByteBuffer|] v7 @type (this), [|float|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([FII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d5f10.   v0:= 4  @length 4;
#L0d5f12.   v1:= v8.length;
#L0d5f14.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkPutBounds|](v7, v0, v1, v9, v10) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d5f1a.   v6:= temp;
#L0d5f1c.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d5f20.   v1:= v7.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d5f24.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5f28.   v1:= v1 + v2  @type int;
#L0d5f2a.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d5f2e.   v5:= v2.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d5f32.   v2:= v8  @type object;
#L0d5f34.   v3:= v9;
#L0d5f36.   v4:= v10;
#L0d5f38.   call temp:=  [|java:nio:MemoryBlock.pokeFloatArray|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/nio/MemoryBlock;.pokeFloatArray:(I[FIIZ)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d5f3e.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5f42.   v0:= v0 + v6  @type int;
#L0d5f44.   v7.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d5f48.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteDirectByteBuffer.put|] ([|java:nio:ReadWriteDirectByteBuffer|] v7 @type (this), [|int|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([III)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d5f5c.   v0:= 4  @length 4;
#L0d5f5e.   v1:= v8.length;
#L0d5f60.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkPutBounds|](v7, v0, v1, v9, v10) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d5f66.   v6:= temp;
#L0d5f68.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d5f6c.   v1:= v7.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d5f70.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5f74.   v1:= v1 + v2  @type int;
#L0d5f76.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d5f7a.   v5:= v2.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d5f7e.   v2:= v8  @type object;
#L0d5f80.   v3:= v9;
#L0d5f82.   v4:= v10;
#L0d5f84.   call temp:=  [|java:nio:MemoryBlock.pokeIntArray|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/nio/MemoryBlock;.pokeIntArray:(I[IIIZ)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d5f8a.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5f8e.   v0:= v0 + v6  @type int;
#L0d5f90.   v7.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d5f94.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteDirectByteBuffer.put|] ([|java:nio:ReadWriteDirectByteBuffer|] v7 @type (this), [|long|][] v8, [|int|] v10, [|int|] v11) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([JII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d5fa8.   v0:= 8  @length 16;
#L0d5fac.   v1:= v8.length;
#L0d5fae.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkPutBounds|](v7, v0, v1, v9, v10) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d5fb4.   v6:= temp;
#L0d5fb6.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d5fba.   v1:= v7.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d5fbe.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5fc2.   v1:= v1 + v2  @type int;
#L0d5fc4.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d5fc8.   v5:= v2.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d5fcc.   v2:= v8  @type object;
#L0d5fce.   v3:= v9;
#L0d5fd0.   v4:= v10;
#L0d5fd2.   call temp:=  [|java:nio:MemoryBlock.pokeLongArray|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/nio/MemoryBlock;.pokeLongArray:(I[JIIZ)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d5fd8.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d5fdc.   v0:= v0 + v6  @type int;
#L0d5fde.   v7.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d5fe2.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteDirectByteBuffer.put|] ([|java:nio:ReadWriteDirectByteBuffer|] v7 @type (this), [|short|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([SII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d5ff4.   v0:= 2  @length 4;
#L0d5ff6.   v1:= v8.length;
#L0d5ff8.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkPutBounds|](v7, v0, v1, v9, v10) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d5ffe.   v6:= temp;
#L0d6000.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d6004.   v1:= v7.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d6008.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d600c.   v1:= v1 + v2  @type int;
#L0d600e.   v2:= v7.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d6012.   v5:= v2.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d6016.   v2:= v8  @type object;
#L0d6018.   v3:= v9;
#L0d601a.   v4:= v10;
#L0d601c.   call temp:=  [|java:nio:MemoryBlock.pokeShortArray|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/nio/MemoryBlock;.pokeShortArray:(I[SIIZ)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d6022.   v0:= v7.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d6026.   v0:= v0 + v6  @type int;
#L0d6028.   v7.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d602c.   return @void ;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putChar|] ([|java:nio:ReadWriteDirectByteBuffer|] v5 @type (this), [|char|] v6) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putChar:(C)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6040.   v1:= v5.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d6044.   v0:= v1 + 2;
#L0d6048.   v1:= v5.[|java:nio:ReadWriteDirectByteBuffer.limit|] ;
#L0d604c.   if v0 <= v1 then goto L0d605c;
#L0d6050.   v1:= new [|java:nio:BufferOverflowException|];
#L0d6054.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d605a.   throw v1;
#L0d605c.   v1:= v5.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d6060.   v2:= v5.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d6064.   v3:= v5.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d6068.   v2:= v2 + v3  @type int;
#L0d606a.   v3:= (short)v6  @type i2s;
#L0d606c.   v4:= v5.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d6070.   call temp:=  [|java:nio:MemoryBlock.pokeShort|](v1, v2, v3, v4) @signature [|Ljava/nio/MemoryBlock;.pokeShort:(ISLjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d6076.   v5.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d607a.   return v5  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putChar|] ([|java:nio:ReadWriteDirectByteBuffer|] v4 @type (this), [|int|] v5, [|char|] v6) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putChar:(IC)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d608c.   v0:= 2  @length 4;
#L0d608e.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkIndex|](v4, v5, v0) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d6094.   v0:= v4.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d6098.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d609c.   v1:= v1 + v5  @type int;
#L0d609e.   v2:= (short)v6  @type i2s;
#L0d60a0.   v3:= v4.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d60a4.   call temp:=  [|java:nio:MemoryBlock.pokeShort|](v0, v1, v2, v3) @signature [|Ljava/nio/MemoryBlock;.pokeShort:(ISLjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d60aa.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putDouble|] ([|java:nio:ReadWriteDirectByteBuffer|] v6 @type (this), [|double|] v7) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putDouble:(D)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0d60bc.   v1:= v6.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d60c0.   v0:= v1 + 8;
#L0d60c4.   v1:= v6.[|java:nio:ReadWriteDirectByteBuffer.limit|] ;
#L0d60c8.   if v0 <= v1 then goto L0d60d8;
#L0d60cc.   v1:= new [|java:nio:BufferOverflowException|];
#L0d60d0.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d60d6.   throw v1;
#L0d60d8.   v1:= v6.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d60dc.   v2:= v6.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d60e0.   v3:= v6.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d60e4.   v2:= v2 + v3  @type int;
#L0d60e6.   call temp:=  [|java:lang:Double.doubleToRawLongBits|](v7, v8) @signature [|Ljava/lang/Double;.doubleToRawLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L0d60ec.   v3:= temp  @type wide;
#L0d60ee.   v5:= v6.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d60f2.   call temp:=  [|java:nio:MemoryBlock.pokeLong|](v1, v2, v3, v4, v5) @signature [|Ljava/nio/MemoryBlock;.pokeLong:(IJLjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d60f8.   v6.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d60fc.   return v6  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putDouble|] ([|java:nio:ReadWriteDirectByteBuffer|] v5 @type (this), [|int|] v6, [|double|] v7) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putDouble:(ID)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6110.   v0:= 8  @length 16;
#L0d6114.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkIndex|](v5, v6, v0) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d611a.   v0:= v5.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d611e.   v1:= v5.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d6122.   v1:= v1 + v6  @type int;
#L0d6124.   call temp:=  [|java:lang:Double.doubleToRawLongBits|](v7, v8) @signature [|Ljava/lang/Double;.doubleToRawLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L0d612a.   v2:= temp  @type wide;
#L0d612c.   v4:= v5.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d6130.   call temp:=  [|java:nio:MemoryBlock.pokeLong|](v0, v1, v2, v3, v4) @signature [|Ljava/nio/MemoryBlock;.pokeLong:(IJLjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d6136.   return v5  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putFloat|] ([|java:nio:ReadWriteDirectByteBuffer|] v5 @type (this), [|float|] v6) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putFloat:(F)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6148.   v1:= v5.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d614c.   v0:= v1 + 4;
#L0d6150.   v1:= v5.[|java:nio:ReadWriteDirectByteBuffer.limit|] ;
#L0d6154.   if v0 <= v1 then goto L0d6164;
#L0d6158.   v1:= new [|java:nio:BufferOverflowException|];
#L0d615c.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d6162.   throw v1;
#L0d6164.   v1:= v5.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d6168.   v2:= v5.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d616c.   v3:= v5.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d6170.   v2:= v2 + v3  @type int;
#L0d6172.   call temp:=  [|java:lang:Float.floatToRawIntBits|](v6) @signature [|Ljava/lang/Float;.floatToRawIntBits:(F)I|] @classDescriptor [|java:lang:Float|] @type static;
#L0d6178.   v3:= temp;
#L0d617a.   v4:= v5.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d617e.   call temp:=  [|java:nio:MemoryBlock.pokeInt|](v1, v2, v3, v4) @signature [|Ljava/nio/MemoryBlock;.pokeInt:(IILjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d6184.   v5.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d6188.   return v5  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putFloat|] ([|java:nio:ReadWriteDirectByteBuffer|] v4 @type (this), [|int|] v5, [|float|] v6) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putFloat:(IF)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d619c.   v0:= 4  @length 4;
#L0d619e.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkIndex|](v4, v5, v0) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d61a4.   v0:= v4.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d61a8.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d61ac.   v1:= v1 + v5  @type int;
#L0d61ae.   call temp:=  [|java:lang:Float.floatToRawIntBits|](v6) @signature [|Ljava/lang/Float;.floatToRawIntBits:(F)I|] @classDescriptor [|java:lang:Float|] @type static;
#L0d61b4.   v2:= temp;
#L0d61b6.   v3:= v4.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d61ba.   call temp:=  [|java:nio:MemoryBlock.pokeInt|](v0, v1, v2, v3) @signature [|Ljava/nio/MemoryBlock;.pokeInt:(IILjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d61c0.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putInt|] ([|java:nio:ReadWriteDirectByteBuffer|] v4 @type (this), [|int|] v5) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d61d4.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d61d8.   v0:= v1 + 4;
#L0d61dc.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.limit|] ;
#L0d61e0.   if v0 <= v1 then goto L0d61f0;
#L0d61e4.   v1:= new [|java:nio:BufferOverflowException|];
#L0d61e8.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d61ee.   throw v1;
#L0d61f0.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d61f4.   v2:= v4.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d61f8.   v3:= v4.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d61fc.   v2:= v2 + v3  @type int;
#L0d61fe.   v3:= v4.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d6202.   call temp:=  [|java:nio:MemoryBlock.pokeInt|](v1, v2, v5, v3) @signature [|Ljava/nio/MemoryBlock;.pokeInt:(IILjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d6208.   v4.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d620c.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putInt|] ([|java:nio:ReadWriteDirectByteBuffer|] v3 @type (this), [|int|] v4, [|int|] v5) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d6220.   v0:= 4  @length 4;
#L0d6222.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d6228.   v0:= v3.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d622c.   v1:= v3.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d6230.   v1:= v1 + v4  @type int;
#L0d6232.   v2:= v3.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d6236.   call temp:=  [|java:nio:MemoryBlock.pokeInt|](v0, v1, v5, v2) @signature [|Ljava/nio/MemoryBlock;.pokeInt:(IILjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d623c.   return v3  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putLong|] ([|java:nio:ReadWriteDirectByteBuffer|] v3 @type (this), [|int|] v4, [|long|] v5) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d6250.   v0:= 8  @length 16;
#L0d6254.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d625a.   v0:= v3.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d625e.   v1:= v3.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d6262.   v1:= v1 + v4  @type int;
#L0d6264.   v2:= v3.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d6268.   call temp:=  [|java:nio:MemoryBlock.pokeLong|](v0, v1, v5, v6, v2) @signature [|Ljava/nio/MemoryBlock;.pokeLong:(IJLjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d626e.   return v3  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putLong|] ([|java:nio:ReadWriteDirectByteBuffer|] v4 @type (this), [|long|] v5) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d6280.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d6284.   v0:= v1 + 8;
#L0d6288.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.limit|] ;
#L0d628c.   if v0 <= v1 then goto L0d629c;
#L0d6290.   v1:= new [|java:nio:BufferOverflowException|];
#L0d6294.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d629a.   throw v1;
#L0d629c.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d62a0.   v2:= v4.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d62a4.   v3:= v4.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d62a8.   v2:= v2 + v3  @type int;
#L0d62aa.   v3:= v4.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d62ae.   call temp:=  [|java:nio:MemoryBlock.pokeLong|](v1, v2, v5, v6, v3) @signature [|Ljava/nio/MemoryBlock;.pokeLong:(IJLjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d62b4.   v4.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d62b8.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putShort|] ([|java:nio:ReadWriteDirectByteBuffer|] v3 @type (this), [|int|] v4, [|short|] v5) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putShort:(IS)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d62cc.   v0:= 2  @length 4;
#L0d62ce.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d62d4.   v0:= v3.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d62d8.   v1:= v3.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d62dc.   v1:= v1 + v4  @type int;
#L0d62de.   v2:= v3.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d62e2.   call temp:=  [|java:nio:MemoryBlock.pokeShort|](v0, v1, v5, v2) @signature [|Ljava/nio/MemoryBlock;.pokeShort:(ISLjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d62e8.   return v3  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.putShort|] ([|java:nio:ReadWriteDirectByteBuffer|] v4 @type (this), [|short|] v5) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d62fc.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d6300.   v0:= v1 + 2;
#L0d6304.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.limit|] ;
#L0d6308.   if v0 <= v1 then goto L0d6318;
#L0d630c.   v1:= new [|java:nio:BufferOverflowException|];
#L0d6310.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d6316.   throw v1;
#L0d6318.   v1:= v4.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d631c.   v2:= v4.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d6320.   v3:= v4.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d6324.   v2:= v2 + v3  @type int;
#L0d6326.   v3:= v4.[|java:nio:ReadWriteDirectByteBuffer.order|]   @type object;
#L0d632a.   call temp:=  [|java:nio:MemoryBlock.pokeShort|](v1, v2, v5, v3) @signature [|Ljava/nio/MemoryBlock;.pokeShort:(ISLjava/nio/ByteOrder;)V|] @classDescriptor [|java:nio:MemoryBlock|] @type virtual;
#L0d6330.   v4.[|java:nio:ReadWriteDirectByteBuffer.position|]  := v0;
#L0d6334.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteDirectByteBuffer.slice|] ([|java:nio:ReadWriteDirectByteBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteDirectByteBuffer|] @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6348.   v0:= new [|java:nio:ReadWriteDirectByteBuffer|];
#L0d634c.   v1:= v5.[|java:nio:ReadWriteDirectByteBuffer.block|]   @type object;
#L0d6350.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d6356.   v2:= temp;
#L0d6358.   v3:= v5.[|java:nio:ReadWriteDirectByteBuffer.offset|] ;
#L0d635c.   v4:= v5.[|java:nio:ReadWriteDirectByteBuffer.position|] ;
#L0d6360.   v3:= v3 + v4  @type int;
#L0d6362.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.<init>:(Ljava/nio/MemoryBlock;II)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type direct;
#L0d6368.   return v0  @type object;

   }
record [|java:nio:ReadWriteDoubleArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:DoubleArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadWriteDoubleArrayBuffer.<init>|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v0 @type (this), [|int|] v1) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d637c.   call temp:=  [|java:nio:DoubleArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/DoubleArrayBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:DoubleArrayBuffer|] @type direct;
#L0d6382.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteDoubleArrayBuffer.<init>|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v0 @type (this), [|int|] v1, [|double|][] v2, [|int|] v4) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.<init>:(I[DI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d6394.   call temp:=  [|java:nio:DoubleArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/DoubleArrayBuffer;.<init>:(I[DI)V|] @classDescriptor [|java:nio:DoubleArrayBuffer|] @type direct;
#L0d639a.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteDoubleArrayBuffer.<init>|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v0 @type (this), [|double|][] v1) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.<init>:([D)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d63ac.   call temp:=  [|java:nio:DoubleArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/DoubleArrayBuffer;.<init>:([D)V|] @classDescriptor [|java:nio:DoubleArrayBuffer|] @type direct;
#L0d63b2.   return @void ;

   }
    procedure [|java:nio:ReadWriteDoubleArrayBuffer|] [|java:nio:ReadWriteDoubleArrayBuffer.copy|] ([|java:nio:DoubleArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.copy:(Ljava/nio/DoubleArrayBuffer;I)Ljava/nio/ReadWriteDoubleArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d63c4.   v0:= new [|java:nio:ReadWriteDoubleArrayBuffer|];
#L0d63c8.   call temp:=  [|java:nio:DoubleArrayBuffer.capacity|](v4) @signature [|Ljava/nio/DoubleArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:DoubleArrayBuffer|] @type virtual;
#L0d63ce.   v1:= temp;
#L0d63d0.   v2:= v4.[|java:nio:DoubleArrayBuffer.backingArray|]   @type object;
#L0d63d4.   v3:= v4.[|java:nio:DoubleArrayBuffer.offset|] ;
#L0d63d8.   call temp:=  [|java:nio:ReadWriteDoubleArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.<init>:(I[DI)V|] @classDescriptor [|java:nio:ReadWriteDoubleArrayBuffer|] @type direct;
#L0d63de.   v1:= v4.[|java:nio:DoubleArrayBuffer.limit|] ;
#L0d63e2.   v0.[|java:nio:ReadWriteDoubleArrayBuffer.limit|]  := v1;
#L0d63e6.   call temp:=  [|java:nio:DoubleArrayBuffer.position|](v4) @signature [|Ljava/nio/DoubleArrayBuffer;.position:()I|] @classDescriptor [|java:nio:DoubleArrayBuffer|] @type virtual;
#L0d63ec.   v1:= temp;
#L0d63ee.   v0.[|java:nio:ReadWriteDoubleArrayBuffer.position|]  := v1;
#L0d63f2.   v0.[|java:nio:ReadWriteDoubleArrayBuffer.mark|]  := v5;
#L0d63f6.   return v0  @type object;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadWriteDoubleArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d6408.   v0:= v1.[|java:nio:ReadWriteDoubleArrayBuffer.mark|] ;
#L0d640c.   call temp:=  [|java:nio:ReadOnlyDoubleArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyDoubleArrayBuffer;.copy:(Ljava/nio/DoubleArrayBuffer;I)Ljava/nio/ReadOnlyDoubleArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyDoubleArrayBuffer|] @type static;
#L0d6412.   v0:= temp  @type object;
#L0d6414.   return v0  @type object;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadWriteDoubleArrayBuffer.compact|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.compact:()Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6428.   v0:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.backingArray|]   @type object;
#L0d642c.   v1:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.position|] ;
#L0d6430.   v2:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.offset|] ;
#L0d6434.   v1:= v1 + v2  @type int;
#L0d6436.   v2:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.backingArray|]   @type object;
#L0d643a.   v3:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.offset|] ;
#L0d643e.   call temp:=  [|java:nio:ReadWriteDoubleArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteDoubleArrayBuffer|] @type virtual;
#L0d6444.   v4:= temp;
#L0d6446.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d644c.   v0:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.limit|] ;
#L0d6450.   v1:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.position|] ;
#L0d6454.   v0:= v0 - v1  @type int;
#L0d6456.   v5.[|java:nio:ReadWriteDoubleArrayBuffer.position|]  := v0;
#L0d645a.   v0:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.capacity|] ;
#L0d645e.   v5.[|java:nio:ReadWriteDoubleArrayBuffer.limit|]  := v0;
#L0d6462.   v0:= -1  @length 4;
#L0d6464.   v5.[|java:nio:ReadWriteDoubleArrayBuffer.mark|]  := v0;
#L0d6468.   return v5  @type object;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadWriteDoubleArrayBuffer.duplicate|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.duplicate:()Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d647c.   v0:= v1.[|java:nio:ReadWriteDoubleArrayBuffer.mark|] ;
#L0d6480.   call temp:=  [|java:nio:ReadWriteDoubleArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.copy:(Ljava/nio/DoubleArrayBuffer;I)Ljava/nio/ReadWriteDoubleArrayBuffer;|] @classDescriptor [|java:nio:ReadWriteDoubleArrayBuffer|] @type static;
#L0d6486.   v0:= temp  @type object;
#L0d6488.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadWriteDoubleArrayBuffer.isReadOnly|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d649c.   v0:= 0  @length 4;
#L0d649e.   return v0;

   }
    procedure [|double|][] [|java:nio:ReadWriteDoubleArrayBuffer.protectedArray|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.protectedArray:()[D|] @Access  {
      local temp ;
        v0;
      
#L0d64b0.   v0:= v1.[|java:nio:ReadWriteDoubleArrayBuffer.backingArray|]   @type object;
#L0d64b4.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:ReadWriteDoubleArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d64c8.   v0:= v1.[|java:nio:ReadWriteDoubleArrayBuffer.offset|] ;
#L0d64cc.   return v0;

   }
    procedure [|boolean|] [|java:nio:ReadWriteDoubleArrayBuffer.protectedHasArray|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d64e0.   v0:= 1  @length 4;
#L0d64e2.   return v0;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadWriteDoubleArrayBuffer.put|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v4 @type (this), [|double|] v5) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.put:(D)Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d64f4.   v0:= v4.[|java:nio:ReadWriteDoubleArrayBuffer.position|] ;
#L0d64f8.   v1:= v4.[|java:nio:ReadWriteDoubleArrayBuffer.limit|] ;
#L0d64fc.   if v0 != v1 then goto L0d650c;
#L0d6500.   v0:= new [|java:nio:BufferOverflowException|];
#L0d6504.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d650a.   throw v0;
#L0d650c.   v0:= v4.[|java:nio:ReadWriteDoubleArrayBuffer.backingArray|]   @type object;
#L0d6510.   v1:= v4.[|java:nio:ReadWriteDoubleArrayBuffer.offset|] ;
#L0d6514.   v2:= v4.[|java:nio:ReadWriteDoubleArrayBuffer.position|] ;
#L0d6518.   v3:= v2 + 1;
#L0d651c.   v4.[|java:nio:ReadWriteDoubleArrayBuffer.position|]  := v3;
#L0d6520.   v1:= v1 + v2  @type int;
#L0d6522.   v0[v1]:= v5  @wide;
#L0d6526.   return v4  @type object;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadWriteDoubleArrayBuffer.put|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v2 @type (this), [|int|] v3, [|double|] v4) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.put:(ID)Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d6538.   call temp:=  [|java:nio:ReadWriteDoubleArrayBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:ReadWriteDoubleArrayBuffer|] @type virtual;
#L0d653e.   v0:= v2.[|java:nio:ReadWriteDoubleArrayBuffer.backingArray|]   @type object;
#L0d6542.   v1:= v2.[|java:nio:ReadWriteDoubleArrayBuffer.offset|] ;
#L0d6546.   v1:= v1 + v3  @type int;
#L0d6548.   v0[v1]:= v4  @wide;
#L0d654c.   return v2  @type object;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadWriteDoubleArrayBuffer.put|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v3 @type (this), [|double|][] v4, [|int|] v6, [|int|] v7) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.put:([DII)Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d6560.   call temp:=  [|java:nio:ReadWriteDoubleArrayBuffer.remaining|](v3) @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteDoubleArrayBuffer|] @type virtual;
#L0d6566.   v0:= temp;
#L0d6568.   if v6 <= v0 then goto L0d6578;
#L0d656c.   v0:= new [|java:nio:BufferOverflowException|];
#L0d6570.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d6576.   throw v0;
#L0d6578.   v0:= v3.[|java:nio:ReadWriteDoubleArrayBuffer.backingArray|]   @type object;
#L0d657c.   v1:= v3.[|java:nio:ReadWriteDoubleArrayBuffer.offset|] ;
#L0d6580.   v2:= v3.[|java:nio:ReadWriteDoubleArrayBuffer.position|] ;
#L0d6584.   v1:= v1 + v2  @type int;
#L0d6586.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d658c.   v0:= v3.[|java:nio:ReadWriteDoubleArrayBuffer.position|] ;
#L0d6590.   v0:= v0 + v6  @type int;
#L0d6592.   v3.[|java:nio:ReadWriteDoubleArrayBuffer.position|]  := v0;
#L0d6596.   return v3  @type object;

   }
    procedure [|java:nio:DoubleBuffer|] [|java:nio:ReadWriteDoubleArrayBuffer.slice|] ([|java:nio:ReadWriteDoubleArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteDoubleArrayBuffer|] @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.slice:()Ljava/nio/DoubleBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d65a8.   v0:= new [|java:nio:ReadWriteDoubleArrayBuffer|];
#L0d65ac.   call temp:=  [|java:nio:ReadWriteDoubleArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteDoubleArrayBuffer|] @type virtual;
#L0d65b2.   v1:= temp;
#L0d65b4.   v2:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.backingArray|]   @type object;
#L0d65b8.   v3:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.offset|] ;
#L0d65bc.   v4:= v5.[|java:nio:ReadWriteDoubleArrayBuffer.position|] ;
#L0d65c0.   v3:= v3 + v4  @type int;
#L0d65c2.   call temp:=  [|java:nio:ReadWriteDoubleArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteDoubleArrayBuffer;.<init>:(I[DI)V|] @classDescriptor [|java:nio:ReadWriteDoubleArrayBuffer|] @type direct;
#L0d65c8.   return v0  @type object;

   }
record [|java:nio:ReadWriteFloatArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:FloatArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadWriteFloatArrayBuffer.<init>|] ([|java:nio:ReadWriteFloatArrayBuffer|] v0 @type (this), [|int|] v1) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d65dc.   call temp:=  [|java:nio:FloatArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/FloatArrayBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:FloatArrayBuffer|] @type direct;
#L0d65e2.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteFloatArrayBuffer.<init>|] ([|java:nio:ReadWriteFloatArrayBuffer|] v0 @type (this), [|int|] v1, [|float|][] v2, [|int|] v3) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.<init>:(I[FI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d65f4.   call temp:=  [|java:nio:FloatArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/FloatArrayBuffer;.<init>:(I[FI)V|] @classDescriptor [|java:nio:FloatArrayBuffer|] @type direct;
#L0d65fa.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteFloatArrayBuffer.<init>|] ([|java:nio:ReadWriteFloatArrayBuffer|] v0 @type (this), [|float|][] v1) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.<init>:([F)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d660c.   call temp:=  [|java:nio:FloatArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/FloatArrayBuffer;.<init>:([F)V|] @classDescriptor [|java:nio:FloatArrayBuffer|] @type direct;
#L0d6612.   return @void ;

   }
    procedure [|java:nio:ReadWriteFloatArrayBuffer|] [|java:nio:ReadWriteFloatArrayBuffer.copy|] ([|java:nio:FloatArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.copy:(Ljava/nio/FloatArrayBuffer;I)Ljava/nio/ReadWriteFloatArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d6624.   v0:= new [|java:nio:ReadWriteFloatArrayBuffer|];
#L0d6628.   call temp:=  [|java:nio:FloatArrayBuffer.capacity|](v4) @signature [|Ljava/nio/FloatArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:FloatArrayBuffer|] @type virtual;
#L0d662e.   v1:= temp;
#L0d6630.   v2:= v4.[|java:nio:FloatArrayBuffer.backingArray|]   @type object;
#L0d6634.   v3:= v4.[|java:nio:FloatArrayBuffer.offset|] ;
#L0d6638.   call temp:=  [|java:nio:ReadWriteFloatArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.<init>:(I[FI)V|] @classDescriptor [|java:nio:ReadWriteFloatArrayBuffer|] @type direct;
#L0d663e.   v1:= v4.[|java:nio:FloatArrayBuffer.limit|] ;
#L0d6642.   v0.[|java:nio:ReadWriteFloatArrayBuffer.limit|]  := v1;
#L0d6646.   call temp:=  [|java:nio:FloatArrayBuffer.position|](v4) @signature [|Ljava/nio/FloatArrayBuffer;.position:()I|] @classDescriptor [|java:nio:FloatArrayBuffer|] @type virtual;
#L0d664c.   v1:= temp;
#L0d664e.   v0.[|java:nio:ReadWriteFloatArrayBuffer.position|]  := v1;
#L0d6652.   v0.[|java:nio:ReadWriteFloatArrayBuffer.mark|]  := v5;
#L0d6656.   return v0  @type object;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadWriteFloatArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadWriteFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d6668.   v0:= v1.[|java:nio:ReadWriteFloatArrayBuffer.mark|] ;
#L0d666c.   call temp:=  [|java:nio:ReadOnlyFloatArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyFloatArrayBuffer;.copy:(Ljava/nio/FloatArrayBuffer;I)Ljava/nio/ReadOnlyFloatArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyFloatArrayBuffer|] @type static;
#L0d6672.   v0:= temp  @type object;
#L0d6674.   return v0  @type object;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadWriteFloatArrayBuffer.compact|] ([|java:nio:ReadWriteFloatArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.compact:()Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6688.   v0:= v5.[|java:nio:ReadWriteFloatArrayBuffer.backingArray|]   @type object;
#L0d668c.   v1:= v5.[|java:nio:ReadWriteFloatArrayBuffer.position|] ;
#L0d6690.   v2:= v5.[|java:nio:ReadWriteFloatArrayBuffer.offset|] ;
#L0d6694.   v1:= v1 + v2  @type int;
#L0d6696.   v2:= v5.[|java:nio:ReadWriteFloatArrayBuffer.backingArray|]   @type object;
#L0d669a.   v3:= v5.[|java:nio:ReadWriteFloatArrayBuffer.offset|] ;
#L0d669e.   call temp:=  [|java:nio:ReadWriteFloatArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteFloatArrayBuffer|] @type virtual;
#L0d66a4.   v4:= temp;
#L0d66a6.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d66ac.   v0:= v5.[|java:nio:ReadWriteFloatArrayBuffer.limit|] ;
#L0d66b0.   v1:= v5.[|java:nio:ReadWriteFloatArrayBuffer.position|] ;
#L0d66b4.   v0:= v0 - v1  @type int;
#L0d66b6.   v5.[|java:nio:ReadWriteFloatArrayBuffer.position|]  := v0;
#L0d66ba.   v0:= v5.[|java:nio:ReadWriteFloatArrayBuffer.capacity|] ;
#L0d66be.   v5.[|java:nio:ReadWriteFloatArrayBuffer.limit|]  := v0;
#L0d66c2.   v0:= -1  @length 4;
#L0d66c4.   v5.[|java:nio:ReadWriteFloatArrayBuffer.mark|]  := v0;
#L0d66c8.   return v5  @type object;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadWriteFloatArrayBuffer.duplicate|] ([|java:nio:ReadWriteFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.duplicate:()Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d66dc.   v0:= v1.[|java:nio:ReadWriteFloatArrayBuffer.mark|] ;
#L0d66e0.   call temp:=  [|java:nio:ReadWriteFloatArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.copy:(Ljava/nio/FloatArrayBuffer;I)Ljava/nio/ReadWriteFloatArrayBuffer;|] @classDescriptor [|java:nio:ReadWriteFloatArrayBuffer|] @type static;
#L0d66e6.   v0:= temp  @type object;
#L0d66e8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadWriteFloatArrayBuffer.isReadOnly|] ([|java:nio:ReadWriteFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d66fc.   v0:= 0  @length 4;
#L0d66fe.   return v0;

   }
    procedure [|float|][] [|java:nio:ReadWriteFloatArrayBuffer.protectedArray|] ([|java:nio:ReadWriteFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.protectedArray:()[F|] @Access  {
      local temp ;
        v0;
      
#L0d6710.   v0:= v1.[|java:nio:ReadWriteFloatArrayBuffer.backingArray|]   @type object;
#L0d6714.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:ReadWriteFloatArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadWriteFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d6728.   v0:= v1.[|java:nio:ReadWriteFloatArrayBuffer.offset|] ;
#L0d672c.   return v0;

   }
    procedure [|boolean|] [|java:nio:ReadWriteFloatArrayBuffer.protectedHasArray|] ([|java:nio:ReadWriteFloatArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d6740.   v0:= 1  @length 4;
#L0d6742.   return v0;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadWriteFloatArrayBuffer.put|] ([|java:nio:ReadWriteFloatArrayBuffer|] v4 @type (this), [|float|] v5) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.put:(F)Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d6754.   v0:= v4.[|java:nio:ReadWriteFloatArrayBuffer.position|] ;
#L0d6758.   v1:= v4.[|java:nio:ReadWriteFloatArrayBuffer.limit|] ;
#L0d675c.   if v0 != v1 then goto L0d676c;
#L0d6760.   v0:= new [|java:nio:BufferOverflowException|];
#L0d6764.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d676a.   throw v0;
#L0d676c.   v0:= v4.[|java:nio:ReadWriteFloatArrayBuffer.backingArray|]   @type object;
#L0d6770.   v1:= v4.[|java:nio:ReadWriteFloatArrayBuffer.offset|] ;
#L0d6774.   v2:= v4.[|java:nio:ReadWriteFloatArrayBuffer.position|] ;
#L0d6778.   v3:= v2 + 1;
#L0d677c.   v4.[|java:nio:ReadWriteFloatArrayBuffer.position|]  := v3;
#L0d6780.   v1:= v1 + v2  @type int;
#L0d6782.   v0[v1]:= v5;
#L0d6786.   return v4  @type object;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadWriteFloatArrayBuffer.put|] ([|java:nio:ReadWriteFloatArrayBuffer|] v2 @type (this), [|int|] v3, [|float|] v4) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.put:(IF)Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d6798.   call temp:=  [|java:nio:ReadWriteFloatArrayBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:ReadWriteFloatArrayBuffer|] @type virtual;
#L0d679e.   v0:= v2.[|java:nio:ReadWriteFloatArrayBuffer.backingArray|]   @type object;
#L0d67a2.   v1:= v2.[|java:nio:ReadWriteFloatArrayBuffer.offset|] ;
#L0d67a6.   v1:= v1 + v3  @type int;
#L0d67a8.   v0[v1]:= v4;
#L0d67ac.   return v2  @type object;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadWriteFloatArrayBuffer.put|] ([|java:nio:ReadWriteFloatArrayBuffer|] v3 @type (this), [|float|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.put:([FII)Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d67c0.   call temp:=  [|java:nio:ReadWriteFloatArrayBuffer.remaining|](v3) @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteFloatArrayBuffer|] @type virtual;
#L0d67c6.   v0:= temp;
#L0d67c8.   if v6 <= v0 then goto L0d67d8;
#L0d67cc.   v0:= new [|java:nio:BufferOverflowException|];
#L0d67d0.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d67d6.   throw v0;
#L0d67d8.   v0:= v3.[|java:nio:ReadWriteFloatArrayBuffer.backingArray|]   @type object;
#L0d67dc.   v1:= v3.[|java:nio:ReadWriteFloatArrayBuffer.offset|] ;
#L0d67e0.   v2:= v3.[|java:nio:ReadWriteFloatArrayBuffer.position|] ;
#L0d67e4.   v1:= v1 + v2  @type int;
#L0d67e6.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d67ec.   v0:= v3.[|java:nio:ReadWriteFloatArrayBuffer.position|] ;
#L0d67f0.   v0:= v0 + v6  @type int;
#L0d67f2.   v3.[|java:nio:ReadWriteFloatArrayBuffer.position|]  := v0;
#L0d67f6.   return v3  @type object;

   }
    procedure [|java:nio:FloatBuffer|] [|java:nio:ReadWriteFloatArrayBuffer.slice|] ([|java:nio:ReadWriteFloatArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteFloatArrayBuffer|] @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.slice:()Ljava/nio/FloatBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6808.   v0:= new [|java:nio:ReadWriteFloatArrayBuffer|];
#L0d680c.   call temp:=  [|java:nio:ReadWriteFloatArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteFloatArrayBuffer|] @type virtual;
#L0d6812.   v1:= temp;
#L0d6814.   v2:= v5.[|java:nio:ReadWriteFloatArrayBuffer.backingArray|]   @type object;
#L0d6818.   v3:= v5.[|java:nio:ReadWriteFloatArrayBuffer.offset|] ;
#L0d681c.   v4:= v5.[|java:nio:ReadWriteFloatArrayBuffer.position|] ;
#L0d6820.   v3:= v3 + v4  @type int;
#L0d6822.   call temp:=  [|java:nio:ReadWriteFloatArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteFloatArrayBuffer;.<init>:(I[FI)V|] @classDescriptor [|java:nio:ReadWriteFloatArrayBuffer|] @type direct;
#L0d6828.   return v0  @type object;

   }
record [|java:nio:ReadWriteHeapByteBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:HeapByteBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadWriteHeapByteBuffer.<init>|] ([|java:nio:ReadWriteHeapByteBuffer|] v0 @type (this), [|int|] v1) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d683c.   call temp:=  [|java:nio:HeapByteBuffer.<init>|](v0, v1) @signature [|Ljava/nio/HeapByteBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type direct;
#L0d6842.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteHeapByteBuffer.<init>|] ([|java:nio:ReadWriteHeapByteBuffer|] v0 @type (this), [|byte|][] v1) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.<init>:([B)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d6854.   call temp:=  [|java:nio:HeapByteBuffer.<init>|](v0, v1) @signature [|Ljava/nio/HeapByteBuffer;.<init>:([B)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type direct;
#L0d685a.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteHeapByteBuffer.<init>|] ([|java:nio:ReadWriteHeapByteBuffer|] v0 @type (this), [|byte|][] v1, [|int|] v2, [|int|] v3) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.<init>:([BII)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d686c.   call temp:=  [|java:nio:HeapByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/HeapByteBuffer;.<init>:([BII)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type direct;
#L0d6872.   return @void ;

   }
    procedure [|java:nio:ReadWriteHeapByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.copy|] ([|java:nio:HeapByteBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.copy:(Ljava/nio/HeapByteBuffer;I)Ljava/nio/ReadWriteHeapByteBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d6884.   v0:= new [|java:nio:ReadWriteHeapByteBuffer|];
#L0d6888.   v1:= v4.[|java:nio:HeapByteBuffer.backingArray|]   @type object;
#L0d688c.   call temp:=  [|java:nio:HeapByteBuffer.capacity|](v4) @signature [|Ljava/nio/HeapByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d6892.   v2:= temp;
#L0d6894.   v3:= v4.[|java:nio:HeapByteBuffer.offset|] ;
#L0d6898.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.<init>:([BII)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type direct;
#L0d689e.   v1:= v4.[|java:nio:HeapByteBuffer.limit|] ;
#L0d68a2.   v0.[|java:nio:ReadWriteHeapByteBuffer.limit|]  := v1;
#L0d68a6.   call temp:=  [|java:nio:HeapByteBuffer.position|](v4) @signature [|Ljava/nio/HeapByteBuffer;.position:()I|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d68ac.   v1:= temp;
#L0d68ae.   v0.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v1;
#L0d68b2.   v0.[|java:nio:ReadWriteHeapByteBuffer.mark|]  := v5;
#L0d68b6.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.asReadOnlyBuffer|] ([|java:nio:ReadWriteHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d68c8.   v0:= v1.[|java:nio:ReadWriteHeapByteBuffer.mark|] ;
#L0d68cc.   call temp:=  [|java:nio:ReadOnlyHeapByteBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyHeapByteBuffer;.copy:(Ljava/nio/HeapByteBuffer;I)Ljava/nio/ReadOnlyHeapByteBuffer;|] @classDescriptor [|java:nio:ReadOnlyHeapByteBuffer|] @type static;
#L0d68d2.   v0:= temp  @type object;
#L0d68d4.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.compact|] ([|java:nio:ReadWriteHeapByteBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.compact:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d68e8.   v0:= v5.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d68ec.   v1:= v5.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d68f0.   v2:= v5.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d68f4.   v1:= v1 + v2  @type int;
#L0d68f6.   v2:= v5.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d68fa.   v3:= v5.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d68fe.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6904.   v4:= temp;
#L0d6906.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d690c.   v0:= v5.[|java:nio:ReadWriteHeapByteBuffer.limit|] ;
#L0d6910.   v1:= v5.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6914.   v0:= v0 - v1  @type int;
#L0d6916.   v5.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d691a.   v0:= v5.[|java:nio:ReadWriteHeapByteBuffer.capacity|] ;
#L0d691e.   v5.[|java:nio:ReadWriteHeapByteBuffer.limit|]  := v0;
#L0d6922.   v0:= -1  @length 4;
#L0d6924.   v5.[|java:nio:ReadWriteHeapByteBuffer.mark|]  := v0;
#L0d6928.   return v5  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.duplicate|] ([|java:nio:ReadWriteHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d693c.   v0:= v1.[|java:nio:ReadWriteHeapByteBuffer.mark|] ;
#L0d6940.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.copy:(Ljava/nio/HeapByteBuffer;I)Ljava/nio/ReadWriteHeapByteBuffer;|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type static;
#L0d6946.   v0:= temp  @type object;
#L0d6948.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadWriteHeapByteBuffer.isReadOnly|] ([|java:nio:ReadWriteHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d695c.   v0:= 0  @length 4;
#L0d695e.   return v0;

   }
    procedure [|byte|][] [|java:nio:ReadWriteHeapByteBuffer.protectedArray|] ([|java:nio:ReadWriteHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.protectedArray:()[B|] @Access  {
      local temp ;
        v0;
      
#L0d6970.   v0:= v1.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6974.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:ReadWriteHeapByteBuffer.protectedArrayOffset|] ([|java:nio:ReadWriteHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d6988.   v0:= v1.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d698c.   return v0;

   }
    procedure [|boolean|] [|java:nio:ReadWriteHeapByteBuffer.protectedHasArray|] ([|java:nio:ReadWriteHeapByteBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d69a0.   v0:= 1  @length 4;
#L0d69a2.   return v0;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.put|] ([|java:nio:ReadWriteHeapByteBuffer|] v4 @type (this), [|byte|] v5) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:(B)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d69b4.   v0:= v4.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d69b8.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.limit|] ;
#L0d69bc.   if v0 != v1 then goto L0d69cc;
#L0d69c0.   v0:= new [|java:nio:BufferOverflowException|];
#L0d69c4.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d69ca.   throw v0;
#L0d69cc.   v0:= v4.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d69d0.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d69d4.   v2:= v4.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d69d8.   v3:= v2 + 1;
#L0d69dc.   v4.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v3;
#L0d69e0.   v1:= v1 + v2  @type int;
#L0d69e2.   v0[v1]:= v5  @byte;
#L0d69e6.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.put|] ([|java:nio:ReadWriteHeapByteBuffer|] v2 @type (this), [|int|] v3, [|byte|] v4) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d69f8.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d69fe.   v0:= v2.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6a02.   v1:= v2.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6a06.   v1:= v1 + v3  @type int;
#L0d6a08.   v0[v1]:= v4  @byte;
#L0d6a0c.   return v2  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.put|] ([|java:nio:ReadWriteHeapByteBuffer|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d6a20.   v0:= 1  @length 4;
#L0d6a22.   v1:= v4.length;
#L0d6a24.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkPutBounds|](v3, v0, v1, v5, v6) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6a2a.   v0:= v3.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6a2e.   v1:= v3.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6a32.   v2:= v3.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6a36.   v1:= v1 + v2  @type int;
#L0d6a38.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d6a3e.   v0:= v3.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6a42.   v0:= v0 + v6  @type int;
#L0d6a44.   v3.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6a48.   return v3  @type object;

   }
    procedure [|void|] [|java:nio:ReadWriteHeapByteBuffer.put|] ([|java:nio:ReadWriteHeapByteBuffer|] v7 @type (this), [|char|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([CII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d6a5c.   v5:= 2  @length 4;
#L0d6a5e.   v0:= v8.length;
#L0d6a60.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkPutBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6a66.   v2:= temp;
#L0d6a68.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6a6c.   v1:= v7.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6a70.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6a74.   v1:= v1 + v3  @type int;
#L0d6a76.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6a7a.   v6:= v3.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d6a7e.   v3:= v8  @type object;
#L0d6a80.   v4:= v9;
#L0d6a82.   call temp:=  [|libcore:io:Memory.unsafeBulkPut|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkPut:([BIILjava/lang/Object;IIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6a88.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6a8c.   v0:= v0 + v2  @type int;
#L0d6a8e.   v7.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6a92.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteHeapByteBuffer.put|] ([|java:nio:ReadWriteHeapByteBuffer|] v7 @type (this), [|double|][] v8, [|int|] v10, [|int|] v11) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([DII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d6aa4.   v5:= 8  @length 16;
#L0d6aa8.   v0:= v8.length;
#L0d6aaa.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkPutBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6ab0.   v2:= temp;
#L0d6ab2.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6ab6.   v1:= v7.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6aba.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6abe.   v1:= v1 + v3  @type int;
#L0d6ac0.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6ac4.   v6:= v3.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d6ac8.   v3:= v8  @type object;
#L0d6aca.   v4:= v9;
#L0d6acc.   call temp:=  [|libcore:io:Memory.unsafeBulkPut|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkPut:([BIILjava/lang/Object;IIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6ad2.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6ad6.   v0:= v0 + v2  @type int;
#L0d6ad8.   v7.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6adc.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteHeapByteBuffer.put|] ([|java:nio:ReadWriteHeapByteBuffer|] v7 @type (this), [|float|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([FII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d6af0.   v5:= 4  @length 4;
#L0d6af2.   v0:= v8.length;
#L0d6af4.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkPutBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6afa.   v2:= temp;
#L0d6afc.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6b00.   v1:= v7.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6b04.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6b08.   v1:= v1 + v3  @type int;
#L0d6b0a.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6b0e.   v6:= v3.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d6b12.   v3:= v8  @type object;
#L0d6b14.   v4:= v9;
#L0d6b16.   call temp:=  [|libcore:io:Memory.unsafeBulkPut|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkPut:([BIILjava/lang/Object;IIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6b1c.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6b20.   v0:= v0 + v2  @type int;
#L0d6b22.   v7.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6b26.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteHeapByteBuffer.put|] ([|java:nio:ReadWriteHeapByteBuffer|] v7 @type (this), [|int|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([III)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d6b38.   v5:= 4  @length 4;
#L0d6b3a.   v0:= v8.length;
#L0d6b3c.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkPutBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6b42.   v2:= temp;
#L0d6b44.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6b48.   v1:= v7.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6b4c.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6b50.   v1:= v1 + v3  @type int;
#L0d6b52.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6b56.   v6:= v3.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d6b5a.   v3:= v8  @type object;
#L0d6b5c.   v4:= v9;
#L0d6b5e.   call temp:=  [|libcore:io:Memory.unsafeBulkPut|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkPut:([BIILjava/lang/Object;IIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6b64.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6b68.   v0:= v0 + v2  @type int;
#L0d6b6a.   v7.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6b6e.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteHeapByteBuffer.put|] ([|java:nio:ReadWriteHeapByteBuffer|] v7 @type (this), [|long|][] v8, [|int|] v10, [|int|] v11) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([JII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d6b80.   v5:= 8  @length 16;
#L0d6b84.   v0:= v8.length;
#L0d6b86.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkPutBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6b8c.   v2:= temp;
#L0d6b8e.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6b92.   v1:= v7.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6b96.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6b9a.   v1:= v1 + v3  @type int;
#L0d6b9c.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6ba0.   v6:= v3.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d6ba4.   v3:= v8  @type object;
#L0d6ba6.   v4:= v9;
#L0d6ba8.   call temp:=  [|libcore:io:Memory.unsafeBulkPut|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkPut:([BIILjava/lang/Object;IIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6bae.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6bb2.   v0:= v0 + v2  @type int;
#L0d6bb4.   v7.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6bb8.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteHeapByteBuffer.put|] ([|java:nio:ReadWriteHeapByteBuffer|] v7 @type (this), [|short|][] v8, [|int|] v9, [|int|] v10) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([SII)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d6bcc.   v5:= 2  @length 4;
#L0d6bce.   v0:= v8.length;
#L0d6bd0.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkPutBounds|](v7, v5, v0, v9, v10) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkPutBounds:(IIII)I|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6bd6.   v2:= temp;
#L0d6bd8.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6bdc.   v1:= v7.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6be0.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6be4.   v1:= v1 + v3  @type int;
#L0d6be6.   v3:= v7.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6bea.   v6:= v3.[|java:nio:ByteOrder.needsSwap|]   @boolean;
#L0d6bee.   v3:= v8  @type object;
#L0d6bf0.   v4:= v9;
#L0d6bf2.   call temp:=  [|libcore:io:Memory.unsafeBulkPut|](v0, v1, v2, v3, v4, v5, v6) @signature [|Llibcore/io/Memory;.unsafeBulkPut:([BIILjava/lang/Object;IIZ)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6bf8.   v0:= v7.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6bfc.   v0:= v0 + v2  @type int;
#L0d6bfe.   v7.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6c02.   return @void ;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putChar|] ([|java:nio:ReadWriteHeapByteBuffer|] v5 @type (this), [|char|] v6) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putChar:(C)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6c14.   v1:= v5.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6c18.   v0:= v1 + 2;
#L0d6c1c.   v1:= v5.[|java:nio:ReadWriteHeapByteBuffer.limit|] ;
#L0d6c20.   if v0 <= v1 then goto L0d6c30;
#L0d6c24.   v1:= new [|java:nio:BufferOverflowException|];
#L0d6c28.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d6c2e.   throw v1;
#L0d6c30.   v1:= v5.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6c34.   v2:= v5.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6c38.   v3:= v5.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6c3c.   v2:= v2 + v3  @type int;
#L0d6c3e.   v3:= (short)v6  @type i2s;
#L0d6c40.   v4:= v5.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6c44.   call temp:=  [|libcore:io:Memory.pokeShort|](v1, v2, v3, v4) @signature [|Llibcore/io/Memory;.pokeShort:([BISLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6c4a.   v5.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6c4e.   return v5  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putChar|] ([|java:nio:ReadWriteHeapByteBuffer|] v4 @type (this), [|int|] v5, [|char|] v6) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putChar:(IC)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d6c60.   v0:= 2  @length 4;
#L0d6c62.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkIndex|](v4, v5, v0) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6c68.   v0:= v4.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6c6c.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6c70.   v1:= v1 + v5  @type int;
#L0d6c72.   v2:= (short)v6  @type i2s;
#L0d6c74.   v3:= v4.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6c78.   call temp:=  [|libcore:io:Memory.pokeShort|](v0, v1, v2, v3) @signature [|Llibcore/io/Memory;.pokeShort:([BISLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6c7e.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putDouble|] ([|java:nio:ReadWriteHeapByteBuffer|] v2 @type (this), [|double|] v3) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putDouble:(D)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d6c90.   call temp:=  [|java:lang:Double.doubleToRawLongBits|](v3, v4) @signature [|Ljava/lang/Double;.doubleToRawLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L0d6c96.   v0:= temp  @type wide;
#L0d6c98.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.putLong|](v2, v0, v1) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6c9e.   v0:= temp  @type object;
#L0d6ca0.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putDouble|] ([|java:nio:ReadWriteHeapByteBuffer|] v2 @type (this), [|int|] v3, [|double|] v4) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putDouble:(ID)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d6cb4.   call temp:=  [|java:lang:Double.doubleToRawLongBits|](v4, v5) @signature [|Ljava/lang/Double;.doubleToRawLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L0d6cba.   v0:= temp  @type wide;
#L0d6cbc.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.putLong|](v2, v3, v0, v1) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6cc2.   v0:= temp  @type object;
#L0d6cc4.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putFloat|] ([|java:nio:ReadWriteHeapByteBuffer|] v1 @type (this), [|float|] v2) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putFloat:(F)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d6cd8.   call temp:=  [|java:lang:Float.floatToRawIntBits|](v2) @signature [|Ljava/lang/Float;.floatToRawIntBits:(F)I|] @classDescriptor [|java:lang:Float|] @type static;
#L0d6cde.   v0:= temp;
#L0d6ce0.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.putInt|](v1, v0) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6ce6.   v0:= temp  @type object;
#L0d6ce8.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putFloat|] ([|java:nio:ReadWriteHeapByteBuffer|] v1 @type (this), [|int|] v2, [|float|] v3) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putFloat:(IF)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d6cfc.   call temp:=  [|java:lang:Float.floatToRawIntBits|](v3) @signature [|Ljava/lang/Float;.floatToRawIntBits:(F)I|] @classDescriptor [|java:lang:Float|] @type static;
#L0d6d02.   v0:= temp;
#L0d6d04.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.putInt|](v1, v2, v0) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6d0a.   v0:= temp  @type object;
#L0d6d0c.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putInt|] ([|java:nio:ReadWriteHeapByteBuffer|] v4 @type (this), [|int|] v5) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d6d20.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6d24.   v0:= v1 + 4;
#L0d6d28.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.limit|] ;
#L0d6d2c.   if v0 <= v1 then goto L0d6d3c;
#L0d6d30.   v1:= new [|java:nio:BufferOverflowException|];
#L0d6d34.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d6d3a.   throw v1;
#L0d6d3c.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6d40.   v2:= v4.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6d44.   v3:= v4.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6d48.   v2:= v2 + v3  @type int;
#L0d6d4a.   v3:= v4.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6d4e.   call temp:=  [|libcore:io:Memory.pokeInt|](v1, v2, v5, v3) @signature [|Llibcore/io/Memory;.pokeInt:([BIILjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6d54.   v4.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6d58.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putInt|] ([|java:nio:ReadWriteHeapByteBuffer|] v3 @type (this), [|int|] v4, [|int|] v5) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putInt:(II)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d6d6c.   v0:= 4  @length 4;
#L0d6d6e.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6d74.   v0:= v3.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6d78.   v1:= v3.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6d7c.   v1:= v1 + v4  @type int;
#L0d6d7e.   v2:= v3.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6d82.   call temp:=  [|libcore:io:Memory.pokeInt|](v0, v1, v5, v2) @signature [|Llibcore/io/Memory;.pokeInt:([BIILjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6d88.   return v3  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putLong|] ([|java:nio:ReadWriteHeapByteBuffer|] v3 @type (this), [|int|] v4, [|long|] v5) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putLong:(IJ)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d6d9c.   v0:= 8  @length 16;
#L0d6da0.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6da6.   v0:= v3.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6daa.   v1:= v3.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6dae.   v1:= v1 + v4  @type int;
#L0d6db0.   v2:= v3.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6db4.   call temp:=  [|libcore:io:Memory.pokeLong|](v0, v1, v5, v6, v2) @signature [|Llibcore/io/Memory;.pokeLong:([BIJLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6dba.   return v3  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putLong|] ([|java:nio:ReadWriteHeapByteBuffer|] v4 @type (this), [|long|] v5) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d6dcc.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6dd0.   v0:= v1 + 8;
#L0d6dd4.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.limit|] ;
#L0d6dd8.   if v0 <= v1 then goto L0d6de8;
#L0d6ddc.   v1:= new [|java:nio:BufferOverflowException|];
#L0d6de0.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d6de6.   throw v1;
#L0d6de8.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6dec.   v2:= v4.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6df0.   v3:= v4.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6df4.   v2:= v2 + v3  @type int;
#L0d6df6.   v3:= v4.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6dfa.   call temp:=  [|libcore:io:Memory.pokeLong|](v1, v2, v5, v6, v3) @signature [|Llibcore/io/Memory;.pokeLong:([BIJLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6e00.   v4.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6e04.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putShort|] ([|java:nio:ReadWriteHeapByteBuffer|] v3 @type (this), [|int|] v4, [|short|] v5) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putShort:(IS)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d6e18.   v0:= 2  @length 4;
#L0d6e1a.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.checkIndex|](v3, v4, v0) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.checkIndex:(II)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6e20.   v0:= v3.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6e24.   v1:= v3.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6e28.   v1:= v1 + v4  @type int;
#L0d6e2a.   v2:= v3.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6e2e.   call temp:=  [|libcore:io:Memory.pokeShort|](v0, v1, v5, v2) @signature [|Llibcore/io/Memory;.pokeShort:([BISLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6e34.   return v3  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.putShort|] ([|java:nio:ReadWriteHeapByteBuffer|] v4 @type (this), [|short|] v5) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d6e48.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6e4c.   v0:= v1 + 2;
#L0d6e50.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.limit|] ;
#L0d6e54.   if v0 <= v1 then goto L0d6e64;
#L0d6e58.   v1:= new [|java:nio:BufferOverflowException|];
#L0d6e5c.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v1) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d6e62.   throw v1;
#L0d6e64.   v1:= v4.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6e68.   v2:= v4.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6e6c.   v3:= v4.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6e70.   v2:= v2 + v3  @type int;
#L0d6e72.   v3:= v4.[|java:nio:ReadWriteHeapByteBuffer.order|]   @type object;
#L0d6e76.   call temp:=  [|libcore:io:Memory.pokeShort|](v1, v2, v5, v3) @signature [|Llibcore/io/Memory;.pokeShort:([BISLjava/nio/ByteOrder;)V|] @classDescriptor [|libcore:io:Memory|] @type static;
#L0d6e7c.   v4.[|java:nio:ReadWriteHeapByteBuffer.position|]  := v0;
#L0d6e80.   return v4  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:ReadWriteHeapByteBuffer.slice|] ([|java:nio:ReadWriteHeapByteBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteHeapByteBuffer|] @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6e94.   v0:= new [|java:nio:ReadWriteHeapByteBuffer|];
#L0d6e98.   v1:= v5.[|java:nio:ReadWriteHeapByteBuffer.backingArray|]   @type object;
#L0d6e9c.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d6ea2.   v2:= temp;
#L0d6ea4.   v3:= v5.[|java:nio:ReadWriteHeapByteBuffer.offset|] ;
#L0d6ea8.   v4:= v5.[|java:nio:ReadWriteHeapByteBuffer.position|] ;
#L0d6eac.   v3:= v3 + v4  @type int;
#L0d6eae.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.<init>:([BII)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type direct;
#L0d6eb4.   return v0  @type object;

   }
record [|java:nio:ReadWriteIntArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:IntArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadWriteIntArrayBuffer.<init>|] ([|java:nio:ReadWriteIntArrayBuffer|] v0 @type (this), [|int|] v1) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d6ec8.   call temp:=  [|java:nio:IntArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/IntArrayBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:IntArrayBuffer|] @type direct;
#L0d6ece.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteIntArrayBuffer.<init>|] ([|java:nio:ReadWriteIntArrayBuffer|] v0 @type (this), [|int|] v1, [|int|][] v2, [|int|] v3) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.<init>:(I[II)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d6ee0.   call temp:=  [|java:nio:IntArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/IntArrayBuffer;.<init>:(I[II)V|] @classDescriptor [|java:nio:IntArrayBuffer|] @type direct;
#L0d6ee6.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteIntArrayBuffer.<init>|] ([|java:nio:ReadWriteIntArrayBuffer|] v0 @type (this), [|int|][] v1) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.<init>:([I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d6ef8.   call temp:=  [|java:nio:IntArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/IntArrayBuffer;.<init>:([I)V|] @classDescriptor [|java:nio:IntArrayBuffer|] @type direct;
#L0d6efe.   return @void ;

   }
    procedure [|java:nio:ReadWriteIntArrayBuffer|] [|java:nio:ReadWriteIntArrayBuffer.copy|] ([|java:nio:IntArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.copy:(Ljava/nio/IntArrayBuffer;I)Ljava/nio/ReadWriteIntArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d6f10.   v0:= new [|java:nio:ReadWriteIntArrayBuffer|];
#L0d6f14.   call temp:=  [|java:nio:IntArrayBuffer.capacity|](v4) @signature [|Ljava/nio/IntArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:IntArrayBuffer|] @type virtual;
#L0d6f1a.   v1:= temp;
#L0d6f1c.   v2:= v4.[|java:nio:IntArrayBuffer.backingArray|]   @type object;
#L0d6f20.   v3:= v4.[|java:nio:IntArrayBuffer.offset|] ;
#L0d6f24.   call temp:=  [|java:nio:ReadWriteIntArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.<init>:(I[II)V|] @classDescriptor [|java:nio:ReadWriteIntArrayBuffer|] @type direct;
#L0d6f2a.   v1:= v4.[|java:nio:IntArrayBuffer.limit|] ;
#L0d6f2e.   v0.[|java:nio:ReadWriteIntArrayBuffer.limit|]  := v1;
#L0d6f32.   call temp:=  [|java:nio:IntArrayBuffer.position|](v4) @signature [|Ljava/nio/IntArrayBuffer;.position:()I|] @classDescriptor [|java:nio:IntArrayBuffer|] @type virtual;
#L0d6f38.   v1:= temp;
#L0d6f3a.   v0.[|java:nio:ReadWriteIntArrayBuffer.position|]  := v1;
#L0d6f3e.   v0.[|java:nio:ReadWriteIntArrayBuffer.mark|]  := v5;
#L0d6f42.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadWriteIntArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadWriteIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d6f54.   v0:= v1.[|java:nio:ReadWriteIntArrayBuffer.mark|] ;
#L0d6f58.   call temp:=  [|java:nio:ReadOnlyIntArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyIntArrayBuffer;.copy:(Ljava/nio/IntArrayBuffer;I)Ljava/nio/ReadOnlyIntArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyIntArrayBuffer|] @type static;
#L0d6f5e.   v0:= temp  @type object;
#L0d6f60.   return v0  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadWriteIntArrayBuffer.compact|] ([|java:nio:ReadWriteIntArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.compact:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d6f74.   v0:= v5.[|java:nio:ReadWriteIntArrayBuffer.backingArray|]   @type object;
#L0d6f78.   v1:= v5.[|java:nio:ReadWriteIntArrayBuffer.position|] ;
#L0d6f7c.   v2:= v5.[|java:nio:ReadWriteIntArrayBuffer.offset|] ;
#L0d6f80.   v1:= v1 + v2  @type int;
#L0d6f82.   v2:= v5.[|java:nio:ReadWriteIntArrayBuffer.backingArray|]   @type object;
#L0d6f86.   v3:= v5.[|java:nio:ReadWriteIntArrayBuffer.offset|] ;
#L0d6f8a.   call temp:=  [|java:nio:ReadWriteIntArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteIntArrayBuffer|] @type virtual;
#L0d6f90.   v4:= temp;
#L0d6f92.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d6f98.   v0:= v5.[|java:nio:ReadWriteIntArrayBuffer.limit|] ;
#L0d6f9c.   v1:= v5.[|java:nio:ReadWriteIntArrayBuffer.position|] ;
#L0d6fa0.   v0:= v0 - v1  @type int;
#L0d6fa2.   v5.[|java:nio:ReadWriteIntArrayBuffer.position|]  := v0;
#L0d6fa6.   v0:= v5.[|java:nio:ReadWriteIntArrayBuffer.capacity|] ;
#L0d6faa.   v5.[|java:nio:ReadWriteIntArrayBuffer.limit|]  := v0;
#L0d6fae.   v0:= -1  @length 4;
#L0d6fb0.   v5.[|java:nio:ReadWriteIntArrayBuffer.mark|]  := v0;
#L0d6fb4.   return v5  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadWriteIntArrayBuffer.duplicate|] ([|java:nio:ReadWriteIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.duplicate:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d6fc8.   v0:= v1.[|java:nio:ReadWriteIntArrayBuffer.mark|] ;
#L0d6fcc.   call temp:=  [|java:nio:ReadWriteIntArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.copy:(Ljava/nio/IntArrayBuffer;I)Ljava/nio/ReadWriteIntArrayBuffer;|] @classDescriptor [|java:nio:ReadWriteIntArrayBuffer|] @type static;
#L0d6fd2.   v0:= temp  @type object;
#L0d6fd4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadWriteIntArrayBuffer.isReadOnly|] ([|java:nio:ReadWriteIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d6fe8.   v0:= 0  @length 4;
#L0d6fea.   return v0;

   }
    procedure [|int|][] [|java:nio:ReadWriteIntArrayBuffer.protectedArray|] ([|java:nio:ReadWriteIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.protectedArray:()[I|] @Access  {
      local temp ;
        v0;
      
#L0d6ffc.   v0:= v1.[|java:nio:ReadWriteIntArrayBuffer.backingArray|]   @type object;
#L0d7000.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:ReadWriteIntArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadWriteIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d7014.   v0:= v1.[|java:nio:ReadWriteIntArrayBuffer.offset|] ;
#L0d7018.   return v0;

   }
    procedure [|boolean|] [|java:nio:ReadWriteIntArrayBuffer.protectedHasArray|] ([|java:nio:ReadWriteIntArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d702c.   v0:= 1  @length 4;
#L0d702e.   return v0;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadWriteIntArrayBuffer.put|] ([|java:nio:ReadWriteIntArrayBuffer|] v4 @type (this), [|int|] v5) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.put:(I)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d7040.   v0:= v4.[|java:nio:ReadWriteIntArrayBuffer.position|] ;
#L0d7044.   v1:= v4.[|java:nio:ReadWriteIntArrayBuffer.limit|] ;
#L0d7048.   if v0 != v1 then goto L0d7058;
#L0d704c.   v0:= new [|java:nio:BufferOverflowException|];
#L0d7050.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d7056.   throw v0;
#L0d7058.   v0:= v4.[|java:nio:ReadWriteIntArrayBuffer.backingArray|]   @type object;
#L0d705c.   v1:= v4.[|java:nio:ReadWriteIntArrayBuffer.offset|] ;
#L0d7060.   v2:= v4.[|java:nio:ReadWriteIntArrayBuffer.position|] ;
#L0d7064.   v3:= v2 + 1;
#L0d7068.   v4.[|java:nio:ReadWriteIntArrayBuffer.position|]  := v3;
#L0d706c.   v1:= v1 + v2  @type int;
#L0d706e.   v0[v1]:= v5;
#L0d7072.   return v4  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadWriteIntArrayBuffer.put|] ([|java:nio:ReadWriteIntArrayBuffer|] v2 @type (this), [|int|] v3, [|int|] v4) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.put:(II)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d7084.   call temp:=  [|java:nio:ReadWriteIntArrayBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:ReadWriteIntArrayBuffer|] @type virtual;
#L0d708a.   v0:= v2.[|java:nio:ReadWriteIntArrayBuffer.backingArray|]   @type object;
#L0d708e.   v1:= v2.[|java:nio:ReadWriteIntArrayBuffer.offset|] ;
#L0d7092.   v1:= v1 + v3  @type int;
#L0d7094.   v0[v1]:= v4;
#L0d7098.   return v2  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadWriteIntArrayBuffer.put|] ([|java:nio:ReadWriteIntArrayBuffer|] v3 @type (this), [|int|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.put:([III)Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d70ac.   call temp:=  [|java:nio:ReadWriteIntArrayBuffer.remaining|](v3) @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteIntArrayBuffer|] @type virtual;
#L0d70b2.   v0:= temp;
#L0d70b4.   if v6 <= v0 then goto L0d70c4;
#L0d70b8.   v0:= new [|java:nio:BufferOverflowException|];
#L0d70bc.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d70c2.   throw v0;
#L0d70c4.   v0:= v3.[|java:nio:ReadWriteIntArrayBuffer.backingArray|]   @type object;
#L0d70c8.   v1:= v3.[|java:nio:ReadWriteIntArrayBuffer.offset|] ;
#L0d70cc.   v2:= v3.[|java:nio:ReadWriteIntArrayBuffer.position|] ;
#L0d70d0.   v1:= v1 + v2  @type int;
#L0d70d2.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d70d8.   v0:= v3.[|java:nio:ReadWriteIntArrayBuffer.position|] ;
#L0d70dc.   v0:= v0 + v6  @type int;
#L0d70de.   v3.[|java:nio:ReadWriteIntArrayBuffer.position|]  := v0;
#L0d70e2.   return v3  @type object;

   }
    procedure [|java:nio:IntBuffer|] [|java:nio:ReadWriteIntArrayBuffer.slice|] ([|java:nio:ReadWriteIntArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteIntArrayBuffer|] @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.slice:()Ljava/nio/IntBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d70f4.   v0:= new [|java:nio:ReadWriteIntArrayBuffer|];
#L0d70f8.   call temp:=  [|java:nio:ReadWriteIntArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteIntArrayBuffer|] @type virtual;
#L0d70fe.   v1:= temp;
#L0d7100.   v2:= v5.[|java:nio:ReadWriteIntArrayBuffer.backingArray|]   @type object;
#L0d7104.   v3:= v5.[|java:nio:ReadWriteIntArrayBuffer.offset|] ;
#L0d7108.   v4:= v5.[|java:nio:ReadWriteIntArrayBuffer.position|] ;
#L0d710c.   v3:= v3 + v4  @type int;
#L0d710e.   call temp:=  [|java:nio:ReadWriteIntArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteIntArrayBuffer;.<init>:(I[II)V|] @classDescriptor [|java:nio:ReadWriteIntArrayBuffer|] @type direct;
#L0d7114.   return v0  @type object;

   }
record [|java:nio:ReadWriteLongArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:LongArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadWriteLongArrayBuffer.<init>|] ([|java:nio:ReadWriteLongArrayBuffer|] v0 @type (this), [|int|] v1) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d7128.   call temp:=  [|java:nio:LongArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/LongArrayBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:LongArrayBuffer|] @type direct;
#L0d712e.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteLongArrayBuffer.<init>|] ([|java:nio:ReadWriteLongArrayBuffer|] v0 @type (this), [|int|] v1, [|long|][] v2, [|int|] v4) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.<init>:(I[JI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d7140.   call temp:=  [|java:nio:LongArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/LongArrayBuffer;.<init>:(I[JI)V|] @classDescriptor [|java:nio:LongArrayBuffer|] @type direct;
#L0d7146.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteLongArrayBuffer.<init>|] ([|java:nio:ReadWriteLongArrayBuffer|] v0 @type (this), [|long|][] v1) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.<init>:([J)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d7158.   call temp:=  [|java:nio:LongArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/LongArrayBuffer;.<init>:([J)V|] @classDescriptor [|java:nio:LongArrayBuffer|] @type direct;
#L0d715e.   return @void ;

   }
    procedure [|java:nio:ReadWriteLongArrayBuffer|] [|java:nio:ReadWriteLongArrayBuffer.copy|] ([|java:nio:LongArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.copy:(Ljava/nio/LongArrayBuffer;I)Ljava/nio/ReadWriteLongArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d7170.   v0:= new [|java:nio:ReadWriteLongArrayBuffer|];
#L0d7174.   call temp:=  [|java:nio:LongArrayBuffer.capacity|](v4) @signature [|Ljava/nio/LongArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:LongArrayBuffer|] @type virtual;
#L0d717a.   v1:= temp;
#L0d717c.   v2:= v4.[|java:nio:LongArrayBuffer.backingArray|]   @type object;
#L0d7180.   v3:= v4.[|java:nio:LongArrayBuffer.offset|] ;
#L0d7184.   call temp:=  [|java:nio:ReadWriteLongArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.<init>:(I[JI)V|] @classDescriptor [|java:nio:ReadWriteLongArrayBuffer|] @type direct;
#L0d718a.   v1:= v4.[|java:nio:LongArrayBuffer.limit|] ;
#L0d718e.   v0.[|java:nio:ReadWriteLongArrayBuffer.limit|]  := v1;
#L0d7192.   call temp:=  [|java:nio:LongArrayBuffer.position|](v4) @signature [|Ljava/nio/LongArrayBuffer;.position:()I|] @classDescriptor [|java:nio:LongArrayBuffer|] @type virtual;
#L0d7198.   v1:= temp;
#L0d719a.   v0.[|java:nio:ReadWriteLongArrayBuffer.position|]  := v1;
#L0d719e.   v0.[|java:nio:ReadWriteLongArrayBuffer.mark|]  := v5;
#L0d71a2.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadWriteLongArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadWriteLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d71b4.   v0:= v1.[|java:nio:ReadWriteLongArrayBuffer.mark|] ;
#L0d71b8.   call temp:=  [|java:nio:ReadOnlyLongArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyLongArrayBuffer;.copy:(Ljava/nio/LongArrayBuffer;I)Ljava/nio/ReadOnlyLongArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyLongArrayBuffer|] @type static;
#L0d71be.   v0:= temp  @type object;
#L0d71c0.   return v0  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadWriteLongArrayBuffer.compact|] ([|java:nio:ReadWriteLongArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.compact:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d71d4.   v0:= v5.[|java:nio:ReadWriteLongArrayBuffer.backingArray|]   @type object;
#L0d71d8.   v1:= v5.[|java:nio:ReadWriteLongArrayBuffer.position|] ;
#L0d71dc.   v2:= v5.[|java:nio:ReadWriteLongArrayBuffer.offset|] ;
#L0d71e0.   v1:= v1 + v2  @type int;
#L0d71e2.   v2:= v5.[|java:nio:ReadWriteLongArrayBuffer.backingArray|]   @type object;
#L0d71e6.   v3:= v5.[|java:nio:ReadWriteLongArrayBuffer.offset|] ;
#L0d71ea.   call temp:=  [|java:nio:ReadWriteLongArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteLongArrayBuffer|] @type virtual;
#L0d71f0.   v4:= temp;
#L0d71f2.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d71f8.   v0:= v5.[|java:nio:ReadWriteLongArrayBuffer.limit|] ;
#L0d71fc.   v1:= v5.[|java:nio:ReadWriteLongArrayBuffer.position|] ;
#L0d7200.   v0:= v0 - v1  @type int;
#L0d7202.   v5.[|java:nio:ReadWriteLongArrayBuffer.position|]  := v0;
#L0d7206.   v0:= v5.[|java:nio:ReadWriteLongArrayBuffer.capacity|] ;
#L0d720a.   v5.[|java:nio:ReadWriteLongArrayBuffer.limit|]  := v0;
#L0d720e.   v0:= -1  @length 4;
#L0d7210.   v5.[|java:nio:ReadWriteLongArrayBuffer.mark|]  := v0;
#L0d7214.   return v5  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadWriteLongArrayBuffer.duplicate|] ([|java:nio:ReadWriteLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.duplicate:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7228.   v0:= v1.[|java:nio:ReadWriteLongArrayBuffer.mark|] ;
#L0d722c.   call temp:=  [|java:nio:ReadWriteLongArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.copy:(Ljava/nio/LongArrayBuffer;I)Ljava/nio/ReadWriteLongArrayBuffer;|] @classDescriptor [|java:nio:ReadWriteLongArrayBuffer|] @type static;
#L0d7232.   v0:= temp  @type object;
#L0d7234.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadWriteLongArrayBuffer.isReadOnly|] ([|java:nio:ReadWriteLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7248.   v0:= 0  @length 4;
#L0d724a.   return v0;

   }
    procedure [|long|][] [|java:nio:ReadWriteLongArrayBuffer.protectedArray|] ([|java:nio:ReadWriteLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.protectedArray:()[J|] @Access  {
      local temp ;
        v0;
      
#L0d725c.   v0:= v1.[|java:nio:ReadWriteLongArrayBuffer.backingArray|]   @type object;
#L0d7260.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:ReadWriteLongArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadWriteLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d7274.   v0:= v1.[|java:nio:ReadWriteLongArrayBuffer.offset|] ;
#L0d7278.   return v0;

   }
    procedure [|boolean|] [|java:nio:ReadWriteLongArrayBuffer.protectedHasArray|] ([|java:nio:ReadWriteLongArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d728c.   v0:= 1  @length 4;
#L0d728e.   return v0;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadWriteLongArrayBuffer.put|] ([|java:nio:ReadWriteLongArrayBuffer|] v2 @type (this), [|int|] v3, [|long|] v4) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.put:(IJ)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d72a0.   call temp:=  [|java:nio:ReadWriteLongArrayBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:ReadWriteLongArrayBuffer|] @type virtual;
#L0d72a6.   v0:= v2.[|java:nio:ReadWriteLongArrayBuffer.backingArray|]   @type object;
#L0d72aa.   v1:= v2.[|java:nio:ReadWriteLongArrayBuffer.offset|] ;
#L0d72ae.   v1:= v1 + v3  @type int;
#L0d72b0.   v0[v1]:= v4  @wide;
#L0d72b4.   return v2  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadWriteLongArrayBuffer.put|] ([|java:nio:ReadWriteLongArrayBuffer|] v4 @type (this), [|long|] v5) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.put:(J)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d72c8.   v0:= v4.[|java:nio:ReadWriteLongArrayBuffer.position|] ;
#L0d72cc.   v1:= v4.[|java:nio:ReadWriteLongArrayBuffer.limit|] ;
#L0d72d0.   if v0 != v1 then goto L0d72e0;
#L0d72d4.   v0:= new [|java:nio:BufferOverflowException|];
#L0d72d8.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d72de.   throw v0;
#L0d72e0.   v0:= v4.[|java:nio:ReadWriteLongArrayBuffer.backingArray|]   @type object;
#L0d72e4.   v1:= v4.[|java:nio:ReadWriteLongArrayBuffer.offset|] ;
#L0d72e8.   v2:= v4.[|java:nio:ReadWriteLongArrayBuffer.position|] ;
#L0d72ec.   v3:= v2 + 1;
#L0d72f0.   v4.[|java:nio:ReadWriteLongArrayBuffer.position|]  := v3;
#L0d72f4.   v1:= v1 + v2  @type int;
#L0d72f6.   v0[v1]:= v5  @wide;
#L0d72fa.   return v4  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadWriteLongArrayBuffer.put|] ([|java:nio:ReadWriteLongArrayBuffer|] v3 @type (this), [|long|][] v4, [|int|] v6, [|int|] v7) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.put:([JII)Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d730c.   call temp:=  [|java:nio:ReadWriteLongArrayBuffer.remaining|](v3) @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteLongArrayBuffer|] @type virtual;
#L0d7312.   v0:= temp;
#L0d7314.   if v6 <= v0 then goto L0d7324;
#L0d7318.   v0:= new [|java:nio:BufferOverflowException|];
#L0d731c.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d7322.   throw v0;
#L0d7324.   v0:= v3.[|java:nio:ReadWriteLongArrayBuffer.backingArray|]   @type object;
#L0d7328.   v1:= v3.[|java:nio:ReadWriteLongArrayBuffer.offset|] ;
#L0d732c.   v2:= v3.[|java:nio:ReadWriteLongArrayBuffer.position|] ;
#L0d7330.   v1:= v1 + v2  @type int;
#L0d7332.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d7338.   v0:= v3.[|java:nio:ReadWriteLongArrayBuffer.position|] ;
#L0d733c.   v0:= v0 + v6  @type int;
#L0d733e.   v3.[|java:nio:ReadWriteLongArrayBuffer.position|]  := v0;
#L0d7342.   return v3  @type object;

   }
    procedure [|java:nio:LongBuffer|] [|java:nio:ReadWriteLongArrayBuffer.slice|] ([|java:nio:ReadWriteLongArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteLongArrayBuffer|] @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.slice:()Ljava/nio/LongBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d7354.   v0:= new [|java:nio:ReadWriteLongArrayBuffer|];
#L0d7358.   call temp:=  [|java:nio:ReadWriteLongArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteLongArrayBuffer|] @type virtual;
#L0d735e.   v1:= temp;
#L0d7360.   v2:= v5.[|java:nio:ReadWriteLongArrayBuffer.backingArray|]   @type object;
#L0d7364.   v3:= v5.[|java:nio:ReadWriteLongArrayBuffer.offset|] ;
#L0d7368.   v4:= v5.[|java:nio:ReadWriteLongArrayBuffer.position|] ;
#L0d736c.   v3:= v3 + v4  @type int;
#L0d736e.   call temp:=  [|java:nio:ReadWriteLongArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteLongArrayBuffer;.<init>:(I[JI)V|] @classDescriptor [|java:nio:ReadWriteLongArrayBuffer|] @type direct;
#L0d7374.   return v0  @type object;

   }
record [|java:nio:ReadWriteShortArrayBuffer|]  @type class @AccessFlag FINAL  extends [|java:nio:ShortArrayBuffer|] {
   }
    procedure [|void|] [|java:nio:ReadWriteShortArrayBuffer.<init>|] ([|java:nio:ReadWriteShortArrayBuffer|] v0 @type (this), [|int|] v1) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d7388.   call temp:=  [|java:nio:ShortArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/ShortArrayBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type direct;
#L0d738e.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteShortArrayBuffer.<init>|] ([|java:nio:ReadWriteShortArrayBuffer|] v0 @type (this), [|int|] v1, [|short|][] v2, [|int|] v3) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.<init>:(I[SI)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d73a0.   call temp:=  [|java:nio:ShortArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ShortArrayBuffer;.<init>:(I[SI)V|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type direct;
#L0d73a6.   return @void ;

   }
    procedure [|void|] [|java:nio:ReadWriteShortArrayBuffer.<init>|] ([|java:nio:ReadWriteShortArrayBuffer|] v0 @type (this), [|short|][] v1) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.<init>:([S)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d73b8.   call temp:=  [|java:nio:ShortArrayBuffer.<init>|](v0, v1) @signature [|Ljava/nio/ShortArrayBuffer;.<init>:([S)V|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type direct;
#L0d73be.   return @void ;

   }
    procedure [|java:nio:ReadWriteShortArrayBuffer|] [|java:nio:ReadWriteShortArrayBuffer.copy|] ([|java:nio:ShortArrayBuffer|] v4 @type (object), [|int|] v5) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.copy:(Ljava/nio/ShortArrayBuffer;I)Ljava/nio/ReadWriteShortArrayBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d73d0.   v0:= new [|java:nio:ReadWriteShortArrayBuffer|];
#L0d73d4.   call temp:=  [|java:nio:ShortArrayBuffer.capacity|](v4) @signature [|Ljava/nio/ShortArrayBuffer;.capacity:()I|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type virtual;
#L0d73da.   v1:= temp;
#L0d73dc.   v2:= v4.[|java:nio:ShortArrayBuffer.backingArray|]   @type object;
#L0d73e0.   v3:= v4.[|java:nio:ShortArrayBuffer.offset|] ;
#L0d73e4.   call temp:=  [|java:nio:ReadWriteShortArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.<init>:(I[SI)V|] @classDescriptor [|java:nio:ReadWriteShortArrayBuffer|] @type direct;
#L0d73ea.   v1:= v4.[|java:nio:ShortArrayBuffer.limit|] ;
#L0d73ee.   v0.[|java:nio:ReadWriteShortArrayBuffer.limit|]  := v1;
#L0d73f2.   call temp:=  [|java:nio:ShortArrayBuffer.position|](v4) @signature [|Ljava/nio/ShortArrayBuffer;.position:()I|] @classDescriptor [|java:nio:ShortArrayBuffer|] @type virtual;
#L0d73f8.   v1:= temp;
#L0d73fa.   v0.[|java:nio:ReadWriteShortArrayBuffer.position|]  := v1;
#L0d73fe.   v0.[|java:nio:ReadWriteShortArrayBuffer.mark|]  := v5;
#L0d7402.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadWriteShortArrayBuffer.asReadOnlyBuffer|] ([|java:nio:ReadWriteShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.asReadOnlyBuffer:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7414.   v0:= v1.[|java:nio:ReadWriteShortArrayBuffer.mark|] ;
#L0d7418.   call temp:=  [|java:nio:ReadOnlyShortArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadOnlyShortArrayBuffer;.copy:(Ljava/nio/ShortArrayBuffer;I)Ljava/nio/ReadOnlyShortArrayBuffer;|] @classDescriptor [|java:nio:ReadOnlyShortArrayBuffer|] @type static;
#L0d741e.   v0:= temp  @type object;
#L0d7420.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadWriteShortArrayBuffer.compact|] ([|java:nio:ReadWriteShortArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.compact:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d7434.   v0:= v5.[|java:nio:ReadWriteShortArrayBuffer.backingArray|]   @type object;
#L0d7438.   v1:= v5.[|java:nio:ReadWriteShortArrayBuffer.position|] ;
#L0d743c.   v2:= v5.[|java:nio:ReadWriteShortArrayBuffer.offset|] ;
#L0d7440.   v1:= v1 + v2  @type int;
#L0d7442.   v2:= v5.[|java:nio:ReadWriteShortArrayBuffer.backingArray|]   @type object;
#L0d7446.   v3:= v5.[|java:nio:ReadWriteShortArrayBuffer.offset|] ;
#L0d744a.   call temp:=  [|java:nio:ReadWriteShortArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteShortArrayBuffer|] @type virtual;
#L0d7450.   v4:= temp;
#L0d7452.   call temp:=  [|java:lang:System.arraycopy|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d7458.   v0:= v5.[|java:nio:ReadWriteShortArrayBuffer.limit|] ;
#L0d745c.   v1:= v5.[|java:nio:ReadWriteShortArrayBuffer.position|] ;
#L0d7460.   v0:= v0 - v1  @type int;
#L0d7462.   v5.[|java:nio:ReadWriteShortArrayBuffer.position|]  := v0;
#L0d7466.   v0:= v5.[|java:nio:ReadWriteShortArrayBuffer.capacity|] ;
#L0d746a.   v5.[|java:nio:ReadWriteShortArrayBuffer.limit|]  := v0;
#L0d746e.   v0:= -1  @length 4;
#L0d7470.   v5.[|java:nio:ReadWriteShortArrayBuffer.mark|]  := v0;
#L0d7474.   return v5  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadWriteShortArrayBuffer.duplicate|] ([|java:nio:ReadWriteShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.duplicate:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7488.   v0:= v1.[|java:nio:ReadWriteShortArrayBuffer.mark|] ;
#L0d748c.   call temp:=  [|java:nio:ReadWriteShortArrayBuffer.copy|](v1, v0) @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.copy:(Ljava/nio/ShortArrayBuffer;I)Ljava/nio/ReadWriteShortArrayBuffer;|] @classDescriptor [|java:nio:ReadWriteShortArrayBuffer|] @type static;
#L0d7492.   v0:= temp  @type object;
#L0d7494.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:ReadWriteShortArrayBuffer.isReadOnly|] ([|java:nio:ReadWriteShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d74a8.   v0:= 0  @length 4;
#L0d74aa.   return v0;

   }
    procedure [|short|][] [|java:nio:ReadWriteShortArrayBuffer.protectedArray|] ([|java:nio:ReadWriteShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.protectedArray:()[S|] @Access  {
      local temp ;
        v0;
      
#L0d74bc.   v0:= v1.[|java:nio:ReadWriteShortArrayBuffer.backingArray|]   @type object;
#L0d74c0.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:ReadWriteShortArrayBuffer.protectedArrayOffset|] ([|java:nio:ReadWriteShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d74d4.   v0:= v1.[|java:nio:ReadWriteShortArrayBuffer.offset|] ;
#L0d74d8.   return v0;

   }
    procedure [|boolean|] [|java:nio:ReadWriteShortArrayBuffer.protectedHasArray|] ([|java:nio:ReadWriteShortArrayBuffer|] v1 @type (this)) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d74ec.   v0:= 1  @length 4;
#L0d74ee.   return v0;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadWriteShortArrayBuffer.put|] ([|java:nio:ReadWriteShortArrayBuffer|] v2 @type (this), [|int|] v3, [|short|] v4) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.put:(IS)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d7500.   call temp:=  [|java:nio:ReadWriteShortArrayBuffer.checkIndex|](v2, v3) @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.checkIndex:(I)V|] @classDescriptor [|java:nio:ReadWriteShortArrayBuffer|] @type virtual;
#L0d7506.   v0:= v2.[|java:nio:ReadWriteShortArrayBuffer.backingArray|]   @type object;
#L0d750a.   v1:= v2.[|java:nio:ReadWriteShortArrayBuffer.offset|] ;
#L0d750e.   v1:= v1 + v3  @type int;
#L0d7510.   v0[v1]:= v4  @short;
#L0d7514.   return v2  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadWriteShortArrayBuffer.put|] ([|java:nio:ReadWriteShortArrayBuffer|] v4 @type (this), [|short|] v5) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.put:(S)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d7528.   v0:= v4.[|java:nio:ReadWriteShortArrayBuffer.position|] ;
#L0d752c.   v1:= v4.[|java:nio:ReadWriteShortArrayBuffer.limit|] ;
#L0d7530.   if v0 != v1 then goto L0d7540;
#L0d7534.   v0:= new [|java:nio:BufferOverflowException|];
#L0d7538.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d753e.   throw v0;
#L0d7540.   v0:= v4.[|java:nio:ReadWriteShortArrayBuffer.backingArray|]   @type object;
#L0d7544.   v1:= v4.[|java:nio:ReadWriteShortArrayBuffer.offset|] ;
#L0d7548.   v2:= v4.[|java:nio:ReadWriteShortArrayBuffer.position|] ;
#L0d754c.   v3:= v2 + 1;
#L0d7550.   v4.[|java:nio:ReadWriteShortArrayBuffer.position|]  := v3;
#L0d7554.   v1:= v1 + v2  @type int;
#L0d7556.   v0[v1]:= v5  @short;
#L0d755a.   return v4  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadWriteShortArrayBuffer.put|] ([|java:nio:ReadWriteShortArrayBuffer|] v3 @type (this), [|short|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.put:([SII)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d756c.   call temp:=  [|java:nio:ReadWriteShortArrayBuffer.remaining|](v3) @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteShortArrayBuffer|] @type virtual;
#L0d7572.   v0:= temp;
#L0d7574.   if v6 <= v0 then goto L0d7584;
#L0d7578.   v0:= new [|java:nio:BufferOverflowException|];
#L0d757c.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d7582.   throw v0;
#L0d7584.   v0:= v3.[|java:nio:ReadWriteShortArrayBuffer.backingArray|]   @type object;
#L0d7588.   v1:= v3.[|java:nio:ReadWriteShortArrayBuffer.offset|] ;
#L0d758c.   v2:= v3.[|java:nio:ReadWriteShortArrayBuffer.position|] ;
#L0d7590.   v1:= v1 + v2  @type int;
#L0d7592.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v0, v1, v6) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0d7598.   v0:= v3.[|java:nio:ReadWriteShortArrayBuffer.position|] ;
#L0d759c.   v0:= v0 + v6  @type int;
#L0d759e.   v3.[|java:nio:ReadWriteShortArrayBuffer.position|]  := v0;
#L0d75a2.   return v3  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ReadWriteShortArrayBuffer.slice|] ([|java:nio:ReadWriteShortArrayBuffer|] v5 @type (this)) @owner [|java:nio:ReadWriteShortArrayBuffer|] @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.slice:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d75b4.   v0:= new [|java:nio:ReadWriteShortArrayBuffer|];
#L0d75b8.   call temp:=  [|java:nio:ReadWriteShortArrayBuffer.remaining|](v5) @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.remaining:()I|] @classDescriptor [|java:nio:ReadWriteShortArrayBuffer|] @type virtual;
#L0d75be.   v1:= temp;
#L0d75c0.   v2:= v5.[|java:nio:ReadWriteShortArrayBuffer.backingArray|]   @type object;
#L0d75c4.   v3:= v5.[|java:nio:ReadWriteShortArrayBuffer.offset|] ;
#L0d75c8.   v4:= v5.[|java:nio:ReadWriteShortArrayBuffer.position|] ;
#L0d75cc.   v3:= v3 + v4  @type int;
#L0d75ce.   call temp:=  [|java:nio:ReadWriteShortArrayBuffer.<init>|](v0, v1, v2, v3) @signature [|Ljava/nio/ReadWriteShortArrayBuffer;.<init>:(I[SI)V|] @classDescriptor [|java:nio:ReadWriteShortArrayBuffer|] @type direct;
#L0d75d4.   return v0  @type object;

   }
record [|java:nio:channels:SelectionKey|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
      [|java:lang:Object|] [|java:nio:channels:SelectionKey.attachment|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|int|] @@[|java:nio:channels:SelectionKey.OP_ACCEPT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:nio:channels:SelectionKey.OP_CONNECT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:nio:channels:SelectionKey.OP_READ|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:nio:channels:SelectionKey.OP_WRITE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:SelectionKey.<init>|] ([|java:nio:channels:SelectionKey|] v1 @type (this)) @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d75e8.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d75ee.   v0:= 0  @length 4;
#L0d75f0.   v1.[|java:nio:channels:SelectionKey.attachment|]  := v0 @type object;
#L0d75f4.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:nio:channels:SelectionKey.attach|] ([|java:nio:channels:SelectionKey|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.attach:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d7608.   v0:= v1.[|java:nio:channels:SelectionKey.attachment|]   @type object;
#L0d760c.   v1.[|java:nio:channels:SelectionKey.attachment|]  := v2 @type object;
#L0d7610.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:nio:channels:SelectionKey.attachment|] ([|java:nio:channels:SelectionKey|] v1 @type (this)) @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.attachment:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d7624.   v0:= v1.[|java:nio:channels:SelectionKey.attachment|]   @type object;
#L0d7628.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:channels:SelectionKey.cancel|] () @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.cancel:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:SelectableChannel|] [|java:nio:channels:SelectionKey.channel|] () @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.channel:()Ljava/nio/channels/SelectableChannel;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:channels:SelectionKey.interestOps|] () @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.interestOps:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:SelectionKey|] [|java:nio:channels:SelectionKey.interestOps|] ([|int|] v0) @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.interestOps:(I)Ljava/nio/channels/SelectionKey;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:channels:SelectionKey.isAcceptable|] ([|java:nio:channels:SelectionKey|] v2 @type (this)) @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.isAcceptable:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d763c.   call temp:=  [|java:nio:channels:SelectionKey.readyOps|](v2) @signature [|Ljava/nio/channels/SelectionKey;.readyOps:()I|] @classDescriptor [|java:nio:channels:SelectionKey|] @type virtual;
#L0d7642.   v0:= temp;
#L0d7644.   v0:= v0 ^& 16;
#L0d7648.   v1:= 16  @length 16;
#L0d764c.   if v0 != v1 then goto L0d7654;
#L0d7650.   v0:= 1  @length 4;
#L0d7652.   return v0;
#L0d7654.   v0:= 0  @length 4;
#L0d7656.   goto L0d7652;

   }
    procedure [|boolean|] [|java:nio:channels:SelectionKey.isConnectable|] ([|java:nio:channels:SelectionKey|] v2 @type (this)) @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.isConnectable:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d7668.   call temp:=  [|java:nio:channels:SelectionKey.readyOps|](v2) @signature [|Ljava/nio/channels/SelectionKey;.readyOps:()I|] @classDescriptor [|java:nio:channels:SelectionKey|] @type virtual;
#L0d766e.   v0:= temp;
#L0d7670.   v0:= v0 ^& 8;
#L0d7674.   v1:= 8  @length 16;
#L0d7678.   if v0 != v1 then goto L0d7680;
#L0d767c.   v0:= 1  @length 4;
#L0d767e.   return v0;
#L0d7680.   v0:= 0  @length 4;
#L0d7682.   goto L0d767e;

   }
    procedure [|boolean|] [|java:nio:channels:SelectionKey.isReadable|] ([|java:nio:channels:SelectionKey|] v2 @type (this)) @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.isReadable:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d7694.   v0:= 1  @length 4;
#L0d7696.   call temp:=  [|java:nio:channels:SelectionKey.readyOps|](v2) @signature [|Ljava/nio/channels/SelectionKey;.readyOps:()I|] @classDescriptor [|java:nio:channels:SelectionKey|] @type virtual;
#L0d769c.   v1:= temp;
#L0d769e.   v1:= v1 ^& 1;
#L0d76a2.   if v1 != v0 then goto L0d76a8;
#L0d76a6.   return v0;
#L0d76a8.   v0:= 0  @length 4;
#L0d76aa.   goto L0d76a6;

   }
    procedure [|boolean|] [|java:nio:channels:SelectionKey.isValid|] () @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.isValid:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:channels:SelectionKey.isWritable|] ([|java:nio:channels:SelectionKey|] v2 @type (this)) @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.isWritable:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d76bc.   call temp:=  [|java:nio:channels:SelectionKey.readyOps|](v2) @signature [|Ljava/nio/channels/SelectionKey;.readyOps:()I|] @classDescriptor [|java:nio:channels:SelectionKey|] @type virtual;
#L0d76c2.   v0:= temp;
#L0d76c4.   v0:= v0 ^& 4;
#L0d76c8.   v1:= 4  @length 4;
#L0d76ca.   if v0 != v1 then goto L0d76d2;
#L0d76ce.   v0:= 1  @length 4;
#L0d76d0.   return v0;
#L0d76d2.   v0:= 0  @length 4;
#L0d76d4.   goto L0d76d0;

   }
    procedure [|int|] [|java:nio:channels:SelectionKey.readyOps|] () @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.readyOps:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:Selector|] [|java:nio:channels:SelectionKey.selector|] () @owner [|java:nio:channels:SelectionKey|] @signature [|Ljava/nio/channels/SelectionKey;.selector:()Ljava/nio/channels/Selector;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:nio:channels:spi:AbstractSelectionKey|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:channels:SelectionKey|] {
      [|boolean|] [|java:nio:channels:spi:AbstractSelectionKey.isValid|]    @AccessFlag ;
   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelectionKey.<init>|] ([|java:nio:channels:spi:AbstractSelectionKey|] v1 @type (this)) @owner [|java:nio:channels:spi:AbstractSelectionKey|] @signature [|Ljava/nio/channels/spi/AbstractSelectionKey;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d76e8.   call temp:=  [|java:nio:channels:SelectionKey.<init>|](v1) @signature [|Ljava/nio/channels/SelectionKey;.<init>:()V|] @classDescriptor [|java:nio:channels:SelectionKey|] @type direct;
#L0d76ee.   v0:= 1  @length 4;
#L0d76f0.   v1.[|java:nio:channels:spi:AbstractSelectionKey.isValid|]  := v0 @boolean;
#L0d76f4.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelectionKey.cancel|] ([|java:nio:channels:spi:AbstractSelectionKey|] v1 @type (this)) @owner [|java:nio:channels:spi:AbstractSelectionKey|] @signature [|Ljava/nio/channels/spi/AbstractSelectionKey;.cancel:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d7708.   v0:= v1.[|java:nio:channels:spi:AbstractSelectionKey.isValid|]   @boolean;
#L0d770c.   if v0 == 0 then goto L0d7728;
#L0d7710.   v0:= 0  @length 4;
#L0d7712.   v1.[|java:nio:channels:spi:AbstractSelectionKey.isValid|]  := v0 @boolean;
#L0d7716.   call temp:=  [|java:nio:channels:spi:AbstractSelectionKey.selector|](v1) @signature [|Ljava/nio/channels/spi/AbstractSelectionKey;.selector:()Ljava/nio/channels/Selector;|] @classDescriptor [|java:nio:channels:spi:AbstractSelectionKey|] @type virtual;
#L0d771c.   v0:= temp  @type object;
#L0d771e.   v0:= ([|java:nio:channels:spi:AbstractSelector|])v0;
#L0d7722.   call temp:=  [|java:nio:channels:spi:AbstractSelector.cancel|](v0, v1) @signature [|Ljava/nio/channels/spi/AbstractSelector;.cancel:(Ljava/nio/channels/SelectionKey;)V|] @classDescriptor [|java:nio:channels:spi:AbstractSelector|] @type virtual;
#L0d7728.   return @void ;

   }
    procedure [|boolean|] [|java:nio:channels:spi:AbstractSelectionKey.isValid|] ([|java:nio:channels:spi:AbstractSelectionKey|] v1 @type (this)) @owner [|java:nio:channels:spi:AbstractSelectionKey|] @signature [|Ljava/nio/channels/spi/AbstractSelectionKey;.isValid:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d773c.   v0:= v1.[|java:nio:channels:spi:AbstractSelectionKey.isValid|]   @boolean;
#L0d7740.   return v0;

   }
record [|java:nio:SelectionKeyImpl|]  @type class @AccessFlag FINAL  extends [|java:nio:channels:spi:AbstractSelectionKey|] {
      [|java:nio:channels:spi:AbstractSelectableChannel|] [|java:nio:SelectionKeyImpl.channel|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:SelectionKeyImpl.interestOps|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:SelectionKeyImpl.readyOps|]    @AccessFlag PRIVATE;
      [|java:nio:SelectorImpl|] [|java:nio:SelectionKeyImpl.selector|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:nio:SelectionKeyImpl.<init>|] ([|java:nio:SelectionKeyImpl|] v0 @type (this), [|java:nio:channels:spi:AbstractSelectableChannel|] v1 @type (object), [|int|] v2, [|java:lang:Object|] v3 @type (object), [|java:nio:SelectorImpl|] v4 @type (object)) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.<init>:(Ljava/nio/channels/spi/AbstractSelectableChannel;ILjava/lang/Object;Ljava/nio/SelectorImpl;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d7754.   call temp:=  [|java:nio:channels:spi:AbstractSelectionKey.<init>|](v0) @signature [|Ljava/nio/channels/spi/AbstractSelectionKey;.<init>:()V|] @classDescriptor [|java:nio:channels:spi:AbstractSelectionKey|] @type direct;
#L0d775a.   v0.[|java:nio:SelectionKeyImpl.channel|]  := v1 @type object;
#L0d775e.   v0.[|java:nio:SelectionKeyImpl.interestOps|]  := v2;
#L0d7762.   v0.[|java:nio:SelectionKeyImpl.selector|]  := v4 @type object;
#L0d7766.   call temp:=  [|java:nio:SelectionKeyImpl.attach|](v0, v3) @signature [|Ljava/nio/SelectionKeyImpl;.attach:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d776c.   return @void ;

   }
    procedure [|void|] [|java:nio:SelectionKeyImpl.checkValid|] ([|java:nio:SelectionKeyImpl|] v1 @type (this)) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.checkValid:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0d7780.   call temp:=  [|java:nio:SelectionKeyImpl.isValid|](v1) @signature [|Ljava/nio/SelectionKeyImpl;.isValid:()Z|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d7786.   v0:= temp;
#L0d7788.   if v0 != 0 then goto L0d7798;
#L0d778c.   v0:= new [|java:nio:channels:CancelledKeyException|];
#L0d7790.   call temp:=  [|java:nio:channels:CancelledKeyException.<init>|](v0) @signature [|Ljava/nio/channels/CancelledKeyException;.<init>:()V|] @classDescriptor [|java:nio:channels:CancelledKeyException|] @type direct;
#L0d7796.   throw v0;
#L0d7798.   return @void ;

   }
    procedure [|java:nio:channels:SelectableChannel|] [|java:nio:SelectionKeyImpl.channel|] ([|java:nio:SelectionKeyImpl|] v1 @type (this)) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.channel:()Ljava/nio/channels/SelectableChannel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d77ac.   v0:= v1.[|java:nio:SelectionKeyImpl.channel|]   @type object;
#L0d77b0.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:SelectionKeyImpl.interestOps|] ([|java:nio:SelectionKeyImpl|] v2 @type (this)) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.interestOps:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d77c4.   call temp:=  [|java:nio:SelectionKeyImpl.checkValid|](v2) @signature [|Ljava/nio/SelectionKeyImpl;.checkValid:()V|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type direct;
#L0d77ca.   v0:= v2.[|java:nio:SelectionKeyImpl.selector|]   @type object;
#L0d77ce.   v1:= v0.[|java:nio:SelectorImpl.keysLock|]   @type object;
#L0d77d2.   (@monitorenter v1)
#L0d77d4.   v0:= v2.[|java:nio:SelectionKeyImpl.interestOps|] ;
#L0d77d8.   (@monitorexit v1)
#L0d77da.   return v0;
#L0d77dc.   v0:= Exception  @type object;
#L0d77de.   (@monitorexit v1)
#L0d77e0.   throw v0;
  catch  [|any|] @[L0d77d4..L0d77e0] goto L0d77dc;

   }
    procedure [|java:nio:channels:SelectionKey|] [|java:nio:SelectionKeyImpl.interestOps|] ([|java:nio:SelectionKeyImpl|] v2 @type (this), [|int|] v3) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.interestOps:(I)Ljava/nio/channels/SelectionKey;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d7800.   call temp:=  [|java:nio:SelectionKeyImpl.checkValid|](v2) @signature [|Ljava/nio/SelectionKeyImpl;.checkValid:()V|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type direct;
#L0d7806.   call temp:=  [|java:nio:SelectionKeyImpl.channel|](v2) @signature [|Ljava/nio/SelectionKeyImpl;.channel:()Ljava/nio/channels/SelectableChannel;|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d780c.   v0:= temp  @type object;
#L0d780e.   call temp:=  [|java:nio:channels:SelectableChannel.validOps|](v0) @signature [|Ljava/nio/channels/SelectableChannel;.validOps:()I|] @classDescriptor [|java:nio:channels:SelectableChannel|] @type virtual;
#L0d7814.   v0:= temp;
#L0d7816.   v0:= v0 ^~ -1;
#L0d781a.   v0:= v0 ^& v3  @type int;
#L0d781c.   if v0 == 0 then goto L0d782c;
#L0d7820.   v0:= new [|java:lang:IllegalArgumentException|];
#L0d7824.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d782a.   throw v0;
#L0d782c.   v0:= v2.[|java:nio:SelectionKeyImpl.selector|]   @type object;
#L0d7830.   v1:= v0.[|java:nio:SelectorImpl.keysLock|]   @type object;
#L0d7834.   (@monitorenter v1)
#L0d7836.   v2.[|java:nio:SelectionKeyImpl.interestOps|]  := v3;
#L0d783a.   (@monitorexit v1)
#L0d783c.   return v2  @type object;
#L0d783e.   v0:= Exception  @type object;
#L0d7840.   (@monitorexit v1)
#L0d7842.   throw v0;
  catch  [|any|] @[L0d7836..L0d7842] goto L0d783e;

   }
    procedure [|int|] [|java:nio:SelectionKeyImpl.interestOpsNoCheck|] ([|java:nio:SelectionKeyImpl|] v2 @type (this)) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.interestOpsNoCheck:()I|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0d7860.   v0:= v2.[|java:nio:SelectionKeyImpl.selector|]   @type object;
#L0d7864.   v1:= v0.[|java:nio:SelectorImpl.keysLock|]   @type object;
#L0d7868.   (@monitorenter v1)
#L0d786a.   v0:= v2.[|java:nio:SelectionKeyImpl.interestOps|] ;
#L0d786e.   (@monitorexit v1)
#L0d7870.   return v0;
#L0d7872.   v0:= Exception  @type object;
#L0d7874.   (@monitorexit v1)
#L0d7876.   throw v0;
  catch  [|any|] @[L0d786a..L0d7876] goto L0d7872;

   }
    procedure [|boolean|] [|java:nio:SelectionKeyImpl.isConnected|] ([|java:nio:SelectionKeyImpl|] v1 @type (this)) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.isConnected:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d7894.   v0:= v1.[|java:nio:SelectionKeyImpl.channel|]   @type object;
#L0d7898.   v0:= instanceof @varname v0 @type [|java:nio:channels:SocketChannel|];
#L0d789c.   if v0 == 0 then goto L0d78b4;
#L0d78a0.   v0:= v1.[|java:nio:SelectionKeyImpl.channel|]   @type object;
#L0d78a4.   v0:= ([|java:nio:channels:SocketChannel|])v0;
#L0d78a8.   call temp:=  [|java:nio:channels:SocketChannel.isConnected|](v0) @signature [|Ljava/nio/channels/SocketChannel;.isConnected:()Z|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d78ae.   v0:= temp;
#L0d78b0.   if v0 == 0 then goto L0d78b8;
#L0d78b4.   v0:= 1  @length 4;
#L0d78b6.   return v0;
#L0d78b8.   v0:= 0  @length 4;
#L0d78ba.   goto L0d78b6;

   }
    procedure [|int|] [|java:nio:SelectionKeyImpl.readyOps|] ([|java:nio:SelectionKeyImpl|] v1 @type (this)) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.readyOps:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d78cc.   call temp:=  [|java:nio:SelectionKeyImpl.checkValid|](v1) @signature [|Ljava/nio/SelectionKeyImpl;.checkValid:()V|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type direct;
#L0d78d2.   v0:= v1.[|java:nio:SelectionKeyImpl.readyOps|] ;
#L0d78d6.   return v0;

   }
    procedure [|java:nio:channels:Selector|] [|java:nio:SelectionKeyImpl.selector|] ([|java:nio:SelectionKeyImpl|] v1 @type (this)) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.selector:()Ljava/nio/channels/Selector;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d78e8.   v0:= v1.[|java:nio:SelectionKeyImpl.selector|]   @type object;
#L0d78ec.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:SelectionKeyImpl.setReadyOps|] ([|java:nio:SelectionKeyImpl|] v0 @type (this), [|int|] v1) @owner [|java:nio:SelectionKeyImpl|] @signature [|Ljava/nio/SelectionKeyImpl;.setReadyOps:(I)V|] @Access  {
      local temp ;
      
#L0d7900.   v0.[|java:nio:SelectionKeyImpl.readyOps|]  := v1;
#L0d7904.   return @void ;

   }
record [|java:util:Collection|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:lang:Iterable|] {
   }
    procedure [|boolean|] [|java:util:Collection.add|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Collection.addAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:Collection.clear|] () @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.clear:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Collection.contains|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Collection.containsAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.containsAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Collection.equals|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:Collection.hashCode|] () @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.hashCode:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Collection.isEmpty|] () @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.isEmpty:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Iterator|] [|java:util:Collection.iterator|] () @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Collection.remove|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Collection.removeAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Collection.retainAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.retainAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:Collection.size|] () @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.size:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|][] [|java:util:Collection.toArray|] () @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|][] [|java:util:Collection.toArray|] ([|java:lang:Object|][] v0 @type (object)) @owner [|java:util:Collection|] @signature [|Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:Set|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:Collection|] {
   }
    procedure [|boolean|] [|java:util:Set.add|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Set|] @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Set.addAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:Set|] @signature [|Ljava/util/Set;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:Set.clear|] () @owner [|java:util:Set|] @signature [|Ljava/util/Set;.clear:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Set.contains|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Set|] @signature [|Ljava/util/Set;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Set.containsAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:Set|] @signature [|Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Set.equals|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Set|] @signature [|Ljava/util/Set;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:Set.hashCode|] () @owner [|java:util:Set|] @signature [|Ljava/util/Set;.hashCode:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Set.isEmpty|] () @owner [|java:util:Set|] @signature [|Ljava/util/Set;.isEmpty:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Iterator|] [|java:util:Set.iterator|] () @owner [|java:util:Set|] @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Set.remove|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:Set|] @signature [|Ljava/util/Set;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Set.removeAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:Set|] @signature [|Ljava/util/Set;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:Set.retainAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:Set|] @signature [|Ljava/util/Set;.retainAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:Set.size|] () @owner [|java:util:Set|] @signature [|Ljava/util/Set;.size:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|][] [|java:util:Set.toArray|] () @owner [|java:util:Set|] @signature [|Ljava/util/Set;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|][] [|java:util:Set.toArray|] ([|java:lang:Object|][] v0 @type (object)) @owner [|java:util:Set|] @signature [|Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:nio:SelectorImpl$UnaddableSet|]  @type class @AccessFlag  extends  [|java:util:Set|] {
      [|java:util:Set|] [|java:nio:SelectorImpl$UnaddableSet.set|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:SelectorImpl$UnaddableSet.<init>|] ([|java:nio:SelectorImpl$UnaddableSet|] v0 @type (this), [|java:util:Set|] v1 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.<init>:(Ljava/util/Set;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d7918.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d791e.   v0.[|java:nio:SelectorImpl$UnaddableSet.set|]  := v1 @type object;
#L0d7922.   return @void ;

   }
    procedure [|boolean|] [|java:nio:SelectorImpl$UnaddableSet.add|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7934.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0d7938.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0d793e.   throw v0;

   }
    procedure [|boolean|] [|java:nio:SelectorImpl$UnaddableSet.addAll|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7950.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0d7954.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0d795a.   throw v0;

   }
    procedure [|void|] [|java:nio:SelectorImpl$UnaddableSet.clear|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d796c.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d7970.   call temp:=  [|java:util:Set.clear|](v0) @signature [|Ljava/util/Set;.clear:()V|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7976.   return @void ;

   }
    procedure [|boolean|] [|java:nio:SelectorImpl$UnaddableSet.contains|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7988.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d798c.   call temp:=  [|java:util:Set.contains|](v0, v2) @signature [|Ljava/util/Set;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7992.   v0:= temp;
#L0d7994.   return v0;

   }
    procedure [|boolean|] [|java:nio:SelectorImpl$UnaddableSet.containsAll|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.containsAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d79a8.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d79ac.   call temp:=  [|java:util:Set.containsAll|](v0, v2) @signature [|Ljava/util/Set;.containsAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d79b2.   v0:= temp;
#L0d79b4.   return v0;

   }
    procedure [|boolean|] [|java:nio:SelectorImpl$UnaddableSet.equals|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d79c8.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d79cc.   call temp:=  [|java:lang:Object.equals|](v0, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0d79d2.   v0:= temp;
#L0d79d4.   return v0;

   }
    procedure [|int|] [|java:nio:SelectorImpl$UnaddableSet.hashCode|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d79e8.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d79ec.   call temp:=  [|java:lang:Object.hashCode|](v0) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0d79f2.   v0:= temp;
#L0d79f4.   return v0;

   }
    procedure [|boolean|] [|java:nio:SelectorImpl$UnaddableSet.isEmpty|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7a08.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d7a0c.   call temp:=  [|java:util:Set.isEmpty|](v0) @signature [|Ljava/util/Set;.isEmpty:()Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7a12.   v0:= temp;
#L0d7a14.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:nio:SelectorImpl$UnaddableSet.iterator|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7a28.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d7a2c.   call temp:=  [|java:util:Set.iterator|](v0) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7a32.   v0:= temp  @type object;
#L0d7a34.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:SelectorImpl$UnaddableSet.remove|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7a48.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d7a4c.   call temp:=  [|java:util:Set.remove|](v0, v2) @signature [|Ljava/util/Set;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7a52.   v0:= temp;
#L0d7a54.   return v0;

   }
    procedure [|boolean|] [|java:nio:SelectorImpl$UnaddableSet.removeAll|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7a68.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d7a6c.   call temp:=  [|java:util:Set.removeAll|](v0, v2) @signature [|Ljava/util/Set;.removeAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7a72.   v0:= temp;
#L0d7a74.   return v0;

   }
    procedure [|boolean|] [|java:nio:SelectorImpl$UnaddableSet.retainAll|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.retainAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7a88.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d7a8c.   call temp:=  [|java:util:Set.retainAll|](v0, v2) @signature [|Ljava/util/Set;.retainAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7a92.   v0:= temp;
#L0d7a94.   return v0;

   }
    procedure [|int|] [|java:nio:SelectorImpl$UnaddableSet.size|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7aa8.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d7aac.   call temp:=  [|java:util:Set.size|](v0) @signature [|Ljava/util/Set;.size:()I|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7ab2.   v0:= temp;
#L0d7ab4.   return v0;

   }
    procedure [|java:lang:Object|][] [|java:nio:SelectorImpl$UnaddableSet.toArray|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7ac8.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d7acc.   call temp:=  [|java:util:Set.toArray|](v0) @signature [|Ljava/util/Set;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7ad2.   v0:= temp  @type object;
#L0d7ad4.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:nio:SelectorImpl$UnaddableSet.toArray|] ([|java:nio:SelectorImpl$UnaddableSet|] v1 @type (this), [|java:lang:Object|][] v2 @type (object)) @owner [|java:nio:SelectorImpl$UnaddableSet|] @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d7ae8.   v0:= v1.[|java:nio:SelectorImpl$UnaddableSet.set|]   @type object;
#L0d7aec.   call temp:=  [|java:util:Set.toArray|](v0, v2) @signature [|Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7af2.   v0:= temp  @type object;
#L0d7af4.   return v0  @type object;

   }
record [|java:nio:channels:Selector|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:nio:channels:Selector.<init>|] ([|java:nio:channels:Selector|] v0 @type (this)) @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0d7b08.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d7b0e.   return @void ;

   }
    procedure [|java:nio:channels:Selector|] [|java:nio:channels:Selector.open|] () @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.open:()Ljava/nio/channels/Selector;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d7b20.   call temp:=  [|java:nio:channels:spi:SelectorProvider.provider|]() @signature [|Ljava/nio/channels/spi/SelectorProvider;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type static;
#L0d7b26.   v0:= temp  @type object;
#L0d7b28.   call temp:=  [|java:nio:channels:spi:SelectorProvider.openSelector|](v0) @signature [|Ljava/nio/channels/spi/SelectorProvider;.openSelector:()Ljava/nio/channels/spi/AbstractSelector;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type virtual;
#L0d7b2e.   v0:= temp  @type object;
#L0d7b30.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:channels:Selector.close|] () @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:channels:Selector.isOpen|] () @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.isOpen:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Set|] [|java:nio:channels:Selector.keys|] () @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.keys:()Ljava/util/Set;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:spi:SelectorProvider|] [|java:nio:channels:Selector.provider|] () @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:channels:Selector.select|] () @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.select:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:channels:Selector.select|] ([|long|] v0) @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.select:(J)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:channels:Selector.selectNow|] () @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.selectNow:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Set|] [|java:nio:channels:Selector.selectedKeys|] () @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.selectedKeys:()Ljava/util/Set;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:Selector|] [|java:nio:channels:Selector.wakeup|] () @owner [|java:nio:channels:Selector|] @signature [|Ljava/nio/channels/Selector;.wakeup:()Ljava/nio/channels/Selector;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:nio:channels:spi:AbstractSelector|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:channels:Selector|] {
      [|java:util:Set|] [|java:nio:channels:spi:AbstractSelector.cancelledKeysSet|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:atomic:AtomicBoolean|] [|java:nio:channels:spi:AbstractSelector.isOpen|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:channels:spi:SelectorProvider|] [|java:nio:channels:spi:AbstractSelector.provider|]    @AccessFlag PRIVATE;
      [|java:lang:Runnable|] [|java:nio:channels:spi:AbstractSelector.wakeupRunnable|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelector.<init>|] ([|java:nio:channels:spi:AbstractSelector|] v2 @type (this), [|java:nio:channels:spi:SelectorProvider|] v3 @type (object)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d7b44.   call temp:=  [|java:nio:channels:Selector.<init>|](v2) @signature [|Ljava/nio/channels/Selector;.<init>:()V|] @classDescriptor [|java:nio:channels:Selector|] @type direct;
#L0d7b4a.   v0:= new [|java:util:concurrent:atomic:AtomicBoolean|];
#L0d7b4e.   v1:= 1  @length 4;
#L0d7b50.   call temp:=  [|java:util:concurrent:atomic:AtomicBoolean.<init>|](v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicBoolean|] @type direct;
#L0d7b56.   v2.[|java:nio:channels:spi:AbstractSelector.isOpen|]  := v0 @type object;
#L0d7b5a.   v0:= 0  @length 4;
#L0d7b5c.   v2.[|java:nio:channels:spi:AbstractSelector.provider|]  := v0 @type object;
#L0d7b60.   v0:= new [|java:util:HashSet|];
#L0d7b64.   call temp:=  [|java:util:HashSet.<init>|](v0) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0d7b6a.   v2.[|java:nio:channels:spi:AbstractSelector.cancelledKeysSet|]  := v0 @type object;
#L0d7b6e.   v0:= new [|java:nio:channels:spi:AbstractSelector$1|];
#L0d7b72.   call temp:=  [|java:nio:channels:spi:AbstractSelector$1.<init>|](v0, v2) @signature [|Ljava/nio/channels/spi/AbstractSelector$1;.<init>:(Ljava/nio/channels/spi/AbstractSelector;)V|] @classDescriptor [|java:nio:channels:spi:AbstractSelector$1|] @type direct;
#L0d7b78.   v2.[|java:nio:channels:spi:AbstractSelector.wakeupRunnable|]  := v0 @type object;
#L0d7b7c.   v2.[|java:nio:channels:spi:AbstractSelector.provider|]  := v3 @type object;
#L0d7b80.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelector.begin|] ([|java:nio:channels:spi:AbstractSelector|] v2 @type (this)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.begin:()V|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d7b94.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0d7b9a.   v0:= temp  @type object;
#L0d7b9c.   v1:= v2.[|java:nio:channels:spi:AbstractSelector.wakeupRunnable|]   @type object;
#L0d7ba0.   call temp:=  [|java:lang:Thread.pushInterruptAction$|](v0, v1) @signature [|Ljava/lang/Thread;.pushInterruptAction$:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0d7ba6.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelector.cancel|] ([|java:nio:channels:spi:AbstractSelector|] v2 @type (this), [|java:nio:channels:SelectionKey|] v3 @type (object)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.cancel:(Ljava/nio/channels/SelectionKey;)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L0d7bb8.   v1:= v2.[|java:nio:channels:spi:AbstractSelector.cancelledKeysSet|]   @type object;
#L0d7bbc.   (@monitorenter v1)
#L0d7bbe.   v0:= v2.[|java:nio:channels:spi:AbstractSelector.cancelledKeysSet|]   @type object;
#L0d7bc2.   call temp:=  [|java:util:Set.add|](v0, v3) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7bc8.   (@monitorexit v1)
#L0d7bca.   return @void ;
#L0d7bcc.   v0:= Exception  @type object;
#L0d7bce.   (@monitorexit v1)
#L0d7bd0.   throw v0;
  catch  [|any|] @[L0d7bbe..L0d7bd0] goto L0d7bcc;

   }
    procedure [|java:util:Set|] [|java:nio:channels:spi:AbstractSelector.cancelledKeys|] ([|java:nio:channels:spi:AbstractSelector|] v1 @type (this)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.cancelledKeys:()Ljava/util/Set;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0d7bf0.   v0:= v1.[|java:nio:channels:spi:AbstractSelector.cancelledKeysSet|]   @type object;
#L0d7bf4.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelector.close|] ([|java:nio:channels:spi:AbstractSelector|] v2 @type (this)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.close:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d7c08.   v0:= v2.[|java:nio:channels:spi:AbstractSelector.isOpen|]   @type object;
#L0d7c0c.   v1:= 0  @length 4;
#L0d7c0e.   call temp:=  [|java:util:concurrent:atomic:AtomicBoolean.getAndSet|](v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.getAndSet:(Z)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicBoolean|] @type virtual;
#L0d7c14.   v0:= temp;
#L0d7c16.   if v0 == 0 then goto L0d7c20;
#L0d7c1a.   call temp:=  [|java:nio:channels:spi:AbstractSelector.implCloseSelector|](v2) @signature [|Ljava/nio/channels/spi/AbstractSelector;.implCloseSelector:()V|] @classDescriptor [|java:nio:channels:spi:AbstractSelector|] @type virtual;
#L0d7c20.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelector.deregister|] ([|java:nio:channels:spi:AbstractSelector|] v1 @type (this), [|java:nio:channels:spi:AbstractSelectionKey|] v2 @type (object)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.deregister:(Ljava/nio/channels/spi/AbstractSelectionKey;)V|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
      
#L0d7c34.   call temp:=  [|java:nio:channels:spi:AbstractSelectionKey.channel|](v2) @signature [|Ljava/nio/channels/spi/AbstractSelectionKey;.channel:()Ljava/nio/channels/SelectableChannel;|] @classDescriptor [|java:nio:channels:spi:AbstractSelectionKey|] @type virtual;
#L0d7c3a.   v0:= temp  @type object;
#L0d7c3c.   v0:= ([|java:nio:channels:spi:AbstractSelectableChannel|])v0;
#L0d7c40.   call temp:=  [|java:nio:channels:spi:AbstractSelectableChannel.deregister|](v0, v2) @signature [|Ljava/nio/channels/spi/AbstractSelectableChannel;.deregister:(Ljava/nio/channels/SelectionKey;)V|] @classDescriptor [|java:nio:channels:spi:AbstractSelectableChannel|] @type virtual;
#L0d7c46.   v0:= 0  @length 4;
#L0d7c48.   v2.[|java:nio:channels:spi:AbstractSelectionKey.isValid|]  := v0 @boolean;
#L0d7c4c.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelector.end|] ([|java:nio:channels:spi:AbstractSelector|] v2 @type (this)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.end:()V|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
      
#L0d7c60.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L0d7c66.   v0:= temp  @type object;
#L0d7c68.   v1:= v2.[|java:nio:channels:spi:AbstractSelector.wakeupRunnable|]   @type object;
#L0d7c6c.   call temp:=  [|java:lang:Thread.popInterruptAction$|](v0, v1) @signature [|Ljava/lang/Thread;.popInterruptAction$:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L0d7c72.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelector.implCloseSelector|] () @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.implCloseSelector:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:channels:spi:AbstractSelector.isOpen|] ([|java:nio:channels:spi:AbstractSelector|] v1 @type (this)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.isOpen:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d7c84.   v0:= v1.[|java:nio:channels:spi:AbstractSelector.isOpen|]   @type object;
#L0d7c88.   call temp:=  [|java:util:concurrent:atomic:AtomicBoolean.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicBoolean|] @type virtual;
#L0d7c8e.   v0:= temp;
#L0d7c90.   return v0;

   }
    procedure [|java:nio:channels:spi:SelectorProvider|] [|java:nio:channels:spi:AbstractSelector.provider|] ([|java:nio:channels:spi:AbstractSelector|] v1 @type (this)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d7ca4.   v0:= v1.[|java:nio:channels:spi:AbstractSelector.provider|]   @type object;
#L0d7ca8.   return v0  @type object;

   }
    procedure [|java:nio:channels:SelectionKey|] [|java:nio:channels:spi:AbstractSelector.register|] ([|java:nio:channels:spi:AbstractSelectableChannel|] v0 @type (object), [|int|] v1, [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:channels:spi:AbstractSelector|] @signature [|Ljava/nio/channels/spi/AbstractSelector;.register:(Ljava/nio/channels/spi/AbstractSelectableChannel;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
record [|java:nio:SelectorImpl|]  @type class @AccessFlag FINAL  extends [|java:nio:channels:spi:AbstractSelector|] {
      [|java:lang:Object|] [|java:nio:SelectorImpl.keysLock|]    @AccessFlag FINAL;
      [|java:util:Set|] [|java:nio:SelectorImpl.mutableKeys|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:Set|] [|java:nio:SelectorImpl.mutableSelectedKeys|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:UnsafeArrayList|] [|java:nio:SelectorImpl.pollFds|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:Set|] [|java:nio:SelectorImpl.selectedKeys|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:Set|] [|java:nio:SelectorImpl.unmodifiableKeys|]    @AccessFlag PRIVATE_FINAL;
      [|java:io:FileDescriptor|] [|java:nio:SelectorImpl.wakeupIn|]    @AccessFlag PRIVATE_FINAL;
      [|java:io:FileDescriptor|] [|java:nio:SelectorImpl.wakeupOut|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:SelectorImpl.<init>|] ([|java:nio:SelectorImpl|] v6 @type (this), [|java:nio:channels:spi:SelectorProvider|] v7 @type (object)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0d7cbc.   call temp:=  [|java:nio:channels:spi:AbstractSelector.<init>|](v6, v7) @signature [|Ljava/nio/channels/spi/AbstractSelector;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:spi:AbstractSelector|] @type direct;
#L0d7cc2.   v2:= new [|java:lang:Object|];
#L0d7cc6.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d7ccc.   v6.[|java:nio:SelectorImpl.keysLock|]  := v2 @type object;
#L0d7cd0.   v2:= new [|java:util:HashSet|];
#L0d7cd4.   call temp:=  [|java:util:HashSet.<init>|](v2) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0d7cda.   v6.[|java:nio:SelectorImpl.mutableKeys|]  := v2 @type object;
#L0d7cde.   v2:= v6.[|java:nio:SelectorImpl.mutableKeys|]   @type object;
#L0d7ce2.   call temp:=  [|java:util:Collections.unmodifiableSet|](v2) @signature [|Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;|] @classDescriptor [|java:util:Collections|] @type static;
#L0d7ce8.   v2:= temp  @type object;
#L0d7cea.   v6.[|java:nio:SelectorImpl.unmodifiableKeys|]  := v2 @type object;
#L0d7cee.   v2:= new [|java:util:HashSet|];
#L0d7cf2.   call temp:=  [|java:util:HashSet.<init>|](v2) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0d7cf8.   v6.[|java:nio:SelectorImpl.mutableSelectedKeys|]  := v2 @type object;
#L0d7cfc.   v2:= new [|java:nio:SelectorImpl$UnaddableSet|];
#L0d7d00.   v3:= v6.[|java:nio:SelectorImpl.mutableSelectedKeys|]   @type object;
#L0d7d04.   call temp:=  [|java:nio:SelectorImpl$UnaddableSet.<init>|](v2, v3) @signature [|Ljava/nio/SelectorImpl$UnaddableSet;.<init>:(Ljava/util/Set;)V|] @classDescriptor [|java:nio:SelectorImpl$UnaddableSet|] @type direct;
#L0d7d0a.   v6.[|java:nio:SelectorImpl.selectedKeys|]  := v2 @type object;
#L0d7d0e.   v2:= new [|java:util:UnsafeArrayList|];
#L0d7d12.   v3:= new [|libcore:io:StructPollfd|];
#L0d7d16.   v4:= 8  @length 16;
#L0d7d1a.   call temp:=  [|java:util:UnsafeArrayList.<init>|](v2, v3, v4) @signature [|Ljava/util/UnsafeArrayList;.<init>:(Ljava/lang/Class;I)V|] @classDescriptor [|java:util:UnsafeArrayList|] @type direct;
#L0d7d20.   v6.[|java:nio:SelectorImpl.pollFds|]  := v2 @type object;
#L0d7d24.   v2:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d7d28.   call temp:=  [|libcore:io:Os.pipe|](v2) @signature [|Llibcore/io/Os;.pipe:()[Ljava/io/FileDescriptor;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d7d2e.   v1:= temp  @type object;
#L0d7d30.   v2:= 0  @length 4;
#L0d7d32.   v2:= v1[v2]  @type object;
#L0d7d36.   v6.[|java:nio:SelectorImpl.wakeupIn|]  := v2 @type object;
#L0d7d3a.   v2:= 1  @length 4;
#L0d7d3c.   v2:= v1[v2]  @type object;
#L0d7d40.   v6.[|java:nio:SelectorImpl.wakeupOut|]  := v2 @type object;
#L0d7d44.   v2:= v6.[|java:nio:SelectorImpl.wakeupIn|]   @type object;
#L0d7d48.   v3:= 0  @length 4;
#L0d7d4a.   call temp:=  [|libcore:io:IoUtils.setBlocking|](v2, v3) @signature [|Llibcore/io/IoUtils;.setBlocking:(Ljava/io/FileDescriptor;Z)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L0d7d50.   v2:= v6.[|java:nio:SelectorImpl.pollFds|]   @type object;
#L0d7d54.   v3:= new [|libcore:io:StructPollfd|];
#L0d7d58.   call temp:=  [|libcore:io:StructPollfd.<init>|](v3) @signature [|Llibcore/io/StructPollfd;.<init>:()V|] @classDescriptor [|libcore:io:StructPollfd|] @type direct;
#L0d7d5e.   call temp:=  [|java:util:UnsafeArrayList.add|](v2, v3) @signature [|Ljava/util/UnsafeArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:UnsafeArrayList|] @type virtual;
#L0d7d64.   v2:= 0  @length 4;
#L0d7d66.   v3:= v6.[|java:nio:SelectorImpl.wakeupIn|]   @type object;
#L0d7d6a.   v4:= @@[|libcore:io:OsConstants.POLLIN|] ;
#L0d7d6e.   v5:= 0  @length 4;
#L0d7d70.   call temp:=  [|java:nio:SelectorImpl.setPollFd|](v6, v2, v3, v4, v5) @signature [|Ljava/nio/SelectorImpl;.setPollFd:(ILjava/io/FileDescriptor;ILjava/lang/Object;)V|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d7d76.   return @void ;
#L0d7d78.   v0:= Exception  @type object;
#L0d7d7a.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L0d7d80.   v2:= temp  @type object;
#L0d7d82.   throw v2;
  catch  [|libcore:io:ErrnoException|] @[L0d7d24..L0d7d76] goto L0d7d78;

   }
    procedure [|void|] [|java:nio:SelectorImpl.checkClosed|] ([|java:nio:SelectorImpl|] v1 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.checkClosed:()V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L0d7da4.   call temp:=  [|java:nio:SelectorImpl.isOpen|](v1) @signature [|Ljava/nio/SelectorImpl;.isOpen:()Z|] @classDescriptor [|java:nio:SelectorImpl|] @type virtual;
#L0d7daa.   v0:= temp;
#L0d7dac.   if v0 != 0 then goto L0d7dbc;
#L0d7db0.   v0:= new [|java:nio:channels:ClosedSelectorException|];
#L0d7db4.   call temp:=  [|java:nio:channels:ClosedSelectorException.<init>|](v0) @signature [|Ljava/nio/channels/ClosedSelectorException;.<init>:()V|] @classDescriptor [|java:nio:channels:ClosedSelectorException|] @type direct;
#L0d7dba.   throw v0;
#L0d7dbc.   return @void ;

   }
    procedure [|int|] [|java:nio:SelectorImpl.doCancel|] ([|java:nio:SelectorImpl|] v6 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.doCancel:()I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0d7dd0.   v3:= 0  @length 4;
#L0d7dd2.   call temp:=  [|java:nio:SelectorImpl.cancelledKeys|](v6) @signature [|Ljava/nio/SelectorImpl;.cancelledKeys:()Ljava/util/Set;|] @classDescriptor [|java:nio:SelectorImpl|] @type virtual;
#L0d7dd8.   v1:= temp  @type object;
#L0d7dda.   (@monitorenter v1)
#L0d7ddc.   call temp:=  [|java:util:Set.size|](v1) @signature [|Ljava/util/Set;.size:()I|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7de2.   v5:= temp;
#L0d7de4.   if v5 <= 0 then goto L0d7e3c;
#L0d7de8.   call temp:=  [|java:util:Set.iterator|](v1) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7dee.   v4:= temp  @type object;
#L0d7df0.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0d7df6.   v5:= temp;
#L0d7df8.   if v5 == 0 then goto L0d7e36;
#L0d7dfc.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0d7e02.   v2:= temp  @type object;
#L0d7e04.   v2:= ([|java:nio:channels:SelectionKey|])v2;
#L0d7e08.   v5:= v6.[|java:nio:SelectorImpl.mutableKeys|]   @type object;
#L0d7e0c.   call temp:=  [|java:util:Set.remove|](v5, v2) @signature [|Ljava/util/Set;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7e12.   v0:= v2  @type object;
#L0d7e14.   v0:= ([|java:nio:channels:spi:AbstractSelectionKey|])v0;
#L0d7e18.   v5:= v0  @type object;
#L0d7e1a.   call temp:=  [|java:nio:SelectorImpl.deregister|](v6, v5) @signature [|Ljava/nio/SelectorImpl;.deregister:(Ljava/nio/channels/spi/AbstractSelectionKey;)V|] @classDescriptor [|java:nio:SelectorImpl|] @type virtual;
#L0d7e20.   v5:= v6.[|java:nio:SelectorImpl.mutableSelectedKeys|]   @type object;
#L0d7e24.   call temp:=  [|java:util:Set.remove|](v5, v2) @signature [|Ljava/util/Set;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7e2a.   v5:= temp;
#L0d7e2c.   if v5 == 0 then goto L0d7df0;
#L0d7e30.   v3:= v3 + 1;
#L0d7e34.   goto L0d7df0;
#L0d7e36.   call temp:=  [|java:util:Set.clear|](v1) @signature [|Ljava/util/Set;.clear:()V|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7e3c.   (@monitorexit v1)
#L0d7e3e.   return v3;
#L0d7e40.   v5:= Exception  @type object;
#L0d7e42.   (@monitorexit v1)
#L0d7e44.   throw v5;
  catch  [|any|] @[L0d7ddc..L0d7e44] goto L0d7e40;

   }
    procedure [|void|] [|java:nio:SelectorImpl.ensurePollFdsCapacity|] ([|java:nio:SelectorImpl|] v2 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.ensurePollFdsCapacity:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0d7e64.   v0:= v2.[|java:nio:SelectorImpl.pollFds|]   @type object;
#L0d7e68.   call temp:=  [|java:util:UnsafeArrayList.size|](v0) @signature [|Ljava/util/UnsafeArrayList;.size:()I|] @classDescriptor [|java:util:UnsafeArrayList|] @type virtual;
#L0d7e6e.   v0:= temp;
#L0d7e70.   v1:= v2.[|java:nio:SelectorImpl.mutableKeys|]   @type object;
#L0d7e74.   call temp:=  [|java:util:Set.size|](v1) @signature [|Ljava/util/Set;.size:()I|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7e7a.   v1:= temp;
#L0d7e7c.   v1:= v1 + 1;
#L0d7e80.   if v0 >= v1 then goto L0d7e9a;
#L0d7e84.   v0:= v2.[|java:nio:SelectorImpl.pollFds|]   @type object;
#L0d7e88.   v1:= new [|libcore:io:StructPollfd|];
#L0d7e8c.   call temp:=  [|libcore:io:StructPollfd.<init>|](v1) @signature [|Llibcore/io/StructPollfd;.<init>:()V|] @classDescriptor [|libcore:io:StructPollfd|] @type direct;
#L0d7e92.   call temp:=  [|java:util:UnsafeArrayList.add|](v0, v1) @signature [|Ljava/util/UnsafeArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:UnsafeArrayList|] @type virtual;
#L0d7e98.   goto L0d7e64;
#L0d7e9a.   return @void ;

   }
    procedure [|void|] [|java:nio:SelectorImpl.preparePollFds|] ([|java:nio:SelectorImpl|] v7 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.preparePollFds:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d7eac.   v1:= 1  @length 4;
#L0d7eae.   v6:= v7.[|java:nio:SelectorImpl.mutableKeys|]   @type object;
#L0d7eb2.   call temp:=  [|java:util:Set.iterator|](v6) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7eb8.   v3:= temp  @type object;
#L0d7eba.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0d7ec0.   v6:= temp;
#L0d7ec2.   if v6 == 0 then goto L0d7f22;
#L0d7ec6.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0d7ecc.   v5:= temp  @type object;
#L0d7ece.   v5:= ([|java:nio:SelectionKeyImpl|])v5;
#L0d7ed2.   call temp:=  [|java:nio:SelectionKeyImpl.interestOpsNoCheck|](v5) @signature [|Ljava/nio/SelectionKeyImpl;.interestOpsNoCheck:()I|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d7ed8.   v4:= temp;
#L0d7eda.   v0:= 0  @length 4;
#L0d7edc.   v6:= v4 ^& 17;
#L0d7ee0.   if v6 == 0 then goto L0d7eec;
#L0d7ee4.   v6:= @@[|libcore:io:OsConstants.POLLIN|] ;
#L0d7ee8.   v6:= v6 ^| v0  @type int;
#L0d7eea.   v0:= (short)v6  @type i2s;
#L0d7eec.   v6:= v4 ^& 12;
#L0d7ef0.   if v6 == 0 then goto L0d7efc;
#L0d7ef4.   v6:= @@[|libcore:io:OsConstants.POLLOUT|] ;
#L0d7ef8.   v6:= v6 ^| v0  @type int;
#L0d7efa.   v0:= (short)v6  @type i2s;
#L0d7efc.   if v0 == 0 then goto L0d7eba;
#L0d7f00.   v2:= v1 + 1;
#L0d7f04.   call temp:=  [|java:nio:SelectionKeyImpl.channel|](v5) @signature [|Ljava/nio/SelectionKeyImpl;.channel:()Ljava/nio/channels/SelectableChannel;|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d7f0a.   v6:= temp  @type object;
#L0d7f0c.   v6:= ([|java:nio:FileDescriptorChannel|])v6;
#L0d7f10.   call temp:=  [|java:nio:FileDescriptorChannel.getFD|](v6) @signature [|Ljava/nio/FileDescriptorChannel;.getFD:()Ljava/io/FileDescriptor;|] @classDescriptor [|java:nio:FileDescriptorChannel|] @type interface;
#L0d7f16.   v6:= temp  @type object;
#L0d7f18.   call temp:=  [|java:nio:SelectorImpl.setPollFd|](v7, v1, v6, v0, v5) @signature [|Ljava/nio/SelectorImpl;.setPollFd:(ILjava/io/FileDescriptor;ILjava/lang/Object;)V|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d7f1e.   v1:= v2;
#L0d7f20.   goto L0d7eba;
#L0d7f22.   return @void ;

   }
    procedure [|int|] [|java:nio:SelectorImpl.processPollFds|] ([|java:nio:SelectorImpl|] v12 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.processPollFds:()I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L0d7f34.   v11:= 0  @length 4;
#L0d7f36.   v10:= 0  @length 4;
#L0d7f38.   v8:= v12.[|java:nio:SelectorImpl.pollFds|]   @type object;
#L0d7f3c.   call temp:=  [|java:util:UnsafeArrayList.get|](v8, v10) @signature [|Ljava/util/UnsafeArrayList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:UnsafeArrayList|] @type virtual;
#L0d7f42.   v8:= temp  @type object;
#L0d7f44.   v8:= ([|libcore:io:StructPollfd|])v8;
#L0d7f48.   v8:= v8.[|libcore:io:StructPollfd.revents|]   @short;
#L0d7f4c.   v9:= @@[|libcore:io:OsConstants.POLLIN|] ;
#L0d7f50.   if v8 != v9 then goto L0d7f6e;
#L0d7f54.   v8:= 8  @length 16;
#L0d7f58.   v0:= new [|byte|][v8];
#L0d7f5c.   v8:= v12.[|java:nio:SelectorImpl.wakeupIn|]   @type object;
#L0d7f60.   v9:= 1  @length 4;
#L0d7f62.   call temp:=  [|libcore:io:IoBridge.read|](v8, v0, v10, v9) @signature [|Llibcore/io/IoBridge;.read:(Ljava/io/FileDescriptor;[BII)I|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L0d7f68.   v8:= temp;
#L0d7f6a.   if v8 > 0 then goto L0d7f5c;
#L0d7f6e.   v5:= 0  @length 4;
#L0d7f70.   v1:= 1  @length 4;
#L0d7f72.   v8:= v12.[|java:nio:SelectorImpl.pollFds|]   @type object;
#L0d7f76.   call temp:=  [|java:util:UnsafeArrayList.size|](v8) @signature [|Ljava/util/UnsafeArrayList;.size:()I|] @classDescriptor [|java:util:UnsafeArrayList|] @type virtual;
#L0d7f7c.   v8:= temp;
#L0d7f7e.   if v1 >= v8 then goto L0d7fa8;
#L0d7f82.   v8:= v12.[|java:nio:SelectorImpl.pollFds|]   @type object;
#L0d7f86.   call temp:=  [|java:util:UnsafeArrayList.get|](v8, v1) @signature [|Ljava/util/UnsafeArrayList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:UnsafeArrayList|] @type virtual;
#L0d7f8c.   v4:= temp  @type object;
#L0d7f8e.   v4:= ([|libcore:io:StructPollfd|])v4;
#L0d7f92.   v8:= v4.[|libcore:io:StructPollfd.revents|]   @short;
#L0d7f96.   if v8 != 0 then goto L0d7fa0;
#L0d7f9a.   v1:= v1 + 1;
#L0d7f9e.   goto L0d7f72;
#L0d7fa0.   v8:= v4.[|libcore:io:StructPollfd.fd|]   @type object;
#L0d7fa4.   if v8 != 0 then goto L0d7faa;
#L0d7fa8.   return v5;
#L0d7faa.   v2:= v4.[|libcore:io:StructPollfd.userData|]   @type object;
#L0d7fae.   v2:= ([|java:nio:SelectionKeyImpl|])v2;
#L0d7fb2.   v4.[|libcore:io:StructPollfd.fd|]  := v11 @type object;
#L0d7fb6.   v4.[|libcore:io:StructPollfd.userData|]  := v11 @type object;
#L0d7fba.   call temp:=  [|java:nio:SelectionKeyImpl.interestOpsNoCheck|](v2) @signature [|Ljava/nio/SelectionKeyImpl;.interestOpsNoCheck:()I|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d7fc0.   v3:= temp;
#L0d7fc2.   v6:= 0  @length 4;
#L0d7fc4.   v8:= v4.[|libcore:io:StructPollfd.revents|]   @short;
#L0d7fc8.   v9:= @@[|libcore:io:OsConstants.POLLIN|] ;
#L0d7fcc.   v8:= v8 ^& v9  @type int;
#L0d7fce.   if v8 == 0 then goto L0d800c;
#L0d7fd2.   v6:= v3 ^& 17;
#L0d7fd6.   if v6 == 0 then goto L0d7f9a;
#L0d7fda.   v8:= v12.[|java:nio:SelectorImpl.mutableSelectedKeys|]   @type object;
#L0d7fde.   call temp:=  [|java:util:Set.contains|](v8, v2) @signature [|Ljava/util/Set;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d7fe4.   v7:= temp;
#L0d7fe6.   if v7 == 0 then goto L0d8032;
#L0d7fea.   call temp:=  [|java:nio:SelectionKeyImpl.readyOps|](v2) @signature [|Ljava/nio/SelectionKeyImpl;.readyOps:()I|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d7ff0.   v8:= temp;
#L0d7ff2.   if v8 == v6 then goto L0d8032;
#L0d7ff6.   call temp:=  [|java:nio:SelectionKeyImpl.readyOps|](v2) @signature [|Ljava/nio/SelectionKeyImpl;.readyOps:()I|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d7ffc.   v8:= temp;
#L0d7ffe.   v8:= v8 ^| v6  @type int;
#L0d8000.   call temp:=  [|java:nio:SelectionKeyImpl.setReadyOps|](v2, v8) @signature [|Ljava/nio/SelectionKeyImpl;.setReadyOps:(I)V|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d8006.   v5:= v5 + 1;
#L0d800a.   goto L0d7f9a;
#L0d800c.   v8:= v4.[|libcore:io:StructPollfd.revents|]   @short;
#L0d8010.   v9:= @@[|libcore:io:OsConstants.POLLOUT|] ;
#L0d8014.   v8:= v8 ^& v9  @type int;
#L0d8016.   if v8 == 0 then goto L0d7fd6;
#L0d801a.   call temp:=  [|java:nio:SelectionKeyImpl.isConnected|](v2) @signature [|Ljava/nio/SelectionKeyImpl;.isConnected:()Z|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d8020.   v8:= temp;
#L0d8022.   if v8 == 0 then goto L0d802c;
#L0d8026.   v6:= v3 ^& 4;
#L0d802a.   goto L0d7fd6;
#L0d802c.   v6:= v3 ^& 8;
#L0d8030.   goto L0d7fd6;
#L0d8032.   if v7 != 0 then goto L0d7f9a;
#L0d8036.   call temp:=  [|java:nio:SelectionKeyImpl.setReadyOps|](v2, v6) @signature [|Ljava/nio/SelectionKeyImpl;.setReadyOps:(I)V|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type virtual;
#L0d803c.   v8:= v12.[|java:nio:SelectorImpl.mutableSelectedKeys|]   @type object;
#L0d8040.   call temp:=  [|java:util:Set.add|](v8, v2) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d8046.   v5:= v5 + 1;
#L0d804a.   goto L0d7f9a;

   }
    procedure [|int|] [|java:nio:SelectorImpl.selectInternal|] ([|java:nio:SelectorImpl|] v9 @type (this), [|long|] v10) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.selectInternal:(J)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0d805c.   v3:= 0  @length 4;
#L0d805e.   call temp:=  [|java:nio:SelectorImpl.checkClosed|](v9) @signature [|Ljava/nio/SelectorImpl;.checkClosed:()V|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d8064.   (@monitorenter v9)
#L0d8066.   v5:= v9.[|java:nio:SelectorImpl.unmodifiableKeys|]   @type object;
#L0d806a.   (@monitorenter v5)
#L0d806c.   v6:= v9.[|java:nio:SelectorImpl.selectedKeys|]   @type object;
#L0d8070.   (@monitorenter v6)
#L0d8072.   call temp:=  [|java:nio:SelectorImpl.doCancel|](v9) @signature [|Ljava/nio/SelectorImpl;.doCancel:()I|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d8078.   v7:= 0  @length wide16;
#L0d807c.   v4:= cmp(v10,v7);
#L0d8080.   if v4 == 0 then goto L0d80e6;
#L0d8084.   v1:= 1  @length 4;
#L0d8086.   v7:= v9.[|java:nio:SelectorImpl.keysLock|]   @type object;
#L0d808a.   (@monitorenter v7)
#L0d808c.   call temp:=  [|java:nio:SelectorImpl.preparePollFds|](v9) @signature [|Ljava/nio/SelectorImpl;.preparePollFds:()V|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d8092.   (@monitorexit v7)
#L0d8094.   v2:= -1  @length 4;
#L0d8096.   if v1 == 0 then goto L0d80a0;
#L0d809a.   call temp:=  [|java:nio:SelectorImpl.begin|](v9) @signature [|Ljava/nio/SelectorImpl;.begin:()V|] @classDescriptor [|java:nio:SelectorImpl|] @type virtual;
#L0d80a0.   v7:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d80a4.   v4:= v9.[|java:nio:SelectorImpl.pollFds|]   @type object;
#L0d80a8.   call temp:=  [|java:util:UnsafeArrayList.array|](v4) @signature [|Ljava/util/UnsafeArrayList;.array:()[Ljava/lang/Object;|] @classDescriptor [|java:util:UnsafeArrayList|] @type virtual;
#L0d80ae.   v4:= temp  @type object;
#L0d80b0.   v4:= ([|libcore:io:StructPollfd|][])v4;
#L0d80b4.   v8:= (int)v10  @type l2i;
#L0d80b6.   call temp:=  [|libcore:io:Os.poll|](v7, v4, v8) @signature [|Llibcore/io/Os;.poll:([Llibcore/io/StructPollfd;I)I|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d80bc.   v2:= temp;
#L0d80be.   if v1 == 0 then goto L0d80c8;
#L0d80c2.   call temp:=  [|java:nio:SelectorImpl.end|](v9) @signature [|Ljava/nio/SelectorImpl;.end:()V|] @classDescriptor [|java:nio:SelectorImpl|] @type virtual;
#L0d80c8.   if v2 <= 0 then goto L0d80d4;
#L0d80cc.   call temp:=  [|java:nio:SelectorImpl.processPollFds|](v9) @signature [|Ljava/nio/SelectorImpl;.processPollFds:()I|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d80d2.   v3:= temp;
#L0d80d4.   call temp:=  [|java:nio:SelectorImpl.doCancel|](v9) @signature [|Ljava/nio/SelectorImpl;.doCancel:()I|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d80da.   v4:= temp;
#L0d80dc.   v3:= v3 - v4  @type int;
#L0d80de.   (@monitorexit v6)
#L0d80e0.   (@monitorexit v5)
#L0d80e2.   (@monitorexit v9)
#L0d80e4.   return v3;
#L0d80e6.   v1:= v3;
#L0d80e8.   goto L0d8086;
#L0d80ea.   v4:= Exception  @type object;
#L0d80ec.   (@monitorexit v7)
#L0d80ee.   throw v4;
#L0d80f0.   v4:= Exception  @type object;
#L0d80f2.   (@monitorexit v6)
#L0d80f4.   throw v4;
#L0d80f6.   v4:= Exception  @type object;
#L0d80f8.   (@monitorexit v5)
#L0d80fa.   throw v4;
#L0d80fc.   v4:= Exception  @type object;
#L0d80fe.   (@monitorexit v9)
#L0d8100.   throw v4;
#L0d8102.   v0:= Exception  @type object;
#L0d8104.   v4:= v0.[|libcore:io:ErrnoException.errno|] ;
#L0d8108.   v7:= @@[|libcore:io:OsConstants.EINTR|] ;
#L0d810c.   if v4 == v7 then goto L0d80be;
#L0d8110.   call temp:=  [|libcore:io:ErrnoException.rethrowAsIOException|](v0) @signature [|Llibcore/io/ErrnoException;.rethrowAsIOException:()Ljava/io/IOException;|] @classDescriptor [|libcore:io:ErrnoException|] @type virtual;
#L0d8116.   v4:= temp  @type object;
#L0d8118.   throw v4;
#L0d811a.   v4:= Exception  @type object;
#L0d811c.   if v1 == 0 then goto L0d8126;
#L0d8120.   call temp:=  [|java:nio:SelectorImpl.end|](v9) @signature [|Ljava/nio/SelectorImpl;.end:()V|] @classDescriptor [|java:nio:SelectorImpl|] @type virtual;
#L0d8126.   throw v4;
  catch  [|any|] @[L0d8066..L0d806c] goto L0d80fc;
  catch  [|any|] @[L0d806c..L0d8072] goto L0d80f6;
  catch  [|any|] @[L0d8072..L0d808c] goto L0d80f0;
  catch  [|any|] @[L0d808c..L0d8094] goto L0d80ea;
  catch  [|any|] @[L0d809a..L0d80a0] goto L0d811a;
  catch  [|libcore:io:ErrnoException|] @[L0d80a0..L0d80bc] goto L0d8102;
  catch  [|any|] @[L0d80a0..L0d80bc] goto L0d811a;
  catch  [|any|] @[L0d80c2..L0d80e0] goto L0d80f0;
  catch  [|any|] @[L0d80e0..L0d80e2] goto L0d80f6;
  catch  [|any|] @[L0d80e2..L0d80e4] goto L0d80fc;
  catch  [|any|] @[L0d80ec..L0d80ee] goto L0d80ea;
  catch  [|any|] @[L0d80ee..L0d80f4] goto L0d80f0;
  catch  [|any|] @[L0d80f4..L0d80fa] goto L0d80f6;
  catch  [|any|] @[L0d80fa..L0d8100] goto L0d80fc;
  catch  [|any|] @[L0d8104..L0d811a] goto L0d811a;
  catch  [|any|] @[L0d8120..L0d8126] goto L0d80f0;

   }
    procedure [|void|] [|java:nio:SelectorImpl.setPollFd|] ([|java:nio:SelectorImpl|] v2 @type (this), [|int|] v3, [|java:io:FileDescriptor|] v4 @type (object), [|int|] v5, [|java:lang:Object|] v6 @type (object)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.setPollFd:(ILjava/io/FileDescriptor;ILjava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0d81c0.   v1:= v2.[|java:nio:SelectorImpl.pollFds|]   @type object;
#L0d81c4.   call temp:=  [|java:util:UnsafeArrayList.get|](v1, v3) @signature [|Ljava/util/UnsafeArrayList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:UnsafeArrayList|] @type virtual;
#L0d81ca.   v0:= temp  @type object;
#L0d81cc.   v0:= ([|libcore:io:StructPollfd|])v0;
#L0d81d0.   v0.[|libcore:io:StructPollfd.fd|]  := v4 @type object;
#L0d81d4.   v1:= (short)v5  @type i2s;
#L0d81d6.   v0.[|libcore:io:StructPollfd.events|]  := v1 @short;
#L0d81da.   v0.[|libcore:io:StructPollfd.userData|]  := v6 @type object;
#L0d81de.   return @void ;

   }
    procedure [|void|] [|java:nio:SelectorImpl.implCloseSelector|] ([|java:nio:SelectorImpl|] v5 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.implCloseSelector:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d81f0.   call temp:=  [|java:nio:SelectorImpl.wakeup|](v5) @signature [|Ljava/nio/SelectorImpl;.wakeup:()Ljava/nio/channels/Selector;|] @classDescriptor [|java:nio:SelectorImpl|] @type virtual;
#L0d81f6.   (@monitorenter v5)
#L0d81f8.   v3:= v5.[|java:nio:SelectorImpl.unmodifiableKeys|]   @type object;
#L0d81fc.   (@monitorenter v3)
#L0d81fe.   v4:= v5.[|java:nio:SelectorImpl.selectedKeys|]   @type object;
#L0d8202.   (@monitorenter v4)
#L0d8204.   v2:= v5.[|java:nio:SelectorImpl.wakeupIn|]   @type object;
#L0d8208.   call temp:=  [|libcore:io:IoUtils.close|](v2) @signature [|Llibcore/io/IoUtils;.close:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L0d820e.   v2:= v5.[|java:nio:SelectorImpl.wakeupOut|]   @type object;
#L0d8212.   call temp:=  [|libcore:io:IoUtils.close|](v2) @signature [|Llibcore/io/IoUtils;.close:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L0d8218.   call temp:=  [|java:nio:SelectorImpl.doCancel|](v5) @signature [|Ljava/nio/SelectorImpl;.doCancel:()I|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d821e.   v2:= v5.[|java:nio:SelectorImpl.mutableKeys|]   @type object;
#L0d8222.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0d8228.   v0:= temp  @type object;
#L0d822a.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0d8230.   v2:= temp;
#L0d8232.   if v2 == 0 then goto L0d8260;
#L0d8236.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0d823c.   v1:= temp  @type object;
#L0d823e.   v1:= ([|java:nio:SelectionKeyImpl|])v1;
#L0d8242.   v1:= ([|java:nio:channels:spi:AbstractSelectionKey|])v1;
#L0d8246.   call temp:=  [|java:nio:SelectorImpl.deregister|](v5, v1) @signature [|Ljava/nio/SelectorImpl;.deregister:(Ljava/nio/channels/spi/AbstractSelectionKey;)V|] @classDescriptor [|java:nio:SelectorImpl|] @type virtual;
#L0d824c.   goto L0d822a;
#L0d824e.   v2:= Exception  @type object;
#L0d8250.   (@monitorexit v4)
#L0d8252.   throw v2;
#L0d8254.   v2:= Exception  @type object;
#L0d8256.   (@monitorexit v3)
#L0d8258.   throw v2;
#L0d825a.   v2:= Exception  @type object;
#L0d825c.   (@monitorexit v5)
#L0d825e.   throw v2;
#L0d8260.   (@monitorexit v4)
#L0d8262.   (@monitorexit v3)
#L0d8264.   (@monitorexit v5)
#L0d8266.   return @void ;
  catch  [|any|] @[L0d81f8..L0d81fe] goto L0d825a;
  catch  [|any|] @[L0d81fe..L0d8204] goto L0d8254;
  catch  [|any|] @[L0d8204..L0d8252] goto L0d824e;
  catch  [|any|] @[L0d8252..L0d8258] goto L0d8254;
  catch  [|any|] @[L0d8258..L0d825e] goto L0d825a;
  catch  [|any|] @[L0d8260..L0d8262] goto L0d824e;
  catch  [|any|] @[L0d8262..L0d8264] goto L0d8254;
  catch  [|any|] @[L0d8264..L0d8266] goto L0d825a;

   }
    procedure [|java:util:Set|] [|java:nio:SelectorImpl.keys|] ([|java:nio:SelectorImpl|] v1 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.keys:()Ljava/util/Set;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0d82c0.   (@monitorenter v1)
#L0d82c2.   call temp:=  [|java:nio:SelectorImpl.checkClosed|](v1) @signature [|Ljava/nio/SelectorImpl;.checkClosed:()V|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d82c8.   v0:= v1.[|java:nio:SelectorImpl.unmodifiableKeys|]   @type object;
#L0d82cc.   (@monitorexit v1)
#L0d82ce.   return v0  @type object;
#L0d82d0.   v0:= Exception  @type object;
#L0d82d2.   (@monitorexit v1)
#L0d82d4.   throw v0;
  catch  [|any|] @[L0d82c2..L0d82cc] goto L0d82d0;

   }
    procedure [|java:nio:channels:SelectionKey|] [|java:nio:SelectorImpl.register|] ([|java:nio:SelectorImpl|] v3 @type (this), [|java:nio:channels:spi:AbstractSelectableChannel|] v4 @type (object), [|int|] v5, [|java:lang:Object|] v6 @type (object)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.register:(Ljava/nio/channels/spi/AbstractSelectableChannel;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d82f4.   call temp:=  [|java:nio:SelectorImpl.provider|](v3) @signature [|Ljava/nio/SelectorImpl;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @classDescriptor [|java:nio:SelectorImpl|] @type virtual;
#L0d82fa.   v1:= temp  @type object;
#L0d82fc.   call temp:=  [|java:nio:channels:spi:AbstractSelectableChannel.provider|](v4) @signature [|Ljava/nio/channels/spi/AbstractSelectableChannel;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @classDescriptor [|java:nio:channels:spi:AbstractSelectableChannel|] @type virtual;
#L0d8302.   v2:= temp  @type object;
#L0d8304.   call temp:=  [|java:lang:Object.equals|](v1, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0d830a.   v1:= temp;
#L0d830c.   if v1 != 0 then goto L0d831c;
#L0d8310.   v1:= new [|java:nio:channels:IllegalSelectorException|];
#L0d8314.   call temp:=  [|java:nio:channels:IllegalSelectorException.<init>|](v1) @signature [|Ljava/nio/channels/IllegalSelectorException;.<init>:()V|] @classDescriptor [|java:nio:channels:IllegalSelectorException|] @type direct;
#L0d831a.   throw v1;
#L0d831c.   (@monitorenter v3)
#L0d831e.   v2:= v3.[|java:nio:SelectorImpl.unmodifiableKeys|]   @type object;
#L0d8322.   (@monitorenter v2)
#L0d8324.   v0:= new [|java:nio:SelectionKeyImpl|];
#L0d8328.   call temp:=  [|java:nio:SelectionKeyImpl.<init>|](v0, v4, v5, v6, v3) @signature [|Ljava/nio/SelectionKeyImpl;.<init>:(Ljava/nio/channels/spi/AbstractSelectableChannel;ILjava/lang/Object;Ljava/nio/SelectorImpl;)V|] @classDescriptor [|java:nio:SelectionKeyImpl|] @type direct;
#L0d832e.   v1:= v3.[|java:nio:SelectorImpl.mutableKeys|]   @type object;
#L0d8332.   call temp:=  [|java:util:Set.add|](v1, v0) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0d8338.   call temp:=  [|java:nio:SelectorImpl.ensurePollFdsCapacity|](v3) @signature [|Ljava/nio/SelectorImpl;.ensurePollFdsCapacity:()V|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d833e.   (@monitorexit v2)
#L0d8340.   (@monitorexit v3)
#L0d8342.   return v0  @type object;
#L0d8344.   v1:= Exception  @type object;
#L0d8346.   (@monitorexit v2)
#L0d8348.   throw v1;
#L0d834a.   v1:= Exception  @type object;
#L0d834c.   (@monitorexit v3)
#L0d834e.   throw v1;
  catch  [|any|] @[L0d831e..L0d8324] goto L0d834a;
  catch  [|any|] @[L0d8324..L0d8340] goto L0d8344;
  catch  [|any|] @[L0d8340..L0d8342] goto L0d834a;
  catch  [|any|] @[L0d8346..L0d8348] goto L0d8344;
  catch  [|any|] @[L0d8348..L0d834e] goto L0d834a;

   }
    procedure [|int|] [|java:nio:SelectorImpl.select|] ([|java:nio:SelectorImpl|] v2 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.select:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d8390.   v0:= -1  @length wide16;
#L0d8394.   call temp:=  [|java:nio:SelectorImpl.selectInternal|](v2, v0, v1) @signature [|Ljava/nio/SelectorImpl;.selectInternal:(J)I|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d839a.   v0:= temp;
#L0d839c.   return v0;

   }
    procedure [|int|] [|java:nio:SelectorImpl.select|] ([|java:nio:SelectorImpl|] v3 @type (this), [|long|] v4) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.select:(J)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d83b0.   v1:= 0  @length wide16;
#L0d83b4.   v0:= cmp(v4,v1);
#L0d83b8.   if v0 >= 0 then goto L0d83ee;
#L0d83bc.   v0:= new [|java:lang:IllegalArgumentException|];
#L0d83c0.   v1:= new [|java:lang:StringBuilder|];
#L0d83c4.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0d83ca.   v2:= "timeout < 0: " @type (object, string);
#L0d83ce.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d83d4.   v1:= temp  @type object;
#L0d83d6.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d83dc.   v1:= temp  @type object;
#L0d83de.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0d83e4.   v1:= temp  @type object;
#L0d83e6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d83ec.   throw v0;
#L0d83ee.   v0:= cmp(v4,v1);
#L0d83f2.   if v0 != 0 then goto L0d83fa;
#L0d83f6.   v4:= -1  @length wide16;
#L0d83fa.   call temp:=  [|java:nio:SelectorImpl.selectInternal|](v3, v4, v5) @signature [|Ljava/nio/SelectorImpl;.selectInternal:(J)I|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d8400.   v0:= temp;
#L0d8402.   return v0;

   }
    procedure [|int|] [|java:nio:SelectorImpl.selectNow|] ([|java:nio:SelectorImpl|] v2 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.selectNow:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d8414.   v0:= 0  @length wide16;
#L0d8418.   call temp:=  [|java:nio:SelectorImpl.selectInternal|](v2, v0, v1) @signature [|Ljava/nio/SelectorImpl;.selectInternal:(J)I|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d841e.   v0:= temp;
#L0d8420.   return v0;

   }
    procedure [|java:util:Set|] [|java:nio:SelectorImpl.selectedKeys|] ([|java:nio:SelectorImpl|] v1 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.selectedKeys:()Ljava/util/Set;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0d8434.   (@monitorenter v1)
#L0d8436.   call temp:=  [|java:nio:SelectorImpl.checkClosed|](v1) @signature [|Ljava/nio/SelectorImpl;.checkClosed:()V|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d843c.   v0:= v1.[|java:nio:SelectorImpl.selectedKeys|]   @type object;
#L0d8440.   (@monitorexit v1)
#L0d8442.   return v0  @type object;
#L0d8444.   v0:= Exception  @type object;
#L0d8446.   (@monitorexit v1)
#L0d8448.   throw v0;
  catch  [|any|] @[L0d8436..L0d8440] goto L0d8444;

   }
    procedure [|java:nio:channels:Selector|] [|java:nio:SelectorImpl.wakeup|] ([|java:nio:SelectorImpl|] v5 @type (this)) @owner [|java:nio:SelectorImpl|] @signature [|Ljava/nio/SelectorImpl;.wakeup:()Ljava/nio/channels/Selector;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d8468.   v0:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d846c.   v1:= v5.[|java:nio:SelectorImpl.wakeupOut|]   @type object;
#L0d8470.   v2:= 1  @length 4;
#L0d8472.   v2:= new [|byte|][v2];
#L0d8476.   v3:= 0  @length 4;
#L0d8478.   v4:= 1  @length 4;
#L0d847a.   v2[v3]:= v4  @byte;
#L0d847e.   v3:= 0  @length 4;
#L0d8480.   v4:= 1  @length 4;
#L0d8482.   call temp:=  [|libcore:io:Os.write|](v0, v1, v2, v3, v4) @signature [|Llibcore/io/Os;.write:(Ljava/io/FileDescriptor;[BII)I|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d8488.   return v5  @type object;
#L0d848a.   v0:= Exception  @type object;
#L0d848c.   goto L0d8488;
  catch  [|libcore:io:ErrnoException|] @[L0d8468..L0d8488] goto L0d848a;

   }
record [|java:nio:channels:spi:SelectorProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
      global [|java:nio:channels:spi:SelectorProvider|] @@[|java:nio:channels:spi:SelectorProvider.provider|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:nio:channels:spi:SelectorProvider.<clinit>|] () @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d84b0.   v0:= 0  @length 4;
#L0d84b2.   @@[|java:nio:channels:spi:SelectorProvider.provider|] := v0  @type object;
#L0d84b6.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:spi:SelectorProvider.<init>|] ([|java:nio:channels:spi:SelectorProvider|] v0 @type (this)) @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0d84c8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d84ce.   return @void ;

   }
    procedure [|java:nio:channels:spi:SelectorProvider|] [|java:nio:channels:spi:SelectorProvider.loadProviderByJar|] () @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.loadProviderByJar:()Ljava/nio/channels/spi/SelectorProvider;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d84e0.   v2:= new [|java:nio:channels:spi:SelectorProvider|];
#L0d84e4.   call temp:=  [|java:util:ServiceLoader.load|](v2) @signature [|Ljava/util/ServiceLoader;.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;|] @classDescriptor [|java:util:ServiceLoader|] @type static;
#L0d84ea.   v2:= temp  @type object;
#L0d84ec.   call temp:=  [|java:util:ServiceLoader.iterator|](v2) @signature [|Ljava/util/ServiceLoader;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:ServiceLoader|] @type virtual;
#L0d84f2.   v0:= temp  @type object;
#L0d84f4.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0d84fa.   v2:= temp;
#L0d84fc.   if v2 == 0 then goto L0d850e;
#L0d8500.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0d8506.   v1:= temp  @type object;
#L0d8508.   v1:= ([|java:nio:channels:spi:SelectorProvider|])v1;
#L0d850c.   return v1  @type object;
#L0d850e.   v1:= 0  @length 4;
#L0d8510.   goto L0d850c;

   }
    procedure [|java:nio:channels:spi:SelectorProvider|] [|java:nio:channels:spi:SelectorProvider.provider|] () @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @Access PUBLIC_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0d8524.   v1:= new [|java:nio:channels:spi:SelectorProvider|];
#L0d8528.   (@monitorenter v1)
#L0d852a.   v0:= @@[|java:nio:channels:spi:SelectorProvider.provider|]   @type object;
#L0d852e.   if v0 != 0 then goto L0d8570;
#L0d8532.   v0:= new [|java:nio:channels:spi:SelectorProvider|];
#L0d8536.   call temp:=  [|java:util:ServiceLoader.loadFromSystemProperty|](v0) @signature [|Ljava/util/ServiceLoader;.loadFromSystemProperty:(Ljava/lang/Class;)Ljava/lang/Object;|] @classDescriptor [|java:util:ServiceLoader|] @type static;
#L0d853c.   v0:= temp  @type object;
#L0d853e.   v0:= ([|java:nio:channels:spi:SelectorProvider|])v0;
#L0d8542.   @@[|java:nio:channels:spi:SelectorProvider.provider|] := v0  @type object;
#L0d8546.   v0:= @@[|java:nio:channels:spi:SelectorProvider.provider|]   @type object;
#L0d854a.   if v0 != 0 then goto L0d855a;
#L0d854e.   call temp:=  [|java:nio:channels:spi:SelectorProvider.loadProviderByJar|]() @signature [|Ljava/nio/channels/spi/SelectorProvider;.loadProviderByJar:()Ljava/nio/channels/spi/SelectorProvider;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type static;
#L0d8554.   v0:= temp  @type object;
#L0d8556.   @@[|java:nio:channels:spi:SelectorProvider.provider|] := v0  @type object;
#L0d855a.   v0:= @@[|java:nio:channels:spi:SelectorProvider.provider|]   @type object;
#L0d855e.   if v0 != 0 then goto L0d8570;
#L0d8562.   v0:= new [|java:nio:SelectorProviderImpl|];
#L0d8566.   call temp:=  [|java:nio:SelectorProviderImpl.<init>|](v0) @signature [|Ljava/nio/SelectorProviderImpl;.<init>:()V|] @classDescriptor [|java:nio:SelectorProviderImpl|] @type direct;
#L0d856c.   @@[|java:nio:channels:spi:SelectorProvider.provider|] := v0  @type object;
#L0d8570.   v0:= @@[|java:nio:channels:spi:SelectorProvider.provider|]   @type object;
#L0d8574.   (@monitorexit v1)
#L0d8576.   return v0  @type object;
#L0d8578.   v0:= Exception  @type object;
#L0d857a.   (@monitorexit v1)
#L0d857c.   throw v0;
  catch  [|any|] @[L0d852a..L0d8574] goto L0d8578;

   }
    procedure [|java:nio:channels:Channel|] [|java:nio:channels:spi:SelectorProvider.inheritedChannel|] ([|java:nio:channels:spi:SelectorProvider|] v1 @type (this)) @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.inheritedChannel:()Ljava/nio/channels/Channel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d859c.   v0:= 0  @length 4;
#L0d859e.   return v0  @type object;

   }
    procedure [|java:nio:channels:DatagramChannel|] [|java:nio:channels:spi:SelectorProvider.openDatagramChannel|] () @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.openDatagramChannel:()Ljava/nio/channels/DatagramChannel;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:Pipe|] [|java:nio:channels:spi:SelectorProvider.openPipe|] () @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.openPipe:()Ljava/nio/channels/Pipe;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:spi:AbstractSelector|] [|java:nio:channels:spi:SelectorProvider.openSelector|] () @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.openSelector:()Ljava/nio/channels/spi/AbstractSelector;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:ServerSocketChannel|] [|java:nio:channels:spi:SelectorProvider.openServerSocketChannel|] () @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.openServerSocketChannel:()Ljava/nio/channels/ServerSocketChannel;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:channels:SocketChannel|] [|java:nio:channels:spi:SelectorProvider.openSocketChannel|] () @owner [|java:nio:channels:spi:SelectorProvider|] @signature [|Ljava/nio/channels/spi/SelectorProvider;.openSocketChannel:()Ljava/nio/channels/SocketChannel;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:nio:SelectorProviderImpl|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:nio:channels:spi:SelectorProvider|] {
   }
    procedure [|void|] [|java:nio:SelectorProviderImpl.<init>|] ([|java:nio:SelectorProviderImpl|] v0 @type (this)) @owner [|java:nio:SelectorProviderImpl|] @signature [|Ljava/nio/SelectorProviderImpl;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d85b0.   call temp:=  [|java:nio:channels:spi:SelectorProvider.<init>|](v0) @signature [|Ljava/nio/channels/spi/SelectorProvider;.<init>:()V|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type direct;
#L0d85b6.   return @void ;

   }
    procedure [|java:nio:channels:DatagramChannel|] [|java:nio:SelectorProviderImpl.openDatagramChannel|] ([|java:nio:SelectorProviderImpl|] v1 @type (this)) @owner [|java:nio:SelectorProviderImpl|] @signature [|Ljava/nio/SelectorProviderImpl;.openDatagramChannel:()Ljava/nio/channels/DatagramChannel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d85c8.   v0:= new [|java:nio:DatagramChannelImpl|];
#L0d85cc.   call temp:=  [|java:nio:DatagramChannelImpl.<init>|](v0, v1) @signature [|Ljava/nio/DatagramChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:DatagramChannelImpl|] @type direct;
#L0d85d2.   return v0  @type object;

   }
    procedure [|java:nio:channels:Pipe|] [|java:nio:SelectorProviderImpl.openPipe|] ([|java:nio:SelectorProviderImpl|] v1 @type (this)) @owner [|java:nio:SelectorProviderImpl|] @signature [|Ljava/nio/SelectorProviderImpl;.openPipe:()Ljava/nio/channels/Pipe;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d85e4.   v0:= new [|java:nio:PipeImpl|];
#L0d85e8.   call temp:=  [|java:nio:PipeImpl.<init>|](v0, v1) @signature [|Ljava/nio/PipeImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:PipeImpl|] @type direct;
#L0d85ee.   return v0  @type object;

   }
    procedure [|java:nio:channels:spi:AbstractSelector|] [|java:nio:SelectorProviderImpl.openSelector|] ([|java:nio:SelectorProviderImpl|] v1 @type (this)) @owner [|java:nio:SelectorProviderImpl|] @signature [|Ljava/nio/SelectorProviderImpl;.openSelector:()Ljava/nio/channels/spi/AbstractSelector;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d8600.   v0:= new [|java:nio:SelectorImpl|];
#L0d8604.   call temp:=  [|java:nio:SelectorImpl.<init>|](v0, v1) @signature [|Ljava/nio/SelectorImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:SelectorImpl|] @type direct;
#L0d860a.   return v0  @type object;

   }
    procedure [|java:nio:channels:ServerSocketChannel|] [|java:nio:SelectorProviderImpl.openServerSocketChannel|] ([|java:nio:SelectorProviderImpl|] v1 @type (this)) @owner [|java:nio:SelectorProviderImpl|] @signature [|Ljava/nio/SelectorProviderImpl;.openServerSocketChannel:()Ljava/nio/channels/ServerSocketChannel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d861c.   v0:= new [|java:nio:ServerSocketChannelImpl|];
#L0d8620.   call temp:=  [|java:nio:ServerSocketChannelImpl.<init>|](v0, v1) @signature [|Ljava/nio/ServerSocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type direct;
#L0d8626.   return v0  @type object;

   }
    procedure [|java:nio:channels:SocketChannel|] [|java:nio:SelectorProviderImpl.openSocketChannel|] ([|java:nio:SelectorProviderImpl|] v1 @type (this)) @owner [|java:nio:SelectorProviderImpl|] @signature [|Ljava/nio/SelectorProviderImpl;.openSocketChannel:()Ljava/nio/channels/SocketChannel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d8638.   v0:= new [|java:nio:SocketChannelImpl|];
#L0d863c.   call temp:=  [|java:nio:SocketChannelImpl.<init>|](v0, v1) @signature [|Ljava/nio/SocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d8642.   return v0  @type object;

   }
record [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|]  @type class @AccessFlag   extends [|java:net:ServerSocket|] {
      [|java:nio:ServerSocketChannelImpl|] [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.<init>|] ([|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] v0 @type (this), [|java:nio:ServerSocketChannelImpl|] v1 @type (object)) @owner [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.<init>:(Ljava/nio/ServerSocketChannelImpl;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d8654.   call temp:=  [|java:net:ServerSocket.<init>|](v0) @signature [|Ljava/net/ServerSocket;.<init>:()V|] @classDescriptor [|java:net:ServerSocket|] @type direct;
#L0d865a.   v0.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]  := v1 @type object;
#L0d865e.   return @void ;

   }
    procedure [|java:net:Socket|] [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.accept|] ([|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] v2 @type (this)) @owner [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.accept:()Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d8670.   v1:= v2.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]   @type object;
#L0d8674.   call temp:=  [|java:nio:ServerSocketChannelImpl.access$000|](v1) @signature [|Ljava/nio/ServerSocketChannelImpl;.access$000:(Ljava/nio/ServerSocketChannelImpl;)Z|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type static;
#L0d867a.   v1:= temp;
#L0d867c.   if v1 != 0 then goto L0d868c;
#L0d8680.   v1:= new [|java:nio:channels:IllegalBlockingModeException|];
#L0d8684.   call temp:=  [|java:nio:channels:IllegalBlockingModeException.<init>|](v1) @signature [|Ljava/nio/channels/IllegalBlockingModeException;.<init>:()V|] @classDescriptor [|java:nio:channels:IllegalBlockingModeException|] @type direct;
#L0d868a.   throw v1;
#L0d868c.   v1:= v2.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]   @type object;
#L0d8690.   call temp:=  [|java:nio:ServerSocketChannelImpl.accept|](v1) @signature [|Ljava/nio/ServerSocketChannelImpl;.accept:()Ljava/nio/channels/SocketChannel;|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d8696.   v0:= temp  @type object;
#L0d8698.   if v0 != 0 then goto L0d86a8;
#L0d869c.   v1:= new [|java:nio:channels:IllegalBlockingModeException|];
#L0d86a0.   call temp:=  [|java:nio:channels:IllegalBlockingModeException.<init>|](v1) @signature [|Ljava/nio/channels/IllegalBlockingModeException;.<init>:()V|] @classDescriptor [|java:nio:channels:IllegalBlockingModeException|] @type direct;
#L0d86a6.   throw v1;
#L0d86a8.   call temp:=  [|java:nio:channels:SocketChannel.socket|](v0) @signature [|Ljava/nio/channels/SocketChannel;.socket:()Ljava/net/Socket;|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d86ae.   v1:= temp  @type object;
#L0d86b0.   return v1  @type object;

   }
    procedure [|void|] [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.bind|] ([|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] v2 @type (this), [|java:net:SocketAddress|] v3 @type (object)) @owner [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.bind:(Ljava/net/SocketAddress;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d86c4.   call temp:=  [|java:net:ServerSocket.bind|](v2, v3) @signature [|Ljava/net/ServerSocket;.bind:(Ljava/net/SocketAddress;)V|] @classDescriptor [|java:net:ServerSocket|] @type super;
#L0d86ca.   v0:= v2.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]   @type object;
#L0d86ce.   v1:= 1  @length 4;
#L0d86d0.   call temp:=  [|java:nio:ServerSocketChannelImpl.access$002|](v0, v1) @signature [|Ljava/nio/ServerSocketChannelImpl;.access$002:(Ljava/nio/ServerSocketChannelImpl;Z)Z|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type static;
#L0d86d6.   return @void ;

   }
    procedure [|void|] [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.bind|] ([|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] v2 @type (this), [|java:net:SocketAddress|] v3 @type (object), [|int|] v4) @owner [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.bind:(Ljava/net/SocketAddress;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d86e8.   call temp:=  [|java:net:ServerSocket.bind|](v2, v3, v4) @signature [|Ljava/net/ServerSocket;.bind:(Ljava/net/SocketAddress;I)V|] @classDescriptor [|java:net:ServerSocket|] @type super;
#L0d86ee.   v0:= v2.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]   @type object;
#L0d86f2.   v1:= 1  @length 4;
#L0d86f4.   call temp:=  [|java:nio:ServerSocketChannelImpl.access$002|](v0, v1) @signature [|Ljava/nio/ServerSocketChannelImpl;.access$002:(Ljava/nio/ServerSocketChannelImpl;Z)Z|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type static;
#L0d86fa.   return @void ;

   }
    procedure [|void|] [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.close|] ([|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] v2 @type (this)) @owner [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d870c.   v1:= v2.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]   @type object;
#L0d8710.   (@monitorenter v1)
#L0d8712.   v0:= v2.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]   @type object;
#L0d8716.   call temp:=  [|java:nio:ServerSocketChannelImpl.isOpen|](v0) @signature [|Ljava/nio/ServerSocketChannelImpl;.isOpen:()Z|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d871c.   v0:= temp;
#L0d871e.   if v0 == 0 then goto L0d8730;
#L0d8722.   v0:= v2.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]   @type object;
#L0d8726.   call temp:=  [|java:nio:ServerSocketChannelImpl.close|](v0) @signature [|Ljava/nio/ServerSocketChannelImpl;.close:()V|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d872c.   (@monitorexit v1)
#L0d872e.   return @void ;
#L0d8730.   call temp:=  [|java:net:ServerSocket.close|](v2) @signature [|Ljava/net/ServerSocket;.close:()V|] @classDescriptor [|java:net:ServerSocket|] @type super;
#L0d8736.   goto L0d872c;
#L0d8738.   v0:= Exception  @type object;
#L0d873a.   (@monitorexit v1)
#L0d873c.   throw v0;
  catch  [|any|] @[L0d8712..L0d873c] goto L0d8738;

   }
    procedure [|java:nio:channels:ServerSocketChannel|] [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.getChannel|] ([|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] v1 @type (this)) @owner [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.getChannel:()Ljava/nio/channels/ServerSocketChannel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d875c.   v0:= v1.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]   @type object;
#L0d8760.   return v0  @type object;

   }
    procedure [|java:net:Socket|] [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.implAccept|] ([|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] v3 @type (this), [|java:nio:SocketChannelImpl|] v4 @type (object)) @owner [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.implAccept:(Ljava/nio/SocketChannelImpl;)Ljava/net/Socket;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d8774.   call temp:=  [|java:nio:SocketChannelImpl.socket|](v4) @signature [|Ljava/nio/SocketChannelImpl;.socket:()Ljava/net/Socket;|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d877a.   v0:= temp  @type object;
#L0d877c.   v1:= 0  @length 4;
#L0d877e.   (@monitorenter v3)
#L0d8780.   call temp:=  [|java:net:ServerSocket.implAccept|](v3, v0) @signature [|Ljava/net/ServerSocket;.implAccept:(Ljava/net/Socket;)V|] @classDescriptor [|java:net:ServerSocket|] @type super;
#L0d8786.   call temp:=  [|java:nio:SocketChannelImpl.setConnected|](v4) @signature [|Ljava/nio/SocketChannelImpl;.setConnected:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d878c.   v2:= 1  @length 4;
#L0d878e.   call temp:=  [|java:nio:SocketChannelImpl.setBound|](v4, v2) @signature [|Ljava/nio/SocketChannelImpl;.setBound:(Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d8794.   call temp:=  [|java:nio:SocketChannelImpl.finishAccept|](v4) @signature [|Ljava/nio/SocketChannelImpl;.finishAccept:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d879a.   (@monitorexit v3)
#L0d879c.   v1:= 1  @length 4;
#L0d879e.   if v1 != 0 then goto L0d87a8;
#L0d87a2.   call temp:=  [|java:net:Socket.close|](v0) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0d87a8.   return v0  @type object;
#L0d87aa.   v2:= Exception  @type object;
#L0d87ac.   (@monitorexit v3)
#L0d87ae.   throw v2;
#L0d87b0.   v2:= Exception  @type object;
#L0d87b2.   if v1 != 0 then goto L0d87bc;
#L0d87b6.   call temp:=  [|java:net:Socket.close|](v0) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0d87bc.   throw v2;
  catch  [|any|] @[L0d877e..L0d8780] goto L0d87b0;
  catch  [|any|] @[L0d8780..L0d879c] goto L0d87aa;
  catch  [|any|] @[L0d87ac..L0d87ae] goto L0d87aa;
  catch  [|any|] @[L0d87ae..L0d87b0] goto L0d87b0;

   }
    procedure [|boolean|] [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.isBound|] ([|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] v1 @type (this)) @owner [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.isBound:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d87f8.   v0:= v1.[|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.channelImpl|]   @type object;
#L0d87fc.   call temp:=  [|java:nio:ServerSocketChannelImpl.access$000|](v0) @signature [|Ljava/nio/ServerSocketChannelImpl;.access$000:(Ljava/nio/ServerSocketChannelImpl;)Z|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type static;
#L0d8802.   v0:= temp;
#L0d8804.   return v0;

   }
record [|java:nio:channels:ServerSocketChannel|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:channels:spi:AbstractSelectableChannel|] {
   }
    procedure [|void|] [|java:nio:channels:ServerSocketChannel.<init>|] ([|java:nio:channels:ServerSocketChannel|] v0 @type (this), [|java:nio:channels:spi:SelectorProvider|] v1 @type (object)) @owner [|java:nio:channels:ServerSocketChannel|] @signature [|Ljava/nio/channels/ServerSocketChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0d8818.   call temp:=  [|java:nio:channels:spi:AbstractSelectableChannel.<init>|](v0, v1) @signature [|Ljava/nio/channels/spi/AbstractSelectableChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:spi:AbstractSelectableChannel|] @type direct;
#L0d881e.   return @void ;

   }
    procedure [|java:nio:channels:ServerSocketChannel|] [|java:nio:channels:ServerSocketChannel.open|] () @owner [|java:nio:channels:ServerSocketChannel|] @signature [|Ljava/nio/channels/ServerSocketChannel;.open:()Ljava/nio/channels/ServerSocketChannel;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d8830.   call temp:=  [|java:nio:channels:spi:SelectorProvider.provider|]() @signature [|Ljava/nio/channels/spi/SelectorProvider;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type static;
#L0d8836.   v0:= temp  @type object;
#L0d8838.   call temp:=  [|java:nio:channels:spi:SelectorProvider.openServerSocketChannel|](v0) @signature [|Ljava/nio/channels/spi/SelectorProvider;.openServerSocketChannel:()Ljava/nio/channels/ServerSocketChannel;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type virtual;
#L0d883e.   v0:= temp  @type object;
#L0d8840.   return v0  @type object;

   }
    procedure [|java:nio:channels:SocketChannel|] [|java:nio:channels:ServerSocketChannel.accept|] () @owner [|java:nio:channels:ServerSocketChannel|] @signature [|Ljava/nio/channels/ServerSocketChannel;.accept:()Ljava/nio/channels/SocketChannel;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:ServerSocket|] [|java:nio:channels:ServerSocketChannel.socket|] () @owner [|java:nio:channels:ServerSocketChannel|] @signature [|Ljava/nio/channels/ServerSocketChannel;.socket:()Ljava/net/ServerSocket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:channels:ServerSocketChannel.validOps|] ([|java:nio:channels:ServerSocketChannel|] v1 @type (this)) @owner [|java:nio:channels:ServerSocketChannel|] @signature [|Ljava/nio/channels/ServerSocketChannel;.validOps:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d8854.   v0:= 16  @length 16;
#L0d8858.   return v0;

   }
record [|java:nio:ServerSocketChannelImpl|]  @type class @AccessFlag FINAL  extends [|java:nio:channels:ServerSocketChannel|], [|java:nio:FileDescriptorChannel|] {
      [|java:lang:Object|] [|java:nio:ServerSocketChannelImpl.acceptLock|]    @AccessFlag PRIVATE_FINAL;
      [|java:net:SocketImpl|] [|java:nio:ServerSocketChannelImpl.impl|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:nio:ServerSocketChannelImpl.isBound|]    @AccessFlag PRIVATE;
      [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] [|java:nio:ServerSocketChannelImpl.socket|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:ServerSocketChannelImpl.<init>|] ([|java:nio:ServerSocketChannelImpl|] v1 @type (this), [|java:nio:channels:spi:SelectorProvider|] v2 @type (object)) @owner [|java:nio:ServerSocketChannelImpl|] @signature [|Ljava/nio/ServerSocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d886c.   call temp:=  [|java:nio:channels:ServerSocketChannel.<init>|](v1, v2) @signature [|Ljava/nio/channels/ServerSocketChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:ServerSocketChannel|] @type direct;
#L0d8872.   v0:= 0  @length 4;
#L0d8874.   v1.[|java:nio:ServerSocketChannelImpl.isBound|]  := v0 @boolean;
#L0d8878.   v0:= new [|java:lang:Object|];
#L0d887c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d8882.   v1.[|java:nio:ServerSocketChannelImpl.acceptLock|]  := v0 @type object;
#L0d8886.   v0:= new [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|];
#L0d888a.   call temp:=  [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.<init>|](v0, v1) @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.<init>:(Ljava/nio/ServerSocketChannelImpl;)V|] @classDescriptor [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @type direct;
#L0d8890.   v1.[|java:nio:ServerSocketChannelImpl.socket|]  := v0 @type object;
#L0d8894.   v0:= v1.[|java:nio:ServerSocketChannelImpl.socket|]   @type object;
#L0d8898.   call temp:=  [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.getImpl$|](v0) @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.getImpl$:()Ljava/net/SocketImpl;|] @classDescriptor [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @type virtual;
#L0d889e.   v0:= temp  @type object;
#L0d88a0.   v1.[|java:nio:ServerSocketChannelImpl.impl|]  := v0 @type object;
#L0d88a4.   return @void ;

   }
    procedure [|boolean|] [|java:nio:ServerSocketChannelImpl.access$000|] ([|java:nio:ServerSocketChannelImpl|] v1 @type (object)) @owner [|java:nio:ServerSocketChannelImpl|] @signature [|Ljava/nio/ServerSocketChannelImpl;.access$000:(Ljava/nio/ServerSocketChannelImpl;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L0d88b8.   v0:= v1.[|java:nio:ServerSocketChannelImpl.isBound|]   @boolean;
#L0d88bc.   return v0;

   }
    procedure [|boolean|] [|java:nio:ServerSocketChannelImpl.access$002|] ([|java:nio:ServerSocketChannelImpl|] v0 @type (object), [|boolean|] v1) @owner [|java:nio:ServerSocketChannelImpl|] @signature [|Ljava/nio/ServerSocketChannelImpl;.access$002:(Ljava/nio/ServerSocketChannelImpl;Z)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
      
#L0d88d0.   v0.[|java:nio:ServerSocketChannelImpl.isBound|]  := v1 @boolean;
#L0d88d4.   return v1;

   }
    procedure [|java:nio:channels:SocketChannel|] [|java:nio:ServerSocketChannelImpl.accept|] ([|java:nio:ServerSocketChannelImpl|] v5 @type (this)) @owner [|java:nio:ServerSocketChannelImpl|] @signature [|Ljava/nio/ServerSocketChannelImpl;.accept:()Ljava/nio/channels/SocketChannel;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d88e8.   call temp:=  [|java:nio:ServerSocketChannelImpl.isOpen|](v5) @signature [|Ljava/nio/ServerSocketChannelImpl;.isOpen:()Z|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d88ee.   v2:= temp;
#L0d88f0.   if v2 != 0 then goto L0d8900;
#L0d88f4.   v2:= new [|java:nio:channels:ClosedChannelException|];
#L0d88f8.   call temp:=  [|java:nio:channels:ClosedChannelException.<init>|](v2) @signature [|Ljava/nio/channels/ClosedChannelException;.<init>:()V|] @classDescriptor [|java:nio:channels:ClosedChannelException|] @type direct;
#L0d88fe.   throw v2;
#L0d8900.   v2:= v5.[|java:nio:ServerSocketChannelImpl.isBound|]   @boolean;
#L0d8904.   if v2 != 0 then goto L0d8914;
#L0d8908.   v2:= new [|java:nio:channels:NotYetBoundException|];
#L0d890c.   call temp:=  [|java:nio:channels:NotYetBoundException.<init>|](v2) @signature [|Ljava/nio/channels/NotYetBoundException;.<init>:()V|] @classDescriptor [|java:nio:channels:NotYetBoundException|] @type direct;
#L0d8912.   throw v2;
#L0d8914.   v1:= new [|java:nio:SocketChannelImpl|];
#L0d8918.   call temp:=  [|java:nio:ServerSocketChannelImpl.provider|](v5) @signature [|Ljava/nio/ServerSocketChannelImpl;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d891e.   v2:= temp  @type object;
#L0d8920.   v3:= 0  @length 4;
#L0d8922.   call temp:=  [|java:nio:SocketChannelImpl.<init>|](v1, v2, v3) @signature [|Ljava/nio/SocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d8928.   v0:= 0  @length 4;
#L0d892a.   call temp:=  [|java:nio:ServerSocketChannelImpl.begin|](v5) @signature [|Ljava/nio/ServerSocketChannelImpl;.begin:()V|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d8930.   v3:= v5.[|java:nio:ServerSocketChannelImpl.acceptLock|]   @type object;
#L0d8934.   (@monitorenter v3)
#L0d8936.   call temp:=  [|java:nio:ServerSocketChannelImpl.blockingLock|](v5) @signature [|Ljava/nio/ServerSocketChannelImpl;.blockingLock:()Ljava/lang/Object;|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d893c.   v4:= temp  @type object;
#L0d893e.   (@monitorenter v4)
#L0d8940.   v2:= v5.[|java:nio:ServerSocketChannelImpl.socket|]   @type object;
#L0d8944.   call temp:=  [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.implAccept|](v2, v1) @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.implAccept:(Ljava/nio/SocketChannelImpl;)Ljava/net/Socket;|] @classDescriptor [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @type virtual;
#L0d894a.   (@monitorexit v4)
#L0d894c.   (@monitorexit v3)
#L0d894e.   call temp:=  [|java:nio:SocketChannelImpl.socket|](v1) @signature [|Ljava/nio/SocketChannelImpl;.socket:()Ljava/net/Socket;|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d8954.   v2:= temp  @type object;
#L0d8956.   call temp:=  [|java:net:Socket.isConnected|](v2) @signature [|Ljava/net/Socket;.isConnected:()Z|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0d895c.   v2:= temp;
#L0d895e.   call temp:=  [|java:nio:ServerSocketChannelImpl.end|](v5, v2) @signature [|Ljava/nio/ServerSocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d8964.   call temp:=  [|java:nio:SocketChannelImpl.socket|](v1) @signature [|Ljava/nio/SocketChannelImpl;.socket:()Ljava/net/Socket;|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d896a.   v2:= temp  @type object;
#L0d896c.   call temp:=  [|java:net:Socket.isConnected|](v2) @signature [|Ljava/net/Socket;.isConnected:()Z|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0d8972.   v2:= temp;
#L0d8974.   if v2 == 0 then goto L0d89b0;
#L0d8978.   return v1  @type object;
#L0d897a.   v2:= Exception  @type object;
#L0d897c.   call temp:=  [|java:nio:ServerSocketChannelImpl.isBlocking|](v5) @signature [|Ljava/nio/ServerSocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d8982.   v2:= temp;
#L0d8984.   if v2 != 0 then goto L0d8940;
#L0d8988.   goto L0d894a;
#L0d898a.   v2:= Exception  @type object;
#L0d898c.   (@monitorexit v4)
#L0d898e.   throw v2;
#L0d8990.   v2:= Exception  @type object;
#L0d8992.   (@monitorexit v3)
#L0d8994.   throw v2;
#L0d8996.   v2:= Exception  @type object;
#L0d8998.   call temp:=  [|java:nio:SocketChannelImpl.socket|](v1) @signature [|Ljava/nio/SocketChannelImpl;.socket:()Ljava/net/Socket;|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d899e.   v3:= temp  @type object;
#L0d89a0.   call temp:=  [|java:net:Socket.isConnected|](v3) @signature [|Ljava/net/Socket;.isConnected:()Z|] @classDescriptor [|java:net:Socket|] @type virtual;
#L0d89a6.   v3:= temp;
#L0d89a8.   call temp:=  [|java:nio:ServerSocketChannelImpl.end|](v5, v3) @signature [|Ljava/nio/ServerSocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d89ae.   throw v2;
#L0d89b0.   v1:= 0  @length 4;
#L0d89b2.   goto L0d8978;
  catch  [|any|] @[L0d892a..L0d8936] goto L0d8996;
  catch  [|any|] @[L0d8936..L0d8940] goto L0d8990;
  catch  [|java:net:SocketTimeoutException|] @[L0d8940..L0d894a] goto L0d897a;
  catch  [|any|] @[L0d8940..L0d894a] goto L0d898a;
  catch  [|any|] @[L0d894a..L0d894c] goto L0d898a;
  catch  [|any|] @[L0d894c..L0d894e] goto L0d8990;
  catch  [|any|] @[L0d897c..L0d898e] goto L0d898a;
  catch  [|any|] @[L0d898e..L0d8994] goto L0d8990;
  catch  [|any|] @[L0d8994..L0d8996] goto L0d8996;

   }
    procedure [|java:io:FileDescriptor|] [|java:nio:ServerSocketChannelImpl.getFD|] ([|java:nio:ServerSocketChannelImpl|] v1 @type (this)) @owner [|java:nio:ServerSocketChannelImpl|] @signature [|Ljava/nio/ServerSocketChannelImpl;.getFD:()Ljava/io/FileDescriptor;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d8a10.   v0:= v1.[|java:nio:ServerSocketChannelImpl.impl|]   @type object;
#L0d8a14.   call temp:=  [|java:net:SocketImpl.getFD$|](v0) @signature [|Ljava/net/SocketImpl;.getFD$:()Ljava/io/FileDescriptor;|] @classDescriptor [|java:net:SocketImpl|] @type virtual;
#L0d8a1a.   v0:= temp  @type object;
#L0d8a1c.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:ServerSocketChannelImpl.implCloseSelectableChannel|] ([|java:nio:ServerSocketChannelImpl|] v1 @type (this)) @owner [|java:nio:ServerSocketChannelImpl|] @signature [|Ljava/nio/ServerSocketChannelImpl;.implCloseSelectableChannel:()V|] @Access PROTECTED_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0d8a30.   (@monitorenter v1)
#L0d8a32.   v0:= v1.[|java:nio:ServerSocketChannelImpl.socket|]   @type object;
#L0d8a36.   call temp:=  [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.isClosed|](v0) @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.isClosed:()Z|] @classDescriptor [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @type virtual;
#L0d8a3c.   v0:= temp;
#L0d8a3e.   if v0 != 0 then goto L0d8a4c;
#L0d8a42.   v0:= v1.[|java:nio:ServerSocketChannelImpl.socket|]   @type object;
#L0d8a46.   call temp:=  [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter.close|](v0) @signature [|Ljava/nio/ServerSocketChannelImpl$ServerSocketAdapter;.close:()V|] @classDescriptor [|java:nio:ServerSocketChannelImpl$ServerSocketAdapter|] @type virtual;
#L0d8a4c.   (@monitorexit v1)
#L0d8a4e.   return @void ;
#L0d8a50.   v0:= Exception  @type object;
#L0d8a52.   (@monitorexit v1)
#L0d8a54.   throw v0;
  catch  [|any|] @[L0d8a32..L0d8a4c] goto L0d8a50;

   }
    procedure [|void|] [|java:nio:ServerSocketChannelImpl.implConfigureBlocking|] ([|java:nio:ServerSocketChannelImpl|] v2 @type (this), [|boolean|] v3) @owner [|java:nio:ServerSocketChannelImpl|] @signature [|Ljava/nio/ServerSocketChannelImpl;.implConfigureBlocking:(Z)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0d8a74.   call temp:=  [|java:nio:ServerSocketChannelImpl.blockingLock|](v2) @signature [|Ljava/nio/ServerSocketChannelImpl;.blockingLock:()Ljava/lang/Object;|] @classDescriptor [|java:nio:ServerSocketChannelImpl|] @type virtual;
#L0d8a7a.   v1:= temp  @type object;
#L0d8a7c.   (@monitorenter v1)
#L0d8a7e.   v0:= v2.[|java:nio:ServerSocketChannelImpl.impl|]   @type object;
#L0d8a82.   call temp:=  [|java:net:SocketImpl.getFD$|](v0) @signature [|Ljava/net/SocketImpl;.getFD$:()Ljava/io/FileDescriptor;|] @classDescriptor [|java:net:SocketImpl|] @type virtual;
#L0d8a88.   v0:= temp  @type object;
#L0d8a8a.   call temp:=  [|libcore:io:IoUtils.setBlocking|](v0, v3) @signature [|Llibcore/io/IoUtils;.setBlocking:(Ljava/io/FileDescriptor;Z)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L0d8a90.   (@monitorexit v1)
#L0d8a92.   return @void ;
#L0d8a94.   v0:= Exception  @type object;
#L0d8a96.   (@monitorexit v1)
#L0d8a98.   throw v0;
  catch  [|any|] @[L0d8a7e..L0d8a98] goto L0d8a94;

   }
    procedure [|java:net:ServerSocket|] [|java:nio:ServerSocketChannelImpl.socket|] ([|java:nio:ServerSocketChannelImpl|] v1 @type (this)) @owner [|java:nio:ServerSocketChannelImpl|] @signature [|Ljava/nio/ServerSocketChannelImpl;.socket:()Ljava/net/ServerSocket;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d8ab8.   v0:= v1.[|java:nio:ServerSocketChannelImpl.socket|]   @type object;
#L0d8abc.   return v0  @type object;

   }
record [|java:nio:ShortToByteBufferAdapter|]  @type class @AccessFlag FINAL  extends [|java:nio:ShortBuffer|] {
      [|java:nio:ByteBuffer|] [|java:nio:ShortToByteBufferAdapter.byteBuffer|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:ShortToByteBufferAdapter.<init>|] ([|java:nio:ShortToByteBufferAdapter|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d8ad0.   call temp:=  [|java:nio:ByteBuffer.capacity|](v2) @signature [|Ljava/nio/ByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8ad6.   v0:= temp;
#L0d8ad8.   v0:= v0 / 2;
#L0d8adc.   call temp:=  [|java:nio:ShortBuffer.<init>|](v1, v0) @signature [|Ljava/nio/ShortBuffer;.<init>:(I)V|] @classDescriptor [|java:nio:ShortBuffer|] @type direct;
#L0d8ae2.   v1.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]  := v2 @type object;
#L0d8ae6.   v0:= v1.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8aea.   call temp:=  [|java:nio:ByteBuffer.clear|](v0) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8af0.   v0:= v2.[|java:nio:ByteBuffer.effectiveDirectAddress|] ;
#L0d8af4.   v1.[|java:nio:ShortToByteBufferAdapter.effectiveDirectAddress|]  := v0;
#L0d8af8.   return @void ;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortToByteBufferAdapter.asShortBuffer|] ([|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.asShortBuffer:(Ljava/nio/ByteBuffer;)Ljava/nio/ShortBuffer;|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L0d8b0c.   call temp:=  [|java:nio:ByteBuffer.slice|](v2) @signature [|Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8b12.   v0:= temp  @type object;
#L0d8b14.   call temp:=  [|java:nio:ByteBuffer.order|](v2) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8b1a.   v1:= temp  @type object;
#L0d8b1c.   call temp:=  [|java:nio:ByteBuffer.order|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8b22.   v1:= new [|java:nio:ShortToByteBufferAdapter|];
#L0d8b26.   call temp:=  [|java:nio:ShortToByteBufferAdapter.<init>|](v1, v0) @signature [|Ljava/nio/ShortToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:ShortToByteBufferAdapter|] @type direct;
#L0d8b2c.   return v1  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortToByteBufferAdapter.asReadOnlyBuffer|] ([|java:nio:ShortToByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.asReadOnlyBuffer:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d8b40.   v0:= new [|java:nio:ShortToByteBufferAdapter|];
#L0d8b44.   v1:= v3.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8b48.   call temp:=  [|java:nio:ByteBuffer.asReadOnlyBuffer|](v1) @signature [|Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8b4e.   v1:= temp  @type object;
#L0d8b50.   call temp:=  [|java:nio:ShortToByteBufferAdapter.<init>|](v0, v1) @signature [|Ljava/nio/ShortToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:ShortToByteBufferAdapter|] @type direct;
#L0d8b56.   v1:= v3.[|java:nio:ShortToByteBufferAdapter.limit|] ;
#L0d8b5a.   v0.[|java:nio:ShortToByteBufferAdapter.limit|]  := v1;
#L0d8b5e.   v1:= v3.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8b62.   v0.[|java:nio:ShortToByteBufferAdapter.position|]  := v1;
#L0d8b66.   v1:= v3.[|java:nio:ShortToByteBufferAdapter.mark|] ;
#L0d8b6a.   v0.[|java:nio:ShortToByteBufferAdapter.mark|]  := v1;
#L0d8b6e.   v1:= v0.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8b72.   v2:= v3.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8b76.   v2:= v2.[|java:nio:ByteBuffer.order|]   @type object;
#L0d8b7a.   v1.[|java:nio:ByteBuffer.order|]  := v2 @type object;
#L0d8b7e.   return v0  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortToByteBufferAdapter.compact|] ([|java:nio:ShortToByteBufferAdapter|] v2 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.compact:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d8b90.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8b94.   call temp:=  [|java:nio:ByteBuffer.isReadOnly|](v0) @signature [|Ljava/nio/ByteBuffer;.isReadOnly:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8b9a.   v0:= temp;
#L0d8b9c.   if v0 == 0 then goto L0d8bac;
#L0d8ba0.   v0:= new [|java:nio:ReadOnlyBufferException|];
#L0d8ba4.   call temp:=  [|java:nio:ReadOnlyBufferException.<init>|](v0) @signature [|Ljava/nio/ReadOnlyBufferException;.<init>:()V|] @classDescriptor [|java:nio:ReadOnlyBufferException|] @type direct;
#L0d8baa.   throw v0;
#L0d8bac.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8bb0.   v1:= v2.[|java:nio:ShortToByteBufferAdapter.limit|] ;
#L0d8bb4.   v1:= v1 * 2;
#L0d8bb8.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8bbe.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8bc2.   v1:= v2.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8bc6.   v1:= v1 * 2;
#L0d8bca.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8bd0.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8bd4.   call temp:=  [|java:nio:ByteBuffer.compact|](v0) @signature [|Ljava/nio/ByteBuffer;.compact:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8bda.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8bde.   call temp:=  [|java:nio:ByteBuffer.clear|](v0) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8be4.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.limit|] ;
#L0d8be8.   v1:= v2.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8bec.   v0:= v0 - v1  @type int;
#L0d8bee.   v2.[|java:nio:ShortToByteBufferAdapter.position|]  := v0;
#L0d8bf2.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.capacity|] ;
#L0d8bf6.   v2.[|java:nio:ShortToByteBufferAdapter.limit|]  := v0;
#L0d8bfa.   v0:= -1  @length 4;
#L0d8bfc.   v2.[|java:nio:ShortToByteBufferAdapter.mark|]  := v0;
#L0d8c00.   return v2  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortToByteBufferAdapter.duplicate|] ([|java:nio:ShortToByteBufferAdapter|] v4 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.duplicate:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d8c14.   v2:= v4.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8c18.   call temp:=  [|java:nio:ByteBuffer.duplicate|](v2) @signature [|Ljava/nio/ByteBuffer;.duplicate:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8c1e.   v2:= temp  @type object;
#L0d8c20.   v3:= v4.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8c24.   call temp:=  [|java:nio:ByteBuffer.order|](v3) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8c2a.   v3:= temp  @type object;
#L0d8c2c.   call temp:=  [|java:nio:ByteBuffer.order|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8c32.   v0:= temp  @type object;
#L0d8c34.   v1:= new [|java:nio:ShortToByteBufferAdapter|];
#L0d8c38.   call temp:=  [|java:nio:ShortToByteBufferAdapter.<init>|](v1, v0) @signature [|Ljava/nio/ShortToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:ShortToByteBufferAdapter|] @type direct;
#L0d8c3e.   v2:= v4.[|java:nio:ShortToByteBufferAdapter.limit|] ;
#L0d8c42.   v1.[|java:nio:ShortToByteBufferAdapter.limit|]  := v2;
#L0d8c46.   v2:= v4.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8c4a.   v1.[|java:nio:ShortToByteBufferAdapter.position|]  := v2;
#L0d8c4e.   v2:= v4.[|java:nio:ShortToByteBufferAdapter.mark|] ;
#L0d8c52.   v1.[|java:nio:ShortToByteBufferAdapter.mark|]  := v2;
#L0d8c56.   return v1  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortToByteBufferAdapter.get|] ([|java:nio:ShortToByteBufferAdapter|] v2 @type (this), [|short|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.get:([SII)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d8c68.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8c6c.   v1:= v2.[|java:nio:ShortToByteBufferAdapter.limit|] ;
#L0d8c70.   v1:= v1 * 2;
#L0d8c74.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8c7a.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8c7e.   v1:= v2.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8c82.   v1:= v1 * 2;
#L0d8c86.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8c8c.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8c90.   v0:= instanceof @varname v0 @type [|java:nio:DirectByteBuffer|];
#L0d8c94.   if v0 == 0 then goto L0d8cb2;
#L0d8c98.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8c9c.   v0:= ([|java:nio:DirectByteBuffer|])v0;
#L0d8ca0.   call temp:=  [|java:nio:DirectByteBuffer.get|](v0, v3, v4, v5) @signature [|Ljava/nio/DirectByteBuffer;.get:([SII)V|] @classDescriptor [|java:nio:DirectByteBuffer|] @type virtual;
#L0d8ca6.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8caa.   v0:= v0 + v5  @type int;
#L0d8cac.   v2.[|java:nio:ShortToByteBufferAdapter.position|]  := v0;
#L0d8cb0.   return v2  @type object;
#L0d8cb2.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8cb6.   v0:= ([|java:nio:HeapByteBuffer|])v0;
#L0d8cba.   call temp:=  [|java:nio:HeapByteBuffer.get|](v0, v3, v4, v5) @signature [|Ljava/nio/HeapByteBuffer;.get:([SII)V|] @classDescriptor [|java:nio:HeapByteBuffer|] @type virtual;
#L0d8cc0.   goto L0d8ca6;

   }
    procedure [|short|] [|java:nio:ShortToByteBufferAdapter.get|] ([|java:nio:ShortToByteBufferAdapter|] v3 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.get:()S|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d8cd4.   v0:= v3.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8cd8.   v1:= v3.[|java:nio:ShortToByteBufferAdapter.limit|] ;
#L0d8cdc.   if v0 != v1 then goto L0d8cec;
#L0d8ce0.   v0:= new [|java:nio:BufferUnderflowException|];
#L0d8ce4.   call temp:=  [|java:nio:BufferUnderflowException.<init>|](v0) @signature [|Ljava/nio/BufferUnderflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferUnderflowException|] @type direct;
#L0d8cea.   throw v0;
#L0d8cec.   v0:= v3.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8cf0.   v1:= v3.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8cf4.   v2:= v1 + 1;
#L0d8cf8.   v3.[|java:nio:ShortToByteBufferAdapter.position|]  := v2;
#L0d8cfc.   v1:= v1 * 2;
#L0d8d00.   call temp:=  [|java:nio:ByteBuffer.getShort|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.getShort:(I)S|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8d06.   v0:= temp;
#L0d8d08.   return v0;

   }
    procedure [|short|] [|java:nio:ShortToByteBufferAdapter.get|] ([|java:nio:ShortToByteBufferAdapter|] v2 @type (this), [|int|] v3) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.get:(I)S|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d8d1c.   call temp:=  [|java:nio:ShortToByteBufferAdapter.checkIndex|](v2, v3) @signature [|Ljava/nio/ShortToByteBufferAdapter;.checkIndex:(I)V|] @classDescriptor [|java:nio:ShortToByteBufferAdapter|] @type virtual;
#L0d8d22.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8d26.   v1:= v3 * 2;
#L0d8d2a.   call temp:=  [|java:nio:ByteBuffer.getShort|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.getShort:(I)S|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8d30.   v0:= temp;
#L0d8d32.   return v0;

   }
    procedure [|boolean|] [|java:nio:ShortToByteBufferAdapter.isDirect|] ([|java:nio:ShortToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.isDirect:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d8d44.   v0:= v1.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8d48.   call temp:=  [|java:nio:ByteBuffer.isDirect|](v0) @signature [|Ljava/nio/ByteBuffer;.isDirect:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8d4e.   v0:= temp;
#L0d8d50.   return v0;

   }
    procedure [|boolean|] [|java:nio:ShortToByteBufferAdapter.isReadOnly|] ([|java:nio:ShortToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.isReadOnly:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d8d64.   v0:= v1.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8d68.   call temp:=  [|java:nio:ByteBuffer.isReadOnly|](v0) @signature [|Ljava/nio/ByteBuffer;.isReadOnly:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8d6e.   v0:= temp;
#L0d8d70.   return v0;

   }
    procedure [|java:nio:ByteOrder|] [|java:nio:ShortToByteBufferAdapter.order|] ([|java:nio:ShortToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.order:()Ljava/nio/ByteOrder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d8d84.   v0:= v1.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8d88.   call temp:=  [|java:nio:ByteBuffer.order|](v0) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8d8e.   v0:= temp  @type object;
#L0d8d90.   return v0  @type object;

   }
    procedure [|short|][] [|java:nio:ShortToByteBufferAdapter.protectedArray|] ([|java:nio:ShortToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.protectedArray:()[S|] @Access  {
      local temp ;
        v0;
      
#L0d8da4.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0d8da8.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0d8dae.   throw v0;

   }
    procedure [|int|] [|java:nio:ShortToByteBufferAdapter.protectedArrayOffset|] ([|java:nio:ShortToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.protectedArrayOffset:()I|] @Access  {
      local temp ;
        v0;
      
#L0d8dc0.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0d8dc4.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0d8dca.   throw v0;

   }
    procedure [|boolean|] [|java:nio:ShortToByteBufferAdapter.protectedHasArray|] ([|java:nio:ShortToByteBufferAdapter|] v1 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.protectedHasArray:()Z|] @Access  {
      local temp ;
        v0;
      
#L0d8ddc.   v0:= 0  @length 4;
#L0d8dde.   return v0;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortToByteBufferAdapter.put|] ([|java:nio:ShortToByteBufferAdapter|] v2 @type (this), [|int|] v3, [|short|] v4) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.put:(IS)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d8df0.   call temp:=  [|java:nio:ShortToByteBufferAdapter.checkIndex|](v2, v3) @signature [|Ljava/nio/ShortToByteBufferAdapter;.checkIndex:(I)V|] @classDescriptor [|java:nio:ShortToByteBufferAdapter|] @type virtual;
#L0d8df6.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8dfa.   v1:= v3 * 2;
#L0d8dfe.   call temp:=  [|java:nio:ByteBuffer.putShort|](v0, v1, v4) @signature [|Ljava/nio/ByteBuffer;.putShort:(IS)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8e04.   return v2  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortToByteBufferAdapter.put|] ([|java:nio:ShortToByteBufferAdapter|] v3 @type (this), [|short|] v4) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.put:(S)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d8e18.   v0:= v3.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8e1c.   v1:= v3.[|java:nio:ShortToByteBufferAdapter.limit|] ;
#L0d8e20.   if v0 != v1 then goto L0d8e30;
#L0d8e24.   v0:= new [|java:nio:BufferOverflowException|];
#L0d8e28.   call temp:=  [|java:nio:BufferOverflowException.<init>|](v0) @signature [|Ljava/nio/BufferOverflowException;.<init>:()V|] @classDescriptor [|java:nio:BufferOverflowException|] @type direct;
#L0d8e2e.   throw v0;
#L0d8e30.   v0:= v3.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8e34.   v1:= v3.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8e38.   v2:= v1 + 1;
#L0d8e3c.   v3.[|java:nio:ShortToByteBufferAdapter.position|]  := v2;
#L0d8e40.   v1:= v1 * 2;
#L0d8e44.   call temp:=  [|java:nio:ByteBuffer.putShort|](v0, v1, v4) @signature [|Ljava/nio/ByteBuffer;.putShort:(IS)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8e4a.   return v3  @type object;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortToByteBufferAdapter.put|] ([|java:nio:ShortToByteBufferAdapter|] v2 @type (this), [|short|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.put:([SII)Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d8e5c.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8e60.   v1:= v2.[|java:nio:ShortToByteBufferAdapter.limit|] ;
#L0d8e64.   v1:= v1 * 2;
#L0d8e68.   call temp:=  [|java:nio:ByteBuffer.limit|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8e6e.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8e72.   v1:= v2.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8e76.   v1:= v1 * 2;
#L0d8e7a.   call temp:=  [|java:nio:ByteBuffer.position|](v0, v1) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8e80.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8e84.   v0:= instanceof @varname v0 @type [|java:nio:ReadWriteDirectByteBuffer|];
#L0d8e88.   if v0 == 0 then goto L0d8ea6;
#L0d8e8c.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8e90.   v0:= ([|java:nio:ReadWriteDirectByteBuffer|])v0;
#L0d8e94.   call temp:=  [|java:nio:ReadWriteDirectByteBuffer.put|](v0, v3, v4, v5) @signature [|Ljava/nio/ReadWriteDirectByteBuffer;.put:([SII)V|] @classDescriptor [|java:nio:ReadWriteDirectByteBuffer|] @type virtual;
#L0d8e9a.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8e9e.   v0:= v0 + v5  @type int;
#L0d8ea0.   v2.[|java:nio:ShortToByteBufferAdapter.position|]  := v0;
#L0d8ea4.   return v2  @type object;
#L0d8ea6.   v0:= v2.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8eaa.   v0:= ([|java:nio:ReadWriteHeapByteBuffer|])v0;
#L0d8eae.   call temp:=  [|java:nio:ReadWriteHeapByteBuffer.put|](v0, v3, v4, v5) @signature [|Ljava/nio/ReadWriteHeapByteBuffer;.put:([SII)V|] @classDescriptor [|java:nio:ReadWriteHeapByteBuffer|] @type virtual;
#L0d8eb4.   goto L0d8e9a;

   }
    procedure [|java:nio:ShortBuffer|] [|java:nio:ShortToByteBufferAdapter.slice|] ([|java:nio:ShortToByteBufferAdapter|] v4 @type (this)) @owner [|java:nio:ShortToByteBufferAdapter|] @signature [|Ljava/nio/ShortToByteBufferAdapter;.slice:()Ljava/nio/ShortBuffer;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0d8ec8.   v2:= v4.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8ecc.   v3:= v4.[|java:nio:ShortToByteBufferAdapter.limit|] ;
#L0d8ed0.   v3:= v3 * 2;
#L0d8ed4.   call temp:=  [|java:nio:ByteBuffer.limit|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8eda.   v2:= v4.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8ede.   v3:= v4.[|java:nio:ShortToByteBufferAdapter.position|] ;
#L0d8ee2.   v3:= v3 * 2;
#L0d8ee6.   call temp:=  [|java:nio:ByteBuffer.position|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8eec.   v2:= v4.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8ef0.   call temp:=  [|java:nio:ByteBuffer.slice|](v2) @signature [|Ljava/nio/ByteBuffer;.slice:()Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8ef6.   v2:= temp  @type object;
#L0d8ef8.   v3:= v4.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8efc.   call temp:=  [|java:nio:ByteBuffer.order|](v3) @signature [|Ljava/nio/ByteBuffer;.order:()Ljava/nio/ByteOrder;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8f02.   v3:= temp  @type object;
#L0d8f04.   call temp:=  [|java:nio:ByteBuffer.order|](v2, v3) @signature [|Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8f0a.   v0:= temp  @type object;
#L0d8f0c.   v1:= new [|java:nio:ShortToByteBufferAdapter|];
#L0d8f10.   call temp:=  [|java:nio:ShortToByteBufferAdapter.<init>|](v1, v0) @signature [|Ljava/nio/ShortToByteBufferAdapter;.<init>:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:ShortToByteBufferAdapter|] @type direct;
#L0d8f16.   v2:= v4.[|java:nio:ShortToByteBufferAdapter.byteBuffer|]   @type object;
#L0d8f1a.   call temp:=  [|java:nio:ByteBuffer.clear|](v2) @signature [|Ljava/nio/ByteBuffer;.clear:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d8f20.   return v1  @type object;

   }
record [|java:nio:SocketChannelImpl$SocketAdapter|]  @type class @AccessFlag   extends [|java:net:Socket|] {
      [|java:nio:SocketChannelImpl|] [|java:nio:SocketChannelImpl$SocketAdapter.channel|]    @AccessFlag PRIVATE_FINAL;
      [|java:net:PlainSocketImpl|] [|java:nio:SocketChannelImpl$SocketAdapter.socketImpl|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketAdapter.<init>|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v0 @type (this), [|java:net:PlainSocketImpl|] v1 @type (object), [|java:nio:SocketChannelImpl|] v2 @type (object)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.<init>:(Ljava/net/PlainSocketImpl;Ljava/nio/SocketChannelImpl;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0d8f34.   call temp:=  [|java:net:Socket.<init>|](v0, v1) @signature [|Ljava/net/Socket;.<init>:(Ljava/net/SocketImpl;)V|] @classDescriptor [|java:net:Socket|] @type direct;
#L0d8f3a.   v0.[|java:nio:SocketChannelImpl$SocketAdapter.socketImpl|]  := v1 @type object;
#L0d8f3e.   v0.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]  := v2 @type object;
#L0d8f42.   call temp:=  [|java:net:SocketUtils.setCreated|](v0) @signature [|Ljava/net/SocketUtils;.setCreated:(Ljava/net/Socket;)V|] @classDescriptor [|java:net:SocketUtils|] @type static;
#L0d8f48.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketAdapter.checkOpenAndConnected|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v2 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.checkOpenAndConnected:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0d8f5c.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d8f60.   call temp:=  [|java:nio:SocketChannelImpl.isOpen|](v0) @signature [|Ljava/nio/SocketChannelImpl;.isOpen:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d8f66.   v0:= temp;
#L0d8f68.   if v0 != 0 then goto L0d8f7c;
#L0d8f6c.   v0:= new [|java:net:SocketException|];
#L0d8f70.   v1:= "Socket is closed" @type (object, string);
#L0d8f74.   call temp:=  [|java:net:SocketException.<init>|](v0, v1) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0d8f7a.   throw v0;
#L0d8f7c.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d8f80.   call temp:=  [|java:nio:SocketChannelImpl.isConnected|](v0) @signature [|Ljava/nio/SocketChannelImpl;.isConnected:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d8f86.   v0:= temp;
#L0d8f88.   if v0 != 0 then goto L0d8f9c;
#L0d8f8c.   v0:= new [|java:net:SocketException|];
#L0d8f90.   v1:= "Socket is not connected" @type (object, string);
#L0d8f94.   call temp:=  [|java:net:SocketException.<init>|](v0, v1) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0d8f9a.   throw v0;
#L0d8f9c.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketAdapter.bind|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v2 @type (this), [|java:net:SocketAddress|] v3 @type (object)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.bind:(Ljava/net/SocketAddress;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d8fb0.   v1:= 1  @length 4;
#L0d8fb2.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d8fb6.   call temp:=  [|java:nio:SocketChannelImpl.isConnected|](v0) @signature [|Ljava/nio/SocketChannelImpl;.isConnected:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d8fbc.   v0:= temp;
#L0d8fbe.   if v0 == 0 then goto L0d8fce;
#L0d8fc2.   v0:= new [|java:nio:channels:AlreadyConnectedException|];
#L0d8fc6.   call temp:=  [|java:nio:channels:AlreadyConnectedException.<init>|](v0) @signature [|Ljava/nio/channels/AlreadyConnectedException;.<init>:()V|] @classDescriptor [|java:nio:channels:AlreadyConnectedException|] @type direct;
#L0d8fcc.   throw v0;
#L0d8fce.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d8fd2.   call temp:=  [|java:nio:SocketChannelImpl.access$200|](v0) @signature [|Ljava/nio/SocketChannelImpl;.access$200:(Ljava/nio/SocketChannelImpl;)I|] @classDescriptor [|java:nio:SocketChannelImpl|] @type static;
#L0d8fd8.   v0:= temp;
#L0d8fda.   if v1 != v0 then goto L0d8fea;
#L0d8fde.   v0:= new [|java:nio:channels:ConnectionPendingException|];
#L0d8fe2.   call temp:=  [|java:nio:channels:ConnectionPendingException.<init>|](v0) @signature [|Ljava/nio/channels/ConnectionPendingException;.<init>:()V|] @classDescriptor [|java:nio:channels:ConnectionPendingException|] @type direct;
#L0d8fe8.   throw v0;
#L0d8fea.   call temp:=  [|java:net:Socket.bind|](v2, v3) @signature [|Ljava/net/Socket;.bind:(Ljava/net/SocketAddress;)V|] @classDescriptor [|java:net:Socket|] @type super;
#L0d8ff0.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d8ff4.   call temp:=  [|java:nio:SocketChannelImpl.access$100|](v0) @signature [|Ljava/nio/SocketChannelImpl;.access$100:(Ljava/nio/SocketChannelImpl;)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type static;
#L0d8ffa.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d8ffe.   call temp:=  [|java:nio:SocketChannelImpl.access$002|](v0, v1) @signature [|Ljava/nio/SocketChannelImpl;.access$002:(Ljava/nio/SocketChannelImpl;Z)Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type static;
#L0d9004.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketAdapter.close|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v3 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d9018.   v1:= v3.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d901c.   (@monitorenter v1)
#L0d901e.   v0:= v3.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d9022.   call temp:=  [|java:nio:SocketChannelImpl.isOpen|](v0) @signature [|Ljava/nio/SocketChannelImpl;.isOpen:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9028.   v0:= temp;
#L0d902a.   if v0 == 0 then goto L0d9048;
#L0d902e.   v0:= v3.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d9032.   call temp:=  [|java:nio:SocketChannelImpl.close|](v0) @signature [|Ljava/nio/SocketChannelImpl;.close:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9038.   v0:= v3.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d903c.   v2:= 3  @length 4;
#L0d903e.   call temp:=  [|java:nio:SocketChannelImpl.access$202|](v0, v2) @signature [|Ljava/nio/SocketChannelImpl;.access$202:(Ljava/nio/SocketChannelImpl;I)I|] @classDescriptor [|java:nio:SocketChannelImpl|] @type static;
#L0d9044.   (@monitorexit v1)
#L0d9046.   return @void ;
#L0d9048.   call temp:=  [|java:net:Socket.close|](v3) @signature [|Ljava/net/Socket;.close:()V|] @classDescriptor [|java:net:Socket|] @type super;
#L0d904e.   goto L0d9038;
#L0d9050.   v0:= Exception  @type object;
#L0d9052.   (@monitorexit v1)
#L0d9054.   throw v0;
  catch  [|any|] @[L0d901e..L0d9054] goto L0d9050;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketAdapter.connect|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v2 @type (this), [|java:net:SocketAddress|] v3 @type (object), [|int|] v4) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.connect:(Ljava/net/SocketAddress;I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d9074.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d9078.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v0) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d907e.   v0:= temp;
#L0d9080.   if v0 != 0 then goto L0d9090;
#L0d9084.   v0:= new [|java:nio:channels:IllegalBlockingModeException|];
#L0d9088.   call temp:=  [|java:nio:channels:IllegalBlockingModeException.<init>|](v0) @signature [|Ljava/nio/channels/IllegalBlockingModeException;.<init>:()V|] @classDescriptor [|java:nio:channels:IllegalBlockingModeException|] @type direct;
#L0d908e.   throw v0;
#L0d9090.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.isConnected|](v2) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.isConnected:()Z|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type virtual;
#L0d9096.   v0:= temp;
#L0d9098.   if v0 == 0 then goto L0d90a8;
#L0d909c.   v0:= new [|java:nio:channels:AlreadyConnectedException|];
#L0d90a0.   call temp:=  [|java:nio:channels:AlreadyConnectedException.<init>|](v0) @signature [|Ljava/nio/channels/AlreadyConnectedException;.<init>:()V|] @classDescriptor [|java:nio:channels:AlreadyConnectedException|] @type direct;
#L0d90a6.   throw v0;
#L0d90a8.   call temp:=  [|java:net:Socket.connect|](v2, v3, v4) @signature [|Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V|] @classDescriptor [|java:net:Socket|] @type super;
#L0d90ae.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d90b2.   call temp:=  [|java:nio:SocketChannelImpl.access$100|](v0) @signature [|Ljava/nio/SocketChannelImpl;.access$100:(Ljava/nio/SocketChannelImpl;)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type static;
#L0d90b8.   call temp:=  [|java:net:Socket.isConnected|](v2) @signature [|Ljava/net/Socket;.isConnected:()Z|] @classDescriptor [|java:net:Socket|] @type super;
#L0d90be.   v0:= temp;
#L0d90c0.   if v0 == 0 then goto L0d90e0;
#L0d90c4.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d90c8.   call temp:=  [|java:nio:SocketChannelImpl.setConnected|](v0) @signature [|Ljava/nio/SocketChannelImpl;.setConnected:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d90ce.   v0:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d90d2.   call temp:=  [|java:net:Socket.isBound|](v2) @signature [|Ljava/net/Socket;.isBound:()Z|] @classDescriptor [|java:net:Socket|] @type super;
#L0d90d8.   v1:= temp;
#L0d90da.   call temp:=  [|java:nio:SocketChannelImpl.access$002|](v0, v1) @signature [|Ljava/nio/SocketChannelImpl;.access$002:(Ljava/nio/SocketChannelImpl;Z)Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type static;
#L0d90e0.   return @void ;

   }
    procedure [|java:nio:channels:SocketChannel|] [|java:nio:SocketChannelImpl$SocketAdapter.getChannel|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.getChannel:()Ljava/nio/channels/SocketChannel;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d90f4.   v0:= v1.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d90f8.   return v0  @type object;

   }
    procedure [|java:io:FileDescriptor|] [|java:nio:SocketChannelImpl$SocketAdapter.getFileDescriptor$|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.getFileDescriptor$:()Ljava/io/FileDescriptor;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d910c.   v0:= v1.[|java:nio:SocketChannelImpl$SocketAdapter.socketImpl|]   @type object;
#L0d9110.   call temp:=  [|java:net:PlainSocketImpl.getFD$|](v0) @signature [|Ljava/net/PlainSocketImpl;.getFD$:()Ljava/io/FileDescriptor;|] @classDescriptor [|java:net:PlainSocketImpl|] @type virtual;
#L0d9116.   v0:= temp  @type object;
#L0d9118.   return v0  @type object;

   }
    procedure [|java:io:InputStream|] [|java:nio:SocketChannelImpl$SocketAdapter.getInputStream|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v2 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.getInputStream:()Ljava/io/InputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d912c.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.checkOpenAndConnected|](v2) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.checkOpenAndConnected:()V|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type direct;
#L0d9132.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.isInputShutdown|](v2) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.isInputShutdown:()Z|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type virtual;
#L0d9138.   v0:= temp;
#L0d913a.   if v0 == 0 then goto L0d914e;
#L0d913e.   v0:= new [|java:net:SocketException|];
#L0d9142.   v1:= "Socket input is shutdown" @type (object, string);
#L0d9146.   call temp:=  [|java:net:SocketException.<init>|](v0, v1) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0d914c.   throw v0;
#L0d914e.   v0:= new [|java:nio:SocketChannelImpl$SocketChannelInputStream|];
#L0d9152.   v1:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d9156.   call temp:=  [|java:nio:SocketChannelImpl$SocketChannelInputStream.<init>|](v0, v1) @signature [|Ljava/nio/SocketChannelImpl$SocketChannelInputStream;.<init>:(Ljava/nio/channels/SocketChannel;)V|] @classDescriptor [|java:nio:SocketChannelImpl$SocketChannelInputStream|] @type direct;
#L0d915c.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|java:nio:SocketChannelImpl$SocketAdapter.getLocalAddress|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v2 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.getLocalAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d9170.   v1:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d9174.   call temp:=  [|java:nio:SocketChannelImpl.getLocalAddress|](v1) @signature [|Ljava/nio/SocketChannelImpl;.getLocalAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d917a.   v1:= temp  @type object;
#L0d917c.   return v1  @type object;
#L0d917e.   v0:= Exception  @type object;
#L0d9180.   v1:= 0  @length 4;
#L0d9182.   goto L0d917c;
  catch  [|java:net:UnknownHostException|] @[L0d9170..L0d917a] goto L0d917e;

   }
    procedure [|java:io:OutputStream|] [|java:nio:SocketChannelImpl$SocketAdapter.getOutputStream|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v2 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.getOutputStream:()Ljava/io/OutputStream;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d91a4.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.checkOpenAndConnected|](v2) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.checkOpenAndConnected:()V|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type direct;
#L0d91aa.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.isOutputShutdown|](v2) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.isOutputShutdown:()Z|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type virtual;
#L0d91b0.   v0:= temp;
#L0d91b2.   if v0 == 0 then goto L0d91c6;
#L0d91b6.   v0:= new [|java:net:SocketException|];
#L0d91ba.   v1:= "Socket output is shutdown" @type (object, string);
#L0d91be.   call temp:=  [|java:net:SocketException.<init>|](v0, v1) @signature [|Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:net:SocketException|] @type direct;
#L0d91c4.   throw v0;
#L0d91c6.   v0:= new [|java:nio:SocketChannelImpl$SocketChannelOutputStream|];
#L0d91ca.   v1:= v2.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d91ce.   call temp:=  [|java:nio:SocketChannelImpl$SocketChannelOutputStream.<init>|](v0, v1) @signature [|Ljava/nio/SocketChannelImpl$SocketChannelOutputStream;.<init>:(Ljava/nio/channels/SocketChannel;)V|] @classDescriptor [|java:nio:SocketChannelImpl$SocketChannelOutputStream|] @type direct;
#L0d91d4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:SocketChannelImpl$SocketAdapter.isBound|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.isBound:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d91e8.   v0:= v1.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d91ec.   call temp:=  [|java:nio:SocketChannelImpl.access$000|](v0) @signature [|Ljava/nio/SocketChannelImpl;.access$000:(Ljava/nio/SocketChannelImpl;)Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type static;
#L0d91f2.   v0:= temp;
#L0d91f4.   return v0;

   }
    procedure [|boolean|] [|java:nio:SocketChannelImpl$SocketAdapter.isConnected|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.isConnected:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d9208.   v0:= v1.[|java:nio:SocketChannelImpl$SocketAdapter.channel|]   @type object;
#L0d920c.   call temp:=  [|java:nio:SocketChannelImpl.isConnected|](v0) @signature [|Ljava/nio/SocketChannelImpl;.isConnected:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9212.   v0:= temp;
#L0d9214.   return v0;

   }
    procedure [|java:net:PlainSocketImpl|] [|java:nio:SocketChannelImpl$SocketAdapter.socketImpl|] ([|java:nio:SocketChannelImpl$SocketAdapter|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketAdapter|] @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.socketImpl:()Ljava/net/PlainSocketImpl;|] @Access  {
      local temp ;
        v0;
      
#L0d9228.   v0:= v1.[|java:nio:SocketChannelImpl$SocketAdapter.socketImpl|]   @type object;
#L0d922c.   return v0  @type object;

   }
record [|java:nio:SocketChannelImpl$SocketChannelInputStream|]  @type class @AccessFlag   extends [|java:io:InputStream|] {
      [|java:nio:channels:SocketChannel|] [|java:nio:SocketChannelImpl$SocketChannelInputStream.channel|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketChannelInputStream.<init>|] ([|java:nio:SocketChannelImpl$SocketChannelInputStream|] v0 @type (this), [|java:nio:channels:SocketChannel|] v1 @type (object)) @owner [|java:nio:SocketChannelImpl$SocketChannelInputStream|] @signature [|Ljava/nio/SocketChannelImpl$SocketChannelInputStream;.<init>:(Ljava/nio/channels/SocketChannel;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d9240.   call temp:=  [|java:io:InputStream.<init>|](v0) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L0d9246.   v0.[|java:nio:SocketChannelImpl$SocketChannelInputStream.channel|]  := v1 @type object;
#L0d924a.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketChannelInputStream.close|] ([|java:nio:SocketChannelImpl$SocketChannelInputStream|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketChannelInputStream|] @signature [|Ljava/nio/SocketChannelImpl$SocketChannelInputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d925c.   v0:= v1.[|java:nio:SocketChannelImpl$SocketChannelInputStream.channel|]   @type object;
#L0d9260.   call temp:=  [|java:nio:channels:SocketChannel.close|](v0) @signature [|Ljava/nio/channels/SocketChannel;.close:()V|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d9266.   return @void ;

   }
    procedure [|int|] [|java:nio:SocketChannelImpl$SocketChannelInputStream.read|] ([|java:nio:SocketChannelImpl$SocketChannelInputStream|] v3 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketChannelInputStream|] @signature [|Ljava/nio/SocketChannelImpl$SocketChannelInputStream;.read:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d9278.   v2:= v3.[|java:nio:SocketChannelImpl$SocketChannelInputStream.channel|]   @type object;
#L0d927c.   call temp:=  [|java:nio:channels:SocketChannel.isBlocking|](v2) @signature [|Ljava/nio/channels/SocketChannel;.isBlocking:()Z|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d9282.   v2:= temp;
#L0d9284.   if v2 != 0 then goto L0d9294;
#L0d9288.   v2:= new [|java:nio:channels:IllegalBlockingModeException|];
#L0d928c.   call temp:=  [|java:nio:channels:IllegalBlockingModeException.<init>|](v2) @signature [|Ljava/nio/channels/IllegalBlockingModeException;.<init>:()V|] @classDescriptor [|java:nio:channels:IllegalBlockingModeException|] @type direct;
#L0d9292.   throw v2;
#L0d9294.   v2:= 1  @length 4;
#L0d9296.   call temp:=  [|java:nio:ByteBuffer.allocate|](v2) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0d929c.   v0:= temp  @type object;
#L0d929e.   v2:= v3.[|java:nio:SocketChannelImpl$SocketChannelInputStream.channel|]   @type object;
#L0d92a2.   call temp:=  [|java:nio:channels:SocketChannel.read|](v2, v0) @signature [|Ljava/nio/channels/SocketChannel;.read:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d92a8.   v1:= temp;
#L0d92aa.   v2:= -1  @length 4;
#L0d92ac.   if v1 != v2 then goto L0d92b2;
#L0d92b0.   return v1;
#L0d92b2.   v2:= 0  @length 4;
#L0d92b4.   call temp:=  [|java:nio:ByteBuffer.get|](v0, v2) @signature [|Ljava/nio/ByteBuffer;.get:(I)B|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d92ba.   v2:= temp;
#L0d92bc.   v1:= v2 ^& 255;
#L0d92c0.   goto L0d92b0;

   }
    procedure [|int|] [|java:nio:SocketChannelImpl$SocketChannelInputStream.read|] ([|java:nio:SocketChannelImpl$SocketChannelInputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:SocketChannelImpl$SocketChannelInputStream|] @signature [|Ljava/nio/SocketChannelImpl$SocketChannelInputStream;.read:([BII)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d92d4.   v1:= v3.length;
#L0d92d6.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d92dc.   v1:= v2.[|java:nio:SocketChannelImpl$SocketChannelInputStream.channel|]   @type object;
#L0d92e0.   call temp:=  [|java:nio:channels:SocketChannel.isBlocking|](v1) @signature [|Ljava/nio/channels/SocketChannel;.isBlocking:()Z|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d92e6.   v1:= temp;
#L0d92e8.   if v1 != 0 then goto L0d92f8;
#L0d92ec.   v1:= new [|java:nio:channels:IllegalBlockingModeException|];
#L0d92f0.   call temp:=  [|java:nio:channels:IllegalBlockingModeException.<init>|](v1) @signature [|Ljava/nio/channels/IllegalBlockingModeException;.<init>:()V|] @classDescriptor [|java:nio:channels:IllegalBlockingModeException|] @type direct;
#L0d92f6.   throw v1;
#L0d92f8.   call temp:=  [|java:nio:ByteBuffer.wrap|](v3, v4, v5) @signature [|Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0d92fe.   v0:= temp  @type object;
#L0d9300.   v1:= v2.[|java:nio:SocketChannelImpl$SocketChannelInputStream.channel|]   @type object;
#L0d9304.   call temp:=  [|java:nio:channels:SocketChannel.read|](v1, v0) @signature [|Ljava/nio/channels/SocketChannel;.read:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d930a.   v1:= temp;
#L0d930c.   return v1;

   }
record [|java:nio:SocketChannelImpl$SocketChannelOutputStream|]  @type class @AccessFlag   extends [|java:io:OutputStream|] {
      [|java:nio:channels:SocketChannel|] [|java:nio:SocketChannelImpl$SocketChannelOutputStream.channel|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketChannelOutputStream.<init>|] ([|java:nio:SocketChannelImpl$SocketChannelOutputStream|] v0 @type (this), [|java:nio:channels:SocketChannel|] v1 @type (object)) @owner [|java:nio:SocketChannelImpl$SocketChannelOutputStream|] @signature [|Ljava/nio/SocketChannelImpl$SocketChannelOutputStream;.<init>:(Ljava/nio/channels/SocketChannel;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d9320.   call temp:=  [|java:io:OutputStream.<init>|](v0) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L0d9326.   v0.[|java:nio:SocketChannelImpl$SocketChannelOutputStream.channel|]  := v1 @type object;
#L0d932a.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketChannelOutputStream.close|] ([|java:nio:SocketChannelImpl$SocketChannelOutputStream|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl$SocketChannelOutputStream|] @signature [|Ljava/nio/SocketChannelImpl$SocketChannelOutputStream;.close:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d933c.   v0:= v1.[|java:nio:SocketChannelImpl$SocketChannelOutputStream.channel|]   @type object;
#L0d9340.   call temp:=  [|java:nio:channels:SocketChannel.close|](v0) @signature [|Ljava/nio/channels/SocketChannel;.close:()V|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d9346.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketChannelOutputStream.write|] ([|java:nio:SocketChannelImpl$SocketChannelOutputStream|] v3 @type (this), [|int|] v4) @owner [|java:nio:SocketChannelImpl$SocketChannelOutputStream|] @signature [|Ljava/nio/SocketChannelImpl$SocketChannelOutputStream;.write:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d9358.   v1:= v3.[|java:nio:SocketChannelImpl$SocketChannelOutputStream.channel|]   @type object;
#L0d935c.   call temp:=  [|java:nio:channels:SocketChannel.isBlocking|](v1) @signature [|Ljava/nio/channels/SocketChannel;.isBlocking:()Z|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d9362.   v1:= temp;
#L0d9364.   if v1 != 0 then goto L0d9374;
#L0d9368.   v1:= new [|java:nio:channels:IllegalBlockingModeException|];
#L0d936c.   call temp:=  [|java:nio:channels:IllegalBlockingModeException.<init>|](v1) @signature [|Ljava/nio/channels/IllegalBlockingModeException;.<init>:()V|] @classDescriptor [|java:nio:channels:IllegalBlockingModeException|] @type direct;
#L0d9372.   throw v1;
#L0d9374.   v1:= 1  @length 4;
#L0d9376.   call temp:=  [|java:nio:ByteBuffer.allocate|](v1) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0d937c.   v0:= temp  @type object;
#L0d937e.   v1:= 0  @length 4;
#L0d9380.   v2:= v4 ^& 255;
#L0d9384.   v2:= (byte)v2  @type i2b;
#L0d9386.   call temp:=  [|java:nio:ByteBuffer.put|](v0, v1, v2) @signature [|Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d938c.   v1:= v3.[|java:nio:SocketChannelImpl$SocketChannelOutputStream.channel|]   @type object;
#L0d9390.   call temp:=  [|java:nio:channels:SocketChannel.write|](v1, v0) @signature [|Ljava/nio/channels/SocketChannel;.write:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d9396.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl$SocketChannelOutputStream.write|] ([|java:nio:SocketChannelImpl$SocketChannelOutputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:SocketChannelImpl$SocketChannelOutputStream|] @signature [|Ljava/nio/SocketChannelImpl$SocketChannelOutputStream;.write:([BII)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d93a8.   v1:= v3.length;
#L0d93aa.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v1, v4, v5) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d93b0.   call temp:=  [|java:nio:ByteBuffer.wrap|](v3, v4, v5) @signature [|Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0d93b6.   v0:= temp  @type object;
#L0d93b8.   v1:= v2.[|java:nio:SocketChannelImpl$SocketChannelOutputStream.channel|]   @type object;
#L0d93bc.   call temp:=  [|java:nio:channels:SocketChannel.isBlocking|](v1) @signature [|Ljava/nio/channels/SocketChannel;.isBlocking:()Z|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d93c2.   v1:= temp;
#L0d93c4.   if v1 != 0 then goto L0d93d4;
#L0d93c8.   v1:= new [|java:nio:channels:IllegalBlockingModeException|];
#L0d93cc.   call temp:=  [|java:nio:channels:IllegalBlockingModeException.<init>|](v1) @signature [|Ljava/nio/channels/IllegalBlockingModeException;.<init>:()V|] @classDescriptor [|java:nio:channels:IllegalBlockingModeException|] @type direct;
#L0d93d2.   throw v1;
#L0d93d4.   v1:= v2.[|java:nio:SocketChannelImpl$SocketChannelOutputStream.channel|]   @type object;
#L0d93d8.   call temp:=  [|java:nio:channels:SocketChannel.write|](v1, v0) @signature [|Ljava/nio/channels/SocketChannel;.write:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d93de.   return @void ;

   }
record [|java:nio:channels:SocketChannel|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:nio:channels:spi:AbstractSelectableChannel|], [|java:nio:channels:ByteChannel|], [|java:nio:channels:ScatteringByteChannel|], [|java:nio:channels:GatheringByteChannel|] {
   }
    procedure [|void|] [|java:nio:channels:SocketChannel.<init>|] ([|java:nio:channels:SocketChannel|] v0 @type (this), [|java:nio:channels:spi:SelectorProvider|] v1 @type (object)) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0d93f0.   call temp:=  [|java:nio:channels:spi:AbstractSelectableChannel.<init>|](v0, v1) @signature [|Ljava/nio/channels/spi/AbstractSelectableChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:spi:AbstractSelectableChannel|] @type direct;
#L0d93f6.   return @void ;

   }
    procedure [|java:nio:channels:SocketChannel|] [|java:nio:channels:SocketChannel.open|] () @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.open:()Ljava/nio/channels/SocketChannel;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d9408.   call temp:=  [|java:nio:channels:spi:SelectorProvider.provider|]() @signature [|Ljava/nio/channels/spi/SelectorProvider;.provider:()Ljava/nio/channels/spi/SelectorProvider;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type static;
#L0d940e.   v0:= temp  @type object;
#L0d9410.   call temp:=  [|java:nio:channels:spi:SelectorProvider.openSocketChannel|](v0) @signature [|Ljava/nio/channels/spi/SelectorProvider;.openSocketChannel:()Ljava/nio/channels/SocketChannel;|] @classDescriptor [|java:nio:channels:spi:SelectorProvider|] @type virtual;
#L0d9416.   v0:= temp  @type object;
#L0d9418.   return v0  @type object;

   }
    procedure [|java:nio:channels:SocketChannel|] [|java:nio:channels:SocketChannel.open|] ([|java:net:SocketAddress|] v1 @type (object)) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.open:(Ljava/net/SocketAddress;)Ljava/nio/channels/SocketChannel;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0d942c.   call temp:=  [|java:nio:channels:SocketChannel.open|]() @signature [|Ljava/nio/channels/SocketChannel;.open:()Ljava/nio/channels/SocketChannel;|] @classDescriptor [|java:nio:channels:SocketChannel|] @type static;
#L0d9432.   v0:= temp  @type object;
#L0d9434.   if v0 == 0 then goto L0d943e;
#L0d9438.   call temp:=  [|java:nio:channels:SocketChannel.connect|](v0, v1) @signature [|Ljava/nio/channels/SocketChannel;.connect:(Ljava/net/SocketAddress;)Z|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d943e.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:channels:SocketChannel.connect|] ([|java:net:SocketAddress|] v0 @type (object)) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.connect:(Ljava/net/SocketAddress;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:channels:SocketChannel.finishConnect|] () @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.finishConnect:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:channels:SocketChannel.isConnected|] () @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.isConnected:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:nio:channels:SocketChannel.isConnectionPending|] () @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.isConnectionPending:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:channels:SocketChannel.read|] ([|java:nio:ByteBuffer|] v0 @type (object)) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.read:(Ljava/nio/ByteBuffer;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:nio:channels:SocketChannel.read|] ([|java:nio:channels:SocketChannel|] v2 @type (this), [|java:nio:ByteBuffer|][] v3 @type (object)) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.read:([Ljava/nio/ByteBuffer;)J|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0d9450.   (@monitorenter v2)
#L0d9452.   v0:= 0  @length 4;
#L0d9454.   v1:= v3.length;
#L0d9456.   call temp:=  [|java:nio:channels:SocketChannel.read|](v2, v3, v0, v1) @signature [|Ljava/nio/channels/SocketChannel;.read:([Ljava/nio/ByteBuffer;II)J|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d945c.   v0:= temp  @type wide;
#L0d945e.   (@monitorexit v2)
#L0d9460.   return v0  @type wide;
#L0d9462.   v0:= Exception  @type object;
#L0d9464.   (@monitorexit v2)
#L0d9466.   throw v0;
  catch  [|any|] @[L0d9454..L0d945c] goto L0d9462;

   }
    procedure [|long|] [|java:nio:channels:SocketChannel.read|] ([|java:nio:ByteBuffer|][] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.read:([Ljava/nio/ByteBuffer;II)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:Socket|] [|java:nio:channels:SocketChannel.socket|] () @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.socket:()Ljava/net/Socket;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:nio:channels:SocketChannel.validOps|] ([|java:nio:channels:SocketChannel|] v1 @type (this)) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.validOps:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0d9484.   v0:= 13  @length 16;
#L0d9488.   return v0;

   }
    procedure [|int|] [|java:nio:channels:SocketChannel.write|] ([|java:nio:ByteBuffer|] v0 @type (object)) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.write:(Ljava/nio/ByteBuffer;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:nio:channels:SocketChannel.write|] ([|java:nio:channels:SocketChannel|] v2 @type (this), [|java:nio:ByteBuffer|][] v3 @type (object)) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.write:([Ljava/nio/ByteBuffer;)J|] @Access PUBLIC_FINAL_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0d949c.   (@monitorenter v2)
#L0d949e.   v0:= 0  @length 4;
#L0d94a0.   v1:= v3.length;
#L0d94a2.   call temp:=  [|java:nio:channels:SocketChannel.write|](v2, v3, v0, v1) @signature [|Ljava/nio/channels/SocketChannel;.write:([Ljava/nio/ByteBuffer;II)J|] @classDescriptor [|java:nio:channels:SocketChannel|] @type virtual;
#L0d94a8.   v0:= temp  @type wide;
#L0d94aa.   (@monitorexit v2)
#L0d94ac.   return v0  @type wide;
#L0d94ae.   v0:= Exception  @type object;
#L0d94b0.   (@monitorexit v2)
#L0d94b2.   throw v0;
  catch  [|any|] @[L0d94a0..L0d94a8] goto L0d94ae;

   }
    procedure [|long|] [|java:nio:channels:SocketChannel.write|] ([|java:nio:ByteBuffer|][] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|java:nio:channels:SocketChannel|] @signature [|Ljava/nio/channels/SocketChannel;.write:([Ljava/nio/ByteBuffer;II)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:nio:SocketChannelImpl|]  @type class @AccessFlag   extends [|java:nio:channels:SocketChannel|], [|java:nio:FileDescriptorChannel|] {
      [|java:net:InetSocketAddress|] [|java:nio:SocketChannelImpl.connectAddress|]    @AccessFlag PRIVATE;
      [|java:io:FileDescriptor|] [|java:nio:SocketChannelImpl.fd|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:nio:SocketChannelImpl.isBound|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:net:InetAddress|] [|java:nio:SocketChannelImpl.localAddress|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:SocketChannelImpl.localPort|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:nio:SocketChannelImpl.readLock|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:SocketChannelImpl$SocketAdapter|] [|java:nio:SocketChannelImpl.socket|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:SocketChannelImpl.status|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:nio:SocketChannelImpl.writeLock|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|java:nio:SocketChannelImpl.SOCKET_STATUS_CLOSED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:SocketChannelImpl.SOCKET_STATUS_CONNECTED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:SocketChannelImpl.SOCKET_STATUS_PENDING|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:SocketChannelImpl.SOCKET_STATUS_UNCONNECTED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:SocketChannelImpl.SOCKET_STATUS_UNINITIALIZED|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:SocketChannelImpl.<init>|] ([|java:nio:SocketChannelImpl|] v1 @type (this), [|java:nio:channels:spi:SelectorProvider|] v2 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d94d0.   v0:= 1  @length 4;
#L0d94d2.   call temp:=  [|java:nio:SocketChannelImpl.<init>|](v1, v2, v0) @signature [|Ljava/nio/SocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d94d8.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.<init>|] ([|java:nio:SocketChannelImpl|] v1 @type (this), [|java:nio:channels:spi:SelectorProvider|] v2 @type (object), [|java:io:FileDescriptor|] v3 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;Ljava/io/FileDescriptor;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0d94ec.   v0:= 0  @length 4;
#L0d94ee.   call temp:=  [|java:nio:channels:SocketChannel.<init>|](v1, v2) @signature [|Ljava/nio/channels/SocketChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:SocketChannel|] @type direct;
#L0d94f4.   v1.[|java:nio:SocketChannelImpl.socket|]  := v0 @type object;
#L0d94f8.   v1.[|java:nio:SocketChannelImpl.connectAddress|]  := v0 @type object;
#L0d94fc.   v1.[|java:nio:SocketChannelImpl.localAddress|]  := v0 @type object;
#L0d9500.   v0:= -1  @length 4;
#L0d9502.   v1.[|java:nio:SocketChannelImpl.status|]  := v0;
#L0d9506.   v0:= 0  @length 4;
#L0d9508.   v1.[|java:nio:SocketChannelImpl.isBound|]  := v0 @boolean;
#L0d950c.   v0:= new [|java:lang:Object|];
#L0d9510.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d9516.   v1.[|java:nio:SocketChannelImpl.readLock|]  := v0 @type object;
#L0d951a.   v0:= new [|java:lang:Object|];
#L0d951e.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d9524.   v1.[|java:nio:SocketChannelImpl.writeLock|]  := v0 @type object;
#L0d9528.   v0:= 2  @length 4;
#L0d952a.   v1.[|java:nio:SocketChannelImpl.status|]  := v0;
#L0d952e.   v1.[|java:nio:SocketChannelImpl.fd|]  := v3 @type object;
#L0d9532.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.<init>|] ([|java:nio:SocketChannelImpl|] v2 @type (this), [|java:nio:channels:spi:SelectorProvider|] v3 @type (object), [|boolean|] v4) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.<init>:(Ljava/nio/channels/spi/SelectorProvider;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0d9544.   v1:= 0  @length 4;
#L0d9546.   v0:= 0  @length 4;
#L0d9548.   call temp:=  [|java:nio:channels:SocketChannel.<init>|](v2, v3) @signature [|Ljava/nio/channels/SocketChannel;.<init>:(Ljava/nio/channels/spi/SelectorProvider;)V|] @classDescriptor [|java:nio:channels:SocketChannel|] @type direct;
#L0d954e.   v2.[|java:nio:SocketChannelImpl.socket|]  := v0 @type object;
#L0d9552.   v2.[|java:nio:SocketChannelImpl.connectAddress|]  := v0 @type object;
#L0d9556.   v2.[|java:nio:SocketChannelImpl.localAddress|]  := v0 @type object;
#L0d955a.   v0:= -1  @length 4;
#L0d955c.   v2.[|java:nio:SocketChannelImpl.status|]  := v0;
#L0d9560.   v2.[|java:nio:SocketChannelImpl.isBound|]  := v1 @boolean;
#L0d9564.   v0:= new [|java:lang:Object|];
#L0d9568.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d956e.   v2.[|java:nio:SocketChannelImpl.readLock|]  := v0 @type object;
#L0d9572.   v0:= new [|java:lang:Object|];
#L0d9576.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0d957c.   v2.[|java:nio:SocketChannelImpl.writeLock|]  := v0 @type object;
#L0d9580.   v2.[|java:nio:SocketChannelImpl.status|]  := v1;
#L0d9584.   if v4 == 0 then goto L0d9598;
#L0d9588.   v0:= 1  @length 4;
#L0d958a.   call temp:=  [|libcore:io:IoBridge.socket|](v0) @signature [|Llibcore/io/IoBridge;.socket:(Z)Ljava/io/FileDescriptor;|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L0d9590.   v0:= temp  @type object;
#L0d9592.   v2.[|java:nio:SocketChannelImpl.fd|]  := v0 @type object;
#L0d9596.   return @void ;
#L0d9598.   v0:= new [|java:io:FileDescriptor|];
#L0d959c.   call temp:=  [|java:io:FileDescriptor.<init>|](v0) @signature [|Ljava/io/FileDescriptor;.<init>:()V|] @classDescriptor [|java:io:FileDescriptor|] @type direct;
#L0d95a2.   goto L0d9592;

   }
    procedure [|boolean|] [|java:nio:SocketChannelImpl.access$000|] ([|java:nio:SocketChannelImpl|] v1 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.access$000:(Ljava/nio/SocketChannelImpl;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L0d95b4.   v0:= v1.[|java:nio:SocketChannelImpl.isBound|]   @boolean;
#L0d95b8.   return v0;

   }
    procedure [|boolean|] [|java:nio:SocketChannelImpl.access$002|] ([|java:nio:SocketChannelImpl|] v0 @type (object), [|boolean|] v1) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.access$002:(Ljava/nio/SocketChannelImpl;Z)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
      
#L0d95cc.   v0.[|java:nio:SocketChannelImpl.isBound|]  := v1 @boolean;
#L0d95d0.   return v1;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.access$100|] ([|java:nio:SocketChannelImpl|] v0 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.access$100:(Ljava/nio/SocketChannelImpl;)V|] @Access STATIC_SYNTHETIC {
      local temp ;
      
#L0d95e4.   call temp:=  [|java:nio:SocketChannelImpl.initLocalAddressAndPort|](v0) @signature [|Ljava/nio/SocketChannelImpl;.initLocalAddressAndPort:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d95ea.   return @void ;

   }
    procedure [|int|] [|java:nio:SocketChannelImpl.access$200|] ([|java:nio:SocketChannelImpl|] v1 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.access$200:(Ljava/nio/SocketChannelImpl;)I|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L0d95fc.   v0:= v1.[|java:nio:SocketChannelImpl.status|] ;
#L0d9600.   return v0;

   }
    procedure [|int|] [|java:nio:SocketChannelImpl.access$202|] ([|java:nio:SocketChannelImpl|] v0 @type (object), [|int|] v1) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.access$202:(Ljava/nio/SocketChannelImpl;I)I|] @Access STATIC_SYNTHETIC {
      local temp ;
      
#L0d9614.   v0.[|java:nio:SocketChannelImpl.status|]  := v1;
#L0d9618.   return v1;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.checkOpenConnected|] ([|java:nio:SocketChannelImpl|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.checkOpenConnected:()V|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0d962c.   (@monitorenter v1)
#L0d962e.   call temp:=  [|java:nio:SocketChannelImpl.isOpen|](v1) @signature [|Ljava/nio/SocketChannelImpl;.isOpen:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9634.   v0:= temp;
#L0d9636.   if v0 != 0 then goto L0d964c;
#L0d963a.   v0:= new [|java:nio:channels:ClosedChannelException|];
#L0d963e.   call temp:=  [|java:nio:channels:ClosedChannelException.<init>|](v0) @signature [|Ljava/nio/channels/ClosedChannelException;.<init>:()V|] @classDescriptor [|java:nio:channels:ClosedChannelException|] @type direct;
#L0d9644.   throw v0;
#L0d9646.   v0:= Exception  @type object;
#L0d9648.   (@monitorexit v1)
#L0d964a.   throw v0;
#L0d964c.   call temp:=  [|java:nio:SocketChannelImpl.isConnected|](v1) @signature [|Ljava/nio/SocketChannelImpl;.isConnected:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9652.   v0:= temp;
#L0d9654.   if v0 != 0 then goto L0d9664;
#L0d9658.   v0:= new [|java:nio:channels:NotYetConnectedException|];
#L0d965c.   call temp:=  [|java:nio:channels:NotYetConnectedException.<init>|](v0) @signature [|Ljava/nio/channels/NotYetConnectedException;.<init>:()V|] @classDescriptor [|java:nio:channels:NotYetConnectedException|] @type direct;
#L0d9662.   throw v0;
#L0d9664.   (@monitorexit v1)
#L0d9666.   return @void ;
  catch  [|any|] @[L0d962e..L0d9646] goto L0d9646;
  catch  [|any|] @[L0d964c..L0d9664] goto L0d9646;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.checkUnconnected|] ([|java:nio:SocketChannelImpl|] v2 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.checkUnconnected:()V|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0d968c.   (@monitorenter v2)
#L0d968e.   call temp:=  [|java:nio:SocketChannelImpl.isOpen|](v2) @signature [|Ljava/nio/SocketChannelImpl;.isOpen:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9694.   v0:= temp;
#L0d9696.   if v0 != 0 then goto L0d96ac;
#L0d969a.   v0:= new [|java:nio:channels:ClosedChannelException|];
#L0d969e.   call temp:=  [|java:nio:channels:ClosedChannelException.<init>|](v0) @signature [|Ljava/nio/channels/ClosedChannelException;.<init>:()V|] @classDescriptor [|java:nio:channels:ClosedChannelException|] @type direct;
#L0d96a4.   throw v0;
#L0d96a6.   v0:= Exception  @type object;
#L0d96a8.   (@monitorexit v2)
#L0d96aa.   throw v0;
#L0d96ac.   v0:= v2.[|java:nio:SocketChannelImpl.status|] ;
#L0d96b0.   v1:= 2  @length 4;
#L0d96b2.   if v0 != v1 then goto L0d96c2;
#L0d96b6.   v0:= new [|java:nio:channels:AlreadyConnectedException|];
#L0d96ba.   call temp:=  [|java:nio:channels:AlreadyConnectedException.<init>|](v0) @signature [|Ljava/nio/channels/AlreadyConnectedException;.<init>:()V|] @classDescriptor [|java:nio:channels:AlreadyConnectedException|] @type direct;
#L0d96c0.   throw v0;
#L0d96c2.   v0:= v2.[|java:nio:SocketChannelImpl.status|] ;
#L0d96c6.   v1:= 1  @length 4;
#L0d96c8.   if v0 != v1 then goto L0d96d8;
#L0d96cc.   v0:= new [|java:nio:channels:ConnectionPendingException|];
#L0d96d0.   call temp:=  [|java:nio:channels:ConnectionPendingException.<init>|](v0) @signature [|Ljava/nio/channels/ConnectionPendingException;.<init>:()V|] @classDescriptor [|java:nio:channels:ConnectionPendingException|] @type direct;
#L0d96d6.   throw v0;
#L0d96d8.   (@monitorexit v2)
#L0d96da.   return @void ;
  catch  [|any|] @[L0d968e..L0d96a6] goto L0d96a6;
  catch  [|any|] @[L0d96ac..L0d96d8] goto L0d96a6;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.initLocalAddressAndPort|] ([|java:nio:SocketChannelImpl|] v5 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.initLocalAddressAndPort:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0d9700.   v3:= @@[|libcore:io:Libcore.os|]   @type object;
#L0d9704.   v4:= v5.[|java:nio:SocketChannelImpl.fd|]   @type object;
#L0d9708.   call temp:=  [|libcore:io:Os.getsockname|](v3, v4) @signature [|Llibcore/io/Os;.getsockname:(Ljava/io/FileDescriptor;)Ljava/net/SocketAddress;|] @classDescriptor [|libcore:io:Os|] @type interface;
#L0d970e.   v2:= temp  @type object;
#L0d9710.   v1:= v2  @type object;
#L0d9712.   v1:= ([|java:net:InetSocketAddress|])v1;
#L0d9716.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v1) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d971c.   v3:= temp  @type object;
#L0d971e.   v5.[|java:nio:SocketChannelImpl.localAddress|]  := v3 @type object;
#L0d9722.   call temp:=  [|java:net:InetSocketAddress.getPort|](v1) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d9728.   v3:= temp;
#L0d972a.   v5.[|java:nio:SocketChannelImpl.localPort|]  := v3;
#L0d972e.   v3:= v5.[|java:nio:SocketChannelImpl.socket|]   @type object;
#L0d9732.   if v3 == 0 then goto L0d974c;
#L0d9736.   v3:= v5.[|java:nio:SocketChannelImpl.socket|]   @type object;
#L0d973a.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.socketImpl|](v3) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.socketImpl:()Ljava/net/PlainSocketImpl;|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type virtual;
#L0d9740.   v3:= temp  @type object;
#L0d9742.   v4:= v5.[|java:nio:SocketChannelImpl.localPort|] ;
#L0d9746.   call temp:=  [|java:net:PlainSocketImpl.initLocalPort|](v3, v4) @signature [|Ljava/net/PlainSocketImpl;.initLocalPort:(I)V|] @classDescriptor [|java:net:PlainSocketImpl|] @type virtual;
#L0d974c.   return @void ;
#L0d974e.   v0:= Exception  @type object;
#L0d9750.   v3:= new [|java:lang:AssertionError|];
#L0d9754.   call temp:=  [|java:lang:AssertionError.<init>|](v3, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0d975a.   throw v3;
  catch  [|libcore:io:ErrnoException|] @[L0d9700..L0d970e] goto L0d974e;

   }
    procedure [|int|] [|java:nio:SocketChannelImpl.readImpl|] ([|java:nio:SocketChannelImpl|] v10 @type (this), [|java:nio:ByteBuffer|] v11 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.readImpl:(Ljava/nio/ByteBuffer;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0d977c.   v7:= 1  @length 4;
#L0d977e.   v8:= 0  @length 4;
#L0d9780.   v9:= v10.[|java:nio:SocketChannelImpl.readLock|]   @type object;
#L0d9784.   (@monitorenter v9)
#L0d9786.   v6:= 0  @length 4;
#L0d9788.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v10) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d978e.   v0:= temp;
#L0d9790.   if v0 == 0 then goto L0d979a;
#L0d9794.   call temp:=  [|java:nio:SocketChannelImpl.begin|](v10) @signature [|Ljava/nio/SocketChannelImpl;.begin:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d979a.   v0:= 1  @length 4;
#L0d979c.   v1:= v10.[|java:nio:SocketChannelImpl.fd|]   @type object;
#L0d97a0.   v3:= 0  @length 4;
#L0d97a2.   v4:= 0  @length 4;
#L0d97a4.   v5:= 0  @length 4;
#L0d97a6.   v2:= v11  @type object;
#L0d97a8.   call temp:=  [|libcore:io:IoBridge.recvfrom|](v0, v1, v2, v3, v4, v5) @signature [|Llibcore/io/IoBridge;.recvfrom:(ZLjava/io/FileDescriptor;Ljava/nio/ByteBuffer;ILjava/net/DatagramPacket;Z)I|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L0d97ae.   v6:= temp;
#L0d97b0.   if v6 <= 0 then goto L0d97c4;
#L0d97b4.   call temp:=  [|java:nio:ByteBuffer.position|](v11) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d97ba.   v0:= temp;
#L0d97bc.   v0:= v0 + v6  @type int;
#L0d97be.   call temp:=  [|java:nio:ByteBuffer.position|](v11, v0) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d97c4.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v10) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d97ca.   v0:= temp;
#L0d97cc.   if v0 == 0 then goto L0d97dc;
#L0d97d0.   if v6 <= 0 then goto L0d9804;
#L0d97d4.   v0:= v7;
#L0d97d6.   call temp:=  [|java:nio:SocketChannelImpl.end|](v10, v0) @signature [|Ljava/nio/SocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d97dc.   (@monitorexit v9)
#L0d97de.   return v6;
#L0d97e0.   v0:= Exception  @type object;
#L0d97e2.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v10) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d97e8.   v1:= temp;
#L0d97ea.   if v1 == 0 then goto L0d97f8;
#L0d97ee.   if v6 <= 0 then goto L0d9800;
#L0d97f2.   call temp:=  [|java:nio:SocketChannelImpl.end|](v10, v7) @signature [|Ljava/nio/SocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d97f8.   throw v0;
#L0d97fa.   v0:= Exception  @type object;
#L0d97fc.   (@monitorexit v9)
#L0d97fe.   throw v0;
#L0d9800.   v7:= v8;
#L0d9802.   goto L0d97f2;
#L0d9804.   v0:= v8;
#L0d9806.   goto L0d97d6;
  catch  [|any|] @[L0d9788..L0d97c4] goto L0d97e0;
  catch  [|any|] @[L0d97c4..L0d97fe] goto L0d97fa;

   }
    procedure [|java:net:InetSocketAddress|] [|java:nio:SocketChannelImpl.validateAddress|] ([|java:net:SocketAddress|] v3 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.validateAddress:(Ljava/net/SocketAddress;)Ljava/net/InetSocketAddress;|] @Access STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0d9830.   if v3 != 0 then goto L0d9844;
#L0d9834.   v1:= new [|java:lang:IllegalArgumentException|];
#L0d9838.   v2:= "socketAddress == null" @type (object, string);
#L0d983c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0d9842.   throw v1;
#L0d9844.   v1:= instanceof @varname v3 @type [|java:net:InetSocketAddress|];
#L0d9848.   if v1 != 0 then goto L0d9858;
#L0d984c.   v1:= new [|java:nio:channels:UnsupportedAddressTypeException|];
#L0d9850.   call temp:=  [|java:nio:channels:UnsupportedAddressTypeException.<init>|](v1) @signature [|Ljava/nio/channels/UnsupportedAddressTypeException;.<init>:()V|] @classDescriptor [|java:nio:channels:UnsupportedAddressTypeException|] @type direct;
#L0d9856.   throw v1;
#L0d9858.   v0:= v3  @type object;
#L0d985a.   v0:= ([|java:net:InetSocketAddress|])v0;
#L0d985e.   call temp:=  [|java:net:InetSocketAddress.isUnresolved|](v0) @signature [|Ljava/net/InetSocketAddress;.isUnresolved:()Z|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d9864.   v1:= temp;
#L0d9866.   if v1 == 0 then goto L0d9876;
#L0d986a.   v1:= new [|java:nio:channels:UnresolvedAddressException|];
#L0d986e.   call temp:=  [|java:nio:channels:UnresolvedAddressException.<init>|](v1) @signature [|Ljava/nio/channels/UnresolvedAddressException;.<init>:()V|] @classDescriptor [|java:nio:channels:UnresolvedAddressException|] @type direct;
#L0d9874.   throw v1;
#L0d9876.   return v0  @type object;

   }
    procedure [|int|] [|java:nio:SocketChannelImpl.writeImpl|] ([|java:nio:SocketChannelImpl|] v8 @type (this), [|java:nio:ByteBuffer|] v9 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.writeImpl:(Ljava/nio/ByteBuffer;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0d9888.   v3:= 1  @length 4;
#L0d988a.   v1:= 0  @length 4;
#L0d988c.   v4:= v8.[|java:nio:SocketChannelImpl.writeLock|]   @type object;
#L0d9890.   (@monitorenter v4)
#L0d9892.   call temp:=  [|java:nio:ByteBuffer.hasRemaining|](v9) @signature [|Ljava/nio/ByteBuffer;.hasRemaining:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9898.   v2:= temp;
#L0d989a.   if v2 != 0 then goto L0d98a4;
#L0d989e.   (@monitorexit v4)
#L0d98a0.   v0:= v1;
#L0d98a2.   return v0;
#L0d98a4.   v0:= 0  @length 4;
#L0d98a6.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d98ac.   v2:= temp;
#L0d98ae.   if v2 == 0 then goto L0d98b8;
#L0d98b2.   call temp:=  [|java:nio:SocketChannelImpl.begin|](v8) @signature [|Ljava/nio/SocketChannelImpl;.begin:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d98b8.   v2:= v8.[|java:nio:SocketChannelImpl.fd|]   @type object;
#L0d98bc.   v5:= 0  @length 4;
#L0d98be.   v6:= 0  @length 4;
#L0d98c0.   v7:= 0  @length 4;
#L0d98c2.   call temp:=  [|libcore:io:IoBridge.sendto|](v2, v9, v5, v6, v7) @signature [|Llibcore/io/IoBridge;.sendto:(Ljava/io/FileDescriptor;Ljava/nio/ByteBuffer;ILjava/net/InetAddress;I)I|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L0d98c8.   v0:= temp;
#L0d98ca.   if v0 <= 0 then goto L0d98de;
#L0d98ce.   call temp:=  [|java:nio:ByteBuffer.position|](v9) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d98d4.   v2:= temp;
#L0d98d6.   v2:= v2 + v0  @type int;
#L0d98d8.   call temp:=  [|java:nio:ByteBuffer.position|](v9, v2) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d98de.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d98e4.   v2:= temp;
#L0d98e6.   if v2 == 0 then goto L0d98f6;
#L0d98ea.   if v0 < 0 then goto L0d98f0;
#L0d98ee.   v1:= v3;
#L0d98f0.   call temp:=  [|java:nio:SocketChannelImpl.end|](v8, v1) @signature [|Ljava/nio/SocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d98f6.   (@monitorexit v4)
#L0d98f8.   goto L0d98a2;
#L0d98fa.   v1:= Exception  @type object;
#L0d98fc.   (@monitorexit v4)
#L0d98fe.   throw v1;
#L0d9900.   v2:= Exception  @type object;
#L0d9902.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9908.   v5:= temp;
#L0d990a.   if v5 == 0 then goto L0d9918;
#L0d990e.   if v0 < 0 then goto L0d991a;
#L0d9912.   call temp:=  [|java:nio:SocketChannelImpl.end|](v8, v3) @signature [|Ljava/nio/SocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9918.   throw v2;
#L0d991a.   v3:= v1;
#L0d991c.   goto L0d9912;
  catch  [|any|] @[L0d9892..L0d98a0] goto L0d98fa;
  catch  [|any|] @[L0d98a6..L0d98de] goto L0d9900;
  catch  [|any|] @[L0d98de..L0d98fe] goto L0d98fa;
  catch  [|any|] @[L0d9902..L0d991a] goto L0d98fa;

   }
    procedure [|boolean|] [|java:nio:SocketChannelImpl.connect|] ([|java:nio:SocketChannelImpl|] v8 @type (this), [|java:net:SocketAddress|] v9 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.connect:(Ljava/net/SocketAddress;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0d9958.   call temp:=  [|java:nio:SocketChannelImpl.checkUnconnected|](v8) @signature [|Ljava/nio/SocketChannelImpl;.checkUnconnected:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d995e.   call temp:=  [|java:nio:SocketChannelImpl.validateAddress|](v9) @signature [|Ljava/nio/SocketChannelImpl;.validateAddress:(Ljava/net/SocketAddress;)Ljava/net/InetSocketAddress;|] @classDescriptor [|java:nio:SocketChannelImpl|] @type static;
#L0d9964.   v2:= temp  @type object;
#L0d9966.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v2) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d996c.   v3:= temp  @type object;
#L0d996e.   call temp:=  [|java:net:InetSocketAddress.getPort|](v2) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d9974.   v4:= temp;
#L0d9976.   call temp:=  [|java:net:InetAddress.isAnyLocalAddress|](v3) @signature [|Ljava/net/InetAddress;.isAnyLocalAddress:()Z|] @classDescriptor [|java:net:InetAddress|] @type virtual;
#L0d997c.   v5:= temp;
#L0d997e.   if v5 == 0 then goto L0d998a;
#L0d9982.   call temp:=  [|java:net:InetAddress.getLocalHost|]() @signature [|Ljava/net/InetAddress;.getLocalHost:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetAddress|] @type static;
#L0d9988.   v3:= temp  @type object;
#L0d998a.   v1:= 0  @length 4;
#L0d998c.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9992.   v5:= temp;
#L0d9994.   if v5 == 0 then goto L0d999e;
#L0d9998.   call temp:=  [|java:nio:SocketChannelImpl.begin|](v8) @signature [|Ljava/nio/SocketChannelImpl;.begin:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d999e.   v5:= v8.[|java:nio:SocketChannelImpl.fd|]   @type object;
#L0d99a2.   call temp:=  [|libcore:io:IoBridge.connect|](v5, v3, v4) @signature [|Llibcore/io/IoBridge;.connect:(Ljava/io/FileDescriptor;Ljava/net/InetAddress;I)Z|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L0d99a8.   v1:= temp;
#L0d99aa.   v8.[|java:nio:SocketChannelImpl.isBound|]  := v1 @boolean;
#L0d99ae.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d99b4.   v5:= temp;
#L0d99b6.   if v5 == 0 then goto L0d99c0;
#L0d99ba.   call temp:=  [|java:nio:SocketChannelImpl.end|](v8, v1) @signature [|Ljava/nio/SocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d99c0.   call temp:=  [|java:nio:SocketChannelImpl.initLocalAddressAndPort|](v8) @signature [|Ljava/nio/SocketChannelImpl;.initLocalAddressAndPort:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d99c6.   v8.[|java:nio:SocketChannelImpl.connectAddress|]  := v2 @type object;
#L0d99ca.   v5:= v8.[|java:nio:SocketChannelImpl.socket|]   @type object;
#L0d99ce.   if v5 == 0 then goto L0d99fc;
#L0d99d2.   v5:= v8.[|java:nio:SocketChannelImpl.socket|]   @type object;
#L0d99d6.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.socketImpl|](v5) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.socketImpl:()Ljava/net/PlainSocketImpl;|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type virtual;
#L0d99dc.   v5:= temp  @type object;
#L0d99de.   v6:= v8.[|java:nio:SocketChannelImpl.connectAddress|]   @type object;
#L0d99e2.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v6) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d99e8.   v6:= temp  @type object;
#L0d99ea.   v7:= v8.[|java:nio:SocketChannelImpl.connectAddress|]   @type object;
#L0d99ee.   call temp:=  [|java:net:InetSocketAddress.getPort|](v7) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d99f4.   v7:= temp;
#L0d99f6.   call temp:=  [|java:net:PlainSocketImpl.initRemoteAddressAndPort|](v5, v6, v7) @signature [|Ljava/net/PlainSocketImpl;.initRemoteAddressAndPort:(Ljava/net/InetAddress;I)V|] @classDescriptor [|java:net:PlainSocketImpl|] @type virtual;
#L0d99fc.   (@monitorenter v8)
#L0d99fe.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9a04.   v5:= temp;
#L0d9a06.   if v5 == 0 then goto L0d9a72;
#L0d9a0a.   if v1 == 0 then goto L0d9a6e;
#L0d9a0e.   v5:= 2  @length 4;
#L0d9a10.   v8.[|java:nio:SocketChannelImpl.status|]  := v5;
#L0d9a14.   (@monitorexit v8)
#L0d9a16.   return v1;
#L0d9a18.   v0:= Exception  @type object;
#L0d9a1a.   v5:= instanceof @varname v0 @type [|java:net:ConnectException|];
#L0d9a1e.   if v5 == 0 then goto L0d9a42;
#L0d9a22.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9a28.   v5:= temp;
#L0d9a2a.   if v5 != 0 then goto L0d9a42;
#L0d9a2e.   v5:= 1  @length 4;
#L0d9a30.   v8.[|java:nio:SocketChannelImpl.status|]  := v5;
#L0d9a34.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9a3a.   v5:= temp;
#L0d9a3c.   if v5 == 0 then goto L0d99c0;
#L0d9a40.   goto L0d99ba;
#L0d9a42.   call temp:=  [|java:nio:SocketChannelImpl.isOpen|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isOpen:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9a48.   v5:= temp;
#L0d9a4a.   if v5 == 0 then goto L0d9a56;
#L0d9a4e.   call temp:=  [|java:nio:SocketChannelImpl.close|](v8) @signature [|Ljava/nio/SocketChannelImpl;.close:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9a54.   v1:= 1  @length 4;
#L0d9a56.   throw v0;
#L0d9a58.   v5:= Exception  @type object;
#L0d9a5a.   call temp:=  [|java:nio:SocketChannelImpl.isBlocking|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isBlocking:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9a60.   v6:= temp;
#L0d9a62.   if v6 == 0 then goto L0d9a6c;
#L0d9a66.   call temp:=  [|java:nio:SocketChannelImpl.end|](v8, v1) @signature [|Ljava/nio/SocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9a6c.   throw v5;
#L0d9a6e.   v5:= 0  @length 4;
#L0d9a70.   goto L0d9a10;
#L0d9a72.   v5:= 1  @length 4;
#L0d9a74.   v8.[|java:nio:SocketChannelImpl.status|]  := v5;
#L0d9a78.   goto L0d9a14;
#L0d9a7a.   v5:= Exception  @type object;
#L0d9a7c.   (@monitorexit v8)
#L0d9a7e.   throw v5;
  catch  [|java:io:IOException|] @[L0d998c..L0d99ae] goto L0d9a18;
  catch  [|any|] @[L0d998c..L0d99ae] goto L0d9a58;
  catch  [|any|] @[L0d99fe..L0d9a16] goto L0d9a7a;
  catch  [|any|] @[L0d9a1a..L0d9a34] goto L0d9a58;
  catch  [|any|] @[L0d9a42..L0d9a58] goto L0d9a58;
  catch  [|any|] @[L0d9a74..L0d9a7e] goto L0d9a7a;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.finishAccept|] ([|java:nio:SocketChannelImpl|] v0 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.finishAccept:()V|] @Access  {
      local temp ;
      
#L0d9ac4.   call temp:=  [|java:nio:SocketChannelImpl.initLocalAddressAndPort|](v0) @signature [|Ljava/nio/SocketChannelImpl;.initLocalAddressAndPort:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d9aca.   return @void ;

   }
    procedure [|boolean|] [|java:nio:SocketChannelImpl.finishConnect|] ([|java:nio:SocketChannelImpl|] v8 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.finishConnect:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0d9adc.   v4:= 2  @length 4;
#L0d9ade.   v1:= 1  @length 4;
#L0d9ae0.   (@monitorenter v8)
#L0d9ae2.   call temp:=  [|java:nio:SocketChannelImpl.isOpen|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isOpen:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9ae8.   v5:= temp;
#L0d9aea.   if v5 != 0 then goto L0d9b00;
#L0d9aee.   v4:= new [|java:nio:channels:ClosedChannelException|];
#L0d9af2.   call temp:=  [|java:nio:channels:ClosedChannelException.<init>|](v4) @signature [|Ljava/nio/channels/ClosedChannelException;.<init>:()V|] @classDescriptor [|java:nio:channels:ClosedChannelException|] @type direct;
#L0d9af8.   throw v4;
#L0d9afa.   v4:= Exception  @type object;
#L0d9afc.   (@monitorexit v8)
#L0d9afe.   throw v4;
#L0d9b00.   v5:= v8.[|java:nio:SocketChannelImpl.status|] ;
#L0d9b04.   if v5 != v4 then goto L0d9b0c;
#L0d9b08.   (@monitorexit v8)
#L0d9b0a.   return v1;
#L0d9b0c.   v5:= v8.[|java:nio:SocketChannelImpl.status|] ;
#L0d9b10.   if v5 == v1 then goto L0d9b20;
#L0d9b14.   v4:= new [|java:nio:channels:NoConnectionPendingException|];
#L0d9b18.   call temp:=  [|java:nio:channels:NoConnectionPendingException.<init>|](v4) @signature [|Ljava/nio/channels/NoConnectionPendingException;.<init>:()V|] @classDescriptor [|java:nio:channels:NoConnectionPendingException|] @type direct;
#L0d9b1e.   throw v4;
#L0d9b20.   (@monitorexit v8)
#L0d9b22.   v1:= 0  @length 4;
#L0d9b24.   call temp:=  [|java:nio:SocketChannelImpl.begin|](v8) @signature [|Ljava/nio/SocketChannelImpl;.begin:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9b2a.   v5:= v8.[|java:nio:SocketChannelImpl.connectAddress|]   @type object;
#L0d9b2e.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v5) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d9b34.   v2:= temp  @type object;
#L0d9b36.   v5:= v8.[|java:nio:SocketChannelImpl.connectAddress|]   @type object;
#L0d9b3a.   call temp:=  [|java:net:InetSocketAddress.getPort|](v5) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d9b40.   v3:= temp;
#L0d9b42.   v5:= v8.[|java:nio:SocketChannelImpl.fd|]   @type object;
#L0d9b46.   v6:= 0  @length 4;
#L0d9b48.   v7:= 0  @length 4;
#L0d9b4a.   call temp:=  [|libcore:io:IoBridge.isConnected|](v5, v2, v3, v6, v7) @signature [|Llibcore/io/IoBridge;.isConnected:(Ljava/io/FileDescriptor;Ljava/net/InetAddress;III)Z|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L0d9b50.   v1:= temp;
#L0d9b52.   v8.[|java:nio:SocketChannelImpl.isBound|]  := v1 @boolean;
#L0d9b56.   call temp:=  [|java:nio:SocketChannelImpl.end|](v8, v1) @signature [|Ljava/nio/SocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9b5c.   (@monitorenter v8)
#L0d9b5e.   if v1 == 0 then goto L0d9b96;
#L0d9b62.   v8.[|java:nio:SocketChannelImpl.status|]  := v4;
#L0d9b66.   v8.[|java:nio:SocketChannelImpl.isBound|]  := v1 @boolean;
#L0d9b6a.   (@monitorexit v8)
#L0d9b6c.   goto L0d9b0a;
#L0d9b6e.   v4:= Exception  @type object;
#L0d9b70.   (@monitorexit v8)
#L0d9b72.   throw v4;
#L0d9b74.   v0:= Exception  @type object;
#L0d9b76.   call temp:=  [|java:nio:SocketChannelImpl.isOpen|](v8) @signature [|Ljava/nio/SocketChannelImpl;.isOpen:()Z|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9b7c.   v4:= temp;
#L0d9b7e.   if v4 == 0 then goto L0d9b8a;
#L0d9b82.   call temp:=  [|java:nio:SocketChannelImpl.close|](v8) @signature [|Ljava/nio/SocketChannelImpl;.close:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9b88.   v1:= 1  @length 4;
#L0d9b8a.   throw v0;
#L0d9b8c.   v4:= Exception  @type object;
#L0d9b8e.   call temp:=  [|java:nio:SocketChannelImpl.end|](v8, v1) @signature [|Ljava/nio/SocketChannelImpl;.end:(Z)V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9b94.   throw v4;
#L0d9b96.   v4:= v8.[|java:nio:SocketChannelImpl.status|] ;
#L0d9b9a.   goto L0d9b62;
  catch  [|any|] @[L0d9ae2..L0d9afe] goto L0d9afa;
  catch  [|any|] @[L0d9b00..L0d9b22] goto L0d9afa;
  catch  [|java:net:ConnectException|] @[L0d9b24..L0d9b56] goto L0d9b74;
  catch  [|any|] @[L0d9b24..L0d9b56] goto L0d9b8c;
  catch  [|any|] @[L0d9b62..L0d9b72] goto L0d9b6e;
  catch  [|any|] @[L0d9b76..L0d9b8c] goto L0d9b8c;
  catch  [|any|] @[L0d9b96..L0d9b9a] goto L0d9b6e;

   }
    procedure [|java:io:FileDescriptor|] [|java:nio:SocketChannelImpl.getFD|] ([|java:nio:SocketChannelImpl|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.getFD:()Ljava/io/FileDescriptor;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d9be8.   v0:= v1.[|java:nio:SocketChannelImpl.fd|]   @type object;
#L0d9bec.   return v0  @type object;

   }
    procedure [|java:net:InetAddress|] [|java:nio:SocketChannelImpl.getLocalAddress|] ([|java:nio:SocketChannelImpl|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.getLocalAddress:()Ljava/net/InetAddress;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d9c00.   v0:= v1.[|java:nio:SocketChannelImpl.isBound|]   @boolean;
#L0d9c04.   if v0 == 0 then goto L0d9c0e;
#L0d9c08.   v0:= v1.[|java:nio:SocketChannelImpl.localAddress|]   @type object;
#L0d9c0c.   return v0  @type object;
#L0d9c0e.   v0:= @@[|java:net:Inet4Address.ANY|]   @type object;
#L0d9c12.   goto L0d9c0c;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.implCloseSelectableChannel|] ([|java:nio:SocketChannelImpl|] v2 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.implCloseSelectableChannel:()V|] @Access PROTECTED_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0d9c24.   v1:= 3  @length 4;
#L0d9c26.   (@monitorenter v2)
#L0d9c28.   v0:= v2.[|java:nio:SocketChannelImpl.status|] ;
#L0d9c2c.   if v0 == v1 then goto L0d9c58;
#L0d9c30.   v0:= 3  @length 4;
#L0d9c32.   v2.[|java:nio:SocketChannelImpl.status|]  := v0;
#L0d9c36.   v0:= v2.[|java:nio:SocketChannelImpl.socket|]   @type object;
#L0d9c3a.   if v0 == 0 then goto L0d9c5c;
#L0d9c3e.   v0:= v2.[|java:nio:SocketChannelImpl.socket|]   @type object;
#L0d9c42.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.isClosed|](v0) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.isClosed:()Z|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type virtual;
#L0d9c48.   v0:= temp;
#L0d9c4a.   if v0 != 0 then goto L0d9c5c;
#L0d9c4e.   v0:= v2.[|java:nio:SocketChannelImpl.socket|]   @type object;
#L0d9c52.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.close|](v0) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.close:()V|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type virtual;
#L0d9c58.   (@monitorexit v2)
#L0d9c5a.   return @void ;
#L0d9c5c.   v0:= v2.[|java:nio:SocketChannelImpl.fd|]   @type object;
#L0d9c60.   call temp:=  [|libcore:io:IoBridge.closeSocket|](v0) @signature [|Llibcore/io/IoBridge;.closeSocket:(Ljava/io/FileDescriptor;)V|] @classDescriptor [|libcore:io:IoBridge|] @type static;
#L0d9c66.   goto L0d9c58;
#L0d9c68.   v0:= Exception  @type object;
#L0d9c6a.   (@monitorexit v2)
#L0d9c6c.   throw v0;
  catch  [|any|] @[L0d9c28..L0d9c58] goto L0d9c68;
  catch  [|any|] @[L0d9c5c..L0d9c66] goto L0d9c68;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.implConfigureBlocking|] ([|java:nio:SocketChannelImpl|] v2 @type (this), [|boolean|] v3) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.implConfigureBlocking:(Z)V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0d9c94.   call temp:=  [|java:nio:SocketChannelImpl.blockingLock|](v2) @signature [|Ljava/nio/SocketChannelImpl;.blockingLock:()Ljava/lang/Object;|] @classDescriptor [|java:nio:SocketChannelImpl|] @type virtual;
#L0d9c9a.   v1:= temp  @type object;
#L0d9c9c.   (@monitorenter v1)
#L0d9c9e.   v0:= v2.[|java:nio:SocketChannelImpl.fd|]   @type object;
#L0d9ca2.   call temp:=  [|libcore:io:IoUtils.setBlocking|](v0, v3) @signature [|Llibcore/io/IoUtils;.setBlocking:(Ljava/io/FileDescriptor;Z)V|] @classDescriptor [|libcore:io:IoUtils|] @type static;
#L0d9ca8.   (@monitorexit v1)
#L0d9caa.   return @void ;
#L0d9cac.   v0:= Exception  @type object;
#L0d9cae.   (@monitorexit v1)
#L0d9cb0.   throw v0;
  catch  [|any|] @[L0d9c9e..L0d9cb0] goto L0d9cac;

   }
    procedure [|boolean|] [|java:nio:SocketChannelImpl.isConnected|] ([|java:nio:SocketChannelImpl|] v2 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.isConnected:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0d9cd0.   (@monitorenter v2)
#L0d9cd2.   v0:= v2.[|java:nio:SocketChannelImpl.status|] ;
#L0d9cd6.   v1:= 2  @length 4;
#L0d9cd8.   if v0 != v1 then goto L0d9ce2;
#L0d9cdc.   v0:= 1  @length 4;
#L0d9cde.   (@monitorexit v2)
#L0d9ce0.   return v0;
#L0d9ce2.   v0:= 0  @length 4;
#L0d9ce4.   goto L0d9cde;
#L0d9ce6.   v0:= Exception  @type object;
#L0d9ce8.   (@monitorexit v2)
#L0d9cea.   throw v0;
  catch  [|any|] @[L0d9cd2..L0d9cd6] goto L0d9ce6;

   }
    procedure [|boolean|] [|java:nio:SocketChannelImpl.isConnectionPending|] ([|java:nio:SocketChannelImpl|] v2 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.isConnectionPending:()Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0d9d08.   v0:= 1  @length 4;
#L0d9d0a.   (@monitorenter v2)
#L0d9d0c.   v1:= v2.[|java:nio:SocketChannelImpl.status|] ;
#L0d9d10.   if v1 != v0 then goto L0d9d18;
#L0d9d14.   (@monitorexit v2)
#L0d9d16.   return v0;
#L0d9d18.   v0:= 0  @length 4;
#L0d9d1a.   goto L0d9d14;
#L0d9d1c.   v0:= Exception  @type object;
#L0d9d1e.   (@monitorexit v2)
#L0d9d20.   throw v0;
  catch  [|any|] @[L0d9d0c..L0d9d10] goto L0d9d1c;

   }
    procedure [|int|] [|java:nio:SocketChannelImpl.read|] ([|java:nio:SocketChannelImpl|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.read:(Ljava/nio/ByteBuffer;)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0d9d40.   call temp:=  [|java:nio:ByteBuffer.checkWritable|](v2) @signature [|Ljava/nio/ByteBuffer;.checkWritable:()V|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9d46.   call temp:=  [|java:nio:SocketChannelImpl.checkOpenConnected|](v1) @signature [|Ljava/nio/SocketChannelImpl;.checkOpenConnected:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d9d4c.   call temp:=  [|java:nio:ByteBuffer.hasRemaining|](v2) @signature [|Ljava/nio/ByteBuffer;.hasRemaining:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9d52.   v0:= temp;
#L0d9d54.   if v0 != 0 then goto L0d9d5c;
#L0d9d58.   v0:= 0  @length 4;
#L0d9d5a.   return v0;
#L0d9d5c.   call temp:=  [|java:nio:SocketChannelImpl.readImpl|](v1, v2) @signature [|Ljava/nio/SocketChannelImpl;.readImpl:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d9d62.   v0:= temp;
#L0d9d64.   goto L0d9d5a;

   }
    procedure [|long|] [|java:nio:SocketChannelImpl.read|] ([|java:nio:SocketChannelImpl|] v9 @type (this), [|java:nio:ByteBuffer|][] v10 @type (object), [|int|] v11, [|int|] v12) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.read:([Ljava/nio/ByteBuffer;II)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0d9d78.   v7:= v10.length;
#L0d9d7a.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v7, v11, v12) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d9d80.   call temp:=  [|java:nio:SocketChannelImpl.checkOpenConnected|](v9) @signature [|Ljava/nio/SocketChannelImpl;.checkOpenConnected:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d9d86.   v7:= 1  @length 4;
#L0d9d88.   call temp:=  [|java:nio:FileChannelImpl.calculateTotalRemaining|](v10, v11, v12, v7) @signature [|Ljava/nio/FileChannelImpl;.calculateTotalRemaining:([Ljava/nio/ByteBuffer;IIZ)I|] @classDescriptor [|java:nio:FileChannelImpl|] @type static;
#L0d9d8e.   v6:= temp;
#L0d9d90.   if v6 != 0 then goto L0d9d9a;
#L0d9d94.   v7:= 0  @length wide16;
#L0d9d98.   return v7  @type wide;
#L0d9d9a.   v3:= new [|byte|][v6];
#L0d9d9e.   call temp:=  [|java:nio:ByteBuffer.wrap|](v3) @signature [|Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0d9da4.   v4:= temp  @type object;
#L0d9da6.   call temp:=  [|java:nio:SocketChannelImpl.readImpl|](v9, v4) @signature [|Ljava/nio/SocketChannelImpl;.readImpl:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d9dac.   v5:= temp;
#L0d9dae.   call temp:=  [|java:nio:ByteBuffer.flip|](v4) @signature [|Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9db4.   if v5 <= 0 then goto L0d9dea;
#L0d9db8.   v1:= v5;
#L0d9dba.   v0:= v11;
#L0d9dbc.   if v1 <= 0 then goto L0d9dea;
#L0d9dc0.   v7:= v10[v0]  @type object;
#L0d9dc4.   call temp:=  [|java:nio:ByteBuffer.remaining|](v7) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9dca.   v7:= temp;
#L0d9dcc.   call temp:=  [|java:lang:Math.min|](v7, v1) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0d9dd2.   v2:= temp;
#L0d9dd4.   v7:= v10[v0]  @type object;
#L0d9dd8.   v8:= v5 - v1  @type int;
#L0d9ddc.   call temp:=  [|java:nio:ByteBuffer.put|](v7, v3, v8, v2) @signature [|Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9de2.   v0:= v0 + 1;
#L0d9de6.   v1:= v1 - v2  @type int;
#L0d9de8.   goto L0d9dbc;
#L0d9dea.   v7:= (long)v5  @type i2l;
#L0d9dec.   goto L0d9d98;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.setBound|] ([|java:nio:SocketChannelImpl|] v0 @type (this), [|boolean|] v1) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.setBound:(Z)V|] @Access  {
      local temp ;
      
#L0d9e00.   v0.[|java:nio:SocketChannelImpl.isBound|]  := v1 @boolean;
#L0d9e04.   return @void ;

   }
    procedure [|void|] [|java:nio:SocketChannelImpl.setConnected|] ([|java:nio:SocketChannelImpl|] v1 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.setConnected:()V|] @Access DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0d9e18.   (@monitorenter v1)
#L0d9e1a.   v0:= 2  @length 4;
#L0d9e1c.   v1.[|java:nio:SocketChannelImpl.status|]  := v0;
#L0d9e20.   (@monitorexit v1)
#L0d9e22.   return @void ;
#L0d9e24.   v0:= Exception  @type object;
#L0d9e26.   (@monitorexit v1)
#L0d9e28.   throw v0;
  catch  [|any|] @[L0d9e1c..L0d9e20] goto L0d9e24;

   }
    procedure [|java:net:Socket|] [|java:nio:SocketChannelImpl.socket|] ([|java:nio:SocketChannelImpl|] v7 @type (this)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.socket:()Ljava/net/Socket;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0d9e48.   (@monitorenter v7)
#L0d9e4a.   v3:= v7.[|java:nio:SocketChannelImpl.socket|]   @type object;
#L0d9e4e.   if v3 != 0 then goto L0d9e96;
#L0d9e52.   v0:= 0  @length 4;
#L0d9e54.   v2:= 0  @length 4;
#L0d9e56.   v3:= v7.[|java:nio:SocketChannelImpl.connectAddress|]   @type object;
#L0d9e5a.   if v3 == 0 then goto L0d9e76;
#L0d9e5e.   v3:= v7.[|java:nio:SocketChannelImpl.connectAddress|]   @type object;
#L0d9e62.   call temp:=  [|java:net:InetSocketAddress.getAddress|](v3) @signature [|Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d9e68.   v0:= temp  @type object;
#L0d9e6a.   v3:= v7.[|java:nio:SocketChannelImpl.connectAddress|]   @type object;
#L0d9e6e.   call temp:=  [|java:net:InetSocketAddress.getPort|](v3) @signature [|Ljava/net/InetSocketAddress;.getPort:()I|] @classDescriptor [|java:net:InetSocketAddress|] @type virtual;
#L0d9e74.   v2:= temp;
#L0d9e76.   v3:= new [|java:nio:SocketChannelImpl$SocketAdapter|];
#L0d9e7a.   v4:= new [|java:net:PlainSocketImpl|];
#L0d9e7e.   v5:= v7.[|java:nio:SocketChannelImpl.fd|]   @type object;
#L0d9e82.   v6:= v7.[|java:nio:SocketChannelImpl.localPort|] ;
#L0d9e86.   call temp:=  [|java:net:PlainSocketImpl.<init>|](v4, v5, v6, v0, v2) @signature [|Ljava/net/PlainSocketImpl;.<init>:(Ljava/io/FileDescriptor;ILjava/net/InetAddress;I)V|] @classDescriptor [|java:net:PlainSocketImpl|] @type direct;
#L0d9e8c.   call temp:=  [|java:nio:SocketChannelImpl$SocketAdapter.<init>|](v3, v4, v7) @signature [|Ljava/nio/SocketChannelImpl$SocketAdapter;.<init>:(Ljava/net/PlainSocketImpl;Ljava/nio/SocketChannelImpl;)V|] @classDescriptor [|java:nio:SocketChannelImpl$SocketAdapter|] @type direct;
#L0d9e92.   v7.[|java:nio:SocketChannelImpl.socket|]  := v3 @type object;
#L0d9e96.   v3:= v7.[|java:nio:SocketChannelImpl.socket|]   @type object;
#L0d9e9a.   (@monitorexit v7)
#L0d9e9c.   return v3  @type object;
#L0d9e9e.   v1:= Exception  @type object;
#L0d9ea0.   v3:= 0  @length 4;
#L0d9ea2.   goto L0d9e9a;
#L0d9ea4.   v3:= Exception  @type object;
#L0d9ea6.   (@monitorexit v7)
#L0d9ea8.   throw v3;
  catch  [|any|] @[L0d9e4a..L0d9e4e] goto L0d9ea4;
  catch  [|java:net:SocketException|] @[L0d9e56..L0d9e96] goto L0d9e9e;
  catch  [|any|] @[L0d9e56..L0d9e96] goto L0d9ea4;
  catch  [|any|] @[L0d9e96..L0d9e9a] goto L0d9ea4;

   }
    procedure [|int|] [|java:nio:SocketChannelImpl.write|] ([|java:nio:SocketChannelImpl|] v2 @type (this), [|java:nio:ByteBuffer|] v3 @type (object)) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.write:(Ljava/nio/ByteBuffer;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0d9edc.   if v3 != 0 then goto L0d9ef0;
#L0d9ee0.   v0:= new [|java:lang:NullPointerException|];
#L0d9ee4.   v1:= "src == null" @type (object, string);
#L0d9ee8.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0d9eee.   throw v0;
#L0d9ef0.   call temp:=  [|java:nio:SocketChannelImpl.checkOpenConnected|](v2) @signature [|Ljava/nio/SocketChannelImpl;.checkOpenConnected:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d9ef6.   call temp:=  [|java:nio:ByteBuffer.hasRemaining|](v3) @signature [|Ljava/nio/ByteBuffer;.hasRemaining:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9efc.   v0:= temp;
#L0d9efe.   if v0 != 0 then goto L0d9f06;
#L0d9f02.   v0:= 0  @length 4;
#L0d9f04.   return v0;
#L0d9f06.   call temp:=  [|java:nio:SocketChannelImpl.writeImpl|](v2, v3) @signature [|Ljava/nio/SocketChannelImpl;.writeImpl:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d9f0c.   v0:= temp;
#L0d9f0e.   goto L0d9f04;

   }
    procedure [|long|] [|java:nio:SocketChannelImpl.write|] ([|java:nio:SocketChannelImpl|] v10 @type (this), [|java:nio:ByteBuffer|][] v11 @type (object), [|int|] v12, [|int|] v13) @owner [|java:nio:SocketChannelImpl|] @signature [|Ljava/nio/SocketChannelImpl;.write:([Ljava/nio/ByteBuffer;II)J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0d9f20.   v8:= v11.length;
#L0d9f22.   call temp:=  [|java:util:Arrays.checkOffsetAndCount|](v8, v12, v13) @signature [|Ljava/util/Arrays;.checkOffsetAndCount:(III)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0d9f28.   call temp:=  [|java:nio:SocketChannelImpl.checkOpenConnected|](v10) @signature [|Ljava/nio/SocketChannelImpl;.checkOpenConnected:()V|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d9f2e.   v8:= 0  @length 4;
#L0d9f30.   call temp:=  [|java:nio:FileChannelImpl.calculateTotalRemaining|](v11, v12, v13, v8) @signature [|Ljava/nio/FileChannelImpl;.calculateTotalRemaining:([Ljava/nio/ByteBuffer;IIZ)I|] @classDescriptor [|java:nio:FileChannelImpl|] @type static;
#L0d9f36.   v0:= temp;
#L0d9f38.   if v0 != 0 then goto L0d9f42;
#L0d9f3c.   v8:= 0  @length wide16;
#L0d9f40.   return v8  @type wide;
#L0d9f42.   call temp:=  [|java:nio:ByteBuffer.allocate|](v0) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0d9f48.   v6:= temp  @type object;
#L0d9f4a.   v5:= v12;
#L0d9f4c.   v8:= v13 + v12  @type int;
#L0d9f50.   if v5 >= v8 then goto L0d9f72;
#L0d9f54.   v4:= v11[v5]  @type object;
#L0d9f58.   call temp:=  [|java:nio:ByteBuffer.position|](v4) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9f5e.   v2:= temp;
#L0d9f60.   call temp:=  [|java:nio:ByteBuffer.put|](v6, v4) @signature [|Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9f66.   call temp:=  [|java:nio:ByteBuffer.position|](v4, v2) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9f6c.   v5:= v5 + 1;
#L0d9f70.   goto L0d9f4c;
#L0d9f72.   call temp:=  [|java:nio:ByteBuffer.flip|](v6) @signature [|Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9f78.   call temp:=  [|java:nio:SocketChannelImpl.writeImpl|](v10, v6) @signature [|Ljava/nio/SocketChannelImpl;.writeImpl:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:SocketChannelImpl|] @type direct;
#L0d9f7e.   v3:= temp;
#L0d9f80.   v5:= v12;
#L0d9f82.   v7:= v3;
#L0d9f84.   if v3 <= 0 then goto L0d9fb4;
#L0d9f88.   v4:= v11[v5]  @type object;
#L0d9f8c.   call temp:=  [|java:nio:ByteBuffer.remaining|](v4) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9f92.   v8:= temp;
#L0d9f94.   call temp:=  [|java:lang:Math.min|](v3, v8) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0d9f9a.   v1:= temp;
#L0d9f9c.   call temp:=  [|java:nio:ByteBuffer.position|](v4) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9fa2.   v8:= temp;
#L0d9fa4.   v8:= v8 + v1  @type int;
#L0d9fa6.   call temp:=  [|java:nio:ByteBuffer.position|](v4, v8) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0d9fac.   v5:= v5 + 1;
#L0d9fb0.   v3:= v3 - v1  @type int;
#L0d9fb2.   goto L0d9f84;
#L0d9fb4.   v8:= (long)v7  @type i2l;
#L0d9fb6.   goto L0d9f40;

   }
record [|java:nio:channels:AlreadyConnectedException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:AlreadyConnectedException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:AlreadyConnectedException.<init>|] ([|java:nio:channels:AlreadyConnectedException|] v0 @type (this)) @owner [|java:nio:channels:AlreadyConnectedException|] @signature [|Ljava/nio/channels/AlreadyConnectedException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d9fc8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0d9fce.   return @void ;

   }
record [|java:nio:channels:ClosedChannelException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:nio:channels:ClosedChannelException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:ClosedChannelException.<init>|] ([|java:nio:channels:ClosedChannelException|] v0 @type (this)) @owner [|java:nio:channels:ClosedChannelException|] @signature [|Ljava/nio/channels/ClosedChannelException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d9fe0.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0d9fe6.   return @void ;

   }
record [|java:nio:channels:AsynchronousCloseException|]  @type class @AccessFlag PUBLIC  extends [|java:nio:channels:ClosedChannelException|] {
   }
      global [|long|] @@[|java:nio:channels:AsynchronousCloseException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:AsynchronousCloseException.<init>|] ([|java:nio:channels:AsynchronousCloseException|] v0 @type (this)) @owner [|java:nio:channels:AsynchronousCloseException|] @signature [|Ljava/nio/channels/AsynchronousCloseException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0d9ff8.   call temp:=  [|java:nio:channels:ClosedChannelException.<init>|](v0) @signature [|Ljava/nio/channels/ClosedChannelException;.<init>:()V|] @classDescriptor [|java:nio:channels:ClosedChannelException|] @type direct;
#L0d9ffe.   return @void ;

   }
record [|java:nio:channels:CancelledKeyException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:CancelledKeyException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:CancelledKeyException.<init>|] ([|java:nio:channels:CancelledKeyException|] v0 @type (this)) @owner [|java:nio:channels:CancelledKeyException|] @signature [|Ljava/nio/channels/CancelledKeyException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da010.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da016.   return @void ;

   }
record [|java:nio:channels:Channels$ChannelInputStream|]  @type class @AccessFlag   extends [|java:io:InputStream|] {
      [|java:nio:channels:ReadableByteChannel|] [|java:nio:channels:Channels$ChannelInputStream.channel|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:channels:Channels$ChannelInputStream.<init>|] ([|java:nio:channels:Channels$ChannelInputStream|] v2 @type (this), [|java:nio:channels:ReadableByteChannel|] v3 @type (object)) @owner [|java:nio:channels:Channels$ChannelInputStream|] @signature [|Ljava/nio/channels/Channels$ChannelInputStream;.<init>:(Ljava/nio/channels/ReadableByteChannel;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0da028.   call temp:=  [|java:io:InputStream.<init>|](v2) @signature [|Ljava/io/InputStream;.<init>:()V|] @classDescriptor [|java:io:InputStream|] @type direct;
#L0da02e.   if v3 != 0 then goto L0da042;
#L0da032.   v0:= new [|java:lang:NullPointerException|];
#L0da036.   v1:= "channel == null" @type (object, string);
#L0da03a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0da040.   throw v0;
#L0da042.   v2.[|java:nio:channels:Channels$ChannelInputStream.channel|]  := v3 @type object;
#L0da046.   return @void ;

   }
    procedure [|int|] [|java:nio:channels:Channels$ChannelInputStream.available|] ([|java:nio:channels:Channels$ChannelInputStream|] v7 @type (this)) @owner [|java:nio:channels:Channels$ChannelInputStream|] @signature [|Ljava/nio/channels/Channels$ChannelInputStream;.available:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0da058.   v3:= v7.[|java:nio:channels:Channels$ChannelInputStream.channel|]   @type object;
#L0da05c.   v3:= instanceof @varname v3 @type [|java:nio:channels:FileChannel|];
#L0da060.   if v3 == 0 then goto L0da09a;
#L0da064.   v0:= v7.[|java:nio:channels:Channels$ChannelInputStream.channel|]   @type object;
#L0da068.   v0:= ([|java:nio:channels:FileChannel|])v0;
#L0da06c.   call temp:=  [|java:nio:channels:FileChannel.size|](v0) @signature [|Ljava/nio/channels/FileChannel;.size:()J|] @classDescriptor [|java:nio:channels:FileChannel|] @type virtual;
#L0da072.   v3:= temp  @type wide;
#L0da074.   call temp:=  [|java:nio:channels:FileChannel.position|](v0) @signature [|Ljava/nio/channels/FileChannel;.position:()J|] @classDescriptor [|java:nio:channels:FileChannel|] @type virtual;
#L0da07a.   v5:= temp  @type wide;
#L0da07c.   v1:= v3 - v5  @type long;
#L0da080.    v3:= nan  @length wide32;
#L0da086.   v3:= cmp(v1,v3);
#L0da08a.   if v3 <= 0 then goto L0da096;
#L0da08e.    v3:= nan;
#L0da094.   return v3;
#L0da096.   v3:= (int)v1  @type l2i;
#L0da098.   goto L0da094;
#L0da09a.   call temp:=  [|java:io:InputStream.available|](v7) @signature [|Ljava/io/InputStream;.available:()I|] @classDescriptor [|java:io:InputStream|] @type super;
#L0da0a0.   v3:= temp;
#L0da0a2.   goto L0da094;

   }
    procedure [|void|] [|java:nio:channels:Channels$ChannelInputStream.close|] ([|java:nio:channels:Channels$ChannelInputStream|] v1 @type (this)) @owner [|java:nio:channels:Channels$ChannelInputStream|] @signature [|Ljava/nio/channels/Channels$ChannelInputStream;.close:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0da0b4.   (@monitorenter v1)
#L0da0b6.   v0:= v1.[|java:nio:channels:Channels$ChannelInputStream.channel|]   @type object;
#L0da0ba.   call temp:=  [|java:nio:channels:ReadableByteChannel.close|](v0) @signature [|Ljava/nio/channels/ReadableByteChannel;.close:()V|] @classDescriptor [|java:nio:channels:ReadableByteChannel|] @type interface;
#L0da0c0.   (@monitorexit v1)
#L0da0c2.   return @void ;
#L0da0c4.   v0:= Exception  @type object;
#L0da0c6.   (@monitorexit v1)
#L0da0c8.   throw v0;
  catch  [|any|] @[L0da0b6..L0da0c0] goto L0da0c4;

   }
    procedure [|int|] [|java:nio:channels:Channels$ChannelInputStream.read|] ([|java:nio:channels:Channels$ChannelInputStream|] v1 @type (this)) @owner [|java:nio:channels:Channels$ChannelInputStream|] @signature [|Ljava/nio/channels/Channels$ChannelInputStream;.read:()I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0da0e8.   (@monitorenter v1)
#L0da0ea.   call temp:=  [|libcore:io:Streams.readSingleByte|](v1) @signature [|Llibcore/io/Streams;.readSingleByte:(Ljava/io/InputStream;)I|] @classDescriptor [|libcore:io:Streams|] @type static;
#L0da0f0.   v0:= temp;
#L0da0f2.   (@monitorexit v1)
#L0da0f4.   return v0;
#L0da0f6.   v0:= Exception  @type object;
#L0da0f8.   (@monitorexit v1)
#L0da0fa.   throw v0;
  catch  [|any|] @[L0da0ea..L0da0f0] goto L0da0f6;

   }
    procedure [|int|] [|java:nio:channels:Channels$ChannelInputStream.read|] ([|java:nio:channels:Channels$ChannelInputStream|] v2 @type (this), [|byte|][] v3, [|int|] v4, [|int|] v5) @owner [|java:nio:channels:Channels$ChannelInputStream|] @signature [|Ljava/nio/channels/Channels$ChannelInputStream;.read:([BII)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
      
#L0da118.   (@monitorenter v2)
#L0da11a.   call temp:=  [|java:nio:ByteBuffer.wrap|](v3, v4, v5) @signature [|Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0da120.   v0:= temp  @type object;
#L0da122.   v1:= v2.[|java:nio:channels:Channels$ChannelInputStream.channel|]   @type object;
#L0da126.   call temp:=  [|java:nio:channels:Channels.checkBlocking|](v1) @signature [|Ljava/nio/channels/Channels;.checkBlocking:(Ljava/nio/channels/Channel;)V|] @classDescriptor [|java:nio:channels:Channels|] @type static;
#L0da12c.   v1:= v2.[|java:nio:channels:Channels$ChannelInputStream.channel|]   @type object;
#L0da130.   call temp:=  [|java:nio:channels:ReadableByteChannel.read|](v1, v0) @signature [|Ljava/nio/channels/ReadableByteChannel;.read:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:channels:ReadableByteChannel|] @type interface;
#L0da136.   v1:= temp;
#L0da138.   (@monitorexit v2)
#L0da13a.   return v1;
#L0da13c.   v1:= Exception  @type object;
#L0da13e.   (@monitorexit v2)
#L0da140.   throw v1;
  catch  [|any|] @[L0da11a..L0da136] goto L0da13c;

   }
record [|java:nio:channels:Channels$ChannelOutputStream|]  @type class @AccessFlag   extends [|java:io:OutputStream|] {
      [|java:nio:channels:WritableByteChannel|] [|java:nio:channels:Channels$ChannelOutputStream.channel|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:channels:Channels$ChannelOutputStream.<init>|] ([|java:nio:channels:Channels$ChannelOutputStream|] v2 @type (this), [|java:nio:channels:WritableByteChannel|] v3 @type (object)) @owner [|java:nio:channels:Channels$ChannelOutputStream|] @signature [|Ljava/nio/channels/Channels$ChannelOutputStream;.<init>:(Ljava/nio/channels/WritableByteChannel;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0da160.   call temp:=  [|java:io:OutputStream.<init>|](v2) @signature [|Ljava/io/OutputStream;.<init>:()V|] @classDescriptor [|java:io:OutputStream|] @type direct;
#L0da166.   if v3 != 0 then goto L0da17a;
#L0da16a.   v0:= new [|java:lang:NullPointerException|];
#L0da16e.   v1:= "channel == null" @type (object, string);
#L0da172.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0da178.   throw v0;
#L0da17a.   v2.[|java:nio:channels:Channels$ChannelOutputStream.channel|]  := v3 @type object;
#L0da17e.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:Channels$ChannelOutputStream.close|] ([|java:nio:channels:Channels$ChannelOutputStream|] v1 @type (this)) @owner [|java:nio:channels:Channels$ChannelOutputStream|] @signature [|Ljava/nio/channels/Channels$ChannelOutputStream;.close:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L0da190.   (@monitorenter v1)
#L0da192.   v0:= v1.[|java:nio:channels:Channels$ChannelOutputStream.channel|]   @type object;
#L0da196.   call temp:=  [|java:nio:channels:WritableByteChannel.close|](v0) @signature [|Ljava/nio/channels/WritableByteChannel;.close:()V|] @classDescriptor [|java:nio:channels:WritableByteChannel|] @type interface;
#L0da19c.   (@monitorexit v1)
#L0da19e.   return @void ;
#L0da1a0.   v0:= Exception  @type object;
#L0da1a2.   (@monitorexit v1)
#L0da1a4.   throw v0;
  catch  [|any|] @[L0da192..L0da19c] goto L0da1a0;

   }
    procedure [|void|] [|java:nio:channels:Channels$ChannelOutputStream.write|] ([|java:nio:channels:Channels$ChannelOutputStream|] v3 @type (this), [|int|] v4) @owner [|java:nio:channels:Channels$ChannelOutputStream|] @signature [|Ljava/nio/channels/Channels$ChannelOutputStream;.write:(I)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0da1c4.   (@monitorenter v3)
#L0da1c6.   v1:= 1  @length 4;
#L0da1c8.   v0:= new [|byte|][v1];
#L0da1cc.   v1:= 0  @length 4;
#L0da1ce.   v2:= (byte)v4  @type i2b;
#L0da1d0.   v0[v1]:= v2  @byte;
#L0da1d4.   call temp:=  [|java:nio:channels:Channels$ChannelOutputStream.write|](v3, v0) @signature [|Ljava/nio/channels/Channels$ChannelOutputStream;.write:([B)V|] @classDescriptor [|java:nio:channels:Channels$ChannelOutputStream|] @type virtual;
#L0da1da.   (@monitorexit v3)
#L0da1dc.   return @void ;
#L0da1de.   v1:= Exception  @type object;
#L0da1e0.   (@monitorexit v3)
#L0da1e2.   throw v1;
  catch  [|any|] @[L0da1c8..L0da1da] goto L0da1de;

   }
    procedure [|void|] [|java:nio:channels:Channels$ChannelOutputStream.write|] ([|java:nio:channels:Channels$ChannelOutputStream|] v3 @type (this), [|byte|][] v4, [|int|] v5, [|int|] v6) @owner [|java:nio:channels:Channels$ChannelOutputStream|] @signature [|Ljava/nio/channels/Channels$ChannelOutputStream;.write:([BII)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
      
#L0da200.   (@monitorenter v3)
#L0da202.   call temp:=  [|java:nio:ByteBuffer.wrap|](v4, v5, v6) @signature [|Ljava/nio/ByteBuffer;.wrap:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0da208.   v0:= temp  @type object;
#L0da20a.   v2:= v3.[|java:nio:channels:Channels$ChannelOutputStream.channel|]   @type object;
#L0da20e.   call temp:=  [|java:nio:channels:Channels.checkBlocking|](v2) @signature [|Ljava/nio/channels/Channels;.checkBlocking:(Ljava/nio/channels/Channel;)V|] @classDescriptor [|java:nio:channels:Channels|] @type static;
#L0da214.   v1:= 0  @length 4;
#L0da216.   if v1 >= v6 then goto L0da22a;
#L0da21a.   v2:= v3.[|java:nio:channels:Channels$ChannelOutputStream.channel|]   @type object;
#L0da21e.   call temp:=  [|java:nio:channels:WritableByteChannel.write|](v2, v0) @signature [|Ljava/nio/channels/WritableByteChannel;.write:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:channels:WritableByteChannel|] @type interface;
#L0da224.   v2:= temp;
#L0da226.   v1:= v1 + v2  @type int;
#L0da228.   goto L0da216;
#L0da22a.   (@monitorexit v3)
#L0da22c.   return @void ;
#L0da22e.   v2:= Exception  @type object;
#L0da230.   (@monitorexit v3)
#L0da232.   throw v2;
  catch  [|any|] @[L0da202..L0da224] goto L0da22e;

   }
record [|java:nio:channels:Channels$InputStreamChannel|]  @type class @AccessFlag   extends [|java:nio:channels:spi:AbstractInterruptibleChannel|], [|java:nio:channels:ReadableByteChannel|] {
      [|java:io:InputStream|] [|java:nio:channels:Channels$InputStreamChannel.inputStream|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:channels:Channels$InputStreamChannel.<init>|] ([|java:nio:channels:Channels$InputStreamChannel|] v2 @type (this), [|java:io:InputStream|] v3 @type (object)) @owner [|java:nio:channels:Channels$InputStreamChannel|] @signature [|Ljava/nio/channels/Channels$InputStreamChannel;.<init>:(Ljava/io/InputStream;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0da250.   call temp:=  [|java:nio:channels:spi:AbstractInterruptibleChannel.<init>|](v2) @signature [|Ljava/nio/channels/spi/AbstractInterruptibleChannel;.<init>:()V|] @classDescriptor [|java:nio:channels:spi:AbstractInterruptibleChannel|] @type direct;
#L0da256.   if v3 != 0 then goto L0da26a;
#L0da25a.   v0:= new [|java:lang:NullPointerException|];
#L0da25e.   v1:= "inputStream == null" @type (object, string);
#L0da262.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0da268.   throw v0;
#L0da26a.   v2.[|java:nio:channels:Channels$InputStreamChannel.inputStream|]  := v3 @type object;
#L0da26e.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:Channels$InputStreamChannel.implCloseChannel|] ([|java:nio:channels:Channels$InputStreamChannel|] v1 @type (this)) @owner [|java:nio:channels:Channels$InputStreamChannel|] @signature [|Ljava/nio/channels/Channels$InputStreamChannel;.implCloseChannel:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0da280.   v0:= v1.[|java:nio:channels:Channels$InputStreamChannel.inputStream|]   @type object;
#L0da284.   call temp:=  [|java:io:InputStream.close|](v0) @signature [|Ljava/io/InputStream;.close:()V|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0da28a.   return @void ;

   }
    procedure [|int|] [|java:nio:channels:Channels$InputStreamChannel.read|] ([|java:nio:channels:Channels$InputStreamChannel|] v6 @type (this), [|java:nio:ByteBuffer|] v7 @type (object)) @owner [|java:nio:channels:Channels$InputStreamChannel|] @signature [|Ljava/nio/channels/Channels$InputStreamChannel;.read:(Ljava/nio/ByteBuffer;)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0da29c.   v4:= 1  @length 4;
#L0da29e.   v5:= 0  @length 4;
#L0da2a0.   (@monitorenter v6)
#L0da2a2.   call temp:=  [|java:nio:channels:Channels$InputStreamChannel.isOpen|](v6) @signature [|Ljava/nio/channels/Channels$InputStreamChannel;.isOpen:()Z|] @classDescriptor [|java:nio:channels:Channels$InputStreamChannel|] @type virtual;
#L0da2a8.   v3:= temp;
#L0da2aa.   if v3 != 0 then goto L0da2c0;
#L0da2ae.   v3:= new [|java:nio:channels:ClosedChannelException|];
#L0da2b2.   call temp:=  [|java:nio:channels:ClosedChannelException.<init>|](v3) @signature [|Ljava/nio/channels/ClosedChannelException;.<init>:()V|] @classDescriptor [|java:nio:channels:ClosedChannelException|] @type direct;
#L0da2b8.   throw v3;
#L0da2ba.   v3:= Exception  @type object;
#L0da2bc.   (@monitorexit v6)
#L0da2be.   throw v3;
#L0da2c0.   call temp:=  [|java:nio:ByteBuffer.remaining|](v7) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0da2c6.   v1:= temp;
#L0da2c8.   v0:= new [|byte|][v1];
#L0da2cc.   v2:= 0  @length 4;
#L0da2ce.   call temp:=  [|java:nio:channels:Channels$InputStreamChannel.begin|](v6) @signature [|Ljava/nio/channels/Channels$InputStreamChannel;.begin:()V|] @classDescriptor [|java:nio:channels:Channels$InputStreamChannel|] @type virtual;
#L0da2d4.   v3:= v6.[|java:nio:channels:Channels$InputStreamChannel.inputStream|]   @type object;
#L0da2d8.   call temp:=  [|java:io:InputStream.read|](v3, v0) @signature [|Ljava/io/InputStream;.read:([B)I|] @classDescriptor [|java:io:InputStream|] @type virtual;
#L0da2de.   v2:= temp;
#L0da2e0.   if v2 < 0 then goto L0da2fa;
#L0da2e4.   call temp:=  [|java:nio:channels:Channels$InputStreamChannel.end|](v6, v4) @signature [|Ljava/nio/channels/Channels$InputStreamChannel;.end:(Z)V|] @classDescriptor [|java:nio:channels:Channels$InputStreamChannel|] @type virtual;
#L0da2ea.   if v2 <= 0 then goto L0da2f6;
#L0da2ee.   v3:= 0  @length 4;
#L0da2f0.   call temp:=  [|java:nio:ByteBuffer.put|](v7, v0, v3, v2) @signature [|Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0da2f6.   (@monitorexit v6)
#L0da2f8.   return v2;
#L0da2fa.   v4:= v5;
#L0da2fc.   goto L0da2e4;
#L0da2fe.   v3:= Exception  @type object;
#L0da300.   if v2 < 0 then goto L0da30c;
#L0da304.   call temp:=  [|java:nio:channels:Channels$InputStreamChannel.end|](v6, v4) @signature [|Ljava/nio/channels/Channels$InputStreamChannel;.end:(Z)V|] @classDescriptor [|java:nio:channels:Channels$InputStreamChannel|] @type virtual;
#L0da30a.   throw v3;
#L0da30c.   v4:= v5;
#L0da30e.   goto L0da304;
  catch  [|any|] @[L0da2a2..L0da2ba] goto L0da2ba;
  catch  [|any|] @[L0da2c0..L0da2cc] goto L0da2ba;
  catch  [|any|] @[L0da2ce..L0da2de] goto L0da2fe;
  catch  [|any|] @[L0da2e4..L0da2f6] goto L0da2ba;
  catch  [|any|] @[L0da304..L0da30c] goto L0da2ba;

   }
record [|java:nio:channels:Channels$OutputStreamChannel|]  @type class @AccessFlag   extends [|java:nio:channels:spi:AbstractInterruptibleChannel|], [|java:nio:channels:WritableByteChannel|] {
      [|java:io:OutputStream|] [|java:nio:channels:Channels$OutputStreamChannel.outputStream|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:channels:Channels$OutputStreamChannel.<init>|] ([|java:nio:channels:Channels$OutputStreamChannel|] v2 @type (this), [|java:io:OutputStream|] v3 @type (object)) @owner [|java:nio:channels:Channels$OutputStreamChannel|] @signature [|Ljava/nio/channels/Channels$OutputStreamChannel;.<init>:(Ljava/io/OutputStream;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0da350.   call temp:=  [|java:nio:channels:spi:AbstractInterruptibleChannel.<init>|](v2) @signature [|Ljava/nio/channels/spi/AbstractInterruptibleChannel;.<init>:()V|] @classDescriptor [|java:nio:channels:spi:AbstractInterruptibleChannel|] @type direct;
#L0da356.   if v3 != 0 then goto L0da36a;
#L0da35a.   v0:= new [|java:lang:NullPointerException|];
#L0da35e.   v1:= "outputStream == null" @type (object, string);
#L0da362.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0da368.   throw v0;
#L0da36a.   v2.[|java:nio:channels:Channels$OutputStreamChannel.outputStream|]  := v3 @type object;
#L0da36e.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:Channels$OutputStreamChannel.implCloseChannel|] ([|java:nio:channels:Channels$OutputStreamChannel|] v1 @type (this)) @owner [|java:nio:channels:Channels$OutputStreamChannel|] @signature [|Ljava/nio/channels/Channels$OutputStreamChannel;.implCloseChannel:()V|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0da380.   v0:= v1.[|java:nio:channels:Channels$OutputStreamChannel.outputStream|]   @type object;
#L0da384.   call temp:=  [|java:io:OutputStream.close|](v0) @signature [|Ljava/io/OutputStream;.close:()V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0da38a.   return @void ;

   }
    procedure [|int|] [|java:nio:channels:Channels$OutputStreamChannel.write|] ([|java:nio:channels:Channels$OutputStreamChannel|] v6 @type (this), [|java:nio:ByteBuffer|] v7 @type (object)) @owner [|java:nio:channels:Channels$OutputStreamChannel|] @signature [|Ljava/nio/channels/Channels$OutputStreamChannel;.write:(Ljava/nio/ByteBuffer;)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0da39c.   v4:= 1  @length 4;
#L0da39e.   v2:= 0  @length 4;
#L0da3a0.   (@monitorenter v6)
#L0da3a2.   call temp:=  [|java:nio:channels:Channels$OutputStreamChannel.isOpen|](v6) @signature [|Ljava/nio/channels/Channels$OutputStreamChannel;.isOpen:()Z|] @classDescriptor [|java:nio:channels:Channels$OutputStreamChannel|] @type virtual;
#L0da3a8.   v3:= temp;
#L0da3aa.   if v3 != 0 then goto L0da3c0;
#L0da3ae.   v2:= new [|java:nio:channels:ClosedChannelException|];
#L0da3b2.   call temp:=  [|java:nio:channels:ClosedChannelException.<init>|](v2) @signature [|Ljava/nio/channels/ClosedChannelException;.<init>:()V|] @classDescriptor [|java:nio:channels:ClosedChannelException|] @type direct;
#L0da3b8.   throw v2;
#L0da3ba.   v2:= Exception  @type object;
#L0da3bc.   (@monitorexit v6)
#L0da3be.   throw v2;
#L0da3c0.   call temp:=  [|java:nio:ByteBuffer.remaining|](v7) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0da3c6.   v1:= temp;
#L0da3c8.   if v1 != 0 then goto L0da3d2;
#L0da3cc.   v1:= v2;
#L0da3ce.   (@monitorexit v6)
#L0da3d0.   return v1;
#L0da3d2.   v0:= new [|byte|][v1];
#L0da3d6.   call temp:=  [|java:nio:ByteBuffer.get|](v7, v0) @signature [|Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0da3dc.   call temp:=  [|java:nio:channels:Channels$OutputStreamChannel.begin|](v6) @signature [|Ljava/nio/channels/Channels$OutputStreamChannel;.begin:()V|] @classDescriptor [|java:nio:channels:Channels$OutputStreamChannel|] @type virtual;
#L0da3e2.   v3:= v6.[|java:nio:channels:Channels$OutputStreamChannel.outputStream|]   @type object;
#L0da3e6.   v5:= 0  @length 4;
#L0da3e8.   call temp:=  [|java:io:OutputStream.write|](v3, v0, v5, v1) @signature [|Ljava/io/OutputStream;.write:([BII)V|] @classDescriptor [|java:io:OutputStream|] @type virtual;
#L0da3ee.   if v1 < 0 then goto L0da3fa;
#L0da3f2.   call temp:=  [|java:nio:channels:Channels$OutputStreamChannel.end|](v6, v4) @signature [|Ljava/nio/channels/Channels$OutputStreamChannel;.end:(Z)V|] @classDescriptor [|java:nio:channels:Channels$OutputStreamChannel|] @type virtual;
#L0da3f8.   goto L0da3ce;
#L0da3fa.   v4:= v2;
#L0da3fc.   goto L0da3f2;
#L0da3fe.   v3:= Exception  @type object;
#L0da400.   if v1 < 0 then goto L0da406;
#L0da404.   v2:= v4;
#L0da406.   call temp:=  [|java:nio:channels:Channels$OutputStreamChannel.end|](v6, v2) @signature [|Ljava/nio/channels/Channels$OutputStreamChannel;.end:(Z)V|] @classDescriptor [|java:nio:channels:Channels$OutputStreamChannel|] @type virtual;
#L0da40c.   throw v3;
  catch  [|any|] @[L0da3a2..L0da3ba] goto L0da3ba;
  catch  [|any|] @[L0da3c0..L0da3c6] goto L0da3ba;
  catch  [|any|] @[L0da3d2..L0da3dc] goto L0da3ba;
  catch  [|any|] @[L0da3dc..L0da3ee] goto L0da3fe;
  catch  [|any|] @[L0da3f2..L0da40c] goto L0da3ba;

   }
record [|java:nio:channels:Channels|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
    procedure [|void|] [|java:nio:channels:Channels.<init>|] ([|java:nio:channels:Channels|] v0 @type (this)) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0da450.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0da456.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:Channels.checkBlocking|] ([|java:nio:channels:Channel|] v1 @type (object)) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.checkBlocking:(Ljava/nio/channels/Channel;)V|] @Access STATIC {
      local temp ;
        v0;
      
#L0da468.   v0:= instanceof @varname v1 @type [|java:nio:channels:SelectableChannel|];
#L0da46c.   if v0 == 0 then goto L0da48c;
#L0da470.   v1:= ([|java:nio:channels:SelectableChannel|])v1;
#L0da474.   call temp:=  [|java:nio:channels:SelectableChannel.isBlocking|](v1) @signature [|Ljava/nio/channels/SelectableChannel;.isBlocking:()Z|] @classDescriptor [|java:nio:channels:SelectableChannel|] @type virtual;
#L0da47a.   v0:= temp;
#L0da47c.   if v0 != 0 then goto L0da48c;
#L0da480.   v0:= new [|java:nio:channels:IllegalBlockingModeException|];
#L0da484.   call temp:=  [|java:nio:channels:IllegalBlockingModeException.<init>|](v0) @signature [|Ljava/nio/channels/IllegalBlockingModeException;.<init>:()V|] @classDescriptor [|java:nio:channels:IllegalBlockingModeException|] @type direct;
#L0da48a.   throw v0;
#L0da48c.   return @void ;

   }
    procedure [|java:nio:channels:ReadableByteChannel|] [|java:nio:channels:Channels.newChannel|] ([|java:io:InputStream|] v1 @type (object)) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.newChannel:(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0da4a0.   v0:= new [|java:nio:channels:Channels$InputStreamChannel|];
#L0da4a4.   call temp:=  [|java:nio:channels:Channels$InputStreamChannel.<init>|](v0, v1) @signature [|Ljava/nio/channels/Channels$InputStreamChannel;.<init>:(Ljava/io/InputStream;)V|] @classDescriptor [|java:nio:channels:Channels$InputStreamChannel|] @type direct;
#L0da4aa.   return v0  @type object;

   }
    procedure [|java:nio:channels:WritableByteChannel|] [|java:nio:channels:Channels.newChannel|] ([|java:io:OutputStream|] v1 @type (object)) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0da4bc.   v0:= new [|java:nio:channels:Channels$OutputStreamChannel|];
#L0da4c0.   call temp:=  [|java:nio:channels:Channels$OutputStreamChannel.<init>|](v0, v1) @signature [|Ljava/nio/channels/Channels$OutputStreamChannel;.<init>:(Ljava/io/OutputStream;)V|] @classDescriptor [|java:nio:channels:Channels$OutputStreamChannel|] @type direct;
#L0da4c6.   return v0  @type object;

   }
    procedure [|java:io:InputStream|] [|java:nio:channels:Channels.newInputStream|] ([|java:nio:channels:ReadableByteChannel|] v1 @type (object)) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.newInputStream:(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0da4d8.   v0:= new [|java:nio:channels:Channels$ChannelInputStream|];
#L0da4dc.   call temp:=  [|java:nio:channels:Channels$ChannelInputStream.<init>|](v0, v1) @signature [|Ljava/nio/channels/Channels$ChannelInputStream;.<init>:(Ljava/nio/channels/ReadableByteChannel;)V|] @classDescriptor [|java:nio:channels:Channels$ChannelInputStream|] @type direct;
#L0da4e2.   return v0  @type object;

   }
    procedure [|java:io:OutputStream|] [|java:nio:channels:Channels.newOutputStream|] ([|java:nio:channels:WritableByteChannel|] v1 @type (object)) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.newOutputStream:(Ljava/nio/channels/WritableByteChannel;)Ljava/io/OutputStream;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0da4f4.   v0:= new [|java:nio:channels:Channels$ChannelOutputStream|];
#L0da4f8.   call temp:=  [|java:nio:channels:Channels$ChannelOutputStream.<init>|](v0, v1) @signature [|Ljava/nio/channels/Channels$ChannelOutputStream;.<init>:(Ljava/nio/channels/WritableByteChannel;)V|] @classDescriptor [|java:nio:channels:Channels$ChannelOutputStream|] @type direct;
#L0da4fe.   return v0  @type object;

   }
    procedure [|java:io:Reader|] [|java:nio:channels:Channels.newReader|] ([|java:nio:channels:ReadableByteChannel|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.newReader:(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)Ljava/io/Reader;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0da510.   if v3 != 0 then goto L0da524;
#L0da514.   v0:= new [|java:lang:NullPointerException|];
#L0da518.   v1:= "charsetName == null" @type (object, string);
#L0da51c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0da522.   throw v0;
#L0da524.   call temp:=  [|java:nio:charset:Charset.forName|](v3) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0da52a.   v0:= temp  @type object;
#L0da52c.   call temp:=  [|java:nio:charset:Charset.newDecoder|](v0) @signature [|Ljava/nio/charset/Charset;.newDecoder:()Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0da532.   v0:= temp  @type object;
#L0da534.   v1:= -1  @length 4;
#L0da536.   call temp:=  [|java:nio:channels:Channels.newReader|](v2, v0, v1) @signature [|Ljava/nio/channels/Channels;.newReader:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;|] @classDescriptor [|java:nio:channels:Channels|] @type static;
#L0da53c.   v0:= temp  @type object;
#L0da53e.   return v0  @type object;

   }
    procedure [|java:io:Reader|] [|java:nio:channels:Channels.newReader|] ([|java:nio:channels:ReadableByteChannel|] v2 @type (object), [|java:nio:charset:CharsetDecoder|] v3 @type (object), [|int|] v4) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.newReader:(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0da550.   v0:= new [|java:io:InputStreamReader|];
#L0da554.   v1:= new [|java:nio:channels:Channels$ChannelInputStream|];
#L0da558.   call temp:=  [|java:nio:channels:Channels$ChannelInputStream.<init>|](v1, v2) @signature [|Ljava/nio/channels/Channels$ChannelInputStream;.<init>:(Ljava/nio/channels/ReadableByteChannel;)V|] @classDescriptor [|java:nio:channels:Channels$ChannelInputStream|] @type direct;
#L0da55e.   call temp:=  [|java:io:InputStreamReader.<init>|](v0, v1, v3) @signature [|Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/CharsetDecoder;)V|] @classDescriptor [|java:io:InputStreamReader|] @type direct;
#L0da564.   return v0  @type object;

   }
    procedure [|java:io:Writer|] [|java:nio:channels:Channels.newWriter|] ([|java:nio:channels:WritableByteChannel|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.newWriter:(Ljava/nio/channels/WritableByteChannel;Ljava/lang/String;)Ljava/io/Writer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0da578.   if v3 != 0 then goto L0da58c;
#L0da57c.   v0:= new [|java:lang:NullPointerException|];
#L0da580.   v1:= "charsetName == null" @type (object, string);
#L0da584.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0da58a.   throw v0;
#L0da58c.   call temp:=  [|java:nio:charset:Charset.forName|](v3) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0da592.   v0:= temp  @type object;
#L0da594.   call temp:=  [|java:nio:charset:Charset.newEncoder|](v0) @signature [|Ljava/nio/charset/Charset;.newEncoder:()Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0da59a.   v0:= temp  @type object;
#L0da59c.   v1:= -1  @length 4;
#L0da59e.   call temp:=  [|java:nio:channels:Channels.newWriter|](v2, v0, v1) @signature [|Ljava/nio/channels/Channels;.newWriter:(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;|] @classDescriptor [|java:nio:channels:Channels|] @type static;
#L0da5a4.   v0:= temp  @type object;
#L0da5a6.   return v0  @type object;

   }
    procedure [|java:io:Writer|] [|java:nio:channels:Channels.newWriter|] ([|java:nio:channels:WritableByteChannel|] v2 @type (object), [|java:nio:charset:CharsetEncoder|] v3 @type (object), [|int|] v4) @owner [|java:nio:channels:Channels|] @signature [|Ljava/nio/channels/Channels;.newWriter:(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0da5b8.   v0:= new [|java:io:OutputStreamWriter|];
#L0da5bc.   v1:= new [|java:nio:channels:Channels$ChannelOutputStream|];
#L0da5c0.   call temp:=  [|java:nio:channels:Channels$ChannelOutputStream.<init>|](v1, v2) @signature [|Ljava/nio/channels/Channels$ChannelOutputStream;.<init>:(Ljava/nio/channels/WritableByteChannel;)V|] @classDescriptor [|java:nio:channels:Channels$ChannelOutputStream|] @type direct;
#L0da5c6.   call temp:=  [|java:io:OutputStreamWriter.<init>|](v0, v1, v3) @signature [|Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V|] @classDescriptor [|java:io:OutputStreamWriter|] @type direct;
#L0da5cc.   return v0  @type object;

   }
record [|java:nio:channels:ClosedByInterruptException|]  @type class @AccessFlag PUBLIC  extends [|java:nio:channels:AsynchronousCloseException|] {
   }
      global [|long|] @@[|java:nio:channels:ClosedByInterruptException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:ClosedByInterruptException.<init>|] ([|java:nio:channels:ClosedByInterruptException|] v0 @type (this)) @owner [|java:nio:channels:ClosedByInterruptException|] @signature [|Ljava/nio/channels/ClosedByInterruptException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da5e0.   call temp:=  [|java:nio:channels:AsynchronousCloseException.<init>|](v0) @signature [|Ljava/nio/channels/AsynchronousCloseException;.<init>:()V|] @classDescriptor [|java:nio:channels:AsynchronousCloseException|] @type direct;
#L0da5e6.   return @void ;

   }
record [|java:nio:channels:ClosedSelectorException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:ClosedSelectorException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:ClosedSelectorException.<init>|] ([|java:nio:channels:ClosedSelectorException|] v0 @type (this)) @owner [|java:nio:channels:ClosedSelectorException|] @signature [|Ljava/nio/channels/ClosedSelectorException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da5f8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da5fe.   return @void ;

   }
record [|java:nio:channels:ConnectionPendingException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:ConnectionPendingException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:ConnectionPendingException.<init>|] ([|java:nio:channels:ConnectionPendingException|] v0 @type (this)) @owner [|java:nio:channels:ConnectionPendingException|] @signature [|Ljava/nio/channels/ConnectionPendingException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da610.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da616.   return @void ;

   }
record [|java:nio:channels:FileChannel$MapMode|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:String|] [|java:nio:channels:FileChannel$MapMode.displayName|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:nio:channels:FileChannel$MapMode|] @@[|java:nio:channels:FileChannel$MapMode.PRIVATE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:nio:channels:FileChannel$MapMode|] @@[|java:nio:channels:FileChannel$MapMode.READ_ONLY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:nio:channels:FileChannel$MapMode|] @@[|java:nio:channels:FileChannel$MapMode.READ_WRITE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:FileChannel$MapMode.<clinit>|] () @owner [|java:nio:channels:FileChannel$MapMode|] @signature [|Ljava/nio/channels/FileChannel$MapMode;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0da628.   v0:= new [|java:nio:channels:FileChannel$MapMode|];
#L0da62c.   v1:= "PRIVATE" @type (object, string);
#L0da630.   call temp:=  [|java:nio:channels:FileChannel$MapMode.<init>|](v0, v1) @signature [|Ljava/nio/channels/FileChannel$MapMode;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:channels:FileChannel$MapMode|] @type direct;
#L0da636.   @@[|java:nio:channels:FileChannel$MapMode.PRIVATE|] := v0  @type object;
#L0da63a.   v0:= new [|java:nio:channels:FileChannel$MapMode|];
#L0da63e.   v1:= "READ_ONLY" @type (object, string);
#L0da642.   call temp:=  [|java:nio:channels:FileChannel$MapMode.<init>|](v0, v1) @signature [|Ljava/nio/channels/FileChannel$MapMode;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:channels:FileChannel$MapMode|] @type direct;
#L0da648.   @@[|java:nio:channels:FileChannel$MapMode.READ_ONLY|] := v0  @type object;
#L0da64c.   v0:= new [|java:nio:channels:FileChannel$MapMode|];
#L0da650.   v1:= "READ_WRITE" @type (object, string);
#L0da654.   call temp:=  [|java:nio:channels:FileChannel$MapMode.<init>|](v0, v1) @signature [|Ljava/nio/channels/FileChannel$MapMode;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:channels:FileChannel$MapMode|] @type direct;
#L0da65a.   @@[|java:nio:channels:FileChannel$MapMode.READ_WRITE|] := v0  @type object;
#L0da65e.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:FileChannel$MapMode.<init>|] ([|java:nio:channels:FileChannel$MapMode|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:nio:channels:FileChannel$MapMode|] @signature [|Ljava/nio/channels/FileChannel$MapMode;.<init>:(Ljava/lang/String;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0da670.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0da676.   v0.[|java:nio:channels:FileChannel$MapMode.displayName|]  := v1 @type object;
#L0da67a.   return @void ;

   }
    procedure [|java:lang:String|] [|java:nio:channels:FileChannel$MapMode.toString|] ([|java:nio:channels:FileChannel$MapMode|] v1 @type (this)) @owner [|java:nio:channels:FileChannel$MapMode|] @signature [|Ljava/nio/channels/FileChannel$MapMode;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0da68c.   v0:= v1.[|java:nio:channels:FileChannel$MapMode.displayName|]   @type object;
#L0da690.   return v0  @type object;

   }
record [|java:nio:channels:FileLockInterruptionException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:nio:channels:FileLockInterruptionException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:FileLockInterruptionException.<init>|] ([|java:nio:channels:FileLockInterruptionException|] v0 @type (this)) @owner [|java:nio:channels:FileLockInterruptionException|] @signature [|Ljava/nio/channels/FileLockInterruptionException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da6a4.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0da6aa.   return @void ;

   }
record [|java:nio:channels:IllegalBlockingModeException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:IllegalBlockingModeException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:IllegalBlockingModeException.<init>|] ([|java:nio:channels:IllegalBlockingModeException|] v0 @type (this)) @owner [|java:nio:channels:IllegalBlockingModeException|] @signature [|Ljava/nio/channels/IllegalBlockingModeException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da6bc.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da6c2.   return @void ;

   }
record [|java:nio:channels:IllegalSelectorException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalArgumentException|] {
   }
      global [|long|] @@[|java:nio:channels:IllegalSelectorException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:IllegalSelectorException.<init>|] ([|java:nio:channels:IllegalSelectorException|] v0 @type (this)) @owner [|java:nio:channels:IllegalSelectorException|] @signature [|Ljava/nio/channels/IllegalSelectorException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da6d4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0da6da.   return @void ;

   }
record [|java:nio:channels:NoConnectionPendingException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:NoConnectionPendingException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:NoConnectionPendingException.<init>|] ([|java:nio:channels:NoConnectionPendingException|] v0 @type (this)) @owner [|java:nio:channels:NoConnectionPendingException|] @signature [|Ljava/nio/channels/NoConnectionPendingException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da6ec.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da6f2.   return @void ;

   }
record [|java:nio:channels:NonReadableChannelException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:NonReadableChannelException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:NonReadableChannelException.<init>|] ([|java:nio:channels:NonReadableChannelException|] v0 @type (this)) @owner [|java:nio:channels:NonReadableChannelException|] @signature [|Ljava/nio/channels/NonReadableChannelException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da704.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da70a.   return @void ;

   }
record [|java:nio:channels:NonWritableChannelException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:NonWritableChannelException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:NonWritableChannelException.<init>|] ([|java:nio:channels:NonWritableChannelException|] v0 @type (this)) @owner [|java:nio:channels:NonWritableChannelException|] @signature [|Ljava/nio/channels/NonWritableChannelException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da71c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da722.   return @void ;

   }
record [|java:nio:channels:NotYetBoundException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:NotYetBoundException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:NotYetBoundException.<init>|] ([|java:nio:channels:NotYetBoundException|] v0 @type (this)) @owner [|java:nio:channels:NotYetBoundException|] @signature [|Ljava/nio/channels/NotYetBoundException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da734.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da73a.   return @void ;

   }
record [|java:nio:channels:NotYetConnectedException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:NotYetConnectedException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:NotYetConnectedException.<init>|] ([|java:nio:channels:NotYetConnectedException|] v0 @type (this)) @owner [|java:nio:channels:NotYetConnectedException|] @signature [|Ljava/nio/channels/NotYetConnectedException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da74c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da752.   return @void ;

   }
record [|java:nio:channels:OverlappingFileLockException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:nio:channels:OverlappingFileLockException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:OverlappingFileLockException.<init>|] ([|java:nio:channels:OverlappingFileLockException|] v0 @type (this)) @owner [|java:nio:channels:OverlappingFileLockException|] @signature [|Ljava/nio/channels/OverlappingFileLockException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da764.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0da76a.   return @void ;

   }
record [|java:nio:channels:UnresolvedAddressException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalArgumentException|] {
   }
      global [|long|] @@[|java:nio:channels:UnresolvedAddressException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:UnresolvedAddressException.<init>|] ([|java:nio:channels:UnresolvedAddressException|] v0 @type (this)) @owner [|java:nio:channels:UnresolvedAddressException|] @signature [|Ljava/nio/channels/UnresolvedAddressException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da77c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0da782.   return @void ;

   }
record [|java:nio:channels:UnsupportedAddressTypeException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalArgumentException|] {
   }
      global [|long|] @@[|java:nio:channels:UnsupportedAddressTypeException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:channels:UnsupportedAddressTypeException.<init>|] ([|java:nio:channels:UnsupportedAddressTypeException|] v0 @type (this)) @owner [|java:nio:channels:UnsupportedAddressTypeException|] @signature [|Ljava/nio/channels/UnsupportedAddressTypeException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da794.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0da79a.   return @void ;

   }
record [|java:nio:channels:spi:AbstractInterruptibleChannel$1|]  @type class @AccessFlag  extends  [|java:lang:Runnable|] {
      [|java:nio:channels:spi:AbstractInterruptibleChannel|] [|java:nio:channels:spi:AbstractInterruptibleChannel$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:nio:channels:spi:AbstractInterruptibleChannel$1.<init>|] ([|java:nio:channels:spi:AbstractInterruptibleChannel$1|] v0 @type (this), [|java:nio:channels:spi:AbstractInterruptibleChannel|] v1 @type (object)) @owner [|java:nio:channels:spi:AbstractInterruptibleChannel$1|] @signature [|Ljava/nio/channels/spi/AbstractInterruptibleChannel$1;.<init>:(Ljava/nio/channels/spi/AbstractInterruptibleChannel;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0da7ac.   v0.[|java:nio:channels:spi:AbstractInterruptibleChannel$1.this$0|]  := v1 @type object;
#L0da7b0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0da7b6.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:spi:AbstractInterruptibleChannel$1.run|] ([|java:nio:channels:spi:AbstractInterruptibleChannel$1|] v2 @type (this)) @owner [|java:nio:channels:spi:AbstractInterruptibleChannel$1|] @signature [|Ljava/nio/channels/spi/AbstractInterruptibleChannel$1;.run:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0da7c8.   v0:= v2.[|java:nio:channels:spi:AbstractInterruptibleChannel$1.this$0|]   @type object;
#L0da7cc.   v1:= 1  @length 4;
#L0da7ce.   v0.[|java:nio:channels:spi:AbstractInterruptibleChannel.interrupted|]  := v1 @boolean;
#L0da7d2.   v0:= v2.[|java:nio:channels:spi:AbstractInterruptibleChannel$1.this$0|]   @type object;
#L0da7d6.   call temp:=  [|java:nio:channels:spi:AbstractInterruptibleChannel.close|](v0) @signature [|Ljava/nio/channels/spi/AbstractInterruptibleChannel;.close:()V|] @classDescriptor [|java:nio:channels:spi:AbstractInterruptibleChannel|] @type virtual;
#L0da7dc.   return @void ;
#L0da7de.   v0:= Exception  @type object;
#L0da7e0.   goto L0da7dc;
  catch  [|java:io:IOException|] @[L0da7c8..L0da7dc] goto L0da7de;

   }
record [|java:nio:channels:spi:AbstractSelector$1|]  @type class @AccessFlag  extends  [|java:lang:Runnable|] {
      [|java:nio:channels:spi:AbstractSelector|] [|java:nio:channels:spi:AbstractSelector$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelector$1.<init>|] ([|java:nio:channels:spi:AbstractSelector$1|] v0 @type (this), [|java:nio:channels:spi:AbstractSelector|] v1 @type (object)) @owner [|java:nio:channels:spi:AbstractSelector$1|] @signature [|Ljava/nio/channels/spi/AbstractSelector$1;.<init>:(Ljava/nio/channels/spi/AbstractSelector;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L0da800.   v0.[|java:nio:channels:spi:AbstractSelector$1.this$0|]  := v1 @type object;
#L0da804.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0da80a.   return @void ;

   }
    procedure [|void|] [|java:nio:channels:spi:AbstractSelector$1.run|] ([|java:nio:channels:spi:AbstractSelector$1|] v1 @type (this)) @owner [|java:nio:channels:spi:AbstractSelector$1|] @signature [|Ljava/nio/channels/spi/AbstractSelector$1;.run:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0da81c.   v0:= v1.[|java:nio:channels:spi:AbstractSelector$1.this$0|]   @type object;
#L0da820.   call temp:=  [|java:nio:channels:spi:AbstractSelector.wakeup|](v0) @signature [|Ljava/nio/channels/spi/AbstractSelector;.wakeup:()Ljava/nio/channels/Selector;|] @classDescriptor [|java:nio:channels:spi:AbstractSelector|] @type virtual;
#L0da826.   return @void ;

   }
record [|java:nio:charset:CharacterCodingException|]  @type class @AccessFlag PUBLIC  extends [|java:io:IOException|] {
   }
      global [|long|] @@[|java:nio:charset:CharacterCodingException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:charset:CharacterCodingException.<init>|] ([|java:nio:charset:CharacterCodingException|] v0 @type (this)) @owner [|java:nio:charset:CharacterCodingException|] @signature [|Ljava/nio/charset/CharacterCodingException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0da838.   call temp:=  [|java:io:IOException.<init>|](v0) @signature [|Ljava/io/IOException;.<init>:()V|] @classDescriptor [|java:io:IOException|] @type direct;
#L0da83e.   return @void ;

   }
record [|java:nio:charset:Charset|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:lang:Comparable|] {
      [|java:util:HashSet|] [|java:nio:charset:Charset.aliasesSet|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|java:nio:charset:Charset.canonicalName|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:util:HashMap|] @@[|java:nio:charset:Charset.CACHED_CHARSETS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:nio:charset:Charset|] @@[|java:nio:charset:Charset.DEFAULT_CHARSET|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:charset:Charset.<clinit>|] () @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0da850.   v0:= new [|java:util:HashMap|];
#L0da854.   call temp:=  [|java:util:HashMap.<init>|](v0) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0da85a.   @@[|java:nio:charset:Charset.CACHED_CHARSETS|] := v0  @type object;
#L0da85e.   call temp:=  [|java:nio:charset:Charset.getDefaultCharset|]() @signature [|Ljava/nio/charset/Charset;.getDefaultCharset:()Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0da864.   v0:= temp  @type object;
#L0da866.   @@[|java:nio:charset:Charset.DEFAULT_CHARSET|] := v0  @type object;
#L0da86a.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:Charset.<init>|] ([|java:nio:charset:Charset|] v5 @type (this), [|java:lang:String|] v6 @type (object), [|java:lang:String|][] v7 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.<init>:(Ljava/lang/String;[Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0da87c.   call temp:=  [|java:lang:Object.<init>|](v5) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0da882.   call temp:=  [|java:nio:charset:Charset.checkCharsetName|](v6) @signature [|Ljava/nio/charset/Charset;.checkCharsetName:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0da888.   v5.[|java:nio:charset:Charset.canonicalName|]  := v6 @type object;
#L0da88c.   v4:= new [|java:util:HashSet|];
#L0da890.   call temp:=  [|java:util:HashSet.<init>|](v4) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0da896.   v5.[|java:nio:charset:Charset.aliasesSet|]  := v4 @type object;
#L0da89a.   if v7 == 0 then goto L0da8c2;
#L0da89e.   v1:= v7  @type object;
#L0da8a0.   v3:= v1.length;
#L0da8a2.   v2:= 0  @length 4;
#L0da8a4.   if v2 >= v3 then goto L0da8c2;
#L0da8a8.   v0:= v1[v2]  @type object;
#L0da8ac.   call temp:=  [|java:nio:charset:Charset.checkCharsetName|](v0) @signature [|Ljava/nio/charset/Charset;.checkCharsetName:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0da8b2.   v4:= v5.[|java:nio:charset:Charset.aliasesSet|]   @type object;
#L0da8b6.   call temp:=  [|java:util:HashSet.add|](v4, v0) @signature [|Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L0da8bc.   v2:= v2 + 1;
#L0da8c0.   goto L0da8a4;
#L0da8c2.   return @void ;

   }
    procedure [|java:util:SortedMap|] [|java:nio:charset:Charset.availableCharsets|] () @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.availableCharsets:()Ljava/util/SortedMap;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L0da8d4.   v4:= new [|java:util:TreeMap|];
#L0da8d8.   v9:= @@[|java:lang:String.CASE_INSENSITIVE_ORDER|]   @type object;
#L0da8dc.   call temp:=  [|java:util:TreeMap.<init>|](v4, v9) @signature [|Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L0da8e2.   call temp:=  [|libcore:icu:NativeConverter.getAvailableCharsetNames|]() @signature [|Llibcore/icu/NativeConverter;.getAvailableCharsetNames:()[Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0da8e8.   v0:= temp  @type object;
#L0da8ea.   v8:= v0.length;
#L0da8ec.   v6:= 0  @length 4;
#L0da8ee.   if v6 >= v8 then goto L0da912;
#L0da8f2.   v2:= v0[v6]  @type object;
#L0da8f6.   call temp:=  [|libcore:icu:NativeConverter.charsetForName|](v2) @signature [|Llibcore/icu/NativeConverter;.charsetForName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0da8fc.   v1:= temp  @type object;
#L0da8fe.   call temp:=  [|java:nio:charset:Charset.name|](v1) @signature [|Ljava/nio/charset/Charset;.name:()Ljava/lang/String;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0da904.   v9:= temp  @type object;
#L0da906.   call temp:=  [|java:util:TreeMap.put|](v4, v9, v1) @signature [|Ljava/util/TreeMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L0da90c.   v6:= v6 + 1;
#L0da910.   goto L0da8ee;
#L0da912.   v9:= new [|java:nio:charset:spi:CharsetProvider|];
#L0da916.   call temp:=  [|java:util:ServiceLoader.load|](v9) @signature [|Ljava/util/ServiceLoader;.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;|] @classDescriptor [|java:util:ServiceLoader|] @type static;
#L0da91c.   v9:= temp  @type object;
#L0da91e.   call temp:=  [|java:util:ServiceLoader.iterator|](v9) @signature [|Ljava/util/ServiceLoader;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:ServiceLoader|] @type virtual;
#L0da924.   v6:= temp  @type object;
#L0da926.   call temp:=  [|java:util:Iterator.hasNext|](v6) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0da92c.   v9:= temp;
#L0da92e.   if v9 == 0 then goto L0da982;
#L0da932.   call temp:=  [|java:util:Iterator.next|](v6) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0da938.   v3:= temp  @type object;
#L0da93a.   v3:= ([|java:nio:charset:spi:CharsetProvider|])v3;
#L0da93e.   call temp:=  [|java:nio:charset:spi:CharsetProvider.charsets|](v3) @signature [|Ljava/nio/charset/spi/CharsetProvider;.charsets:()Ljava/util/Iterator;|] @classDescriptor [|java:nio:charset:spi:CharsetProvider|] @type virtual;
#L0da944.   v7:= temp  @type object;
#L0da946.   call temp:=  [|java:util:Iterator.hasNext|](v7) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0da94c.   v9:= temp;
#L0da94e.   if v9 == 0 then goto L0da926;
#L0da952.   call temp:=  [|java:util:Iterator.next|](v7) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0da958.   v5:= temp  @type object;
#L0da95a.   v5:= ([|java:nio:charset:Charset|])v5;
#L0da95e.   call temp:=  [|java:nio:charset:Charset.name|](v5) @signature [|Ljava/nio/charset/Charset;.name:()Ljava/lang/String;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0da964.   v9:= temp  @type object;
#L0da966.   call temp:=  [|java:util:TreeMap.containsKey|](v4, v9) @signature [|Ljava/util/TreeMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L0da96c.   v9:= temp;
#L0da96e.   if v9 != 0 then goto L0da946;
#L0da972.   call temp:=  [|java:nio:charset:Charset.name|](v5) @signature [|Ljava/nio/charset/Charset;.name:()Ljava/lang/String;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0da978.   v9:= temp  @type object;
#L0da97a.   call temp:=  [|java:util:TreeMap.put|](v4, v9, v5) @signature [|Ljava/util/TreeMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L0da980.   goto L0da946;
#L0da982.   call temp:=  [|java:util:Collections.unmodifiableSortedMap|](v4) @signature [|Ljava/util/Collections;.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;|] @classDescriptor [|java:util:Collections|] @type static;
#L0da988.   v9:= temp  @type object;
#L0da98a.   return v9  @type object;

   }
    procedure [|java:nio:charset:Charset|] [|java:nio:charset:Charset.cacheCharset|] ([|java:lang:String|] v6 @type (object), [|java:nio:charset:Charset|] v7 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.cacheCharset:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0da99c.   v5:= @@[|java:nio:charset:Charset.CACHED_CHARSETS|]   @type object;
#L0da9a0.   (@monitorenter v5)
#L0da9a2.   call temp:=  [|java:nio:charset:Charset.name|](v7) @signature [|Ljava/nio/charset/Charset;.name:()Ljava/lang/String;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0da9a8.   v2:= temp  @type object;
#L0da9aa.   v4:= @@[|java:nio:charset:Charset.CACHED_CHARSETS|]   @type object;
#L0da9ae.   call temp:=  [|java:util:HashMap.get|](v4, v2) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0da9b4.   v1:= temp  @type object;
#L0da9b6.   v1:= ([|java:nio:charset:Charset|])v1;
#L0da9ba.   if v1 != 0 then goto L0da9c0;
#L0da9be.   v1:= v7  @type object;
#L0da9c0.   v4:= @@[|java:nio:charset:Charset.CACHED_CHARSETS|]   @type object;
#L0da9c4.   call temp:=  [|java:util:HashMap.put|](v4, v2, v1) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0da9ca.   v4:= @@[|java:nio:charset:Charset.CACHED_CHARSETS|]   @type object;
#L0da9ce.   call temp:=  [|java:util:HashMap.put|](v4, v6, v1) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0da9d4.   v4:= v7.[|java:nio:charset:Charset.aliasesSet|]   @type object;
#L0da9d8.   call temp:=  [|java:util:HashSet.iterator|](v4) @signature [|Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L0da9de.   v3:= temp  @type object;
#L0da9e0.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0da9e6.   v4:= temp;
#L0da9e8.   if v4 == 0 then goto L0daa0a;
#L0da9ec.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0da9f2.   v0:= temp  @type object;
#L0da9f4.   v0:= ([|java:lang:String|])v0;
#L0da9f8.   v4:= @@[|java:nio:charset:Charset.CACHED_CHARSETS|]   @type object;
#L0da9fc.   call temp:=  [|java:util:HashMap.put|](v4, v0, v1) @signature [|Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0daa02.   goto L0da9e0;
#L0daa04.   v4:= Exception  @type object;
#L0daa06.   (@monitorexit v5)
#L0daa08.   throw v4;
#L0daa0a.   (@monitorexit v5)
#L0daa0c.   return v1  @type object;
  catch  [|any|] @[L0da9a2..L0daa08] goto L0daa04;
  catch  [|any|] @[L0daa0a..L0daa0c] goto L0daa04;

   }
    procedure [|void|] [|java:nio:charset:Charset.checkCharsetName|] ([|java:lang:String|] v3 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.checkCharsetName:(Ljava/lang/String;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0daa34.   call temp:=  [|java:lang:String.isEmpty|](v3) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0daa3a.   v2:= temp;
#L0daa3c.   if v2 == 0 then goto L0daa4c;
#L0daa40.   v2:= new [|java:nio:charset:IllegalCharsetNameException|];
#L0daa44.   call temp:=  [|java:nio:charset:IllegalCharsetNameException.<init>|](v2, v3) @signature [|Ljava/nio/charset/IllegalCharsetNameException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:charset:IllegalCharsetNameException|] @type direct;
#L0daa4a.   throw v2;
#L0daa4c.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0daa52.   v1:= temp;
#L0daa54.   v0:= 0  @length 4;
#L0daa56.   if v0 >= v1 then goto L0daa80;
#L0daa5a.   call temp:=  [|java:lang:String.charAt|](v3, v0) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0daa60.   v2:= temp;
#L0daa62.   call temp:=  [|java:nio:charset:Charset.isValidCharsetNameCharacter|](v2) @signature [|Ljava/nio/charset/Charset;.isValidCharsetNameCharacter:(C)Z|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0daa68.   v2:= temp;
#L0daa6a.   if v2 != 0 then goto L0daa7a;
#L0daa6e.   v2:= new [|java:nio:charset:IllegalCharsetNameException|];
#L0daa72.   call temp:=  [|java:nio:charset:IllegalCharsetNameException.<init>|](v2, v3) @signature [|Ljava/nio/charset/IllegalCharsetNameException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:charset:IllegalCharsetNameException|] @type direct;
#L0daa78.   throw v2;
#L0daa7a.   v0:= v0 + 1;
#L0daa7e.   goto L0daa56;
#L0daa80.   return @void ;

   }
    procedure [|java:nio:charset:Charset|] [|java:nio:charset:Charset.defaultCharset|] () @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.defaultCharset:()Ljava/nio/charset/Charset;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0daa94.   v0:= @@[|java:nio:charset:Charset.DEFAULT_CHARSET|]   @type object;
#L0daa98.   return v0  @type object;

   }
    procedure [|java:nio:charset:Charset|] [|java:nio:charset:Charset.forName|] ([|java:lang:String|] v5 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0daaac.   v4:= @@[|java:nio:charset:Charset.CACHED_CHARSETS|]   @type object;
#L0daab0.   (@monitorenter v4)
#L0daab2.   v3:= @@[|java:nio:charset:Charset.CACHED_CHARSETS|]   @type object;
#L0daab6.   call temp:=  [|java:util:HashMap.get|](v3, v5) @signature [|Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:HashMap|] @type virtual;
#L0daabc.   v1:= temp  @type object;
#L0daabe.   v1:= ([|java:nio:charset:Charset|])v1;
#L0daac2.   if v1 == 0 then goto L0daacc;
#L0daac6.   (@monitorexit v4)
#L0daac8.   v3:= v1  @type object;
#L0daaca.   return v3  @type object;
#L0daacc.   (@monitorexit v4)
#L0daace.   if v5 != 0 then goto L0daae6;
#L0daad2.   v3:= new [|java:nio:charset:IllegalCharsetNameException|];
#L0daad6.   v4:= 0  @length 4;
#L0daad8.   call temp:=  [|java:nio:charset:IllegalCharsetNameException.<init>|](v3, v4) @signature [|Ljava/nio/charset/IllegalCharsetNameException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:charset:IllegalCharsetNameException|] @type direct;
#L0daade.   throw v3;
#L0daae0.   v3:= Exception  @type object;
#L0daae2.   (@monitorexit v4)
#L0daae4.   throw v3;
#L0daae6.   call temp:=  [|java:nio:charset:Charset.checkCharsetName|](v5) @signature [|Ljava/nio/charset/Charset;.checkCharsetName:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0daaec.   call temp:=  [|libcore:icu:NativeConverter.charsetForName|](v5) @signature [|Llibcore/icu/NativeConverter;.charsetForName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0daaf2.   v1:= temp  @type object;
#L0daaf4.   if v1 == 0 then goto L0dab02;
#L0daaf8.   call temp:=  [|java:nio:charset:Charset.cacheCharset|](v5, v1) @signature [|Ljava/nio/charset/Charset;.cacheCharset:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0daafe.   v3:= temp  @type object;
#L0dab00.   goto L0daaca;
#L0dab02.   v3:= new [|java:nio:charset:spi:CharsetProvider|];
#L0dab06.   call temp:=  [|java:util:ServiceLoader.load|](v3) @signature [|Ljava/util/ServiceLoader;.load:(Ljava/lang/Class;)Ljava/util/ServiceLoader;|] @classDescriptor [|java:util:ServiceLoader|] @type static;
#L0dab0c.   v3:= temp  @type object;
#L0dab0e.   call temp:=  [|java:util:ServiceLoader.iterator|](v3) @signature [|Ljava/util/ServiceLoader;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:ServiceLoader|] @type virtual;
#L0dab14.   v2:= temp  @type object;
#L0dab16.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0dab1c.   v3:= temp;
#L0dab1e.   if v3 == 0 then goto L0dab44;
#L0dab22.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0dab28.   v0:= temp  @type object;
#L0dab2a.   v0:= ([|java:nio:charset:spi:CharsetProvider|])v0;
#L0dab2e.   call temp:=  [|java:nio:charset:spi:CharsetProvider.charsetForName|](v0, v5) @signature [|Ljava/nio/charset/spi/CharsetProvider;.charsetForName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:spi:CharsetProvider|] @type virtual;
#L0dab34.   v1:= temp  @type object;
#L0dab36.   if v1 == 0 then goto L0dab16;
#L0dab3a.   call temp:=  [|java:nio:charset:Charset.cacheCharset|](v5, v1) @signature [|Ljava/nio/charset/Charset;.cacheCharset:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0dab40.   v3:= temp  @type object;
#L0dab42.   goto L0daaca;
#L0dab44.   v3:= new [|java:nio:charset:UnsupportedCharsetException|];
#L0dab48.   call temp:=  [|java:nio:charset:UnsupportedCharsetException.<init>|](v3, v5) @signature [|Ljava/nio/charset/UnsupportedCharsetException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:charset:UnsupportedCharsetException|] @type direct;
#L0dab4e.   throw v3;
  catch  [|any|] @[L0daab2..L0daace] goto L0daae0;
  catch  [|any|] @[L0daae2..L0daae4] goto L0daae0;

   }
    procedure [|java:nio:charset:Charset|] [|java:nio:charset:Charset.forNameUEE|] ([|java:lang:String|] v3 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.forNameUEE:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L0dab74.   call temp:=  [|java:nio:charset:Charset.forName|](v3) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0dab7a.   v2:= temp  @type object;
#L0dab7c.   return v2  @type object;
#L0dab7e.   v0:= Exception  @type object;
#L0dab80.   v1:= new [|java:io:UnsupportedEncodingException|];
#L0dab84.   call temp:=  [|java:io:UnsupportedEncodingException.<init>|](v1, v3) @signature [|Ljava/io/UnsupportedEncodingException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:UnsupportedEncodingException|] @type direct;
#L0dab8a.   call temp:=  [|java:io:UnsupportedEncodingException.initCause|](v1, v0) @signature [|Ljava/io/UnsupportedEncodingException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:io:UnsupportedEncodingException|] @type virtual;
#L0dab90.   throw v1;
  catch  [|java:lang:Exception|] @[L0dab74..L0dab7a] goto L0dab7e;

   }
    procedure [|java:nio:charset:Charset|] [|java:nio:charset:Charset.getDefaultCharset|] () @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.getDefaultCharset:()Ljava/nio/charset/Charset;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0dabb4.   v2:= "file.encoding" @type (object, string);
#L0dabb8.   v3:= "UTF-8" @type (object, string);
#L0dabbc.   call temp:=  [|java:lang:System.getProperty|](v2, v3) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0dabc2.   v1:= temp  @type object;
#L0dabc4.   call temp:=  [|java:nio:charset:Charset.forName|](v1) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0dabca.   v2:= temp  @type object;
#L0dabcc.   return v2  @type object;
#L0dabce.   v0:= Exception  @type object;
#L0dabd0.   v2:= "UTF-8" @type (object, string);
#L0dabd4.   call temp:=  [|java:nio:charset:Charset.forName|](v2) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0dabda.   v2:= temp  @type object;
#L0dabdc.   goto L0dabcc;
  catch  [|java:nio:charset:UnsupportedCharsetException|] @[L0dabc4..L0dabca] goto L0dabce;

   }
    procedure [|boolean|] [|java:nio:charset:Charset.isSupported|] ([|java:lang:String|] v2 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.isSupported:(Ljava/lang/String;)Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
      
#L0dac00.   call temp:=  [|java:nio:charset:Charset.forName|](v2) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0dac06.   v1:= 1  @length 4;
#L0dac08.   return v1;
#L0dac0a.   v0:= Exception  @type object;
#L0dac0c.   v1:= 0  @length 4;
#L0dac0e.   goto L0dac08;
  catch  [|java:nio:charset:UnsupportedCharsetException|] @[L0dac00..L0dac06] goto L0dac0a;

   }
    procedure [|boolean|] [|java:nio:charset:Charset.isValidCharsetNameCharacter|] ([|char|] v1) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.isValidCharsetNameCharacter:(C)Z|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L0dac30.   v0:= 65  @length 16;
#L0dac34.   if v1 < v0 then goto L0dac40;
#L0dac38.   v0:= 90  @length 16;
#L0dac3c.   if v1 <= v0 then goto L0dac80;
#L0dac40.   v0:= 97  @length 16;
#L0dac44.   if v1 < v0 then goto L0dac50;
#L0dac48.   v0:= 122  @length 16;
#L0dac4c.   if v1 <= v0 then goto L0dac80;
#L0dac50.   v0:= 48  @length 16;
#L0dac54.   if v1 < v0 then goto L0dac60;
#L0dac58.   v0:= 57  @length 16;
#L0dac5c.   if v1 <= v0 then goto L0dac80;
#L0dac60.   v0:= 45  @length 16;
#L0dac64.   if v1 == v0 then goto L0dac80;
#L0dac68.   v0:= 46  @length 16;
#L0dac6c.   if v1 == v0 then goto L0dac80;
#L0dac70.   v0:= 58  @length 16;
#L0dac74.   if v1 == v0 then goto L0dac80;
#L0dac78.   v0:= 95  @length 16;
#L0dac7c.   if v1 != v0 then goto L0dac84;
#L0dac80.   v0:= 1  @length 4;
#L0dac82.   return v0;
#L0dac84.   v0:= 0  @length 4;
#L0dac86.   goto L0dac82;

   }
    procedure [|java:util:Set|] [|java:nio:charset:Charset.aliases|] ([|java:nio:charset:Charset|] v1 @type (this)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.aliases:()Ljava/util/Set;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0dac98.   v0:= v1.[|java:nio:charset:Charset.aliasesSet|]   @type object;
#L0dac9c.   call temp:=  [|java:util:Collections.unmodifiableSet|](v0) @signature [|Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;|] @classDescriptor [|java:util:Collections|] @type static;
#L0daca2.   v0:= temp  @type object;
#L0daca4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:nio:charset:Charset.canEncode|] ([|java:nio:charset:Charset|] v1 @type (this)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.canEncode:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0dacb8.   v0:= 1  @length 4;
#L0dacba.   return v0;

   }
    procedure [|int|] [|java:nio:charset:Charset.compareTo|] ([|java:nio:charset:Charset|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L0daccc.   v2:= ([|java:nio:charset:Charset|])v2;
#L0dacd0.   call temp:=  [|java:nio:charset:Charset.compareTo|](v1, v2) @signature [|Ljava/nio/charset/Charset;.compareTo:(Ljava/nio/charset/Charset;)I|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0dacd6.   v0:= temp;
#L0dacd8.   return v0;

   }
    procedure [|int|] [|java:nio:charset:Charset.compareTo|] ([|java:nio:charset:Charset|] v2 @type (this), [|java:nio:charset:Charset|] v3 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.compareTo:(Ljava/nio/charset/Charset;)I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0dacec.   v0:= v2.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0dacf0.   v1:= v3.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0dacf4.   call temp:=  [|java:lang:String.compareToIgnoreCase|](v0, v1) @signature [|Ljava/lang/String;.compareToIgnoreCase:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0dacfa.   v0:= temp;
#L0dacfc.   return v0;

   }
    procedure [|boolean|] [|java:nio:charset:Charset.contains|] ([|java:nio:charset:Charset|] v0 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.contains:(Ljava/nio/charset/Charset;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:CharBuffer|] [|java:nio:charset:Charset.decode|] ([|java:nio:charset:Charset|] v3 @type (this), [|java:nio:ByteBuffer|] v4 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0dad10.   call temp:=  [|java:nio:charset:Charset.newDecoder|](v3) @signature [|Ljava/nio/charset/Charset;.newDecoder:()Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0dad16.   v1:= temp  @type object;
#L0dad18.   v2:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L0dad1c.   call temp:=  [|java:nio:charset:CharsetDecoder.onMalformedInput|](v1, v2) @signature [|Ljava/nio/charset/CharsetDecoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0dad22.   v1:= temp  @type object;
#L0dad24.   v2:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L0dad28.   call temp:=  [|java:nio:charset:CharsetDecoder.onUnmappableCharacter|](v1, v2) @signature [|Ljava/nio/charset/CharsetDecoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0dad2e.   v1:= temp  @type object;
#L0dad30.   call temp:=  [|java:nio:charset:CharsetDecoder.decode|](v1, v4) @signature [|Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0dad36.   v1:= temp  @type object;
#L0dad38.   return v1  @type object;
#L0dad3a.   v0:= Exception  @type object;
#L0dad3c.   v1:= new [|java:lang:Error|];
#L0dad40.   call temp:=  [|java:nio:charset:CharacterCodingException.getMessage|](v0) @signature [|Ljava/nio/charset/CharacterCodingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:nio:charset:CharacterCodingException|] @type virtual;
#L0dad46.   v2:= temp  @type object;
#L0dad48.   call temp:=  [|java:lang:Error.<init>|](v1, v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L0dad4e.   throw v1;
  catch  [|java:nio:charset:CharacterCodingException|] @[L0dad10..L0dad36] goto L0dad3a;

   }
    procedure [|java:lang:String|] [|java:nio:charset:Charset.displayName|] ([|java:nio:charset:Charset|] v1 @type (this)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.displayName:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0dad70.   v0:= v1.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0dad74.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:nio:charset:Charset.displayName|] ([|java:nio:charset:Charset|] v1 @type (this), [|java:util:Locale|] v2 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.displayName:(Ljava/util/Locale;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0dad88.   v0:= v1.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0dad8c.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:charset:Charset.encode|] ([|java:nio:charset:Charset|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0dada0.   call temp:=  [|java:nio:CharBuffer.wrap|](v2) @signature [|Ljava/nio/CharBuffer;.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L0dada6.   v0:= temp  @type object;
#L0dada8.   call temp:=  [|java:nio:charset:Charset.encode|](v1, v0) @signature [|Ljava/nio/charset/Charset;.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0dadae.   v0:= temp  @type object;
#L0dadb0.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:charset:Charset.encode|] ([|java:nio:charset:Charset|] v3 @type (this), [|java:nio:CharBuffer|] v4 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0dadc4.   call temp:=  [|java:nio:charset:Charset.newEncoder|](v3) @signature [|Ljava/nio/charset/Charset;.newEncoder:()Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0dadca.   v1:= temp  @type object;
#L0dadcc.   v2:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L0dadd0.   call temp:=  [|java:nio:charset:CharsetEncoder.onMalformedInput|](v1, v2) @signature [|Ljava/nio/charset/CharsetEncoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dadd6.   v1:= temp  @type object;
#L0dadd8.   v2:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L0daddc.   call temp:=  [|java:nio:charset:CharsetEncoder.onUnmappableCharacter|](v1, v2) @signature [|Ljava/nio/charset/CharsetEncoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dade2.   v1:= temp  @type object;
#L0dade4.   call temp:=  [|java:nio:charset:CharsetEncoder.encode|](v1, v4) @signature [|Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dadea.   v1:= temp  @type object;
#L0dadec.   return v1  @type object;
#L0dadee.   v0:= Exception  @type object;
#L0dadf0.   v1:= new [|java:lang:Error|];
#L0dadf4.   call temp:=  [|java:nio:charset:CharacterCodingException.getMessage|](v0) @signature [|Ljava/nio/charset/CharacterCodingException;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:nio:charset:CharacterCodingException|] @type virtual;
#L0dadfa.   v2:= temp  @type object;
#L0dadfc.   call temp:=  [|java:lang:Error.<init>|](v1, v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L0dae02.   throw v1;
  catch  [|java:nio:charset:CharacterCodingException|] @[L0dadc4..L0dadea] goto L0dadee;

   }
    procedure [|boolean|] [|java:nio:charset:Charset.equals|] ([|java:nio:charset:Charset|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0dae24.   v1:= instanceof @varname v4 @type [|java:nio:charset:Charset|];
#L0dae28.   if v1 == 0 then goto L0dae44;
#L0dae2c.   v0:= v4  @type object;
#L0dae2e.   v0:= ([|java:nio:charset:Charset|])v0;
#L0dae32.   v1:= v3.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0dae36.   v2:= v0.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0dae3a.   call temp:=  [|java:lang:String.equals|](v1, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0dae40.   v1:= temp;
#L0dae42.   return v1;
#L0dae44.   v1:= 0  @length 4;
#L0dae46.   goto L0dae42;

   }
    procedure [|int|] [|java:nio:charset:Charset.hashCode|] ([|java:nio:charset:Charset|] v1 @type (this)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.hashCode:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0dae58.   v0:= v1.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0dae5c.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0dae62.   v0:= temp;
#L0dae64.   return v0;

   }
    procedure [|boolean|] [|java:nio:charset:Charset.isRegistered|] ([|java:nio:charset:Charset|] v2 @type (this)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.isRegistered:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0dae78.   v0:= v2.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0dae7c.   v1:= "x-" @type (object, string);
#L0dae80.   call temp:=  [|java:lang:String.startsWith|](v0, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0dae86.   v0:= temp;
#L0dae88.   if v0 != 0 then goto L0daea4;
#L0dae8c.   v0:= v2.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0dae90.   v1:= "X-" @type (object, string);
#L0dae94.   call temp:=  [|java:lang:String.startsWith|](v0, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0dae9a.   v0:= temp;
#L0dae9c.   if v0 != 0 then goto L0daea4;
#L0daea0.   v0:= 1  @length 4;
#L0daea2.   return v0;
#L0daea4.   v0:= 0  @length 4;
#L0daea6.   goto L0daea2;

   }
    procedure [|java:lang:String|] [|java:nio:charset:Charset.name|] ([|java:nio:charset:Charset|] v1 @type (this)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.name:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0daeb8.   v0:= v1.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0daebc.   return v0  @type object;

   }
    procedure [|java:nio:charset:CharsetDecoder|] [|java:nio:charset:Charset.newDecoder|] () @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.newDecoder:()Ljava/nio/charset/CharsetDecoder;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:nio:charset:CharsetEncoder|] [|java:nio:charset:Charset.newEncoder|] () @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.newEncoder:()Ljava/nio/charset/CharsetEncoder;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:nio:charset:Charset.toString|] ([|java:nio:charset:Charset|] v2 @type (this)) @owner [|java:nio:charset:Charset|] @signature [|Ljava/nio/charset/Charset;.toString:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0daed0.   v0:= new [|java:lang:StringBuilder|];
#L0daed4.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0daeda.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0daee0.   v1:= temp  @type object;
#L0daee2.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0daee8.   v1:= temp  @type object;
#L0daeea.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0daef0.   v0:= temp  @type object;
#L0daef2.   v1:= "[" @type (object, string);
#L0daef6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0daefc.   v0:= temp  @type object;
#L0daefe.   v1:= v2.[|java:nio:charset:Charset.canonicalName|]   @type object;
#L0daf02.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0daf08.   v0:= temp  @type object;
#L0daf0a.   v1:= "]" @type (object, string);
#L0daf0e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0daf14.   v0:= temp  @type object;
#L0daf16.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0daf1c.   v0:= temp  @type object;
#L0daf1e.   return v0  @type object;

   }
record [|java:nio:charset:CharsetDecoder|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
      [|float|] [|java:nio:charset:CharsetDecoder.averageCharsPerByte|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:charset:Charset|] [|java:nio:charset:CharsetDecoder.cs|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:charset:CodingErrorAction|] [|java:nio:charset:CharsetDecoder.malformedInputAction|]    @AccessFlag PRIVATE;
      [|float|] [|java:nio:charset:CharsetDecoder.maxCharsPerByte|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|java:nio:charset:CharsetDecoder.replacementChars|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:charset:CharsetDecoder.status|]    @AccessFlag PRIVATE;
      [|java:nio:charset:CodingErrorAction|] [|java:nio:charset:CharsetDecoder.unmappableCharacterAction|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:nio:charset:CharsetDecoder.END|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetDecoder.FLUSH|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetDecoder.INIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetDecoder.ONGOING|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:charset:CharsetDecoder.<init>|] ([|java:nio:charset:CharsetDecoder|] v2 @type (this), [|java:nio:charset:Charset|] v3 @type (object), [|float|] v4, [|float|] v5) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.<init>:(Ljava/nio/charset/Charset;FF)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0daf30.   v1:= 0  @length 4;
#L0daf32.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0daf38.   v0:= cmpg(v4,v1);
#L0daf3c.   if v0 <= 0 then goto L0daf48;
#L0daf40.   v0:= cmpg(v5,v1);
#L0daf44.   if v0 > 0 then goto L0daf58;
#L0daf48.   v0:= new [|java:lang:IllegalArgumentException|];
#L0daf4c.   v1:= "averageCharsPerByte and maxCharsPerByte must be positive" @type (object, string);
#L0daf50.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0daf56.   throw v0;
#L0daf58.   v0:= cmpl(v4,v5);
#L0daf5c.   if v0 <= 0 then goto L0daf70;
#L0daf60.   v0:= new [|java:lang:IllegalArgumentException|];
#L0daf64.   v1:= "averageCharsPerByte is greater than maxCharsPerByte" @type (object, string);
#L0daf68.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0daf6e.   throw v0;
#L0daf70.   v2.[|java:nio:charset:CharsetDecoder.averageCharsPerByte|]  := v4;
#L0daf74.   v2.[|java:nio:charset:CharsetDecoder.maxCharsPerByte|]  := v5;
#L0daf78.   v2.[|java:nio:charset:CharsetDecoder.cs|]  := v3 @type object;
#L0daf7c.   v0:= 0  @length 4;
#L0daf7e.   v2.[|java:nio:charset:CharsetDecoder.status|]  := v0;
#L0daf82.   v0:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0daf86.   v2.[|java:nio:charset:CharsetDecoder.malformedInputAction|]  := v0 @type object;
#L0daf8a.   v0:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0daf8e.   v2.[|java:nio:charset:CharsetDecoder.unmappableCharacterAction|]  := v0 @type object;
#L0daf92.   v0:= "�" @type (object, string);
#L0daf96.   v2.[|java:nio:charset:CharsetDecoder.replacementChars|]  := v0 @type object;
#L0daf9a.   return @void ;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:charset:CharsetDecoder.allocateMore|] ([|java:nio:charset:CharsetDecoder|] v2 @type (this), [|java:nio:CharBuffer|] v3 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.allocateMore:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0dafac.   call temp:=  [|java:nio:CharBuffer.capacity|](v3) @signature [|Ljava/nio/CharBuffer;.capacity:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dafb2.   v1:= temp;
#L0dafb4.   if v1 != 0 then goto L0dafc4;
#L0dafb8.   v1:= 1  @length 4;
#L0dafba.   call temp:=  [|java:nio:CharBuffer.allocate|](v1) @signature [|Ljava/nio/CharBuffer;.allocate:(I)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L0dafc0.   v0:= temp  @type object;
#L0dafc2.   return v0  @type object;
#L0dafc4.   call temp:=  [|java:nio:CharBuffer.capacity|](v3) @signature [|Ljava/nio/CharBuffer;.capacity:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dafca.   v1:= temp;
#L0dafcc.   v1:= v1 * 2;
#L0dafd0.   call temp:=  [|java:nio:CharBuffer.allocate|](v1) @signature [|Ljava/nio/CharBuffer;.allocate:(I)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L0dafd6.   v0:= temp  @type object;
#L0dafd8.   call temp:=  [|java:nio:CharBuffer.flip|](v3) @signature [|Ljava/nio/CharBuffer;.flip:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dafde.   call temp:=  [|java:nio:CharBuffer.put|](v0, v3) @signature [|Ljava/nio/CharBuffer;.put:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dafe4.   goto L0dafc2;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoder.checkCoderResult|] ([|java:nio:charset:CharsetDecoder|] v2 @type (this), [|java:nio:charset:CoderResult|] v3 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.checkCoderResult:(Ljava/nio/charset/CoderResult;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0daff8.   call temp:=  [|java:nio:charset:CoderResult.isMalformed|](v3) @signature [|Ljava/nio/charset/CoderResult;.isMalformed:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0daffe.   v0:= temp;
#L0db000.   if v0 == 0 then goto L0db024;
#L0db004.   v0:= v2.[|java:nio:charset:CharsetDecoder.malformedInputAction|]   @type object;
#L0db008.   v1:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0db00c.   if v0 != v1 then goto L0db024;
#L0db010.   v0:= new [|java:nio:charset:MalformedInputException|];
#L0db014.   call temp:=  [|java:nio:charset:CoderResult.length|](v3) @signature [|Ljava/nio/charset/CoderResult;.length:()I|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db01a.   v1:= temp;
#L0db01c.   call temp:=  [|java:nio:charset:MalformedInputException.<init>|](v0, v1) @signature [|Ljava/nio/charset/MalformedInputException;.<init>:(I)V|] @classDescriptor [|java:nio:charset:MalformedInputException|] @type direct;
#L0db022.   throw v0;
#L0db024.   call temp:=  [|java:nio:charset:CoderResult.isUnmappable|](v3) @signature [|Ljava/nio/charset/CoderResult;.isUnmappable:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db02a.   v0:= temp;
#L0db02c.   if v0 == 0 then goto L0db050;
#L0db030.   v0:= v2.[|java:nio:charset:CharsetDecoder.unmappableCharacterAction|]   @type object;
#L0db034.   v1:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0db038.   if v0 != v1 then goto L0db050;
#L0db03c.   v0:= new [|java:nio:charset:UnmappableCharacterException|];
#L0db040.   call temp:=  [|java:nio:charset:CoderResult.length|](v3) @signature [|Ljava/nio/charset/CoderResult;.length:()I|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db046.   v1:= temp;
#L0db048.   call temp:=  [|java:nio:charset:UnmappableCharacterException.<init>|](v0, v1) @signature [|Ljava/nio/charset/UnmappableCharacterException;.<init>:(I)V|] @classDescriptor [|java:nio:charset:UnmappableCharacterException|] @type direct;
#L0db04e.   throw v0;
#L0db050.   return @void ;

   }
    procedure [|float|] [|java:nio:charset:CharsetDecoder.averageCharsPerByte|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.averageCharsPerByte:()F|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0db064.   v0:= v1.[|java:nio:charset:CharsetDecoder.averageCharsPerByte|] ;
#L0db068.   return v0;

   }
    procedure [|java:nio:charset:Charset|] [|java:nio:charset:CharsetDecoder.charset|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.charset:()Ljava/nio/charset/Charset;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0db07c.   v0:= v1.[|java:nio:charset:CharsetDecoder.cs|]   @type object;
#L0db080.   return v0  @type object;

   }
    procedure [|java:nio:CharBuffer|] [|java:nio:charset:CharsetDecoder.decode|] ([|java:nio:charset:CharsetDecoder|] v5 @type (this), [|java:nio:ByteBuffer|] v6 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0db094.   call temp:=  [|java:nio:charset:CharsetDecoder.reset|](v5) @signature [|Ljava/nio/charset/CharsetDecoder;.reset:()Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db09a.   call temp:=  [|java:nio:ByteBuffer.remaining|](v6) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db0a0.   v3:= temp;
#L0db0a2.   v3:= (float)v3  @type i2f;
#L0db0a4.   v4:= v5.[|java:nio:charset:CharsetDecoder.averageCharsPerByte|] ;
#L0db0a8.   v3:= v3 * v4  @type float;
#L0db0aa.   v0:= (int)v3  @type f2i;
#L0db0ac.   call temp:=  [|java:nio:CharBuffer.allocate|](v0) @signature [|Ljava/nio/CharBuffer;.allocate:(I)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L0db0b2.   v1:= temp  @type object;
#L0db0b4.   v2:= 0  @length 4;
#L0db0b6.   v3:= 0  @length 4;
#L0db0b8.   call temp:=  [|java:nio:charset:CharsetDecoder.decode|](v5, v6, v1, v3) @signature [|Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db0be.   v2:= temp  @type object;
#L0db0c0.   call temp:=  [|java:nio:charset:CharsetDecoder.checkCoderResult|](v5, v2) @signature [|Ljava/nio/charset/CharsetDecoder;.checkCoderResult:(Ljava/nio/charset/CoderResult;)V|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type direct;
#L0db0c6.   call temp:=  [|java:nio:charset:CoderResult.isUnderflow|](v2) @signature [|Ljava/nio/charset/CoderResult;.isUnderflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db0cc.   v3:= temp;
#L0db0ce.   if v3 == 0 then goto L0db106;
#L0db0d2.   v3:= 1  @length 4;
#L0db0d4.   call temp:=  [|java:nio:charset:CharsetDecoder.decode|](v5, v6, v1, v3) @signature [|Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db0da.   v2:= temp  @type object;
#L0db0dc.   call temp:=  [|java:nio:charset:CharsetDecoder.checkCoderResult|](v5, v2) @signature [|Ljava/nio/charset/CharsetDecoder;.checkCoderResult:(Ljava/nio/charset/CoderResult;)V|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type direct;
#L0db0e2.   call temp:=  [|java:nio:charset:CharsetDecoder.flush|](v5, v1) @signature [|Ljava/nio/charset/CharsetDecoder;.flush:(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db0e8.   v2:= temp  @type object;
#L0db0ea.   call temp:=  [|java:nio:charset:CharsetDecoder.checkCoderResult|](v5, v2) @signature [|Ljava/nio/charset/CharsetDecoder;.checkCoderResult:(Ljava/nio/charset/CoderResult;)V|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type direct;
#L0db0f0.   call temp:=  [|java:nio:charset:CoderResult.isOverflow|](v2) @signature [|Ljava/nio/charset/CoderResult;.isOverflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db0f6.   v3:= temp;
#L0db0f8.   if v3 == 0 then goto L0db11c;
#L0db0fc.   call temp:=  [|java:nio:charset:CharsetDecoder.allocateMore|](v5, v1) @signature [|Ljava/nio/charset/CharsetDecoder;.allocateMore:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type direct;
#L0db102.   v1:= temp  @type object;
#L0db104.   goto L0db0e2;
#L0db106.   call temp:=  [|java:nio:charset:CoderResult.isOverflow|](v2) @signature [|Ljava/nio/charset/CoderResult;.isOverflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db10c.   v3:= temp;
#L0db10e.   if v3 == 0 then goto L0db0b6;
#L0db112.   call temp:=  [|java:nio:charset:CharsetDecoder.allocateMore|](v5, v1) @signature [|Ljava/nio/charset/CharsetDecoder;.allocateMore:(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type direct;
#L0db118.   v1:= temp  @type object;
#L0db11a.   goto L0db0b6;
#L0db11c.   call temp:=  [|java:nio:CharBuffer.flip|](v1) @signature [|Ljava/nio/CharBuffer;.flip:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db122.   v3:= 3  @length 4;
#L0db124.   v5.[|java:nio:charset:CharsetDecoder.status|]  := v3;
#L0db128.   return v1  @type object;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetDecoder.decode|] ([|java:nio:charset:CharsetDecoder|] v7 @type (this), [|java:nio:ByteBuffer|] v8 @type (object), [|java:nio:CharBuffer|] v9 @type (object), [|boolean|] v10) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0db13c.   v5:= 2  @length 4;
#L0db13e.   v4:= v7.[|java:nio:charset:CharsetDecoder.status|] ;
#L0db142.   v6:= 3  @length 4;
#L0db144.   if v4 == v6 then goto L0db154;
#L0db148.   if v10 != 0 then goto L0db160;
#L0db14c.   v4:= v7.[|java:nio:charset:CharsetDecoder.status|] ;
#L0db150.   if v4 != v5 then goto L0db160;
#L0db154.   v4:= new [|java:lang:IllegalStateException|];
#L0db158.   call temp:=  [|java:lang:IllegalStateException.<init>|](v4) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0db15e.   throw v4;
#L0db160.   v3:= 0  @length 4;
#L0db162.   v0:= 0  @length 4;
#L0db164.   call temp:=  [|java:nio:charset:CharsetDecoder.decodeLoop|](v7, v8, v9) @signature [|Ljava/nio/charset/CharsetDecoder;.decodeLoop:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db16a.   v3:= temp  @type object;
#L0db16c.   call temp:=  [|java:nio:charset:CoderResult.isUnderflow|](v3) @signature [|Ljava/nio/charset/CoderResult;.isUnderflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db172.   v4:= temp;
#L0db174.   if v4 == 0 then goto L0db19a;
#L0db178.   call temp:=  [|java:nio:ByteBuffer.remaining|](v8) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db17e.   v2:= temp;
#L0db180.   if v10 == 0 then goto L0db1c6;
#L0db184.   v4:= v5;
#L0db186.   v7.[|java:nio:charset:CharsetDecoder.status|]  := v4;
#L0db18a.   if v10 == 0 then goto L0db1ca;
#L0db18e.   if v2 <= 0 then goto L0db1ca;
#L0db192.   call temp:=  [|java:nio:charset:CoderResult.malformedForLength|](v2) @signature [|Ljava/nio/charset/CoderResult;.malformedForLength:(I)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CoderResult|] @type static;
#L0db198.   v3:= temp  @type object;
#L0db19a.   call temp:=  [|java:nio:charset:CoderResult.isOverflow|](v3) @signature [|Ljava/nio/charset/CoderResult;.isOverflow:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db1a0.   v4:= temp;
#L0db1a2.   if v4 == 0 then goto L0db1ce;
#L0db1a6.   v4:= v3  @type object;
#L0db1a8.   return v4  @type object;
#L0db1aa.   v1:= Exception  @type object;
#L0db1ac.   v4:= new [|java:nio:charset:CoderMalfunctionError|];
#L0db1b0.   call temp:=  [|java:nio:charset:CoderMalfunctionError.<init>|](v4, v1) @signature [|Ljava/nio/charset/CoderMalfunctionError;.<init>:(Ljava/lang/Exception;)V|] @classDescriptor [|java:nio:charset:CoderMalfunctionError|] @type direct;
#L0db1b6.   throw v4;
#L0db1b8.   v1:= Exception  @type object;
#L0db1ba.   v4:= new [|java:nio:charset:CoderMalfunctionError|];
#L0db1be.   call temp:=  [|java:nio:charset:CoderMalfunctionError.<init>|](v4, v1) @signature [|Ljava/nio/charset/CoderMalfunctionError;.<init>:(Ljava/lang/Exception;)V|] @classDescriptor [|java:nio:charset:CoderMalfunctionError|] @type direct;
#L0db1c4.   throw v4;
#L0db1c6.   v4:= 1  @length 4;
#L0db1c8.   goto L0db186;
#L0db1ca.   v4:= v3  @type object;
#L0db1cc.   goto L0db1a8;
#L0db1ce.   v0:= v7.[|java:nio:charset:CharsetDecoder.malformedInputAction|]   @type object;
#L0db1d2.   call temp:=  [|java:nio:charset:CoderResult.isUnmappable|](v3) @signature [|Ljava/nio/charset/CoderResult;.isUnmappable:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db1d8.   v4:= temp;
#L0db1da.   if v4 == 0 then goto L0db1e2;
#L0db1de.   v0:= v7.[|java:nio:charset:CharsetDecoder.unmappableCharacterAction|]   @type object;
#L0db1e2.   v4:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L0db1e6.   if v0 != v4 then goto L0db22c;
#L0db1ea.   call temp:=  [|java:nio:CharBuffer.remaining|](v9) @signature [|Ljava/nio/CharBuffer;.remaining:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db1f0.   v4:= temp;
#L0db1f2.   v6:= v7.[|java:nio:charset:CharsetDecoder.replacementChars|]   @type object;
#L0db1f6.   call temp:=  [|java:lang:String.length|](v6) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0db1fc.   v6:= temp;
#L0db1fe.   if v4 >= v6 then goto L0db208;
#L0db202.   v4:= @@[|java:nio:charset:CoderResult.OVERFLOW|]   @type object;
#L0db206.   goto L0db1a8;
#L0db208.   v4:= v7.[|java:nio:charset:CharsetDecoder.replacementChars|]   @type object;
#L0db20c.   call temp:=  [|java:nio:CharBuffer.put|](v9, v4) @signature [|Ljava/nio/CharBuffer;.put:(Ljava/lang/String;)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db212.   call temp:=  [|java:nio:ByteBuffer.position|](v8) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db218.   v4:= temp;
#L0db21a.   call temp:=  [|java:nio:charset:CoderResult.length|](v3) @signature [|Ljava/nio/charset/CoderResult;.length:()I|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0db220.   v6:= temp;
#L0db222.   v4:= v4 + v6  @type int;
#L0db224.   call temp:=  [|java:nio:ByteBuffer.position|](v8, v4) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db22a.   goto L0db162;
#L0db22c.   v4:= @@[|java:nio:charset:CodingErrorAction.IGNORE|]   @type object;
#L0db230.   if v0 == v4 then goto L0db212;
#L0db234.   v4:= v3  @type object;
#L0db236.   goto L0db1a8;
  catch  [|java:nio:BufferOverflowException|] @[L0db164..L0db16a] goto L0db1aa;
  catch  [|java:nio:BufferUnderflowException|] @[L0db164..L0db16a] goto L0db1b8;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetDecoder.decodeLoop|] ([|java:nio:ByteBuffer|] v0 @type (object), [|java:nio:CharBuffer|] v1 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.decodeLoop:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:nio:charset:Charset|] [|java:nio:charset:CharsetDecoder.detectedCharset|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.detectedCharset:()Ljava/nio/charset/Charset;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0db258.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0db25c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0db262.   throw v0;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetDecoder.flush|] ([|java:nio:charset:CharsetDecoder|] v3 @type (this), [|java:nio:CharBuffer|] v4 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.flush:(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0db274.   v1:= v3.[|java:nio:charset:CharsetDecoder.status|] ;
#L0db278.   v2:= 2  @length 4;
#L0db27a.   if v1 == v2 then goto L0db292;
#L0db27e.   v1:= v3.[|java:nio:charset:CharsetDecoder.status|] ;
#L0db282.   if v1 == 0 then goto L0db292;
#L0db286.   v1:= new [|java:lang:IllegalStateException|];
#L0db28a.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0db290.   throw v1;
#L0db292.   call temp:=  [|java:nio:charset:CharsetDecoder.implFlush|](v3, v4) @signature [|Ljava/nio/charset/CharsetDecoder;.implFlush:(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db298.   v0:= temp  @type object;
#L0db29a.   v1:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0db29e.   if v0 != v1 then goto L0db2a8;
#L0db2a2.   v1:= 3  @length 4;
#L0db2a4.   v3.[|java:nio:charset:CharsetDecoder.status|]  := v1;
#L0db2a8.   return v0  @type object;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetDecoder.implFlush|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this), [|java:nio:CharBuffer|] v2 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.implFlush:(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0db2bc.   v0:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0db2c0.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoder.implOnMalformedInput|] ([|java:nio:charset:CharsetDecoder|] v0 @type (this), [|java:nio:charset:CodingErrorAction|] v1 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.implOnMalformedInput:(Ljava/nio/charset/CodingErrorAction;)V|] @Access PROTECTED {
      local temp ;
      
#L0db2d4.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoder.implOnUnmappableCharacter|] ([|java:nio:charset:CharsetDecoder|] v0 @type (this), [|java:nio:charset:CodingErrorAction|] v1 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.implOnUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)V|] @Access PROTECTED {
      local temp ;
      
#L0db2e8.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoder.implReplaceWith|] ([|java:nio:charset:CharsetDecoder|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.implReplaceWith:(Ljava/lang/String;)V|] @Access PROTECTED {
      local temp ;
      
#L0db2fc.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoder.implReset|] ([|java:nio:charset:CharsetDecoder|] v0 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.implReset:()V|] @Access PROTECTED {
      local temp ;
      
#L0db310.   return @void ;

   }
    procedure [|boolean|] [|java:nio:charset:CharsetDecoder.isAutoDetecting|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.isAutoDetecting:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0db324.   v0:= 0  @length 4;
#L0db326.   return v0;

   }
    procedure [|boolean|] [|java:nio:charset:CharsetDecoder.isCharsetDetected|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.isCharsetDetected:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0db338.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0db33c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0db342.   throw v0;

   }
    procedure [|java:nio:charset:CodingErrorAction|] [|java:nio:charset:CharsetDecoder.malformedInputAction|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.malformedInputAction:()Ljava/nio/charset/CodingErrorAction;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0db354.   v0:= v1.[|java:nio:charset:CharsetDecoder.malformedInputAction|]   @type object;
#L0db358.   return v0  @type object;

   }
    procedure [|float|] [|java:nio:charset:CharsetDecoder.maxCharsPerByte|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.maxCharsPerByte:()F|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0db36c.   v0:= v1.[|java:nio:charset:CharsetDecoder.maxCharsPerByte|] ;
#L0db370.   return v0;

   }
    procedure [|java:nio:charset:CharsetDecoder|] [|java:nio:charset:CharsetDecoder.onMalformedInput|] ([|java:nio:charset:CharsetDecoder|] v2 @type (this), [|java:nio:charset:CodingErrorAction|] v3 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0db384.   if v3 != 0 then goto L0db398;
#L0db388.   v0:= new [|java:lang:IllegalArgumentException|];
#L0db38c.   v1:= "newAction == null" @type (object, string);
#L0db390.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0db396.   throw v0;
#L0db398.   v2.[|java:nio:charset:CharsetDecoder.malformedInputAction|]  := v3 @type object;
#L0db39c.   call temp:=  [|java:nio:charset:CharsetDecoder.implOnMalformedInput|](v2, v3) @signature [|Ljava/nio/charset/CharsetDecoder;.implOnMalformedInput:(Ljava/nio/charset/CodingErrorAction;)V|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db3a2.   return v2  @type object;

   }
    procedure [|java:nio:charset:CharsetDecoder|] [|java:nio:charset:CharsetDecoder.onUnmappableCharacter|] ([|java:nio:charset:CharsetDecoder|] v2 @type (this), [|java:nio:charset:CodingErrorAction|] v3 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0db3b4.   if v3 != 0 then goto L0db3c8;
#L0db3b8.   v0:= new [|java:lang:IllegalArgumentException|];
#L0db3bc.   v1:= "newAction == null" @type (object, string);
#L0db3c0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0db3c6.   throw v0;
#L0db3c8.   v2.[|java:nio:charset:CharsetDecoder.unmappableCharacterAction|]  := v3 @type object;
#L0db3cc.   call temp:=  [|java:nio:charset:CharsetDecoder.implOnUnmappableCharacter|](v2, v3) @signature [|Ljava/nio/charset/CharsetDecoder;.implOnUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)V|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db3d2.   return v2  @type object;

   }
    procedure [|java:nio:charset:CharsetDecoder|] [|java:nio:charset:CharsetDecoder.replaceWith|] ([|java:nio:charset:CharsetDecoder|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0db3e4.   if v4 != 0 then goto L0db3f8;
#L0db3e8.   v0:= new [|java:lang:IllegalArgumentException|];
#L0db3ec.   v1:= "replacement == null" @type (object, string);
#L0db3f0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0db3f6.   throw v0;
#L0db3f8.   call temp:=  [|java:lang:String.isEmpty|](v4) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0db3fe.   v0:= temp;
#L0db400.   if v0 == 0 then goto L0db414;
#L0db404.   v0:= new [|java:lang:IllegalArgumentException|];
#L0db408.   v1:= "replacement.isEmpty()" @type (object, string);
#L0db40c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0db412.   throw v0;
#L0db414.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0db41a.   v0:= temp;
#L0db41c.   v0:= (float)v0  @type i2f;
#L0db41e.   call temp:=  [|java:nio:charset:CharsetDecoder.maxCharsPerByte|](v3) @signature [|Ljava/nio/charset/CharsetDecoder;.maxCharsPerByte:()F|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db424.   v1:= temp;
#L0db426.   v0:= cmpl(v0,v1);
#L0db42a.   if v0 <= 0 then goto L0db484;
#L0db42e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0db432.   v1:= new [|java:lang:StringBuilder|];
#L0db436.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0db43c.   v2:= "replacement length > maxCharsPerByte: " @type (object, string);
#L0db440.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0db446.   v1:= temp  @type object;
#L0db448.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0db44e.   v2:= temp;
#L0db450.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0db456.   v1:= temp  @type object;
#L0db458.   v2:= " > " @type (object, string);
#L0db45c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0db462.   v1:= temp  @type object;
#L0db464.   call temp:=  [|java:nio:charset:CharsetDecoder.maxCharsPerByte|](v3) @signature [|Ljava/nio/charset/CharsetDecoder;.maxCharsPerByte:()F|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db46a.   v2:= temp;
#L0db46c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0db472.   v1:= temp  @type object;
#L0db474.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0db47a.   v1:= temp  @type object;
#L0db47c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0db482.   throw v0;
#L0db484.   v3.[|java:nio:charset:CharsetDecoder.replacementChars|]  := v4 @type object;
#L0db488.   call temp:=  [|java:nio:charset:CharsetDecoder.implReplaceWith|](v3, v4) @signature [|Ljava/nio/charset/CharsetDecoder;.implReplaceWith:(Ljava/lang/String;)V|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db48e.   return v3  @type object;

   }
    procedure [|java:lang:String|] [|java:nio:charset:CharsetDecoder.replacement|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.replacement:()Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0db4a0.   v0:= v1.[|java:nio:charset:CharsetDecoder.replacementChars|]   @type object;
#L0db4a4.   return v0  @type object;

   }
    procedure [|java:nio:charset:CharsetDecoder|] [|java:nio:charset:CharsetDecoder.reset|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.reset:()Ljava/nio/charset/CharsetDecoder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0db4b8.   v0:= 0  @length 4;
#L0db4ba.   v1.[|java:nio:charset:CharsetDecoder.status|]  := v0;
#L0db4be.   call temp:=  [|java:nio:charset:CharsetDecoder.implReset|](v1) @signature [|Ljava/nio/charset/CharsetDecoder;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0db4c4.   return v1  @type object;

   }
    procedure [|java:nio:charset:CodingErrorAction|] [|java:nio:charset:CharsetDecoder.unmappableCharacterAction|] ([|java:nio:charset:CharsetDecoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetDecoder|] @signature [|Ljava/nio/charset/CharsetDecoder;.unmappableCharacterAction:()Ljava/nio/charset/CodingErrorAction;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0db4d8.   v0:= v1.[|java:nio:charset:CharsetDecoder.unmappableCharacterAction|]   @type object;
#L0db4dc.   return v0  @type object;

   }
record [|java:nio:charset:CharsetDecoderICU|]  @type class @AccessFlag FINAL  extends [|java:nio:charset:CharsetDecoder|] {
      [|byte|][] [|java:nio:charset:CharsetDecoderICU.allocatedInput|]    @AccessFlag PRIVATE;
      [|char|][] [|java:nio:charset:CharsetDecoderICU.allocatedOutput|]    @AccessFlag PRIVATE;
      [|long|] [|java:nio:charset:CharsetDecoderICU.converterHandle|]    @AccessFlag PRIVATE;
      [|int|][] [|java:nio:charset:CharsetDecoderICU.data|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:charset:CharsetDecoderICU.inEnd|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:nio:charset:CharsetDecoderICU.input|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:charset:CharsetDecoderICU.outEnd|]    @AccessFlag PRIVATE;
      [|char|][] [|java:nio:charset:CharsetDecoderICU.output|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:nio:charset:CharsetDecoderICU.INPUT_OFFSET|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetDecoderICU.INVALID_BYTES|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetDecoderICU.MAX_CHARS_PER_BYTE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetDecoderICU.OUTPUT_OFFSET|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:charset:CharsetDecoderICU.<init>|] ([|java:nio:charset:CharsetDecoderICU|] v3 @type (this), [|java:nio:charset:Charset|] v4 @type (object), [|float|] v5, [|long|] v6) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.<init>:(Ljava/nio/charset/Charset;FJ)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0db4f0.   v2:= 0  @length 4;
#L0db4f2.   v0:= 1073741824  @length high16;
#L0db4f6.   call temp:=  [|java:nio:charset:CharsetDecoder.<init>|](v3, v4, v5, v0) @signature [|Ljava/nio/charset/CharsetDecoder;.<init>:(Ljava/nio/charset/Charset;FF)V|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type direct;
#L0db4fc.   v0:= 3  @length 4;
#L0db4fe.   v0:= new [|int|][v0];
#L0db502.   v3.[|java:nio:charset:CharsetDecoderICU.data|]  := v0 @type object;
#L0db506.   v0:= 0  @length wide16;
#L0db50a.   v3.[|java:nio:charset:CharsetDecoderICU.converterHandle|]  := v0 @wide;
#L0db50e.   v3.[|java:nio:charset:CharsetDecoderICU.input|]  := v2 @type object;
#L0db512.   v3.[|java:nio:charset:CharsetDecoderICU.output|]  := v2 @type object;
#L0db516.   v3.[|java:nio:charset:CharsetDecoderICU.allocatedInput|]  := v2 @type object;
#L0db51a.   v3.[|java:nio:charset:CharsetDecoderICU.allocatedOutput|]  := v2 @type object;
#L0db51e.   v3.[|java:nio:charset:CharsetDecoderICU.converterHandle|]  := v6 @wide;
#L0db522.   return @void ;

   }
    procedure [|int|] [|java:nio:charset:CharsetDecoderICU.getArray|] ([|java:nio:charset:CharsetDecoderICU|] v4 @type (this), [|java:nio:ByteBuffer|] v5 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.getArray:(Ljava/nio/ByteBuffer;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0db534.   v1:= 0  @length 4;
#L0db536.   call temp:=  [|java:nio:ByteBuffer.hasArray|](v5) @signature [|Ljava/nio/ByteBuffer;.hasArray:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db53c.   v2:= temp;
#L0db53e.   if v2 == 0 then goto L0db578;
#L0db542.   call temp:=  [|java:nio:ByteBuffer.array|](v5) @signature [|Ljava/nio/ByteBuffer;.array:()[B|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db548.   v1:= temp  @type object;
#L0db54a.   v4.[|java:nio:charset:CharsetDecoderICU.input|]  := v1 @type object;
#L0db54e.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v5) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db554.   v1:= temp;
#L0db556.   call temp:=  [|java:nio:ByteBuffer.limit|](v5) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db55c.   v2:= temp;
#L0db55e.   v1:= v1 + v2  @type int;
#L0db560.   v4.[|java:nio:charset:CharsetDecoderICU.inEnd|]  := v1;
#L0db564.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v5) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db56a.   v1:= temp;
#L0db56c.   call temp:=  [|java:nio:ByteBuffer.position|](v5) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db572.   v2:= temp;
#L0db574.   v1:= v1 + v2  @type int;
#L0db576.   return v1;
#L0db578.   call temp:=  [|java:nio:ByteBuffer.remaining|](v5) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db57e.   v2:= temp;
#L0db580.   v4.[|java:nio:charset:CharsetDecoderICU.inEnd|]  := v2;
#L0db584.   v2:= v4.[|java:nio:charset:CharsetDecoderICU.allocatedInput|]   @type object;
#L0db588.   if v2 == 0 then goto L0db59a;
#L0db58c.   v2:= v4.[|java:nio:charset:CharsetDecoderICU.inEnd|] ;
#L0db590.   v3:= v4.[|java:nio:charset:CharsetDecoderICU.allocatedInput|]   @type object;
#L0db594.   v3:= v3.length;
#L0db596.   if v2 <= v3 then goto L0db5a6;
#L0db59a.   v2:= v4.[|java:nio:charset:CharsetDecoderICU.inEnd|] ;
#L0db59e.   v2:= new [|byte|][v2];
#L0db5a2.   v4.[|java:nio:charset:CharsetDecoderICU.allocatedInput|]  := v2 @type object;
#L0db5a6.   call temp:=  [|java:nio:ByteBuffer.position|](v5) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db5ac.   v0:= temp;
#L0db5ae.   v2:= v4.[|java:nio:charset:CharsetDecoderICU.allocatedInput|]   @type object;
#L0db5b2.   v3:= v4.[|java:nio:charset:CharsetDecoderICU.inEnd|] ;
#L0db5b6.   call temp:=  [|java:nio:ByteBuffer.get|](v5, v2, v1, v3) @signature [|Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db5bc.   call temp:=  [|java:nio:ByteBuffer.position|](v5, v0) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db5c2.   v2:= v4.[|java:nio:charset:CharsetDecoderICU.allocatedInput|]   @type object;
#L0db5c6.   v4.[|java:nio:charset:CharsetDecoderICU.input|]  := v2 @type object;
#L0db5ca.   goto L0db576;

   }
    procedure [|int|] [|java:nio:charset:CharsetDecoderICU.getArray|] ([|java:nio:charset:CharsetDecoderICU|] v2 @type (this), [|java:nio:CharBuffer|] v3 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.getArray:(Ljava/nio/CharBuffer;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0db5dc.   call temp:=  [|java:nio:CharBuffer.hasArray|](v3) @signature [|Ljava/nio/CharBuffer;.hasArray:()Z|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db5e2.   v0:= temp;
#L0db5e4.   if v0 == 0 then goto L0db61e;
#L0db5e8.   call temp:=  [|java:nio:CharBuffer.array|](v3) @signature [|Ljava/nio/CharBuffer;.array:()[C|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db5ee.   v0:= temp  @type object;
#L0db5f0.   v2.[|java:nio:charset:CharsetDecoderICU.output|]  := v0 @type object;
#L0db5f4.   call temp:=  [|java:nio:CharBuffer.arrayOffset|](v3) @signature [|Ljava/nio/CharBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db5fa.   v0:= temp;
#L0db5fc.   call temp:=  [|java:nio:CharBuffer.limit|](v3) @signature [|Ljava/nio/CharBuffer;.limit:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db602.   v1:= temp;
#L0db604.   v0:= v0 + v1  @type int;
#L0db606.   v2.[|java:nio:charset:CharsetDecoderICU.outEnd|]  := v0;
#L0db60a.   call temp:=  [|java:nio:CharBuffer.arrayOffset|](v3) @signature [|Ljava/nio/CharBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db610.   v0:= temp;
#L0db612.   call temp:=  [|java:nio:CharBuffer.position|](v3) @signature [|Ljava/nio/CharBuffer;.position:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db618.   v1:= temp;
#L0db61a.   v0:= v0 + v1  @type int;
#L0db61c.   return v0;
#L0db61e.   call temp:=  [|java:nio:CharBuffer.remaining|](v3) @signature [|Ljava/nio/CharBuffer;.remaining:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db624.   v0:= temp;
#L0db626.   v2.[|java:nio:charset:CharsetDecoderICU.outEnd|]  := v0;
#L0db62a.   v0:= v2.[|java:nio:charset:CharsetDecoderICU.allocatedOutput|]   @type object;
#L0db62e.   if v0 == 0 then goto L0db640;
#L0db632.   v0:= v2.[|java:nio:charset:CharsetDecoderICU.outEnd|] ;
#L0db636.   v1:= v2.[|java:nio:charset:CharsetDecoderICU.allocatedOutput|]   @type object;
#L0db63a.   v1:= v1.length;
#L0db63c.   if v0 <= v1 then goto L0db64c;
#L0db640.   v0:= v2.[|java:nio:charset:CharsetDecoderICU.outEnd|] ;
#L0db644.   v0:= new [|char|][v0];
#L0db648.   v2.[|java:nio:charset:CharsetDecoderICU.allocatedOutput|]  := v0 @type object;
#L0db64c.   v0:= v2.[|java:nio:charset:CharsetDecoderICU.allocatedOutput|]   @type object;
#L0db650.   v2.[|java:nio:charset:CharsetDecoderICU.output|]  := v0 @type object;
#L0db654.   v0:= 0  @length 4;
#L0db656.   goto L0db61c;

   }
    procedure [|java:nio:charset:CharsetDecoderICU|] [|java:nio:charset:CharsetDecoderICU.newInstance|] ([|java:nio:charset:Charset|] v7 @type (object), [|java:lang:String|] v8 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.newInstance:(Ljava/nio/charset/Charset;Ljava/lang/String;)Ljava/nio/charset/CharsetDecoderICU;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0db668.   v5:= 0  @length wide16;
#L0db66c.   v0:= 0  @length wide16;
#L0db670.   call temp:=  [|libcore:icu:NativeConverter.openConverter|](v8) @signature [|Llibcore/icu/NativeConverter;.openConverter:(Ljava/lang/String;)J|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0db676.   v0:= temp  @type wide;
#L0db678.   call temp:=  [|libcore:icu:NativeConverter.getAveCharsPerByte|](v0, v1) @signature [|Llibcore/icu/NativeConverter;.getAveCharsPerByte:(J)F|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0db67e.   v2:= temp;
#L0db680.   v3:= new [|java:nio:charset:CharsetDecoderICU|];
#L0db684.   call temp:=  [|java:nio:charset:CharsetDecoderICU.<init>|](v3, v7, v2, v0, v1) @signature [|Ljava/nio/charset/CharsetDecoderICU;.<init>:(Ljava/nio/charset/Charset;FJ)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db68a.   v0:= 0  @length wide16;
#L0db68e.   call temp:=  [|java:nio:charset:CharsetDecoderICU.updateCallback|](v3) @signature [|Ljava/nio/charset/CharsetDecoderICU;.updateCallback:()V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db694.   v4:= cmp(v0,v5);
#L0db698.   if v4 == 0 then goto L0db6a2;
#L0db69c.   call temp:=  [|libcore:icu:NativeConverter.closeConverter|](v0, v1) @signature [|Llibcore/icu/NativeConverter;.closeConverter:(J)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0db6a2.   return v3  @type object;
#L0db6a4.   v4:= Exception  @type object;
#L0db6a6.   v5:= cmp(v0,v5);
#L0db6aa.   if v5 == 0 then goto L0db6b4;
#L0db6ae.   call temp:=  [|libcore:icu:NativeConverter.closeConverter|](v0, v1) @signature [|Llibcore/icu/NativeConverter;.closeConverter:(J)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0db6b4.   throw v4;
  catch  [|any|] @[L0db670..L0db694] goto L0db6a4;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoderICU.setPosition|] ([|java:nio:charset:CharsetDecoderICU|] v3 @type (this), [|java:nio:ByteBuffer|] v4 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0db6d4.   call temp:=  [|java:nio:ByteBuffer.position|](v4) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db6da.   v0:= temp;
#L0db6dc.   v1:= v3.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db6e0.   v2:= 0  @length 4;
#L0db6e2.   v1:= v1[v2];
#L0db6e6.   v0:= v0 + v1  @type int;
#L0db6e8.   call temp:=  [|java:nio:ByteBuffer.position|](v4, v0) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db6ee.   v0:= 0  @length 4;
#L0db6f0.   v3.[|java:nio:charset:CharsetDecoderICU.input|]  := v0 @type object;
#L0db6f4.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoderICU.setPosition|] ([|java:nio:charset:CharsetDecoderICU|] v4 @type (this), [|java:nio:CharBuffer|] v5 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0db708.   v3:= 1  @length 4;
#L0db70a.   call temp:=  [|java:nio:CharBuffer.hasArray|](v5) @signature [|Ljava/nio/CharBuffer;.hasArray:()Z|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db710.   v0:= temp;
#L0db712.   if v0 == 0 then goto L0db740;
#L0db716.   call temp:=  [|java:nio:CharBuffer.position|](v5) @signature [|Ljava/nio/CharBuffer;.position:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db71c.   v0:= temp;
#L0db71e.   v1:= v4.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db722.   v1:= v1[v3];
#L0db726.   v0:= v0 + v1  @type int;
#L0db728.   call temp:=  [|java:nio:CharBuffer.arrayOffset|](v5) @signature [|Ljava/nio/CharBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db72e.   v1:= temp;
#L0db730.   v0:= v0 - v1  @type int;
#L0db732.   call temp:=  [|java:nio:CharBuffer.position|](v5, v0) @signature [|Ljava/nio/CharBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db738.   v0:= 0  @length 4;
#L0db73a.   v4.[|java:nio:charset:CharsetDecoderICU.output|]  := v0 @type object;
#L0db73e.   return @void ;
#L0db740.   v0:= v4.[|java:nio:charset:CharsetDecoderICU.output|]   @type object;
#L0db744.   v1:= 0  @length 4;
#L0db746.   v2:= v4.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db74a.   v2:= v2[v3];
#L0db74e.   call temp:=  [|java:nio:CharBuffer.put|](v5, v0, v1, v2) @signature [|Ljava/nio/CharBuffer;.put:([CII)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0db754.   goto L0db738;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoderICU.updateCallback|] ([|java:nio:charset:CharsetDecoderICU|] v2 @type (this)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.updateCallback:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0db768.   v0:= v2.[|java:nio:charset:CharsetDecoderICU.converterHandle|]   @wide;
#L0db76c.   call temp:=  [|libcore:icu:NativeConverter.setCallbackDecode|](v0, v1, v2) @signature [|Llibcore/icu/NativeConverter;.setCallbackDecode:(JLjava/nio/charset/CharsetDecoder;)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0db772.   return @void ;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetDecoderICU.decodeLoop|] ([|java:nio:charset:CharsetDecoderICU|] v9 @type (this), [|java:nio:ByteBuffer|] v10 @type (object), [|java:nio:CharBuffer|] v11 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.decodeLoop:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0db784.   v2:= 0  @length 4;
#L0db786.   call temp:=  [|java:nio:ByteBuffer.hasRemaining|](v10) @signature [|Ljava/nio/ByteBuffer;.hasRemaining:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0db78c.   v0:= temp;
#L0db78e.   if v0 != 0 then goto L0db798;
#L0db792.   v0:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0db796.   return v0  @type object;
#L0db798.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db79c.   call temp:=  [|java:nio:charset:CharsetDecoderICU.getArray|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.getArray:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db7a2.   v1:= temp;
#L0db7a4.   v0[v2]:= v1;
#L0db7a8.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db7ac.   v1:= 1  @length 4;
#L0db7ae.   call temp:=  [|java:nio:charset:CharsetDecoderICU.getArray|](v9, v11) @signature [|Ljava/nio/charset/CharsetDecoderICU;.getArray:(Ljava/nio/CharBuffer;)I|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db7b4.   v2:= temp;
#L0db7b6.   v0[v1]:= v2;
#L0db7ba.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.converterHandle|]   @wide;
#L0db7be.   v2:= v9.[|java:nio:charset:CharsetDecoderICU.input|]   @type object;
#L0db7c2.   v3:= v9.[|java:nio:charset:CharsetDecoderICU.inEnd|] ;
#L0db7c6.   v4:= v9.[|java:nio:charset:CharsetDecoderICU.output|]   @type object;
#L0db7ca.   v5:= v9.[|java:nio:charset:CharsetDecoderICU.outEnd|] ;
#L0db7ce.   v6:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db7d2.   v7:= 0  @length 4;
#L0db7d4.   call temp:=  [|libcore:icu:NativeConverter.decode|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Llibcore/icu/NativeConverter;.decode:(J[BI[CI[IZ)I|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0db7da.   v8:= temp;
#L0db7dc.   call temp:=  [|libcore:icu:ICU.U_FAILURE|](v8) @signature [|Llibcore/icu/ICU;.U_FAILURE:(I)Z|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0db7e2.   v0:= temp;
#L0db7e4.   if v0 == 0 then goto L0db86e;
#L0db7e8.   v0:= 15  @length 16;
#L0db7ec.   if v8 != v0 then goto L0db802;
#L0db7f0.   v0:= @@[|java:nio:charset:CoderResult.OVERFLOW|]   @type object;
#L0db7f4.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db7fa.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db800.   goto L0db796;
#L0db802.   v0:= 10  @length 16;
#L0db806.   if v8 != v0 then goto L0db82a;
#L0db80a.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db80e.   v1:= 2  @length 4;
#L0db810.   v0:= v0[v1];
#L0db814.   call temp:=  [|java:nio:charset:CoderResult.unmappableForLength|](v0) @signature [|Ljava/nio/charset/CoderResult;.unmappableForLength:(I)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CoderResult|] @type static;
#L0db81a.   v0:= temp  @type object;
#L0db81c.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db822.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db828.   goto L0db796;
#L0db82a.   v0:= 12  @length 16;
#L0db82e.   if v8 != v0 then goto L0db852;
#L0db832.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db836.   v1:= 2  @length 4;
#L0db838.   v0:= v0[v1];
#L0db83c.   call temp:=  [|java:nio:charset:CoderResult.malformedForLength|](v0) @signature [|Ljava/nio/charset/CoderResult;.malformedForLength:(I)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CoderResult|] @type static;
#L0db842.   v0:= temp  @type object;
#L0db844.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db84a.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db850.   goto L0db796;
#L0db852.   v0:= new [|java:lang:AssertionError|];
#L0db856.   call temp:=  [|java:lang:AssertionError.<init>|](v0, v8) @signature [|Ljava/lang/AssertionError;.<init>:(I)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0db85c.   throw v0;
#L0db85e.   v0:= Exception  @type object;
#L0db860.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db866.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db86c.   throw v0;
#L0db86e.   v0:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0db872.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db878.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db87e.   goto L0db796;
  catch  [|any|] @[L0db7ba..L0db7f4] goto L0db85e;
  catch  [|any|] @[L0db80a..L0db81a] goto L0db85e;
  catch  [|any|] @[L0db832..L0db842] goto L0db85e;
  catch  [|any|] @[L0db852..L0db85e] goto L0db85e;
  catch  [|any|] @[L0db86e..L0db872] goto L0db85e;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoderICU.finalize|] ([|java:nio:charset:CharsetDecoderICU|] v2 @type (this)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0db8bc.   v0:= v2.[|java:nio:charset:CharsetDecoderICU.converterHandle|]   @wide;
#L0db8c0.   call temp:=  [|libcore:icu:NativeConverter.closeConverter|](v0, v1) @signature [|Llibcore/icu/NativeConverter;.closeConverter:(J)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0db8c6.   v0:= 0  @length wide16;
#L0db8ca.   v2.[|java:nio:charset:CharsetDecoderICU.converterHandle|]  := v0 @wide;
#L0db8ce.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L0db8d4.   return @void ;
#L0db8d6.   v0:= Exception  @type object;
#L0db8d8.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L0db8de.   throw v0;
  catch  [|any|] @[L0db8bc..L0db8ce] goto L0db8d6;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetDecoderICU.implFlush|] ([|java:nio:charset:CharsetDecoderICU|] v9 @type (this), [|java:nio:CharBuffer|] v10 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.implFlush:(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;|] @Access PROTECTED_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0db8fc.   v0:= @@[|libcore:util:EmptyArray.BYTE|]   @type object;
#L0db900.   v9.[|java:nio:charset:CharsetDecoderICU.input|]  := v0 @type object;
#L0db904.   v0:= 0  @length 4;
#L0db906.   v9.[|java:nio:charset:CharsetDecoderICU.inEnd|]  := v0;
#L0db90a.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db90e.   v1:= 0  @length 4;
#L0db910.   v2:= 0  @length 4;
#L0db912.   v0[v1]:= v2;
#L0db916.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db91a.   v1:= 1  @length 4;
#L0db91c.   call temp:=  [|java:nio:charset:CharsetDecoderICU.getArray|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.getArray:(Ljava/nio/CharBuffer;)I|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db922.   v2:= temp;
#L0db924.   v0[v1]:= v2;
#L0db928.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db92c.   v1:= 2  @length 4;
#L0db92e.   v2:= 0  @length 4;
#L0db930.   v0[v1]:= v2;
#L0db934.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.converterHandle|]   @wide;
#L0db938.   v2:= v9.[|java:nio:charset:CharsetDecoderICU.input|]   @type object;
#L0db93c.   v3:= v9.[|java:nio:charset:CharsetDecoderICU.inEnd|] ;
#L0db940.   v4:= v9.[|java:nio:charset:CharsetDecoderICU.output|]   @type object;
#L0db944.   v5:= v9.[|java:nio:charset:CharsetDecoderICU.outEnd|] ;
#L0db948.   v6:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db94c.   v7:= 1  @length 4;
#L0db94e.   call temp:=  [|libcore:icu:NativeConverter.decode|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Llibcore/icu/NativeConverter;.decode:(J[BI[CI[IZ)I|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0db954.   v8:= temp;
#L0db956.   call temp:=  [|libcore:icu:ICU.U_FAILURE|](v8) @signature [|Llibcore/icu/ICU;.U_FAILURE:(I)Z|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0db95c.   v0:= temp;
#L0db95e.   if v0 == 0 then goto L0db9b2;
#L0db962.   v0:= 15  @length 16;
#L0db966.   if v8 != v0 then goto L0db97c;
#L0db96a.   v0:= @@[|java:nio:charset:CoderResult.OVERFLOW|]   @type object;
#L0db96e.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db974.   call temp:=  [|java:nio:charset:CharsetDecoderICU.implReset|](v9) @signature [|Ljava/nio/charset/CharsetDecoderICU;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type virtual;
#L0db97a.   return v0  @type object;
#L0db97c.   v0:= 11  @length 16;
#L0db980.   if v8 != v0 then goto L0db9b2;
#L0db984.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db988.   v1:= 0  @length 4;
#L0db98a.   v0:= v0[v1];
#L0db98e.   if v0 <= 0 then goto L0db9b2;
#L0db992.   v0:= v9.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0db996.   v1:= 0  @length 4;
#L0db998.   v0:= v0[v1];
#L0db99c.   call temp:=  [|java:nio:charset:CoderResult.malformedForLength|](v0) @signature [|Ljava/nio/charset/CoderResult;.malformedForLength:(I)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CoderResult|] @type static;
#L0db9a2.   v0:= temp  @type object;
#L0db9a4.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db9aa.   call temp:=  [|java:nio:charset:CharsetDecoderICU.implReset|](v9) @signature [|Ljava/nio/charset/CharsetDecoderICU;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type virtual;
#L0db9b0.   goto L0db97a;
#L0db9b2.   v0:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0db9b6.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db9bc.   call temp:=  [|java:nio:charset:CharsetDecoderICU.implReset|](v9) @signature [|Ljava/nio/charset/CharsetDecoderICU;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type virtual;
#L0db9c2.   goto L0db97a;
#L0db9c4.   v0:= Exception  @type object;
#L0db9c6.   call temp:=  [|java:nio:charset:CharsetDecoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetDecoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0db9cc.   call temp:=  [|java:nio:charset:CharsetDecoderICU.implReset|](v9) @signature [|Ljava/nio/charset/CharsetDecoderICU;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type virtual;
#L0db9d2.   throw v0;
  catch  [|any|] @[L0db8fc..L0db96e] goto L0db9c4;
  catch  [|any|] @[L0db984..L0db9a2] goto L0db9c4;
  catch  [|any|] @[L0db9b2..L0db9b6] goto L0db9c4;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoderICU.implOnMalformedInput|] ([|java:nio:charset:CharsetDecoderICU|] v0 @type (this), [|java:nio:charset:CodingErrorAction|] v1 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.implOnMalformedInput:(Ljava/nio/charset/CodingErrorAction;)V|] @Access PROTECTED_FINAL {
      local temp ;
      
#L0dba00.   call temp:=  [|java:nio:charset:CharsetDecoderICU.updateCallback|](v0) @signature [|Ljava/nio/charset/CharsetDecoderICU;.updateCallback:()V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0dba06.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoderICU.implOnUnmappableCharacter|] ([|java:nio:charset:CharsetDecoderICU|] v0 @type (this), [|java:nio:charset:CodingErrorAction|] v1 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.implOnUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)V|] @Access PROTECTED_FINAL {
      local temp ;
      
#L0dba18.   call temp:=  [|java:nio:charset:CharsetDecoderICU.updateCallback|](v0) @signature [|Ljava/nio/charset/CharsetDecoderICU;.updateCallback:()V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0dba1e.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoderICU.implReplaceWith|] ([|java:nio:charset:CharsetDecoderICU|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.implReplaceWith:(Ljava/lang/String;)V|] @Access PROTECTED {
      local temp ;
      
#L0dba30.   call temp:=  [|java:nio:charset:CharsetDecoderICU.updateCallback|](v0) @signature [|Ljava/nio/charset/CharsetDecoderICU;.updateCallback:()V|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type direct;
#L0dba36.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetDecoderICU.implReset|] ([|java:nio:charset:CharsetDecoderICU|] v4 @type (this)) @owner [|java:nio:charset:CharsetDecoderICU|] @signature [|Ljava/nio/charset/CharsetDecoderICU;.implReset:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0dba48.   v3:= 0  @length 4;
#L0dba4a.   v2:= 0  @length 4;
#L0dba4c.   v0:= v4.[|java:nio:charset:CharsetDecoderICU.converterHandle|]   @wide;
#L0dba50.   call temp:=  [|libcore:icu:NativeConverter.resetByteToChar|](v0, v1) @signature [|Llibcore/icu/NativeConverter;.resetByteToChar:(J)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dba56.   v0:= v4.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0dba5a.   v0[v2]:= v2;
#L0dba5e.   v0:= v4.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0dba62.   v1:= 1  @length 4;
#L0dba64.   v0[v1]:= v2;
#L0dba68.   v0:= v4.[|java:nio:charset:CharsetDecoderICU.data|]   @type object;
#L0dba6c.   v1:= 2  @length 4;
#L0dba6e.   v0[v1]:= v2;
#L0dba72.   v4.[|java:nio:charset:CharsetDecoderICU.output|]  := v3 @type object;
#L0dba76.   v4.[|java:nio:charset:CharsetDecoderICU.input|]  := v3 @type object;
#L0dba7a.   v4.[|java:nio:charset:CharsetDecoderICU.allocatedInput|]  := v3 @type object;
#L0dba7e.   v4.[|java:nio:charset:CharsetDecoderICU.allocatedOutput|]  := v3 @type object;
#L0dba82.   v4.[|java:nio:charset:CharsetDecoderICU.inEnd|]  := v2;
#L0dba86.   v4.[|java:nio:charset:CharsetDecoderICU.outEnd|]  := v2;
#L0dba8a.   return @void ;

   }
record [|java:nio:charset:CharsetEncoder|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
      [|float|] [|java:nio:charset:CharsetEncoder.averageBytesPerChar|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:charset:Charset|] [|java:nio:charset:CharsetEncoder.cs|]    @AccessFlag PRIVATE_FINAL;
      [|java:nio:charset:CharsetDecoder|] [|java:nio:charset:CharsetEncoder.decoder|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:nio:charset:CharsetEncoder.finished|]    @AccessFlag PRIVATE;
      [|java:nio:charset:CodingErrorAction|] [|java:nio:charset:CharsetEncoder.malformedInputAction|]    @AccessFlag PRIVATE;
      [|float|] [|java:nio:charset:CharsetEncoder.maxBytesPerChar|]    @AccessFlag PRIVATE_FINAL;
      [|byte|][] [|java:nio:charset:CharsetEncoder.replacementBytes|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:charset:CharsetEncoder.status|]    @AccessFlag PRIVATE;
      [|java:nio:charset:CodingErrorAction|] [|java:nio:charset:CharsetEncoder.unmappableCharacterAction|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:nio:charset:CharsetEncoder.END|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetEncoder.FLUSH|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetEncoder.INIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetEncoder.ONGOING|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetEncoder.READY|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:charset:CharsetEncoder.<init>|] ([|java:nio:charset:CharsetEncoder|] v3 @type (this), [|java:nio:charset:Charset|] v4 @type (object), [|float|] v5, [|float|] v6) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.<init>:(Ljava/nio/charset/Charset;FF)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0dba9c.   v0:= 1  @length 4;
#L0dba9e.   v0:= new [|byte|][v0];
#L0dbaa2.   v1:= 0  @length 4;
#L0dbaa4.   v2:= 63  @length 16;
#L0dbaa8.   v0[v1]:= v2  @byte;
#L0dbaac.   call temp:=  [|java:nio:charset:CharsetEncoder.<init>|](v3, v4, v5, v6, v0) @signature [|Ljava/nio/charset/CharsetEncoder;.<init>:(Ljava/nio/charset/Charset;FF[B)V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dbab2.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoder.<init>|] ([|java:nio:charset:CharsetEncoder|] v6 @type (this), [|java:nio:charset:Charset|] v7 @type (object), [|float|] v8, [|float|] v9, [|byte|][] v10) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.<init>:(Ljava/nio/charset/Charset;FF[B)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0dbac4.   v5:= 0  @length 4;
#L0dbac6.   v0:= v6  @type object;
#L0dbac8.   v1:= v7  @type object;
#L0dbaca.   v2:= v8;
#L0dbacc.   v3:= v9;
#L0dbace.   v4:= v10  @type object;
#L0dbad0.   call temp:=  [|java:nio:charset:CharsetEncoder.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/nio/charset/CharsetEncoder;.<init>:(Ljava/nio/charset/Charset;FF[BZ)V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dbad6.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoder.<init>|] ([|java:nio:charset:CharsetEncoder|] v2 @type (this), [|java:nio:charset:Charset|] v3 @type (object), [|float|] v4, [|float|] v5, [|byte|][] v6, [|boolean|] v7) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.<init>:(Ljava/nio/charset/Charset;FF[BZ)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0dbae8.   v1:= 0  @length 4;
#L0dbaea.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0dbaf0.   v0:= cmpg(v4,v1);
#L0dbaf4.   if v0 <= 0 then goto L0dbb00;
#L0dbaf8.   v0:= cmpg(v5,v1);
#L0dbafc.   if v0 > 0 then goto L0dbb10;
#L0dbb00.   v0:= new [|java:lang:IllegalArgumentException|];
#L0dbb04.   v1:= "averageBytesPerChar and maxBytesPerChar must both be positive" @type (object, string);
#L0dbb08.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0dbb0e.   throw v0;
#L0dbb10.   v0:= cmpl(v4,v5);
#L0dbb14.   if v0 <= 0 then goto L0dbb28;
#L0dbb18.   v0:= new [|java:lang:IllegalArgumentException|];
#L0dbb1c.   v1:= "averageBytesPerChar is greater than maxBytesPerChar" @type (object, string);
#L0dbb20.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0dbb26.   throw v0;
#L0dbb28.   v2.[|java:nio:charset:CharsetEncoder.cs|]  := v3 @type object;
#L0dbb2c.   v2.[|java:nio:charset:CharsetEncoder.averageBytesPerChar|]  := v4;
#L0dbb30.   v2.[|java:nio:charset:CharsetEncoder.maxBytesPerChar|]  := v5;
#L0dbb34.   v0:= 4  @length 4;
#L0dbb36.   v2.[|java:nio:charset:CharsetEncoder.status|]  := v0;
#L0dbb3a.   v0:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0dbb3e.   v2.[|java:nio:charset:CharsetEncoder.malformedInputAction|]  := v0 @type object;
#L0dbb42.   v0:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0dbb46.   v2.[|java:nio:charset:CharsetEncoder.unmappableCharacterAction|]  := v0 @type object;
#L0dbb4a.   if v7 == 0 then goto L0dbb54;
#L0dbb4e.   v2.[|java:nio:charset:CharsetEncoder.replacementBytes|]  := v6 @type object;
#L0dbb52.   return @void ;
#L0dbb54.   call temp:=  [|java:nio:charset:CharsetEncoder.replaceWith|](v2, v6) @signature [|Ljava/nio/charset/CharsetEncoder;.replaceWith:([B)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbb5a.   goto L0dbb52;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:charset:CharsetEncoder.allocateMore|] ([|java:nio:charset:CharsetEncoder|] v2 @type (this), [|java:nio:ByteBuffer|] v3 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.allocateMore:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0dbb6c.   call temp:=  [|java:nio:ByteBuffer.capacity|](v3) @signature [|Ljava/nio/ByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dbb72.   v1:= temp;
#L0dbb74.   if v1 != 0 then goto L0dbb84;
#L0dbb78.   v1:= 1  @length 4;
#L0dbb7a.   call temp:=  [|java:nio:ByteBuffer.allocate|](v1) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0dbb80.   v0:= temp  @type object;
#L0dbb82.   return v0  @type object;
#L0dbb84.   call temp:=  [|java:nio:ByteBuffer.capacity|](v3) @signature [|Ljava/nio/ByteBuffer;.capacity:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dbb8a.   v1:= temp;
#L0dbb8c.   v1:= v1 * 2;
#L0dbb90.   call temp:=  [|java:nio:ByteBuffer.allocate|](v1) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0dbb96.   v0:= temp  @type object;
#L0dbb98.   call temp:=  [|java:nio:ByteBuffer.flip|](v3) @signature [|Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dbb9e.   call temp:=  [|java:nio:ByteBuffer.put|](v0, v3) @signature [|Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dbba4.   goto L0dbb82;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoder.checkCoderResult|] ([|java:nio:charset:CharsetEncoder|] v2 @type (this), [|java:nio:charset:CoderResult|] v3 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.checkCoderResult:(Ljava/nio/charset/CoderResult;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0dbbb8.   v0:= v2.[|java:nio:charset:CharsetEncoder.malformedInputAction|]   @type object;
#L0dbbbc.   v1:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0dbbc0.   if v0 != v1 then goto L0dbbe4;
#L0dbbc4.   call temp:=  [|java:nio:charset:CoderResult.isMalformed|](v3) @signature [|Ljava/nio/charset/CoderResult;.isMalformed:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbbca.   v0:= temp;
#L0dbbcc.   if v0 == 0 then goto L0dbbe4;
#L0dbbd0.   v0:= new [|java:nio:charset:MalformedInputException|];
#L0dbbd4.   call temp:=  [|java:nio:charset:CoderResult.length|](v3) @signature [|Ljava/nio/charset/CoderResult;.length:()I|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbbda.   v1:= temp;
#L0dbbdc.   call temp:=  [|java:nio:charset:MalformedInputException.<init>|](v0, v1) @signature [|Ljava/nio/charset/MalformedInputException;.<init>:(I)V|] @classDescriptor [|java:nio:charset:MalformedInputException|] @type direct;
#L0dbbe2.   throw v0;
#L0dbbe4.   v0:= v2.[|java:nio:charset:CharsetEncoder.unmappableCharacterAction|]   @type object;
#L0dbbe8.   v1:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0dbbec.   if v0 != v1 then goto L0dbc10;
#L0dbbf0.   call temp:=  [|java:nio:charset:CoderResult.isUnmappable|](v3) @signature [|Ljava/nio/charset/CoderResult;.isUnmappable:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbbf6.   v0:= temp;
#L0dbbf8.   if v0 == 0 then goto L0dbc10;
#L0dbbfc.   v0:= new [|java:nio:charset:UnmappableCharacterException|];
#L0dbc00.   call temp:=  [|java:nio:charset:CoderResult.length|](v3) @signature [|Ljava/nio/charset/CoderResult;.length:()I|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbc06.   v1:= temp;
#L0dbc08.   call temp:=  [|java:nio:charset:UnmappableCharacterException.<init>|](v0, v1) @signature [|Ljava/nio/charset/UnmappableCharacterException;.<init>:(I)V|] @classDescriptor [|java:nio:charset:UnmappableCharacterException|] @type direct;
#L0dbc0e.   throw v0;
#L0dbc10.   return @void ;

   }
    procedure [|boolean|] [|java:nio:charset:CharsetEncoder.implCanEncode|] ([|java:nio:charset:CharsetEncoder|] v6 @type (this), [|java:nio:CharBuffer|] v7 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.implCanEncode:(Ljava/nio/CharBuffer;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0dbc24.   v4:= v6.[|java:nio:charset:CharsetEncoder.status|] ;
#L0dbc28.   v5:= 3  @length 4;
#L0dbc2a.   if v4 == v5 then goto L0dbc38;
#L0dbc2e.   v4:= v6.[|java:nio:charset:CharsetEncoder.status|] ;
#L0dbc32.   v5:= 4  @length 4;
#L0dbc34.   if v4 != v5 then goto L0dbc3e;
#L0dbc38.   v4:= 0  @length 4;
#L0dbc3a.   v6.[|java:nio:charset:CharsetEncoder.status|]  := v4;
#L0dbc3e.   v4:= v6.[|java:nio:charset:CharsetEncoder.status|] ;
#L0dbc42.   if v4 == 0 then goto L0dbc56;
#L0dbc46.   v4:= new [|java:lang:IllegalStateException|];
#L0dbc4a.   v5:= "encoding already in progress" @type (object, string);
#L0dbc4e.   call temp:=  [|java:lang:IllegalStateException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0dbc54.   throw v4;
#L0dbc56.   v1:= v6.[|java:nio:charset:CharsetEncoder.malformedInputAction|]   @type object;
#L0dbc5a.   v3:= v6.[|java:nio:charset:CharsetEncoder.unmappableCharacterAction|]   @type object;
#L0dbc5e.   v4:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0dbc62.   call temp:=  [|java:nio:charset:CharsetEncoder.onMalformedInput|](v6, v4) @signature [|Ljava/nio/charset/CharsetEncoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbc68.   v4:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0dbc6c.   call temp:=  [|java:nio:charset:CharsetEncoder.onUnmappableCharacter|](v6, v4) @signature [|Ljava/nio/charset/CharsetEncoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbc72.   v2:= 1  @length 4;
#L0dbc74.   call temp:=  [|java:nio:charset:CharsetEncoder.encode|](v6, v7) @signature [|Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbc7a.   call temp:=  [|java:nio:charset:CharsetEncoder.onMalformedInput|](v6, v1) @signature [|Ljava/nio/charset/CharsetEncoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbc80.   call temp:=  [|java:nio:charset:CharsetEncoder.onUnmappableCharacter|](v6, v3) @signature [|Ljava/nio/charset/CharsetEncoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbc86.   call temp:=  [|java:nio:charset:CharsetEncoder.reset|](v6) @signature [|Ljava/nio/charset/CharsetEncoder;.reset:()Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbc8c.   return v2;
#L0dbc8e.   v0:= Exception  @type object;
#L0dbc90.   v2:= 0  @length 4;
#L0dbc92.   goto L0dbc7a;
  catch  [|java:nio:charset:CharacterCodingException|] @[L0dbc74..L0dbc7a] goto L0dbc8e;

   }
    procedure [|float|] [|java:nio:charset:CharsetEncoder.averageBytesPerChar|] ([|java:nio:charset:CharsetEncoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.averageBytesPerChar:()F|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0dbcb4.   v0:= v1.[|java:nio:charset:CharsetEncoder.averageBytesPerChar|] ;
#L0dbcb8.   return v0;

   }
    procedure [|boolean|] [|java:nio:charset:CharsetEncoder.canEncode|] ([|java:nio:charset:CharsetEncoder|] v2 @type (this), [|char|] v3) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.canEncode:(C)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0dbccc.   v0:= 1  @length 4;
#L0dbcce.   v0:= new [|char|][v0];
#L0dbcd2.   v1:= 0  @length 4;
#L0dbcd4.   v0[v1]:= v3  @char;
#L0dbcd8.   call temp:=  [|java:nio:CharBuffer.wrap|](v0) @signature [|Ljava/nio/CharBuffer;.wrap:([C)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L0dbcde.   v0:= temp  @type object;
#L0dbce0.   call temp:=  [|java:nio:charset:CharsetEncoder.implCanEncode|](v2, v0) @signature [|Ljava/nio/charset/CharsetEncoder;.implCanEncode:(Ljava/nio/CharBuffer;)Z|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dbce6.   v0:= temp;
#L0dbce8.   return v0;

   }
    procedure [|boolean|] [|java:nio:charset:CharsetEncoder.canEncode|] ([|java:nio:charset:CharsetEncoder|] v2 @type (this), [|java:lang:CharSequence|] v3 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.canEncode:(Ljava/lang/CharSequence;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0dbcfc.   v1:= instanceof @varname v3 @type [|java:nio:CharBuffer|];
#L0dbd00.   if v1 == 0 then goto L0dbd1a;
#L0dbd04.   v3:= ([|java:nio:CharBuffer|])v3;
#L0dbd08.   call temp:=  [|java:nio:CharBuffer.duplicate|](v3) @signature [|Ljava/nio/CharBuffer;.duplicate:()Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dbd0e.   v0:= temp  @type object;
#L0dbd10.   call temp:=  [|java:nio:charset:CharsetEncoder.implCanEncode|](v2, v0) @signature [|Ljava/nio/charset/CharsetEncoder;.implCanEncode:(Ljava/nio/CharBuffer;)Z|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dbd16.   v1:= temp;
#L0dbd18.   return v1;
#L0dbd1a.   call temp:=  [|java:nio:CharBuffer.wrap|](v3) @signature [|Ljava/nio/CharBuffer;.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L0dbd20.   v0:= temp  @type object;
#L0dbd22.   goto L0dbd10;

   }
    procedure [|java:nio:charset:Charset|] [|java:nio:charset:CharsetEncoder.charset|] ([|java:nio:charset:CharsetEncoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.charset:()Ljava/nio/charset/Charset;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0dbd34.   v0:= v1.[|java:nio:charset:CharsetEncoder.cs|]   @type object;
#L0dbd38.   return v0  @type object;

   }
    procedure [|java:nio:ByteBuffer|] [|java:nio:charset:CharsetEncoder.encode|] ([|java:nio:charset:CharsetEncoder|] v7 @type (this), [|java:nio:CharBuffer|] v8 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0dbd4c.   v6:= 1  @length 4;
#L0dbd4e.   v5:= 0  @length 4;
#L0dbd50.   call temp:=  [|java:nio:CharBuffer.remaining|](v8) @signature [|Ljava/nio/CharBuffer;.remaining:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dbd56.   v3:= temp;
#L0dbd58.   if v3 != 0 then goto L0dbd66;
#L0dbd5c.   call temp:=  [|java:nio:ByteBuffer.allocate|](v5) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0dbd62.   v1:= temp  @type object;
#L0dbd64.   return v1  @type object;
#L0dbd66.   call temp:=  [|java:nio:charset:CharsetEncoder.reset|](v7) @signature [|Ljava/nio/charset/CharsetEncoder;.reset:()Ljava/nio/charset/CharsetEncoder;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbd6c.   call temp:=  [|java:nio:CharBuffer.remaining|](v8) @signature [|Ljava/nio/CharBuffer;.remaining:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dbd72.   v3:= temp;
#L0dbd74.   v3:= (float)v3  @type i2f;
#L0dbd76.   v4:= v7.[|java:nio:charset:CharsetEncoder.averageBytesPerChar|] ;
#L0dbd7a.   v3:= v3 * v4  @type float;
#L0dbd7c.   v0:= (int)v3  @type f2i;
#L0dbd7e.   call temp:=  [|java:nio:ByteBuffer.allocate|](v0) @signature [|Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0dbd84.   v1:= temp  @type object;
#L0dbd86.   v2:= 0  @length 4;
#L0dbd88.   call temp:=  [|java:nio:charset:CharsetEncoder.encode|](v7, v8, v1, v5) @signature [|Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbd8e.   v2:= temp  @type object;
#L0dbd90.   v3:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0dbd94.   if v2 != v3 then goto L0dbdc6;
#L0dbd98.   call temp:=  [|java:nio:charset:CharsetEncoder.encode|](v7, v8, v1, v6) @signature [|Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbd9e.   v2:= temp  @type object;
#L0dbda0.   call temp:=  [|java:nio:charset:CharsetEncoder.checkCoderResult|](v7, v2) @signature [|Ljava/nio/charset/CharsetEncoder;.checkCoderResult:(Ljava/nio/charset/CoderResult;)V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dbda6.   call temp:=  [|java:nio:charset:CharsetEncoder.flush|](v7, v1) @signature [|Ljava/nio/charset/CharsetEncoder;.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbdac.   v2:= temp  @type object;
#L0dbdae.   v3:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0dbdb2.   if v2 != v3 then goto L0dbde0;
#L0dbdb6.   call temp:=  [|java:nio:ByteBuffer.flip|](v1) @signature [|Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dbdbc.   v7.[|java:nio:charset:CharsetEncoder.status|]  := v5;
#L0dbdc0.   v7.[|java:nio:charset:CharsetEncoder.finished|]  := v6 @boolean;
#L0dbdc4.   goto L0dbd64;
#L0dbdc6.   v3:= @@[|java:nio:charset:CoderResult.OVERFLOW|]   @type object;
#L0dbdca.   if v2 != v3 then goto L0dbdd8;
#L0dbdce.   call temp:=  [|java:nio:charset:CharsetEncoder.allocateMore|](v7, v1) @signature [|Ljava/nio/charset/CharsetEncoder;.allocateMore:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dbdd4.   v1:= temp  @type object;
#L0dbdd6.   goto L0dbd88;
#L0dbdd8.   call temp:=  [|java:nio:charset:CharsetEncoder.checkCoderResult|](v7, v2) @signature [|Ljava/nio/charset/CharsetEncoder;.checkCoderResult:(Ljava/nio/charset/CoderResult;)V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dbdde.   goto L0dbd88;
#L0dbde0.   v3:= @@[|java:nio:charset:CoderResult.OVERFLOW|]   @type object;
#L0dbde4.   if v2 != v3 then goto L0dbdf2;
#L0dbde8.   call temp:=  [|java:nio:charset:CharsetEncoder.allocateMore|](v7, v1) @signature [|Ljava/nio/charset/CharsetEncoder;.allocateMore:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dbdee.   v1:= temp  @type object;
#L0dbdf0.   goto L0dbda6;
#L0dbdf2.   call temp:=  [|java:nio:charset:CharsetEncoder.checkCoderResult|](v7, v2) @signature [|Ljava/nio/charset/CharsetEncoder;.checkCoderResult:(Ljava/nio/charset/CoderResult;)V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dbdf8.   call temp:=  [|java:nio:ByteBuffer.flip|](v1) @signature [|Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dbdfe.   call temp:=  [|java:nio:charset:CoderResult.isMalformed|](v2) @signature [|Ljava/nio/charset/CoderResult;.isMalformed:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbe04.   v3:= temp;
#L0dbe06.   if v3 == 0 then goto L0dbe1e;
#L0dbe0a.   v3:= new [|java:nio:charset:MalformedInputException|];
#L0dbe0e.   call temp:=  [|java:nio:charset:CoderResult.length|](v2) @signature [|Ljava/nio/charset/CoderResult;.length:()I|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbe14.   v4:= temp;
#L0dbe16.   call temp:=  [|java:nio:charset:MalformedInputException.<init>|](v3, v4) @signature [|Ljava/nio/charset/MalformedInputException;.<init>:(I)V|] @classDescriptor [|java:nio:charset:MalformedInputException|] @type direct;
#L0dbe1c.   throw v3;
#L0dbe1e.   call temp:=  [|java:nio:charset:CoderResult.isUnmappable|](v2) @signature [|Ljava/nio/charset/CoderResult;.isUnmappable:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbe24.   v3:= temp;
#L0dbe26.   if v3 == 0 then goto L0dbdbc;
#L0dbe2a.   v3:= new [|java:nio:charset:UnmappableCharacterException|];
#L0dbe2e.   call temp:=  [|java:nio:charset:CoderResult.length|](v2) @signature [|Ljava/nio/charset/CoderResult;.length:()I|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbe34.   v4:= temp;
#L0dbe36.   call temp:=  [|java:nio:charset:UnmappableCharacterException.<init>|](v3, v4) @signature [|Ljava/nio/charset/UnmappableCharacterException;.<init>:(I)V|] @classDescriptor [|java:nio:charset:UnmappableCharacterException|] @type direct;
#L0dbe3c.   throw v3;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetEncoder.encode|] ([|java:nio:charset:CharsetEncoder|] v8 @type (this), [|java:nio:CharBuffer|] v9 @type (object), [|java:nio:ByteBuffer|] v10 @type (object), [|boolean|] v11) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0dbe50.   v6:= 1  @length 4;
#L0dbe52.   v5:= 2  @length 4;
#L0dbe54.   v4:= v8.[|java:nio:charset:CharsetEncoder.status|] ;
#L0dbe58.   if v4 != 0 then goto L0dbe74;
#L0dbe5c.   v4:= v8.[|java:nio:charset:CharsetEncoder.finished|]   @boolean;
#L0dbe60.   if v4 == 0 then goto L0dbe74;
#L0dbe64.   if v11 != 0 then goto L0dbe74;
#L0dbe68.   v4:= new [|java:lang:IllegalStateException|];
#L0dbe6c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v4) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0dbe72.   throw v4;
#L0dbe74.   v4:= v8.[|java:nio:charset:CharsetEncoder.status|] ;
#L0dbe78.   v7:= 3  @length 4;
#L0dbe7a.   if v4 == v7 then goto L0dbe8a;
#L0dbe7e.   if v11 != 0 then goto L0dbeb8;
#L0dbe82.   v4:= v8.[|java:nio:charset:CharsetEncoder.status|] ;
#L0dbe86.   if v4 != v5 then goto L0dbeb8;
#L0dbe8a.   v4:= new [|java:lang:IllegalStateException|];
#L0dbe8e.   call temp:=  [|java:lang:IllegalStateException.<init>|](v4) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0dbe94.   throw v4;
#L0dbe96.   v4:= v8.[|java:nio:charset:CharsetEncoder.replacementBytes|]   @type object;
#L0dbe9a.   call temp:=  [|java:nio:ByteBuffer.put|](v10, v4) @signature [|Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dbea0.   call temp:=  [|java:nio:CharBuffer.position|](v9) @signature [|Ljava/nio/CharBuffer;.position:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dbea6.   v4:= temp;
#L0dbea8.   call temp:=  [|java:nio:charset:CoderResult.length|](v3) @signature [|Ljava/nio/charset/CoderResult;.length:()I|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbeae.   v7:= temp;
#L0dbeb0.   v4:= v4 + v7  @type int;
#L0dbeb2.   call temp:=  [|java:nio:CharBuffer.position|](v9, v4) @signature [|Ljava/nio/CharBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dbeb8.   call temp:=  [|java:nio:charset:CharsetEncoder.encodeLoop|](v8, v9, v10) @signature [|Ljava/nio/charset/CharsetEncoder;.encodeLoop:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbebe.   v3:= temp  @type object;
#L0dbec0.   v4:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0dbec4.   if v3 != v4 then goto L0dbf46;
#L0dbec8.   if v11 == 0 then goto L0dbf3a;
#L0dbecc.   v4:= v5;
#L0dbece.   v8.[|java:nio:charset:CharsetEncoder.status|]  := v4;
#L0dbed2.   if v11 == 0 then goto L0dbf42;
#L0dbed6.   call temp:=  [|java:nio:CharBuffer.remaining|](v9) @signature [|Ljava/nio/CharBuffer;.remaining:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dbedc.   v2:= temp;
#L0dbede.   if v2 <= 0 then goto L0dbf3e;
#L0dbee2.   call temp:=  [|java:nio:charset:CoderResult.malformedForLength|](v2) @signature [|Ljava/nio/charset/CoderResult;.malformedForLength:(I)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CoderResult|] @type static;
#L0dbee8.   v3:= temp  @type object;
#L0dbeea.   v0:= v8.[|java:nio:charset:CharsetEncoder.malformedInputAction|]   @type object;
#L0dbeee.   call temp:=  [|java:nio:charset:CoderResult.isUnmappable|](v3) @signature [|Ljava/nio/charset/CoderResult;.isUnmappable:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dbef4.   v4:= temp;
#L0dbef6.   if v4 == 0 then goto L0dbefe;
#L0dbefa.   v0:= v8.[|java:nio:charset:CharsetEncoder.unmappableCharacterAction|]   @type object;
#L0dbefe.   v4:= @@[|java:nio:charset:CodingErrorAction.REPLACE|]   @type object;
#L0dbf02.   if v0 != v4 then goto L0dbf5e;
#L0dbf06.   call temp:=  [|java:nio:ByteBuffer.remaining|](v10) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dbf0c.   v4:= temp;
#L0dbf0e.   v7:= v8.[|java:nio:charset:CharsetEncoder.replacementBytes|]   @type object;
#L0dbf12.   v7:= v7.length;
#L0dbf14.   if v4 >= v7 then goto L0dbe96;
#L0dbf18.   v4:= @@[|java:nio:charset:CoderResult.OVERFLOW|]   @type object;
#L0dbf1c.   return v4  @type object;
#L0dbf1e.   v1:= Exception  @type object;
#L0dbf20.   v4:= new [|java:nio:charset:CoderMalfunctionError|];
#L0dbf24.   call temp:=  [|java:nio:charset:CoderMalfunctionError.<init>|](v4, v1) @signature [|Ljava/nio/charset/CoderMalfunctionError;.<init>:(Ljava/lang/Exception;)V|] @classDescriptor [|java:nio:charset:CoderMalfunctionError|] @type direct;
#L0dbf2a.   throw v4;
#L0dbf2c.   v1:= Exception  @type object;
#L0dbf2e.   v4:= new [|java:nio:charset:CoderMalfunctionError|];
#L0dbf32.   call temp:=  [|java:nio:charset:CoderMalfunctionError.<init>|](v4, v1) @signature [|Ljava/nio/charset/CoderMalfunctionError;.<init>:(Ljava/lang/Exception;)V|] @classDescriptor [|java:nio:charset:CoderMalfunctionError|] @type direct;
#L0dbf38.   throw v4;
#L0dbf3a.   v4:= v6;
#L0dbf3c.   goto L0dbece;
#L0dbf3e.   v4:= v3  @type object;
#L0dbf40.   goto L0dbf1c;
#L0dbf42.   v4:= v3  @type object;
#L0dbf44.   goto L0dbf1c;
#L0dbf46.   v4:= @@[|java:nio:charset:CoderResult.OVERFLOW|]   @type object;
#L0dbf4a.   if v3 != v4 then goto L0dbeea;
#L0dbf4e.   if v11 == 0 then goto L0dbf5a;
#L0dbf52.   v8.[|java:nio:charset:CharsetEncoder.status|]  := v5;
#L0dbf56.   v4:= v3  @type object;
#L0dbf58.   goto L0dbf1c;
#L0dbf5a.   v5:= v6;
#L0dbf5c.   goto L0dbf52;
#L0dbf5e.   v4:= @@[|java:nio:charset:CodingErrorAction.IGNORE|]   @type object;
#L0dbf62.   if v0 == v4 then goto L0dbea0;
#L0dbf66.   v4:= v3  @type object;
#L0dbf68.   goto L0dbf1c;
  catch  [|java:nio:BufferOverflowException|] @[L0dbeb8..L0dbebe] goto L0dbf1e;
  catch  [|java:nio:BufferUnderflowException|] @[L0dbeb8..L0dbebe] goto L0dbf2c;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetEncoder.encodeLoop|] ([|java:nio:CharBuffer|] v0 @type (object), [|java:nio:ByteBuffer|] v1 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.encodeLoop:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetEncoder.flush|] ([|java:nio:charset:CharsetEncoder|] v3 @type (this), [|java:nio:ByteBuffer|] v4 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0dbf8c.   v1:= v3.[|java:nio:charset:CharsetEncoder.status|] ;
#L0dbf90.   v2:= 2  @length 4;
#L0dbf92.   if v1 == v2 then goto L0dbfaa;
#L0dbf96.   v1:= v3.[|java:nio:charset:CharsetEncoder.status|] ;
#L0dbf9a.   if v1 == 0 then goto L0dbfaa;
#L0dbf9e.   v1:= new [|java:lang:IllegalStateException|];
#L0dbfa2.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0dbfa8.   throw v1;
#L0dbfaa.   call temp:=  [|java:nio:charset:CharsetEncoder.implFlush|](v3, v4) @signature [|Ljava/nio/charset/CharsetEncoder;.implFlush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dbfb0.   v0:= temp  @type object;
#L0dbfb2.   v1:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0dbfb6.   if v0 != v1 then goto L0dbfc0;
#L0dbfba.   v1:= 3  @length 4;
#L0dbfbc.   v3.[|java:nio:charset:CharsetEncoder.status|]  := v1;
#L0dbfc0.   return v0  @type object;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetEncoder.implFlush|] ([|java:nio:charset:CharsetEncoder|] v1 @type (this), [|java:nio:ByteBuffer|] v2 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.implFlush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L0dbfd4.   v0:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0dbfd8.   return v0  @type object;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoder.implOnMalformedInput|] ([|java:nio:charset:CharsetEncoder|] v0 @type (this), [|java:nio:charset:CodingErrorAction|] v1 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.implOnMalformedInput:(Ljava/nio/charset/CodingErrorAction;)V|] @Access PROTECTED {
      local temp ;
      
#L0dbfec.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoder.implOnUnmappableCharacter|] ([|java:nio:charset:CharsetEncoder|] v0 @type (this), [|java:nio:charset:CodingErrorAction|] v1 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.implOnUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)V|] @Access PROTECTED {
      local temp ;
      
#L0dc000.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoder.implReplaceWith|] ([|java:nio:charset:CharsetEncoder|] v0 @type (this), [|byte|][] v1) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.implReplaceWith:([B)V|] @Access PROTECTED {
      local temp ;
      
#L0dc014.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoder.implReset|] ([|java:nio:charset:CharsetEncoder|] v0 @type (this)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.implReset:()V|] @Access PROTECTED {
      local temp ;
      
#L0dc028.   return @void ;

   }
    procedure [|boolean|] [|java:nio:charset:CharsetEncoder.isLegalReplacement|] ([|java:nio:charset:CharsetEncoder|] v6 @type (this), [|byte|][] v7) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.isLegalReplacement:([B)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0dc03c.   v3:= 1  @length 4;
#L0dc03e.   v4:= v6.[|java:nio:charset:CharsetEncoder.decoder|]   @type object;
#L0dc042.   if v4 != 0 then goto L0dc072;
#L0dc046.   v4:= v6.[|java:nio:charset:CharsetEncoder.cs|]   @type object;
#L0dc04a.   call temp:=  [|java:nio:charset:Charset.newDecoder|](v4) @signature [|Ljava/nio/charset/Charset;.newDecoder:()Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0dc050.   v4:= temp  @type object;
#L0dc052.   v6.[|java:nio:charset:CharsetEncoder.decoder|]  := v4 @type object;
#L0dc056.   v4:= v6.[|java:nio:charset:CharsetEncoder.decoder|]   @type object;
#L0dc05a.   v5:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0dc05e.   call temp:=  [|java:nio:charset:CharsetDecoder.onMalformedInput|](v4, v5) @signature [|Ljava/nio/charset/CharsetDecoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0dc064.   v4:= v6.[|java:nio:charset:CharsetEncoder.decoder|]   @type object;
#L0dc068.   v5:= @@[|java:nio:charset:CodingErrorAction.REPORT|]   @type object;
#L0dc06c.   call temp:=  [|java:nio:charset:CharsetDecoder.onUnmappableCharacter|](v4, v5) @signature [|Ljava/nio/charset/CharsetDecoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0dc072.   call temp:=  [|java:nio:ByteBuffer.wrap|](v7) @signature [|Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type static;
#L0dc078.   v0:= temp  @type object;
#L0dc07a.   v4:= v7.length;
#L0dc07c.   v4:= (float)v4  @type i2f;
#L0dc07e.   v5:= v6.[|java:nio:charset:CharsetEncoder.decoder|]   @type object;
#L0dc082.   call temp:=  [|java:nio:charset:CharsetDecoder.maxCharsPerByte|](v5) @signature [|Ljava/nio/charset/CharsetDecoder;.maxCharsPerByte:()F|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0dc088.   v5:= temp;
#L0dc08a.   v4:= v4 * v5  @type float;
#L0dc08c.   v4:= (int)v4  @type f2i;
#L0dc08e.   call temp:=  [|java:nio:CharBuffer.allocate|](v4) @signature [|Ljava/nio/CharBuffer;.allocate:(I)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type static;
#L0dc094.   v1:= temp  @type object;
#L0dc096.   v4:= v6.[|java:nio:charset:CharsetEncoder.decoder|]   @type object;
#L0dc09a.   call temp:=  [|java:nio:charset:CharsetDecoder.decode|](v4, v0, v1, v3) @signature [|Ljava/nio/charset/CharsetDecoder;.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CharsetDecoder|] @type virtual;
#L0dc0a0.   v2:= temp  @type object;
#L0dc0a2.   call temp:=  [|java:nio:charset:CoderResult.isError|](v2) @signature [|Ljava/nio/charset/CoderResult;.isError:()Z|] @classDescriptor [|java:nio:charset:CoderResult|] @type virtual;
#L0dc0a8.   v4:= temp;
#L0dc0aa.   if v4 != 0 then goto L0dc0b0;
#L0dc0ae.   return v3;
#L0dc0b0.   v3:= 0  @length 4;
#L0dc0b2.   goto L0dc0ae;

   }
    procedure [|java:nio:charset:CodingErrorAction|] [|java:nio:charset:CharsetEncoder.malformedInputAction|] ([|java:nio:charset:CharsetEncoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.malformedInputAction:()Ljava/nio/charset/CodingErrorAction;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0dc0c4.   v0:= v1.[|java:nio:charset:CharsetEncoder.malformedInputAction|]   @type object;
#L0dc0c8.   return v0  @type object;

   }
    procedure [|float|] [|java:nio:charset:CharsetEncoder.maxBytesPerChar|] ([|java:nio:charset:CharsetEncoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.maxBytesPerChar:()F|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0dc0dc.   v0:= v1.[|java:nio:charset:CharsetEncoder.maxBytesPerChar|] ;
#L0dc0e0.   return v0;

   }
    procedure [|java:nio:charset:CharsetEncoder|] [|java:nio:charset:CharsetEncoder.onMalformedInput|] ([|java:nio:charset:CharsetEncoder|] v2 @type (this), [|java:nio:charset:CodingErrorAction|] v3 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0dc0f4.   if v3 != 0 then goto L0dc108;
#L0dc0f8.   v0:= new [|java:lang:IllegalArgumentException|];
#L0dc0fc.   v1:= "newAction == null" @type (object, string);
#L0dc100.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0dc106.   throw v0;
#L0dc108.   v2.[|java:nio:charset:CharsetEncoder.malformedInputAction|]  := v3 @type object;
#L0dc10c.   call temp:=  [|java:nio:charset:CharsetEncoder.implOnMalformedInput|](v2, v3) @signature [|Ljava/nio/charset/CharsetEncoder;.implOnMalformedInput:(Ljava/nio/charset/CodingErrorAction;)V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dc112.   return v2  @type object;

   }
    procedure [|java:nio:charset:CharsetEncoder|] [|java:nio:charset:CharsetEncoder.onUnmappableCharacter|] ([|java:nio:charset:CharsetEncoder|] v2 @type (this), [|java:nio:charset:CodingErrorAction|] v3 @type (object)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L0dc124.   if v3 != 0 then goto L0dc138;
#L0dc128.   v0:= new [|java:lang:IllegalArgumentException|];
#L0dc12c.   v1:= "newAction == null" @type (object, string);
#L0dc130.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0dc136.   throw v0;
#L0dc138.   v2.[|java:nio:charset:CharsetEncoder.unmappableCharacterAction|]  := v3 @type object;
#L0dc13c.   call temp:=  [|java:nio:charset:CharsetEncoder.implOnUnmappableCharacter|](v2, v3) @signature [|Ljava/nio/charset/CharsetEncoder;.implOnUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dc142.   return v2  @type object;

   }
    procedure [|java:nio:charset:CharsetEncoder|] [|java:nio:charset:CharsetEncoder.replaceWith|] ([|java:nio:charset:CharsetEncoder|] v3 @type (this), [|byte|][] v4) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.replaceWith:([B)Ljava/nio/charset/CharsetEncoder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L0dc154.   if v4 != 0 then goto L0dc168;
#L0dc158.   v0:= new [|java:lang:IllegalArgumentException|];
#L0dc15c.   v1:= "replacement == null" @type (object, string);
#L0dc160.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0dc166.   throw v0;
#L0dc168.   v0:= v4.length;
#L0dc16a.   if v0 != 0 then goto L0dc17e;
#L0dc16e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0dc172.   v1:= "replacement.length == 0" @type (object, string);
#L0dc176.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0dc17c.   throw v0;
#L0dc17e.   v0:= v4.length;
#L0dc180.   v0:= (float)v0  @type i2f;
#L0dc182.   call temp:=  [|java:nio:charset:CharsetEncoder.maxBytesPerChar|](v3) @signature [|Ljava/nio/charset/CharsetEncoder;.maxBytesPerChar:()F|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dc188.   v1:= temp;
#L0dc18a.   v0:= cmpl(v0,v1);
#L0dc18e.   if v0 <= 0 then goto L0dc1e2;
#L0dc192.   v0:= new [|java:lang:IllegalArgumentException|];
#L0dc196.   v1:= new [|java:lang:StringBuilder|];
#L0dc19a.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0dc1a0.   v2:= "replacement.length > maxBytesPerChar: " @type (object, string);
#L0dc1a4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0dc1aa.   v1:= temp  @type object;
#L0dc1ac.   v2:= v4.length;
#L0dc1ae.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0dc1b4.   v1:= temp  @type object;
#L0dc1b6.   v2:= " > " @type (object, string);
#L0dc1ba.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0dc1c0.   v1:= temp  @type object;
#L0dc1c2.   call temp:=  [|java:nio:charset:CharsetEncoder.maxBytesPerChar|](v3) @signature [|Ljava/nio/charset/CharsetEncoder;.maxBytesPerChar:()F|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dc1c8.   v2:= temp;
#L0dc1ca.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0dc1d0.   v1:= temp  @type object;
#L0dc1d2.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0dc1d8.   v1:= temp  @type object;
#L0dc1da.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0dc1e0.   throw v0;
#L0dc1e2.   call temp:=  [|java:nio:charset:CharsetEncoder.isLegalReplacement|](v3, v4) @signature [|Ljava/nio/charset/CharsetEncoder;.isLegalReplacement:([B)Z|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dc1e8.   v0:= temp;
#L0dc1ea.   if v0 != 0 then goto L0dc228;
#L0dc1ee.   v0:= new [|java:lang:IllegalArgumentException|];
#L0dc1f2.   v1:= new [|java:lang:StringBuilder|];
#L0dc1f6.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0dc1fc.   v2:= "Bad replacement: " @type (object, string);
#L0dc200.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0dc206.   v1:= temp  @type object;
#L0dc208.   call temp:=  [|java:util:Arrays.toString|](v4) @signature [|Ljava/util/Arrays;.toString:([B)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0dc20e.   v2:= temp  @type object;
#L0dc210.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0dc216.   v1:= temp  @type object;
#L0dc218.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0dc21e.   v1:= temp  @type object;
#L0dc220.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0dc226.   throw v0;
#L0dc228.   v3.[|java:nio:charset:CharsetEncoder.replacementBytes|]  := v4 @type object;
#L0dc22c.   v0:= v3.[|java:nio:charset:CharsetEncoder.replacementBytes|]   @type object;
#L0dc230.   call temp:=  [|java:nio:charset:CharsetEncoder.implReplaceWith|](v3, v0) @signature [|Ljava/nio/charset/CharsetEncoder;.implReplaceWith:([B)V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dc236.   return v3  @type object;

   }
    procedure [|byte|][] [|java:nio:charset:CharsetEncoder.replacement|] ([|java:nio:charset:CharsetEncoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.replacement:()[B|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0dc248.   v0:= v1.[|java:nio:charset:CharsetEncoder.replacementBytes|]   @type object;
#L0dc24c.   return v0  @type object;

   }
    procedure [|java:nio:charset:CharsetEncoder|] [|java:nio:charset:CharsetEncoder.reset|] ([|java:nio:charset:CharsetEncoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.reset:()Ljava/nio/charset/CharsetEncoder;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L0dc260.   v0:= 4  @length 4;
#L0dc262.   v1.[|java:nio:charset:CharsetEncoder.status|]  := v0;
#L0dc266.   call temp:=  [|java:nio:charset:CharsetEncoder.implReset|](v1) @signature [|Ljava/nio/charset/CharsetEncoder;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type virtual;
#L0dc26c.   return v1  @type object;

   }
    procedure [|java:nio:charset:CodingErrorAction|] [|java:nio:charset:CharsetEncoder.unmappableCharacterAction|] ([|java:nio:charset:CharsetEncoder|] v1 @type (this)) @owner [|java:nio:charset:CharsetEncoder|] @signature [|Ljava/nio/charset/CharsetEncoder;.unmappableCharacterAction:()Ljava/nio/charset/CodingErrorAction;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0dc280.   v0:= v1.[|java:nio:charset:CharsetEncoder.unmappableCharacterAction|]   @type object;
#L0dc284.   return v0  @type object;

   }
record [|java:nio:charset:CharsetEncoderICU|]  @type class @AccessFlag FINAL  extends [|java:nio:charset:CharsetEncoder|] {
      [|char|][] [|java:nio:charset:CharsetEncoderICU.allocatedInput|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:nio:charset:CharsetEncoderICU.allocatedOutput|]    @AccessFlag PRIVATE;
      [|long|] [|java:nio:charset:CharsetEncoderICU.converterHandle|]    @AccessFlag PRIVATE;
      [|int|][] [|java:nio:charset:CharsetEncoderICU.data|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:charset:CharsetEncoderICU.inEnd|]    @AccessFlag PRIVATE;
      [|char|][] [|java:nio:charset:CharsetEncoderICU.input|]    @AccessFlag PRIVATE;
      [|int|] [|java:nio:charset:CharsetEncoderICU.outEnd|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:nio:charset:CharsetEncoderICU.output|]    @AccessFlag PRIVATE;
   }
      global [|java:util:Map|] @@[|java:nio:charset:CharsetEncoderICU.DEFAULT_REPLACEMENTS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetEncoderICU.INPUT_OFFSET|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetEncoderICU.INVALID_CHARS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:nio:charset:CharsetEncoderICU.OUTPUT_OFFSET|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.<clinit>|] () @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L0dc298.   v1:= new [|java:util:HashMap|];
#L0dc29c.   call temp:=  [|java:util:HashMap.<init>|](v1) @signature [|Ljava/util/HashMap;.<init>:()V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0dc2a2.   @@[|java:nio:charset:CharsetEncoderICU.DEFAULT_REPLACEMENTS|] := v1  @type object;
#L0dc2a6.   v1:= 1  @length 4;
#L0dc2a8.   v0:= new [|byte|][v1];
#L0dc2ac.   v1:= 0  @length 4;
#L0dc2ae.   v2:= 63  @length 16;
#L0dc2b2.   v0[v1]:= v2  @byte;
#L0dc2b6.   v1:= @@[|java:nio:charset:CharsetEncoderICU.DEFAULT_REPLACEMENTS|]   @type object;
#L0dc2ba.   v2:= "UTF-8" @type (object, string);
#L0dc2be.   call temp:=  [|java:util:Map.put|](v1, v2, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0dc2c4.   v1:= @@[|java:nio:charset:CharsetEncoderICU.DEFAULT_REPLACEMENTS|]   @type object;
#L0dc2c8.   v2:= "ISO-8859-1" @type (object, string);
#L0dc2cc.   call temp:=  [|java:util:Map.put|](v1, v2, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0dc2d2.   v1:= @@[|java:nio:charset:CharsetEncoderICU.DEFAULT_REPLACEMENTS|]   @type object;
#L0dc2d6.   v2:= "US-ASCII" @type (object, string);
#L0dc2da.   call temp:=  [|java:util:Map.put|](v1, v2, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0dc2e0.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.<init>|] ([|java:nio:charset:CharsetEncoderICU|] v7 @type (this), [|java:nio:charset:Charset|] v8 @type (object), [|float|] v9, [|float|] v10, [|byte|][] v11, [|long|] v12) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.<init>:(Ljava/nio/charset/Charset;FF[BJ)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0dc2f4.   v6:= 0  @length 4;
#L0dc2f6.   v5:= 1  @length 4;
#L0dc2f8.   v0:= v7  @type object;
#L0dc2fa.   v1:= v8  @type object;
#L0dc2fc.   v2:= v9;
#L0dc2fe.   v3:= v10;
#L0dc300.   v4:= v11  @type object;
#L0dc302.   call temp:=  [|java:nio:charset:CharsetEncoder.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/nio/charset/CharsetEncoder;.<init>:(Ljava/nio/charset/Charset;FF[BZ)V|] @classDescriptor [|java:nio:charset:CharsetEncoder|] @type direct;
#L0dc308.   v0:= 3  @length 4;
#L0dc30a.   v0:= new [|int|][v0];
#L0dc30e.   v7.[|java:nio:charset:CharsetEncoderICU.data|]  := v0 @type object;
#L0dc312.   v0:= 0  @length wide16;
#L0dc316.   v7.[|java:nio:charset:CharsetEncoderICU.converterHandle|]  := v0 @wide;
#L0dc31a.   v7.[|java:nio:charset:CharsetEncoderICU.input|]  := v6 @type object;
#L0dc31e.   v7.[|java:nio:charset:CharsetEncoderICU.output|]  := v6 @type object;
#L0dc322.   v7.[|java:nio:charset:CharsetEncoderICU.allocatedInput|]  := v6 @type object;
#L0dc326.   v7.[|java:nio:charset:CharsetEncoderICU.allocatedOutput|]  := v6 @type object;
#L0dc32a.   v7.[|java:nio:charset:CharsetEncoderICU.converterHandle|]  := v12 @wide;
#L0dc32e.   call temp:=  [|java:nio:charset:CharsetEncoderICU.updateCallback|](v7) @signature [|Ljava/nio/charset/CharsetEncoderICU;.updateCallback:()V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc334.   return @void ;

   }
    procedure [|int|] [|java:nio:charset:CharsetEncoderICU.getArray|] ([|java:nio:charset:CharsetEncoderICU|] v2 @type (this), [|java:nio:ByteBuffer|] v3 @type (object)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.getArray:(Ljava/nio/ByteBuffer;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0dc348.   call temp:=  [|java:nio:ByteBuffer.hasArray|](v3) @signature [|Ljava/nio/ByteBuffer;.hasArray:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc34e.   v0:= temp;
#L0dc350.   if v0 == 0 then goto L0dc38a;
#L0dc354.   call temp:=  [|java:nio:ByteBuffer.array|](v3) @signature [|Ljava/nio/ByteBuffer;.array:()[B|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc35a.   v0:= temp  @type object;
#L0dc35c.   v2.[|java:nio:charset:CharsetEncoderICU.output|]  := v0 @type object;
#L0dc360.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v3) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc366.   v0:= temp;
#L0dc368.   call temp:=  [|java:nio:ByteBuffer.limit|](v3) @signature [|Ljava/nio/ByteBuffer;.limit:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc36e.   v1:= temp;
#L0dc370.   v0:= v0 + v1  @type int;
#L0dc372.   v2.[|java:nio:charset:CharsetEncoderICU.outEnd|]  := v0;
#L0dc376.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v3) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc37c.   v0:= temp;
#L0dc37e.   call temp:=  [|java:nio:ByteBuffer.position|](v3) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc384.   v1:= temp;
#L0dc386.   v0:= v0 + v1  @type int;
#L0dc388.   return v0;
#L0dc38a.   call temp:=  [|java:nio:ByteBuffer.remaining|](v3) @signature [|Ljava/nio/ByteBuffer;.remaining:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc390.   v0:= temp;
#L0dc392.   v2.[|java:nio:charset:CharsetEncoderICU.outEnd|]  := v0;
#L0dc396.   v0:= v2.[|java:nio:charset:CharsetEncoderICU.allocatedOutput|]   @type object;
#L0dc39a.   if v0 == 0 then goto L0dc3ac;
#L0dc39e.   v0:= v2.[|java:nio:charset:CharsetEncoderICU.outEnd|] ;
#L0dc3a2.   v1:= v2.[|java:nio:charset:CharsetEncoderICU.allocatedOutput|]   @type object;
#L0dc3a6.   v1:= v1.length;
#L0dc3a8.   if v0 <= v1 then goto L0dc3b8;
#L0dc3ac.   v0:= v2.[|java:nio:charset:CharsetEncoderICU.outEnd|] ;
#L0dc3b0.   v0:= new [|byte|][v0];
#L0dc3b4.   v2.[|java:nio:charset:CharsetEncoderICU.allocatedOutput|]  := v0 @type object;
#L0dc3b8.   v0:= v2.[|java:nio:charset:CharsetEncoderICU.allocatedOutput|]   @type object;
#L0dc3bc.   v2.[|java:nio:charset:CharsetEncoderICU.output|]  := v0 @type object;
#L0dc3c0.   v0:= 0  @length 4;
#L0dc3c2.   goto L0dc388;

   }
    procedure [|int|] [|java:nio:charset:CharsetEncoderICU.getArray|] ([|java:nio:charset:CharsetEncoderICU|] v4 @type (this), [|java:nio:CharBuffer|] v5 @type (object)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.getArray:(Ljava/nio/CharBuffer;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0dc3d4.   v1:= 0  @length 4;
#L0dc3d6.   call temp:=  [|java:nio:CharBuffer.hasArray|](v5) @signature [|Ljava/nio/CharBuffer;.hasArray:()Z|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc3dc.   v2:= temp;
#L0dc3de.   if v2 == 0 then goto L0dc418;
#L0dc3e2.   call temp:=  [|java:nio:CharBuffer.array|](v5) @signature [|Ljava/nio/CharBuffer;.array:()[C|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc3e8.   v1:= temp  @type object;
#L0dc3ea.   v4.[|java:nio:charset:CharsetEncoderICU.input|]  := v1 @type object;
#L0dc3ee.   call temp:=  [|java:nio:CharBuffer.arrayOffset|](v5) @signature [|Ljava/nio/CharBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc3f4.   v1:= temp;
#L0dc3f6.   call temp:=  [|java:nio:CharBuffer.limit|](v5) @signature [|Ljava/nio/CharBuffer;.limit:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc3fc.   v2:= temp;
#L0dc3fe.   v1:= v1 + v2  @type int;
#L0dc400.   v4.[|java:nio:charset:CharsetEncoderICU.inEnd|]  := v1;
#L0dc404.   call temp:=  [|java:nio:CharBuffer.arrayOffset|](v5) @signature [|Ljava/nio/CharBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc40a.   v1:= temp;
#L0dc40c.   call temp:=  [|java:nio:CharBuffer.position|](v5) @signature [|Ljava/nio/CharBuffer;.position:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc412.   v2:= temp;
#L0dc414.   v1:= v1 + v2  @type int;
#L0dc416.   return v1;
#L0dc418.   call temp:=  [|java:nio:CharBuffer.remaining|](v5) @signature [|Ljava/nio/CharBuffer;.remaining:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc41e.   v2:= temp;
#L0dc420.   v4.[|java:nio:charset:CharsetEncoderICU.inEnd|]  := v2;
#L0dc424.   v2:= v4.[|java:nio:charset:CharsetEncoderICU.allocatedInput|]   @type object;
#L0dc428.   if v2 == 0 then goto L0dc43a;
#L0dc42c.   v2:= v4.[|java:nio:charset:CharsetEncoderICU.inEnd|] ;
#L0dc430.   v3:= v4.[|java:nio:charset:CharsetEncoderICU.allocatedInput|]   @type object;
#L0dc434.   v3:= v3.length;
#L0dc436.   if v2 <= v3 then goto L0dc446;
#L0dc43a.   v2:= v4.[|java:nio:charset:CharsetEncoderICU.inEnd|] ;
#L0dc43e.   v2:= new [|char|][v2];
#L0dc442.   v4.[|java:nio:charset:CharsetEncoderICU.allocatedInput|]  := v2 @type object;
#L0dc446.   call temp:=  [|java:nio:CharBuffer.position|](v5) @signature [|Ljava/nio/CharBuffer;.position:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc44c.   v0:= temp;
#L0dc44e.   v2:= v4.[|java:nio:charset:CharsetEncoderICU.allocatedInput|]   @type object;
#L0dc452.   v3:= v4.[|java:nio:charset:CharsetEncoderICU.inEnd|] ;
#L0dc456.   call temp:=  [|java:nio:CharBuffer.get|](v5, v2, v1, v3) @signature [|Ljava/nio/CharBuffer;.get:([CII)Ljava/nio/CharBuffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc45c.   call temp:=  [|java:nio:CharBuffer.position|](v5, v0) @signature [|Ljava/nio/CharBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc462.   v2:= v4.[|java:nio:charset:CharsetEncoderICU.allocatedInput|]   @type object;
#L0dc466.   v4.[|java:nio:charset:CharsetEncoderICU.input|]  := v2 @type object;
#L0dc46a.   goto L0dc416;

   }
    procedure [|byte|][] [|java:nio:charset:CharsetEncoderICU.makeReplacement|] ([|java:lang:String|] v2 @type (object), [|long|] v3) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.makeReplacement:(Ljava/lang/String;J)[B|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L0dc47c.   v1:= @@[|java:nio:charset:CharsetEncoderICU.DEFAULT_REPLACEMENTS|]   @type object;
#L0dc480.   call temp:=  [|java:util:Map.get|](v1, v2) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0dc486.   v0:= temp  @type object;
#L0dc488.   v0:= ([|byte|][])v0;
#L0dc48c.   if v0 == 0 then goto L0dc49e;
#L0dc490.   call temp:=  [|byte[].clone|](v0) @signature [|[B.clone:()Ljava/lang/Object;|] @classDescriptor [|byte[]|] @type virtual;
#L0dc496.   v1:= temp  @type object;
#L0dc498.   v1:= ([|byte|][])v1;
#L0dc49c.   return v1  @type object;
#L0dc49e.   call temp:=  [|libcore:icu:NativeConverter.getSubstitutionBytes|](v3, v4) @signature [|Llibcore/icu/NativeConverter;.getSubstitutionBytes:(J)[B|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc4a4.   v1:= temp  @type object;
#L0dc4a6.   goto L0dc49c;

   }
    procedure [|java:nio:charset:CharsetEncoderICU|] [|java:nio:charset:CharsetEncoderICU.newInstance|] ([|java:nio:charset:Charset|] v9 @type (object), [|java:lang:String|] v10 @type (object)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.newInstance:(Ljava/nio/charset/Charset;Ljava/lang/String;)Ljava/nio/charset/CharsetEncoderICU;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0dc4b8.   v7:= 0  @length wide16;
#L0dc4bc.   v5:= 0  @length wide16;
#L0dc4c0.   call temp:=  [|libcore:icu:NativeConverter.openConverter|](v10) @signature [|Llibcore/icu/NativeConverter;.openConverter:(Ljava/lang/String;)J|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc4c6.   v5:= temp  @type wide;
#L0dc4c8.   call temp:=  [|libcore:icu:NativeConverter.getAveBytesPerChar|](v5, v6) @signature [|Llibcore/icu/NativeConverter;.getAveBytesPerChar:(J)F|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc4ce.   v2:= temp;
#L0dc4d0.   call temp:=  [|libcore:icu:NativeConverter.getMaxBytesPerChar|](v5, v6) @signature [|Llibcore/icu/NativeConverter;.getMaxBytesPerChar:(J)I|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc4d6.   v1:= temp;
#L0dc4d8.   v3:= (float)v1  @type i2f;
#L0dc4da.   call temp:=  [|java:nio:charset:CharsetEncoderICU.makeReplacement|](v10, v5, v6) @signature [|Ljava/nio/charset/CharsetEncoderICU;.makeReplacement:(Ljava/lang/String;J)[B|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type static;
#L0dc4e0.   v4:= temp  @type object;
#L0dc4e2.   v0:= new [|java:nio:charset:CharsetEncoderICU|];
#L0dc4e6.   v1:= v9  @type object;
#L0dc4e8.   call temp:=  [|java:nio:charset:CharsetEncoderICU.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/nio/charset/CharsetEncoderICU;.<init>:(Ljava/nio/charset/Charset;FF[BJ)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc4ee.   v5:= 0  @length wide16;
#L0dc4f2.   v1:= cmp(v5,v7);
#L0dc4f6.   if v1 == 0 then goto L0dc500;
#L0dc4fa.   call temp:=  [|libcore:icu:NativeConverter.closeConverter|](v5, v6) @signature [|Llibcore/icu/NativeConverter;.closeConverter:(J)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc500.   return v0  @type object;
#L0dc502.   v1:= Exception  @type object;
#L0dc504.   v7:= cmp(v5,v7);
#L0dc508.   if v7 == 0 then goto L0dc512;
#L0dc50c.   call temp:=  [|libcore:icu:NativeConverter.closeConverter|](v5, v6) @signature [|Llibcore/icu/NativeConverter;.closeConverter:(J)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc512.   throw v1;
  catch  [|any|] @[L0dc4c0..L0dc4ee] goto L0dc502;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.setPosition|] ([|java:nio:charset:CharsetEncoderICU|] v4 @type (this), [|java:nio:ByteBuffer|] v5 @type (object)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0dc530.   v3:= 1  @length 4;
#L0dc532.   call temp:=  [|java:nio:ByteBuffer.hasArray|](v5) @signature [|Ljava/nio/ByteBuffer;.hasArray:()Z|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc538.   v0:= temp;
#L0dc53a.   if v0 == 0 then goto L0dc568;
#L0dc53e.   call temp:=  [|java:nio:ByteBuffer.position|](v5) @signature [|Ljava/nio/ByteBuffer;.position:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc544.   v0:= temp;
#L0dc546.   v1:= v4.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc54a.   v1:= v1[v3];
#L0dc54e.   v0:= v0 + v1  @type int;
#L0dc550.   call temp:=  [|java:nio:ByteBuffer.arrayOffset|](v5) @signature [|Ljava/nio/ByteBuffer;.arrayOffset:()I|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc556.   v1:= temp;
#L0dc558.   v0:= v0 - v1  @type int;
#L0dc55a.   call temp:=  [|java:nio:ByteBuffer.position|](v5, v0) @signature [|Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc560.   v0:= 0  @length 4;
#L0dc562.   v4.[|java:nio:charset:CharsetEncoderICU.output|]  := v0 @type object;
#L0dc566.   return @void ;
#L0dc568.   v0:= v4.[|java:nio:charset:CharsetEncoderICU.output|]   @type object;
#L0dc56c.   v1:= 0  @length 4;
#L0dc56e.   v2:= v4.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc572.   v2:= v2[v3];
#L0dc576.   call temp:=  [|java:nio:ByteBuffer.put|](v5, v0, v1, v2) @signature [|Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;|] @classDescriptor [|java:nio:ByteBuffer|] @type virtual;
#L0dc57c.   goto L0dc560;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.setPosition|] ([|java:nio:charset:CharsetEncoderICU|] v3 @type (this), [|java:nio:CharBuffer|] v4 @type (object)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L0dc590.   call temp:=  [|java:nio:CharBuffer.position|](v4) @signature [|Ljava/nio/CharBuffer;.position:()I|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc596.   v0:= temp;
#L0dc598.   v1:= v3.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc59c.   v2:= 0  @length 4;
#L0dc59e.   v1:= v1[v2];
#L0dc5a2.   v0:= v0 + v1  @type int;
#L0dc5a4.   v1:= v3.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc5a8.   v2:= 2  @length 4;
#L0dc5aa.   v1:= v1[v2];
#L0dc5ae.   v0:= v0 - v1  @type int;
#L0dc5b0.   call temp:=  [|java:nio:CharBuffer.position|](v4, v0) @signature [|Ljava/nio/CharBuffer;.position:(I)Ljava/nio/Buffer;|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc5b6.   v0:= 0  @length 4;
#L0dc5b8.   v3.[|java:nio:charset:CharsetEncoderICU.input|]  := v0 @type object;
#L0dc5bc.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.updateCallback|] ([|java:nio:charset:CharsetEncoderICU|] v2 @type (this)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.updateCallback:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L0dc5d0.   v0:= v2.[|java:nio:charset:CharsetEncoderICU.converterHandle|]   @wide;
#L0dc5d4.   call temp:=  [|libcore:icu:NativeConverter.setCallbackEncode|](v0, v1, v2) @signature [|Llibcore/icu/NativeConverter;.setCallbackEncode:(JLjava/nio/charset/CharsetEncoder;)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc5da.   return @void ;

   }
    procedure [|boolean|] [|java:nio:charset:CharsetEncoderICU.canEncode|] ([|java:nio:charset:CharsetEncoderICU|] v1 @type (this), [|char|] v2) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.canEncode:(C)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0dc5ec.   call temp:=  [|java:nio:charset:CharsetEncoderICU.canEncode|](v1, v2) @signature [|Ljava/nio/charset/CharsetEncoderICU;.canEncode:(I)Z|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type virtual;
#L0dc5f2.   v0:= temp;
#L0dc5f4.   return v0;

   }
    procedure [|boolean|] [|java:nio:charset:CharsetEncoderICU.canEncode|] ([|java:nio:charset:CharsetEncoderICU|] v2 @type (this), [|int|] v3) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.canEncode:(I)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0dc608.   v0:= v2.[|java:nio:charset:CharsetEncoderICU.converterHandle|]   @wide;
#L0dc60c.   call temp:=  [|libcore:icu:NativeConverter.canEncode|](v0, v1, v3) @signature [|Llibcore/icu/NativeConverter;.canEncode:(JI)Z|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc612.   v0:= temp;
#L0dc614.   return v0;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetEncoderICU.encodeLoop|] ([|java:nio:charset:CharsetEncoderICU|] v9 @type (this), [|java:nio:CharBuffer|] v10 @type (object), [|java:nio:ByteBuffer|] v11 @type (object)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.encodeLoop:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0dc628.   v4:= 2  @length 4;
#L0dc62a.   v3:= 0  @length 4;
#L0dc62c.   call temp:=  [|java:nio:CharBuffer.hasRemaining|](v10) @signature [|Ljava/nio/CharBuffer;.hasRemaining:()Z|] @classDescriptor [|java:nio:CharBuffer|] @type virtual;
#L0dc632.   v0:= temp;
#L0dc634.   if v0 != 0 then goto L0dc63e;
#L0dc638.   v0:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0dc63c.   return v0  @type object;
#L0dc63e.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc642.   call temp:=  [|java:nio:charset:CharsetEncoderICU.getArray|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.getArray:(Ljava/nio/CharBuffer;)I|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc648.   v1:= temp;
#L0dc64a.   v0[v3]:= v1;
#L0dc64e.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc652.   v1:= 1  @length 4;
#L0dc654.   call temp:=  [|java:nio:charset:CharsetEncoderICU.getArray|](v9, v11) @signature [|Ljava/nio/charset/CharsetEncoderICU;.getArray:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc65a.   v2:= temp;
#L0dc65c.   v0[v1]:= v2;
#L0dc660.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc664.   v0[v4]:= v3;
#L0dc668.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.converterHandle|]   @wide;
#L0dc66c.   v2:= v9.[|java:nio:charset:CharsetEncoderICU.input|]   @type object;
#L0dc670.   v3:= v9.[|java:nio:charset:CharsetEncoderICU.inEnd|] ;
#L0dc674.   v4:= v9.[|java:nio:charset:CharsetEncoderICU.output|]   @type object;
#L0dc678.   v5:= v9.[|java:nio:charset:CharsetEncoderICU.outEnd|] ;
#L0dc67c.   v6:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc680.   v7:= 0  @length 4;
#L0dc682.   call temp:=  [|libcore:icu:NativeConverter.encode|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Llibcore/icu/NativeConverter;.encode:(J[CI[BI[IZ)I|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc688.   v8:= temp;
#L0dc68a.   call temp:=  [|libcore:icu:ICU.U_FAILURE|](v8) @signature [|Llibcore/icu/ICU;.U_FAILURE:(I)Z|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0dc690.   v0:= temp;
#L0dc692.   if v0 == 0 then goto L0dc71c;
#L0dc696.   v0:= 15  @length 16;
#L0dc69a.   if v8 != v0 then goto L0dc6b0;
#L0dc69e.   v0:= @@[|java:nio:charset:CoderResult.OVERFLOW|]   @type object;
#L0dc6a2.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc6a8.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc6ae.   goto L0dc63c;
#L0dc6b0.   v0:= 10  @length 16;
#L0dc6b4.   if v8 != v0 then goto L0dc6d8;
#L0dc6b8.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc6bc.   v1:= 2  @length 4;
#L0dc6be.   v0:= v0[v1];
#L0dc6c2.   call temp:=  [|java:nio:charset:CoderResult.unmappableForLength|](v0) @signature [|Ljava/nio/charset/CoderResult;.unmappableForLength:(I)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CoderResult|] @type static;
#L0dc6c8.   v0:= temp  @type object;
#L0dc6ca.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc6d0.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc6d6.   goto L0dc63c;
#L0dc6d8.   v0:= 12  @length 16;
#L0dc6dc.   if v8 != v0 then goto L0dc700;
#L0dc6e0.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc6e4.   v1:= 2  @length 4;
#L0dc6e6.   v0:= v0[v1];
#L0dc6ea.   call temp:=  [|java:nio:charset:CoderResult.malformedForLength|](v0) @signature [|Ljava/nio/charset/CoderResult;.malformedForLength:(I)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CoderResult|] @type static;
#L0dc6f0.   v0:= temp  @type object;
#L0dc6f2.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc6f8.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc6fe.   goto L0dc63c;
#L0dc700.   v0:= new [|java:lang:AssertionError|];
#L0dc704.   call temp:=  [|java:lang:AssertionError.<init>|](v0, v8) @signature [|Ljava/lang/AssertionError;.<init>:(I)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0dc70a.   throw v0;
#L0dc70c.   v0:= Exception  @type object;
#L0dc70e.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc714.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc71a.   throw v0;
#L0dc71c.   v0:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0dc720.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/CharBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc726.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v11) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc72c.   goto L0dc63c;
  catch  [|any|] @[L0dc668..L0dc6a2] goto L0dc70c;
  catch  [|any|] @[L0dc6b8..L0dc6c8] goto L0dc70c;
  catch  [|any|] @[L0dc6e0..L0dc6f0] goto L0dc70c;
  catch  [|any|] @[L0dc700..L0dc70c] goto L0dc70c;
  catch  [|any|] @[L0dc71c..L0dc720] goto L0dc70c;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.finalize|] ([|java:nio:charset:CharsetEncoderICU|] v2 @type (this)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L0dc76c.   v0:= v2.[|java:nio:charset:CharsetEncoderICU.converterHandle|]   @wide;
#L0dc770.   call temp:=  [|libcore:icu:NativeConverter.closeConverter|](v0, v1) @signature [|Llibcore/icu/NativeConverter;.closeConverter:(J)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc776.   v0:= 0  @length wide16;
#L0dc77a.   v2.[|java:nio:charset:CharsetEncoderICU.converterHandle|]  := v0 @wide;
#L0dc77e.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L0dc784.   return @void ;
#L0dc786.   v0:= Exception  @type object;
#L0dc788.   call temp:=  [|java:lang:Object.finalize|](v2) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L0dc78e.   throw v0;
  catch  [|any|] @[L0dc76c..L0dc77e] goto L0dc786;

   }
    procedure [|java:nio:charset:CoderResult|] [|java:nio:charset:CharsetEncoderICU.implFlush|] ([|java:nio:charset:CharsetEncoderICU|] v9 @type (this), [|java:nio:ByteBuffer|] v10 @type (object)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.implFlush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L0dc7ac.   v0:= @@[|libcore:util:EmptyArray.CHAR|]   @type object;
#L0dc7b0.   v9.[|java:nio:charset:CharsetEncoderICU.input|]  := v0 @type object;
#L0dc7b4.   v0:= 0  @length 4;
#L0dc7b6.   v9.[|java:nio:charset:CharsetEncoderICU.inEnd|]  := v0;
#L0dc7ba.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc7be.   v1:= 0  @length 4;
#L0dc7c0.   v2:= 0  @length 4;
#L0dc7c2.   v0[v1]:= v2;
#L0dc7c6.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc7ca.   v1:= 1  @length 4;
#L0dc7cc.   call temp:=  [|java:nio:charset:CharsetEncoderICU.getArray|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.getArray:(Ljava/nio/ByteBuffer;)I|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc7d2.   v2:= temp;
#L0dc7d4.   v0[v1]:= v2;
#L0dc7d8.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc7dc.   v1:= 2  @length 4;
#L0dc7de.   v2:= 0  @length 4;
#L0dc7e0.   v0[v1]:= v2;
#L0dc7e4.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.converterHandle|]   @wide;
#L0dc7e8.   v2:= v9.[|java:nio:charset:CharsetEncoderICU.input|]   @type object;
#L0dc7ec.   v3:= v9.[|java:nio:charset:CharsetEncoderICU.inEnd|] ;
#L0dc7f0.   v4:= v9.[|java:nio:charset:CharsetEncoderICU.output|]   @type object;
#L0dc7f4.   v5:= v9.[|java:nio:charset:CharsetEncoderICU.outEnd|] ;
#L0dc7f8.   v6:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc7fc.   v7:= 1  @length 4;
#L0dc7fe.   call temp:=  [|libcore:icu:NativeConverter.encode|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Llibcore/icu/NativeConverter;.encode:(J[CI[BI[IZ)I|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc804.   v8:= temp;
#L0dc806.   call temp:=  [|libcore:icu:ICU.U_FAILURE|](v8) @signature [|Llibcore/icu/ICU;.U_FAILURE:(I)Z|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0dc80c.   v0:= temp;
#L0dc80e.   if v0 == 0 then goto L0dc862;
#L0dc812.   v0:= 15  @length 16;
#L0dc816.   if v8 != v0 then goto L0dc82c;
#L0dc81a.   v0:= @@[|java:nio:charset:CoderResult.OVERFLOW|]   @type object;
#L0dc81e.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc824.   call temp:=  [|java:nio:charset:CharsetEncoderICU.implReset|](v9) @signature [|Ljava/nio/charset/CharsetEncoderICU;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type virtual;
#L0dc82a.   return v0  @type object;
#L0dc82c.   v0:= 11  @length 16;
#L0dc830.   if v8 != v0 then goto L0dc862;
#L0dc834.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc838.   v1:= 0  @length 4;
#L0dc83a.   v0:= v0[v1];
#L0dc83e.   if v0 <= 0 then goto L0dc862;
#L0dc842.   v0:= v9.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc846.   v1:= 0  @length 4;
#L0dc848.   v0:= v0[v1];
#L0dc84c.   call temp:=  [|java:nio:charset:CoderResult.malformedForLength|](v0) @signature [|Ljava/nio/charset/CoderResult;.malformedForLength:(I)Ljava/nio/charset/CoderResult;|] @classDescriptor [|java:nio:charset:CoderResult|] @type static;
#L0dc852.   v0:= temp  @type object;
#L0dc854.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc85a.   call temp:=  [|java:nio:charset:CharsetEncoderICU.implReset|](v9) @signature [|Ljava/nio/charset/CharsetEncoderICU;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type virtual;
#L0dc860.   goto L0dc82a;
#L0dc862.   v0:= @@[|java:nio:charset:CoderResult.UNDERFLOW|]   @type object;
#L0dc866.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc86c.   call temp:=  [|java:nio:charset:CharsetEncoderICU.implReset|](v9) @signature [|Ljava/nio/charset/CharsetEncoderICU;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type virtual;
#L0dc872.   goto L0dc82a;
#L0dc874.   v0:= Exception  @type object;
#L0dc876.   call temp:=  [|java:nio:charset:CharsetEncoderICU.setPosition|](v9, v10) @signature [|Ljava/nio/charset/CharsetEncoderICU;.setPosition:(Ljava/nio/ByteBuffer;)V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc87c.   call temp:=  [|java:nio:charset:CharsetEncoderICU.implReset|](v9) @signature [|Ljava/nio/charset/CharsetEncoderICU;.implReset:()V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type virtual;
#L0dc882.   throw v0;
  catch  [|any|] @[L0dc7ac..L0dc81e] goto L0dc874;
  catch  [|any|] @[L0dc834..L0dc852] goto L0dc874;
  catch  [|any|] @[L0dc862..L0dc866] goto L0dc874;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.implOnMalformedInput|] ([|java:nio:charset:CharsetEncoderICU|] v0 @type (this), [|java:nio:charset:CodingErrorAction|] v1 @type (object)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.implOnMalformedInput:(Ljava/nio/charset/CodingErrorAction;)V|] @Access PROTECTED {
      local temp ;
      
#L0dc8b0.   call temp:=  [|java:nio:charset:CharsetEncoderICU.updateCallback|](v0) @signature [|Ljava/nio/charset/CharsetEncoderICU;.updateCallback:()V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc8b6.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.implOnUnmappableCharacter|] ([|java:nio:charset:CharsetEncoderICU|] v0 @type (this), [|java:nio:charset:CodingErrorAction|] v1 @type (object)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.implOnUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)V|] @Access PROTECTED {
      local temp ;
      
#L0dc8c8.   call temp:=  [|java:nio:charset:CharsetEncoderICU.updateCallback|](v0) @signature [|Ljava/nio/charset/CharsetEncoderICU;.updateCallback:()V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc8ce.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.implReplaceWith|] ([|java:nio:charset:CharsetEncoderICU|] v0 @type (this), [|byte|][] v1) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.implReplaceWith:([B)V|] @Access PROTECTED {
      local temp ;
      
#L0dc8e0.   call temp:=  [|java:nio:charset:CharsetEncoderICU.updateCallback|](v0) @signature [|Ljava/nio/charset/CharsetEncoderICU;.updateCallback:()V|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type direct;
#L0dc8e6.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:CharsetEncoderICU.implReset|] ([|java:nio:charset:CharsetEncoderICU|] v4 @type (this)) @owner [|java:nio:charset:CharsetEncoderICU|] @signature [|Ljava/nio/charset/CharsetEncoderICU;.implReset:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0dc8f8.   v3:= 0  @length 4;
#L0dc8fa.   v2:= 0  @length 4;
#L0dc8fc.   v0:= v4.[|java:nio:charset:CharsetEncoderICU.converterHandle|]   @wide;
#L0dc900.   call temp:=  [|libcore:icu:NativeConverter.resetCharToByte|](v0, v1) @signature [|Llibcore/icu/NativeConverter;.resetCharToByte:(J)V|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc906.   v0:= v4.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc90a.   v0[v2]:= v2;
#L0dc90e.   v0:= v4.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc912.   v1:= 1  @length 4;
#L0dc914.   v0[v1]:= v2;
#L0dc918.   v0:= v4.[|java:nio:charset:CharsetEncoderICU.data|]   @type object;
#L0dc91c.   v1:= 2  @length 4;
#L0dc91e.   v0[v1]:= v2;
#L0dc922.   v4.[|java:nio:charset:CharsetEncoderICU.output|]  := v3 @type object;
#L0dc926.   v4.[|java:nio:charset:CharsetEncoderICU.input|]  := v3 @type object;
#L0dc92a.   v4.[|java:nio:charset:CharsetEncoderICU.allocatedInput|]  := v3 @type object;
#L0dc92e.   v4.[|java:nio:charset:CharsetEncoderICU.allocatedOutput|]  := v3 @type object;
#L0dc932.   v4.[|java:nio:charset:CharsetEncoderICU.inEnd|]  := v2;
#L0dc936.   v4.[|java:nio:charset:CharsetEncoderICU.outEnd|]  := v2;
#L0dc93a.   return @void ;

   }
record [|java:nio:charset:CharsetICU|]  @type class @AccessFlag FINAL  extends [|java:nio:charset:Charset|] {
      [|java:lang:String|] [|java:nio:charset:CharsetICU.icuCanonicalName|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:nio:charset:CharsetICU.<init>|] ([|java:nio:charset:CharsetICU|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|][] v3 @type (object)) @owner [|java:nio:charset:CharsetICU|] @signature [|Ljava/nio/charset/CharsetICU;.<init>:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
      
#L0dc94c.   call temp:=  [|java:nio:charset:Charset.<init>|](v0, v1, v3) @signature [|Ljava/nio/charset/Charset;.<init>:(Ljava/lang/String;[Ljava/lang/String;)V|] @classDescriptor [|java:nio:charset:Charset|] @type direct;
#L0dc952.   v0.[|java:nio:charset:CharsetICU.icuCanonicalName|]  := v2 @type object;
#L0dc956.   return @void ;

   }
    procedure [|boolean|] [|java:nio:charset:CharsetICU.contains|] ([|java:nio:charset:CharsetICU|] v2 @type (this), [|java:nio:charset:Charset|] v3 @type (object)) @owner [|java:nio:charset:CharsetICU|] @signature [|Ljava/nio/charset/CharsetICU;.contains:(Ljava/nio/charset/Charset;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L0dc968.   if v3 != 0 then goto L0dc970;
#L0dc96c.   v0:= 0  @length 4;
#L0dc96e.   return v0;
#L0dc970.   call temp:=  [|java:nio:charset:CharsetICU.equals|](v2, v3) @signature [|Ljava/nio/charset/CharsetICU;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:nio:charset:CharsetICU|] @type virtual;
#L0dc976.   v0:= temp;
#L0dc978.   if v0 == 0 then goto L0dc980;
#L0dc97c.   v0:= 1  @length 4;
#L0dc97e.   goto L0dc96e;
#L0dc980.   call temp:=  [|java:nio:charset:CharsetICU.name|](v2) @signature [|Ljava/nio/charset/CharsetICU;.name:()Ljava/lang/String;|] @classDescriptor [|java:nio:charset:CharsetICU|] @type virtual;
#L0dc986.   v0:= temp  @type object;
#L0dc988.   call temp:=  [|java:nio:charset:Charset.name|](v3) @signature [|Ljava/nio/charset/Charset;.name:()Ljava/lang/String;|] @classDescriptor [|java:nio:charset:Charset|] @type virtual;
#L0dc98e.   v1:= temp  @type object;
#L0dc990.   call temp:=  [|libcore:icu:NativeConverter.contains|](v0, v1) @signature [|Llibcore/icu/NativeConverter;.contains:(Ljava/lang/String;Ljava/lang/String;)Z|] @classDescriptor [|libcore:icu:NativeConverter|] @type static;
#L0dc996.   v0:= temp;
#L0dc998.   goto L0dc96e;

   }
    procedure [|java:nio:charset:CharsetDecoder|] [|java:nio:charset:CharsetICU.newDecoder|] ([|java:nio:charset:CharsetICU|] v1 @type (this)) @owner [|java:nio:charset:CharsetICU|] @signature [|Ljava/nio/charset/CharsetICU;.newDecoder:()Ljava/nio/charset/CharsetDecoder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0dc9ac.   v0:= v1.[|java:nio:charset:CharsetICU.icuCanonicalName|]   @type object;
#L0dc9b0.   call temp:=  [|java:nio:charset:CharsetDecoderICU.newInstance|](v1, v0) @signature [|Ljava/nio/charset/CharsetDecoderICU;.newInstance:(Ljava/nio/charset/Charset;Ljava/lang/String;)Ljava/nio/charset/CharsetDecoderICU;|] @classDescriptor [|java:nio:charset:CharsetDecoderICU|] @type static;
#L0dc9b6.   v0:= temp  @type object;
#L0dc9b8.   return v0  @type object;

   }
    procedure [|java:nio:charset:CharsetEncoder|] [|java:nio:charset:CharsetICU.newEncoder|] ([|java:nio:charset:CharsetICU|] v1 @type (this)) @owner [|java:nio:charset:CharsetICU|] @signature [|Ljava/nio/charset/CharsetICU;.newEncoder:()Ljava/nio/charset/CharsetEncoder;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L0dc9cc.   v0:= v1.[|java:nio:charset:CharsetICU.icuCanonicalName|]   @type object;
#L0dc9d0.   call temp:=  [|java:nio:charset:CharsetEncoderICU.newInstance|](v1, v0) @signature [|Ljava/nio/charset/CharsetEncoderICU;.newInstance:(Ljava/nio/charset/Charset;Ljava/lang/String;)Ljava/nio/charset/CharsetEncoderICU;|] @classDescriptor [|java:nio:charset:CharsetEncoderICU|] @type static;
#L0dc9d6.   v0:= temp  @type object;
#L0dc9d8.   return v0  @type object;

   }
record [|java:nio:charset:Charsets|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
      global [|java:nio:charset:Charset|] @@[|java:nio:charset:Charsets.ISO_8859_1|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:nio:charset:Charset|] @@[|java:nio:charset:Charsets.US_ASCII|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:nio:charset:Charset|] @@[|java:nio:charset:Charsets.UTF_8|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:nio:charset:Charsets.<clinit>|] () @owner [|java:nio:charset:Charsets|] @signature [|Ljava/nio/charset/Charsets;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0dc9ec.   v0:= "ISO-8859-1" @type (object, string);
#L0dc9f0.   call temp:=  [|java:nio:charset:Charset.forName|](v0) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0dc9f6.   v0:= temp  @type object;
#L0dc9f8.   @@[|java:nio:charset:Charsets.ISO_8859_1|] := v0  @type object;
#L0dc9fc.   v0:= "US-ASCII" @type (object, string);
#L0dca00.   call temp:=  [|java:nio:charset:Charset.forName|](v0) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0dca06.   v0:= temp  @type object;
#L0dca08.   @@[|java:nio:charset:Charsets.US_ASCII|] := v0  @type object;
#L0dca0c.   v0:= "UTF-8" @type (object, string);
#L0dca10.   call temp:=  [|java:nio:charset:Charset.forName|](v0) @signature [|Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;|] @classDescriptor [|java:nio:charset:Charset|] @type static;
#L0dca16.   v0:= temp  @type object;
#L0dca18.   @@[|java:nio:charset:Charsets.UTF_8|] := v0  @type object;
#L0dca1c.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:Charsets.<init>|] ([|java:nio:charset:Charsets|] v0 @type (this)) @owner [|java:nio:charset:Charsets|] @signature [|Ljava/nio/charset/Charsets;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L0dca30.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0dca36.   return @void ;

   }
    procedure [|void|] [|java:nio:charset:Charsets.asciiBytesToChars|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|char|][] v3) @owner [|java:nio:charset:Charsets|] @signature [|Ljava/nio/charset/Charsets;.asciiBytesToChars:([BII[C)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:nio:charset:Charsets.isoLatin1BytesToChars|] ([|byte|][] v0, [|int|] v1, [|int|] v2, [|char|][] v3) @owner [|java:nio:charset:Charsets|] @signature [|Ljava/nio/charset/Charsets;.isoLatin1BytesToChars:([BII[C)V|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|java:nio:charset:Charsets.toAsciiBytes|] ([|char|][] v0, [|int|] v1, [|int|] v2) @owner [|java:nio:charset:Charsets|] @signature [|Ljava/nio/charset/Charsets;.toAsciiBytes:([CII)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|java:nio:charset:Charsets.toBigEndianUtf16Bytes|] ([|char|][] v7, [|int|] v8, [|int|] v9) @owner [|java:nio:charset:Charsets|] @signature [|Ljava/nio/charset/Charsets;.toBigEndianUtf16Bytes:([CII)[B|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0dca48.   v6:= v9 * 2;
#L0dca4c.   v3:= new [|byte|][v6];
#L0dca50.   v1:= v8 + v9  @type int;
#L0dca54.   v4:= 0  @length 4;
#L0dca56.   v2:= v8;
#L0dca58.   v5:= v4;
#L0dca5a.   if v2 >= v1 then goto L0dca80;
#L0dca5e.   v0:= v7[v2]  @char;
#L0dca62.   v4:= v5 + 1;
#L0dca66.   v6:= v0 ^> 8;
#L0dca6a.   v6:= (byte)v6  @type i2b;
#L0dca6c.   v3[v5]:= v6  @byte;
#L0dca70.   v5:= v4 + 1;
#L0dca74.   v6:= (byte)v0  @type i2b;
#L0dca76.   v3[v4]:= v6  @byte;
#L0dca7a.   v2:= v2 + 1;
#L0dca7e.   goto L0dca5a;
#L0dca80.   return v3  @type object;

   }
    procedure [|byte|][] [|java:nio:charset:Charsets.toIsoLatin1Bytes|] ([|char|][] v0, [|int|] v1, [|int|] v2) @owner [|java:nio:charset:Charsets|] @signature [|Ljava/nio/charset/Charsets;.toIsoLatin1Bytes:([CII)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|java:nio:charset:Charsets.toUtf8Bytes|] ([|char|][] v0, [|int|] v1, [|int|] v2) @owner [|java:nio:charset:Charsets|] @signature [|Ljava/nio/charset/Charsets;.toUtf8Bytes:([CII)[B|] @Access PUBLIC_STATIC_NATIVE {
      # return;
   }
record [|java:nio:charset:CoderMalfunctionError|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Error|] {
   }
      global [|long|] @@[|java:nio:charset:CoderMalfunctionError.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:nio:charset:CoderMalfunctionError.<init>|] ([|java:nio:charset:CoderMalfunctionError|] v0 @type (this), [|java:lang:Exception|] v1 @type (object)) @owner [|java:nio:charset:CoderMalfunctionError|] @signature [|Ljava/nio/charset/CoderMalfunctionError;.<init>:(Ljava/lang/Exception;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L0dca94.   call temp:=  [|java:lang:Error.<init>|](v0, v1) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L0dca9a.   return @void ;

   }
