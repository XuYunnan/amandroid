record [|java:sql:Statement|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:sql:Wrapper|], [|java:lang:AutoCloseable|] {
   }
      global [|int|] @@[|java:sql:Statement.CLOSE_ALL_RESULTS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Statement.CLOSE_CURRENT_RESULT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Statement.EXECUTE_FAILED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Statement.KEEP_CURRENT_RESULT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Statement.NO_GENERATED_KEYS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Statement.RETURN_GENERATED_KEYS|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Statement.SUCCESS_NO_INFO|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:sql:Statement.addBatch|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.addBatch:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.cancel|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.cancel:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.clearBatch|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.clearBatch:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.clearWarnings|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.clearWarnings:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.close|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Statement.execute|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.execute:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Statement.execute|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.execute:(Ljava/lang/String;I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Statement.execute|] ([|java:lang:String|] v0 @type (object), [|int|][] v1) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.execute:(Ljava/lang/String;[I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Statement.execute|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|][] v1 @type (object)) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.execute:(Ljava/lang/String;[Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|][] [|java:sql:Statement.executeBatch|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.executeBatch:()[I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:Statement.executeQuery|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.executeUpdate|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.executeUpdate:(Ljava/lang/String;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.executeUpdate|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.executeUpdate:(Ljava/lang/String;I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.executeUpdate|] ([|java:lang:String|] v0 @type (object), [|int|][] v1) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.executeUpdate:(Ljava/lang/String;[I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.executeUpdate|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|][] v1 @type (object)) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.executeUpdate:(Ljava/lang/String;[Ljava/lang/String;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Connection|] [|java:sql:Statement.getConnection|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getConnection:()Ljava/sql/Connection;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.getFetchDirection|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getFetchDirection:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.getFetchSize|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getFetchSize:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:Statement.getGeneratedKeys|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getGeneratedKeys:()Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.getMaxFieldSize|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getMaxFieldSize:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.getMaxRows|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getMaxRows:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Statement.getMoreResults|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getMoreResults:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Statement.getMoreResults|] ([|int|] v0) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getMoreResults:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.getQueryTimeout|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getQueryTimeout:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:Statement.getResultSet|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getResultSet:()Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.getResultSetConcurrency|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getResultSetConcurrency:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.getResultSetHoldability|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getResultSetHoldability:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.getResultSetType|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getResultSetType:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Statement.getUpdateCount|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getUpdateCount:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:SQLWarning|] [|java:sql:Statement.getWarnings|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.getWarnings:()Ljava/sql/SQLWarning;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Statement.isClosed|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.isClosed:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Statement.isPoolable|] () @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.isPoolable:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.setCursorName|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.setCursorName:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.setEscapeProcessing|] ([|boolean|] v0) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.setEscapeProcessing:(Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.setFetchDirection|] ([|int|] v0) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.setFetchDirection:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.setFetchSize|] ([|int|] v0) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.setFetchSize:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.setMaxFieldSize|] ([|int|] v0) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.setMaxFieldSize:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.setMaxRows|] ([|int|] v0) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.setMaxRows:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.setPoolable|] ([|boolean|] v0) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.setPoolable:(Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Statement.setQueryTimeout|] ([|int|] v0) @owner [|java:sql:Statement|] @signature [|Ljava/sql/Statement;.setQueryTimeout:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:PreparedStatement|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:sql:Statement|] {
   }
    procedure [|void|] [|java:sql:PreparedStatement.addBatch|] () @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.addBatch:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.clearParameters|] () @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.clearParameters:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:PreparedStatement.execute|] () @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.execute:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:PreparedStatement.executeQuery|] () @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.executeQuery:()Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:PreparedStatement.executeUpdate|] () @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.executeUpdate:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSetMetaData|] [|java:sql:PreparedStatement.getMetaData|] () @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.getMetaData:()Ljava/sql/ResultSetMetaData;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ParameterMetaData|] [|java:sql:PreparedStatement.getParameterMetaData|] () @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.getParameterMetaData:()Ljava/sql/ParameterMetaData;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setArray|] ([|int|] v0, [|java:sql:Array|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setArray:(ILjava/sql/Array;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setAsciiStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setAsciiStream:(ILjava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setAsciiStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|int|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setAsciiStream:(ILjava/io/InputStream;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setAsciiStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setAsciiStream:(ILjava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setBigDecimal|] ([|int|] v0, [|java:math:BigDecimal|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setBigDecimal:(ILjava/math/BigDecimal;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setBinaryStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setBinaryStream:(ILjava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setBinaryStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|int|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setBinaryStream:(ILjava/io/InputStream;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setBinaryStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setBinaryStream:(ILjava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setBlob|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setBlob:(ILjava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setBlob|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setBlob:(ILjava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setBlob|] ([|int|] v0, [|java:sql:Blob|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setBlob:(ILjava/sql/Blob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setBoolean|] ([|int|] v0, [|boolean|] v1) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setBoolean:(IZ)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setByte|] ([|int|] v0, [|byte|] v1) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setByte:(IB)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setBytes|] ([|int|] v0, [|byte|][] v1) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setBytes:(I[B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setCharacterStream:(ILjava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|int|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setCharacterStream:(ILjava/io/Reader;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setCharacterStream:(ILjava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setClob|] ([|int|] v0, [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setClob:(ILjava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setClob|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setClob:(ILjava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setClob|] ([|int|] v0, [|java:sql:Clob|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setClob:(ILjava/sql/Clob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setDate|] ([|int|] v0, [|java:sql:Date|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setDate:(ILjava/sql/Date;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setDate|] ([|int|] v0, [|java:sql:Date|] v1 @type (object), [|java:util:Calendar|] v2 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setDate:(ILjava/sql/Date;Ljava/util/Calendar;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setDouble|] ([|int|] v0, [|double|] v1) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setDouble:(ID)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setFloat|] ([|int|] v0, [|float|] v1) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setFloat:(IF)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setInt|] ([|int|] v0, [|int|] v1) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setInt:(II)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setLong|] ([|int|] v0, [|long|] v1) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setLong:(IJ)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setNCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setNCharacterStream:(ILjava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setNCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setNCharacterStream:(ILjava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setNClob|] ([|int|] v0, [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setNClob:(ILjava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setNClob|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setNClob:(ILjava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setNClob|] ([|int|] v0, [|java:sql:NClob|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setNClob:(ILjava/sql/NClob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setNString|] ([|int|] v0, [|java:lang:String|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setNString:(ILjava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setNull|] ([|int|] v0, [|int|] v1) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setNull:(II)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setNull|] ([|int|] v0, [|int|] v1, [|java:lang:String|] v2 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setNull:(IILjava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setObject|] ([|int|] v0, [|java:lang:Object|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setObject:(ILjava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setObject|] ([|int|] v0, [|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setObject:(ILjava/lang/Object;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setObject|] ([|int|] v0, [|java:lang:Object|] v1 @type (object), [|int|] v2, [|int|] v3) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setObject:(ILjava/lang/Object;II)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setRef|] ([|int|] v0, [|java:sql:Ref|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setRef:(ILjava/sql/Ref;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setRowId|] ([|int|] v0, [|java:sql:RowId|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setRowId:(ILjava/sql/RowId;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setSQLXML|] ([|int|] v0, [|java:sql:SQLXML|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setSQLXML:(ILjava/sql/SQLXML;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setShort|] ([|int|] v0, [|short|] v1) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setShort:(IS)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setString|] ([|int|] v0, [|java:lang:String|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setString:(ILjava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setTime|] ([|int|] v0, [|java:sql:Time|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setTime:(ILjava/sql/Time;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setTime|] ([|int|] v0, [|java:sql:Time|] v1 @type (object), [|java:util:Calendar|] v2 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setTime:(ILjava/sql/Time;Ljava/util/Calendar;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setTimestamp|] ([|int|] v0, [|java:sql:Timestamp|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setTimestamp:(ILjava/sql/Timestamp;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setTimestamp|] ([|int|] v0, [|java:sql:Timestamp|] v1 @type (object), [|java:util:Calendar|] v2 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setTimestamp:(ILjava/sql/Timestamp;Ljava/util/Calendar;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setURL|] ([|int|] v0, [|java:net:URL|] v1 @type (object)) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setURL:(ILjava/net/URL;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:PreparedStatement.setUnicodeStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|int|] v2) @owner [|java:sql:PreparedStatement|] @signature [|Ljava/sql/PreparedStatement;.setUnicodeStream:(ILjava/io/InputStream;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:CallableStatement|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:sql:PreparedStatement|] {
   }
    procedure [|java:sql:Array|] [|java:sql:CallableStatement.getArray|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getArray:(I)Ljava/sql/Array;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Array|] [|java:sql:CallableStatement.getArray|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getArray:(Ljava/lang/String;)Ljava/sql/Array;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:math:BigDecimal|] [|java:sql:CallableStatement.getBigDecimal|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getBigDecimal:(I)Ljava/math/BigDecimal;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:math:BigDecimal|] [|java:sql:CallableStatement.getBigDecimal|] ([|int|] v0, [|int|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getBigDecimal:(II)Ljava/math/BigDecimal;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:math:BigDecimal|] [|java:sql:CallableStatement.getBigDecimal|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Blob|] [|java:sql:CallableStatement.getBlob|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getBlob:(I)Ljava/sql/Blob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Blob|] [|java:sql:CallableStatement.getBlob|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getBlob:(Ljava/lang/String;)Ljava/sql/Blob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:CallableStatement.getBoolean|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getBoolean:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:CallableStatement.getBoolean|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getBoolean:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|] [|java:sql:CallableStatement.getByte|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getByte:(I)B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|] [|java:sql:CallableStatement.getByte|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getByte:(Ljava/lang/String;)B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|java:sql:CallableStatement.getBytes|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getBytes:(I)[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|java:sql:CallableStatement.getBytes|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getBytes:(Ljava/lang/String;)[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:CallableStatement.getCharacterStream|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getCharacterStream:(I)Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:CallableStatement.getCharacterStream|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getCharacterStream:(Ljava/lang/String;)Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Clob|] [|java:sql:CallableStatement.getClob|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getClob:(I)Ljava/sql/Clob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Clob|] [|java:sql:CallableStatement.getClob|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getClob:(Ljava/lang/String;)Ljava/sql/Clob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Date|] [|java:sql:CallableStatement.getDate|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getDate:(I)Ljava/sql/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Date|] [|java:sql:CallableStatement.getDate|] ([|int|] v0, [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getDate:(ILjava/util/Calendar;)Ljava/sql/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Date|] [|java:sql:CallableStatement.getDate|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getDate:(Ljava/lang/String;)Ljava/sql/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Date|] [|java:sql:CallableStatement.getDate|] ([|java:lang:String|] v0 @type (object), [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getDate:(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|double|] [|java:sql:CallableStatement.getDouble|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getDouble:(I)D|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|double|] [|java:sql:CallableStatement.getDouble|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getDouble:(Ljava/lang/String;)D|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|float|] [|java:sql:CallableStatement.getFloat|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getFloat:(I)F|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|float|] [|java:sql:CallableStatement.getFloat|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getFloat:(Ljava/lang/String;)F|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:CallableStatement.getInt|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getInt:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:CallableStatement.getInt|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getInt:(Ljava/lang/String;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:sql:CallableStatement.getLong|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getLong:(I)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:sql:CallableStatement.getLong|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getLong:(Ljava/lang/String;)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:CallableStatement.getNCharacterStream|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getNCharacterStream:(I)Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:CallableStatement.getNCharacterStream|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getNCharacterStream:(Ljava/lang/String;)Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:NClob|] [|java:sql:CallableStatement.getNClob|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getNClob:(I)Ljava/sql/NClob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:NClob|] [|java:sql:CallableStatement.getNClob|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getNClob:(Ljava/lang/String;)Ljava/sql/NClob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:CallableStatement.getNString|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getNString:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:CallableStatement.getNString|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getNString:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:CallableStatement.getObject|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getObject:(I)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:CallableStatement.getObject|] ([|int|] v0, [|java:util:Map|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getObject:(ILjava/util/Map;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:CallableStatement.getObject|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getObject:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:CallableStatement.getObject|] ([|java:lang:String|] v0 @type (object), [|java:util:Map|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getObject:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Ref|] [|java:sql:CallableStatement.getRef|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getRef:(I)Ljava/sql/Ref;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Ref|] [|java:sql:CallableStatement.getRef|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getRef:(Ljava/lang/String;)Ljava/sql/Ref;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:RowId|] [|java:sql:CallableStatement.getRowId|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getRowId:(I)Ljava/sql/RowId;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:RowId|] [|java:sql:CallableStatement.getRowId|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getRowId:(Ljava/lang/String;)Ljava/sql/RowId;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:SQLXML|] [|java:sql:CallableStatement.getSQLXML|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getSQLXML:(I)Ljava/sql/SQLXML;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:SQLXML|] [|java:sql:CallableStatement.getSQLXML|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getSQLXML:(Ljava/lang/String;)Ljava/sql/SQLXML;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|short|] [|java:sql:CallableStatement.getShort|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getShort:(I)S|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|short|] [|java:sql:CallableStatement.getShort|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getShort:(Ljava/lang/String;)S|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:CallableStatement.getString|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getString:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:CallableStatement.getString|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getString:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Time|] [|java:sql:CallableStatement.getTime|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getTime:(I)Ljava/sql/Time;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Time|] [|java:sql:CallableStatement.getTime|] ([|int|] v0, [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getTime:(ILjava/util/Calendar;)Ljava/sql/Time;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Time|] [|java:sql:CallableStatement.getTime|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getTime:(Ljava/lang/String;)Ljava/sql/Time;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Time|] [|java:sql:CallableStatement.getTime|] ([|java:lang:String|] v0 @type (object), [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getTime:(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Timestamp|] [|java:sql:CallableStatement.getTimestamp|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getTimestamp:(I)Ljava/sql/Timestamp;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Timestamp|] [|java:sql:CallableStatement.getTimestamp|] ([|int|] v0, [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getTimestamp:(ILjava/util/Calendar;)Ljava/sql/Timestamp;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Timestamp|] [|java:sql:CallableStatement.getTimestamp|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getTimestamp:(Ljava/lang/String;)Ljava/sql/Timestamp;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Timestamp|] [|java:sql:CallableStatement.getTimestamp|] ([|java:lang:String|] v0 @type (object), [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getTimestamp:(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:URL|] [|java:sql:CallableStatement.getURL|] ([|int|] v0) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getURL:(I)Ljava/net/URL;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:URL|] [|java:sql:CallableStatement.getURL|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.getURL:(Ljava/lang/String;)Ljava/net/URL;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.registerOutParameter|] ([|int|] v0, [|int|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.registerOutParameter:(II)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.registerOutParameter|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.registerOutParameter:(III)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.registerOutParameter|] ([|int|] v0, [|int|] v1, [|java:lang:String|] v2 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.registerOutParameter:(IILjava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.registerOutParameter|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.registerOutParameter:(Ljava/lang/String;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.registerOutParameter|] ([|java:lang:String|] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.registerOutParameter:(Ljava/lang/String;II)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.registerOutParameter|] ([|java:lang:String|] v0 @type (object), [|int|] v1, [|java:lang:String|] v2 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.registerOutParameter:(Ljava/lang/String;ILjava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setAsciiStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setAsciiStream:(Ljava/lang/String;Ljava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setAsciiStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|int|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setAsciiStream:(Ljava/lang/String;Ljava/io/InputStream;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setAsciiStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setAsciiStream:(Ljava/lang/String;Ljava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setBigDecimal|] ([|java:lang:String|] v0 @type (object), [|java:math:BigDecimal|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setBigDecimal:(Ljava/lang/String;Ljava/math/BigDecimal;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setBinaryStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setBinaryStream:(Ljava/lang/String;Ljava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setBinaryStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|int|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setBinaryStream:(Ljava/lang/String;Ljava/io/InputStream;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setBinaryStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setBinaryStream:(Ljava/lang/String;Ljava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setBlob|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setBlob:(Ljava/lang/String;Ljava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setBlob|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setBlob:(Ljava/lang/String;Ljava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setBlob|] ([|java:lang:String|] v0 @type (object), [|java:sql:Blob|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setBlob:(Ljava/lang/String;Ljava/sql/Blob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setBoolean|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setBoolean:(Ljava/lang/String;Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setByte|] ([|java:lang:String|] v0 @type (object), [|byte|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setByte:(Ljava/lang/String;B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setBytes|] ([|java:lang:String|] v0 @type (object), [|byte|][] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setBytes:(Ljava/lang/String;[B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setCharacterStream:(Ljava/lang/String;Ljava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|int|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setCharacterStream:(Ljava/lang/String;Ljava/io/Reader;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setCharacterStream:(Ljava/lang/String;Ljava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setClob|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setClob:(Ljava/lang/String;Ljava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setClob|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setClob:(Ljava/lang/String;Ljava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setClob|] ([|java:lang:String|] v0 @type (object), [|java:sql:Clob|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setClob:(Ljava/lang/String;Ljava/sql/Clob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setDate|] ([|java:lang:String|] v0 @type (object), [|java:sql:Date|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setDate:(Ljava/lang/String;Ljava/sql/Date;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setDate|] ([|java:lang:String|] v0 @type (object), [|java:sql:Date|] v1 @type (object), [|java:util:Calendar|] v2 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setDate:(Ljava/lang/String;Ljava/sql/Date;Ljava/util/Calendar;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setDouble|] ([|java:lang:String|] v0 @type (object), [|double|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setDouble:(Ljava/lang/String;D)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setFloat|] ([|java:lang:String|] v0 @type (object), [|float|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setFloat:(Ljava/lang/String;F)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setInt|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setInt:(Ljava/lang/String;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setLong|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setLong:(Ljava/lang/String;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setNCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setNCharacterStream:(Ljava/lang/String;Ljava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setNCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setNCharacterStream:(Ljava/lang/String;Ljava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setNClob|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setNClob:(Ljava/lang/String;Ljava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setNClob|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setNClob:(Ljava/lang/String;Ljava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setNClob|] ([|java:lang:String|] v0 @type (object), [|java:sql:NClob|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setNClob:(Ljava/lang/String;Ljava/sql/NClob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setNString|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setNString:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setNull|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setNull:(Ljava/lang/String;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setNull|] ([|java:lang:String|] v0 @type (object), [|int|] v1, [|java:lang:String|] v2 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setNull:(Ljava/lang/String;ILjava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setObject|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setObject:(Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setObject|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setObject:(Ljava/lang/String;Ljava/lang/Object;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setObject|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|] v1 @type (object), [|int|] v2, [|int|] v3) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setObject:(Ljava/lang/String;Ljava/lang/Object;II)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setRowId|] ([|java:lang:String|] v0 @type (object), [|java:sql:RowId|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setRowId:(Ljava/lang/String;Ljava/sql/RowId;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setSQLXML|] ([|java:lang:String|] v0 @type (object), [|java:sql:SQLXML|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setSQLXML:(Ljava/lang/String;Ljava/sql/SQLXML;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setShort|] ([|java:lang:String|] v0 @type (object), [|short|] v1) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setShort:(Ljava/lang/String;S)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setString|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setString:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setTime|] ([|java:lang:String|] v0 @type (object), [|java:sql:Time|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setTime:(Ljava/lang/String;Ljava/sql/Time;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setTime|] ([|java:lang:String|] v0 @type (object), [|java:sql:Time|] v1 @type (object), [|java:util:Calendar|] v2 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setTime:(Ljava/lang/String;Ljava/sql/Time;Ljava/util/Calendar;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setTimestamp|] ([|java:lang:String|] v0 @type (object), [|java:sql:Timestamp|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setTimestamp:(Ljava/lang/String;Ljava/sql/Timestamp;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setTimestamp|] ([|java:lang:String|] v0 @type (object), [|java:sql:Timestamp|] v1 @type (object), [|java:util:Calendar|] v2 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setTimestamp:(Ljava/lang/String;Ljava/sql/Timestamp;Ljava/util/Calendar;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:CallableStatement.setURL|] ([|java:lang:String|] v0 @type (object), [|java:net:URL|] v1 @type (object)) @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.setURL:(Ljava/lang/String;Ljava/net/URL;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:CallableStatement.wasNull|] () @owner [|java:sql:CallableStatement|] @signature [|Ljava/sql/CallableStatement;.wasNull:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:ClientInfoStatus|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:sql:ClientInfoStatus|][] @@[|java:sql:ClientInfoStatus.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:sql:ClientInfoStatus|] @@[|java:sql:ClientInfoStatus.REASON_UNKNOWN|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:sql:ClientInfoStatus|] @@[|java:sql:ClientInfoStatus.REASON_UNKNOWN_PROPERTY|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:sql:ClientInfoStatus|] @@[|java:sql:ClientInfoStatus.REASON_VALUE_INVALID|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:sql:ClientInfoStatus|] @@[|java:sql:ClientInfoStatus.REASON_VALUE_TRUNCATED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:sql:ClientInfoStatus.<clinit>|] () @owner [|java:sql:ClientInfoStatus|] @signature [|Ljava/sql/ClientInfoStatus;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0ecd7c.   v5:= 3  @length 4;
#L0ecd7e.   v4:= 2  @length 4;
#L0ecd80.   v3:= 1  @length 4;
#L0ecd82.   v2:= 0  @length 4;
#L0ecd84.   v0:= new [|java:sql:ClientInfoStatus|];
#L0ecd88.   v1:= "REASON_UNKNOWN" @type (object, string);
#L0ecd8c.   call temp:=  [|java:sql:ClientInfoStatus.<init>|](v0, v1, v2) @signature [|Ljava/sql/ClientInfoStatus;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:sql:ClientInfoStatus|] @type direct;
#L0ecd92.   @@[|java:sql:ClientInfoStatus.REASON_UNKNOWN|] := v0  @type object;
#L0ecd96.   v0:= new [|java:sql:ClientInfoStatus|];
#L0ecd9a.   v1:= "REASON_UNKNOWN_PROPERTY" @type (object, string);
#L0ecd9e.   call temp:=  [|java:sql:ClientInfoStatus.<init>|](v0, v1, v3) @signature [|Ljava/sql/ClientInfoStatus;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:sql:ClientInfoStatus|] @type direct;
#L0ecda4.   @@[|java:sql:ClientInfoStatus.REASON_UNKNOWN_PROPERTY|] := v0  @type object;
#L0ecda8.   v0:= new [|java:sql:ClientInfoStatus|];
#L0ecdac.   v1:= "REASON_VALUE_INVALID" @type (object, string);
#L0ecdb0.   call temp:=  [|java:sql:ClientInfoStatus.<init>|](v0, v1, v4) @signature [|Ljava/sql/ClientInfoStatus;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:sql:ClientInfoStatus|] @type direct;
#L0ecdb6.   @@[|java:sql:ClientInfoStatus.REASON_VALUE_INVALID|] := v0  @type object;
#L0ecdba.   v0:= new [|java:sql:ClientInfoStatus|];
#L0ecdbe.   v1:= "REASON_VALUE_TRUNCATED" @type (object, string);
#L0ecdc2.   call temp:=  [|java:sql:ClientInfoStatus.<init>|](v0, v1, v5) @signature [|Ljava/sql/ClientInfoStatus;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:sql:ClientInfoStatus|] @type direct;
#L0ecdc8.   @@[|java:sql:ClientInfoStatus.REASON_VALUE_TRUNCATED|] := v0  @type object;
#L0ecdcc.   v0:= 4  @length 4;
#L0ecdce.   v0:= new [|java:sql:ClientInfoStatus|][v0];
#L0ecdd2.   v1:= @@[|java:sql:ClientInfoStatus.REASON_UNKNOWN|]   @type object;
#L0ecdd6.   v0[v2]:= v1  @type object;
#L0ecdda.   v1:= @@[|java:sql:ClientInfoStatus.REASON_UNKNOWN_PROPERTY|]   @type object;
#L0ecdde.   v0[v3]:= v1  @type object;
#L0ecde2.   v1:= @@[|java:sql:ClientInfoStatus.REASON_VALUE_INVALID|]   @type object;
#L0ecde6.   v0[v4]:= v1  @type object;
#L0ecdea.   v1:= @@[|java:sql:ClientInfoStatus.REASON_VALUE_TRUNCATED|]   @type object;
#L0ecdee.   v0[v5]:= v1  @type object;
#L0ecdf2.   @@[|java:sql:ClientInfoStatus.$VALUES|] := v0  @type object;
#L0ecdf6.   return @void ;

   }
    procedure [|void|] [|java:sql:ClientInfoStatus.<init>|] ([|java:sql:ClientInfoStatus|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:sql:ClientInfoStatus|] @signature [|Ljava/sql/ClientInfoStatus;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;

      
#L0ece08.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0ece0e.   return @void ;

   }
    procedure [|java:sql:ClientInfoStatus|] [|java:sql:ClientInfoStatus.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:sql:ClientInfoStatus|] @signature [|Ljava/sql/ClientInfoStatus;.valueOf:(Ljava/lang/String;)Ljava/sql/ClientInfoStatus;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L0ece20.   v0:= new [|java:sql:ClientInfoStatus|];
#L0ece24.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0ece2a.   v0:= temp  @type object;
#L0ece2c.   v0:= ([|java:sql:ClientInfoStatus|])v0;
#L0ece30.   return v0  @type object;

   }
    procedure [|java:sql:ClientInfoStatus|][] [|java:sql:ClientInfoStatus.values|] () @owner [|java:sql:ClientInfoStatus|] @signature [|Ljava/sql/ClientInfoStatus;.values:()[Ljava/sql/ClientInfoStatus;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ece44.   v0:= @@[|java:sql:ClientInfoStatus.$VALUES|]   @type object;
#L0ece48.   call temp:=  [|java:sql:ClientInfoStatus[].clone|](v0) @signature [|[Ljava/sql/ClientInfoStatus;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:sql:ClientInfoStatus[]|] @type virtual;
#L0ece4e.   v0:= temp  @type object;
#L0ece50.   v0:= ([|java:sql:ClientInfoStatus|][])v0;
#L0ece54.   return v0  @type object;

   }
record [|java:sql:Clob|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:sql:Clob.free|] () @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.free:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:Clob.getAsciiStream|] () @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.getAsciiStream:()Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:Clob.getCharacterStream|] () @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.getCharacterStream:()Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:Clob.getCharacterStream|] ([|long|] v0, [|long|] v2) @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.getCharacterStream:(JJ)Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:Clob.getSubString|] ([|long|] v0, [|int|] v2) @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.getSubString:(JI)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:sql:Clob.length|] () @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.length:()J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:sql:Clob.position|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.position:(Ljava/lang/String;J)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:sql:Clob.position|] ([|java:sql:Clob|] v0 @type (object), [|long|] v1) @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.position:(Ljava/sql/Clob;J)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:OutputStream|] [|java:sql:Clob.setAsciiStream|] ([|long|] v0) @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.setAsciiStream:(J)Ljava/io/OutputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Writer|] [|java:sql:Clob.setCharacterStream|] ([|long|] v0) @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.setCharacterStream:(J)Ljava/io/Writer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Clob.setString|] ([|long|] v0, [|java:lang:String|] v2 @type (object)) @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.setString:(JLjava/lang/String;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Clob.setString|] ([|long|] v0, [|java:lang:String|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.setString:(JLjava/lang/String;II)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Clob.truncate|] ([|long|] v0) @owner [|java:sql:Clob|] @signature [|Ljava/sql/Clob;.truncate:(J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:Connection|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:sql:Wrapper|], [|java:lang:AutoCloseable|] {
   }
      global [|int|] @@[|java:sql:Connection.TRANSACTION_NONE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Connection.TRANSACTION_READ_COMMITTED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Connection.TRANSACTION_READ_UNCOMMITTED|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Connection.TRANSACTION_REPEATABLE_READ|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Connection.TRANSACTION_SERIALIZABLE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:sql:Connection.clearWarnings|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.clearWarnings:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.close|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.commit|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.commit:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Array|] [|java:sql:Connection.createArrayOf|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|][] v1 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.createArrayOf:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Array;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Blob|] [|java:sql:Connection.createBlob|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.createBlob:()Ljava/sql/Blob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Clob|] [|java:sql:Connection.createClob|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.createClob:()Ljava/sql/Clob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:NClob|] [|java:sql:Connection.createNClob|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.createNClob:()Ljava/sql/NClob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:SQLXML|] [|java:sql:Connection.createSQLXML|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.createSQLXML:()Ljava/sql/SQLXML;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Statement|] [|java:sql:Connection.createStatement|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.createStatement:()Ljava/sql/Statement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Statement|] [|java:sql:Connection.createStatement|] ([|int|] v0, [|int|] v1) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.createStatement:(II)Ljava/sql/Statement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Statement|] [|java:sql:Connection.createStatement|] ([|int|] v0, [|int|] v1, [|int|] v2) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.createStatement:(III)Ljava/sql/Statement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Struct|] [|java:sql:Connection.createStruct|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|][] v1 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.createStruct:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/sql/Struct;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Connection.getAutoCommit|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.getAutoCommit:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:Connection.getCatalog|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.getCatalog:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:Connection.getClientInfo|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.getClientInfo:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Properties|] [|java:sql:Connection.getClientInfo|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.getClientInfo:()Ljava/util/Properties;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Connection.getHoldability|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.getHoldability:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:DatabaseMetaData|] [|java:sql:Connection.getMetaData|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.getMetaData:()Ljava/sql/DatabaseMetaData;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Connection.getTransactionIsolation|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.getTransactionIsolation:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Map|] [|java:sql:Connection.getTypeMap|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.getTypeMap:()Ljava/util/Map;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:SQLWarning|] [|java:sql:Connection.getWarnings|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.getWarnings:()Ljava/sql/SQLWarning;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Connection.isClosed|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.isClosed:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Connection.isReadOnly|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.isReadOnly:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Connection.isValid|] ([|int|] v0) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.isValid:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:Connection.nativeSQL|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.nativeSQL:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:CallableStatement|] [|java:sql:Connection.prepareCall|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.prepareCall:(Ljava/lang/String;)Ljava/sql/CallableStatement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:CallableStatement|] [|java:sql:Connection.prepareCall|] ([|java:lang:String|] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.prepareCall:(Ljava/lang/String;II)Ljava/sql/CallableStatement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:CallableStatement|] [|java:sql:Connection.prepareCall|] ([|java:lang:String|] v0 @type (object), [|int|] v1, [|int|] v2, [|int|] v3) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.prepareCall:(Ljava/lang/String;III)Ljava/sql/CallableStatement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:PreparedStatement|] [|java:sql:Connection.prepareStatement|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:PreparedStatement|] [|java:sql:Connection.prepareStatement|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.prepareStatement:(Ljava/lang/String;I)Ljava/sql/PreparedStatement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:PreparedStatement|] [|java:sql:Connection.prepareStatement|] ([|java:lang:String|] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.prepareStatement:(Ljava/lang/String;II)Ljava/sql/PreparedStatement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:PreparedStatement|] [|java:sql:Connection.prepareStatement|] ([|java:lang:String|] v0 @type (object), [|int|] v1, [|int|] v2, [|int|] v3) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.prepareStatement:(Ljava/lang/String;III)Ljava/sql/PreparedStatement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:PreparedStatement|] [|java:sql:Connection.prepareStatement|] ([|java:lang:String|] v0 @type (object), [|int|][] v1) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.prepareStatement:(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:PreparedStatement|] [|java:sql:Connection.prepareStatement|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|][] v1 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.prepareStatement:(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.releaseSavepoint|] ([|java:sql:Savepoint|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.releaseSavepoint:(Ljava/sql/Savepoint;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.rollback|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.rollback:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.rollback|] ([|java:sql:Savepoint|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.rollback:(Ljava/sql/Savepoint;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.setAutoCommit|] ([|boolean|] v0) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setAutoCommit:(Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.setCatalog|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setCatalog:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.setClientInfo|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setClientInfo:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.setClientInfo|] ([|java:util:Properties|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setClientInfo:(Ljava/util/Properties;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.setHoldability|] ([|int|] v0) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setHoldability:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.setReadOnly|] ([|boolean|] v0) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setReadOnly:(Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Savepoint|] [|java:sql:Connection.setSavepoint|] () @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setSavepoint:()Ljava/sql/Savepoint;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Savepoint|] [|java:sql:Connection.setSavepoint|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setSavepoint:(Ljava/lang/String;)Ljava/sql/Savepoint;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.setTransactionIsolation|] ([|int|] v0) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setTransactionIsolation:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Connection.setTypeMap|] ([|java:util:Map|] v0 @type (object)) @owner [|java:sql:Connection|] @signature [|Ljava/sql/Connection;.setTypeMap:(Ljava/util/Map;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:SQLWarning|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLException|], [|java:io:Serializable|] {
   }
      global [|long|] @@[|java:sql:SQLWarning.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLWarning.<init>|] ([|java:sql:SQLWarning|] v0 @type (this)) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0ece68.   call temp:=  [|java:sql:SQLException.<init>|](v0) @signature [|Ljava/sql/SQLException;.<init>:()V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ece6e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLWarning.<init>|] ([|java:sql:SQLWarning|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ece80.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ece86.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLWarning.<init>|] ([|java:sql:SQLWarning|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0ece98.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ece9e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLWarning.<init>|] ([|java:sql:SQLWarning|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eceb0.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eceb6.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLWarning.<init>|] ([|java:sql:SQLWarning|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0ecec8.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ecece.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLWarning.<init>|] ([|java:sql:SQLWarning|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ecee0.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ecee6.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLWarning.<init>|] ([|java:sql:SQLWarning|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0ecef8.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ecefe.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLWarning.<init>|] ([|java:sql:SQLWarning|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ecf10.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ecf16.   return @void ;

   }
    procedure [|java:sql:SQLWarning|] [|java:sql:SQLWarning.getNextWarning|] ([|java:sql:SQLWarning|] v3 @type (this)) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.getNextWarning:()Ljava/sql/SQLWarning;|] @Access PUBLIC {
      local temp ;
        [|java:sql:SQLException|] v0 @varname [|next|] @scope ((L0004,L0007), (L0008,L0017));

        v1;
        v2;
      
#L0ecf28.   call temp:=  [|java:sql:SQLException.getNextException|](v3) @signature [|Ljava/sql/SQLException;.getNextException:()Ljava/sql/SQLException;|] @classDescriptor [|java:sql:SQLException|] @type super;
#L0ecf2e.   v0:= temp  @type object;
#L0ecf30.   if v0 != 0 then goto L0ecf38;
#L0ecf34.   v0:= 0  @length 4;
#L0ecf36.   return v0  @type object;
#L0ecf38.   v1:= instanceof @varname v0 @type [|java:sql:SQLWarning|];
#L0ecf3c.   if v1 == 0 then goto L0ecf46;
#L0ecf40.   v0:= ([|java:sql:SQLWarning|])v0;
#L0ecf44.   goto L0ecf36;
#L0ecf46.   v1:= new [|java:lang:Error|];
#L0ecf4a.   v2:= "SQLWarning chain holds value that is not a SQLWarning" @type (object, string);
#L0ecf4e.   call temp:=  [|java:lang:Error.<init>|](v1, v2) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L0ecf54.   throw v1;

   }
    procedure [|void|] [|java:sql:SQLWarning.setNextWarning|] ([|java:sql:SQLWarning|] v0 @type (this), [|java:sql:SQLWarning|] v1 @type (object)) @owner [|java:sql:SQLWarning|] @signature [|Ljava/sql/SQLWarning;.setNextWarning:(Ljava/sql/SQLWarning;)V|] @Access PUBLIC {
      local temp ;


      
#L0ecf68.   call temp:=  [|java:sql:SQLException.setNextException|](v0, v1) @signature [|Ljava/sql/SQLException;.setNextException:(Ljava/sql/SQLException;)V|] @classDescriptor [|java:sql:SQLException|] @type super;
#L0ecf6e.   return @void ;

   }
record [|java:sql:DataTruncation|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLWarning|], [|java:io:Serializable|] {
      [|int|] [|java:sql:DataTruncation.dataSize|]    @AccessFlag PRIVATE;
      [|int|] [|java:sql:DataTruncation.index|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:sql:DataTruncation.parameter|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:sql:DataTruncation.read|]    @AccessFlag PRIVATE;
      [|int|] [|java:sql:DataTruncation.transferSize|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:sql:DataTruncation.THE_ERROR_CODE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:sql:DataTruncation.THE_REASON|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:sql:DataTruncation.THE_SQLSTATE_READ|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:sql:DataTruncation.THE_SQLSTATE_WRITE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:sql:DataTruncation.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:DataTruncation.<init>|] ([|java:sql:DataTruncation|] v3 @type (this), [|int|] v4, [|boolean|] v5, [|boolean|] v6, [|int|] v7, [|int|] v8) @owner [|java:sql:DataTruncation|] @signature [|Ljava/sql/DataTruncation;.<init>:(IZZII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;






        v0;
        v1;
        v2;
      
#L0ecf80.   v2:= 0  @length 4;
#L0ecf82.   v0:= "Data truncation" @type (object, string);
#L0ecf86.   v1:= "01004" @type (object, string);
#L0ecf8a.   call temp:=  [|java:sql:SQLWarning.<init>|](v3, v0, v1, v2) @signature [|Ljava/sql/SQLWarning;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLWarning|] @type direct;
#L0ecf90.   v3.[|java:sql:DataTruncation.index|]  := v2;
#L0ecf94.   v3.[|java:sql:DataTruncation.parameter|]  := v2 @boolean;
#L0ecf98.   v3.[|java:sql:DataTruncation.read|]  := v2 @boolean;
#L0ecf9c.   v3.[|java:sql:DataTruncation.dataSize|]  := v2;
#L0ecfa0.   v3.[|java:sql:DataTruncation.transferSize|]  := v2;
#L0ecfa4.   v3.[|java:sql:DataTruncation.index|]  := v4;
#L0ecfa8.   v3.[|java:sql:DataTruncation.parameter|]  := v5 @boolean;
#L0ecfac.   v3.[|java:sql:DataTruncation.read|]  := v6 @boolean;
#L0ecfb0.   v3.[|java:sql:DataTruncation.dataSize|]  := v7;
#L0ecfb4.   v3.[|java:sql:DataTruncation.transferSize|]  := v8;
#L0ecfb8.   return @void ;

   }
    procedure [|void|] [|java:sql:DataTruncation.<init>|] ([|java:sql:DataTruncation|] v3 @type (this), [|int|] v4, [|boolean|] v5, [|boolean|] v6, [|int|] v7, [|int|] v8, [|java:lang:Throwable|] v9 @type (object)) @owner [|java:sql:DataTruncation|] @signature [|Ljava/sql/DataTruncation;.<init>:(IZZIILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;







        v0;
        v1;
        v2;
      
#L0ecfcc.   v2:= 0  @length 4;
#L0ecfce.   v1:= "Data truncation" @type (object, string);
#L0ecfd2.   if v6 == 0 then goto L0ed00a;
#L0ecfd6.   v0:= "01004" @type (object, string);
#L0ecfda.   call temp:=  [|java:sql:SQLWarning.<init>|](v3, v1, v0, v2, v9) @signature [|Ljava/sql/SQLWarning;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLWarning|] @type direct;
#L0ecfe0.   v3.[|java:sql:DataTruncation.index|]  := v2;
#L0ecfe4.   v3.[|java:sql:DataTruncation.parameter|]  := v2 @boolean;
#L0ecfe8.   v3.[|java:sql:DataTruncation.read|]  := v2 @boolean;
#L0ecfec.   v3.[|java:sql:DataTruncation.dataSize|]  := v2;
#L0ecff0.   v3.[|java:sql:DataTruncation.transferSize|]  := v2;
#L0ecff4.   v3.[|java:sql:DataTruncation.index|]  := v4;
#L0ecff8.   v3.[|java:sql:DataTruncation.parameter|]  := v5 @boolean;
#L0ecffc.   v3.[|java:sql:DataTruncation.read|]  := v6 @boolean;
#L0ed000.   v3.[|java:sql:DataTruncation.dataSize|]  := v7;
#L0ed004.   v3.[|java:sql:DataTruncation.transferSize|]  := v8;
#L0ed008.   return @void ;
#L0ed00a.   v0:= "22001" @type (object, string);
#L0ed00e.   goto L0ecfda;

   }
    procedure [|int|] [|java:sql:DataTruncation.getDataSize|] ([|java:sql:DataTruncation|] v1 @type (this)) @owner [|java:sql:DataTruncation|] @signature [|Ljava/sql/DataTruncation;.getDataSize:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ed020.   v0:= v1.[|java:sql:DataTruncation.dataSize|] ;
#L0ed024.   return v0;

   }
    procedure [|int|] [|java:sql:DataTruncation.getIndex|] ([|java:sql:DataTruncation|] v1 @type (this)) @owner [|java:sql:DataTruncation|] @signature [|Ljava/sql/DataTruncation;.getIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ed038.   v0:= v1.[|java:sql:DataTruncation.index|] ;
#L0ed03c.   return v0;

   }
    procedure [|boolean|] [|java:sql:DataTruncation.getParameter|] ([|java:sql:DataTruncation|] v1 @type (this)) @owner [|java:sql:DataTruncation|] @signature [|Ljava/sql/DataTruncation;.getParameter:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ed050.   v0:= v1.[|java:sql:DataTruncation.parameter|]   @boolean;
#L0ed054.   return v0;

   }
    procedure [|boolean|] [|java:sql:DataTruncation.getRead|] ([|java:sql:DataTruncation|] v1 @type (this)) @owner [|java:sql:DataTruncation|] @signature [|Ljava/sql/DataTruncation;.getRead:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ed068.   v0:= v1.[|java:sql:DataTruncation.read|]   @boolean;
#L0ed06c.   return v0;

   }
    procedure [|int|] [|java:sql:DataTruncation.getTransferSize|] ([|java:sql:DataTruncation|] v1 @type (this)) @owner [|java:sql:DataTruncation|] @signature [|Ljava/sql/DataTruncation;.getTransferSize:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ed080.   v0:= v1.[|java:sql:DataTruncation.transferSize|] ;
#L0ed084.   return v0;

   }
record [|java:sql:DatabaseMetaData|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:sql:Wrapper|] {
   }
      global [|short|] @@[|java:sql:DatabaseMetaData.attributeNoNulls|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|short|] @@[|java:sql:DatabaseMetaData.attributeNullable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|short|] @@[|java:sql:DatabaseMetaData.attributeNullableUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.bestRowNotPseudo|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.bestRowPseudo|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.bestRowSession|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.bestRowTemporary|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.bestRowTransaction|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.bestRowUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.columnNoNulls|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.columnNullable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.columnNullableUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionColumnIn|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionColumnInOut|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionColumnOut|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionColumnResult|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionColumnUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionNoNulls|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionNoTable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionNullable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionNullableUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionResultUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionReturn|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.functionReturnsTable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.importedKeyCascade|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.importedKeyInitiallyDeferred|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.importedKeyInitiallyImmediate|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.importedKeyNoAction|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.importedKeyNotDeferrable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.importedKeyRestrict|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.importedKeySetDefault|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.importedKeySetNull|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureColumnIn|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureColumnInOut|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureColumnOut|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureColumnResult|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureColumnReturn|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureColumnUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureNoNulls|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureNoResult|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureNullable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureNullableUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureResultUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.procedureReturnsResult|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.sqlStateSQL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.sqlStateSQL99|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.sqlStateXOpen|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|short|] @@[|java:sql:DatabaseMetaData.tableIndexClustered|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|short|] @@[|java:sql:DatabaseMetaData.tableIndexHashed|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|short|] @@[|java:sql:DatabaseMetaData.tableIndexOther|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|short|] @@[|java:sql:DatabaseMetaData.tableIndexStatistic|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.typeNoNulls|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.typeNullable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.typeNullableUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.typePredBasic|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.typePredChar|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.typePredNone|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.typeSearchable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.versionColumnNotPseudo|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.versionColumnPseudo|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:DatabaseMetaData.versionColumnUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|boolean|] [|java:sql:DatabaseMetaData.allProceduresAreCallable|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.allProceduresAreCallable:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.allTablesAreSelectable|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.allTablesAreSelectable:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.autoCommitFailureClosesAllResultSets|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.autoCommitFailureClosesAllResultSets:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.dataDefinitionCausesTransactionCommit|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.dataDefinitionCausesTransactionCommit:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.dataDefinitionIgnoredInTransactions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.dataDefinitionIgnoredInTransactions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.deletesAreDetected|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.deletesAreDetected:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.doesMaxRowSizeIncludeBlobs|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.doesMaxRowSizeIncludeBlobs:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getAttributes|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getAttributes:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getBestRowIdentifier|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|boolean|] v4) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getBestRowIdentifier:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getCatalogSeparator|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getCatalogSeparator:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getCatalogTerm|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getCatalogTerm:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getCatalogs|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getCatalogs:()Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getClientInfoProperties|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getClientInfoProperties:()Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getColumnPrivileges|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getColumnPrivileges:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getColumns|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getColumns:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Connection|] [|java:sql:DatabaseMetaData.getConnection|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getConnection:()Ljava/sql/Connection;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getCrossReference|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object), [|java:lang:String|] v5 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getCrossReference:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getDatabaseMajorVersion|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getDatabaseMajorVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getDatabaseMinorVersion|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getDatabaseMinorVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getDatabaseProductName|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getDatabaseProductName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getDatabaseProductVersion|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getDatabaseProductVersion:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getDefaultTransactionIsolation|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getDefaultTransactionIsolation:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getDriverMajorVersion|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getDriverMajorVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getDriverMinorVersion|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getDriverMinorVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getDriverName|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getDriverName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getDriverVersion|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getDriverVersion:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getExportedKeys|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getExportedKeys:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getExtraNameCharacters|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getExtraNameCharacters:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getFunctionColumns|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getFunctionColumns:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getFunctions|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getFunctions:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getIdentifierQuoteString|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getIdentifierQuoteString:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getImportedKeys|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getImportedKeys:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getIndexInfo|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|boolean|] v3, [|boolean|] v4) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getIndexInfo:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getJDBCMajorVersion|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getJDBCMajorVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getJDBCMinorVersion|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getJDBCMinorVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxBinaryLiteralLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxBinaryLiteralLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxCatalogNameLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxCatalogNameLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxCharLiteralLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxCharLiteralLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxColumnNameLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxColumnNameLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxColumnsInGroupBy|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxColumnsInGroupBy:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxColumnsInIndex|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxColumnsInIndex:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxColumnsInOrderBy|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxColumnsInOrderBy:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxColumnsInSelect|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxColumnsInSelect:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxColumnsInTable|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxColumnsInTable:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxConnections|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxConnections:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxCursorNameLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxCursorNameLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxIndexLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxIndexLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxProcedureNameLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxProcedureNameLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxRowSize|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxRowSize:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxSchemaNameLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxSchemaNameLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxStatementLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxStatementLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxStatements|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxStatements:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxTableNameLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxTableNameLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxTablesInSelect|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxTablesInSelect:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getMaxUserNameLength|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getMaxUserNameLength:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getNumericFunctions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getNumericFunctions:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getPrimaryKeys|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getPrimaryKeys:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getProcedureColumns|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getProcedureColumns:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getProcedureTerm|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getProcedureTerm:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getProcedures|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getProcedures:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getResultSetHoldability|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getResultSetHoldability:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:RowIdLifetime|] [|java:sql:DatabaseMetaData.getRowIdLifetime|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getRowIdLifetime:()Ljava/sql/RowIdLifetime;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getSQLKeywords|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getSQLKeywords:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:DatabaseMetaData.getSQLStateType|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getSQLStateType:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getSchemaTerm|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getSchemaTerm:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getSchemas|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getSchemas:()Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getSchemas|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getSchemas:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getSearchStringEscape|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getSearchStringEscape:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getStringFunctions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getStringFunctions:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getSuperTables|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getSuperTables:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getSuperTypes|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getSuperTypes:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getSystemFunctions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getSystemFunctions:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getTablePrivileges|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getTablePrivileges:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getTableTypes|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getTableTypes:()Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getTables|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:String|][] v3 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getTables:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getTimeDateFunctions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getTimeDateFunctions:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getTypeInfo|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getTypeInfo:()Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getUDTs|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|][] v3) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getUDTs:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[I)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getURL|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getURL:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:DatabaseMetaData.getUserName|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getUserName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSet|] [|java:sql:DatabaseMetaData.getVersionColumns|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.getVersionColumns:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.insertsAreDetected|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.insertsAreDetected:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.isCatalogAtStart|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.isCatalogAtStart:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.isReadOnly|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.isReadOnly:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.locatorsUpdateCopy|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.locatorsUpdateCopy:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.nullPlusNonNullIsNull|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.nullPlusNonNullIsNull:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.nullsAreSortedAtEnd|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.nullsAreSortedAtEnd:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.nullsAreSortedAtStart|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.nullsAreSortedAtStart:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.nullsAreSortedHigh|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.nullsAreSortedHigh:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.nullsAreSortedLow|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.nullsAreSortedLow:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.othersDeletesAreVisible|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.othersDeletesAreVisible:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.othersInsertsAreVisible|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.othersInsertsAreVisible:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.othersUpdatesAreVisible|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.othersUpdatesAreVisible:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.ownDeletesAreVisible|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.ownDeletesAreVisible:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.ownInsertsAreVisible|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.ownInsertsAreVisible:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.ownUpdatesAreVisible|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.ownUpdatesAreVisible:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.storesLowerCaseIdentifiers|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.storesLowerCaseIdentifiers:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.storesLowerCaseQuotedIdentifiers|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.storesLowerCaseQuotedIdentifiers:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.storesMixedCaseIdentifiers|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.storesMixedCaseIdentifiers:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.storesMixedCaseQuotedIdentifiers|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.storesMixedCaseQuotedIdentifiers:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.storesUpperCaseIdentifiers|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.storesUpperCaseIdentifiers:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.storesUpperCaseQuotedIdentifiers|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.storesUpperCaseQuotedIdentifiers:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsANSI92EntryLevelSQL|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsANSI92EntryLevelSQL:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsANSI92FullSQL|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsANSI92FullSQL:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsANSI92IntermediateSQL|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsANSI92IntermediateSQL:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsAlterTableWithAddColumn|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsAlterTableWithAddColumn:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsAlterTableWithDropColumn|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsAlterTableWithDropColumn:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsBatchUpdates|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsBatchUpdates:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsCatalogsInDataManipulation|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsCatalogsInDataManipulation:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsCatalogsInIndexDefinitions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsCatalogsInIndexDefinitions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsCatalogsInPrivilegeDefinitions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsCatalogsInPrivilegeDefinitions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsCatalogsInProcedureCalls|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsCatalogsInProcedureCalls:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsCatalogsInTableDefinitions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsCatalogsInTableDefinitions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsColumnAliasing|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsColumnAliasing:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsConvert|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsConvert:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsConvert|] ([|int|] v0, [|int|] v1) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsConvert:(II)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsCoreSQLGrammar|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsCoreSQLGrammar:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsCorrelatedSubqueries|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsCorrelatedSubqueries:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsDataDefinitionAndDataManipulationTransactions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsDataManipulationTransactionsOnly|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsDataManipulationTransactionsOnly:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsDifferentTableCorrelationNames|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsDifferentTableCorrelationNames:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsExpressionsInOrderBy|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsExpressionsInOrderBy:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsExtendedSQLGrammar|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsExtendedSQLGrammar:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsFullOuterJoins|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsFullOuterJoins:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsGetGeneratedKeys|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsGetGeneratedKeys:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsGroupBy|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsGroupBy:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsGroupByBeyondSelect|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsGroupByBeyondSelect:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsGroupByUnrelated|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsGroupByUnrelated:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsIntegrityEnhancementFacility|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsIntegrityEnhancementFacility:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsLikeEscapeClause|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsLikeEscapeClause:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsLimitedOuterJoins|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsLimitedOuterJoins:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsMinimumSQLGrammar|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsMinimumSQLGrammar:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsMixedCaseIdentifiers|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsMixedCaseIdentifiers:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsMixedCaseQuotedIdentifiers|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsMixedCaseQuotedIdentifiers:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsMultipleOpenResults|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsMultipleOpenResults:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsMultipleResultSets|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsMultipleResultSets:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsMultipleTransactions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsMultipleTransactions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsNamedParameters|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsNamedParameters:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsNonNullableColumns|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsNonNullableColumns:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsOpenCursorsAcrossCommit|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsOpenCursorsAcrossCommit:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsOpenCursorsAcrossRollback|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsOpenCursorsAcrossRollback:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsOpenStatementsAcrossCommit|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsOpenStatementsAcrossCommit:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsOpenStatementsAcrossRollback|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsOpenStatementsAcrossRollback:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsOrderByUnrelated|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsOrderByUnrelated:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsOuterJoins|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsOuterJoins:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsPositionedDelete|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsPositionedDelete:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsPositionedUpdate|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsPositionedUpdate:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsResultSetConcurrency|] ([|int|] v0, [|int|] v1) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsResultSetConcurrency:(II)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsResultSetHoldability|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsResultSetHoldability:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsResultSetType|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsResultSetType:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSavepoints|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSavepoints:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSchemasInDataManipulation|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSchemasInDataManipulation:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSchemasInIndexDefinitions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSchemasInIndexDefinitions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSchemasInPrivilegeDefinitions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSchemasInPrivilegeDefinitions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSchemasInProcedureCalls|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSchemasInProcedureCalls:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSchemasInTableDefinitions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSchemasInTableDefinitions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSelectForUpdate|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSelectForUpdate:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsStatementPooling|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsStatementPooling:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsStoredFunctionsUsingCallSyntax|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsStoredFunctionsUsingCallSyntax:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsStoredProcedures|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsStoredProcedures:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSubqueriesInComparisons|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSubqueriesInComparisons:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSubqueriesInExists|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSubqueriesInExists:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSubqueriesInIns|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSubqueriesInIns:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsSubqueriesInQuantifieds|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsSubqueriesInQuantifieds:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsTableCorrelationNames|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsTableCorrelationNames:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsTransactionIsolationLevel|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsTransactionIsolationLevel:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsTransactions|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsTransactions:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsUnion|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsUnion:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.supportsUnionAll|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.supportsUnionAll:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.updatesAreDetected|] ([|int|] v0) @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.updatesAreDetected:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.usesLocalFilePerTable|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.usesLocalFilePerTable:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:DatabaseMetaData.usesLocalFiles|] () @owner [|java:sql:DatabaseMetaData|] @signature [|Ljava/sql/DatabaseMetaData;.usesLocalFiles:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:Date|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|], [|java:lang:Cloneable|], [|java:lang:Comparable|] {
      [|long|] [|java:util:Date.milliseconds|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|int|] @@[|java:util:Date.CREATION_YEAR|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:Date.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:Date.<clinit>|] () @owner [|java:util:Date|] @signature [|Ljava/util/Date;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L0ed098.   v0:= new [|java:util:Date|];
#L0ed09c.   call temp:=  [|java:util:Date.<init>|](v0) @signature [|Ljava/util/Date;.<init>:()V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ed0a2.   call temp:=  [|java:util:Date.getYear|](v0) @signature [|Ljava/util/Date;.getYear:()I|] @classDescriptor [|java:util:Date|] @type virtual;
#L0ed0a8.   v0:= temp;
#L0ed0aa.   @@[|java:util:Date.CREATION_YEAR|] := v0;
#L0ed0ae.   return @void ;

   }
    procedure [|void|] [|java:util:Date.<init>|] ([|java:util:Date|] v2 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        v0;
        v1;
      
#L0ed0c0.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L0ed0c6.   v0:= temp  @type wide;
#L0ed0c8.   call temp:=  [|java:util:Date.<init>|](v2, v0, v1) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ed0ce.   return @void ;

   }
    procedure [|void|] [|java:util:Date.<init>|] ([|java:util:Date|] v3 @type (this), [|int|] v4, [|int|] v5, [|int|] v6) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.<init>:(III)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0009,L0015));




        v1;
        v2;
      
#L0ed0e0.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ed0e6.   v0:= new [|java:util:GregorianCalendar|];
#L0ed0ea.   v1:= 0  @length 4;
#L0ed0ec.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.<init>:(Z)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0ed0f2.   v1:= v4 + 1900;
#L0ed0f6.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v5, v6) @signature [|Ljava/util/GregorianCalendar;.set:(III)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ed0fc.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ed102.   v1:= temp  @type wide;
#L0ed104.   v3.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0ed108.   return @void ;

   }
    procedure [|void|] [|java:util:Date.<init>|] ([|java:util:Date|] v6 @type (this), [|int|] v7, [|int|] v8, [|int|] v9, [|int|] v10, [|int|] v11) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.<init>:(IIIII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0009,L0019));






        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0ed11c.   call temp:=  [|java:lang:Object.<init>|](v6) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ed122.   v0:= new [|java:util:GregorianCalendar|];
#L0ed126.   v1:= 0  @length 4;
#L0ed128.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.<init>:(Z)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0ed12e.   v1:= v7 + 1900;
#L0ed132.   v2:= v8;
#L0ed134.   v3:= v9;
#L0ed136.   v4:= v10;
#L0ed138.   v5:= v11;
#L0ed13a.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/GregorianCalendar;.set:(IIIII)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ed140.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ed146.   v1:= temp  @type wide;
#L0ed148.   v6.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0ed14c.   return @void ;

   }
    procedure [|void|] [|java:util:Date.<init>|] ([|java:util:Date|] v7 @type (this), [|int|] v8, [|int|] v9, [|int|] v10, [|int|] v11, [|int|] v12, [|int|] v13) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.<init>:(IIIIII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0009,L001a));







        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ed160.   call temp:=  [|java:lang:Object.<init>|](v7) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ed166.   v0:= new [|java:util:GregorianCalendar|];
#L0ed16a.   v1:= 0  @length 4;
#L0ed16c.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.<init>:(Z)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0ed172.   v1:= v8 + 1900;
#L0ed176.   v2:= v9;
#L0ed178.   v3:= v10;
#L0ed17a.   v4:= v11;
#L0ed17c.   v5:= v12;
#L0ed17e.   v6:= v13;
#L0ed180.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/GregorianCalendar;.set:(IIIIII)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ed186.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ed18c.   v1:= temp  @type wide;
#L0ed18e.   v7.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0ed192.   return @void ;

   }
    procedure [|void|] [|java:util:Date.<init>|] ([|java:util:Date|] v0 @type (this), [|long|] v1) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.<init>:(J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ed1a4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ed1aa.   v0.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0ed1ae.   return @void ;

   }
    procedure [|void|] [|java:util:Date.<init>|] ([|java:util:Date|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0ed1c0.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ed1c6.   call temp:=  [|java:util:Date.parse|](v3) @signature [|Ljava/util/Date;.parse:(Ljava/lang/String;)J|] @classDescriptor [|java:util:Date|] @type static;
#L0ed1cc.   v0:= temp  @type wide;
#L0ed1ce.   v2.[|java:util:Date.milliseconds|]  := v0 @wide;
#L0ed1d2.   return @void ;

   }
    procedure [|long|] [|java:util:Date.UTC|] ([|int|] v7, [|int|] v8, [|int|] v9, [|int|] v10, [|int|] v11, [|int|] v12) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.UTC:(IIIIII)J|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0006,L001e));






        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ed1e4.   v0:= new [|java:util:GregorianCalendar|];
#L0ed1e8.   v1:= 0  @length 4;
#L0ed1ea.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.<init>:(Z)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0ed1f0.   v1:= "GMT" @type (object, string);
#L0ed1f4.   call temp:=  [|java:util:TimeZone.getTimeZone|](v1) @signature [|Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;|] @classDescriptor [|java:util:TimeZone|] @type static;
#L0ed1fa.   v1:= temp  @type object;
#L0ed1fc.   call temp:=  [|java:util:GregorianCalendar.setTimeZone|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ed202.   v1:= v7 + 1900;
#L0ed206.   v2:= v8;
#L0ed208.   v3:= v9;
#L0ed20a.   v4:= v10;
#L0ed20c.   v5:= v11;
#L0ed20e.   v6:= v12;
#L0ed210.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/GregorianCalendar;.set:(IIIIII)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ed216.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ed21c.   v1:= temp  @type wide;
#L0ed21e.   return v1  @type wide;

   }
    procedure [|void|] [|java:util:Date.appendTwoDigits|] ([|java:lang:StringBuilder|] v1 @type (object), [|int|] v2) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.appendTwoDigits:(Ljava/lang/StringBuilder;I)V|] @Access PRIVATE_STATIC {
      local temp ;


        v0;
      
#L0ed230.   v0:= 10  @length 16;
#L0ed234.   if v2 >= v0 then goto L0ed242;
#L0ed238.   v0:= 48  @length 16;
#L0ed23c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ed242.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ed248.   return @void ;

   }
    procedure [|int|] [|java:util:Date.parse|] ([|java:lang:String|] v8 @type (object), [|java:lang:String|][] v9 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.parse:(Ljava/lang/String;[Ljava/lang/String;)I|] @Access PRIVATE_STATIC {
      local temp ;
        [|int|] v7 @varname [|i|] @scope ((L0002,L0014), (L0015,L001a));
        [|int|] v5 @varname [|slength|] @scope ((L0007,L001a));
        [|int|] v6 @varname [|alength|] @scope ((L0003,L001a));


        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0ed25c.   v2:= 0  @length 4;
#L0ed25e.   v7:= 0  @length 4;
#L0ed260.   v6:= v9.length;
#L0ed262.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed268.   v5:= temp;
#L0ed26a.   if v7 >= v6 then goto L0ed28c;
#L0ed26e.   v1:= 1  @length 4;
#L0ed270.   v3:= v9[v7]  @type object;
#L0ed274.   v0:= v8  @type object;
#L0ed276.   v4:= v2;
#L0ed278.   call temp:=  [|java:lang:String.regionMatches|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed27e.   v0:= temp;
#L0ed280.   if v0 == 0 then goto L0ed286;
#L0ed284.   return v7;
#L0ed286.   v7:= v7 + 1;
#L0ed28a.   goto L0ed26a;
#L0ed28c.   v7:= -1  @length 4;
#L0ed28e.   goto L0ed284;

   }
    procedure [|long|] [|java:util:Date.parse|] ([|java:lang:String|] v36 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.parse:(Ljava/lang/String;)J|] @Access PUBLIC_STATIC {
      local temp ;
        [|int|] v20 @varname [|digit|] @scope ((L0087,L00c9), (L011c,L01ec));
        [|char|] v24 @varname [|next|] @scope ((L0041,L00f1), (L00f5,L02c6));
        [|int|] v25 @varname [|nextState|] @scope ((L005b,L00f1), (L00f5,L02c6));
        [|java:lang:String|][] v23 @varname [|months|] @scope ((L0262,L02b1));
        [|java:text:DateFormatSymbols|] v29 @varname [|symbols|] @scope ((L025a,L02b1));
        [|java:lang:String|] v30 @varname [|text|] @scope ((L0200,L02b1));
        [|int|] v31 @varname [|value|] @scope ((L02a3,L02b1));
        [|java:lang:String|][] v32 @varname [|weekdays|] @scope ((L025e,L02b1));
        [|int|] v3 @varname [|month|] @scope ((L0019,L0333));
        [|int|] v4 @varname [|date|] @scope ((L001a,L0333));
        [|int|] v5 @varname [|hour|] @scope ((L001b,L0333));
        [|int|] v6 @varname [|minute|] @scope ((L001c,L0333));
        [|int|] v7 @varname [|second|] @scope ((L001d,L0333));
        [|int|] v15 @varname [|LETTERS|] @scope ((L0026,L0333));
        [|int|] v16 @varname [|NUMBERS|] @scope ((L0028,L0333));
        [|int|] v17 @varname [|PAD|] @scope ((L0025,L0333));
        [|java:lang:StringBuilder|] v18 @varname [|buffer|] @scope ((L002d,L0333));
        [|int|] v19 @varname [|commentLevel|] @scope ((L000e,L0333));
        [|int|] v21 @varname [|length|] @scope ((L0014,L0333));
        [|int|] v22 @varname [|minutesOffset|] @scope ((L0021,L0333));
        [|int|] v26 @varname [|offset|] @scope ((L0010,L0333));
        [|char|] v27 @varname [|sign|] @scope ((L000c,L0333));
        [|int|] v28 @varname [|state|] @scope ((L0016,L0333));
        [|int|] v33 @varname [|year|] @scope ((L0018,L0333));
        [|boolean|] v34 @varname [|zone|] @scope ((L0023,L0333));
        [|int|] v35 @varname [|zoneOffset|] @scope ((L001f,L0333));

        v0;
        v1;
        v2;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L0ed2a0.   if v36 != 0 then goto L0ed2b4;
#L0ed2a4.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed2a8.   v8:= "The string argument is null" @type (object, string);
#L0ed2ac.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v8) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed2b2.   throw v2;
#L0ed2b4.   v27:= 0  @length 16;
#L0ed2b8.   v19:= 0  @length 16;
#L0ed2bc.   v26:= 0  @length 16;
#L0ed2c0.   call temp:=  [|java:lang:String.length|](v36) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed2c6.   v21:= temp;
#L0ed2c8.   v28:= 0  @length 16;
#L0ed2cc.   v33:= -1  @length 16;
#L0ed2d0.   v3:= -1  @length 4;
#L0ed2d2.   v4:= -1  @length 4;
#L0ed2d4.   v5:= -1  @length 4;
#L0ed2d6.   v6:= -1  @length 4;
#L0ed2d8.   v7:= -1  @length 4;
#L0ed2da.   v35:= 0  @length 16;
#L0ed2de.   v22:= 0  @length 16;
#L0ed2e2.   v34:= 0  @length 16;
#L0ed2e6.   v17:= 0  @length 16;
#L0ed2ea.   v15:= 1  @length 4;
#L0ed2ec.   v16:= 2  @length 16;
#L0ed2f0.   v18:= new [|java:lang:StringBuilder|];
#L0ed2f4.   call temp:=  [|java:lang:StringBuilder.<init>|](v18) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ed2fa.   v0:= v26;
#L0ed2fe.   v1:= v21;
#L0ed302.   if v0 > v1 then goto L0ed82c;
#L0ed306.   v0:= v26;
#L0ed30a.   v1:= v21;
#L0ed30e.   if v0 >= v1 then goto L0ed482;
#L0ed312.   v0:= v36  @type object;
#L0ed316.   v1:= v26;
#L0ed31a.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed320.   v24:= temp;
#L0ed322.   v26:= v26 + 1;
#L0ed326.   v2:= 40  @length 16;
#L0ed32a.   v0:= v24;
#L0ed32e.   if v0 != v2 then goto L0ed336;
#L0ed332.   v19:= v19 + 1;
#L0ed336.   if v19 <= 0 then goto L0ed352;
#L0ed33a.   v2:= 41  @length 16;
#L0ed33e.   v0:= v24;
#L0ed342.   if v0 != v2 then goto L0ed34a;
#L0ed346.   v19:= v19 + -1;
#L0ed34a.   if v19 != 0 then goto L0ed2fa;
#L0ed34e.   v24:= 32  @length 16;
#L0ed352.   v25:= 0  @length 16;
#L0ed356.   v2:= 97  @length 16;
#L0ed35a.   v0:= v24;
#L0ed35e.   if v2 > v0 then goto L0ed36e;
#L0ed362.   v2:= 122  @length 16;
#L0ed366.   v0:= v24;
#L0ed36a.   if v0 <= v2 then goto L0ed386;
#L0ed36e.   v2:= 65  @length 16;
#L0ed372.   v0:= v24;
#L0ed376.   if v2 > v0 then goto L0ed48a;
#L0ed37a.   v2:= 90  @length 16;
#L0ed37e.   v0:= v24;
#L0ed382.   if v0 > v2 then goto L0ed48a;
#L0ed386.   v25:= 1  @length 16;
#L0ed38a.   v2:= 2  @length 4;
#L0ed38c.   v0:= v28;
#L0ed390.   if v0 != v2 then goto L0ed678;
#L0ed394.   v2:= 2  @length 4;
#L0ed396.   v0:= v25;
#L0ed39a.   if v0 == v2 then goto L0ed678;
#L0ed39e.   call temp:=  [|java:lang:StringBuilder.toString|](v18) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ed3a4.   v2:= temp  @type object;
#L0ed3a6.   call temp:=  [|java:lang:Integer.parseInt|](v2) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ed3ac.   v20:= temp;
#L0ed3ae.   v2:= 0  @length 4;
#L0ed3b0.   v0:= v18  @type object;
#L0ed3b4.   call temp:=  [|java:lang:StringBuilder.setLength|](v0, v2) @signature [|Ljava/lang/StringBuilder;.setLength:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ed3ba.   v2:= 43  @length 16;
#L0ed3be.   v0:= v27;
#L0ed3c2.   if v0 == v2 then goto L0ed3d2;
#L0ed3c6.   v2:= 45  @length 16;
#L0ed3ca.   v0:= v27;
#L0ed3ce.   if v0 != v2 then goto L0ed508;
#L0ed3d2.   if v35 != 0 then goto L0ed4fc;
#L0ed3d6.   v34:= 1  @length 16;
#L0ed3da.   v2:= 58  @length 16;
#L0ed3de.   v0:= v24;
#L0ed3e2.   if v0 != v2 then goto L0ed418;
#L0ed3e6.   v2:= 45  @length 16;
#L0ed3ea.   v0:= v27;
#L0ed3ee.   if v0 != v2 then goto L0ed4d8;
#L0ed3f2.   v2:= v26 + 2;
#L0ed3f6.   v0:= v36  @type object;
#L0ed3fa.   v1:= v26;
#L0ed3fe.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed404.   v2:= temp  @type object;
#L0ed406.   call temp:=  [|java:lang:Integer.parseInt|](v2) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ed40c.   v2:= temp;
#L0ed40e.   v0:= -v2  @type int;
#L0ed410.   v22:= v0;
#L0ed414.   v26:= v26 + 2;
#L0ed418.   v2:= 45  @length 16;
#L0ed41c.   v0:= v27;
#L0ed420.   if v0 != v2 then goto L0ed4f6;
#L0ed424.   v0:= v20;
#L0ed428.   v0:= -v0  @type int;
#L0ed42a.   v35:= v0;
#L0ed42e.   v27:= 0  @length 16;
#L0ed432.   v2:= 43  @length 16;
#L0ed436.   v0:= v24;
#L0ed43a.   if v0 == v2 then goto L0ed454;
#L0ed43e.   v2:= -1  @length 4;
#L0ed440.   v0:= v33;
#L0ed444.   if v0 == v2 then goto L0ed802;
#L0ed448.   v2:= 45  @length 16;
#L0ed44c.   v0:= v24;
#L0ed450.   if v0 != v2 then goto L0ed802;
#L0ed454.   v27:= v24;
#L0ed458.   v2:= 1  @length 4;
#L0ed45a.   v0:= v25;
#L0ed45e.   if v0 == v2 then goto L0ed46c;
#L0ed462.   v2:= 2  @length 4;
#L0ed464.   v0:= v25;
#L0ed468.   if v0 != v2 then goto L0ed47a;
#L0ed46c.   v0:= v18  @type object;
#L0ed470.   v1:= v24;
#L0ed474.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ed47a.   v28:= v25;
#L0ed47e.   goto L0ed2fa;
#L0ed482.   v24:= 13  @length 16;
#L0ed486.   goto L0ed322;
#L0ed48a.   v2:= 48  @length 16;
#L0ed48e.   v0:= v24;
#L0ed492.   if v2 > v0 then goto L0ed4aa;
#L0ed496.   v2:= 57  @length 16;
#L0ed49a.   v0:= v24;
#L0ed49e.   if v0 > v2 then goto L0ed4aa;
#L0ed4a2.   v25:= 2  @length 16;
#L0ed4a6.   goto L0ed38a;
#L0ed4aa.   call temp:=  [|java:lang:Character.isSpace|](v24) @signature [|Ljava/lang/Character;.isSpace:(C)Z|] @classDescriptor [|java:lang:Character|] @type static;
#L0ed4b0.   v2:= temp;
#L0ed4b2.   if v2 != 0 then goto L0ed38a;
#L0ed4b6.   v2:= ",+-:/" @type (object, string);
#L0ed4ba.   v0:= v24;
#L0ed4be.   call temp:=  [|java:lang:String.indexOf|](v2, v0) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed4c4.   v2:= temp;
#L0ed4c6.   v8:= -1  @length 4;
#L0ed4c8.   if v2 != v8 then goto L0ed38a;
#L0ed4cc.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed4d0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed4d6.   throw v2;
#L0ed4d8.   v2:= v26 + 2;
#L0ed4dc.   v0:= v36  @type object;
#L0ed4e0.   v1:= v26;
#L0ed4e4.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed4ea.   v2:= temp  @type object;
#L0ed4ec.   call temp:=  [|java:lang:Integer.parseInt|](v2) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ed4f2.   v22:= temp;
#L0ed4f4.   goto L0ed414;
#L0ed4f6.   v35:= v20;
#L0ed4fa.   goto L0ed42e;
#L0ed4fc.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed500.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed506.   throw v2;
#L0ed508.   v2:= 70  @length 16;
#L0ed50c.   v0:= v20;
#L0ed510.   if v0 < v2 then goto L0ed562;
#L0ed514.   v2:= -1  @length 4;
#L0ed516.   v0:= v33;
#L0ed51a.   if v0 != v2 then goto L0ed556;
#L0ed51e.   call temp:=  [|java:lang:Character.isSpace|](v24) @signature [|Ljava/lang/Character;.isSpace:(C)Z|] @classDescriptor [|java:lang:Character|] @type static;
#L0ed524.   v2:= temp;
#L0ed526.   if v2 != 0 then goto L0ed54e;
#L0ed52a.   v2:= 44  @length 16;
#L0ed52e.   v0:= v24;
#L0ed532.   if v0 == v2 then goto L0ed54e;
#L0ed536.   v2:= 47  @length 16;
#L0ed53a.   v0:= v24;
#L0ed53e.   if v0 == v2 then goto L0ed54e;
#L0ed542.   v2:= 13  @length 16;
#L0ed546.   v0:= v24;
#L0ed54a.   if v0 != v2 then goto L0ed556;
#L0ed54e.   v33:= v20;
#L0ed552.   goto L0ed432;
#L0ed556.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed55a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed560.   throw v2;
#L0ed562.   v2:= 58  @length 16;
#L0ed566.   v0:= v24;
#L0ed56a.   if v0 != v2 then goto L0ed596;
#L0ed56e.   v2:= -1  @length 4;
#L0ed570.   if v5 != v2 then goto L0ed57c;
#L0ed574.   v5:= v20;
#L0ed578.   goto L0ed432;
#L0ed57c.   v2:= -1  @length 4;
#L0ed57e.   if v6 != v2 then goto L0ed58a;
#L0ed582.   v6:= v20;
#L0ed586.   goto L0ed432;
#L0ed58a.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed58e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed594.   throw v2;
#L0ed596.   v2:= 47  @length 16;
#L0ed59a.   v0:= v24;
#L0ed59e.   if v0 != v2 then goto L0ed5ca;
#L0ed5a2.   v2:= -1  @length 4;
#L0ed5a4.   if v3 != v2 then goto L0ed5b0;
#L0ed5a8.   v3:= v20 + -1;
#L0ed5ac.   goto L0ed432;
#L0ed5b0.   v2:= -1  @length 4;
#L0ed5b2.   if v4 != v2 then goto L0ed5be;
#L0ed5b6.   v4:= v20;
#L0ed5ba.   goto L0ed432;
#L0ed5be.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed5c2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed5c8.   throw v2;
#L0ed5ca.   call temp:=  [|java:lang:Character.isSpace|](v24) @signature [|Ljava/lang/Character;.isSpace:(C)Z|] @classDescriptor [|java:lang:Character|] @type static;
#L0ed5d0.   v2:= temp;
#L0ed5d2.   if v2 != 0 then goto L0ed5fa;
#L0ed5d6.   v2:= 44  @length 16;
#L0ed5da.   v0:= v24;
#L0ed5de.   if v0 == v2 then goto L0ed5fa;
#L0ed5e2.   v2:= 45  @length 16;
#L0ed5e6.   v0:= v24;
#L0ed5ea.   if v0 == v2 then goto L0ed5fa;
#L0ed5ee.   v2:= 13  @length 16;
#L0ed5f2.   v0:= v24;
#L0ed5f6.   if v0 != v2 then goto L0ed64e;
#L0ed5fa.   v2:= -1  @length 4;
#L0ed5fc.   if v5 == v2 then goto L0ed60e;
#L0ed600.   v2:= -1  @length 4;
#L0ed602.   if v6 != v2 then goto L0ed60e;
#L0ed606.   v6:= v20;
#L0ed60a.   goto L0ed432;
#L0ed60e.   v2:= -1  @length 4;
#L0ed610.   if v6 == v2 then goto L0ed622;
#L0ed614.   v2:= -1  @length 4;
#L0ed616.   if v7 != v2 then goto L0ed622;
#L0ed61a.   v7:= v20;
#L0ed61e.   goto L0ed432;
#L0ed622.   v2:= -1  @length 4;
#L0ed624.   if v4 != v2 then goto L0ed630;
#L0ed628.   v4:= v20;
#L0ed62c.   goto L0ed432;
#L0ed630.   v2:= -1  @length 4;
#L0ed632.   v0:= v33;
#L0ed636.   if v0 != v2 then goto L0ed642;
#L0ed63a.   v33:= v20;
#L0ed63e.   goto L0ed432;
#L0ed642.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed646.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed64c.   throw v2;
#L0ed64e.   v2:= -1  @length 4;
#L0ed650.   v0:= v33;
#L0ed654.   if v0 != v2 then goto L0ed66c;
#L0ed658.   v2:= -1  @length 4;
#L0ed65a.   if v3 == v2 then goto L0ed66c;
#L0ed65e.   v2:= -1  @length 4;
#L0ed660.   if v4 == v2 then goto L0ed66c;
#L0ed664.   v33:= v20;
#L0ed668.   goto L0ed432;
#L0ed66c.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed670.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed676.   throw v2;
#L0ed678.   v2:= 1  @length 4;
#L0ed67a.   v0:= v28;
#L0ed67e.   if v0 != v2 then goto L0ed432;
#L0ed682.   v2:= 1  @length 4;
#L0ed684.   v0:= v25;
#L0ed688.   if v0 == v2 then goto L0ed432;
#L0ed68c.   call temp:=  [|java:lang:StringBuilder.toString|](v18) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ed692.   v2:= temp  @type object;
#L0ed694.   v8:= @@[|java:util:Locale.US|]   @type object;
#L0ed698.   call temp:=  [|java:lang:String.toUpperCase|](v2, v8) @signature [|Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed69e.   v30:= temp  @type object;
#L0ed6a0.   v2:= 0  @length 4;
#L0ed6a2.   v0:= v18  @type object;
#L0ed6a6.   call temp:=  [|java:lang:StringBuilder.setLength|](v0, v2) @signature [|Ljava/lang/StringBuilder;.setLength:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ed6ac.   call temp:=  [|java:lang:String.length|](v30) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed6b2.   v2:= temp;
#L0ed6b4.   v8:= 1  @length 4;
#L0ed6b6.   if v2 != v8 then goto L0ed6c6;
#L0ed6ba.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed6be.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed6c4.   throw v2;
#L0ed6c6.   v2:= "AM" @type (object, string);
#L0ed6ca.   v0:= v30  @type object;
#L0ed6ce.   call temp:=  [|java:lang:String.equals|](v0, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed6d4.   v2:= temp;
#L0ed6d6.   if v2 == 0 then goto L0ed702;
#L0ed6da.   v2:= 12  @length 16;
#L0ed6de.   if v5 != v2 then goto L0ed6e8;
#L0ed6e2.   v5:= 0  @length 4;
#L0ed6e4.   goto L0ed432;
#L0ed6e8.   v2:= 1  @length 4;
#L0ed6ea.   if v5 < v2 then goto L0ed6f6;
#L0ed6ee.   v2:= 12  @length 16;
#L0ed6f2.   if v5 <= v2 then goto L0ed432;
#L0ed6f6.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed6fa.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed700.   throw v2;
#L0ed702.   v2:= "PM" @type (object, string);
#L0ed706.   v0:= v30  @type object;
#L0ed70a.   call temp:=  [|java:lang:String.equals|](v0, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed710.   v2:= temp;
#L0ed712.   if v2 == 0 then goto L0ed742;
#L0ed716.   v2:= 12  @length 16;
#L0ed71a.   if v5 != v2 then goto L0ed728;
#L0ed71e.   v5:= 0  @length 4;
#L0ed720.   v5:= v5 + 12;
#L0ed724.   goto L0ed432;
#L0ed728.   v2:= 1  @length 4;
#L0ed72a.   if v5 < v2 then goto L0ed736;
#L0ed72e.   v2:= 12  @length 16;
#L0ed732.   if v5 <= v2 then goto L0ed720;
#L0ed736.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed73a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed740.   throw v2;
#L0ed742.   v29:= new [|java:text:DateFormatSymbols|];
#L0ed746.   v2:= @@[|java:util:Locale.US|]   @type object;
#L0ed74a.   v0:= v29  @type object;
#L0ed74e.   call temp:=  [|java:text:DateFormatSymbols.<init>|](v0, v2) @signature [|Ljava/text/DateFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DateFormatSymbols|] @type direct;
#L0ed754.   call temp:=  [|java:text:DateFormatSymbols.getWeekdays|](v29) @signature [|Ljava/text/DateFormatSymbols;.getWeekdays:()[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0ed75a.   v32:= temp  @type object;
#L0ed75c.   call temp:=  [|java:text:DateFormatSymbols.getMonths|](v29) @signature [|Ljava/text/DateFormatSymbols;.getMonths:()[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0ed762.   v23:= temp  @type object;
#L0ed764.   v0:= v30  @type object;
#L0ed768.   v1:= v32  @type object;
#L0ed76c.   call temp:=  [|java:util:Date.parse|](v0, v1) @signature [|Ljava/util/Date;.parse:(Ljava/lang/String;[Ljava/lang/String;)I|] @classDescriptor [|java:util:Date|] @type static;
#L0ed772.   v2:= temp;
#L0ed774.   v8:= -1  @length 4;
#L0ed776.   if v2 != v8 then goto L0ed432;
#L0ed77a.   v2:= -1  @length 4;
#L0ed77c.   if v3 != v2 then goto L0ed796;
#L0ed780.   v0:= v30  @type object;
#L0ed784.   v1:= v23  @type object;
#L0ed788.   call temp:=  [|java:util:Date.parse|](v0, v1) @signature [|Ljava/util/Date;.parse:(Ljava/lang/String;[Ljava/lang/String;)I|] @classDescriptor [|java:util:Date|] @type static;
#L0ed78e.   v3:= temp;
#L0ed790.   v2:= -1  @length 4;
#L0ed792.   if v3 != v2 then goto L0ed432;
#L0ed796.   v2:= "GMT" @type (object, string);
#L0ed79a.   v0:= v30  @type object;
#L0ed79e.   call temp:=  [|java:lang:String.equals|](v0, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed7a4.   v2:= temp;
#L0ed7a6.   if v2 != 0 then goto L0ed7d2;
#L0ed7aa.   v2:= "UT" @type (object, string);
#L0ed7ae.   v0:= v30  @type object;
#L0ed7b2.   call temp:=  [|java:lang:String.equals|](v0, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed7b8.   v2:= temp;
#L0ed7ba.   if v2 != 0 then goto L0ed7d2;
#L0ed7be.   v2:= "UTC" @type (object, string);
#L0ed7c2.   v0:= v30  @type object;
#L0ed7c6.   call temp:=  [|java:lang:String.equals|](v0, v2) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed7cc.   v2:= temp;
#L0ed7ce.   if v2 == 0 then goto L0ed7de;
#L0ed7d2.   v34:= 1  @length 16;
#L0ed7d6.   v35:= 0  @length 16;
#L0ed7da.   goto L0ed432;
#L0ed7de.   call temp:=  [|java:util:Date.zone|](v30) @signature [|Ljava/util/Date;.zone:(Ljava/lang/String;)I|] @classDescriptor [|java:util:Date|] @type static;
#L0ed7e4.   v31:= temp;
#L0ed7e6.   if v31 == 0 then goto L0ed7f6;
#L0ed7ea.   v34:= 1  @length 16;
#L0ed7ee.   v35:= v31;
#L0ed7f2.   goto L0ed432;
#L0ed7f6.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed7fa.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed800.   throw v2;
#L0ed802.   call temp:=  [|java:lang:Character.isSpace|](v24) @signature [|Ljava/lang/Character;.isSpace:(C)Z|] @classDescriptor [|java:lang:Character|] @type static;
#L0ed808.   v2:= temp;
#L0ed80a.   if v2 != 0 then goto L0ed458;
#L0ed80e.   v2:= 44  @length 16;
#L0ed812.   v0:= v24;
#L0ed816.   if v0 == v2 then goto L0ed458;
#L0ed81a.   v2:= 2  @length 4;
#L0ed81c.   v0:= v25;
#L0ed820.   if v0 == v2 then goto L0ed458;
#L0ed824.   v27:= 0  @length 16;
#L0ed828.   goto L0ed458;
#L0ed82c.   v2:= -1  @length 4;
#L0ed82e.   v0:= v33;
#L0ed832.   if v0 == v2 then goto L0ed8fa;
#L0ed836.   v2:= -1  @length 4;
#L0ed838.   if v3 == v2 then goto L0ed8fa;
#L0ed83c.   v2:= -1  @length 4;
#L0ed83e.   if v4 == v2 then goto L0ed8fa;
#L0ed842.   v2:= -1  @length 4;
#L0ed844.   if v5 != v2 then goto L0ed84a;
#L0ed848.   v5:= 0  @length 4;
#L0ed84a.   v2:= -1  @length 4;
#L0ed84c.   if v6 != v2 then goto L0ed852;
#L0ed850.   v6:= 0  @length 4;
#L0ed852.   v2:= -1  @length 4;
#L0ed854.   if v7 != v2 then goto L0ed85a;
#L0ed858.   v7:= 0  @length 4;
#L0ed85a.   v2:= @@[|java:util:Date.CREATION_YEAR|] ;
#L0ed85e.   v2:= v2 + -80;
#L0ed862.   v0:= v33;
#L0ed866.   if v0 >= v2 then goto L0ed8b4;
#L0ed86a.   v0:= v33;
#L0ed86e.   v0:= v0 + 2000;
#L0ed872.   v33:= v0;
#L0ed876.   v6:= v6 - v22  @type int;
#L0ed87a.   if v34 == 0 then goto L0ed8d4;
#L0ed87e.   v2:= 24  @length 16;
#L0ed882.   v0:= v35;
#L0ed886.   if v0 >= v2 then goto L0ed896;
#L0ed88a.   v2:= -24  @length 16;
#L0ed88e.   v0:= v35;
#L0ed892.   if v0 > v2 then goto L0ed8ce;
#L0ed896.   v2:= v35 / 100;
#L0ed89a.   v5:= v5 - v2  @type int;
#L0ed89c.   v2:= v35 % 100;
#L0ed8a0.   v6:= v6 - v2  @type int;
#L0ed8a2.   v0:= v33;
#L0ed8a6.   v2:= v0 + -1900;
#L0ed8aa.   call temp:=  [|java:util:Date.UTC|](v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/Date;.UTC:(IIIIII)J|] @classDescriptor [|java:util:Date|] @type static;
#L0ed8b0.   v8:= temp  @type wide;
#L0ed8b2.   return v8  @type wide;
#L0ed8b4.   v2:= 100  @length 16;
#L0ed8b8.   v0:= v33;
#L0ed8bc.   if v0 >= v2 then goto L0ed876;
#L0ed8c0.   v0:= v33;
#L0ed8c4.   v0:= v0 + 1900;
#L0ed8c8.   v33:= v0;
#L0ed8cc.   goto L0ed876;
#L0ed8ce.   v5:= v5 - v35  @type int;
#L0ed8d2.   goto L0ed8a2;
#L0ed8d4.   v8:= new [|java:util:Date|];
#L0ed8d8.   v0:= v33;
#L0ed8dc.   v9:= v0 + -1900;
#L0ed8e0.   v10:= v3;
#L0ed8e2.   v11:= v4;
#L0ed8e4.   v12:= v5;
#L0ed8e6.   v13:= v6;
#L0ed8e8.   v14:= v7;
#L0ed8ea.   call temp:=  [|java:util:Date.<init>|](v8, v9, v10, v11, v12, v13, v14) @signature [|Ljava/util/Date;.<init>:(IIIIII)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ed8f0.   call temp:=  [|java:util:Date.getTime|](v8) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L0ed8f6.   v8:= temp  @type wide;
#L0ed8f8.   goto L0ed8b2;
#L0ed8fa.   v2:= new [|java:lang:IllegalArgumentException|];
#L0ed8fe.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ed904.   throw v2;

   }
    procedure [|void|] [|java:util:Date.readObject|] ([|java:util:Date|] v2 @type (this), [|java:io:ObjectInputStream|] v3 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;


        v0;
        v1;
      
#L0ed918.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v3) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0ed91e.   call temp:=  [|java:io:ObjectInputStream.readLong|](v3) @signature [|Ljava/io/ObjectInputStream;.readLong:()J|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0ed924.   v0:= temp  @type wide;
#L0ed926.   call temp:=  [|java:util:Date.setTime|](v2, v0, v1) @signature [|Ljava/util/Date;.setTime:(J)V|] @classDescriptor [|java:util:Date|] @type virtual;
#L0ed92c.   return @void ;

   }
    procedure [|void|] [|java:util:Date.writeObject|] ([|java:util:Date|] v2 @type (this), [|java:io:ObjectOutputStream|] v3 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;


        v0;
        v1;
      
#L0ed940.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v3) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0ed946.   call temp:=  [|java:util:Date.getTime|](v2) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L0ed94c.   v0:= temp  @type wide;
#L0ed94e.   call temp:=  [|java:io:ObjectOutputStream.writeLong|](v3, v0, v1) @signature [|Ljava/io/ObjectOutputStream;.writeLong:(J)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0ed954.   return @void ;

   }
    procedure [|int|] [|java:util:Date.zone|] ([|java:lang:String|] v4 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.zone:(Ljava/lang/String;)I|] @Access PRIVATE_STATIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L0ed968.   v0:= -5  @length 4;
#L0ed96a.   v1:= -6  @length 4;
#L0ed96c.   v2:= -7  @length 4;
#L0ed96e.   v3:= "EST" @type (object, string);
#L0ed972.   call temp:=  [|java:lang:String.equals|](v4, v3) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed978.   v3:= temp;
#L0ed97a.   if v3 == 0 then goto L0ed980;
#L0ed97e.   return v0;
#L0ed980.   v3:= "EDT" @type (object, string);
#L0ed984.   call temp:=  [|java:lang:String.equals|](v4, v3) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed98a.   v3:= temp;
#L0ed98c.   if v3 == 0 then goto L0ed994;
#L0ed990.   v0:= -4  @length 4;
#L0ed992.   goto L0ed97e;
#L0ed994.   v3:= "CST" @type (object, string);
#L0ed998.   call temp:=  [|java:lang:String.equals|](v4, v3) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed99e.   v3:= temp;
#L0ed9a0.   if v3 == 0 then goto L0ed9a8;
#L0ed9a4.   v0:= v1;
#L0ed9a6.   goto L0ed97e;
#L0ed9a8.   v3:= "CDT" @type (object, string);
#L0ed9ac.   call temp:=  [|java:lang:String.equals|](v4, v3) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed9b2.   v3:= temp;
#L0ed9b4.   if v3 != 0 then goto L0ed97e;
#L0ed9b8.   v0:= "MST" @type (object, string);
#L0ed9bc.   call temp:=  [|java:lang:String.equals|](v4, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed9c2.   v0:= temp;
#L0ed9c4.   if v0 == 0 then goto L0ed9cc;
#L0ed9c8.   v0:= v2;
#L0ed9ca.   goto L0ed97e;
#L0ed9cc.   v0:= "MDT" @type (object, string);
#L0ed9d0.   call temp:=  [|java:lang:String.equals|](v4, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed9d6.   v0:= temp;
#L0ed9d8.   if v0 == 0 then goto L0ed9e0;
#L0ed9dc.   v0:= v1;
#L0ed9de.   goto L0ed97e;
#L0ed9e0.   v0:= "PST" @type (object, string);
#L0ed9e4.   call temp:=  [|java:lang:String.equals|](v4, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed9ea.   v0:= temp;
#L0ed9ec.   if v0 == 0 then goto L0ed9f4;
#L0ed9f0.   v0:= -8  @length 4;
#L0ed9f2.   goto L0ed97e;
#L0ed9f4.   v0:= "PDT" @type (object, string);
#L0ed9f8.   call temp:=  [|java:lang:String.equals|](v4, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ed9fe.   v0:= temp;
#L0eda00.   if v0 == 0 then goto L0eda08;
#L0eda04.   v0:= v2;
#L0eda06.   goto L0ed97e;
#L0eda08.   v0:= 0  @length 4;
#L0eda0a.   goto L0ed97e;

   }
    procedure [|boolean|] [|java:util:Date.after|] ([|java:util:Date|] v4 @type (this), [|java:util:Date|] v5 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.after:(Ljava/util/Date;)Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L0eda1c.   v0:= v4.[|java:util:Date.milliseconds|]   @wide;
#L0eda20.   v2:= v5.[|java:util:Date.milliseconds|]   @wide;
#L0eda24.   v0:= cmp(v0,v2);
#L0eda28.   if v0 <= 0 then goto L0eda30;
#L0eda2c.   v0:= 1  @length 4;
#L0eda2e.   return v0;
#L0eda30.   v0:= 0  @length 4;
#L0eda32.   goto L0eda2e;

   }
    procedure [|boolean|] [|java:util:Date.before|] ([|java:util:Date|] v4 @type (this), [|java:util:Date|] v5 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.before:(Ljava/util/Date;)Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L0eda44.   v0:= v4.[|java:util:Date.milliseconds|]   @wide;
#L0eda48.   v2:= v5.[|java:util:Date.milliseconds|]   @wide;
#L0eda4c.   v0:= cmp(v0,v2);
#L0eda50.   if v0 >= 0 then goto L0eda58;
#L0eda54.   v0:= 1  @length 4;
#L0eda56.   return v0;
#L0eda58.   v0:= 0  @length 4;
#L0eda5a.   goto L0eda56;

   }
    procedure [|java:lang:Object|] [|java:util:Date.clone|] ([|java:util:Date|] v2 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:lang:CloneNotSupportedException|] v0 @varname [|e|] @scope ((L0006,L000c));

        v1;
      
#L0eda6c.   call temp:=  [|java:lang:Object.clone|](v2) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0eda72.   v1:= temp  @type object;
#L0eda74.   return v1  @type object;
#L0eda76.   v0:= Exception  @type object;
#L0eda78.   v1:= new [|java:lang:AssertionError|];
#L0eda7c.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0eda82.   throw v1;
  catch  [|java:lang:CloneNotSupportedException|] @[L0eda6c..L0eda72] goto L0eda76;

   }
    procedure [|int|] [|java:util:Date.compareTo|] ([|java:util:Date|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L0edaa4.   v2:= ([|java:util:Date|])v2;
#L0edaa8.   call temp:=  [|java:util:Date.compareTo|](v1, v2) @signature [|Ljava/util/Date;.compareTo:(Ljava/util/Date;)I|] @classDescriptor [|java:util:Date|] @type virtual;
#L0edaae.   v0:= temp;
#L0edab0.   return v0;

   }
    procedure [|int|] [|java:util:Date.compareTo|] ([|java:util:Date|] v4 @type (this), [|java:util:Date|] v5 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.compareTo:(Ljava/util/Date;)I|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L0edac4.   v0:= v4.[|java:util:Date.milliseconds|]   @wide;
#L0edac8.   v2:= v5.[|java:util:Date.milliseconds|]   @wide;
#L0edacc.   v0:= cmp(v0,v2);
#L0edad0.   if v0 >= 0 then goto L0edad8;
#L0edad4.   v0:= -1  @length 4;
#L0edad6.   return v0;
#L0edad8.   v0:= v4.[|java:util:Date.milliseconds|]   @wide;
#L0edadc.   v2:= v5.[|java:util:Date.milliseconds|]   @wide;
#L0edae0.   v0:= cmp(v0,v2);
#L0edae4.   if v0 != 0 then goto L0edaec;
#L0edae8.   v0:= 0  @length 4;
#L0edaea.   goto L0edad6;
#L0edaec.   v0:= 1  @length 4;
#L0edaee.   goto L0edad6;

   }
    procedure [|boolean|] [|java:util:Date.equals|] ([|java:util:Date|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L0edb00.   if v5 == v4 then goto L0edb20;
#L0edb04.   v0:= instanceof @varname v5 @type [|java:util:Date|];
#L0edb08.   if v0 == 0 then goto L0edb24;
#L0edb0c.   v0:= v4.[|java:util:Date.milliseconds|]   @wide;
#L0edb10.   v5:= ([|java:util:Date|])v5;
#L0edb14.   v2:= v5.[|java:util:Date.milliseconds|]   @wide;
#L0edb18.   v0:= cmp(v0,v2);
#L0edb1c.   if v0 != 0 then goto L0edb24;
#L0edb20.   v0:= 1  @length 4;
#L0edb22.   return v0;
#L0edb24.   v0:= 0  @length 4;
#L0edb26.   goto L0edb22;

   }
    procedure [|int|] [|java:util:Date.getDate|] ([|java:util:Date|] v3 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.getDate:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0edb38.   v0:= new [|java:util:GregorianCalendar|];
#L0edb3c.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edb40.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edb46.   v1:= 5  @length 4;
#L0edb48.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edb4e.   v0:= temp;
#L0edb50.   return v0;

   }
    procedure [|int|] [|java:util:Date.getDay|] ([|java:util:Date|] v3 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.getDay:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0edb64.   v0:= new [|java:util:GregorianCalendar|];
#L0edb68.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edb6c.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edb72.   v1:= 7  @length 4;
#L0edb74.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edb7a.   v0:= temp;
#L0edb7c.   v0:= v0 + -1;
#L0edb80.   return v0;

   }
    procedure [|int|] [|java:util:Date.getHours|] ([|java:util:Date|] v3 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.getHours:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0edb94.   v0:= new [|java:util:GregorianCalendar|];
#L0edb98.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edb9c.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edba2.   v1:= 11  @length 16;
#L0edba6.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edbac.   v0:= temp;
#L0edbae.   return v0;

   }
    procedure [|int|] [|java:util:Date.getMinutes|] ([|java:util:Date|] v3 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.getMinutes:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0edbc0.   v0:= new [|java:util:GregorianCalendar|];
#L0edbc4.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edbc8.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edbce.   v1:= 12  @length 16;
#L0edbd2.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edbd8.   v0:= temp;
#L0edbda.   return v0;

   }
    procedure [|int|] [|java:util:Date.getMonth|] ([|java:util:Date|] v3 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.getMonth:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0edbec.   v0:= new [|java:util:GregorianCalendar|];
#L0edbf0.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edbf4.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edbfa.   v1:= 2  @length 4;
#L0edbfc.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edc02.   v0:= temp;
#L0edc04.   return v0;

   }
    procedure [|int|] [|java:util:Date.getSeconds|] ([|java:util:Date|] v3 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.getSeconds:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0edc18.   v0:= new [|java:util:GregorianCalendar|];
#L0edc1c.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edc20.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edc26.   v1:= 13  @length 16;
#L0edc2a.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edc30.   v0:= temp;
#L0edc32.   return v0;

   }
    procedure [|long|] [|java:util:Date.getTime|] ([|java:util:Date|] v2 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.getTime:()J|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0edc44.   v0:= v2.[|java:util:Date.milliseconds|]   @wide;
#L0edc48.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:Date.getTimezoneOffset|] ([|java:util:Date|] v3 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.getTimezoneOffset:()I|] @Access PUBLIC {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0007,L001a));

        v1;
        v2;
      
#L0edc5c.   v0:= new [|java:util:GregorianCalendar|];
#L0edc60.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edc64.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edc6a.   v1:= 15  @length 16;
#L0edc6e.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edc74.   v1:= temp;
#L0edc76.   v2:= 16  @length 16;
#L0edc7a.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v2) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edc80.   v2:= temp;
#L0edc82.   v1:= v1 + v2  @type int;
#L0edc84.   v1:= -v1  @type int;
#L0edc86.    v2:= 0.000000;
#L0edc8c.   v1:= v1 / v2  @type int;
#L0edc8e.   return v1;

   }
    procedure [|int|] [|java:util:Date.getYear|] ([|java:util:Date|] v3 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.getYear:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0edca0.   v0:= new [|java:util:GregorianCalendar|];
#L0edca4.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edca8.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edcae.   v1:= 1  @length 4;
#L0edcb0.   call temp:=  [|java:util:GregorianCalendar.get|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.get:(I)I|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edcb6.   v0:= temp;
#L0edcb8.   v0:= v0 + -1900;
#L0edcbc.   return v0;

   }
    procedure [|int|] [|java:util:Date.hashCode|] ([|java:util:Date|] v3 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0edcd0.   v0:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edcd4.   v2:= 32  @length 16;
#L0edcd8.   v0:= v0 ^>> v2  @type long;
#L0edcda.   v0:= (int)v0  @type l2i;
#L0edcdc.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edce0.   v1:= (int)v1  @type l2i;
#L0edce2.   v0:= v0 ^~ v1  @type int;
#L0edce4.   return v0;

   }
    procedure [|void|] [|java:util:Date.setDate|] ([|java:util:Date|] v3 @type (this), [|int|] v4) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.setDate:(I)V|] @Access PUBLIC {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0007,L0012));


        v1;
        v2;
      
#L0edcf8.   v0:= new [|java:util:GregorianCalendar|];
#L0edcfc.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edd00.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edd06.   v1:= 5  @length 4;
#L0edd08.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v4) @signature [|Ljava/util/GregorianCalendar;.set:(II)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edd0e.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edd14.   v1:= temp  @type wide;
#L0edd16.   v3.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0edd1a.   return @void ;

   }
    procedure [|void|] [|java:util:Date.setHours|] ([|java:util:Date|] v3 @type (this), [|int|] v4) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.setHours:(I)V|] @Access PUBLIC {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0007,L0013));


        v1;
        v2;
      
#L0edd2c.   v0:= new [|java:util:GregorianCalendar|];
#L0edd30.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edd34.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edd3a.   v1:= 11  @length 16;
#L0edd3e.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v4) @signature [|Ljava/util/GregorianCalendar;.set:(II)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edd44.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edd4a.   v1:= temp  @type wide;
#L0edd4c.   v3.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0edd50.   return @void ;

   }
    procedure [|void|] [|java:util:Date.setMinutes|] ([|java:util:Date|] v3 @type (this), [|int|] v4) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.setMinutes:(I)V|] @Access PUBLIC {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0007,L0013));


        v1;
        v2;
      
#L0edd64.   v0:= new [|java:util:GregorianCalendar|];
#L0edd68.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edd6c.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edd72.   v1:= 12  @length 16;
#L0edd76.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v4) @signature [|Ljava/util/GregorianCalendar;.set:(II)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edd7c.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edd82.   v1:= temp  @type wide;
#L0edd84.   v3.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0edd88.   return @void ;

   }
    procedure [|void|] [|java:util:Date.setMonth|] ([|java:util:Date|] v3 @type (this), [|int|] v4) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.setMonth:(I)V|] @Access PUBLIC {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0007,L0012));


        v1;
        v2;
      
#L0edd9c.   v0:= new [|java:util:GregorianCalendar|];
#L0edda0.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0edda4.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0eddaa.   v1:= 2  @length 4;
#L0eddac.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v4) @signature [|Ljava/util/GregorianCalendar;.set:(II)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0eddb2.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0eddb8.   v1:= temp  @type wide;
#L0eddba.   v3.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0eddbe.   return @void ;

   }
    procedure [|void|] [|java:util:Date.setSeconds|] ([|java:util:Date|] v3 @type (this), [|int|] v4) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.setSeconds:(I)V|] @Access PUBLIC {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0007,L0013));


        v1;
        v2;
      
#L0eddd0.   v0:= new [|java:util:GregorianCalendar|];
#L0eddd4.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0eddd8.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0eddde.   v1:= 13  @length 16;
#L0edde2.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v4) @signature [|Ljava/util/GregorianCalendar;.set:(II)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0edde8.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0eddee.   v1:= temp  @type wide;
#L0eddf0.   v3.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0eddf4.   return @void ;

   }
    procedure [|void|] [|java:util:Date.setTime|] ([|java:util:Date|] v0 @type (this), [|long|] v1) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.setTime:(J)V|] @Access PUBLIC {
      local temp ;


      
#L0ede08.   v0.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0ede0c.   return @void ;

   }
    procedure [|void|] [|java:util:Date.setYear|] ([|java:util:Date|] v3 @type (this), [|int|] v4) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.setYear:(I)V|] @Access PUBLIC {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|cal|] @scope ((L0007,L0014));


        v1;
        v2;
      
#L0ede20.   v0:= new [|java:util:GregorianCalendar|];
#L0ede24.   v1:= v3.[|java:util:Date.milliseconds|]   @wide;
#L0ede28.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0ede2e.   v1:= 1  @length 4;
#L0ede30.   v2:= v4 + 1900;
#L0ede34.   call temp:=  [|java:util:GregorianCalendar.set|](v0, v1, v2) @signature [|Ljava/util/GregorianCalendar;.set:(II)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ede3a.   call temp:=  [|java:util:GregorianCalendar.getTimeInMillis|](v0) @signature [|Ljava/util/GregorianCalendar;.getTimeInMillis:()J|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ede40.   v1:= temp  @type wide;
#L0ede42.   v3.[|java:util:Date.milliseconds|]  := v1 @wide;
#L0ede46.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:Date.toGMTString|] ([|java:util:Date|] v5 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.toGMTString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|java:util:GregorianCalendar|] v0 @varname [|gc|] @scope ((L0017,L0021));
        [|java:util:TimeZone|] v1 @varname [|gmtZone|] @scope ((L000f,L0021));
        [|java:text:SimpleDateFormat|] v2 @varname [|sdf|] @scope ((L0009,L0021));

        v3;
        v4;
      
#L0ede58.   v2:= new [|java:text:SimpleDateFormat|];
#L0ede5c.   v3:= "d MMM y HH:mm:ss 'GMT'" @type (object, string);
#L0ede60.   v4:= @@[|java:util:Locale.US|]   @type object;
#L0ede64.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v2, v3, v4) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0ede6a.   v3:= "GMT" @type (object, string);
#L0ede6e.   call temp:=  [|java:util:TimeZone.getTimeZone|](v3) @signature [|Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;|] @classDescriptor [|java:util:TimeZone|] @type static;
#L0ede74.   v1:= temp  @type object;
#L0ede76.   call temp:=  [|java:text:SimpleDateFormat.setTimeZone|](v2, v1) @signature [|Ljava/text/SimpleDateFormat;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0ede7c.   v0:= new [|java:util:GregorianCalendar|];
#L0ede80.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v1) @signature [|Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0ede86.   v3:= v5.[|java:util:Date.milliseconds|]   @wide;
#L0ede8a.   call temp:=  [|java:util:GregorianCalendar.setTimeInMillis|](v0, v3, v4) @signature [|Ljava/util/GregorianCalendar;.setTimeInMillis:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type virtual;
#L0ede90.   call temp:=  [|java:text:SimpleDateFormat.format|](v2, v5) @signature [|Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0ede96.   v3:= temp  @type object;
#L0ede98.   return v3  @type object;

   }
    procedure [|java:lang:String|] [|java:util:Date.toLocaleString|] ([|java:util:Date|] v1 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.toLocaleString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0edeac.   call temp:=  [|java:text:DateFormat.getDateTimeInstance|]() @signature [|Ljava/text/DateFormat;.getDateTimeInstance:()Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0edeb2.   v0:= temp  @type object;
#L0edeb4.   call temp:=  [|java:text:DateFormat.format|](v0, v1) @signature [|Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;|] @classDescriptor [|java:text:DateFormat|] @type virtual;
#L0edeba.   v0:= temp  @type object;
#L0edebc.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:Date.toString|] ([|java:util:Date|] v8 @type (this)) @owner [|java:util:Date|] @signature [|Ljava/util/Date;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|java:util:Calendar|] v0 @varname [|cal|] @scope ((L0011,L0083));
        [|libcore:icu:LocaleData|] v1 @varname [|localeData|] @scope ((L000a,L0083));
        [|java:lang:StringBuilder|] v2 @varname [|result|] @scope ((L001a,L0083));
        [|java:util:TimeZone|] v3 @varname [|tz|] @scope ((L0015,L0083));

        v4;
        v5;
        v6;
        v7;
      
#L0eded0.   v7:= 58  @length 16;
#L0eded4.   v6:= 32  @length 16;
#L0eded8.   v4:= @@[|java:util:Locale.US|]   @type object;
#L0ededc.   call temp:=  [|libcore:icu:LocaleData.get|](v4) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0edee2.   v1:= temp  @type object;
#L0edee4.   v0:= new [|java:util:GregorianCalendar|];
#L0edee8.   v4:= v8.[|java:util:Date.milliseconds|]   @wide;
#L0edeec.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v4, v5) @signature [|Ljava/util/GregorianCalendar;.<init>:(J)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0edef2.   call temp:=  [|java:util:Calendar.getTimeZone|](v0) @signature [|Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0edef8.   v3:= temp  @type object;
#L0edefa.   v2:= new [|java:lang:StringBuilder|];
#L0edefe.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0edf04.   v4:= v1.[|libcore:icu:LocaleData.shortWeekdayNames|]   @type object;
#L0edf08.   v5:= 7  @length 4;
#L0edf0a.   call temp:=  [|java:util:Calendar.get|](v0, v5) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0edf10.   v5:= temp;
#L0edf12.   v4:= v4[v5]  @type object;
#L0edf16.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edf1c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edf22.   v4:= v1.[|libcore:icu:LocaleData.shortMonthNames|]   @type object;
#L0edf26.   v5:= 2  @length 4;
#L0edf28.   call temp:=  [|java:util:Calendar.get|](v0, v5) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0edf2e.   v5:= temp;
#L0edf30.   v4:= v4[v5]  @type object;
#L0edf34.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edf3a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edf40.   v4:= 5  @length 4;
#L0edf42.   call temp:=  [|java:util:Calendar.get|](v0, v4) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0edf48.   v4:= temp;
#L0edf4a.   call temp:=  [|java:util:Date.appendTwoDigits|](v2, v4) @signature [|Ljava/util/Date;.appendTwoDigits:(Ljava/lang/StringBuilder;I)V|] @classDescriptor [|java:util:Date|] @type static;
#L0edf50.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edf56.   v4:= 11  @length 16;
#L0edf5a.   call temp:=  [|java:util:Calendar.get|](v0, v4) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0edf60.   v4:= temp;
#L0edf62.   call temp:=  [|java:util:Date.appendTwoDigits|](v2, v4) @signature [|Ljava/util/Date;.appendTwoDigits:(Ljava/lang/StringBuilder;I)V|] @classDescriptor [|java:util:Date|] @type static;
#L0edf68.   call temp:=  [|java:lang:StringBuilder.append|](v2, v7) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edf6e.   v4:= 12  @length 16;
#L0edf72.   call temp:=  [|java:util:Calendar.get|](v0, v4) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0edf78.   v4:= temp;
#L0edf7a.   call temp:=  [|java:util:Date.appendTwoDigits|](v2, v4) @signature [|Ljava/util/Date;.appendTwoDigits:(Ljava/lang/StringBuilder;I)V|] @classDescriptor [|java:util:Date|] @type static;
#L0edf80.   call temp:=  [|java:lang:StringBuilder.append|](v2, v7) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edf86.   v4:= 13  @length 16;
#L0edf8a.   call temp:=  [|java:util:Calendar.get|](v0, v4) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0edf90.   v4:= temp;
#L0edf92.   call temp:=  [|java:util:Date.appendTwoDigits|](v2, v4) @signature [|Ljava/util/Date;.appendTwoDigits:(Ljava/lang/StringBuilder;I)V|] @classDescriptor [|java:util:Date|] @type static;
#L0edf98.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edf9e.   call temp:=  [|java:util:TimeZone.inDaylightTime|](v3, v8) @signature [|Ljava/util/TimeZone;.inDaylightTime:(Ljava/util/Date;)Z|] @classDescriptor [|java:util:TimeZone|] @type virtual;
#L0edfa4.   v4:= temp;
#L0edfa6.   v5:= 0  @length 4;
#L0edfa8.   call temp:=  [|java:util:TimeZone.getDisplayName|](v3, v4, v5) @signature [|Ljava/util/TimeZone;.getDisplayName:(ZI)Ljava/lang/String;|] @classDescriptor [|java:util:TimeZone|] @type virtual;
#L0edfae.   v4:= temp  @type object;
#L0edfb0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edfb6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edfbc.   v4:= 1  @length 4;
#L0edfbe.   call temp:=  [|java:util:Calendar.get|](v0, v4) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0edfc4.   v4:= temp;
#L0edfc6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edfcc.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0edfd2.   v4:= temp  @type object;
#L0edfd4.   return v4  @type object;

   }
record [|java:sql:Date|]  @type class @AccessFlag PUBLIC  extends [|java:util:Date|] {
   }
      global [|java:lang:String|] @@[|java:sql:Date.PADDING|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:sql:Date.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:Date.<init>|] ([|java:sql:Date|] v0 @type (this), [|int|] v1, [|int|] v2, [|int|] v3) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.<init>:(III)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0edfe8.   call temp:=  [|java:util:Date.<init>|](v0, v1, v2, v3) @signature [|Ljava/util/Date;.<init>:(III)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0edfee.   return @void ;

   }
    procedure [|void|] [|java:sql:Date.<init>|] ([|java:sql:Date|] v2 @type (this), [|long|] v3) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.<init>:(J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0ee000.   call temp:=  [|java:sql:Date.normalizeTime|](v3, v4) @signature [|Ljava/sql/Date;.normalizeTime:(J)J|] @classDescriptor [|java:sql:Date|] @type static;
#L0ee006.   v0:= temp  @type wide;
#L0ee008.   call temp:=  [|java:util:Date.<init>|](v2, v0, v1) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ee00e.   return @void ;

   }
    procedure [|void|] [|java:sql:Date.format|] ([|java:sql:Date|] v4 @type (this), [|int|] v5, [|int|] v6, [|java:lang:StringBuilder|] v7 @type (object)) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.format:(IILjava/lang/StringBuilder;)V|] @Access PRIVATE {
      local temp ;
        [|java:lang:String|] v0 @varname [|str|] @scope ((L0004,L0020));




        v1;
        v2;
        v3;
      
#L0ee020.   call temp:=  [|java:lang:String.valueOf|](v5) @signature [|Ljava/lang/String;.valueOf:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L0ee026.   v0:= temp  @type object;
#L0ee028.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee02e.   v1:= temp;
#L0ee030.   v1:= v6 - v1  @type int;
#L0ee034.   if v1 <= 0 then goto L0ee058;
#L0ee038.   v1:= "0000" @type (object, string);
#L0ee03c.   v2:= 0  @length 4;
#L0ee03e.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee044.   v3:= temp;
#L0ee046.   v3:= v6 - v3  @type int;
#L0ee04a.   call temp:=  [|java:lang:String.substring|](v1, v2, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee050.   v1:= temp  @type object;
#L0ee052.   call temp:=  [|java:lang:StringBuilder.append|](v7, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ee058.   call temp:=  [|java:lang:StringBuilder.append|](v7, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ee05e.   return @void ;

   }
    procedure [|long|] [|java:sql:Date.normalizeTime|] ([|long|] v0) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.normalizeTime:(J)J|] @Access PRIVATE_STATIC {
      local temp ;

      
#L0ee070.   return v0  @type wide;

   }
    procedure [|java:sql:Date|] [|java:sql:Date.valueOf|] ([|java:lang:String|] v8 @type (object)) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.valueOf:(Ljava/lang/String;)Ljava/sql/Date;|] @Access PUBLIC_STATIC {
      local temp ;
        [|int|] v0 @varname [|day|] @scope ((L0048,L0052));
        [|int|] v1 @varname [|firstIndex|] @scope ((L000e,L0052));
        [|int|] v2 @varname [|month|] @scope ((L003a,L0052));
        [|int|] v3 @varname [|secondIndex|] @scope ((L0014,L0052));
        [|int|] v4 @varname [|year|] @scope ((L0030,L0052));

        v5;
        v6;
        v7;
      
#L0ee084.   v6:= 45  @length 16;
#L0ee088.   if v8 != 0 then goto L0ee098;
#L0ee08c.   v5:= new [|java:lang:IllegalArgumentException|];
#L0ee090.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ee096.   throw v5;
#L0ee098.   call temp:=  [|java:lang:String.indexOf|](v8, v6) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee09e.   v1:= temp;
#L0ee0a0.   v5:= v1 + 1;
#L0ee0a4.   call temp:=  [|java:lang:String.indexOf|](v8, v6, v5) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee0aa.   v3:= temp;
#L0ee0ac.   v5:= -1  @length 4;
#L0ee0ae.   if v3 == v5 then goto L0ee0c6;
#L0ee0b2.   if v1 == 0 then goto L0ee0c6;
#L0ee0b6.   v5:= v3 + 1;
#L0ee0ba.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee0c0.   v6:= temp;
#L0ee0c2.   if v5 != v6 then goto L0ee0d2;
#L0ee0c6.   v5:= new [|java:lang:IllegalArgumentException|];
#L0ee0ca.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ee0d0.   throw v5;
#L0ee0d2.   v5:= 0  @length 4;
#L0ee0d4.   call temp:=  [|java:lang:String.substring|](v8, v5, v1) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee0da.   v5:= temp  @type object;
#L0ee0dc.   call temp:=  [|java:lang:Integer.parseInt|](v5) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ee0e2.   v4:= temp;
#L0ee0e4.   v5:= v1 + 1;
#L0ee0e8.   call temp:=  [|java:lang:String.substring|](v8, v5, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee0ee.   v5:= temp  @type object;
#L0ee0f0.   call temp:=  [|java:lang:Integer.parseInt|](v5) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ee0f6.   v2:= temp;
#L0ee0f8.   v5:= v3 + 1;
#L0ee0fc.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee102.   v6:= temp;
#L0ee104.   call temp:=  [|java:lang:String.substring|](v8, v5, v6) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee10a.   v5:= temp  @type object;
#L0ee10c.   call temp:=  [|java:lang:Integer.parseInt|](v5) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ee112.   v0:= temp;
#L0ee114.   v5:= new [|java:sql:Date|];
#L0ee118.   v6:= v4 + -1900;
#L0ee11c.   v7:= v2 + -1;
#L0ee120.   call temp:=  [|java:sql:Date.<init>|](v5, v6, v7, v0) @signature [|Ljava/sql/Date;.<init>:(III)V|] @classDescriptor [|java:sql:Date|] @type direct;
#L0ee126.   return v5  @type object;

   }
    procedure [|int|] [|java:sql:Date.getHours|] ([|java:sql:Date|] v1 @type (this)) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.getHours:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ee138.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ee13c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ee142.   throw v0;

   }
    procedure [|int|] [|java:sql:Date.getMinutes|] ([|java:sql:Date|] v1 @type (this)) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.getMinutes:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ee154.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ee158.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ee15e.   throw v0;

   }
    procedure [|int|] [|java:sql:Date.getSeconds|] ([|java:sql:Date|] v1 @type (this)) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.getSeconds:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ee170.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ee174.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ee17a.   throw v0;

   }
    procedure [|void|] [|java:sql:Date.setHours|] ([|java:sql:Date|] v1 @type (this), [|int|] v2) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.setHours:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0ee18c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ee190.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ee196.   throw v0;

   }
    procedure [|void|] [|java:sql:Date.setMinutes|] ([|java:sql:Date|] v1 @type (this), [|int|] v2) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.setMinutes:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0ee1a8.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ee1ac.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ee1b2.   throw v0;

   }
    procedure [|void|] [|java:sql:Date.setSeconds|] ([|java:sql:Date|] v1 @type (this), [|int|] v2) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.setSeconds:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0ee1c4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ee1c8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ee1ce.   throw v0;

   }
    procedure [|void|] [|java:sql:Date.setTime|] ([|java:sql:Date|] v2 @type (this), [|long|] v3) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.setTime:(J)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0ee1e0.   call temp:=  [|java:sql:Date.normalizeTime|](v3, v4) @signature [|Ljava/sql/Date;.normalizeTime:(J)J|] @classDescriptor [|java:sql:Date|] @type static;
#L0ee1e6.   v0:= temp  @type wide;
#L0ee1e8.   call temp:=  [|java:util:Date.setTime|](v2, v0, v1) @signature [|Ljava/util/Date;.setTime:(J)V|] @classDescriptor [|java:util:Date|] @type super;
#L0ee1ee.   return @void ;

   }
    procedure [|java:lang:String|] [|java:sql:Date.toString|] ([|java:sql:Date|] v5 @type (this)) @owner [|java:sql:Date|] @signature [|Ljava/sql/Date;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|java:lang:StringBuilder|] v0 @varname [|sb|] @scope ((L000a,L002f));

        v1;
        v2;
        v3;
        v4;
      
#L0ee200.   v4:= 45  @length 16;
#L0ee204.   v3:= 2  @length 4;
#L0ee206.   v0:= new [|java:lang:StringBuilder|];
#L0ee20a.   v1:= 10  @length 16;
#L0ee20e.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ee214.   call temp:=  [|java:sql:Date.getYear|](v5) @signature [|Ljava/sql/Date;.getYear:()I|] @classDescriptor [|java:sql:Date|] @type virtual;
#L0ee21a.   v1:= temp;
#L0ee21c.   v1:= v1 + 1900;
#L0ee220.   v2:= 4  @length 4;
#L0ee222.   call temp:=  [|java:sql:Date.format|](v5, v1, v2, v0) @signature [|Ljava/sql/Date;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Date|] @type direct;
#L0ee228.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ee22e.   call temp:=  [|java:sql:Date.getMonth|](v5) @signature [|Ljava/sql/Date;.getMonth:()I|] @classDescriptor [|java:sql:Date|] @type virtual;
#L0ee234.   v1:= temp;
#L0ee236.   v1:= v1 + 1;
#L0ee23a.   call temp:=  [|java:sql:Date.format|](v5, v1, v3, v0) @signature [|Ljava/sql/Date;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Date|] @type direct;
#L0ee240.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ee246.   call temp:=  [|java:sql:Date.getDate|](v5) @signature [|Ljava/sql/Date;.getDate:()I|] @classDescriptor [|java:sql:Date|] @type virtual;
#L0ee24c.   v1:= temp;
#L0ee24e.   call temp:=  [|java:sql:Date.format|](v5, v1, v3, v0) @signature [|Ljava/sql/Date;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Date|] @type direct;
#L0ee254.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ee25a.   v1:= temp  @type object;
#L0ee25c.   return v1  @type object;

   }
record [|java:sql:Driver|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|java:sql:Driver.acceptsURL|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:Driver|] @signature [|Ljava/sql/Driver;.acceptsURL:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Connection|] [|java:sql:Driver.connect|] ([|java:lang:String|] v0 @type (object), [|java:util:Properties|] v1 @type (object)) @owner [|java:sql:Driver|] @signature [|Ljava/sql/Driver;.connect:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Driver.getMajorVersion|] () @owner [|java:sql:Driver|] @signature [|Ljava/sql/Driver;.getMajorVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:Driver.getMinorVersion|] () @owner [|java:sql:Driver|] @signature [|Ljava/sql/Driver;.getMinorVersion:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:DriverPropertyInfo|][] [|java:sql:Driver.getPropertyInfo|] ([|java:lang:String|] v0 @type (object), [|java:util:Properties|] v1 @type (object)) @owner [|java:sql:Driver|] @signature [|Ljava/sql/Driver;.getPropertyInfo:(Ljava/lang/String;Ljava/util/Properties;)[Ljava/sql/DriverPropertyInfo;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:Driver.jdbcCompliant|] () @owner [|java:sql:Driver|] @signature [|Ljava/sql/Driver;.jdbcCompliant:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:DriverManager|]  @type class @AccessFlag PUBLIC  {
   }
      global [|java:sql:SQLPermission|] @@[|java:sql:DriverManager.logPermission|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:sql:DriverManager.loginTimeout|]    @AccessFlag PRIVATE_STATIC;
      global [|java:util:List|] @@[|java:sql:DriverManager.theDrivers|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:io:PrintStream|] @@[|java:sql:DriverManager.thePrintStream|]    @AccessFlag PRIVATE_STATIC;
      global [|java:io:PrintWriter|] @@[|java:sql:DriverManager.thePrintWriter|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:sql:DriverManager.<clinit>|] () @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0ee270.   v0:= 0  @length 4;
#L0ee272.   @@[|java:sql:DriverManager.loginTimeout|] := v0;
#L0ee276.   v0:= new [|java:util:ArrayList|];
#L0ee27a.   v1:= 10  @length 16;
#L0ee27e.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0ee284.   @@[|java:sql:DriverManager.theDrivers|] := v0  @type object;
#L0ee288.   v0:= new [|java:sql:SQLPermission|];
#L0ee28c.   v1:= "setLog" @type (object, string);
#L0ee290.   call temp:=  [|java:sql:SQLPermission.<init>|](v0, v1) @signature [|Ljava/sql/SQLPermission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:sql:SQLPermission|] @type direct;
#L0ee296.   @@[|java:sql:DriverManager.logPermission|] := v0  @type object;
#L0ee29a.   call temp:=  [|java:sql:DriverManager.loadInitialDrivers|]() @signature [|Ljava/sql/DriverManager;.loadInitialDrivers:()V|] @classDescriptor [|java:sql:DriverManager|] @type static;
#L0ee2a0.   return @void ;

   }
    procedure [|void|] [|java:sql:DriverManager.<init>|] ([|java:sql:DriverManager|] v0 @type (this)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;

      
#L0ee2b4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ee2ba.   return @void ;

   }
    procedure [|void|] [|java:sql:DriverManager.deregisterDriver|] ([|java:sql:Driver|] v3 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.deregisterDriver:(Ljava/sql/Driver;)V|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:lang:ClassLoader|] v0 @varname [|callerClassLoader|] @scope ((L0007,L0022));

        v1;
        v2;
      
#L0ee2cc.   if v3 != 0 then goto L0ee2d2;
#L0ee2d0.   return @void ;
#L0ee2d2.   call temp:=  [|dalvik:system:VMStack.getCallingClassLoader|]() @signature [|Ldalvik/system/VMStack;.getCallingClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L0ee2d8.   v0:= temp  @type object;
#L0ee2da.   call temp:=  [|java:sql:DriverManager.isClassFromClassLoader|](v3, v0) @signature [|Ljava/sql/DriverManager;.isClassFromClassLoader:(Ljava/lang/Object;Ljava/lang/ClassLoader;)Z|] @classDescriptor [|java:sql:DriverManager|] @type static;
#L0ee2e0.   v1:= temp;
#L0ee2e2.   if v1 != 0 then goto L0ee2f6;
#L0ee2e6.   v1:= new [|java:lang:SecurityException|];
#L0ee2ea.   v2:= "calling class not authorized to deregister JDBC driver" @type (object, string);
#L0ee2ee.   call temp:=  [|java:lang:SecurityException.<init>|](v1, v2) @signature [|Ljava/lang/SecurityException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:SecurityException|] @type direct;
#L0ee2f4.   throw v1;
#L0ee2f6.   v2:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee2fa.   (@monitorenter v2)
#L0ee2fc.   v1:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee300.   call temp:=  [|java:util:List.remove|](v1, v3) @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0ee306.   (@monitorexit v2)
#L0ee308.   goto L0ee2d0;
#L0ee30a.   v1:= Exception  @type object;
#L0ee30c.   (@monitorexit v2)
#L0ee30e.   throw v1;
  catch  [|any|] @[L0ee2fc..L0ee30e] goto L0ee30a;

   }
    procedure [|java:sql:Connection|] [|java:sql:DriverManager.getConnection|] ([|java:lang:String|] v1 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.getConnection:(Ljava/lang/String;)Ljava/sql/Connection;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L0ee32c.   v0:= new [|java:util:Properties|];
#L0ee330.   call temp:=  [|java:util:Properties.<init>|](v0) @signature [|Ljava/util/Properties;.<init>:()V|] @classDescriptor [|java:util:Properties|] @type direct;
#L0ee336.   call temp:=  [|java:sql:DriverManager.getConnection|](v1, v0) @signature [|Ljava/sql/DriverManager;.getConnection:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;|] @classDescriptor [|java:sql:DriverManager|] @type static;
#L0ee33c.   v0:= temp  @type object;
#L0ee33e.   return v0  @type object;

   }
    procedure [|java:sql:Connection|] [|java:sql:DriverManager.getConnection|] ([|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.getConnection:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:util:Properties|] v0 @varname [|theProperties|] @scope ((L0005,L0018));



        v1;
      
#L0ee350.   v0:= new [|java:util:Properties|];
#L0ee354.   call temp:=  [|java:util:Properties.<init>|](v0) @signature [|Ljava/util/Properties;.<init>:()V|] @classDescriptor [|java:util:Properties|] @type direct;
#L0ee35a.   if v3 == 0 then goto L0ee368;
#L0ee35e.   v1:= "user" @type (object, string);
#L0ee362.   call temp:=  [|java:util:Properties.setProperty|](v0, v1, v3) @signature [|Ljava/util/Properties;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ee368.   if v4 == 0 then goto L0ee376;
#L0ee36c.   v1:= "password" @type (object, string);
#L0ee370.   call temp:=  [|java:util:Properties.setProperty|](v0, v1, v4) @signature [|Ljava/util/Properties;.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;|] @classDescriptor [|java:util:Properties|] @type virtual;
#L0ee376.   call temp:=  [|java:sql:DriverManager.getConnection|](v2, v0) @signature [|Ljava/sql/DriverManager;.getConnection:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;|] @classDescriptor [|java:sql:DriverManager|] @type static;
#L0ee37c.   v1:= temp  @type object;
#L0ee37e.   return v1  @type object;

   }
    procedure [|java:sql:Connection|] [|java:sql:DriverManager.getConnection|] ([|java:lang:String|] v6 @type (object), [|java:util:Properties|] v7 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.getConnection:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:sql:Connection|] v2 @varname [|theConnection|] @scope ((L0025,L0029));
        [|java:sql:Driver|] v3 @varname [|theDriver|] @scope ((L0021,L0029));
        [|java:util:Iterator|] v0 @varname [|i$|] @scope ((L0015,L0032));
        [|java:lang:String|] v1 @varname [|sqlState|] @scope ((L0002,L0035));


        v4;
        v5;
      
#L0ee390.   v1:= "08001" @type (object, string);
#L0ee394.   if v6 != 0 then goto L0ee3a8;
#L0ee398.   v4:= new [|java:sql:SQLException|];
#L0ee39c.   v5:= "The url cannot be null" @type (object, string);
#L0ee3a0.   call temp:=  [|java:sql:SQLException.<init>|](v4, v5, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee3a6.   throw v4;
#L0ee3a8.   v5:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee3ac.   (@monitorenter v5)
#L0ee3ae.   v4:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee3b2.   call temp:=  [|java:util:List.iterator|](v4) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0ee3b8.   v0:= temp  @type object;
#L0ee3ba.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ee3c0.   v4:= temp;
#L0ee3c2.   if v4 == 0 then goto L0ee3e2;
#L0ee3c6.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ee3cc.   v3:= temp  @type object;
#L0ee3ce.   v3:= ([|java:sql:Driver|])v3;
#L0ee3d2.   call temp:=  [|java:sql:Driver.connect|](v3, v6, v7) @signature [|Ljava/sql/Driver;.connect:(Ljava/lang/String;Ljava/util/Properties;)Ljava/sql/Connection;|] @classDescriptor [|java:sql:Driver|] @type interface;
#L0ee3d8.   v2:= temp  @type object;
#L0ee3da.   if v2 == 0 then goto L0ee3ba;
#L0ee3de.   (@monitorexit v5)
#L0ee3e0.   return v2  @type object;
#L0ee3e2.   (@monitorexit v5)
#L0ee3e4.   v4:= new [|java:sql:SQLException|];
#L0ee3e8.   v5:= "No suitable driver" @type (object, string);
#L0ee3ec.   call temp:=  [|java:sql:SQLException.<init>|](v4, v5, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee3f2.   throw v4;
#L0ee3f4.   v4:= Exception  @type object;
#L0ee3f6.   (@monitorexit v5)
#L0ee3f8.   throw v4;
  catch  [|any|] @[L0ee3ae..L0ee3e4] goto L0ee3f4;
  catch  [|any|] @[L0ee3f6..L0ee3f8] goto L0ee3f4;

   }
    procedure [|java:sql:Driver|] [|java:sql:DriverManager.getDriver|] ([|java:lang:String|] v6 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.getDriver:(Ljava/lang/String;)Ljava/sql/Driver;|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:sql:Driver|] v1 @varname [|driver|] @scope ((L0019,L0027));
        [|java:util:Iterator|] v2 @varname [|i$|] @scope ((L000d,L0032));
        [|java:lang:ClassLoader|] v0 @varname [|callerClassLoader|] @scope ((L0004,L0035));

        v3;
        v4;
        v5;
      
#L0ee420.   call temp:=  [|dalvik:system:VMStack.getCallingClassLoader|]() @signature [|Ldalvik/system/VMStack;.getCallingClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L0ee426.   v0:= temp  @type object;
#L0ee428.   v4:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee42c.   (@monitorenter v4)
#L0ee42e.   v3:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee432.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0ee438.   v2:= temp  @type object;
#L0ee43a.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ee440.   v3:= temp;
#L0ee442.   if v3 == 0 then goto L0ee46e;
#L0ee446.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ee44c.   v1:= temp  @type object;
#L0ee44e.   v1:= ([|java:sql:Driver|])v1;
#L0ee452.   call temp:=  [|java:sql:Driver.acceptsURL|](v1, v6) @signature [|Ljava/sql/Driver;.acceptsURL:(Ljava/lang/String;)Z|] @classDescriptor [|java:sql:Driver|] @type interface;
#L0ee458.   v3:= temp;
#L0ee45a.   if v3 == 0 then goto L0ee43a;
#L0ee45e.   call temp:=  [|java:sql:DriverManager.isClassFromClassLoader|](v1, v0) @signature [|Ljava/sql/DriverManager;.isClassFromClassLoader:(Ljava/lang/Object;Ljava/lang/ClassLoader;)Z|] @classDescriptor [|java:sql:DriverManager|] @type static;
#L0ee464.   v3:= temp;
#L0ee466.   if v3 == 0 then goto L0ee43a;
#L0ee46a.   (@monitorexit v4)
#L0ee46c.   return v1  @type object;
#L0ee46e.   (@monitorexit v4)
#L0ee470.   v3:= new [|java:sql:SQLException|];
#L0ee474.   v4:= "No suitable driver" @type (object, string);
#L0ee478.   v5:= "08001" @type (object, string);
#L0ee47c.   call temp:=  [|java:sql:SQLException.<init>|](v3, v4, v5) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee482.   throw v3;
#L0ee484.   v3:= Exception  @type object;
#L0ee486.   (@monitorexit v4)
#L0ee488.   throw v3;
  catch  [|any|] @[L0ee42e..L0ee470] goto L0ee484;
  catch  [|any|] @[L0ee486..L0ee488] goto L0ee484;

   }
    procedure [|java:util:Enumeration|] [|java:sql:DriverManager.getDrivers|] () @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.getDrivers:()Ljava/util/Enumeration;|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:sql:Driver|] v1 @varname [|driver|] @scope ((L001e,L0028));
        [|java:util:Iterator|] v2 @varname [|i$|] @scope ((L0012,L0028), (L002b,L0031));
        [|java:util:ArrayList|] v3 @varname [|result|] @scope ((L000c,L0028), (L002b,L0031));
        [|java:lang:ClassLoader|] v0 @varname [|callerClassLoader|] @scope ((L0004,L0031));
        v4;
        v5;
      
#L0ee4b0.   call temp:=  [|dalvik:system:VMStack.getCallingClassLoader|]() @signature [|Ldalvik/system/VMStack;.getCallingClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|dalvik:system:VMStack|] @type static;
#L0ee4b6.   v0:= temp  @type object;
#L0ee4b8.   v5:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee4bc.   (@monitorenter v5)
#L0ee4be.   v3:= new [|java:util:ArrayList|];
#L0ee4c2.   call temp:=  [|java:util:ArrayList.<init>|](v3) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0ee4c8.   v4:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee4cc.   call temp:=  [|java:util:List.iterator|](v4) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0ee4d2.   v2:= temp  @type object;
#L0ee4d4.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ee4da.   v4:= temp;
#L0ee4dc.   if v4 == 0 then goto L0ee506;
#L0ee4e0.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0ee4e6.   v1:= temp  @type object;
#L0ee4e8.   v1:= ([|java:sql:Driver|])v1;
#L0ee4ec.   call temp:=  [|java:sql:DriverManager.isClassFromClassLoader|](v1, v0) @signature [|Ljava/sql/DriverManager;.isClassFromClassLoader:(Ljava/lang/Object;Ljava/lang/ClassLoader;)Z|] @classDescriptor [|java:sql:DriverManager|] @type static;
#L0ee4f2.   v4:= temp;
#L0ee4f4.   if v4 == 0 then goto L0ee4d4;
#L0ee4f8.   call temp:=  [|java:util:ArrayList.add|](v3, v1) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0ee4fe.   goto L0ee4d4;
#L0ee500.   v4:= Exception  @type object;
#L0ee502.   (@monitorexit v5)
#L0ee504.   throw v4;
#L0ee506.   call temp:=  [|java:util:Collections.enumeration|](v3) @signature [|Ljava/util/Collections;.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;|] @classDescriptor [|java:util:Collections|] @type static;
#L0ee50c.   v4:= temp  @type object;
#L0ee50e.   (@monitorexit v5)
#L0ee510.   return v4  @type object;
  catch  [|any|] @[L0ee4be..L0ee504] goto L0ee500;
  catch  [|any|] @[L0ee506..L0ee510] goto L0ee500;

   }
    procedure [|java:io:PrintStream|] [|java:sql:DriverManager.getLogStream|] () @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.getLogStream:()Ljava/io/PrintStream;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ee538.   v0:= @@[|java:sql:DriverManager.thePrintStream|]   @type object;
#L0ee53c.   return v0  @type object;

   }
    procedure [|java:io:PrintWriter|] [|java:sql:DriverManager.getLogWriter|] () @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.getLogWriter:()Ljava/io/PrintWriter;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ee550.   v0:= @@[|java:sql:DriverManager.thePrintWriter|]   @type object;
#L0ee554.   return v0  @type object;

   }
    procedure [|int|] [|java:sql:DriverManager.getLoginTimeout|] () @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.getLoginTimeout:()I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ee568.   v0:= @@[|java:sql:DriverManager.loginTimeout|] ;
#L0ee56c.   return v0;

   }
    procedure [|boolean|] [|java:sql:DriverManager.isClassFromClassLoader|] ([|java:lang:Object|] v6 @type (object), [|java:lang:ClassLoader|] v7 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.isClassFromClassLoader:(Ljava/lang/Object;Ljava/lang/ClassLoader;)Z|] @Access PRIVATE_STATIC {
      local temp ;
        [|java:lang:Class|] v0 @varname [|checkClass|] @scope ((L0015,L0017));
        [|java:lang:Class|] v1 @varname [|objectClass|] @scope ((L000c,L001b));


        v2;
        v3;
        v4;
        v5;
      
#L0ee580.   v2:= 1  @length 4;
#L0ee582.   v3:= 0  @length 4;
#L0ee584.   if v6 == 0 then goto L0ee58c;
#L0ee588.   if v7 != 0 then goto L0ee590;
#L0ee58c.   v2:= v3;
#L0ee58e.   return v2;
#L0ee590.   call temp:=  [|java:lang:Object.getClass|](v6) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0ee596.   v1:= temp  @type object;
#L0ee598.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0ee59e.   v4:= temp  @type object;
#L0ee5a0.   v5:= 1  @length 4;
#L0ee5a2.   call temp:=  [|java:lang:Class.forName|](v4, v5, v7) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L0ee5a8.   v0:= temp  @type object;
#L0ee5aa.   if v0 == v1 then goto L0ee58e;
#L0ee5ae.   v2:= v3;
#L0ee5b0.   goto L0ee58e;
#L0ee5b2.   v2:= Exception  @type object;
#L0ee5b4.   goto L0ee5ae;
  catch  [|java:lang:Throwable|] @[L0ee598..L0ee5a8] goto L0ee5b2;

   }
    procedure [|void|] [|java:sql:DriverManager.loadInitialDrivers|] () @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.loadInitialDrivers:()V|] @Access PRIVATE_STATIC {
      local temp ;
        [|java:lang:String|][] v0 @varname [|arr$|] @scope ((L0011,L0024));
        [|java:lang:String|] v1 @varname [|element|] @scope ((L0017,L0024));
        [|int|] v2 @varname [|i$|] @scope ((L0013,L0024));
        [|int|] v3 @varname [|len$|] @scope ((L0012,L0024));
        [|java:lang:String|] v4 @varname [|theDriverList|] @scope ((L0007,L0024));
        [|java:lang:String|][] v5 @varname [|theDriverNames|] @scope ((L0010,L0024));
        v6;
        v7;
      
#L0ee5d8.   v6:= "jdbc.drivers" @type (object, string);
#L0ee5dc.   v7:= 0  @length 4;
#L0ee5de.   call temp:=  [|java:lang:System.getProperty|](v6, v7) @signature [|Ljava/lang/System;.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;|] @classDescriptor [|java:lang:System|] @type static;
#L0ee5e4.   v4:= temp  @type object;
#L0ee5e6.   if v4 != 0 then goto L0ee5ec;
#L0ee5ea.   return @void ;
#L0ee5ec.   v6:= ":" @type (object, string);
#L0ee5f0.   call temp:=  [|java:lang:String.split|](v4, v6) @signature [|Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ee5f6.   v5:= temp  @type object;
#L0ee5f8.   v0:= v5  @type object;
#L0ee5fa.   v3:= v0.length;
#L0ee5fc.   v2:= 0  @length 4;
#L0ee5fe.   if v2 >= v3 then goto L0ee5ea;
#L0ee602.   v1:= v0[v2]  @type object;
#L0ee606.   v6:= 1  @length 4;
#L0ee608.   call temp:=  [|java:lang:ClassLoader.getSystemClassLoader|]() @signature [|Ljava/lang/ClassLoader;.getSystemClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:ClassLoader|] @type static;
#L0ee60e.   v7:= temp  @type object;
#L0ee610.   call temp:=  [|java:lang:Class.forName|](v1, v6, v7) @signature [|Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type static;
#L0ee616.   v2:= v2 + 1;
#L0ee61a.   goto L0ee5fe;
#L0ee61c.   v6:= Exception  @type object;
#L0ee61e.   goto L0ee616;
  catch  [|java:lang:Throwable|] @[L0ee608..L0ee616] goto L0ee61c;

   }
    procedure [|void|] [|java:sql:DriverManager.println|] ([|java:lang:String|] v1 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.println:(Ljava/lang/String;)V|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L0ee640.   v0:= @@[|java:sql:DriverManager.thePrintWriter|]   @type object;
#L0ee644.   if v0 == 0 then goto L0ee65e;
#L0ee648.   v0:= @@[|java:sql:DriverManager.thePrintWriter|]   @type object;
#L0ee64c.   call temp:=  [|java:io:PrintWriter.println|](v0, v1) @signature [|Ljava/io/PrintWriter;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L0ee652.   v0:= @@[|java:sql:DriverManager.thePrintWriter|]   @type object;
#L0ee656.   call temp:=  [|java:io:PrintWriter.flush|](v0) @signature [|Ljava/io/PrintWriter;.flush:()V|] @classDescriptor [|java:io:PrintWriter|] @type virtual;
#L0ee65c.   return @void ;
#L0ee65e.   v0:= @@[|java:sql:DriverManager.thePrintStream|]   @type object;
#L0ee662.   if v0 == 0 then goto L0ee65c;
#L0ee666.   v0:= @@[|java:sql:DriverManager.thePrintStream|]   @type object;
#L0ee66a.   call temp:=  [|java:io:PrintStream.println|](v0, v1) @signature [|Ljava/io/PrintStream;.println:(Ljava/lang/String;)V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L0ee670.   v0:= @@[|java:sql:DriverManager.thePrintStream|]   @type object;
#L0ee674.   call temp:=  [|java:io:PrintStream.flush|](v0) @signature [|Ljava/io/PrintStream;.flush:()V|] @classDescriptor [|java:io:PrintStream|] @type virtual;
#L0ee67a.   goto L0ee65c;

   }
    procedure [|void|] [|java:sql:DriverManager.registerDriver|] ([|java:sql:Driver|] v2 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.registerDriver:(Ljava/sql/Driver;)V|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L0ee68c.   if v2 != 0 then goto L0ee6a0;
#L0ee690.   v0:= new [|java:lang:NullPointerException|];
#L0ee694.   v1:= "driver == null" @type (object, string);
#L0ee698.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0ee69e.   throw v0;
#L0ee6a0.   v1:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee6a4.   (@monitorenter v1)
#L0ee6a6.   v0:= @@[|java:sql:DriverManager.theDrivers|]   @type object;
#L0ee6aa.   call temp:=  [|java:util:List.add|](v0, v2) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0ee6b0.   (@monitorexit v1)
#L0ee6b2.   return @void ;
#L0ee6b4.   v0:= Exception  @type object;
#L0ee6b6.   (@monitorexit v1)
#L0ee6b8.   throw v0;
  catch  [|any|] @[L0ee6a6..L0ee6b8] goto L0ee6b4;

   }
    procedure [|void|] [|java:sql:DriverManager.setLogStream|] ([|java:io:PrintStream|] v0 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.setLogStream:(Ljava/io/PrintStream;)V|] @Access PUBLIC_STATIC {
      local temp ;

      
#L0ee6d8.   @@[|java:sql:DriverManager.thePrintStream|] := v0  @type object;
#L0ee6dc.   return @void ;

   }
    procedure [|void|] [|java:sql:DriverManager.setLogWriter|] ([|java:io:PrintWriter|] v0 @type (object)) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.setLogWriter:(Ljava/io/PrintWriter;)V|] @Access PUBLIC_STATIC {
      local temp ;

      
#L0ee6f0.   @@[|java:sql:DriverManager.thePrintWriter|] := v0  @type object;
#L0ee6f4.   return @void ;

   }
    procedure [|void|] [|java:sql:DriverManager.setLoginTimeout|] ([|int|] v0) @owner [|java:sql:DriverManager|] @signature [|Ljava/sql/DriverManager;.setLoginTimeout:(I)V|] @Access PUBLIC_STATIC {
      local temp ;

      
#L0ee708.   @@[|java:sql:DriverManager.loginTimeout|] := v0;
#L0ee70c.   return @void ;

   }
record [|java:sql:DriverPropertyInfo|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:String|][] [|java:sql:DriverPropertyInfo.choices|]    @AccessFlag PUBLIC;
      [|java:lang:String|] [|java:sql:DriverPropertyInfo.description|]    @AccessFlag PUBLIC;
      [|java:lang:String|] [|java:sql:DriverPropertyInfo.name|]    @AccessFlag PUBLIC;
      [|boolean|] [|java:sql:DriverPropertyInfo.required|]    @AccessFlag PUBLIC;
      [|java:lang:String|] [|java:sql:DriverPropertyInfo.value|]    @AccessFlag PUBLIC;
   }
    procedure [|void|] [|java:sql:DriverPropertyInfo.<init>|] ([|java:sql:DriverPropertyInfo|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:DriverPropertyInfo|] @signature [|Ljava/sql/DriverPropertyInfo;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0ee720.   v0:= 0  @length 4;
#L0ee722.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0ee728.   v1.[|java:sql:DriverPropertyInfo.name|]  := v2 @type object;
#L0ee72c.   v1.[|java:sql:DriverPropertyInfo.value|]  := v3 @type object;
#L0ee730.   v1.[|java:sql:DriverPropertyInfo.choices|]  := v0 @type object;
#L0ee734.   v1.[|java:sql:DriverPropertyInfo.description|]  := v0 @type object;
#L0ee738.   v0:= 0  @length 4;
#L0ee73a.   v1.[|java:sql:DriverPropertyInfo.required|]  := v0 @boolean;
#L0ee73e.   return @void ;

   }
record [|java:sql:NClob|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:sql:Clob|] {
   }
record [|java:sql:ParameterMetaData|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:sql:Wrapper|] {
   }
      global [|int|] @@[|java:sql:ParameterMetaData.parameterModeIn|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ParameterMetaData.parameterModeInOut|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ParameterMetaData.parameterModeOut|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ParameterMetaData.parameterModeUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ParameterMetaData.parameterNoNulls|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ParameterMetaData.parameterNullable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ParameterMetaData.parameterNullableUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|java:lang:String|] [|java:sql:ParameterMetaData.getParameterClassName|] ([|int|] v0) @owner [|java:sql:ParameterMetaData|] @signature [|Ljava/sql/ParameterMetaData;.getParameterClassName:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ParameterMetaData.getParameterCount|] () @owner [|java:sql:ParameterMetaData|] @signature [|Ljava/sql/ParameterMetaData;.getParameterCount:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ParameterMetaData.getParameterMode|] ([|int|] v0) @owner [|java:sql:ParameterMetaData|] @signature [|Ljava/sql/ParameterMetaData;.getParameterMode:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ParameterMetaData.getParameterType|] ([|int|] v0) @owner [|java:sql:ParameterMetaData|] @signature [|Ljava/sql/ParameterMetaData;.getParameterType:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ParameterMetaData.getParameterTypeName|] ([|int|] v0) @owner [|java:sql:ParameterMetaData|] @signature [|Ljava/sql/ParameterMetaData;.getParameterTypeName:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ParameterMetaData.getPrecision|] ([|int|] v0) @owner [|java:sql:ParameterMetaData|] @signature [|Ljava/sql/ParameterMetaData;.getPrecision:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ParameterMetaData.getScale|] ([|int|] v0) @owner [|java:sql:ParameterMetaData|] @signature [|Ljava/sql/ParameterMetaData;.getScale:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ParameterMetaData.isNullable|] ([|int|] v0) @owner [|java:sql:ParameterMetaData|] @signature [|Ljava/sql/ParameterMetaData;.isNullable:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ParameterMetaData.isSigned|] ([|int|] v0) @owner [|java:sql:ParameterMetaData|] @signature [|Ljava/sql/ParameterMetaData;.isSigned:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:Ref|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:String|] [|java:sql:Ref.getBaseTypeName|] () @owner [|java:sql:Ref|] @signature [|Ljava/sql/Ref;.getBaseTypeName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:Ref.getObject|] () @owner [|java:sql:Ref|] @signature [|Ljava/sql/Ref;.getObject:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:Ref.getObject|] ([|java:util:Map|] v0 @type (object)) @owner [|java:sql:Ref|] @signature [|Ljava/sql/Ref;.getObject:(Ljava/util/Map;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:Ref.setObject|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:sql:Ref|] @signature [|Ljava/sql/Ref;.setObject:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:ResultSet|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:sql:Wrapper|], [|java:lang:AutoCloseable|] {
   }
      global [|int|] @@[|java:sql:ResultSet.CLOSE_CURSORS_AT_COMMIT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSet.CONCUR_READ_ONLY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSet.CONCUR_UPDATABLE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSet.FETCH_FORWARD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSet.FETCH_REVERSE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSet.FETCH_UNKNOWN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSet.HOLD_CURSORS_OVER_COMMIT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSet.TYPE_FORWARD_ONLY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSet.TYPE_SCROLL_INSENSITIVE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSet.TYPE_SCROLL_SENSITIVE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|boolean|] [|java:sql:ResultSet.absolute|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.absolute:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.afterLast|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.afterLast:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.beforeFirst|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.beforeFirst:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.cancelRowUpdates|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.cancelRowUpdates:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.clearWarnings|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.clearWarnings:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.close|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.close:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.deleteRow|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.deleteRow:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSet.findColumn|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.findColumn:(Ljava/lang/String;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.first|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.first:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Array|] [|java:sql:ResultSet.getArray|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getArray:(I)Ljava/sql/Array;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Array|] [|java:sql:ResultSet.getArray|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getArray:(Ljava/lang/String;)Ljava/sql/Array;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:ResultSet.getAsciiStream|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getAsciiStream:(I)Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:ResultSet.getAsciiStream|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getAsciiStream:(Ljava/lang/String;)Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:math:BigDecimal|] [|java:sql:ResultSet.getBigDecimal|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBigDecimal:(I)Ljava/math/BigDecimal;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:math:BigDecimal|] [|java:sql:ResultSet.getBigDecimal|] ([|int|] v0, [|int|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBigDecimal:(II)Ljava/math/BigDecimal;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:math:BigDecimal|] [|java:sql:ResultSet.getBigDecimal|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:math:BigDecimal|] [|java:sql:ResultSet.getBigDecimal|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBigDecimal:(Ljava/lang/String;I)Ljava/math/BigDecimal;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:ResultSet.getBinaryStream|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBinaryStream:(I)Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:ResultSet.getBinaryStream|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBinaryStream:(Ljava/lang/String;)Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Blob|] [|java:sql:ResultSet.getBlob|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBlob:(I)Ljava/sql/Blob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Blob|] [|java:sql:ResultSet.getBlob|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBlob:(Ljava/lang/String;)Ljava/sql/Blob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.getBoolean|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBoolean:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.getBoolean|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBoolean:(Ljava/lang/String;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|] [|java:sql:ResultSet.getByte|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getByte:(I)B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|] [|java:sql:ResultSet.getByte|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getByte:(Ljava/lang/String;)B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|java:sql:ResultSet.getBytes|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBytes:(I)[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|java:sql:ResultSet.getBytes|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getBytes:(Ljava/lang/String;)[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:ResultSet.getCharacterStream|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getCharacterStream:(I)Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:ResultSet.getCharacterStream|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getCharacterStream:(Ljava/lang/String;)Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Clob|] [|java:sql:ResultSet.getClob|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getClob:(I)Ljava/sql/Clob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Clob|] [|java:sql:ResultSet.getClob|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getClob:(Ljava/lang/String;)Ljava/sql/Clob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSet.getConcurrency|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getConcurrency:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSet.getCursorName|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getCursorName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Date|] [|java:sql:ResultSet.getDate|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getDate:(I)Ljava/sql/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Date|] [|java:sql:ResultSet.getDate|] ([|int|] v0, [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getDate:(ILjava/util/Calendar;)Ljava/sql/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Date|] [|java:sql:ResultSet.getDate|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getDate:(Ljava/lang/String;)Ljava/sql/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Date|] [|java:sql:ResultSet.getDate|] ([|java:lang:String|] v0 @type (object), [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getDate:(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|double|] [|java:sql:ResultSet.getDouble|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getDouble:(I)D|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|double|] [|java:sql:ResultSet.getDouble|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getDouble:(Ljava/lang/String;)D|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSet.getFetchDirection|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getFetchDirection:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSet.getFetchSize|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getFetchSize:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|float|] [|java:sql:ResultSet.getFloat|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getFloat:(I)F|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|float|] [|java:sql:ResultSet.getFloat|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getFloat:(Ljava/lang/String;)F|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSet.getHoldability|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getHoldability:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSet.getInt|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getInt:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSet.getInt|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getInt:(Ljava/lang/String;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:sql:ResultSet.getLong|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getLong:(I)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:sql:ResultSet.getLong|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getLong:(Ljava/lang/String;)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:ResultSetMetaData|] [|java:sql:ResultSet.getMetaData|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getMetaData:()Ljava/sql/ResultSetMetaData;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:ResultSet.getNCharacterStream|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getNCharacterStream:(I)Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:ResultSet.getNCharacterStream|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getNCharacterStream:(Ljava/lang/String;)Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:NClob|] [|java:sql:ResultSet.getNClob|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getNClob:(I)Ljava/sql/NClob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:NClob|] [|java:sql:ResultSet.getNClob|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getNClob:(Ljava/lang/String;)Ljava/sql/NClob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSet.getNString|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getNString:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSet.getNString|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getNString:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:ResultSet.getObject|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getObject:(I)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:ResultSet.getObject|] ([|int|] v0, [|java:util:Map|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getObject:(ILjava/util/Map;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:ResultSet.getObject|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getObject:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:ResultSet.getObject|] ([|java:lang:String|] v0 @type (object), [|java:util:Map|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getObject:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Ref|] [|java:sql:ResultSet.getRef|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getRef:(I)Ljava/sql/Ref;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Ref|] [|java:sql:ResultSet.getRef|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getRef:(Ljava/lang/String;)Ljava/sql/Ref;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSet.getRow|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getRow:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:RowId|] [|java:sql:ResultSet.getRowId|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getRowId:(I)Ljava/sql/RowId;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:RowId|] [|java:sql:ResultSet.getRowId|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getRowId:(Ljava/lang/String;)Ljava/sql/RowId;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:SQLXML|] [|java:sql:ResultSet.getSQLXML|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getSQLXML:(I)Ljava/sql/SQLXML;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:SQLXML|] [|java:sql:ResultSet.getSQLXML|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getSQLXML:(Ljava/lang/String;)Ljava/sql/SQLXML;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|short|] [|java:sql:ResultSet.getShort|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getShort:(I)S|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|short|] [|java:sql:ResultSet.getShort|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getShort:(Ljava/lang/String;)S|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Statement|] [|java:sql:ResultSet.getStatement|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getStatement:()Ljava/sql/Statement;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSet.getString|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getString:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSet.getString|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getString:(Ljava/lang/String;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Time|] [|java:sql:ResultSet.getTime|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getTime:(I)Ljava/sql/Time;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Time|] [|java:sql:ResultSet.getTime|] ([|int|] v0, [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getTime:(ILjava/util/Calendar;)Ljava/sql/Time;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Time|] [|java:sql:ResultSet.getTime|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getTime:(Ljava/lang/String;)Ljava/sql/Time;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Time|] [|java:sql:ResultSet.getTime|] ([|java:lang:String|] v0 @type (object), [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getTime:(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Time;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Timestamp|] [|java:sql:ResultSet.getTimestamp|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getTimestamp:(I)Ljava/sql/Timestamp;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Timestamp|] [|java:sql:ResultSet.getTimestamp|] ([|int|] v0, [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getTimestamp:(ILjava/util/Calendar;)Ljava/sql/Timestamp;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Timestamp|] [|java:sql:ResultSet.getTimestamp|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getTimestamp:(Ljava/lang/String;)Ljava/sql/Timestamp;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Timestamp|] [|java:sql:ResultSet.getTimestamp|] ([|java:lang:String|] v0 @type (object), [|java:util:Calendar|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getTimestamp:(Ljava/lang/String;Ljava/util/Calendar;)Ljava/sql/Timestamp;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSet.getType|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getType:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:URL|] [|java:sql:ResultSet.getURL|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getURL:(I)Ljava/net/URL;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:URL|] [|java:sql:ResultSet.getURL|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getURL:(Ljava/lang/String;)Ljava/net/URL;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:ResultSet.getUnicodeStream|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getUnicodeStream:(I)Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:ResultSet.getUnicodeStream|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getUnicodeStream:(Ljava/lang/String;)Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:SQLWarning|] [|java:sql:ResultSet.getWarnings|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.getWarnings:()Ljava/sql/SQLWarning;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.insertRow|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.insertRow:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.isAfterLast|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.isAfterLast:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.isBeforeFirst|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.isBeforeFirst:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.isClosed|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.isClosed:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.isFirst|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.isFirst:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.isLast|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.isLast:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.last|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.last:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.moveToCurrentRow|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.moveToCurrentRow:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.moveToInsertRow|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.moveToInsertRow:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.next|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.next:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.previous|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.previous:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.refreshRow|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.refreshRow:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.relative|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.relative:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.rowDeleted|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.rowDeleted:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.rowInserted|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.rowInserted:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.rowUpdated|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.rowUpdated:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.setFetchDirection|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.setFetchDirection:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.setFetchSize|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.setFetchSize:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateArray|] ([|int|] v0, [|java:sql:Array|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateArray:(ILjava/sql/Array;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateArray|] ([|java:lang:String|] v0 @type (object), [|java:sql:Array|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateArray:(Ljava/lang/String;Ljava/sql/Array;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateAsciiStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateAsciiStream:(ILjava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateAsciiStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|int|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateAsciiStream:(ILjava/io/InputStream;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateAsciiStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateAsciiStream:(ILjava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateAsciiStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateAsciiStream:(Ljava/lang/String;Ljava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateAsciiStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|int|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateAsciiStream:(Ljava/lang/String;Ljava/io/InputStream;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateAsciiStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateAsciiStream:(Ljava/lang/String;Ljava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBigDecimal|] ([|int|] v0, [|java:math:BigDecimal|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBigDecimal:(ILjava/math/BigDecimal;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBigDecimal|] ([|java:lang:String|] v0 @type (object), [|java:math:BigDecimal|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBigDecimal:(Ljava/lang/String;Ljava/math/BigDecimal;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBinaryStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBinaryStream:(ILjava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBinaryStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|int|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBinaryStream:(ILjava/io/InputStream;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBinaryStream|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBinaryStream:(ILjava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBinaryStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBinaryStream:(Ljava/lang/String;Ljava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBinaryStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|int|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBinaryStream:(Ljava/lang/String;Ljava/io/InputStream;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBinaryStream|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBinaryStream:(Ljava/lang/String;Ljava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBlob|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBlob:(ILjava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBlob|] ([|int|] v0, [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBlob:(ILjava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBlob|] ([|int|] v0, [|java:sql:Blob|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBlob:(ILjava/sql/Blob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBlob|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBlob:(Ljava/lang/String;Ljava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBlob|] ([|java:lang:String|] v0 @type (object), [|java:io:InputStream|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBlob:(Ljava/lang/String;Ljava/io/InputStream;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBlob|] ([|java:lang:String|] v0 @type (object), [|java:sql:Blob|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBlob:(Ljava/lang/String;Ljava/sql/Blob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBoolean|] ([|int|] v0, [|boolean|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBoolean:(IZ)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBoolean|] ([|java:lang:String|] v0 @type (object), [|boolean|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBoolean:(Ljava/lang/String;Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateByte|] ([|int|] v0, [|byte|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateByte:(IB)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateByte|] ([|java:lang:String|] v0 @type (object), [|byte|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateByte:(Ljava/lang/String;B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBytes|] ([|int|] v0, [|byte|][] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBytes:(I[B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateBytes|] ([|java:lang:String|] v0 @type (object), [|byte|][] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateBytes:(Ljava/lang/String;[B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateCharacterStream:(ILjava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|int|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateCharacterStream:(ILjava/io/Reader;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateCharacterStream:(ILjava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateCharacterStream:(Ljava/lang/String;Ljava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|int|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateCharacterStream:(Ljava/lang/String;Ljava/io/Reader;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateCharacterStream:(Ljava/lang/String;Ljava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateClob|] ([|int|] v0, [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateClob:(ILjava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateClob|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateClob:(ILjava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateClob|] ([|int|] v0, [|java:sql:Clob|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateClob:(ILjava/sql/Clob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateClob|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateClob:(Ljava/lang/String;Ljava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateClob|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateClob:(Ljava/lang/String;Ljava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateClob|] ([|java:lang:String|] v0 @type (object), [|java:sql:Clob|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateClob:(Ljava/lang/String;Ljava/sql/Clob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateDate|] ([|int|] v0, [|java:sql:Date|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateDate:(ILjava/sql/Date;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateDate|] ([|java:lang:String|] v0 @type (object), [|java:sql:Date|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateDate:(Ljava/lang/String;Ljava/sql/Date;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateDouble|] ([|int|] v0, [|double|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateDouble:(ID)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateDouble|] ([|java:lang:String|] v0 @type (object), [|double|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateDouble:(Ljava/lang/String;D)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateFloat|] ([|int|] v0, [|float|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateFloat:(IF)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateFloat|] ([|java:lang:String|] v0 @type (object), [|float|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateFloat:(Ljava/lang/String;F)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateInt|] ([|int|] v0, [|int|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateInt:(II)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateInt|] ([|java:lang:String|] v0 @type (object), [|int|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateInt:(Ljava/lang/String;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateLong|] ([|int|] v0, [|long|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateLong:(IJ)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateLong|] ([|java:lang:String|] v0 @type (object), [|long|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateLong:(Ljava/lang/String;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNCharacterStream:(ILjava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNCharacterStream|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNCharacterStream:(ILjava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNCharacterStream:(Ljava/lang/String;Ljava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNCharacterStream|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNCharacterStream:(Ljava/lang/String;Ljava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNClob|] ([|int|] v0, [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNClob:(ILjava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNClob|] ([|int|] v0, [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNClob:(ILjava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNClob|] ([|int|] v0, [|java:sql:NClob|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNClob:(ILjava/sql/NClob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNClob|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNClob:(Ljava/lang/String;Ljava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNClob|] ([|java:lang:String|] v0 @type (object), [|java:io:Reader|] v1 @type (object), [|long|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNClob:(Ljava/lang/String;Ljava/io/Reader;J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNClob|] ([|java:lang:String|] v0 @type (object), [|java:sql:NClob|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNClob:(Ljava/lang/String;Ljava/sql/NClob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNString|] ([|int|] v0, [|java:lang:String|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNString:(ILjava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNString|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNString:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNull|] ([|int|] v0) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNull:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateNull|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateNull:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateObject|] ([|int|] v0, [|java:lang:Object|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateObject:(ILjava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateObject|] ([|int|] v0, [|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateObject:(ILjava/lang/Object;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateObject|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateObject:(Ljava/lang/String;Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateObject|] ([|java:lang:String|] v0 @type (object), [|java:lang:Object|] v1 @type (object), [|int|] v2) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateObject:(Ljava/lang/String;Ljava/lang/Object;I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateRef|] ([|int|] v0, [|java:sql:Ref|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateRef:(ILjava/sql/Ref;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateRef|] ([|java:lang:String|] v0 @type (object), [|java:sql:Ref|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateRef:(Ljava/lang/String;Ljava/sql/Ref;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateRow|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateRow:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateRowId|] ([|int|] v0, [|java:sql:RowId|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateRowId:(ILjava/sql/RowId;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateRowId|] ([|java:lang:String|] v0 @type (object), [|java:sql:RowId|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateRowId:(Ljava/lang/String;Ljava/sql/RowId;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateSQLXML|] ([|int|] v0, [|java:sql:SQLXML|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateSQLXML:(ILjava/sql/SQLXML;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateSQLXML|] ([|java:lang:String|] v0 @type (object), [|java:sql:SQLXML|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateSQLXML:(Ljava/lang/String;Ljava/sql/SQLXML;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateShort|] ([|int|] v0, [|short|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateShort:(IS)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateShort|] ([|java:lang:String|] v0 @type (object), [|short|] v1) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateShort:(Ljava/lang/String;S)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateString|] ([|int|] v0, [|java:lang:String|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateString:(ILjava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateString|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateString:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateTime|] ([|int|] v0, [|java:sql:Time|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateTime:(ILjava/sql/Time;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateTime|] ([|java:lang:String|] v0 @type (object), [|java:sql:Time|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateTime:(Ljava/lang/String;Ljava/sql/Time;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateTimestamp|] ([|int|] v0, [|java:sql:Timestamp|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateTimestamp:(ILjava/sql/Timestamp;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:ResultSet.updateTimestamp|] ([|java:lang:String|] v0 @type (object), [|java:sql:Timestamp|] v1 @type (object)) @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.updateTimestamp:(Ljava/lang/String;Ljava/sql/Timestamp;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSet.wasNull|] () @owner [|java:sql:ResultSet|] @signature [|Ljava/sql/ResultSet;.wasNull:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:ResultSetMetaData|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:sql:Wrapper|] {
   }
      global [|int|] @@[|java:sql:ResultSetMetaData.columnNoNulls|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSetMetaData.columnNullable|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:ResultSetMetaData.columnNullableUnknown|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|java:lang:String|] [|java:sql:ResultSetMetaData.getCatalogName|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getCatalogName:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSetMetaData.getColumnClassName|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getColumnClassName:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSetMetaData.getColumnCount|] () @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getColumnCount:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSetMetaData.getColumnDisplaySize|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getColumnDisplaySize:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSetMetaData.getColumnLabel|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getColumnLabel:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSetMetaData.getColumnName|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getColumnName:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSetMetaData.getColumnType|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getColumnType:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSetMetaData.getColumnTypeName|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getColumnTypeName:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSetMetaData.getPrecision|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getPrecision:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSetMetaData.getScale|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getScale:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSetMetaData.getSchemaName|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getSchemaName:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:ResultSetMetaData.getTableName|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.getTableName:(I)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSetMetaData.isAutoIncrement|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.isAutoIncrement:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSetMetaData.isCaseSensitive|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.isCaseSensitive:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSetMetaData.isCurrency|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.isCurrency:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSetMetaData.isDefinitelyWritable|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.isDefinitelyWritable:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:ResultSetMetaData.isNullable|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.isNullable:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSetMetaData.isReadOnly|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.isReadOnly:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSetMetaData.isSearchable|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.isSearchable:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSetMetaData.isSigned|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.isSigned:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:ResultSetMetaData.isWritable|] ([|int|] v0) @owner [|java:sql:ResultSetMetaData|] @signature [|Ljava/sql/ResultSetMetaData;.isWritable:(I)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:RowId|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|java:sql:RowId.equals|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:sql:RowId|] @signature [|Ljava/sql/RowId;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|java:sql:RowId.getBytes|] () @owner [|java:sql:RowId|] @signature [|Ljava/sql/RowId;.getBytes:()[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:RowId.hashCode|] () @owner [|java:sql:RowId|] @signature [|Ljava/sql/RowId;.hashCode:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:RowId.toString|] () @owner [|java:sql:RowId|] @signature [|Ljava/sql/RowId;.toString:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:RowIdLifetime|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:sql:RowIdLifetime|][] @@[|java:sql:RowIdLifetime.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:sql:RowIdLifetime|] @@[|java:sql:RowIdLifetime.ROWID_UNSUPPORTED|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:sql:RowIdLifetime|] @@[|java:sql:RowIdLifetime.ROWID_VALID_FOREVER|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:sql:RowIdLifetime|] @@[|java:sql:RowIdLifetime.ROWID_VALID_OTHER|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:sql:RowIdLifetime|] @@[|java:sql:RowIdLifetime.ROWID_VALID_SESSION|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:sql:RowIdLifetime|] @@[|java:sql:RowIdLifetime.ROWID_VALID_TRANSACTION|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:sql:RowIdLifetime.<clinit>|] () @owner [|java:sql:RowIdLifetime|] @signature [|Ljava/sql/RowIdLifetime;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ee750.   v6:= 4  @length 4;
#L0ee752.   v5:= 3  @length 4;
#L0ee754.   v4:= 2  @length 4;
#L0ee756.   v3:= 1  @length 4;
#L0ee758.   v2:= 0  @length 4;
#L0ee75a.   v0:= new [|java:sql:RowIdLifetime|];
#L0ee75e.   v1:= "ROWID_UNSUPPORTED" @type (object, string);
#L0ee762.   call temp:=  [|java:sql:RowIdLifetime.<init>|](v0, v1, v2) @signature [|Ljava/sql/RowIdLifetime;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:sql:RowIdLifetime|] @type direct;
#L0ee768.   @@[|java:sql:RowIdLifetime.ROWID_UNSUPPORTED|] := v0  @type object;
#L0ee76c.   v0:= new [|java:sql:RowIdLifetime|];
#L0ee770.   v1:= "ROWID_VALID_OTHER" @type (object, string);
#L0ee774.   call temp:=  [|java:sql:RowIdLifetime.<init>|](v0, v1, v3) @signature [|Ljava/sql/RowIdLifetime;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:sql:RowIdLifetime|] @type direct;
#L0ee77a.   @@[|java:sql:RowIdLifetime.ROWID_VALID_OTHER|] := v0  @type object;
#L0ee77e.   v0:= new [|java:sql:RowIdLifetime|];
#L0ee782.   v1:= "ROWID_VALID_SESSION" @type (object, string);
#L0ee786.   call temp:=  [|java:sql:RowIdLifetime.<init>|](v0, v1, v4) @signature [|Ljava/sql/RowIdLifetime;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:sql:RowIdLifetime|] @type direct;
#L0ee78c.   @@[|java:sql:RowIdLifetime.ROWID_VALID_SESSION|] := v0  @type object;
#L0ee790.   v0:= new [|java:sql:RowIdLifetime|];
#L0ee794.   v1:= "ROWID_VALID_TRANSACTION" @type (object, string);
#L0ee798.   call temp:=  [|java:sql:RowIdLifetime.<init>|](v0, v1, v5) @signature [|Ljava/sql/RowIdLifetime;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:sql:RowIdLifetime|] @type direct;
#L0ee79e.   @@[|java:sql:RowIdLifetime.ROWID_VALID_TRANSACTION|] := v0  @type object;
#L0ee7a2.   v0:= new [|java:sql:RowIdLifetime|];
#L0ee7a6.   v1:= "ROWID_VALID_FOREVER" @type (object, string);
#L0ee7aa.   call temp:=  [|java:sql:RowIdLifetime.<init>|](v0, v1, v6) @signature [|Ljava/sql/RowIdLifetime;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:sql:RowIdLifetime|] @type direct;
#L0ee7b0.   @@[|java:sql:RowIdLifetime.ROWID_VALID_FOREVER|] := v0  @type object;
#L0ee7b4.   v0:= 5  @length 4;
#L0ee7b6.   v0:= new [|java:sql:RowIdLifetime|][v0];
#L0ee7ba.   v1:= @@[|java:sql:RowIdLifetime.ROWID_UNSUPPORTED|]   @type object;
#L0ee7be.   v0[v2]:= v1  @type object;
#L0ee7c2.   v1:= @@[|java:sql:RowIdLifetime.ROWID_VALID_OTHER|]   @type object;
#L0ee7c6.   v0[v3]:= v1  @type object;
#L0ee7ca.   v1:= @@[|java:sql:RowIdLifetime.ROWID_VALID_SESSION|]   @type object;
#L0ee7ce.   v0[v4]:= v1  @type object;
#L0ee7d2.   v1:= @@[|java:sql:RowIdLifetime.ROWID_VALID_TRANSACTION|]   @type object;
#L0ee7d6.   v0[v5]:= v1  @type object;
#L0ee7da.   v1:= @@[|java:sql:RowIdLifetime.ROWID_VALID_FOREVER|]   @type object;
#L0ee7de.   v0[v6]:= v1  @type object;
#L0ee7e2.   @@[|java:sql:RowIdLifetime.$VALUES|] := v0  @type object;
#L0ee7e6.   return @void ;

   }
    procedure [|void|] [|java:sql:RowIdLifetime.<init>|] ([|java:sql:RowIdLifetime|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:sql:RowIdLifetime|] @signature [|Ljava/sql/RowIdLifetime;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;

      
#L0ee7f8.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0ee7fe.   return @void ;

   }
    procedure [|java:sql:RowIdLifetime|] [|java:sql:RowIdLifetime.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:sql:RowIdLifetime|] @signature [|Ljava/sql/RowIdLifetime;.valueOf:(Ljava/lang/String;)Ljava/sql/RowIdLifetime;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L0ee810.   v0:= new [|java:sql:RowIdLifetime|];
#L0ee814.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0ee81a.   v0:= temp  @type object;
#L0ee81c.   v0:= ([|java:sql:RowIdLifetime|])v0;
#L0ee820.   return v0  @type object;

   }
    procedure [|java:sql:RowIdLifetime|][] [|java:sql:RowIdLifetime.values|] () @owner [|java:sql:RowIdLifetime|] @signature [|Ljava/sql/RowIdLifetime;.values:()[Ljava/sql/RowIdLifetime;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0ee834.   v0:= @@[|java:sql:RowIdLifetime.$VALUES|]   @type object;
#L0ee838.   call temp:=  [|java:sql:RowIdLifetime[].clone|](v0) @signature [|[Ljava/sql/RowIdLifetime;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:sql:RowIdLifetime[]|] @type virtual;
#L0ee83e.   v0:= temp  @type object;
#L0ee840.   v0:= ([|java:sql:RowIdLifetime|][])v0;
#L0ee844.   return v0  @type object;

   }
record [|java:sql:SQLClientInfoException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLException|] {
      [|java:util:Map|] [|java:sql:SQLClientInfoException.failedProperties|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:sql:SQLClientInfoException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLClientInfoException.<init>|] ([|java:sql:SQLClientInfoException|] v1 @type (this)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        v0;
      
#L0ee858.   call temp:=  [|java:sql:SQLException.<init>|](v1) @signature [|Ljava/sql/SQLException;.<init>:()V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee85e.   v0:= 0  @length 4;
#L0ee860.   v1.[|java:sql:SQLClientInfoException.failedProperties|]  := v0 @type object;
#L0ee864.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLClientInfoException.<init>|] ([|java:sql:SQLClientInfoException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|int|] v4, [|java:util:Map|] v5 @type (object)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





        v0;
      
#L0ee878.   call temp:=  [|java:sql:SQLException.<init>|](v1, v2, v3, v4) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee87e.   v0:= new [|java:util:HashMap|];
#L0ee882.   call temp:=  [|java:util:HashMap.<init>|](v0, v5) @signature [|Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ee888.   v1.[|java:sql:SQLClientInfoException.failedProperties|]  := v0 @type object;
#L0ee88c.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLClientInfoException.<init>|] ([|java:sql:SQLClientInfoException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|int|] v4, [|java:util:Map|] v5 @type (object), [|java:lang:Throwable|] v6 @type (object)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/util/Map;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;






        v0;
      
#L0ee8a0.   call temp:=  [|java:sql:SQLException.<init>|](v1, v2, v3, v4, v6) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee8a6.   v0:= new [|java:util:HashMap|];
#L0ee8aa.   call temp:=  [|java:util:HashMap.<init>|](v0, v5) @signature [|Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ee8b0.   v1.[|java:sql:SQLClientInfoException.failedProperties|]  := v0 @type object;
#L0ee8b4.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLClientInfoException.<init>|] ([|java:sql:SQLClientInfoException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|java:util:Map|] v4 @type (object)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




        v0;
      
#L0ee8c8.   call temp:=  [|java:sql:SQLException.<init>|](v1, v2, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee8ce.   v0:= new [|java:util:HashMap|];
#L0ee8d2.   call temp:=  [|java:util:HashMap.<init>|](v0, v4) @signature [|Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ee8d8.   v1.[|java:sql:SQLClientInfoException.failedProperties|]  := v0 @type object;
#L0ee8dc.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLClientInfoException.<init>|] ([|java:sql:SQLClientInfoException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object), [|java:util:Map|] v4 @type (object), [|java:lang:Throwable|] v5 @type (object)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





        v0;
      
#L0ee8f0.   call temp:=  [|java:sql:SQLException.<init>|](v1, v2, v3, v5) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee8f6.   v0:= new [|java:util:HashMap|];
#L0ee8fa.   call temp:=  [|java:util:HashMap.<init>|](v0, v4) @signature [|Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ee900.   v1.[|java:sql:SQLClientInfoException.failedProperties|]  := v0 @type object;
#L0ee904.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLClientInfoException.<init>|] ([|java:sql:SQLClientInfoException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:util:Map|] v3 @type (object)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.<init>:(Ljava/lang/String;Ljava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0ee918.   call temp:=  [|java:sql:SQLException.<init>|](v1, v2) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee91e.   v0:= new [|java:util:HashMap|];
#L0ee922.   call temp:=  [|java:util:HashMap.<init>|](v0, v3) @signature [|Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ee928.   v1.[|java:sql:SQLClientInfoException.failedProperties|]  := v0 @type object;
#L0ee92c.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLClientInfoException.<init>|] ([|java:sql:SQLClientInfoException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:util:Map|] v3 @type (object), [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.<init>:(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




        v0;
      
#L0ee940.   call temp:=  [|java:sql:SQLException.<init>|](v1, v2, v4) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee946.   v0:= new [|java:util:HashMap|];
#L0ee94a.   call temp:=  [|java:util:HashMap.<init>|](v0, v3) @signature [|Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ee950.   v1.[|java:sql:SQLClientInfoException.failedProperties|]  := v0 @type object;
#L0ee954.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLClientInfoException.<init>|] ([|java:sql:SQLClientInfoException|] v1 @type (this), [|java:util:Map|] v2 @type (object)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.<init>:(Ljava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L0ee968.   call temp:=  [|java:sql:SQLException.<init>|](v1) @signature [|Ljava/sql/SQLException;.<init>:()V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee96e.   v0:= new [|java:util:HashMap|];
#L0ee972.   call temp:=  [|java:util:HashMap.<init>|](v0, v2) @signature [|Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ee978.   v1.[|java:sql:SQLClientInfoException.failedProperties|]  := v0 @type object;
#L0ee97c.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLClientInfoException.<init>|] ([|java:sql:SQLClientInfoException|] v1 @type (this), [|java:util:Map|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.<init>:(Ljava/util/Map;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0ee990.   call temp:=  [|java:sql:SQLException.<init>|](v1, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee996.   v0:= new [|java:util:HashMap|];
#L0ee99a.   call temp:=  [|java:util:HashMap.<init>|](v0, v2) @signature [|Ljava/util/HashMap;.<init>:(Ljava/util/Map;)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0ee9a0.   v1.[|java:sql:SQLClientInfoException.failedProperties|]  := v0 @type object;
#L0ee9a4.   return @void ;

   }
    procedure [|java:util:Map|] [|java:sql:SQLClientInfoException.getFailedProperties|] ([|java:sql:SQLClientInfoException|] v1 @type (this)) @owner [|java:sql:SQLClientInfoException|] @signature [|Ljava/sql/SQLClientInfoException;.getFailedProperties:()Ljava/util/Map;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ee9b8.   v0:= v1.[|java:sql:SQLClientInfoException.failedProperties|]   @type object;
#L0ee9bc.   return v0  @type object;

   }
record [|java:sql:SQLData|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:String|] [|java:sql:SQLData.getSQLTypeName|] () @owner [|java:sql:SQLData|] @signature [|Ljava/sql/SQLData;.getSQLTypeName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLData.readSQL|] ([|java:sql:SQLInput|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:sql:SQLData|] @signature [|Ljava/sql/SQLData;.readSQL:(Ljava/sql/SQLInput;Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLData.writeSQL|] ([|java:sql:SQLOutput|] v0 @type (object)) @owner [|java:sql:SQLData|] @signature [|Ljava/sql/SQLData;.writeSQL:(Ljava/sql/SQLOutput;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:SQLNonTransientException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLException|] {
   }
      global [|long|] @@[|java:sql:SQLNonTransientException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLNonTransientException.<init>|] ([|java:sql:SQLNonTransientException|] v0 @type (this)) @owner [|java:sql:SQLNonTransientException|] @signature [|Ljava/sql/SQLNonTransientException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0ee9d0.   call temp:=  [|java:sql:SQLException.<init>|](v0) @signature [|Ljava/sql/SQLException;.<init>:()V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee9d6.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientException.<init>|] ([|java:sql:SQLNonTransientException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLNonTransientException|] @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0ee9e8.   v0:= 0  @length 4;
#L0ee9ea.   v1:= 0  @length 4;
#L0ee9ec.   call temp:=  [|java:sql:SQLException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ee9f2.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientException.<init>|] ([|java:sql:SQLNonTransientException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLNonTransientException|] @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0eea04.   v0:= 0  @length 4;
#L0eea06.   call temp:=  [|java:sql:SQLException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eea0c.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientException.<init>|] ([|java:sql:SQLNonTransientException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLNonTransientException|] @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eea20.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eea26.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientException.<init>|] ([|java:sql:SQLNonTransientException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLNonTransientException|] @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0eea38.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eea3e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientException.<init>|] ([|java:sql:SQLNonTransientException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLNonTransientException|] @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eea50.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eea56.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientException.<init>|] ([|java:sql:SQLNonTransientException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLNonTransientException|] @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0eea68.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eea6e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientException.<init>|] ([|java:sql:SQLNonTransientException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLNonTransientException|] @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0eea80.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eea86.   return @void ;

   }
record [|java:sql:SQLDataException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLNonTransientException|] {
   }
      global [|long|] @@[|java:sql:SQLDataException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLDataException.<init>|] ([|java:sql:SQLDataException|] v0 @type (this)) @owner [|java:sql:SQLDataException|] @signature [|Ljava/sql/SQLDataException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0eea98.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:()V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eea9e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLDataException.<init>|] ([|java:sql:SQLDataException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLDataException|] @signature [|Ljava/sql/SQLDataException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0eeab0.   v0:= 0  @length 4;
#L0eeab2.   v1:= 0  @length 4;
#L0eeab4.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeaba.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLDataException.<init>|] ([|java:sql:SQLDataException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLDataException|] @signature [|Ljava/sql/SQLDataException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0eeacc.   v0:= 0  @length 4;
#L0eeace.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eead4.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLDataException.<init>|] ([|java:sql:SQLDataException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLDataException|] @signature [|Ljava/sql/SQLDataException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eeae8.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeaee.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLDataException.<init>|] ([|java:sql:SQLDataException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLDataException|] @signature [|Ljava/sql/SQLDataException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0eeb00.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeb06.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLDataException.<init>|] ([|java:sql:SQLDataException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLDataException|] @signature [|Ljava/sql/SQLDataException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eeb18.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeb1e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLDataException.<init>|] ([|java:sql:SQLDataException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLDataException|] @signature [|Ljava/sql/SQLDataException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0eeb30.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeb36.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLDataException.<init>|] ([|java:sql:SQLDataException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLDataException|] @signature [|Ljava/sql/SQLDataException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0eeb48.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeb4e.   return @void ;

   }
record [|java:util:Iterator|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|java:util:Iterator.hasNext|] () @owner [|java:util:Iterator|] @signature [|Ljava/util/Iterator;.hasNext:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:Iterator.next|] () @owner [|java:util:Iterator|] @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:Iterator.remove|] () @owner [|java:util:Iterator|] @signature [|Ljava/util/Iterator;.remove:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:SQLException$InternalIterator|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
      [|java:sql:SQLException|] [|java:sql:SQLException$InternalIterator.current|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:sql:SQLException$InternalIterator.<init>|] ([|java:sql:SQLException$InternalIterator|] v0 @type (this), [|java:sql:SQLException|] v1 @type (object)) @owner [|java:sql:SQLException$InternalIterator|] @signature [|Ljava/sql/SQLException$InternalIterator;.<init>:(Ljava/sql/SQLException;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L0eeb60.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0eeb66.   v0.[|java:sql:SQLException$InternalIterator.current|]  := v1 @type object;
#L0eeb6a.   return @void ;

   }
    procedure [|boolean|] [|java:sql:SQLException$InternalIterator.hasNext|] ([|java:sql:SQLException$InternalIterator|] v1 @type (this)) @owner [|java:sql:SQLException$InternalIterator|] @signature [|Ljava/sql/SQLException$InternalIterator;.hasNext:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0eeb7c.   v0:= v1.[|java:sql:SQLException$InternalIterator.current|]   @type object;
#L0eeb80.   if v0 == 0 then goto L0eeb88;
#L0eeb84.   v0:= 1  @length 4;
#L0eeb86.   return v0;
#L0eeb88.   v0:= 0  @length 4;
#L0eeb8a.   goto L0eeb86;

   }
    procedure [|java:lang:Object|] [|java:sql:SQLException$InternalIterator.next|] ([|java:sql:SQLException$InternalIterator|] v1 @type (this)) @owner [|java:sql:SQLException$InternalIterator|] @signature [|Ljava/sql/SQLException$InternalIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;

        v0;
      
#L0eeb9c.   call temp:=  [|java:sql:SQLException$InternalIterator.next|](v1) @signature [|Ljava/sql/SQLException$InternalIterator;.next:()Ljava/lang/Throwable;|] @classDescriptor [|java:sql:SQLException$InternalIterator|] @type virtual;
#L0eeba2.   v0:= temp  @type object;
#L0eeba4.   return v0  @type object;

   }
    procedure [|java:lang:Throwable|] [|java:sql:SQLException$InternalIterator.next|] ([|java:sql:SQLException$InternalIterator|] v2 @type (this)) @owner [|java:sql:SQLException$InternalIterator|] @signature [|Ljava/sql/SQLException$InternalIterator;.next:()Ljava/lang/Throwable;|] @Access PUBLIC {
      local temp ;
        [|java:sql:SQLException|] v0 @varname [|ret|] @scope ((L000c,L0015));

        v1;
      
#L0eebb8.   v1:= v2.[|java:sql:SQLException$InternalIterator.current|]   @type object;
#L0eebbc.   if v1 != 0 then goto L0eebcc;
#L0eebc0.   v1:= new [|java:util:NoSuchElementException|];
#L0eebc4.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L0eebca.   throw v1;
#L0eebcc.   v0:= v2.[|java:sql:SQLException$InternalIterator.current|]   @type object;
#L0eebd0.   v1:= v2.[|java:sql:SQLException$InternalIterator.current|]   @type object;
#L0eebd4.   call temp:=  [|java:sql:SQLException.access$000|](v1) @signature [|Ljava/sql/SQLException;.access$000:(Ljava/sql/SQLException;)Ljava/sql/SQLException;|] @classDescriptor [|java:sql:SQLException|] @type static;
#L0eebda.   v1:= temp  @type object;
#L0eebdc.   v2.[|java:sql:SQLException$InternalIterator.current|]  := v1 @type object;
#L0eebe0.   return v0  @type object;

   }
    procedure [|void|] [|java:sql:SQLException$InternalIterator.remove|] ([|java:sql:SQLException$InternalIterator|] v1 @type (this)) @owner [|java:sql:SQLException$InternalIterator|] @signature [|Ljava/sql/SQLException$InternalIterator;.remove:()V|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0eebf4.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0eebf8.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0eebfe.   throw v0;

   }
record [|java:sql:SQLFeatureNotSupportedException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLNonTransientException|] {
   }
      global [|long|] @@[|java:sql:SQLFeatureNotSupportedException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLFeatureNotSupportedException.<init>|] ([|java:sql:SQLFeatureNotSupportedException|] v0 @type (this)) @owner [|java:sql:SQLFeatureNotSupportedException|] @signature [|Ljava/sql/SQLFeatureNotSupportedException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0eec10.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:()V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eec16.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLFeatureNotSupportedException.<init>|] ([|java:sql:SQLFeatureNotSupportedException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLFeatureNotSupportedException|] @signature [|Ljava/sql/SQLFeatureNotSupportedException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0eec28.   v0:= 0  @length 4;
#L0eec2a.   v1:= 0  @length 4;
#L0eec2c.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eec32.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLFeatureNotSupportedException.<init>|] ([|java:sql:SQLFeatureNotSupportedException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLFeatureNotSupportedException|] @signature [|Ljava/sql/SQLFeatureNotSupportedException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0eec44.   v0:= 0  @length 4;
#L0eec46.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eec4c.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLFeatureNotSupportedException.<init>|] ([|java:sql:SQLFeatureNotSupportedException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLFeatureNotSupportedException|] @signature [|Ljava/sql/SQLFeatureNotSupportedException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eec60.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eec66.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLFeatureNotSupportedException.<init>|] ([|java:sql:SQLFeatureNotSupportedException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLFeatureNotSupportedException|] @signature [|Ljava/sql/SQLFeatureNotSupportedException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0eec78.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eec7e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLFeatureNotSupportedException.<init>|] ([|java:sql:SQLFeatureNotSupportedException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLFeatureNotSupportedException|] @signature [|Ljava/sql/SQLFeatureNotSupportedException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eec90.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eec96.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLFeatureNotSupportedException.<init>|] ([|java:sql:SQLFeatureNotSupportedException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLFeatureNotSupportedException|] @signature [|Ljava/sql/SQLFeatureNotSupportedException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0eeca8.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eecae.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLFeatureNotSupportedException.<init>|] ([|java:sql:SQLFeatureNotSupportedException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLFeatureNotSupportedException|] @signature [|Ljava/sql/SQLFeatureNotSupportedException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0eecc0.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eecc6.   return @void ;

   }
record [|java:sql:SQLInput|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:sql:Array|] [|java:sql:SQLInput.readArray|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readArray:()Ljava/sql/Array;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:SQLInput.readAsciiStream|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readAsciiStream:()Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:math:BigDecimal|] [|java:sql:SQLInput.readBigDecimal|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readBigDecimal:()Ljava/math/BigDecimal;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:SQLInput.readBinaryStream|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readBinaryStream:()Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Blob|] [|java:sql:SQLInput.readBlob|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readBlob:()Ljava/sql/Blob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:SQLInput.readBoolean|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readBoolean:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|] [|java:sql:SQLInput.readByte|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readByte:()B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|byte|][] [|java:sql:SQLInput.readBytes|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readBytes:()[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:SQLInput.readCharacterStream|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readCharacterStream:()Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Clob|] [|java:sql:SQLInput.readClob|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readClob:()Ljava/sql/Clob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Date|] [|java:sql:SQLInput.readDate|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readDate:()Ljava/sql/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|double|] [|java:sql:SQLInput.readDouble|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readDouble:()D|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|float|] [|java:sql:SQLInput.readFloat|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readFloat:()F|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:sql:SQLInput.readInt|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readInt:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|long|] [|java:sql:SQLInput.readLong|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readLong:()J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:NClob|] [|java:sql:SQLInput.readNClob|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readNClob:()Ljava/sql/NClob;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:SQLInput.readNString|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readNString:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:sql:SQLInput.readObject|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readObject:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Ref|] [|java:sql:SQLInput.readRef|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readRef:()Ljava/sql/Ref;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:RowId|] [|java:sql:SQLInput.readRowId|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readRowId:()Ljava/sql/RowId;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:SQLXML|] [|java:sql:SQLInput.readSQLXML|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readSQLXML:()Ljava/sql/SQLXML;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|short|] [|java:sql:SQLInput.readShort|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readShort:()S|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:SQLInput.readString|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readString:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Time|] [|java:sql:SQLInput.readTime|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readTime:()Ljava/sql/Time;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:sql:Timestamp|] [|java:sql:SQLInput.readTimestamp|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readTimestamp:()Ljava/sql/Timestamp;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:net:URL|] [|java:sql:SQLInput.readURL|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.readURL:()Ljava/net/URL;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:sql:SQLInput.wasNull|] () @owner [|java:sql:SQLInput|] @signature [|Ljava/sql/SQLInput;.wasNull:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:SQLIntegrityConstraintViolationException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLNonTransientException|] {
   }
      global [|long|] @@[|java:sql:SQLIntegrityConstraintViolationException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLIntegrityConstraintViolationException.<init>|] ([|java:sql:SQLIntegrityConstraintViolationException|] v0 @type (this)) @owner [|java:sql:SQLIntegrityConstraintViolationException|] @signature [|Ljava/sql/SQLIntegrityConstraintViolationException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0eecd8.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:()V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eecde.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLIntegrityConstraintViolationException.<init>|] ([|java:sql:SQLIntegrityConstraintViolationException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLIntegrityConstraintViolationException|] @signature [|Ljava/sql/SQLIntegrityConstraintViolationException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0eecf0.   v0:= 0  @length 4;
#L0eecf2.   v1:= 0  @length 4;
#L0eecf4.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eecfa.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLIntegrityConstraintViolationException.<init>|] ([|java:sql:SQLIntegrityConstraintViolationException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLIntegrityConstraintViolationException|] @signature [|Ljava/sql/SQLIntegrityConstraintViolationException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0eed0c.   v0:= 0  @length 4;
#L0eed0e.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eed14.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLIntegrityConstraintViolationException.<init>|] ([|java:sql:SQLIntegrityConstraintViolationException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLIntegrityConstraintViolationException|] @signature [|Ljava/sql/SQLIntegrityConstraintViolationException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eed28.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eed2e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLIntegrityConstraintViolationException.<init>|] ([|java:sql:SQLIntegrityConstraintViolationException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLIntegrityConstraintViolationException|] @signature [|Ljava/sql/SQLIntegrityConstraintViolationException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0eed40.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eed46.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLIntegrityConstraintViolationException.<init>|] ([|java:sql:SQLIntegrityConstraintViolationException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLIntegrityConstraintViolationException|] @signature [|Ljava/sql/SQLIntegrityConstraintViolationException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eed58.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eed5e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLIntegrityConstraintViolationException.<init>|] ([|java:sql:SQLIntegrityConstraintViolationException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLIntegrityConstraintViolationException|] @signature [|Ljava/sql/SQLIntegrityConstraintViolationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0eed70.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eed76.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLIntegrityConstraintViolationException.<init>|] ([|java:sql:SQLIntegrityConstraintViolationException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLIntegrityConstraintViolationException|] @signature [|Ljava/sql/SQLIntegrityConstraintViolationException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0eed88.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eed8e.   return @void ;

   }
record [|java:sql:SQLInvalidAuthorizationSpecException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLNonTransientException|] {
   }
      global [|long|] @@[|java:sql:SQLInvalidAuthorizationSpecException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLInvalidAuthorizationSpecException.<init>|] ([|java:sql:SQLInvalidAuthorizationSpecException|] v0 @type (this)) @owner [|java:sql:SQLInvalidAuthorizationSpecException|] @signature [|Ljava/sql/SQLInvalidAuthorizationSpecException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0eeda0.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:()V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeda6.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLInvalidAuthorizationSpecException.<init>|] ([|java:sql:SQLInvalidAuthorizationSpecException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLInvalidAuthorizationSpecException|] @signature [|Ljava/sql/SQLInvalidAuthorizationSpecException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0eedb8.   v0:= 0  @length 4;
#L0eedba.   v1:= 0  @length 4;
#L0eedbc.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eedc2.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLInvalidAuthorizationSpecException.<init>|] ([|java:sql:SQLInvalidAuthorizationSpecException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLInvalidAuthorizationSpecException|] @signature [|Ljava/sql/SQLInvalidAuthorizationSpecException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0eedd4.   v0:= 0  @length 4;
#L0eedd6.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeddc.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLInvalidAuthorizationSpecException.<init>|] ([|java:sql:SQLInvalidAuthorizationSpecException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLInvalidAuthorizationSpecException|] @signature [|Ljava/sql/SQLInvalidAuthorizationSpecException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eedf0.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eedf6.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLInvalidAuthorizationSpecException.<init>|] ([|java:sql:SQLInvalidAuthorizationSpecException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLInvalidAuthorizationSpecException|] @signature [|Ljava/sql/SQLInvalidAuthorizationSpecException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0eee08.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eee0e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLInvalidAuthorizationSpecException.<init>|] ([|java:sql:SQLInvalidAuthorizationSpecException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLInvalidAuthorizationSpecException|] @signature [|Ljava/sql/SQLInvalidAuthorizationSpecException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eee20.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eee26.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLInvalidAuthorizationSpecException.<init>|] ([|java:sql:SQLInvalidAuthorizationSpecException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLInvalidAuthorizationSpecException|] @signature [|Ljava/sql/SQLInvalidAuthorizationSpecException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0eee38.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eee3e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLInvalidAuthorizationSpecException.<init>|] ([|java:sql:SQLInvalidAuthorizationSpecException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLInvalidAuthorizationSpecException|] @signature [|Ljava/sql/SQLInvalidAuthorizationSpecException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0eee50.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eee56.   return @void ;

   }
record [|java:sql:SQLNonTransientConnectionException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLNonTransientException|] {
   }
      global [|long|] @@[|java:sql:SQLNonTransientConnectionException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLNonTransientConnectionException.<init>|] ([|java:sql:SQLNonTransientConnectionException|] v0 @type (this)) @owner [|java:sql:SQLNonTransientConnectionException|] @signature [|Ljava/sql/SQLNonTransientConnectionException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0eee68.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:()V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eee6e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientConnectionException.<init>|] ([|java:sql:SQLNonTransientConnectionException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLNonTransientConnectionException|] @signature [|Ljava/sql/SQLNonTransientConnectionException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0eee80.   v0:= 0  @length 4;
#L0eee82.   v1:= 0  @length 4;
#L0eee84.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eee8a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientConnectionException.<init>|] ([|java:sql:SQLNonTransientConnectionException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLNonTransientConnectionException|] @signature [|Ljava/sql/SQLNonTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0eee9c.   v0:= 0  @length 4;
#L0eee9e.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeea4.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientConnectionException.<init>|] ([|java:sql:SQLNonTransientConnectionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLNonTransientConnectionException|] @signature [|Ljava/sql/SQLNonTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eeeb8.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeebe.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientConnectionException.<init>|] ([|java:sql:SQLNonTransientConnectionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLNonTransientConnectionException|] @signature [|Ljava/sql/SQLNonTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0eeed0.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeed6.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientConnectionException.<init>|] ([|java:sql:SQLNonTransientConnectionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLNonTransientConnectionException|] @signature [|Ljava/sql/SQLNonTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eeee8.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eeeee.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientConnectionException.<init>|] ([|java:sql:SQLNonTransientConnectionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLNonTransientConnectionException|] @signature [|Ljava/sql/SQLNonTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0eef00.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eef06.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLNonTransientConnectionException.<init>|] ([|java:sql:SQLNonTransientConnectionException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLNonTransientConnectionException|] @signature [|Ljava/sql/SQLNonTransientConnectionException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0eef18.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0eef1e.   return @void ;

   }
record [|java:sql:SQLOutput|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:sql:SQLOutput.writeArray|] ([|java:sql:Array|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeArray:(Ljava/sql/Array;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeAsciiStream|] ([|java:io:InputStream|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeAsciiStream:(Ljava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeBigDecimal|] ([|java:math:BigDecimal|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeBigDecimal:(Ljava/math/BigDecimal;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeBinaryStream|] ([|java:io:InputStream|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeBinaryStream:(Ljava/io/InputStream;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeBlob|] ([|java:sql:Blob|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeBlob:(Ljava/sql/Blob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeBoolean|] ([|boolean|] v0) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeBoolean:(Z)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeByte|] ([|byte|] v0) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeByte:(B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeBytes|] ([|byte|][] v0) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeBytes:([B)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeCharacterStream|] ([|java:io:Reader|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeCharacterStream:(Ljava/io/Reader;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeClob|] ([|java:sql:Clob|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeClob:(Ljava/sql/Clob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeDate|] ([|java:sql:Date|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeDate:(Ljava/sql/Date;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeDouble|] ([|double|] v0) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeDouble:(D)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeFloat|] ([|float|] v0) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeFloat:(F)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeInt|] ([|int|] v0) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeInt:(I)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeLong|] ([|long|] v0) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeLong:(J)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeNClob|] ([|java:sql:NClob|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeNClob:(Ljava/sql/NClob;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeNString|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeNString:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeObject|] ([|java:sql:SQLData|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeObject:(Ljava/sql/SQLData;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeRef|] ([|java:sql:Ref|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeRef:(Ljava/sql/Ref;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeRowId|] ([|java:sql:RowId|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeRowId:(Ljava/sql/RowId;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeSQLXML|] ([|java:sql:SQLXML|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeSQLXML:(Ljava/sql/SQLXML;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeShort|] ([|short|] v0) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeShort:(S)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeString|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeString:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeStruct|] ([|java:sql:Struct|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeStruct:(Ljava/sql/Struct;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeTime|] ([|java:sql:Time|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeTime:(Ljava/sql/Time;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeTimestamp|] ([|java:sql:Timestamp|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeTimestamp:(Ljava/sql/Timestamp;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLOutput.writeURL|] ([|java:net:URL|] v0 @type (object)) @owner [|java:sql:SQLOutput|] @signature [|Ljava/sql/SQLOutput;.writeURL:(Ljava/net/URL;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:SQLPermission|]  @type class @AccessFlag PUBLIC_FINAL  extends [|java:security:BasicPermission|], [|java:security:Guard|], [|java:io:Serializable|] {
   }
    procedure [|void|] [|java:sql:SQLPermission.<init>|] ([|java:sql:SQLPermission|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:sql:SQLPermission|] @signature [|Ljava/sql/SQLPermission;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L0eef30.   v0:= "" @type (object, string);
#L0eef34.   call temp:=  [|java:security:BasicPermission.<init>|](v1, v0) @signature [|Ljava/security/BasicPermission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:security:BasicPermission|] @type direct;
#L0eef3a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLPermission.<init>|] ([|java:sql:SQLPermission|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:sql:SQLPermission|] @signature [|Ljava/sql/SQLPermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
      
#L0eef4c.   v0:= "" @type (object, string);
#L0eef50.   v1:= "" @type (object, string);
#L0eef54.   call temp:=  [|java:security:BasicPermission.<init>|](v2, v0, v1) @signature [|Ljava/security/BasicPermission;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @classDescriptor [|java:security:BasicPermission|] @type direct;
#L0eef5a.   return @void ;

   }
    procedure [|java:lang:String|] [|java:sql:SQLPermission.getActions|] ([|java:sql:SQLPermission|] v1 @type (this)) @owner [|java:sql:SQLPermission|] @signature [|Ljava/sql/SQLPermission;.getActions:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0eef6c.   v0:= 0  @length 4;
#L0eef6e.   return v0  @type object;

   }
    procedure [|boolean|] [|java:sql:SQLPermission.implies|] ([|java:sql:SQLPermission|] v1 @type (this), [|java:security:Permission|] v2 @type (object)) @owner [|java:sql:SQLPermission|] @signature [|Ljava/sql/SQLPermission;.implies:(Ljava/security/Permission;)Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0eef80.   v0:= 1  @length 4;
#L0eef82.   return v0;

   }
record [|java:sql:SQLRecoverableException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLException|] {
   }
      global [|long|] @@[|java:sql:SQLRecoverableException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLRecoverableException.<init>|] ([|java:sql:SQLRecoverableException|] v0 @type (this)) @owner [|java:sql:SQLRecoverableException|] @signature [|Ljava/sql/SQLRecoverableException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0eef94.   call temp:=  [|java:sql:SQLException.<init>|](v0) @signature [|Ljava/sql/SQLException;.<init>:()V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eef9a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLRecoverableException.<init>|] ([|java:sql:SQLRecoverableException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLRecoverableException|] @signature [|Ljava/sql/SQLRecoverableException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0eefac.   v0:= 0  @length 4;
#L0eefae.   v1:= 0  @length 4;
#L0eefb0.   call temp:=  [|java:sql:SQLException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eefb6.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLRecoverableException.<init>|] ([|java:sql:SQLRecoverableException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLRecoverableException|] @signature [|Ljava/sql/SQLRecoverableException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0eefc8.   v0:= 0  @length 4;
#L0eefca.   call temp:=  [|java:sql:SQLException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eefd0.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLRecoverableException.<init>|] ([|java:sql:SQLRecoverableException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLRecoverableException|] @signature [|Ljava/sql/SQLRecoverableException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0eefe4.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0eefea.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLRecoverableException.<init>|] ([|java:sql:SQLRecoverableException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLRecoverableException|] @signature [|Ljava/sql/SQLRecoverableException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0eeffc.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef002.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLRecoverableException.<init>|] ([|java:sql:SQLRecoverableException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLRecoverableException|] @signature [|Ljava/sql/SQLRecoverableException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef014.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef01a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLRecoverableException.<init>|] ([|java:sql:SQLRecoverableException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLRecoverableException|] @signature [|Ljava/sql/SQLRecoverableException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0ef02c.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef032.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLRecoverableException.<init>|] ([|java:sql:SQLRecoverableException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLRecoverableException|] @signature [|Ljava/sql/SQLRecoverableException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ef044.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef04a.   return @void ;

   }
record [|java:sql:SQLSyntaxErrorException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLNonTransientException|] {
   }
      global [|long|] @@[|java:sql:SQLSyntaxErrorException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLSyntaxErrorException.<init>|] ([|java:sql:SQLSyntaxErrorException|] v0 @type (this)) @owner [|java:sql:SQLSyntaxErrorException|] @signature [|Ljava/sql/SQLSyntaxErrorException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0ef05c.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:()V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0ef062.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLSyntaxErrorException.<init>|] ([|java:sql:SQLSyntaxErrorException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLSyntaxErrorException|] @signature [|Ljava/sql/SQLSyntaxErrorException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0ef074.   v0:= 0  @length 4;
#L0ef076.   v1:= 0  @length 4;
#L0ef078.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0ef07e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLSyntaxErrorException.<init>|] ([|java:sql:SQLSyntaxErrorException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLSyntaxErrorException|] @signature [|Ljava/sql/SQLSyntaxErrorException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0ef090.   v0:= 0  @length 4;
#L0ef092.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0ef098.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLSyntaxErrorException.<init>|] ([|java:sql:SQLSyntaxErrorException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLSyntaxErrorException|] @signature [|Ljava/sql/SQLSyntaxErrorException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef0ac.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0ef0b2.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLSyntaxErrorException.<init>|] ([|java:sql:SQLSyntaxErrorException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLSyntaxErrorException|] @signature [|Ljava/sql/SQLSyntaxErrorException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0ef0c4.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0ef0ca.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLSyntaxErrorException.<init>|] ([|java:sql:SQLSyntaxErrorException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLSyntaxErrorException|] @signature [|Ljava/sql/SQLSyntaxErrorException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef0dc.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0ef0e2.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLSyntaxErrorException.<init>|] ([|java:sql:SQLSyntaxErrorException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLSyntaxErrorException|] @signature [|Ljava/sql/SQLSyntaxErrorException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0ef0f4.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0ef0fa.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLSyntaxErrorException.<init>|] ([|java:sql:SQLSyntaxErrorException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLSyntaxErrorException|] @signature [|Ljava/sql/SQLSyntaxErrorException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ef10c.   call temp:=  [|java:sql:SQLNonTransientException.<init>|](v0, v1) @signature [|Ljava/sql/SQLNonTransientException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLNonTransientException|] @type direct;
#L0ef112.   return @void ;

   }
record [|java:sql:SQLTransientException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLException|] {
   }
      global [|long|] @@[|java:sql:SQLTransientException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLTransientException.<init>|] ([|java:sql:SQLTransientException|] v0 @type (this)) @owner [|java:sql:SQLTransientException|] @signature [|Ljava/sql/SQLTransientException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0ef124.   call temp:=  [|java:sql:SQLException.<init>|](v0) @signature [|Ljava/sql/SQLException;.<init>:()V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef12a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientException.<init>|] ([|java:sql:SQLTransientException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLTransientException|] @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0ef13c.   v0:= 0  @length 4;
#L0ef13e.   v1:= 0  @length 4;
#L0ef140.   call temp:=  [|java:sql:SQLException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef146.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientException.<init>|] ([|java:sql:SQLTransientException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLTransientException|] @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0ef158.   v0:= 0  @length 4;
#L0ef15a.   call temp:=  [|java:sql:SQLException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef160.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientException.<init>|] ([|java:sql:SQLTransientException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLTransientException|] @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef174.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef17a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientException.<init>|] ([|java:sql:SQLTransientException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLTransientException|] @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0ef18c.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef192.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientException.<init>|] ([|java:sql:SQLTransientException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLTransientException|] @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef1a4.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef1aa.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientException.<init>|] ([|java:sql:SQLTransientException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLTransientException|] @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0ef1bc.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef1c2.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientException.<init>|] ([|java:sql:SQLTransientException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLTransientException|] @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ef1d4.   call temp:=  [|java:sql:SQLException.<init>|](v0, v1) @signature [|Ljava/sql/SQLException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLException|] @type direct;
#L0ef1da.   return @void ;

   }
record [|java:sql:SQLTimeoutException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLTransientException|] {
   }
      global [|long|] @@[|java:sql:SQLTimeoutException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLTimeoutException.<init>|] ([|java:sql:SQLTimeoutException|] v0 @type (this)) @owner [|java:sql:SQLTimeoutException|] @signature [|Ljava/sql/SQLTimeoutException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0ef1ec.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0) @signature [|Ljava/sql/SQLTransientException;.<init>:()V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef1f2.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTimeoutException.<init>|] ([|java:sql:SQLTimeoutException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLTimeoutException|] @signature [|Ljava/sql/SQLTimeoutException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0ef204.   v0:= 0  @length 4;
#L0ef206.   v1:= 0  @length 4;
#L0ef208.   call temp:=  [|java:sql:SQLTransientException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef20e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTimeoutException.<init>|] ([|java:sql:SQLTimeoutException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLTimeoutException|] @signature [|Ljava/sql/SQLTimeoutException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0ef220.   v0:= 0  @length 4;
#L0ef222.   call temp:=  [|java:sql:SQLTransientException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef228.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTimeoutException.<init>|] ([|java:sql:SQLTimeoutException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLTimeoutException|] @signature [|Ljava/sql/SQLTimeoutException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef23c.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef242.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTimeoutException.<init>|] ([|java:sql:SQLTimeoutException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLTimeoutException|] @signature [|Ljava/sql/SQLTimeoutException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0ef254.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef25a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTimeoutException.<init>|] ([|java:sql:SQLTimeoutException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLTimeoutException|] @signature [|Ljava/sql/SQLTimeoutException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef26c.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef272.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTimeoutException.<init>|] ([|java:sql:SQLTimeoutException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLTimeoutException|] @signature [|Ljava/sql/SQLTimeoutException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0ef284.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef28a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTimeoutException.<init>|] ([|java:sql:SQLTimeoutException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLTimeoutException|] @signature [|Ljava/sql/SQLTimeoutException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ef29c.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef2a2.   return @void ;

   }
record [|java:sql:SQLTransactionRollbackException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLTransientException|] {
   }
      global [|long|] @@[|java:sql:SQLTransactionRollbackException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLTransactionRollbackException.<init>|] ([|java:sql:SQLTransactionRollbackException|] v0 @type (this)) @owner [|java:sql:SQLTransactionRollbackException|] @signature [|Ljava/sql/SQLTransactionRollbackException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0ef2b4.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0) @signature [|Ljava/sql/SQLTransientException;.<init>:()V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef2ba.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransactionRollbackException.<init>|] ([|java:sql:SQLTransactionRollbackException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLTransactionRollbackException|] @signature [|Ljava/sql/SQLTransactionRollbackException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0ef2cc.   v0:= 0  @length 4;
#L0ef2ce.   v1:= 0  @length 4;
#L0ef2d0.   call temp:=  [|java:sql:SQLTransientException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef2d6.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransactionRollbackException.<init>|] ([|java:sql:SQLTransactionRollbackException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLTransactionRollbackException|] @signature [|Ljava/sql/SQLTransactionRollbackException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0ef2e8.   v0:= 0  @length 4;
#L0ef2ea.   call temp:=  [|java:sql:SQLTransientException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef2f0.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransactionRollbackException.<init>|] ([|java:sql:SQLTransactionRollbackException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLTransactionRollbackException|] @signature [|Ljava/sql/SQLTransactionRollbackException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef304.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef30a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransactionRollbackException.<init>|] ([|java:sql:SQLTransactionRollbackException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLTransactionRollbackException|] @signature [|Ljava/sql/SQLTransactionRollbackException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0ef31c.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef322.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransactionRollbackException.<init>|] ([|java:sql:SQLTransactionRollbackException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLTransactionRollbackException|] @signature [|Ljava/sql/SQLTransactionRollbackException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef334.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef33a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransactionRollbackException.<init>|] ([|java:sql:SQLTransactionRollbackException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLTransactionRollbackException|] @signature [|Ljava/sql/SQLTransactionRollbackException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0ef34c.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef352.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransactionRollbackException.<init>|] ([|java:sql:SQLTransactionRollbackException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLTransactionRollbackException|] @signature [|Ljava/sql/SQLTransactionRollbackException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ef364.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef36a.   return @void ;

   }
record [|java:sql:SQLTransientConnectionException|]  @type class @AccessFlag PUBLIC  extends [|java:sql:SQLTransientException|] {
   }
      global [|long|] @@[|java:sql:SQLTransientConnectionException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:SQLTransientConnectionException.<init>|] ([|java:sql:SQLTransientConnectionException|] v0 @type (this)) @owner [|java:sql:SQLTransientConnectionException|] @signature [|Ljava/sql/SQLTransientConnectionException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L0ef37c.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0) @signature [|Ljava/sql/SQLTransientException;.<init>:()V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef382.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientConnectionException.<init>|] ([|java:sql:SQLTransientConnectionException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLTransientConnectionException|] @signature [|Ljava/sql/SQLTransientConnectionException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0ef394.   v0:= 0  @length 4;
#L0ef396.   v1:= 0  @length 4;
#L0ef398.   call temp:=  [|java:sql:SQLTransientException.<init>|](v2, v3, v0, v1) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef39e.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientConnectionException.<init>|] ([|java:sql:SQLTransientConnectionException|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:sql:SQLTransientConnectionException|] @signature [|Ljava/sql/SQLTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0ef3b0.   v0:= 0  @length 4;
#L0ef3b2.   call temp:=  [|java:sql:SQLTransientException.<init>|](v1, v2, v3, v0) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef3b8.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientConnectionException.<init>|] ([|java:sql:SQLTransientConnectionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:sql:SQLTransientConnectionException|] @signature [|Ljava/sql/SQLTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef3cc.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;I)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef3d2.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientConnectionException.<init>|] ([|java:sql:SQLTransientConnectionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|int|] v3, [|java:lang:Throwable|] v4 @type (object)) @owner [|java:sql:SQLTransientConnectionException|] @signature [|Ljava/sql/SQLTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0ef3e4.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;ILjava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef3ea.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientConnectionException.<init>|] ([|java:sql:SQLTransientConnectionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:String|] v2 @type (object), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:sql:SQLTransientConnectionException|] @signature [|Ljava/sql/SQLTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0ef3fc.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2, v3) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef402.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientConnectionException.<init>|] ([|java:sql:SQLTransientConnectionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:sql:SQLTransientConnectionException|] @signature [|Ljava/sql/SQLTransientConnectionException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0ef414.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1, v2) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef41a.   return @void ;

   }
    procedure [|void|] [|java:sql:SQLTransientConnectionException.<init>|] ([|java:sql:SQLTransientConnectionException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:sql:SQLTransientConnectionException|] @signature [|Ljava/sql/SQLTransientConnectionException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ef42c.   call temp:=  [|java:sql:SQLTransientException.<init>|](v0, v1) @signature [|Ljava/sql/SQLTransientException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:sql:SQLTransientException|] @type direct;
#L0ef432.   return @void ;

   }
record [|java:sql:SQLXML|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:sql:SQLXML.free|] () @owner [|java:sql:SQLXML|] @signature [|Ljava/sql/SQLXML;.free:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:InputStream|] [|java:sql:SQLXML.getBinaryStream|] () @owner [|java:sql:SQLXML|] @signature [|Ljava/sql/SQLXML;.getBinaryStream:()Ljava/io/InputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Reader|] [|java:sql:SQLXML.getCharacterStream|] () @owner [|java:sql:SQLXML|] @signature [|Ljava/sql/SQLXML;.getCharacterStream:()Ljava/io/Reader;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|javax:xml:transform:Source|] [|java:sql:SQLXML.getSource|] ([|java:lang:Class|] v0 @type (object)) @owner [|java:sql:SQLXML|] @signature [|Ljava/sql/SQLXML;.getSource:(Ljava/lang/Class;)Ljavax/xml/transform/Source;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:SQLXML.getString|] () @owner [|java:sql:SQLXML|] @signature [|Ljava/sql/SQLXML;.getString:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:OutputStream|] [|java:sql:SQLXML.setBinaryStream|] () @owner [|java:sql:SQLXML|] @signature [|Ljava/sql/SQLXML;.setBinaryStream:()Ljava/io/OutputStream;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:io:Writer|] [|java:sql:SQLXML.setCharacterStream|] () @owner [|java:sql:SQLXML|] @signature [|Ljava/sql/SQLXML;.setCharacterStream:()Ljava/io/Writer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|javax:xml:transform:Result|] [|java:sql:SQLXML.setResult|] ([|java:lang:Class|] v0 @type (object)) @owner [|java:sql:SQLXML|] @signature [|Ljava/sql/SQLXML;.setResult:(Ljava/lang/Class;)Ljavax/xml/transform/Result;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:sql:SQLXML.setString|] ([|java:lang:String|] v0 @type (object)) @owner [|java:sql:SQLXML|] @signature [|Ljava/sql/SQLXML;.setString:(Ljava/lang/String;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:Savepoint|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|int|] [|java:sql:Savepoint.getSavepointId|] () @owner [|java:sql:Savepoint|] @signature [|Ljava/sql/Savepoint;.getSavepointId:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:Savepoint.getSavepointName|] () @owner [|java:sql:Savepoint|] @signature [|Ljava/sql/Savepoint;.getSavepointName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:Struct|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:Object|][] [|java:sql:Struct.getAttributes|] () @owner [|java:sql:Struct|] @signature [|Ljava/sql/Struct;.getAttributes:()[Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|][] [|java:sql:Struct.getAttributes|] ([|java:util:Map|] v0 @type (object)) @owner [|java:sql:Struct|] @signature [|Ljava/sql/Struct;.getAttributes:(Ljava/util/Map;)[Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:sql:Struct.getSQLTypeName|] () @owner [|java:sql:Struct|] @signature [|Ljava/sql/Struct;.getSQLTypeName:()Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:sql:Time|]  @type class @AccessFlag PUBLIC  extends [|java:util:Date|] {
   }
      global [|java:lang:String|] @@[|java:sql:Time.PADDING|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:sql:Time.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:Time.<init>|] ([|java:sql:Time|] v7 @type (this), [|int|] v8, [|int|] v9, [|int|] v10) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.<init>:(III)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0ef444.   v1:= 70  @length 16;
#L0ef448.   v2:= 0  @length 4;
#L0ef44a.   v3:= 1  @length 4;
#L0ef44c.   v0:= v7  @type object;
#L0ef44e.   v4:= v8;
#L0ef450.   v5:= v9;
#L0ef452.   v6:= v10;
#L0ef454.   call temp:=  [|java:util:Date.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/Date;.<init>:(IIIIII)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ef45a.   return @void ;

   }
    procedure [|void|] [|java:sql:Time.<init>|] ([|java:sql:Time|] v0 @type (this), [|long|] v1) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.<init>:(J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ef46c.   call temp:=  [|java:util:Date.<init>|](v0, v1, v2) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ef472.   return @void ;

   }
    procedure [|void|] [|java:sql:Time.format|] ([|java:sql:Time|] v4 @type (this), [|int|] v5, [|int|] v6, [|java:lang:StringBuilder|] v7 @type (object)) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.format:(IILjava/lang/StringBuilder;)V|] @Access PRIVATE {
      local temp ;
        [|java:lang:String|] v0 @varname [|str|] @scope ((L0004,L0020));




        v1;
        v2;
        v3;
      
#L0ef484.   call temp:=  [|java:lang:String.valueOf|](v5) @signature [|Ljava/lang/String;.valueOf:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L0ef48a.   v0:= temp  @type object;
#L0ef48c.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef492.   v1:= temp;
#L0ef494.   v1:= v6 - v1  @type int;
#L0ef498.   if v1 <= 0 then goto L0ef4bc;
#L0ef49c.   v1:= "00" @type (object, string);
#L0ef4a0.   v2:= 0  @length 4;
#L0ef4a2.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef4a8.   v3:= temp;
#L0ef4aa.   v3:= v6 - v3  @type int;
#L0ef4ae.   call temp:=  [|java:lang:String.substring|](v1, v2, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef4b4.   v1:= temp  @type object;
#L0ef4b6.   call temp:=  [|java:lang:StringBuilder.append|](v7, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef4bc.   call temp:=  [|java:lang:StringBuilder.append|](v7, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef4c2.   return @void ;

   }
    procedure [|java:sql:Time|] [|java:sql:Time.valueOf|] ([|java:lang:String|] v7 @type (object)) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.valueOf:(Ljava/lang/String;)Ljava/sql/Time;|] @Access PUBLIC_STATIC {
      local temp ;
        [|int|] v0 @varname [|firstIndex|] @scope ((L000e,L004e));
        [|int|] v1 @varname [|hour|] @scope ((L0030,L004e));
        [|int|] v2 @varname [|minute|] @scope ((L003a,L004e));
        [|int|] v3 @varname [|second|] @scope ((L0048,L004e));
        [|int|] v4 @varname [|secondIndex|] @scope ((L0014,L004e));

        v5;
        v6;
      
#L0ef4d4.   v6:= 58  @length 16;
#L0ef4d8.   if v7 != 0 then goto L0ef4e8;
#L0ef4dc.   v5:= new [|java:lang:IllegalArgumentException|];
#L0ef4e0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef4e6.   throw v5;
#L0ef4e8.   call temp:=  [|java:lang:String.indexOf|](v7, v6) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef4ee.   v0:= temp;
#L0ef4f0.   v5:= v0 + 1;
#L0ef4f4.   call temp:=  [|java:lang:String.indexOf|](v7, v6, v5) @signature [|Ljava/lang/String;.indexOf:(II)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef4fa.   v4:= temp;
#L0ef4fc.   v5:= -1  @length 4;
#L0ef4fe.   if v4 == v5 then goto L0ef516;
#L0ef502.   if v0 == 0 then goto L0ef516;
#L0ef506.   v5:= v4 + 1;
#L0ef50a.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef510.   v6:= temp;
#L0ef512.   if v5 != v6 then goto L0ef522;
#L0ef516.   v5:= new [|java:lang:IllegalArgumentException|];
#L0ef51a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef520.   throw v5;
#L0ef522.   v5:= 0  @length 4;
#L0ef524.   call temp:=  [|java:lang:String.substring|](v7, v5, v0) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef52a.   v5:= temp  @type object;
#L0ef52c.   call temp:=  [|java:lang:Integer.parseInt|](v5) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ef532.   v1:= temp;
#L0ef534.   v5:= v0 + 1;
#L0ef538.   call temp:=  [|java:lang:String.substring|](v7, v5, v4) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef53e.   v5:= temp  @type object;
#L0ef540.   call temp:=  [|java:lang:Integer.parseInt|](v5) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ef546.   v2:= temp;
#L0ef548.   v5:= v4 + 1;
#L0ef54c.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef552.   v6:= temp;
#L0ef554.   call temp:=  [|java:lang:String.substring|](v7, v5, v6) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef55a.   v5:= temp  @type object;
#L0ef55c.   call temp:=  [|java:lang:Integer.parseInt|](v5) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ef562.   v3:= temp;
#L0ef564.   v5:= new [|java:sql:Time|];
#L0ef568.   call temp:=  [|java:sql:Time.<init>|](v5, v1, v2, v3) @signature [|Ljava/sql/Time;.<init>:(III)V|] @classDescriptor [|java:sql:Time|] @type direct;
#L0ef56e.   return v5  @type object;

   }
    procedure [|int|] [|java:sql:Time.getDate|] ([|java:sql:Time|] v1 @type (this)) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.getDate:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ef580.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ef584.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef58a.   throw v0;

   }
    procedure [|int|] [|java:sql:Time.getDay|] ([|java:sql:Time|] v1 @type (this)) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.getDay:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ef59c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ef5a0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef5a6.   throw v0;

   }
    procedure [|int|] [|java:sql:Time.getMonth|] ([|java:sql:Time|] v1 @type (this)) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.getMonth:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ef5b8.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ef5bc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef5c2.   throw v0;

   }
    procedure [|int|] [|java:sql:Time.getYear|] ([|java:sql:Time|] v1 @type (this)) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.getYear:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0ef5d4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ef5d8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef5de.   throw v0;

   }
    procedure [|void|] [|java:sql:Time.setDate|] ([|java:sql:Time|] v1 @type (this), [|int|] v2) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.setDate:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0ef5f0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ef5f4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef5fa.   throw v0;

   }
    procedure [|void|] [|java:sql:Time.setMonth|] ([|java:sql:Time|] v1 @type (this), [|int|] v2) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.setMonth:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0ef60c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ef610.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef616.   throw v0;

   }
    procedure [|void|] [|java:sql:Time.setTime|] ([|java:sql:Time|] v0 @type (this), [|long|] v1) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.setTime:(J)V|] @Access PUBLIC {
      local temp ;


      
#L0ef628.   call temp:=  [|java:util:Date.setTime|](v0, v1, v2) @signature [|Ljava/util/Date;.setTime:(J)V|] @classDescriptor [|java:util:Date|] @type super;
#L0ef62e.   return @void ;

   }
    procedure [|void|] [|java:sql:Time.setYear|] ([|java:sql:Time|] v1 @type (this), [|int|] v2) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.setYear:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0ef640.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ef644.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef64a.   throw v0;

   }
    procedure [|java:lang:String|] [|java:sql:Time.toString|] ([|java:sql:Time|] v4 @type (this)) @owner [|java:sql:Time|] @signature [|Ljava/sql/Time;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|java:lang:StringBuilder|] v0 @varname [|sb|] @scope ((L000a,L002a));

        v1;
        v2;
        v3;
      
#L0ef65c.   v3:= 58  @length 16;
#L0ef660.   v2:= 2  @length 4;
#L0ef662.   v0:= new [|java:lang:StringBuilder|];
#L0ef666.   v1:= 8  @length 16;
#L0ef66a.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ef670.   call temp:=  [|java:sql:Time.getHours|](v4) @signature [|Ljava/sql/Time;.getHours:()I|] @classDescriptor [|java:sql:Time|] @type virtual;
#L0ef676.   v1:= temp;
#L0ef678.   call temp:=  [|java:sql:Time.format|](v4, v1, v2, v0) @signature [|Ljava/sql/Time;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Time|] @type direct;
#L0ef67e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef684.   call temp:=  [|java:sql:Time.getMinutes|](v4) @signature [|Ljava/sql/Time;.getMinutes:()I|] @classDescriptor [|java:sql:Time|] @type virtual;
#L0ef68a.   v1:= temp;
#L0ef68c.   call temp:=  [|java:sql:Time.format|](v4, v1, v2, v0) @signature [|Ljava/sql/Time;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Time|] @type direct;
#L0ef692.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef698.   call temp:=  [|java:sql:Time.getSeconds|](v4) @signature [|Ljava/sql/Time;.getSeconds:()I|] @classDescriptor [|java:sql:Time|] @type virtual;
#L0ef69e.   v1:= temp;
#L0ef6a0.   call temp:=  [|java:sql:Time.format|](v4, v1, v2, v0) @signature [|Ljava/sql/Time;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Time|] @type direct;
#L0ef6a6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef6ac.   v1:= temp  @type object;
#L0ef6ae.   return v1  @type object;

   }
record [|java:sql:Timestamp|]  @type class @AccessFlag PUBLIC  extends [|java:util:Date|] {
      [|int|] [|java:sql:Timestamp.nanos|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:String|] @@[|java:sql:Timestamp.PADDING|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:String|] @@[|java:sql:Timestamp.TIME_FORMAT_REGEX|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:sql:Timestamp.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:sql:Timestamp.<init>|] ([|java:sql:Timestamp|] v1 @type (this), [|int|] v2, [|int|] v3, [|int|] v4, [|int|] v5, [|int|] v6, [|int|] v7, [|int|] v8) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.<init>:(IIIIIII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;








        v0;
      
#L0ef6c0.   call temp:=  [|java:util:Date.<init>|](v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/Date;.<init>:(IIIIII)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ef6c6.   if v8 < 0 then goto L0ef6d4;
#L0ef6ca.    v0:= 0.004724;
#L0ef6d0.   if v8 <= v0 then goto L0ef6e0;
#L0ef6d4.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ef6d8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef6de.   throw v0;
#L0ef6e0.   v1.[|java:sql:Timestamp.nanos|]  := v8;
#L0ef6e4.   return @void ;

   }
    procedure [|void|] [|java:sql:Timestamp.<init>|] ([|java:sql:Timestamp|] v0 @type (this), [|long|] v1) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.<init>:(J)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0ef6f8.   call temp:=  [|java:util:Date.<init>|](v0, v1, v2) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0ef6fe.   call temp:=  [|java:sql:Timestamp.setTimeImpl|](v0, v1, v2) @signature [|Ljava/sql/Timestamp;.setTimeImpl:(J)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0ef704.   return @void ;

   }
    procedure [|java:lang:IllegalArgumentException|] [|java:sql:Timestamp.badTimestampString|] ([|java:lang:String|] v3 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.badTimestampString:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @Access PRIVATE_STATIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0ef718.   v0:= new [|java:lang:IllegalArgumentException|];
#L0ef71c.   v1:= new [|java:lang:StringBuilder|];
#L0ef720.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ef726.   v2:= "Timestamp format must be yyyy-MM-dd HH:mm:ss.fffffffff; was '" @type (object, string);
#L0ef72a.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef730.   v1:= temp  @type object;
#L0ef732.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef738.   v1:= temp  @type object;
#L0ef73a.   v2:= "'" @type (object, string);
#L0ef73e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef744.   v1:= temp  @type object;
#L0ef746.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef74c.   v1:= temp  @type object;
#L0ef74e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef754.   throw v0;

   }
    procedure [|void|] [|java:sql:Timestamp.format|] ([|java:sql:Timestamp|] v4 @type (this), [|int|] v5, [|int|] v6, [|java:lang:StringBuilder|] v7 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.format:(IILjava/lang/StringBuilder;)V|] @Access PRIVATE {
      local temp ;
        [|java:lang:String|] v0 @varname [|str|] @scope ((L0004,L0020));




        v1;
        v2;
        v3;
      
#L0ef768.   call temp:=  [|java:lang:String.valueOf|](v5) @signature [|Ljava/lang/String;.valueOf:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L0ef76e.   v0:= temp  @type object;
#L0ef770.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef776.   v1:= temp;
#L0ef778.   v1:= v6 - v1  @type int;
#L0ef77c.   if v1 <= 0 then goto L0ef7a0;
#L0ef780.   v1:= "000000000" @type (object, string);
#L0ef784.   v2:= 0  @length 4;
#L0ef786.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef78c.   v3:= temp;
#L0ef78e.   v3:= v6 - v3  @type int;
#L0ef792.   call temp:=  [|java:lang:String.substring|](v1, v2, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef798.   v1:= temp  @type object;
#L0ef79a.   call temp:=  [|java:lang:StringBuilder.append|](v7, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef7a0.   call temp:=  [|java:lang:StringBuilder.append|](v7, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef7a6.   return @void ;

   }
    procedure [|void|] [|java:sql:Timestamp.setTimeImpl|] ([|java:sql:Timestamp|] v5 @type (this), [|long|] v6) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.setTimeImpl:(J)V|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|milliseconds|] @scope ((L0005,L0017));


        v1;
        v2;
        v3;
        v4;
      
#L0ef7b8.   v3:= 1000  @length wide16;
#L0ef7bc.   v1:= v6 % v3  @type long;
#L0ef7c0.   v0:= (int)v1  @type l2i;
#L0ef7c2.   v1:= (long)v0  @type i2l;
#L0ef7c4.   v6:= v6 - v1  @type long;
#L0ef7c6.   if v0 >= 0 then goto L0ef7d0;
#L0ef7ca.   v6:= v6 - v3  @type long;
#L0ef7cc.   v0:= v0 + 1000;
#L0ef7d0.   call temp:=  [|java:util:Date.setTime|](v5, v6, v7) @signature [|Ljava/util/Date;.setTime:(J)V|] @classDescriptor [|java:util:Date|] @type super;
#L0ef7d6.    v1:= 0.000000;
#L0ef7dc.   v1:= v1 * v0  @type int;
#L0ef7de.   call temp:=  [|java:sql:Timestamp.setNanos|](v5, v1) @signature [|Ljava/sql/Timestamp;.setNanos:(I)V|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0ef7e4.   return @void ;

   }
    procedure [|java:sql:Timestamp|] [|java:sql:Timestamp.valueOf|] ([|java:lang:String|] v13 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.valueOf:(Ljava/lang/String;)Ljava/sql/Timestamp;|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:util:Date|] v6 @varname [|theDate|] @scope ((L002e,L0035), (L003b,L00ef));
        [|java:lang:Exception|] v1 @varname [|e|] @scope ((L0036,L003b), (L00dd,L00e2));
        [|int|] v8 @varname [|theNanos|] @scope ((L0048,L0054), (L00da,L00dc), (L00e2,L00ef));
        [|int|] v2 @varname [|nanoLength|] @scope ((L00b4,L00e2));
        [|java:lang:String|] v7 @varname [|theNanoString|] @scope ((L00bd,L00e2));
        [|java:text:SimpleDateFormat|] v0 @varname [|df|] @scope ((L0025,L00ef));
        [|int|] v3 @varname [|position|] @scope ((L003f,L00ef));
        [|java:text:ParsePosition|] v4 @varname [|pp|] @scope ((L002a,L00ef));
        [|int|] v5 @varname [|remaining|] @scope ((L0045,L00ef));
        [|java:sql:Timestamp|] v9 @varname [|theTimestamp|] @scope ((L00eb,L00ef));

        v10;
        v11;
        v12;
      
#L0ef7f8.   v12:= 0  @length 4;
#L0ef7fa.   if v13 != 0 then goto L0ef80e;
#L0ef7fe.   v10:= new [|java:lang:IllegalArgumentException|];
#L0ef802.   v11:= "Argument cannot be null" @type (object, string);
#L0ef806.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v10, v11) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0ef80c.   throw v10;
#L0ef80e.   call temp:=  [|java:lang:String.trim|](v13) @signature [|Ljava/lang/String;.trim:()Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef814.   v13:= temp  @type object;
#L0ef816.   v10:= "[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}.*" @type (object, string);
#L0ef81a.   call temp:=  [|java:util:regex:Pattern.matches|](v10, v13) @signature [|Ljava/util/regex/Pattern;.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z|] @classDescriptor [|java:util:regex:Pattern|] @type static;
#L0ef820.   v10:= temp;
#L0ef822.   if v10 != 0 then goto L0ef830;
#L0ef826.   call temp:=  [|java:sql:Timestamp.badTimestampString|](v13) @signature [|Ljava/sql/Timestamp;.badTimestampString:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:sql:Timestamp|] @type static;
#L0ef82c.   v10:= temp  @type object;
#L0ef82e.   throw v10;
#L0ef830.   v0:= new [|java:text:SimpleDateFormat|];
#L0ef834.   v10:= "yyyy-MM-dd HH:mm:ss" @type (object, string);
#L0ef838.   v11:= @@[|java:util:Locale.US|]   @type object;
#L0ef83c.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v0, v10, v11) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0ef842.   v4:= new [|java:text:ParsePosition|];
#L0ef846.   call temp:=  [|java:text:ParsePosition.<init>|](v4, v12) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0ef84c.   call temp:=  [|java:text:SimpleDateFormat.parse|](v0, v13, v4) @signature [|Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0ef852.   v6:= temp  @type object;
#L0ef854.   if v6 != 0 then goto L0ef86e;
#L0ef858.   call temp:=  [|java:sql:Timestamp.badTimestampString|](v13) @signature [|Ljava/sql/Timestamp;.badTimestampString:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:sql:Timestamp|] @type static;
#L0ef85e.   v10:= temp  @type object;
#L0ef860.   throw v10;
#L0ef862.   v1:= Exception  @type object;
#L0ef864.   call temp:=  [|java:sql:Timestamp.badTimestampString|](v13) @signature [|Ljava/sql/Timestamp;.badTimestampString:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:sql:Timestamp|] @type static;
#L0ef86a.   v10:= temp  @type object;
#L0ef86c.   throw v10;
#L0ef86e.   call temp:=  [|java:text:ParsePosition.getIndex|](v4) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0ef874.   v3:= temp;
#L0ef876.   call temp:=  [|java:lang:String.length|](v13) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef87c.   v10:= temp;
#L0ef87e.   v5:= v10 - v3  @type int;
#L0ef882.   if v5 != 0 then goto L0ef8a0;
#L0ef886.   v8:= 0  @length 4;
#L0ef888.   if v8 < 0 then goto L0ef896;
#L0ef88c.    v10:= 0.004724;
#L0ef892.   if v8 <= v10 then goto L0ef9bc;
#L0ef896.   call temp:=  [|java:sql:Timestamp.badTimestampString|](v13) @signature [|Ljava/sql/Timestamp;.badTimestampString:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:sql:Timestamp|] @type static;
#L0ef89c.   v10:= temp  @type object;
#L0ef89e.   throw v10;
#L0ef8a0.   call temp:=  [|java:lang:String.length|](v13) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef8a6.   v10:= temp;
#L0ef8a8.   v10:= v10 - v3  @type int;
#L0ef8aa.   v11:= ".n" @type (object, string);
#L0ef8ae.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef8b4.   v11:= temp;
#L0ef8b6.   if v10 >= v11 then goto L0ef8c4;
#L0ef8ba.   call temp:=  [|java:sql:Timestamp.badTimestampString|](v13) @signature [|Ljava/sql/Timestamp;.badTimestampString:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:sql:Timestamp|] @type static;
#L0ef8c0.   v10:= temp  @type object;
#L0ef8c2.   throw v10;
#L0ef8c4.   call temp:=  [|java:lang:String.length|](v13) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef8ca.   v10:= temp;
#L0ef8cc.   v10:= v10 - v3  @type int;
#L0ef8ce.   v11:= ".nnnnnnnnn" @type (object, string);
#L0ef8d2.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef8d8.   v11:= temp;
#L0ef8da.   if v10 <= v11 then goto L0ef8e8;
#L0ef8de.   call temp:=  [|java:sql:Timestamp.badTimestampString|](v13) @signature [|Ljava/sql/Timestamp;.badTimestampString:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:sql:Timestamp|] @type static;
#L0ef8e4.   v10:= temp  @type object;
#L0ef8e6.   throw v10;
#L0ef8e8.   call temp:=  [|java:lang:String.charAt|](v13, v3) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef8ee.   v10:= temp;
#L0ef8f0.   v11:= 46  @length 16;
#L0ef8f4.   if v10 == v11 then goto L0ef952;
#L0ef8f8.   v10:= new [|java:lang:NumberFormatException|];
#L0ef8fc.   v11:= new [|java:lang:StringBuilder|];
#L0ef900.   call temp:=  [|java:lang:StringBuilder.<init>|](v11) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ef906.   v12:= "Bad input string format: expected '.' not '" @type (object, string);
#L0ef90a.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef910.   v11:= temp  @type object;
#L0ef912.   call temp:=  [|java:lang:String.charAt|](v13, v3) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef918.   v12:= temp;
#L0ef91a.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef920.   v11:= temp  @type object;
#L0ef922.   v12:= "' in \"" @type (object, string);
#L0ef926.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef92c.   v11:= temp  @type object;
#L0ef92e.   call temp:=  [|java:lang:StringBuilder.append|](v11, v13) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef934.   v11:= temp  @type object;
#L0ef936.   v12:= "\"" @type (object, string);
#L0ef93a.   call temp:=  [|java:lang:StringBuilder.append|](v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef940.   v11:= temp  @type object;
#L0ef942.   call temp:=  [|java:lang:StringBuilder.toString|](v11) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef948.   v11:= temp  @type object;
#L0ef94a.   call temp:=  [|java:lang:NumberFormatException.<init>|](v10, v11) @signature [|Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NumberFormatException|] @type direct;
#L0ef950.   throw v10;
#L0ef952.   call temp:=  [|java:lang:String.length|](v13) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef958.   v10:= temp;
#L0ef95a.   v10:= v10 - v3  @type int;
#L0ef95c.   v2:= v10 + -1;
#L0ef960.   v10:= v3 + 1;
#L0ef964.   v11:= v3 + 1;
#L0ef968.   v11:= v11 + v2  @type int;
#L0ef96a.   call temp:=  [|java:lang:String.substring|](v13, v10, v11) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef970.   v7:= temp  @type object;
#L0ef972.   v10:= new [|java:lang:StringBuilder|];
#L0ef976.   call temp:=  [|java:lang:StringBuilder.<init>|](v10) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0ef97c.   call temp:=  [|java:lang:StringBuilder.append|](v10, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef982.   v10:= temp  @type object;
#L0ef984.   v11:= "000000000" @type (object, string);
#L0ef988.   call temp:=  [|java:lang:StringBuilder.append|](v10, v11) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef98e.   v10:= temp  @type object;
#L0ef990.   call temp:=  [|java:lang:StringBuilder.toString|](v10) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0ef996.   v7:= temp  @type object;
#L0ef998.   v10:= 9  @length 16;
#L0ef99c.   call temp:=  [|java:lang:String.substring|](v7, v12, v10) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0ef9a2.   v7:= temp  @type object;
#L0ef9a4.   call temp:=  [|java:lang:Integer.parseInt|](v7) @signature [|Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L0ef9aa.   v8:= temp;
#L0ef9ac.   goto L0ef888;
#L0ef9b0.   v1:= Exception  @type object;
#L0ef9b2.   call temp:=  [|java:sql:Timestamp.badTimestampString|](v13) @signature [|Ljava/sql/Timestamp;.badTimestampString:(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:sql:Timestamp|] @type static;
#L0ef9b8.   v10:= temp  @type object;
#L0ef9ba.   throw v10;
#L0ef9bc.   v9:= new [|java:sql:Timestamp|];
#L0ef9c0.   call temp:=  [|java:util:Date.getTime|](v6) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L0ef9c6.   v10:= temp  @type wide;
#L0ef9c8.   call temp:=  [|java:sql:Timestamp.<init>|](v9, v10, v11) @signature [|Ljava/sql/Timestamp;.<init>:(J)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0ef9ce.   call temp:=  [|java:sql:Timestamp.setNanos|](v9, v8) @signature [|Ljava/sql/Timestamp;.setNanos:(I)V|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0ef9d4.   return v9  @type object;
  catch  [|java:lang:Exception|] @[L0ef84c..L0ef852] goto L0ef862;
  catch  [|java:lang:Exception|] @[L0ef9a4..L0ef9aa] goto L0ef9b0;

   }
    procedure [|boolean|] [|java:sql:Timestamp.after|] ([|java:sql:Timestamp|] v8 @type (this), [|java:sql:Timestamp|] v9 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.after:(Ljava/sql/Timestamp;)Z|] @Access PUBLIC {
      local temp ;
        [|long|] v0 @varname [|compareTime|] @scope ((L000a,L0021));
        [|long|] v2 @varname [|thisTime|] @scope ((L0006,L0021));


        v1;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0efa04.   v4:= 1  @length 4;
#L0efa06.   v5:= 0  @length 4;
#L0efa08.   call temp:=  [|java:sql:Timestamp.getTime|](v8) @signature [|Ljava/sql/Timestamp;.getTime:()J|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efa0e.   v2:= temp  @type wide;
#L0efa10.   call temp:=  [|java:sql:Timestamp.getTime|](v9) @signature [|Ljava/sql/Timestamp;.getTime:()J|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efa16.   v0:= temp  @type wide;
#L0efa18.   v6:= cmp(v2,v0);
#L0efa1c.   if v6 <= 0 then goto L0efa22;
#L0efa20.   return v4;
#L0efa22.   v6:= cmp(v2,v0);
#L0efa26.   if v6 >= 0 then goto L0efa2e;
#L0efa2a.   v4:= v5;
#L0efa2c.   goto L0efa20;
#L0efa2e.   call temp:=  [|java:sql:Timestamp.getNanos|](v8) @signature [|Ljava/sql/Timestamp;.getNanos:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efa34.   v6:= temp;
#L0efa36.   call temp:=  [|java:sql:Timestamp.getNanos|](v9) @signature [|Ljava/sql/Timestamp;.getNanos:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efa3c.   v7:= temp;
#L0efa3e.   if v6 > v7 then goto L0efa20;
#L0efa42.   v4:= v5;
#L0efa44.   goto L0efa20;

   }
    procedure [|boolean|] [|java:sql:Timestamp.before|] ([|java:sql:Timestamp|] v8 @type (this), [|java:sql:Timestamp|] v9 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.before:(Ljava/sql/Timestamp;)Z|] @Access PUBLIC {
      local temp ;
        [|long|] v0 @varname [|compareTime|] @scope ((L000a,L0021));
        [|long|] v2 @varname [|thisTime|] @scope ((L0006,L0021));


        v1;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0efa58.   v4:= 1  @length 4;
#L0efa5a.   v5:= 0  @length 4;
#L0efa5c.   call temp:=  [|java:sql:Timestamp.getTime|](v8) @signature [|Ljava/sql/Timestamp;.getTime:()J|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efa62.   v2:= temp  @type wide;
#L0efa64.   call temp:=  [|java:sql:Timestamp.getTime|](v9) @signature [|Ljava/sql/Timestamp;.getTime:()J|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efa6a.   v0:= temp  @type wide;
#L0efa6c.   v6:= cmp(v2,v0);
#L0efa70.   if v6 >= 0 then goto L0efa76;
#L0efa74.   return v4;
#L0efa76.   v6:= cmp(v2,v0);
#L0efa7a.   if v6 <= 0 then goto L0efa82;
#L0efa7e.   v4:= v5;
#L0efa80.   goto L0efa74;
#L0efa82.   call temp:=  [|java:sql:Timestamp.getNanos|](v8) @signature [|Ljava/sql/Timestamp;.getNanos:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efa88.   v6:= temp;
#L0efa8a.   call temp:=  [|java:sql:Timestamp.getNanos|](v9) @signature [|Ljava/sql/Timestamp;.getNanos:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efa90.   v7:= temp;
#L0efa92.   if v6 < v7 then goto L0efa74;
#L0efa96.   v4:= v5;
#L0efa98.   goto L0efa74;

   }
    procedure [|int|] [|java:sql:Timestamp.compareTo|] ([|java:sql:Timestamp|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L0efaac.   v2:= ([|java:util:Date|])v2;
#L0efab0.   call temp:=  [|java:sql:Timestamp.compareTo|](v1, v2) @signature [|Ljava/sql/Timestamp;.compareTo:(Ljava/util/Date;)I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efab6.   v0:= temp;
#L0efab8.   return v0;

   }
    procedure [|int|] [|java:sql:Timestamp.compareTo|] ([|java:sql:Timestamp|] v3 @type (this), [|java:sql:Timestamp|] v4 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.compareTo:(Ljava/sql/Timestamp;)I|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|result|] @scope ((L0004,L0011), (L0012,L0018));
        [|int|] v1 @varname [|thatNano|] @scope ((L000e,L0011), (L0012,L0018));
        [|int|] v2 @varname [|thisNano|] @scope ((L000a,L0011), (L0012,L0018));


      
#L0efacc.   call temp:=  [|java:util:Date.compareTo|](v3, v4) @signature [|Ljava/util/Date;.compareTo:(Ljava/util/Date;)I|] @classDescriptor [|java:util:Date|] @type super;
#L0efad2.   v0:= temp;
#L0efad4.   if v0 != 0 then goto L0efaee;
#L0efad8.   call temp:=  [|java:sql:Timestamp.getNanos|](v3) @signature [|Ljava/sql/Timestamp;.getNanos:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efade.   v2:= temp;
#L0efae0.   call temp:=  [|java:sql:Timestamp.getNanos|](v4) @signature [|Ljava/sql/Timestamp;.getNanos:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efae6.   v1:= temp;
#L0efae8.   if v2 <= v1 then goto L0efaf0;
#L0efaec.   v0:= 1  @length 4;
#L0efaee.   return v0;
#L0efaf0.   if v2 != v1 then goto L0efaf8;
#L0efaf4.   v0:= 0  @length 4;
#L0efaf6.   goto L0efaee;
#L0efaf8.   v0:= -1  @length 4;
#L0efafa.   goto L0efaee;

   }
    procedure [|int|] [|java:sql:Timestamp.compareTo|] ([|java:sql:Timestamp|] v1 @type (this), [|java:util:Date|] v2 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.compareTo:(Ljava/util/Date;)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0efb0c.   v2:= ([|java:sql:Timestamp|])v2;
#L0efb10.   call temp:=  [|java:sql:Timestamp.compareTo|](v1, v2) @signature [|Ljava/sql/Timestamp;.compareTo:(Ljava/sql/Timestamp;)I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efb16.   v0:= temp;
#L0efb18.   return v0;

   }
    procedure [|boolean|] [|java:sql:Timestamp.equals|] ([|java:sql:Timestamp|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0efb2c.   v0:= instanceof @varname v2 @type [|java:sql:Timestamp|];
#L0efb30.   if v0 == 0 then goto L0efb42;
#L0efb34.   v2:= ([|java:sql:Timestamp|])v2;
#L0efb38.   call temp:=  [|java:sql:Timestamp.equals|](v1, v2) @signature [|Ljava/sql/Timestamp;.equals:(Ljava/sql/Timestamp;)Z|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efb3e.   v0:= temp;
#L0efb40.   return v0;
#L0efb42.   v0:= 0  @length 4;
#L0efb44.   goto L0efb40;

   }
    procedure [|boolean|] [|java:sql:Timestamp.equals|] ([|java:sql:Timestamp|] v5 @type (this), [|java:sql:Timestamp|] v6 @type (object)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.equals:(Ljava/sql/Timestamp;)Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0efb58.   v0:= 0  @length 4;
#L0efb5a.   if v6 != 0 then goto L0efb60;
#L0efb5e.   return v0;
#L0efb60.   call temp:=  [|java:sql:Timestamp.getTime|](v5) @signature [|Ljava/sql/Timestamp;.getTime:()J|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efb66.   v1:= temp  @type wide;
#L0efb68.   call temp:=  [|java:sql:Timestamp.getTime|](v6) @signature [|Ljava/sql/Timestamp;.getTime:()J|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efb6e.   v3:= temp  @type wide;
#L0efb70.   v1:= cmp(v1,v3);
#L0efb74.   if v1 != 0 then goto L0efb5e;
#L0efb78.   call temp:=  [|java:sql:Timestamp.getNanos|](v5) @signature [|Ljava/sql/Timestamp;.getNanos:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efb7e.   v1:= temp;
#L0efb80.   call temp:=  [|java:sql:Timestamp.getNanos|](v6) @signature [|Ljava/sql/Timestamp;.getNanos:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efb86.   v2:= temp;
#L0efb88.   if v1 != v2 then goto L0efb5e;
#L0efb8c.   v0:= 1  @length 4;
#L0efb8e.   goto L0efb5e;

   }
    procedure [|int|] [|java:sql:Timestamp.getNanos|] ([|java:sql:Timestamp|] v1 @type (this)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.getNanos:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0efba0.   v0:= v1.[|java:sql:Timestamp.nanos|] ;
#L0efba4.   return v0;

   }
    procedure [|long|] [|java:sql:Timestamp.getTime|] ([|java:sql:Timestamp|] v4 @type (this)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.getTime:()J|] @Access PUBLIC {
      local temp ;
        [|long|] v0 @varname [|theTime|] @scope ((L0004,L000d));

        v1;
        v2;
        v3;
      
#L0efbb8.   call temp:=  [|java:util:Date.getTime|](v4) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type super;
#L0efbbe.   v0:= temp  @type wide;
#L0efbc0.   v2:= v4.[|java:sql:Timestamp.nanos|] ;
#L0efbc4.    v3:= 0.000000;
#L0efbca.   v2:= v2 / v3  @type int;
#L0efbcc.   v2:= (long)v2  @type i2l;
#L0efbce.   v0:= v0 + v2  @type long;
#L0efbd0.   return v0  @type wide;

   }
    procedure [|void|] [|java:sql:Timestamp.setNanos|] ([|java:sql:Timestamp|] v2 @type (this), [|int|] v3) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.setNanos:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0efbe4.   if v3 < 0 then goto L0efbf2;
#L0efbe8.    v0:= 0.004724;
#L0efbee.   if v3 <= v0 then goto L0efc02;
#L0efbf2.   v0:= new [|java:lang:IllegalArgumentException|];
#L0efbf6.   v1:= "Value out of range" @type (object, string);
#L0efbfa.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0efc00.   throw v0;
#L0efc02.   v2.[|java:sql:Timestamp.nanos|]  := v3;
#L0efc06.   return @void ;

   }
    procedure [|void|] [|java:sql:Timestamp.setTime|] ([|java:sql:Timestamp|] v0 @type (this), [|long|] v1) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.setTime:(J)V|] @Access PUBLIC {
      local temp ;


      
#L0efc18.   call temp:=  [|java:sql:Timestamp.setTimeImpl|](v0, v1, v2) @signature [|Ljava/sql/Timestamp;.setTimeImpl:(J)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0efc1e.   return @void ;

   }
    procedure [|java:lang:String|] [|java:sql:Timestamp.toString|] ([|java:sql:Timestamp|] v7 @type (this)) @owner [|java:sql:Timestamp|] @signature [|Ljava/sql/Timestamp;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|java:lang:StringBuilder|] v0 @varname [|sb|] @scope ((L000e,L007c));

        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0efc30.   v6:= 58  @length 16;
#L0efc34.   v5:= 48  @length 16;
#L0efc38.   v4:= 45  @length 16;
#L0efc3c.   v3:= 2  @length 4;
#L0efc3e.   v0:= new [|java:lang:StringBuilder|];
#L0efc42.   v1:= 29  @length 16;
#L0efc46.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v1) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0efc4c.   call temp:=  [|java:sql:Timestamp.getYear|](v7) @signature [|Ljava/sql/Timestamp;.getYear:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efc52.   v1:= temp;
#L0efc54.   v1:= v1 + 1900;
#L0efc58.   v2:= 4  @length 4;
#L0efc5a.   call temp:=  [|java:sql:Timestamp.format|](v7, v1, v2, v0) @signature [|Ljava/sql/Timestamp;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0efc60.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efc66.   call temp:=  [|java:sql:Timestamp.getMonth|](v7) @signature [|Ljava/sql/Timestamp;.getMonth:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efc6c.   v1:= temp;
#L0efc6e.   v1:= v1 + 1;
#L0efc72.   call temp:=  [|java:sql:Timestamp.format|](v7, v1, v3, v0) @signature [|Ljava/sql/Timestamp;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0efc78.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efc7e.   call temp:=  [|java:sql:Timestamp.getDate|](v7) @signature [|Ljava/sql/Timestamp;.getDate:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efc84.   v1:= temp;
#L0efc86.   call temp:=  [|java:sql:Timestamp.format|](v7, v1, v3, v0) @signature [|Ljava/sql/Timestamp;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0efc8c.   v1:= 32  @length 16;
#L0efc90.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efc96.   call temp:=  [|java:sql:Timestamp.getHours|](v7) @signature [|Ljava/sql/Timestamp;.getHours:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efc9c.   v1:= temp;
#L0efc9e.   call temp:=  [|java:sql:Timestamp.format|](v7, v1, v3, v0) @signature [|Ljava/sql/Timestamp;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0efca4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efcaa.   call temp:=  [|java:sql:Timestamp.getMinutes|](v7) @signature [|Ljava/sql/Timestamp;.getMinutes:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efcb0.   v1:= temp;
#L0efcb2.   call temp:=  [|java:sql:Timestamp.format|](v7, v1, v3, v0) @signature [|Ljava/sql/Timestamp;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0efcb8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efcbe.   call temp:=  [|java:sql:Timestamp.getSeconds|](v7) @signature [|Ljava/sql/Timestamp;.getSeconds:()I|] @classDescriptor [|java:sql:Timestamp|] @type virtual;
#L0efcc4.   v1:= temp;
#L0efcc6.   call temp:=  [|java:sql:Timestamp.format|](v7, v1, v3, v0) @signature [|Ljava/sql/Timestamp;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0efccc.   v1:= 46  @length 16;
#L0efcd0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efcd6.   v1:= v7.[|java:sql:Timestamp.nanos|] ;
#L0efcda.   if v1 != 0 then goto L0efcee;
#L0efcde.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efce4.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efcea.   v1:= temp  @type object;
#L0efcec.   return v1  @type object;
#L0efcee.   v1:= v7.[|java:sql:Timestamp.nanos|] ;
#L0efcf2.   v2:= 9  @length 16;
#L0efcf6.   call temp:=  [|java:sql:Timestamp.format|](v7, v1, v2, v0) @signature [|Ljava/sql/Timestamp;.format:(IILjava/lang/StringBuilder;)V|] @classDescriptor [|java:sql:Timestamp|] @type direct;
#L0efcfc.   call temp:=  [|java:lang:StringBuilder.length|](v0) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efd02.   v1:= temp;
#L0efd04.   v1:= v1 + -1;
#L0efd08.   call temp:=  [|java:lang:StringBuilder.charAt|](v0, v1) @signature [|Ljava/lang/StringBuilder;.charAt:(I)C|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efd0e.   v1:= temp;
#L0efd10.   if v1 != v5 then goto L0efce4;
#L0efd14.   call temp:=  [|java:lang:StringBuilder.length|](v0) @signature [|Ljava/lang/StringBuilder;.length:()I|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efd1a.   v1:= temp;
#L0efd1c.   v1:= v1 + -1;
#L0efd20.   call temp:=  [|java:lang:StringBuilder.setLength|](v0, v1) @signature [|Ljava/lang/StringBuilder;.setLength:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efd26.   goto L0efcfc;

   }
record [|java:sql:Types|]  @type class @AccessFlag PUBLIC  {
   }
      global [|int|] @@[|java:sql:Types.ARRAY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.BIGINT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.BINARY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.BIT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.BLOB|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.BOOLEAN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.CHAR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.CLOB|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.DATALINK|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.DATE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.DECIMAL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.DISTINCT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.DOUBLE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.FLOAT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.INTEGER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.JAVA_OBJECT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.LONGNVARCHAR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.LONGVARBINARY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.LONGVARCHAR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.NCHAR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.NCLOB|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.NULL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.NUMERIC|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.NVARCHAR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.OTHER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.REAL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.REF|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.ROWID|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.SMALLINT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.SQLXML|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.STRUCT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.TIME|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.TIMESTAMP|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.TINYINT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.VARBINARY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:sql:Types.VARCHAR|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:sql:Types.<init>|] ([|java:sql:Types|] v0 @type (this)) @owner [|java:sql:Types|] @signature [|Ljava/sql/Types;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;

      
#L0efd38.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0efd3e.   return @void ;

   }
record [|java:text:Annotation|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:Object|] [|java:text:Annotation.value|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:text:Annotation.<init>|] ([|java:text:Annotation|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:text:Annotation|] @signature [|Ljava/text/Annotation;.<init>:(Ljava/lang/Object;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0efd50.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0efd56.   v0.[|java:text:Annotation.value|]  := v1 @type object;
#L0efd5a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:text:Annotation.getValue|] ([|java:text:Annotation|] v1 @type (this)) @owner [|java:text:Annotation|] @signature [|Ljava/text/Annotation;.getValue:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0efd6c.   v0:= v1.[|java:text:Annotation.value|]   @type object;
#L0efd70.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:Annotation.toString|] ([|java:text:Annotation|] v2 @type (this)) @owner [|java:text:Annotation|] @signature [|Ljava/text/Annotation;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0efd84.   v0:= new [|java:lang:StringBuilder|];
#L0efd88.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0efd8e.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0efd94.   v1:= temp  @type object;
#L0efd96.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0efd9c.   v1:= temp  @type object;
#L0efd9e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efda4.   v0:= temp  @type object;
#L0efda6.   v1:= "[value=" @type (object, string);
#L0efdaa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efdb0.   v0:= temp  @type object;
#L0efdb2.   v1:= v2.[|java:text:Annotation.value|]   @type object;
#L0efdb6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efdbc.   v0:= temp  @type object;
#L0efdbe.   v1:= 93  @length 16;
#L0efdc2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efdc8.   v0:= temp  @type object;
#L0efdca.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0efdd0.   v0:= temp  @type object;
#L0efdd2.   return v0  @type object;

   }
record [|java:text:CharacterIterator|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:lang:Cloneable|] {
   }
      global [|char|] @@[|java:text:CharacterIterator.DONE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|java:lang:Object|] [|java:text:CharacterIterator.clone|] () @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.clone:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|char|] [|java:text:CharacterIterator.current|] () @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.current:()C|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|char|] [|java:text:CharacterIterator.first|] () @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.first:()C|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:CharacterIterator.getBeginIndex|] () @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.getBeginIndex:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:CharacterIterator.getEndIndex|] () @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.getEndIndex:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:CharacterIterator.getIndex|] () @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.getIndex:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|char|] [|java:text:CharacterIterator.last|] () @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.last:()C|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|char|] [|java:text:CharacterIterator.next|] () @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.next:()C|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|char|] [|java:text:CharacterIterator.previous|] () @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.previous:()C|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|char|] [|java:text:CharacterIterator.setIndex|] ([|int|] v0) @owner [|java:text:CharacterIterator|] @signature [|Ljava/text/CharacterIterator;.setIndex:(I)C|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:AttributedCharacterIterator|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:text:CharacterIterator|] {
   }
    procedure [|java:util:Set|] [|java:text:AttributedCharacterIterator.getAllAttributeKeys|] () @owner [|java:text:AttributedCharacterIterator|] @signature [|Ljava/text/AttributedCharacterIterator;.getAllAttributeKeys:()Ljava/util/Set;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:text:AttributedCharacterIterator.getAttribute|] ([|java:text:AttributedCharacterIterator$Attribute|] v0 @type (object)) @owner [|java:text:AttributedCharacterIterator|] @signature [|Ljava/text/AttributedCharacterIterator;.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Map|] [|java:text:AttributedCharacterIterator.getAttributes|] () @owner [|java:text:AttributedCharacterIterator|] @signature [|Ljava/text/AttributedCharacterIterator;.getAttributes:()Ljava/util/Map;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:AttributedCharacterIterator.getRunLimit|] () @owner [|java:text:AttributedCharacterIterator|] @signature [|Ljava/text/AttributedCharacterIterator;.getRunLimit:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:AttributedCharacterIterator.getRunLimit|] ([|java:text:AttributedCharacterIterator$Attribute|] v0 @type (object)) @owner [|java:text:AttributedCharacterIterator|] @signature [|Ljava/text/AttributedCharacterIterator;.getRunLimit:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:AttributedCharacterIterator.getRunLimit|] ([|java:util:Set|] v0 @type (object)) @owner [|java:text:AttributedCharacterIterator|] @signature [|Ljava/text/AttributedCharacterIterator;.getRunLimit:(Ljava/util/Set;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:AttributedCharacterIterator.getRunStart|] () @owner [|java:text:AttributedCharacterIterator|] @signature [|Ljava/text/AttributedCharacterIterator;.getRunStart:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:AttributedCharacterIterator.getRunStart|] ([|java:text:AttributedCharacterIterator$Attribute|] v0 @type (object)) @owner [|java:text:AttributedCharacterIterator|] @signature [|Ljava/text/AttributedCharacterIterator;.getRunStart:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:AttributedCharacterIterator.getRunStart|] ([|java:util:Set|] v0 @type (object)) @owner [|java:text:AttributedCharacterIterator|] @signature [|Ljava/text/AttributedCharacterIterator;.getRunStart:(Ljava/util/Set;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:AttributedString$AttributedIterator|]  @type class @AccessFlag  extends  [|java:text:AttributedCharacterIterator|] {
      [|java:text:AttributedString|] [|java:text:AttributedString$AttributedIterator.attrString|]    @AccessFlag PRIVATE;
      [|java:util:HashSet|] [|java:text:AttributedString$AttributedIterator.attributesAllowed|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:AttributedString$AttributedIterator.begin|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:AttributedString$AttributedIterator.end|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:AttributedString$AttributedIterator.offset|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:text:AttributedString$AttributedIterator.<init>|] ([|java:text:AttributedString$AttributedIterator|] v2 @type (this), [|java:text:AttributedString|] v3 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.<init>:(Ljava/text/AttributedString;)V|] @Access CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0efde4.   v1:= 0  @length 4;
#L0efde6.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0efdec.   v2.[|java:text:AttributedString$AttributedIterator.attrString|]  := v3 @type object;
#L0efdf0.   v2.[|java:text:AttributedString$AttributedIterator.begin|]  := v1;
#L0efdf4.   v0:= v3.[|java:text:AttributedString.text|]   @type object;
#L0efdf8.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0efdfe.   v0:= temp;
#L0efe00.   v2.[|java:text:AttributedString$AttributedIterator.end|]  := v0;
#L0efe04.   v2.[|java:text:AttributedString$AttributedIterator.offset|]  := v1;
#L0efe08.   return @void ;

   }
    procedure [|void|] [|java:text:AttributedString$AttributedIterator.<init>|] ([|java:text:AttributedString$AttributedIterator|] v3 @type (this), [|java:text:AttributedString|] v4 @type (object), [|java:text:AttributedCharacterIterator$Attribute|][] v5 @type (object), [|int|] v6, [|int|] v7) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.<init>:(Ljava/text/AttributedString;[Ljava/text/AttributedCharacterIterator$Attribute;II)V|] @Access CONSTRUCTOR {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L002c,L0038));
        [|java:util:HashSet|] v1 @varname [|set|] @scope ((L002b,L0038));





        v2;
      
#L0efe1c.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0efe22.   if v6 < 0 then goto L0efe3a;
#L0efe26.   v2:= v4.[|java:text:AttributedString.text|]   @type object;
#L0efe2a.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0efe30.   v2:= temp;
#L0efe32.   if v7 > v2 then goto L0efe3a;
#L0efe36.   if v6 <= v7 then goto L0efe46;
#L0efe3a.   v2:= new [|java:lang:IllegalArgumentException|];
#L0efe3e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0efe44.   throw v2;
#L0efe46.   v3.[|java:text:AttributedString$AttributedIterator.begin|]  := v6;
#L0efe4a.   v3.[|java:text:AttributedString$AttributedIterator.end|]  := v7;
#L0efe4e.   v3.[|java:text:AttributedString$AttributedIterator.offset|]  := v6;
#L0efe52.   v3.[|java:text:AttributedString$AttributedIterator.attrString|]  := v4 @type object;
#L0efe56.   if v5 == 0 then goto L0efe8c;
#L0efe5a.   v1:= new [|java:util:HashSet|];
#L0efe5e.   v2:= v5.length;
#L0efe60.   v2:= v2 * 4;
#L0efe64.   v2:= v2 / 3;
#L0efe68.   v2:= v2 + 1;
#L0efe6c.   call temp:=  [|java:util:HashSet.<init>|](v1, v2) @signature [|Ljava/util/HashSet;.<init>:(I)V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0efe72.   v0:= v5.length;
#L0efe74.   v0:= v0 + -1;
#L0efe78.   if v0 < 0 then goto L0efe88;
#L0efe7c.   v2:= v5[v0]  @type object;
#L0efe80.   call temp:=  [|java:util:HashSet.add|](v1, v2) @signature [|Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L0efe86.   goto L0efe74;
#L0efe88.   v3.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]  := v1 @type object;
#L0efe8c.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:text:AttributedString$AttributedIterator.currentValue|] ([|java:text:AttributedString$AttributedIterator|] v5 @type (this), [|java:util:List|] v6 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.currentValue:(Ljava/util/List;)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        [|java:text:AttributedString$Range|] v1 @varname [|range|] @scope ((L0011,L0025));
        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0005,L0026));


        v2;
        v3;
        v4;
      
#L0efea0.   v2:= 0  @length 4;
#L0efea2.   call temp:=  [|java:util:List.iterator|](v6) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0efea8.   v0:= temp  @type object;
#L0efeaa.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0efeb0.   v3:= temp;
#L0efeb2.   if v3 == 0 then goto L0efeea;
#L0efeb6.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0efebc.   v1:= temp  @type object;
#L0efebe.   v1:= ([|java:text:AttributedString$Range|])v1;
#L0efec2.   v3:= v5.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0efec6.   v4:= v1.[|java:text:AttributedString$Range.start|] ;
#L0efeca.   if v3 < v4 then goto L0efeaa;
#L0efece.   v3:= v5.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0efed2.   v4:= v1.[|java:text:AttributedString$Range.end|] ;
#L0efed6.   if v3 >= v4 then goto L0efeaa;
#L0efeda.   call temp:=  [|java:text:AttributedString$AttributedIterator.inRange|](v5, v1) @signature [|Ljava/text/AttributedString$AttributedIterator;.inRange:(Ljava/text/AttributedString$Range;)Z|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0efee0.   v3:= temp;
#L0efee2.   if v3 == 0 then goto L0efeea;
#L0efee6.   v2:= v1.[|java:text:AttributedString$Range.value|]   @type object;
#L0efeea.   return v2  @type object;

   }
    procedure [|boolean|] [|java:text:AttributedString$AttributedIterator.inRange|] ([|java:text:AttributedString$AttributedIterator|] v3 @type (this), [|java:text:AttributedString$Range|] v4 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.inRange:(Ljava/text/AttributedString$Range;)Z|] @Access PRIVATE {
      local temp ;


        v0;
        v1;
        v2;
      
#L0efefc.   v0:= 1  @length 4;
#L0efefe.   v1:= v4.[|java:text:AttributedString$Range.value|]   @type object;
#L0eff02.   v1:= instanceof @varname v1 @type [|java:text:Annotation|];
#L0eff06.   if v1 != 0 then goto L0eff0c;
#L0eff0a.   return v0;
#L0eff0c.   v1:= v4.[|java:text:AttributedString$Range.start|] ;
#L0eff10.   v2:= v3.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0eff14.   if v1 < v2 then goto L0eff3c;
#L0eff18.   v1:= v4.[|java:text:AttributedString$Range.start|] ;
#L0eff1c.   v2:= v3.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0eff20.   if v1 >= v2 then goto L0eff3c;
#L0eff24.   v1:= v4.[|java:text:AttributedString$Range.end|] ;
#L0eff28.   v2:= v3.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0eff2c.   if v1 <= v2 then goto L0eff3c;
#L0eff30.   v1:= v4.[|java:text:AttributedString$Range.end|] ;
#L0eff34.   v2:= v3.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0eff38.   if v1 <= v2 then goto L0eff0a;
#L0eff3c.   v0:= 0  @length 4;
#L0eff3e.   goto L0eff0a;

   }
    procedure [|boolean|] [|java:text:AttributedString$AttributedIterator.inRange|] ([|java:text:AttributedString$AttributedIterator|] v6 @type (this), [|java:util:List|] v7 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.inRange:(Ljava/util/List;)Z|] @Access PRIVATE {
      local temp ;
        [|java:text:AttributedString$Range|] v1 @varname [|range|] @scope ((L0012,L0031), (L0032,L0052));
        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0006,L0052));


        v2;
        v3;
        v4;
        v5;
      
#L0eff50.   v3:= 1  @length 4;
#L0eff52.   v2:= 0  @length 4;
#L0eff54.   call temp:=  [|java:util:List.iterator|](v7) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0eff5a.   v0:= temp  @type object;
#L0eff5c.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0eff62.   v4:= temp;
#L0eff64.   if v4 == 0 then goto L0effb2;
#L0eff68.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0eff6e.   v1:= temp  @type object;
#L0eff70.   v1:= ([|java:text:AttributedString$Range|])v1;
#L0eff74.   v4:= v1.[|java:text:AttributedString$Range.start|] ;
#L0eff78.   v5:= v6.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0eff7c.   if v4 < v5 then goto L0effb4;
#L0eff80.   v4:= v1.[|java:text:AttributedString$Range.start|] ;
#L0eff84.   v5:= v6.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0eff88.   if v4 >= v5 then goto L0effb4;
#L0eff8c.   v4:= v1.[|java:text:AttributedString$Range.value|]   @type object;
#L0eff90.   v4:= instanceof @varname v4 @type [|java:text:Annotation|];
#L0eff94.   if v4 == 0 then goto L0effb0;
#L0eff98.   v4:= v1.[|java:text:AttributedString$Range.end|] ;
#L0eff9c.   v5:= v6.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0effa0.   if v4 <= v5 then goto L0effb2;
#L0effa4.   v4:= v1.[|java:text:AttributedString$Range.end|] ;
#L0effa8.   v5:= v6.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0effac.   if v4 > v5 then goto L0effb2;
#L0effb0.   v2:= v3;
#L0effb2.   return v2;
#L0effb4.   v4:= v1.[|java:text:AttributedString$Range.end|] ;
#L0effb8.   v5:= v6.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0effbc.   if v4 <= v5 then goto L0eff5c;
#L0effc0.   v4:= v1.[|java:text:AttributedString$Range.end|] ;
#L0effc4.   v5:= v6.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0effc8.   if v4 > v5 then goto L0eff5c;
#L0effcc.   v4:= v1.[|java:text:AttributedString$Range.value|]   @type object;
#L0effd0.   v4:= instanceof @varname v4 @type [|java:text:Annotation|];
#L0effd4.   if v4 == 0 then goto L0efff0;
#L0effd8.   v4:= v1.[|java:text:AttributedString$Range.start|] ;
#L0effdc.   v5:= v6.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0effe0.   if v4 < v5 then goto L0effb2;
#L0effe4.   v4:= v1.[|java:text:AttributedString$Range.start|] ;
#L0effe8.   v5:= v6.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0effec.   if v4 >= v5 then goto L0effb2;
#L0efff0.   v2:= v3;
#L0efff2.   goto L0effb2;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.runLimit|] ([|java:text:AttributedString$AttributedIterator|] v5 @type (this), [|java:util:List|] v6 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.runLimit:(Ljava/util/List;)I|] @Access PRIVATE {
      local temp ;
        [|java:text:AttributedString$Range|] v1 @varname [|range|] @scope ((L0016,L001c), (L001d,L003b));
        [|int|] v2 @varname [|result|] @scope ((L0002,L001c), (L001d,L003b));
        [|java:util:ListIterator|] v0 @varname [|it|] @scope ((L000a,L003b));


        v3;
        v4;
      
#L0f0004.   v2:= v5.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f0008.   call temp:=  [|java:util:List.size|](v6) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0f000e.   v3:= temp;
#L0f0010.   call temp:=  [|java:util:List.listIterator|](v6, v3) @signature [|Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0f0016.   v0:= temp  @type object;
#L0f0018.   call temp:=  [|java:util:ListIterator.hasPrevious|](v0) @signature [|Ljava/util/ListIterator;.hasPrevious:()Z|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f001e.   v3:= temp;
#L0f0020.   if v3 == 0 then goto L0f003c;
#L0f0024.   call temp:=  [|java:util:ListIterator.previous|](v0) @signature [|Ljava/util/ListIterator;.previous:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f002a.   v1:= temp  @type object;
#L0f002c.   v1:= ([|java:text:AttributedString$Range|])v1;
#L0f0030.   v3:= v1.[|java:text:AttributedString$Range.end|] ;
#L0f0034.   v4:= v5.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f0038.   if v3 > v4 then goto L0f003e;
#L0f003c.   return v2;
#L0f003e.   v3:= v5.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f0042.   v4:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f0046.   if v3 < v4 then goto L0f0068;
#L0f004a.   v3:= v5.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f004e.   v4:= v1.[|java:text:AttributedString$Range.end|] ;
#L0f0052.   if v3 >= v4 then goto L0f0068;
#L0f0056.   call temp:=  [|java:text:AttributedString$AttributedIterator.inRange|](v5, v1) @signature [|Ljava/text/AttributedString$AttributedIterator;.inRange:(Ljava/text/AttributedString$Range;)Z|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f005c.   v3:= temp;
#L0f005e.   if v3 == 0 then goto L0f003c;
#L0f0062.   v2:= v1.[|java:text:AttributedString$Range.end|] ;
#L0f0066.   goto L0f003c;
#L0f0068.   v3:= v5.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f006c.   v4:= v1.[|java:text:AttributedString$Range.end|] ;
#L0f0070.   if v3 >= v4 then goto L0f003c;
#L0f0074.   v2:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f0078.   goto L0f0018;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.runStart|] ([|java:text:AttributedString$AttributedIterator|] v5 @type (this), [|java:util:List|] v6 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.runStart:(Ljava/util/List;)I|] @Access PRIVATE {
      local temp ;
        [|java:text:AttributedString$Range|] v1 @varname [|range|] @scope ((L0012,L0018), (L0019,L0037));
        [|int|] v2 @varname [|result|] @scope ((L0002,L0018), (L0019,L0037));
        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0006,L0037));


        v3;
        v4;
      
#L0f008c.   v2:= v5.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f0090.   call temp:=  [|java:util:List.iterator|](v6) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0f0096.   v0:= temp  @type object;
#L0f0098.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f009e.   v3:= temp;
#L0f00a0.   if v3 == 0 then goto L0f00bc;
#L0f00a4.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f00aa.   v1:= temp  @type object;
#L0f00ac.   v1:= ([|java:text:AttributedString$Range|])v1;
#L0f00b0.   v3:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f00b4.   v4:= v5.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f00b8.   if v3 < v4 then goto L0f00be;
#L0f00bc.   return v2;
#L0f00be.   v3:= v5.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f00c2.   v4:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f00c6.   if v3 < v4 then goto L0f00e8;
#L0f00ca.   v3:= v5.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f00ce.   v4:= v1.[|java:text:AttributedString$Range.end|] ;
#L0f00d2.   if v3 >= v4 then goto L0f00e8;
#L0f00d6.   call temp:=  [|java:text:AttributedString$AttributedIterator.inRange|](v5, v1) @signature [|Ljava/text/AttributedString$AttributedIterator;.inRange:(Ljava/text/AttributedString$Range;)Z|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f00dc.   v3:= temp;
#L0f00de.   if v3 == 0 then goto L0f00bc;
#L0f00e2.   v2:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f00e6.   goto L0f00bc;
#L0f00e8.   v3:= v5.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f00ec.   v4:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f00f0.   if v3 < v4 then goto L0f00bc;
#L0f00f4.   v2:= v1.[|java:text:AttributedString$Range.end|] ;
#L0f00f8.   goto L0f0098;

   }
    procedure [|java:lang:Object|] [|java:text:AttributedString$AttributedIterator.clone|] ([|java:text:AttributedString$AttributedIterator|] v3 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:AttributedString$AttributedIterator|] v0 @varname [|clone|] @scope ((L0006,L0015));
        [|java:lang:CloneNotSupportedException|] v1 @varname [|e|] @scope ((L0016,L001c));

        v2;
      
#L0f010c.   call temp:=  [|java:lang:Object.clone|](v3) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0f0112.   v0:= temp  @type object;
#L0f0114.   v0:= ([|java:text:AttributedString$AttributedIterator|])v0;
#L0f0118.   v2:= v3.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f011c.   if v2 == 0 then goto L0f0134;
#L0f0120.   v2:= v3.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f0124.   call temp:=  [|java:util:HashSet.clone|](v2) @signature [|Ljava/util/HashSet;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L0f012a.   v2:= temp  @type object;
#L0f012c.   v2:= ([|java:util:HashSet|])v2;
#L0f0130.   v0.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]  := v2 @type object;
#L0f0134.   return v0  @type object;
#L0f0136.   v1:= Exception  @type object;
#L0f0138.   v2:= new [|java:lang:AssertionError|];
#L0f013c.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v1) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0f0142.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L0f010c..L0f0134] goto L0f0136;

   }
    procedure [|char|] [|java:text:AttributedString$AttributedIterator.current|] ([|java:text:AttributedString$AttributedIterator|] v2 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.current:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f0164.   v0:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f0168.   v1:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f016c.   if v0 != v1 then goto L0f0178;
#L0f0170.    v0:= 0.000000;
#L0f0176.   return v0;
#L0f0178.   v0:= v2.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f017c.   v0:= v0.[|java:text:AttributedString.text|]   @type object;
#L0f0180.   v1:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f0184.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f018a.   v0:= temp;
#L0f018c.   goto L0f0176;

   }
    procedure [|char|] [|java:text:AttributedString$AttributedIterator.first|] ([|java:text:AttributedString$AttributedIterator|] v2 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.first:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f01a0.   v0:= v2.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f01a4.   v1:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f01a8.   if v0 != v1 then goto L0f01b4;
#L0f01ac.    v0:= 0.000000;
#L0f01b2.   return v0;
#L0f01b4.   v0:= v2.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f01b8.   v2.[|java:text:AttributedString$AttributedIterator.offset|]  := v0;
#L0f01bc.   v0:= v2.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f01c0.   v0:= v0.[|java:text:AttributedString.text|]   @type object;
#L0f01c4.   v1:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f01c8.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f01ce.   v0:= temp;
#L0f01d0.   goto L0f01b2;

   }
    procedure [|java:util:Set|] [|java:text:AttributedString$AttributedIterator.getAllAttributeKeys|] ([|java:text:AttributedString$AttributedIterator|] v6 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getAllAttributeKeys:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        [|java:util:Map$Entry|] v0 @varname [|entry|] @scope ((L0048,L006c));
        [|java:util:Iterator|] v1 @varname [|it|] @scope ((L003c,L006c));
        [|java:util:List|] v2 @varname [|ranges|] @scope ((L005e,L006c));
        [|java:util:Set|] v3 @varname [|result|] @scope ((L0030,L006c));

        v4;
        v5;
      
#L0f01e4.   v4:= v6.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f01e8.   if v4 != 0 then goto L0f021e;
#L0f01ec.   v4:= v6.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f01f0.   v5:= v6.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f01f4.   v5:= v5.[|java:text:AttributedString.text|]   @type object;
#L0f01f8.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f01fe.   v5:= temp;
#L0f0200.   if v4 != v5 then goto L0f021e;
#L0f0204.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f0208.   if v4 != 0 then goto L0f021e;
#L0f020c.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f0210.   v4:= v4.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f0214.   call temp:=  [|java:util:Map.keySet|](v4) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f021a.   v3:= temp  @type object;
#L0f021c.   return v3  @type object;
#L0f021e.   v3:= new [|java:util:HashSet|];
#L0f0222.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f0226.   v4:= v4.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f022a.   call temp:=  [|java:util:Map.size|](v4) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0230.   v4:= temp;
#L0f0232.   v4:= v4 * 4;
#L0f0236.   v4:= v4 / 3;
#L0f023a.   v4:= v4 + 1;
#L0f023e.   call temp:=  [|java:util:HashSet.<init>|](v3, v4) @signature [|Ljava/util/HashSet;.<init>:(I)V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0f0244.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f0248.   v4:= v4.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f024c.   call temp:=  [|java:util:Map.entrySet|](v4) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0252.   v4:= temp  @type object;
#L0f0254.   call temp:=  [|java:util:Set.iterator|](v4) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0f025a.   v1:= temp  @type object;
#L0f025c.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f0262.   v4:= temp;
#L0f0264.   if v4 == 0 then goto L0f021c;
#L0f0268.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f026e.   v0:= temp  @type object;
#L0f0270.   v0:= ([|java:util:Map$Entry|])v0;
#L0f0274.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f0278.   if v4 == 0 then goto L0f0294;
#L0f027c.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f0280.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f0286.   v5:= temp  @type object;
#L0f0288.   call temp:=  [|java:util:HashSet.contains|](v4, v5) @signature [|Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L0f028e.   v4:= temp;
#L0f0290.   if v4 == 0 then goto L0f025c;
#L0f0294.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f029a.   v2:= temp  @type object;
#L0f029c.   v2:= ([|java:util:List|])v2;
#L0f02a0.   call temp:=  [|java:text:AttributedString$AttributedIterator.inRange|](v6, v2) @signature [|Ljava/text/AttributedString$AttributedIterator;.inRange:(Ljava/util/List;)Z|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f02a6.   v4:= temp;
#L0f02a8.   if v4 == 0 then goto L0f025c;
#L0f02ac.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f02b2.   v4:= temp  @type object;
#L0f02b4.   call temp:=  [|java:util:Set.add|](v3, v4) @signature [|Ljava/util/Set;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L0f02ba.   goto L0f025c;

   }
    procedure [|java:lang:Object|] [|java:text:AttributedString$AttributedIterator.getAttribute|] ([|java:text:AttributedString$AttributedIterator|] v3 @type (this), [|java:text:AttributedCharacterIterator$Attribute|] v4 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:util:ArrayList|] v0 @varname [|ranges|] @scope ((L0018,L001f));


        v1;
        v2;
      
#L0f02cc.   v1:= 0  @length 4;
#L0f02ce.   v2:= v3.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f02d2.   if v2 == 0 then goto L0f02e8;
#L0f02d6.   v2:= v3.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f02da.   call temp:=  [|java:util:HashSet.contains|](v2, v4) @signature [|Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L0f02e0.   v2:= temp;
#L0f02e2.   if v2 != 0 then goto L0f02e8;
#L0f02e6.   return v1  @type object;
#L0f02e8.   v2:= v3.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f02ec.   v2:= v2.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f02f0.   call temp:=  [|java:util:Map.get|](v2, v4) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f02f6.   v0:= temp  @type object;
#L0f02f8.   v0:= ([|java:util:ArrayList|])v0;
#L0f02fc.   if v0 == 0 then goto L0f02e6;
#L0f0300.   call temp:=  [|java:text:AttributedString$AttributedIterator.currentValue|](v3, v0) @signature [|Ljava/text/AttributedString$AttributedIterator;.currentValue:(Ljava/util/List;)Ljava/lang/Object;|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f0306.   v1:= temp  @type object;
#L0f0308.   goto L0f02e6;

   }
    procedure [|java:util:Map|] [|java:text:AttributedString$AttributedIterator.getAttributes|] ([|java:text:AttributedString$AttributedIterator|] v6 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getAttributes:()Ljava/util/Map;|] @Access PUBLIC {
      local temp ;
        [|java:util:Map$Entry|] v0 @varname [|entry|] @scope ((L002b,L004f));
        [|java:lang:Object|] v3 @varname [|value|] @scope ((L0045,L004f));
        [|java:util:Iterator|] v1 @varname [|it|] @scope ((L001f,L0050));
        [|java:util:Map|] v2 @varname [|result|] @scope ((L0013,L0050));

        v4;
        v5;
      
#L0f031c.   v2:= new [|java:util:HashMap|];
#L0f0320.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f0324.   v4:= v4.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f0328.   call temp:=  [|java:util:Map.size|](v4) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L0f032e.   v4:= temp;
#L0f0330.   v4:= v4 * 4;
#L0f0334.   v4:= v4 / 3;
#L0f0338.   v4:= v4 + 1;
#L0f033c.   call temp:=  [|java:util:HashMap.<init>|](v2, v4) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0f0342.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f0346.   v4:= v4.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f034a.   call temp:=  [|java:util:Map.entrySet|](v4) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0350.   v4:= temp  @type object;
#L0f0352.   call temp:=  [|java:util:Set.iterator|](v4) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0f0358.   v1:= temp  @type object;
#L0f035a.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f0360.   v4:= temp;
#L0f0362.   if v4 == 0 then goto L0f03ba;
#L0f0366.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f036c.   v0:= temp  @type object;
#L0f036e.   v0:= ([|java:util:Map$Entry|])v0;
#L0f0372.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f0376.   if v4 == 0 then goto L0f0392;
#L0f037a.   v4:= v6.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f037e.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f0384.   v5:= temp  @type object;
#L0f0386.   call temp:=  [|java:util:HashSet.contains|](v4, v5) @signature [|Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L0f038c.   v4:= temp;
#L0f038e.   if v4 == 0 then goto L0f035a;
#L0f0392.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f0398.   v4:= temp  @type object;
#L0f039a.   v4:= ([|java:util:List|])v4;
#L0f039e.   call temp:=  [|java:text:AttributedString$AttributedIterator.currentValue|](v6, v4) @signature [|Ljava/text/AttributedString$AttributedIterator;.currentValue:(Ljava/util/List;)Ljava/lang/Object;|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f03a4.   v3:= temp  @type object;
#L0f03a6.   if v3 == 0 then goto L0f035a;
#L0f03aa.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f03b0.   v4:= temp  @type object;
#L0f03b2.   call temp:=  [|java:util:Map.put|](v2, v4, v3) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f03b8.   goto L0f035a;
#L0f03ba.   return v2  @type object;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.getBeginIndex|] ([|java:text:AttributedString$AttributedIterator|] v1 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getBeginIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f03cc.   v0:= v1.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f03d0.   return v0;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.getEndIndex|] ([|java:text:AttributedString$AttributedIterator|] v1 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getEndIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f03e4.   v0:= v1.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f03e8.   return v0;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.getIndex|] ([|java:text:AttributedString$AttributedIterator|] v1 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f03fc.   v0:= v1.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f0400.   return v0;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.getRunLimit|] ([|java:text:AttributedString$AttributedIterator|] v1 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunLimit:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f0414.   call temp:=  [|java:text:AttributedString$AttributedIterator.getAllAttributeKeys|](v1) @signature [|Ljava/text/AttributedString$AttributedIterator;.getAllAttributeKeys:()Ljava/util/Set;|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type virtual;
#L0f041a.   v0:= temp  @type object;
#L0f041c.   call temp:=  [|java:text:AttributedString$AttributedIterator.getRunLimit|](v1, v0) @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunLimit:(Ljava/util/Set;)I|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type virtual;
#L0f0422.   v0:= temp;
#L0f0424.   return v0;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.getRunLimit|] ([|java:text:AttributedString$AttributedIterator|] v2 @type (this), [|java:text:AttributedCharacterIterator$Attribute|] v3 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunLimit:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @Access PUBLIC {
      local temp ;
        [|java:util:ArrayList|] v0 @varname [|ranges|] @scope ((L0019,L0023));


        v1;
      
#L0f0438.   v1:= v2.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f043c.   if v1 == 0 then goto L0f0456;
#L0f0440.   v1:= v2.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f0444.   call temp:=  [|java:util:HashSet.contains|](v1, v3) @signature [|Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L0f044a.   v1:= temp;
#L0f044c.   if v1 != 0 then goto L0f0456;
#L0f0450.   v1:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f0454.   return v1;
#L0f0456.   v1:= v2.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f045a.   v1:= v1.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f045e.   call temp:=  [|java:util:Map.get|](v1, v3) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0464.   v0:= temp  @type object;
#L0f0466.   v0:= ([|java:util:ArrayList|])v0;
#L0f046a.   if v0 != 0 then goto L0f0474;
#L0f046e.   v1:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f0472.   goto L0f0454;
#L0f0474.   call temp:=  [|java:text:AttributedString$AttributedIterator.runLimit|](v2, v0) @signature [|Ljava/text/AttributedString$AttributedIterator;.runLimit:(Ljava/util/List;)I|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f047a.   v1:= temp;
#L0f047c.   goto L0f0454;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.getRunLimit|] ([|java:text:AttributedString$AttributedIterator|] v5 @type (this), [|java:util:Set|] v6 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunLimit:(Ljava/util/Set;)I|] @Access PUBLIC {
      local temp ;
        [|java:text:AttributedCharacterIterator$Attribute|] v0 @varname [|attribute|] @scope ((L0012,L001a));
        [|int|] v3 @varname [|newLimit|] @scope ((L0016,L001a));
        [|java:util:Iterator|] v1 @varname [|it|] @scope ((L0006,L001b));
        [|int|] v2 @varname [|limit|] @scope ((L0002,L001b));


        v4;
      
#L0f0490.   v2:= v5.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f0494.   call temp:=  [|java:util:Set.iterator|](v6) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0f049a.   v1:= temp  @type object;
#L0f049c.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f04a2.   v4:= temp;
#L0f04a4.   if v4 == 0 then goto L0f04c4;
#L0f04a8.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f04ae.   v0:= temp  @type object;
#L0f04b0.   v0:= ([|java:text:AttributedCharacterIterator$Attribute|])v0;
#L0f04b4.   call temp:=  [|java:text:AttributedString$AttributedIterator.getRunLimit|](v5, v0) @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunLimit:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type virtual;
#L0f04ba.   v3:= temp;
#L0f04bc.   if v3 >= v2 then goto L0f049c;
#L0f04c0.   v2:= v3;
#L0f04c2.   goto L0f049c;
#L0f04c4.   return v2;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.getRunStart|] ([|java:text:AttributedString$AttributedIterator|] v1 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunStart:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f04d8.   call temp:=  [|java:text:AttributedString$AttributedIterator.getAllAttributeKeys|](v1) @signature [|Ljava/text/AttributedString$AttributedIterator;.getAllAttributeKeys:()Ljava/util/Set;|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type virtual;
#L0f04de.   v0:= temp  @type object;
#L0f04e0.   call temp:=  [|java:text:AttributedString$AttributedIterator.getRunStart|](v1, v0) @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunStart:(Ljava/util/Set;)I|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type virtual;
#L0f04e6.   v0:= temp;
#L0f04e8.   return v0;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.getRunStart|] ([|java:text:AttributedString$AttributedIterator|] v2 @type (this), [|java:text:AttributedCharacterIterator$Attribute|] v3 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunStart:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @Access PUBLIC {
      local temp ;
        [|java:util:ArrayList|] v0 @varname [|ranges|] @scope ((L0019,L0023));


        v1;
      
#L0f04fc.   v1:= v2.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f0500.   if v1 == 0 then goto L0f051a;
#L0f0504.   v1:= v2.[|java:text:AttributedString$AttributedIterator.attributesAllowed|]   @type object;
#L0f0508.   call temp:=  [|java:util:HashSet.contains|](v1, v3) @signature [|Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L0f050e.   v1:= temp;
#L0f0510.   if v1 != 0 then goto L0f051a;
#L0f0514.   v1:= v2.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f0518.   return v1;
#L0f051a.   v1:= v2.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f051e.   v1:= v1.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f0522.   call temp:=  [|java:util:Map.get|](v1, v3) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0528.   v0:= temp  @type object;
#L0f052a.   v0:= ([|java:util:ArrayList|])v0;
#L0f052e.   if v0 != 0 then goto L0f0538;
#L0f0532.   v1:= v2.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f0536.   goto L0f0518;
#L0f0538.   call temp:=  [|java:text:AttributedString$AttributedIterator.runStart|](v2, v0) @signature [|Ljava/text/AttributedString$AttributedIterator;.runStart:(Ljava/util/List;)I|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f053e.   v1:= temp;
#L0f0540.   goto L0f0518;

   }
    procedure [|int|] [|java:text:AttributedString$AttributedIterator.getRunStart|] ([|java:text:AttributedString$AttributedIterator|] v5 @type (this), [|java:util:Set|] v6 @type (object)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunStart:(Ljava/util/Set;)I|] @Access PUBLIC {
      local temp ;
        [|java:text:AttributedCharacterIterator$Attribute|] v0 @varname [|attribute|] @scope ((L0012,L001a));
        [|int|] v2 @varname [|newStart|] @scope ((L0016,L001a));
        [|java:util:Iterator|] v1 @varname [|it|] @scope ((L0006,L001b));
        [|int|] v3 @varname [|start|] @scope ((L0002,L001b));


        v4;
      
#L0f0554.   v3:= v5.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f0558.   call temp:=  [|java:util:Set.iterator|](v6) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0f055e.   v1:= temp  @type object;
#L0f0560.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f0566.   v4:= temp;
#L0f0568.   if v4 == 0 then goto L0f0588;
#L0f056c.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f0572.   v0:= temp  @type object;
#L0f0574.   v0:= ([|java:text:AttributedCharacterIterator$Attribute|])v0;
#L0f0578.   call temp:=  [|java:text:AttributedString$AttributedIterator.getRunStart|](v5, v0) @signature [|Ljava/text/AttributedString$AttributedIterator;.getRunStart:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type virtual;
#L0f057e.   v2:= temp;
#L0f0580.   if v2 <= v3 then goto L0f0560;
#L0f0584.   v3:= v2;
#L0f0586.   goto L0f0560;
#L0f0588.   return v3;

   }
    procedure [|char|] [|java:text:AttributedString$AttributedIterator.last|] ([|java:text:AttributedString$AttributedIterator|] v2 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.last:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f059c.   v0:= v2.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f05a0.   v1:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f05a4.   if v0 != v1 then goto L0f05b0;
#L0f05a8.    v0:= 0.000000;
#L0f05ae.   return v0;
#L0f05b0.   v0:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f05b4.   v0:= v0 + -1;
#L0f05b8.   v2.[|java:text:AttributedString$AttributedIterator.offset|]  := v0;
#L0f05bc.   v0:= v2.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f05c0.   v0:= v0.[|java:text:AttributedString.text|]   @type object;
#L0f05c4.   v1:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f05c8.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f05ce.   v0:= temp;
#L0f05d0.   goto L0f05ae;

   }
    procedure [|char|] [|java:text:AttributedString$AttributedIterator.next|] ([|java:text:AttributedString$AttributedIterator|] v2 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.next:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f05e4.   v0:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f05e8.   v1:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f05ec.   v1:= v1 + -1;
#L0f05f0.   if v0 < v1 then goto L0f0604;
#L0f05f4.   v0:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f05f8.   v2.[|java:text:AttributedString$AttributedIterator.offset|]  := v0;
#L0f05fc.    v0:= 0.000000;
#L0f0602.   return v0;
#L0f0604.   v0:= v2.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f0608.   v0:= v0.[|java:text:AttributedString.text|]   @type object;
#L0f060c.   v1:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f0610.   v1:= v1 + 1;
#L0f0614.   v2.[|java:text:AttributedString$AttributedIterator.offset|]  := v1;
#L0f0618.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f061e.   v0:= temp;
#L0f0620.   goto L0f0602;

   }
    procedure [|char|] [|java:text:AttributedString$AttributedIterator.previous|] ([|java:text:AttributedString$AttributedIterator|] v2 @type (this)) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.previous:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f0634.   v0:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f0638.   v1:= v2.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f063c.   if v0 != v1 then goto L0f0648;
#L0f0640.    v0:= 0.000000;
#L0f0646.   return v0;
#L0f0648.   v0:= v2.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f064c.   v0:= v0.[|java:text:AttributedString.text|]   @type object;
#L0f0650.   v1:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f0654.   v1:= v1 + -1;
#L0f0658.   v2.[|java:text:AttributedString$AttributedIterator.offset|]  := v1;
#L0f065c.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f0662.   v0:= temp;
#L0f0664.   goto L0f0646;

   }
    procedure [|char|] [|java:text:AttributedString$AttributedIterator.setIndex|] ([|java:text:AttributedString$AttributedIterator|] v2 @type (this), [|int|] v3) @owner [|java:text:AttributedString$AttributedIterator|] @signature [|Ljava/text/AttributedString$AttributedIterator;.setIndex:(I)C|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f0678.   v0:= v2.[|java:text:AttributedString$AttributedIterator.begin|] ;
#L0f067c.   if v3 < v0 then goto L0f0688;
#L0f0680.   v0:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f0684.   if v3 <= v0 then goto L0f0694;
#L0f0688.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f068c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f0692.   throw v0;
#L0f0694.   v2.[|java:text:AttributedString$AttributedIterator.offset|]  := v3;
#L0f0698.   v0:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f069c.   v1:= v2.[|java:text:AttributedString$AttributedIterator.end|] ;
#L0f06a0.   if v0 != v1 then goto L0f06ac;
#L0f06a4.    v0:= 0.000000;
#L0f06aa.   return v0;
#L0f06ac.   v0:= v2.[|java:text:AttributedString$AttributedIterator.attrString|]   @type object;
#L0f06b0.   v0:= v0.[|java:text:AttributedString.text|]   @type object;
#L0f06b4.   v1:= v2.[|java:text:AttributedString$AttributedIterator.offset|] ;
#L0f06b8.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f06be.   v0:= temp;
#L0f06c0.   goto L0f06aa;

   }
record [|java:text:AttributedString$Range|]  @type class @AccessFlag   {
      [|int|] [|java:text:AttributedString$Range.end|]    @AccessFlag ;
      [|int|] [|java:text:AttributedString$Range.start|]    @AccessFlag ;
      [|java:lang:Object|] [|java:text:AttributedString$Range.value|]    @AccessFlag ;
   }
    procedure [|void|] [|java:text:AttributedString$Range.<init>|] ([|java:text:AttributedString$Range|] v0 @type (this), [|int|] v1, [|int|] v2, [|java:lang:Object|] v3 @type (object)) @owner [|java:text:AttributedString$Range|] @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;




      
#L0f06d4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f06da.   v0.[|java:text:AttributedString$Range.start|]  := v1;
#L0f06de.   v0.[|java:text:AttributedString$Range.end|]  := v2;
#L0f06e2.   v0.[|java:text:AttributedString$Range.value|]  := v3 @type object;
#L0f06e6.   return @void ;

   }
record [|java:text:AttributedString|]  @type class @AccessFlag PUBLIC  {
      [|java:util:Map|] [|java:text:AttributedString.attributeMap|]    @AccessFlag ;
      [|java:lang:String|] [|java:text:AttributedString.text|]    @AccessFlag ;
   }
    procedure [|void|] [|java:text:AttributedString.<init>|] ([|java:text:AttributedString|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L0f06f8.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f06fe.   if v3 != 0 then goto L0f0712;
#L0f0702.   v0:= new [|java:lang:NullPointerException|];
#L0f0706.   v1:= "value == null" @type (object, string);
#L0f070a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f0710.   throw v0;
#L0f0712.   v2.[|java:text:AttributedString.text|]  := v3 @type object;
#L0f0716.   v0:= new [|java:util:HashMap|];
#L0f071a.   v1:= 11  @length 16;
#L0f071e.   call temp:=  [|java:util:HashMap.<init>|](v0, v1) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0f0724.   v2.[|java:text:AttributedString.attributeMap|]  := v0 @type object;
#L0f0728.   return @void ;

   }
    procedure [|void|] [|java:text:AttributedString.<init>|] ([|java:text:AttributedString|] v7 @type (this), [|java:lang:String|] v8 @type (object), [|java:util:Map|] v9 @type (object)) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.<init>:(Ljava/lang/String;Ljava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:util:Map$Entry|] v0 @varname [|entry|] @scope ((L0048,L006d));
        [|java:util:ArrayList|] v2 @varname [|ranges|] @scope ((L004e,L006d));
        [|java:util:Iterator|] v1 @varname [|it|] @scope ((L003c,L006e));



        v3;
        v4;
        v5;
        v6;
      
#L0f073c.   call temp:=  [|java:lang:Object.<init>|](v7) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f0742.   if v8 != 0 then goto L0f0756;
#L0f0746.   v3:= new [|java:lang:NullPointerException|];
#L0f074a.   v4:= "value == null" @type (object, string);
#L0f074e.   call temp:=  [|java:lang:NullPointerException.<init>|](v3, v4) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f0754.   throw v3;
#L0f0756.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f075c.   v3:= temp;
#L0f075e.   if v3 != 0 then goto L0f077e;
#L0f0762.   call temp:=  [|java:util:Map.isEmpty|](v9) @signature [|Ljava/util/Map;.isEmpty:()Z|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0768.   v3:= temp;
#L0f076a.   if v3 != 0 then goto L0f077e;
#L0f076e.   v3:= new [|java:lang:IllegalArgumentException|];
#L0f0772.   v4:= "Cannot add attributes to empty string" @type (object, string);
#L0f0776.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f077c.   throw v3;
#L0f077e.   v7.[|java:text:AttributedString.text|]  := v8 @type object;
#L0f0782.   v3:= new [|java:util:HashMap|];
#L0f0786.   call temp:=  [|java:util:Map.size|](v9) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L0f078c.   v4:= temp;
#L0f078e.   v4:= v4 * 4;
#L0f0792.   v4:= v4 / 3;
#L0f0796.   v4:= v4 + 1;
#L0f079a.   call temp:=  [|java:util:HashMap.<init>|](v3, v4) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0f07a0.   v7.[|java:text:AttributedString.attributeMap|]  := v3 @type object;
#L0f07a4.   call temp:=  [|java:util:Map.entrySet|](v9) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f07aa.   v3:= temp  @type object;
#L0f07ac.   call temp:=  [|java:util:Set.iterator|](v3) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0f07b2.   v1:= temp  @type object;
#L0f07b4.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f07ba.   v3:= temp;
#L0f07bc.   if v3 == 0 then goto L0f0816;
#L0f07c0.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f07c6.   v0:= temp  @type object;
#L0f07c8.   v0:= ([|java:util:Map$Entry|])v0;
#L0f07cc.   v2:= new [|java:util:ArrayList|];
#L0f07d0.   v3:= 1  @length 4;
#L0f07d2.   call temp:=  [|java:util:ArrayList.<init>|](v2, v3) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0f07d8.   v3:= new [|java:text:AttributedString$Range|];
#L0f07dc.   v4:= 0  @length 4;
#L0f07de.   v5:= v7.[|java:text:AttributedString.text|]   @type object;
#L0f07e2.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f07e8.   v5:= temp;
#L0f07ea.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f07f0.   v6:= temp  @type object;
#L0f07f2.   call temp:=  [|java:text:AttributedString$Range.<init>|](v3, v4, v5, v6) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f07f8.   call temp:=  [|java:util:ArrayList.add|](v2, v3) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f07fe.   v4:= v7.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f0802.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f0808.   v3:= temp  @type object;
#L0f080a.   v3:= ([|java:text:AttributedCharacterIterator$Attribute|])v3;
#L0f080e.   call temp:=  [|java:util:Map.put|](v4, v3, v2) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0814.   goto L0f07b4;
#L0f0816.   return @void ;

   }
    procedure [|void|] [|java:text:AttributedString.<init>|] ([|java:text:AttributedString|] v10 @type (this), [|java:text:AttributedCharacterIterator|] v11 @type (object)) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.<init>:(Ljava/text/AttributedCharacterIterator;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:text:AttributedCharacterIterator$Attribute|] v0 @varname [|attribute|] @scope ((L005f,L0081));
        [|java:util:Set|] v1 @varname [|attributes|] @scope ((L003b,L0081));
        [|java:lang:StringBuilder|] v2 @varname [|buffer|] @scope ((L001a,L0081));
        [|int|] v3 @varname [|i|] @scope ((L001e,L0081));
        [|java:util:Iterator|] v4 @varname [|it|] @scope ((L0053,L0081));
        [|int|] v5 @varname [|limit|] @scope ((L0074,L0081));
        [|int|] v6 @varname [|start|] @scope ((L0070,L0081));
        [|java:lang:Object|] v7 @varname [|value|] @scope ((L0078,L0081));


        v8;
        v9;
      
#L0f0828.   call temp:=  [|java:lang:Object.<init>|](v10) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f082e.   call temp:=  [|java:text:AttributedCharacterIterator.getBeginIndex|](v11) @signature [|Ljava/text/AttributedCharacterIterator;.getBeginIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0834.   v8:= temp;
#L0f0836.   call temp:=  [|java:text:AttributedCharacterIterator.getEndIndex|](v11) @signature [|Ljava/text/AttributedCharacterIterator;.getEndIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f083c.   v9:= temp;
#L0f083e.   if v8 <= v9 then goto L0f0852;
#L0f0842.   v8:= new [|java:lang:IllegalArgumentException|];
#L0f0846.   v9:= "Invalid substring range" @type (object, string);
#L0f084a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v8, v9) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f0850.   throw v8;
#L0f0852.   v2:= new [|java:lang:StringBuilder|];
#L0f0856.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f085c.   call temp:=  [|java:text:AttributedCharacterIterator.getBeginIndex|](v11) @signature [|Ljava/text/AttributedCharacterIterator;.getBeginIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0862.   v3:= temp;
#L0f0864.   call temp:=  [|java:text:AttributedCharacterIterator.getEndIndex|](v11) @signature [|Ljava/text/AttributedCharacterIterator;.getEndIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f086a.   v8:= temp;
#L0f086c.   if v3 >= v8 then goto L0f088a;
#L0f0870.   call temp:=  [|java:text:AttributedCharacterIterator.current|](v11) @signature [|Ljava/text/AttributedCharacterIterator;.current:()C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0876.   v8:= temp;
#L0f0878.   call temp:=  [|java:lang:StringBuilder.append|](v2, v8) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f087e.   call temp:=  [|java:text:AttributedCharacterIterator.next|](v11) @signature [|Ljava/text/AttributedCharacterIterator;.next:()C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0884.   v3:= v3 + 1;
#L0f0888.   goto L0f0864;
#L0f088a.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f0890.   v8:= temp  @type object;
#L0f0892.   v10.[|java:text:AttributedString.text|]  := v8 @type object;
#L0f0896.   call temp:=  [|java:text:AttributedCharacterIterator.getAllAttributeKeys|](v11) @signature [|Ljava/text/AttributedCharacterIterator;.getAllAttributeKeys:()Ljava/util/Set;|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f089c.   v1:= temp  @type object;
#L0f089e.   if v1 != 0 then goto L0f08a4;
#L0f08a2.   return @void ;
#L0f08a4.   v8:= new [|java:util:HashMap|];
#L0f08a8.   call temp:=  [|java:util:Set.size|](v1) @signature [|Ljava/util/Set;.size:()I|] @classDescriptor [|java:util:Set|] @type interface;
#L0f08ae.   v9:= temp;
#L0f08b0.   v9:= v9 * 4;
#L0f08b4.   v9:= v9 / 3;
#L0f08b8.   v9:= v9 + 1;
#L0f08bc.   call temp:=  [|java:util:HashMap.<init>|](v8, v9) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0f08c2.   v10.[|java:text:AttributedString.attributeMap|]  := v8 @type object;
#L0f08c6.   call temp:=  [|java:util:Set.iterator|](v1) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0f08cc.   v4:= temp  @type object;
#L0f08ce.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f08d4.   v8:= temp;
#L0f08d6.   if v8 == 0 then goto L0f08a2;
#L0f08da.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f08e0.   v0:= temp  @type object;
#L0f08e2.   v0:= ([|java:text:AttributedCharacterIterator$Attribute|])v0;
#L0f08e6.   v8:= 0  @length 4;
#L0f08e8.   call temp:=  [|java:text:AttributedCharacterIterator.setIndex|](v11, v8) @signature [|Ljava/text/AttributedCharacterIterator;.setIndex:(I)C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f08ee.   call temp:=  [|java:text:AttributedCharacterIterator.current|](v11) @signature [|Ljava/text/AttributedCharacterIterator;.current:()C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f08f4.   v8:= temp;
#L0f08f6.    v9:= 0.000000;
#L0f08fc.   if v8 == v9 then goto L0f08ce;
#L0f0900.   call temp:=  [|java:text:AttributedCharacterIterator.getRunStart|](v11, v0) @signature [|Ljava/text/AttributedCharacterIterator;.getRunStart:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0906.   v6:= temp;
#L0f0908.   call temp:=  [|java:text:AttributedCharacterIterator.getRunLimit|](v11, v0) @signature [|Ljava/text/AttributedCharacterIterator;.getRunLimit:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f090e.   v5:= temp;
#L0f0910.   call temp:=  [|java:text:AttributedCharacterIterator.getAttribute|](v11, v0) @signature [|Ljava/text/AttributedCharacterIterator;.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0916.   v7:= temp  @type object;
#L0f0918.   if v7 == 0 then goto L0f0922;
#L0f091c.   call temp:=  [|java:text:AttributedString.addAttribute|](v10, v0, v7, v6, v5) @signature [|Ljava/text/AttributedString;.addAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V|] @classDescriptor [|java:text:AttributedString|] @type virtual;
#L0f0922.   call temp:=  [|java:text:AttributedCharacterIterator.setIndex|](v11, v5) @signature [|Ljava/text/AttributedCharacterIterator;.setIndex:(I)C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0928.   goto L0f08ee;

   }
    procedure [|void|] [|java:text:AttributedString.<init>|] ([|java:text:AttributedString|] v1 @type (this), [|java:text:AttributedCharacterIterator|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.<init>:(Ljava/text/AttributedCharacterIterator;II)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




        v0;
      
#L0f093c.   call temp:=  [|java:text:AttributedCharacterIterator.getAllAttributeKeys|](v2) @signature [|Ljava/text/AttributedCharacterIterator;.getAllAttributeKeys:()Ljava/util/Set;|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0942.   v0:= temp  @type object;
#L0f0944.   call temp:=  [|java:text:AttributedString.<init>|](v1, v2, v3, v4, v0) @signature [|Ljava/text/AttributedString;.<init>:(Ljava/text/AttributedCharacterIterator;IILjava/util/Set;)V|] @classDescriptor [|java:text:AttributedString|] @type direct;
#L0f094a.   return @void ;

   }
    procedure [|void|] [|java:text:AttributedString.<init>|] ([|java:text:AttributedString|] v8 @type (this), [|java:text:AttributedCharacterIterator|] v9 @type (object), [|int|] v10, [|int|] v11, [|java:util:Set|] v12 @type (object)) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.<init>:(Ljava/text/AttributedCharacterIterator;IILjava/util/Set;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        [|int|] v4 @varname [|runStart|] @scope ((L006b,L0080));
        [|java:text:AttributedCharacterIterator$Attribute|] v0 @varname [|attribute|] @scope ((L005a,L008f));
        [|java:lang:StringBuilder|] v1 @varname [|buffer|] @scope ((L001f,L008f));
        [|java:util:Iterator|] v2 @varname [|it|] @scope ((L004e,L008f));
        [|int|] v3 @varname [|limit|] @scope ((L006f,L008f));
        [|java:lang:Object|] v5 @varname [|value|] @scope ((L0067,L008f));





        v6;
        v7;
      
#L0f095c.   call temp:=  [|java:lang:Object.<init>|](v8) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f0962.   call temp:=  [|java:text:AttributedCharacterIterator.getBeginIndex|](v9) @signature [|Ljava/text/AttributedCharacterIterator;.getBeginIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0968.   v6:= temp;
#L0f096a.   if v10 < v6 then goto L0f097e;
#L0f096e.   call temp:=  [|java:text:AttributedCharacterIterator.getEndIndex|](v9) @signature [|Ljava/text/AttributedCharacterIterator;.getEndIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0974.   v6:= temp;
#L0f0976.   if v11 > v6 then goto L0f097e;
#L0f097a.   if v10 <= v11 then goto L0f098a;
#L0f097e.   v6:= new [|java:lang:IllegalArgumentException|];
#L0f0982.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f0988.   throw v6;
#L0f098a.   if v12 != 0 then goto L0f0990;
#L0f098e.   return @void ;
#L0f0990.   v1:= new [|java:lang:StringBuilder|];
#L0f0994.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f099a.   call temp:=  [|java:text:AttributedCharacterIterator.setIndex|](v9, v10) @signature [|Ljava/text/AttributedCharacterIterator;.setIndex:(I)C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f09a0.   call temp:=  [|java:text:AttributedCharacterIterator.getIndex|](v9) @signature [|Ljava/text/AttributedCharacterIterator;.getIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f09a6.   v6:= temp;
#L0f09a8.   if v6 >= v11 then goto L0f09c2;
#L0f09ac.   call temp:=  [|java:text:AttributedCharacterIterator.current|](v9) @signature [|Ljava/text/AttributedCharacterIterator;.current:()C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f09b2.   v6:= temp;
#L0f09b4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f09ba.   call temp:=  [|java:text:AttributedCharacterIterator.next|](v9) @signature [|Ljava/text/AttributedCharacterIterator;.next:()C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f09c0.   goto L0f09a0;
#L0f09c2.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f09c8.   v6:= temp  @type object;
#L0f09ca.   v8.[|java:text:AttributedString.text|]  := v6 @type object;
#L0f09ce.   v6:= new [|java:util:HashMap|];
#L0f09d2.   call temp:=  [|java:util:Set.size|](v12) @signature [|Ljava/util/Set;.size:()I|] @classDescriptor [|java:util:Set|] @type interface;
#L0f09d8.   v7:= temp;
#L0f09da.   v7:= v7 * 4;
#L0f09de.   v7:= v7 / 3;
#L0f09e2.   v7:= v7 + 1;
#L0f09e6.   call temp:=  [|java:util:HashMap.<init>|](v6, v7) @signature [|Ljava/util/HashMap;.<init>:(I)V|] @classDescriptor [|java:util:HashMap|] @type direct;
#L0f09ec.   v8.[|java:text:AttributedString.attributeMap|]  := v6 @type object;
#L0f09f0.   call temp:=  [|java:util:Set.iterator|](v12) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0f09f6.   v2:= temp  @type object;
#L0f09f8.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f09fe.   v6:= temp;
#L0f0a00.   if v6 == 0 then goto L0f098e;
#L0f0a04.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f0a0a.   v0:= temp  @type object;
#L0f0a0c.   v0:= ([|java:text:AttributedCharacterIterator$Attribute|])v0;
#L0f0a10.   call temp:=  [|java:text:AttributedCharacterIterator.setIndex|](v9, v10) @signature [|Ljava/text/AttributedCharacterIterator;.setIndex:(I)C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0a16.   call temp:=  [|java:text:AttributedCharacterIterator.getIndex|](v9) @signature [|Ljava/text/AttributedCharacterIterator;.getIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0a1c.   v6:= temp;
#L0f0a1e.   if v6 >= v11 then goto L0f09f8;
#L0f0a22.   call temp:=  [|java:text:AttributedCharacterIterator.getAttribute|](v9, v0) @signature [|Ljava/text/AttributedCharacterIterator;.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0a28.   v5:= temp  @type object;
#L0f0a2a.   call temp:=  [|java:text:AttributedCharacterIterator.getRunStart|](v9, v0) @signature [|Ljava/text/AttributedCharacterIterator;.getRunStart:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0a30.   v4:= temp;
#L0f0a32.   call temp:=  [|java:text:AttributedCharacterIterator.getRunLimit|](v9, v0) @signature [|Ljava/text/AttributedCharacterIterator;.getRunLimit:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0a38.   v3:= temp;
#L0f0a3a.   v6:= instanceof @varname v5 @type [|java:text:Annotation|];
#L0f0a3e.   if v6 == 0 then goto L0f0a4a;
#L0f0a42.   if v4 < v10 then goto L0f0a4a;
#L0f0a46.   if v3 <= v11 then goto L0f0a56;
#L0f0a4a.   if v5 == 0 then goto L0f0a6e;
#L0f0a4e.   v6:= instanceof @varname v5 @type [|java:text:Annotation|];
#L0f0a52.   if v6 != 0 then goto L0f0a6e;
#L0f0a56.   if v4 >= v10 then goto L0f0a5c;
#L0f0a5a.   v4:= v10;
#L0f0a5c.   v7:= v4 - v10  @type int;
#L0f0a60.   if v3 <= v11 then goto L0f0a76;
#L0f0a64.   v6:= v11;
#L0f0a66.   v6:= v6 - v10  @type int;
#L0f0a68.   call temp:=  [|java:text:AttributedString.addAttribute|](v8, v0, v5, v7, v6) @signature [|Ljava/text/AttributedString;.addAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V|] @classDescriptor [|java:text:AttributedString|] @type virtual;
#L0f0a6e.   call temp:=  [|java:text:AttributedCharacterIterator.setIndex|](v9, v3) @signature [|Ljava/text/AttributedCharacterIterator;.setIndex:(I)C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0a74.   goto L0f0a16;
#L0f0a76.   v6:= v3;
#L0f0a78.   goto L0f0a66;

   }
    procedure [|void|] [|java:text:AttributedString.<init>|] ([|java:text:AttributedString|] v2 @type (this), [|java:text:AttributedCharacterIterator|] v3 @type (object), [|int|] v4, [|int|] v5, [|java:text:AttributedCharacterIterator$Attribute|][] v6 @type (object)) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.<init>:(Ljava/text/AttributedCharacterIterator;II[Ljava/text/AttributedCharacterIterator$Attribute;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





        v0;
        v1;
      
#L0f0a8c.   if v6 != 0 then goto L0f0aa2;
#L0f0a90.   v0:= new [|java:util:HashSet|];
#L0f0a94.   call temp:=  [|java:util:HashSet.<init>|](v0) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0f0a9a.   call temp:=  [|java:text:AttributedString.<init>|](v2, v3, v4, v5, v0) @signature [|Ljava/text/AttributedString;.<init>:(Ljava/text/AttributedCharacterIterator;IILjava/util/Set;)V|] @classDescriptor [|java:text:AttributedString|] @type direct;
#L0f0aa0.   return @void ;
#L0f0aa2.   v0:= new [|java:util:HashSet|];
#L0f0aa6.   call temp:=  [|java:util:Arrays.asList|](v6) @signature [|Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f0aac.   v1:= temp  @type object;
#L0f0aae.   call temp:=  [|java:util:HashSet.<init>|](v0, v1) @signature [|Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L0f0ab4.   goto L0f0a9a;

   }
    procedure [|void|] [|java:text:AttributedString.addAttribute|] ([|java:text:AttributedString|] v4 @type (this), [|java:text:AttributedCharacterIterator$Attribute|] v5 @type (object), [|java:lang:Object|] v6 @type (object)) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.addAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        [|java:util:List|] v0 @varname [|ranges|] @scope ((L0020,L0024), (L0028,L0041));



        v1;
        v2;
        v3;
      
#L0f0ac8.   if v5 != 0 then goto L0f0adc;
#L0f0acc.   v1:= new [|java:lang:NullPointerException|];
#L0f0ad0.   v2:= "attribute == null" @type (object, string);
#L0f0ad4.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f0ada.   throw v1;
#L0f0adc.   v1:= v4.[|java:text:AttributedString.text|]   @type object;
#L0f0ae0.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f0ae6.   v1:= temp;
#L0f0ae8.   if v1 != 0 then goto L0f0af8;
#L0f0aec.   v1:= new [|java:lang:IllegalArgumentException|];
#L0f0af0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f0af6.   throw v1;
#L0f0af8.   v1:= v4.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f0afc.   call temp:=  [|java:util:Map.get|](v1, v5) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0b02.   v0:= temp  @type object;
#L0f0b04.   v0:= ([|java:util:List|])v0;
#L0f0b08.   if v0 != 0 then goto L0f0b42;
#L0f0b0c.   v0:= new [|java:util:ArrayList|];
#L0f0b10.   v1:= 1  @length 4;
#L0f0b12.   call temp:=  [|java:util:ArrayList.<init>|](v0, v1) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0f0b18.   v1:= v4.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f0b1c.   call temp:=  [|java:util:Map.put|](v1, v5, v0) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0b22.   v1:= new [|java:text:AttributedString$Range|];
#L0f0b26.   v2:= 0  @length 4;
#L0f0b28.   v3:= v4.[|java:text:AttributedString.text|]   @type object;
#L0f0b2c.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f0b32.   v3:= temp;
#L0f0b34.   call temp:=  [|java:text:AttributedString$Range.<init>|](v1, v2, v3, v6) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0b3a.   call temp:=  [|java:util:List.add|](v0, v1) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0f0b40.   return @void ;
#L0f0b42.   call temp:=  [|java:util:List.clear|](v0) @signature [|Ljava/util/List;.clear:()V|] @classDescriptor [|java:util:List|] @type interface;
#L0f0b48.   goto L0f0b22;

   }
    procedure [|void|] [|java:text:AttributedString.addAttribute|] ([|java:text:AttributedString|] v7 @type (this), [|java:text:AttributedCharacterIterator$Attribute|] v8 @type (object), [|java:lang:Object|] v9 @type (object), [|int|] v10, [|int|] v11) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.addAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V|] @Access PUBLIC {
      local temp ;


        [|java:util:List|] v4 @varname [|ranges|] @scope ((L0027,L002b), (L002f,L0139));
        [|java:text:AttributedString$Range|] v3 @varname [|range|] @scope ((L004d,L0054), (L005d,L0091), (L0093,L0139));
        [|java:text:AttributedString$Range|] v1 @varname [|r1|] @scope ((L006e,L0073), (L007a,L0139));
        [|java:text:AttributedString$Range|] v2 @varname [|r3|] @scope ((L0083,L00ac), (L00b3,L0139));




        [|java:util:ListIterator|] v0 @varname [|it|] @scope ((L0041,L0139));





        v5;
        v6;
      
#L0f0b5c.   if v8 != 0 then goto L0f0b70;
#L0f0b60.   v5:= new [|java:lang:NullPointerException|];
#L0f0b64.   v6:= "attribute == null" @type (object, string);
#L0f0b68.   call temp:=  [|java:lang:NullPointerException.<init>|](v5, v6) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f0b6e.   throw v5;
#L0f0b70.   if v10 < 0 then goto L0f0b88;
#L0f0b74.   v5:= v7.[|java:text:AttributedString.text|]   @type object;
#L0f0b78.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f0b7e.   v5:= temp;
#L0f0b80.   if v11 > v5 then goto L0f0b88;
#L0f0b84.   if v10 < v11 then goto L0f0b94;
#L0f0b88.   v5:= new [|java:lang:IllegalArgumentException|];
#L0f0b8c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f0b92.   throw v5;
#L0f0b94.   if v9 != 0 then goto L0f0b9a;
#L0f0b98.   return @void ;
#L0f0b9a.   v5:= v7.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f0b9e.   call temp:=  [|java:util:Map.get|](v5, v8) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0ba4.   v4:= temp  @type object;
#L0f0ba6.   v4:= ([|java:util:List|])v4;
#L0f0baa.   if v4 != 0 then goto L0f0bd6;
#L0f0bae.   v4:= new [|java:util:ArrayList|];
#L0f0bb2.   v5:= 1  @length 4;
#L0f0bb4.   call temp:=  [|java:util:ArrayList.<init>|](v4, v5) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0f0bba.   v5:= new [|java:text:AttributedString$Range|];
#L0f0bbe.   call temp:=  [|java:text:AttributedString$Range.<init>|](v5, v10, v11, v9) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0bc4.   call temp:=  [|java:util:List.add|](v4, v5) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0f0bca.   v5:= v7.[|java:text:AttributedString.attributeMap|]   @type object;
#L0f0bce.   call temp:=  [|java:util:Map.put|](v5, v8, v4) @signature [|Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0bd4.   goto L0f0b98;
#L0f0bd6.   call temp:=  [|java:util:List.listIterator|](v4) @signature [|Ljava/util/List;.listIterator:()Ljava/util/ListIterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0f0bdc.   v0:= temp  @type object;
#L0f0bde.   call temp:=  [|java:util:ListIterator.hasNext|](v0) @signature [|Ljava/util/ListIterator;.hasNext:()Z|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0be4.   v5:= temp;
#L0f0be6.   if v5 == 0 then goto L0f0c04;
#L0f0bea.   call temp:=  [|java:util:ListIterator.next|](v0) @signature [|Ljava/util/ListIterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0bf0.   v3:= temp  @type object;
#L0f0bf2.   v3:= ([|java:text:AttributedString$Range|])v3;
#L0f0bf6.   v5:= v3.[|java:text:AttributedString$Range.start|] ;
#L0f0bfa.   if v11 > v5 then goto L0f0c16;
#L0f0bfe.   call temp:=  [|java:util:ListIterator.previous|](v0) @signature [|Ljava/util/ListIterator;.previous:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0c04.   v5:= new [|java:text:AttributedString$Range|];
#L0f0c08.   call temp:=  [|java:text:AttributedString$Range.<init>|](v5, v10, v11, v9) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0c0e.   call temp:=  [|java:util:ListIterator.add|](v0, v5) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0c14.   goto L0f0b98;
#L0f0c16.   v5:= v3.[|java:text:AttributedString$Range.end|] ;
#L0f0c1a.   if v10 < v5 then goto L0f0c36;
#L0f0c1e.   v5:= v3.[|java:text:AttributedString$Range.end|] ;
#L0f0c22.   if v10 != v5 then goto L0f0bde;
#L0f0c26.   v5:= v3.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0c2a.   call temp:=  [|java:lang:Object.equals|](v9, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f0c30.   v5:= temp;
#L0f0c32.   if v5 == 0 then goto L0f0bde;
#L0f0c36.   v1:= 0  @length 4;
#L0f0c38.   call temp:=  [|java:util:ListIterator.remove|](v0) @signature [|Ljava/util/ListIterator;.remove:()V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0c3e.   v1:= new [|java:text:AttributedString$Range|];
#L0f0c42.   v5:= v3.[|java:text:AttributedString$Range.start|] ;
#L0f0c46.   v6:= v3.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0c4a.   call temp:=  [|java:text:AttributedString$Range.<init>|](v1, v5, v10, v6) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0c50.   v2:= new [|java:text:AttributedString$Range|];
#L0f0c54.   v5:= v3.[|java:text:AttributedString$Range.end|] ;
#L0f0c58.   v6:= v3.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0c5c.   call temp:=  [|java:text:AttributedString$Range.<init>|](v2, v11, v5, v6) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0c62.   v5:= v3.[|java:text:AttributedString$Range.end|] ;
#L0f0c66.   if v11 <= v5 then goto L0f0cc2;
#L0f0c6a.   call temp:=  [|java:util:ListIterator.hasNext|](v0) @signature [|Ljava/util/ListIterator;.hasNext:()Z|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0c70.   v5:= temp;
#L0f0c72.   if v5 == 0 then goto L0f0cc2;
#L0f0c76.   call temp:=  [|java:util:ListIterator.next|](v0) @signature [|Ljava/util/ListIterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0c7c.   v3:= temp  @type object;
#L0f0c7e.   v3:= ([|java:text:AttributedString$Range|])v3;
#L0f0c82.   v5:= v3.[|java:text:AttributedString$Range.end|] ;
#L0f0c86.   if v11 > v5 then goto L0f0d12;
#L0f0c8a.   v5:= v3.[|java:text:AttributedString$Range.start|] ;
#L0f0c8e.   if v11 > v5 then goto L0f0caa;
#L0f0c92.   v5:= v3.[|java:text:AttributedString$Range.start|] ;
#L0f0c96.   if v11 != v5 then goto L0f0c62;
#L0f0c9a.   v5:= v3.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0c9e.   call temp:=  [|java:lang:Object.equals|](v9, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f0ca4.   v5:= temp;
#L0f0ca6.   if v5 == 0 then goto L0f0c62;
#L0f0caa.   call temp:=  [|java:util:ListIterator.remove|](v0) @signature [|Ljava/util/ListIterator;.remove:()V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0cb0.   v2:= new [|java:text:AttributedString$Range|];
#L0f0cb4.   v5:= v3.[|java:text:AttributedString$Range.end|] ;
#L0f0cb8.   v6:= v3.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0cbc.   call temp:=  [|java:text:AttributedString$Range.<init>|](v2, v11, v5, v6) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0cc2.   v5:= v1.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0cc6.   call temp:=  [|java:lang:Object.equals|](v9, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f0ccc.   v5:= temp;
#L0f0cce.   if v5 == 0 then goto L0f0d50;
#L0f0cd2.   v5:= v2.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0cd6.   call temp:=  [|java:lang:Object.equals|](v9, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f0cdc.   v5:= temp;
#L0f0cde.   if v5 == 0 then goto L0f0d1a;
#L0f0ce2.   v5:= new [|java:text:AttributedString$Range|];
#L0f0ce6.   v6:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f0cea.   if v6 >= v10 then goto L0f0cf2;
#L0f0cee.   v10:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f0cf2.   v6:= v2.[|java:text:AttributedString$Range.end|] ;
#L0f0cf6.   if v6 <= v11 then goto L0f0cfe;
#L0f0cfa.   v11:= v2.[|java:text:AttributedString$Range.end|] ;
#L0f0cfe.   v6:= v1.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0d02.   call temp:=  [|java:text:AttributedString$Range.<init>|](v5, v10, v11, v6) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0d08.   call temp:=  [|java:util:ListIterator.add|](v0, v5) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0d0e.   goto L0f0b98;
#L0f0d12.   call temp:=  [|java:util:ListIterator.remove|](v0) @signature [|Ljava/util/ListIterator;.remove:()V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0d18.   goto L0f0c62;
#L0f0d1a.   v5:= new [|java:text:AttributedString$Range|];
#L0f0d1e.   v6:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f0d22.   if v6 >= v10 then goto L0f0d2a;
#L0f0d26.   v10:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f0d2a.   v6:= v1.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0d2e.   call temp:=  [|java:text:AttributedString$Range.<init>|](v5, v10, v11, v6) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0d34.   call temp:=  [|java:util:ListIterator.add|](v0, v5) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0d3a.   v5:= v2.[|java:text:AttributedString$Range.start|] ;
#L0f0d3e.   v6:= v2.[|java:text:AttributedString$Range.end|] ;
#L0f0d42.   if v5 >= v6 then goto L0f0b98;
#L0f0d46.   call temp:=  [|java:util:ListIterator.add|](v0, v2) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0d4c.   goto L0f0b98;
#L0f0d50.   v5:= v2.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0d54.   call temp:=  [|java:lang:Object.equals|](v9, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f0d5a.   v5:= temp;
#L0f0d5c.   if v5 == 0 then goto L0f0d96;
#L0f0d60.   v5:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f0d64.   v6:= v1.[|java:text:AttributedString$Range.end|] ;
#L0f0d68.   if v5 >= v6 then goto L0f0d72;
#L0f0d6c.   call temp:=  [|java:util:ListIterator.add|](v0, v1) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0d72.   v5:= new [|java:text:AttributedString$Range|];
#L0f0d76.   v6:= v2.[|java:text:AttributedString$Range.end|] ;
#L0f0d7a.   if v6 <= v11 then goto L0f0d82;
#L0f0d7e.   v11:= v2.[|java:text:AttributedString$Range.end|] ;
#L0f0d82.   v6:= v2.[|java:text:AttributedString$Range.value|]   @type object;
#L0f0d86.   call temp:=  [|java:text:AttributedString$Range.<init>|](v5, v10, v11, v6) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0d8c.   call temp:=  [|java:util:ListIterator.add|](v0, v5) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0d92.   goto L0f0b98;
#L0f0d96.   v5:= v1.[|java:text:AttributedString$Range.start|] ;
#L0f0d9a.   v6:= v1.[|java:text:AttributedString$Range.end|] ;
#L0f0d9e.   if v5 >= v6 then goto L0f0da8;
#L0f0da2.   call temp:=  [|java:util:ListIterator.add|](v0, v1) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0da8.   v5:= new [|java:text:AttributedString$Range|];
#L0f0dac.   call temp:=  [|java:text:AttributedString$Range.<init>|](v5, v10, v11, v9) @signature [|Ljava/text/AttributedString$Range;.<init>:(IILjava/lang/Object;)V|] @classDescriptor [|java:text:AttributedString$Range|] @type direct;
#L0f0db2.   call temp:=  [|java:util:ListIterator.add|](v0, v5) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0db8.   v5:= v2.[|java:text:AttributedString$Range.start|] ;
#L0f0dbc.   v6:= v2.[|java:text:AttributedString$Range.end|] ;
#L0f0dc0.   if v5 >= v6 then goto L0f0b98;
#L0f0dc4.   call temp:=  [|java:util:ListIterator.add|](v0, v2) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0f0dca.   goto L0f0b98;

   }
    procedure [|void|] [|java:text:AttributedString.addAttributes|] ([|java:text:AttributedString|] v4 @type (this), [|java:util:Map|] v5 @type (object), [|int|] v6, [|int|] v7) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.addAttributes:(Ljava/util/Map;II)V|] @Access PUBLIC {
      local temp ;
        [|java:util:Map$Entry|] v0 @varname [|entry|] @scope ((L0014,L0022));
        [|java:util:Iterator|] v1 @varname [|it|] @scope ((L0008,L0023));




        v2;
        v3;
      
#L0f0de0.   call temp:=  [|java:util:Map.entrySet|](v5) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f0de6.   v2:= temp  @type object;
#L0f0de8.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0f0dee.   v1:= temp  @type object;
#L0f0df0.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f0df6.   v2:= temp;
#L0f0df8.   if v2 == 0 then goto L0f0e24;
#L0f0dfc.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f0e02.   v0:= temp  @type object;
#L0f0e04.   v0:= ([|java:util:Map$Entry|])v0;
#L0f0e08.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f0e0e.   v2:= temp  @type object;
#L0f0e10.   v2:= ([|java:text:AttributedCharacterIterator$Attribute|])v2;
#L0f0e14.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0f0e1a.   v3:= temp  @type object;
#L0f0e1c.   call temp:=  [|java:text:AttributedString.addAttribute|](v4, v2, v3, v6, v7) @signature [|Ljava/text/AttributedString;.addAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V|] @classDescriptor [|java:text:AttributedString|] @type virtual;
#L0f0e22.   goto L0f0df0;
#L0f0e24.   return @void ;

   }
    procedure [|java:text:AttributedCharacterIterator|] [|java:text:AttributedString.getIterator|] ([|java:text:AttributedString|] v1 @type (this)) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.getIterator:()Ljava/text/AttributedCharacterIterator;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f0e38.   v0:= new [|java:text:AttributedString$AttributedIterator|];
#L0f0e3c.   call temp:=  [|java:text:AttributedString$AttributedIterator.<init>|](v0, v1) @signature [|Ljava/text/AttributedString$AttributedIterator;.<init>:(Ljava/text/AttributedString;)V|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f0e42.   return v0  @type object;

   }
    procedure [|java:text:AttributedCharacterIterator|] [|java:text:AttributedString.getIterator|] ([|java:text:AttributedString|] v3 @type (this), [|java:text:AttributedCharacterIterator$Attribute|][] v4 @type (object)) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.getIterator:([Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/text/AttributedCharacterIterator;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L0f0e54.   v0:= new [|java:text:AttributedString$AttributedIterator|];
#L0f0e58.   v1:= 0  @length 4;
#L0f0e5a.   v2:= v3.[|java:text:AttributedString.text|]   @type object;
#L0f0e5e.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f0e64.   v2:= temp;
#L0f0e66.   call temp:=  [|java:text:AttributedString$AttributedIterator.<init>|](v0, v3, v4, v1, v2) @signature [|Ljava/text/AttributedString$AttributedIterator;.<init>:(Ljava/text/AttributedString;[Ljava/text/AttributedCharacterIterator$Attribute;II)V|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f0e6c.   return v0  @type object;

   }
    procedure [|java:text:AttributedCharacterIterator|] [|java:text:AttributedString.getIterator|] ([|java:text:AttributedString|] v1 @type (this), [|java:text:AttributedCharacterIterator$Attribute|][] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:text:AttributedString|] @signature [|Ljava/text/AttributedString;.getIterator:([Ljava/text/AttributedCharacterIterator$Attribute;II)Ljava/text/AttributedCharacterIterator;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L0f0e80.   v0:= new [|java:text:AttributedString$AttributedIterator|];
#L0f0e84.   call temp:=  [|java:text:AttributedString$AttributedIterator.<init>|](v0, v1, v2, v3, v4) @signature [|Ljava/text/AttributedString$AttributedIterator;.<init>:(Ljava/text/AttributedString;[Ljava/text/AttributedCharacterIterator$Attribute;II)V|] @classDescriptor [|java:text:AttributedString$AttributedIterator|] @type direct;
#L0f0e8a.   return v0  @type object;

   }
record [|java:text:Bidi$Run|]  @type class @AccessFlag   {
      [|int|] [|java:text:Bidi$Run.level|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:text:Bidi$Run.limit|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:text:Bidi$Run.start|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:text:Bidi$Run.<init>|] ([|java:text:Bidi$Run|] v0 @type (this), [|int|] v1, [|int|] v2, [|int|] v3) @owner [|java:text:Bidi$Run|] @signature [|Ljava/text/Bidi$Run;.<init>:(III)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




      
#L0f0e9c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f0ea2.   v0.[|java:text:Bidi$Run.start|]  := v1;
#L0f0ea6.   v0.[|java:text:Bidi$Run.limit|]  := v2;
#L0f0eaa.   v0.[|java:text:Bidi$Run.level|]  := v3;
#L0f0eae.   return @void ;

   }
    procedure [|int|] [|java:text:Bidi$Run.getLevel|] ([|java:text:Bidi$Run|] v1 @type (this)) @owner [|java:text:Bidi$Run|] @signature [|Ljava/text/Bidi$Run;.getLevel:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f0ec0.   v0:= v1.[|java:text:Bidi$Run.level|] ;
#L0f0ec4.   return v0;

   }
    procedure [|int|] [|java:text:Bidi$Run.getLimit|] ([|java:text:Bidi$Run|] v1 @type (this)) @owner [|java:text:Bidi$Run|] @signature [|Ljava/text/Bidi$Run;.getLimit:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f0ed8.   v0:= v1.[|java:text:Bidi$Run.limit|] ;
#L0f0edc.   return v0;

   }
    procedure [|int|] [|java:text:Bidi$Run.getStart|] ([|java:text:Bidi$Run|] v1 @type (this)) @owner [|java:text:Bidi$Run|] @signature [|Ljava/text/Bidi$Run;.getStart:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f0ef0.   v0:= v1.[|java:text:Bidi$Run.start|] ;
#L0f0ef4.   return v0;

   }
record [|java:text:Bidi|]  @type class @AccessFlag PUBLIC_FINAL  {
      [|int|] [|java:text:Bidi.baseLevel|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:Bidi.direction|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:Bidi.length|]    @AccessFlag PRIVATE;
      [|byte|][] [|java:text:Bidi.offsetLevel|]    @AccessFlag PRIVATE;
      [|java:text:Bidi$Run|][] [|java:text:Bidi.runs|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:text:Bidi.unidirectional|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:text:Bidi.DIRECTION_DEFAULT_LEFT_TO_RIGHT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Bidi.DIRECTION_DEFAULT_RIGHT_TO_LEFT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Bidi.DIRECTION_LEFT_TO_RIGHT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Bidi.DIRECTION_RIGHT_TO_LEFT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Bidi.UBIDI_LEVEL_OVERRIDE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:text:Bidi.UBiDiDirection_UBIDI_LTR|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:text:Bidi.UBiDiDirection_UBIDI_MIXED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:text:Bidi.UBiDiDirection_UBIDI_RTL|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:Bidi.<init>|] ([|java:text:Bidi|] v0 @type (this), [|long|] v1) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.<init>:(J)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;


      
#L0f0f08.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f0f0e.   call temp:=  [|java:text:Bidi.readBidiInfo|](v0, v1, v2) @signature [|Ljava/text/Bidi;.readBidiInfo:(J)V|] @classDescriptor [|java:text:Bidi|] @type direct;
#L0f0f14.   return @void ;

   }
    procedure [|void|] [|java:text:Bidi.<init>|] ([|java:text:Bidi|] v7 @type (this), [|java:lang:String|] v8 @type (object), [|int|] v9) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.<init>:(Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0f0f28.   v3:= 0  @length 4;
#L0f0f2a.   v2:= 0  @length 4;
#L0f0f2c.   if v8 != 0 then goto L0f0f46;
#L0f0f30.   v1:= v3  @type object;
#L0f0f32.   if v8 != 0 then goto L0f0f50;
#L0f0f36.   v5:= v2;
#L0f0f38.   v0:= v7  @type object;
#L0f0f3a.   v4:= v2;
#L0f0f3c.   v6:= v9;
#L0f0f3e.   call temp:=  [|java:text:Bidi.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/text/Bidi;.<init>:([CI[BIII)V|] @classDescriptor [|java:text:Bidi|] @type direct;
#L0f0f44.   return @void ;
#L0f0f46.   call temp:=  [|java:lang:String.toCharArray|](v8) @signature [|Ljava/lang/String;.toCharArray:()[C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f0f4c.   v1:= temp  @type object;
#L0f0f4e.   goto L0f0f32;
#L0f0f50.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f0f56.   v5:= temp;
#L0f0f58.   goto L0f0f38;

   }
    procedure [|void|] [|java:text:Bidi.<init>|] ([|java:text:Bidi|] v17 @type (this), [|java:text:AttributedCharacterIterator|] v18 @type (object)) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.<init>:(Ljava/text/AttributedCharacterIterator;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Object|] v12 @varname [|embedding|] @scope ((L004a,L0052), (L0072,L007f));
        [|byte|][] v3 @varname [|embeddings|] @scope ((L003d,L006c), (L0072,L00b5));
        [|int|] v6 @varname [|flags|] @scope ((L0025,L006c), (L0070,L00b5));
        [|java:lang:Object|] v10 @varname [|direction|] @scope ((L002d,L006c), (L0070,L00b5));
        [|int|] v11 @varname [|embLevel|] @scope ((L0056,L006c));
        [|int|] v14 @varname [|i|] @scope ((L0040,L006c), (L0072,L00b5));
        [|int|] v16 @varname [|textLimit|] @scope ((L003f,L006c), (L0072,L00b5));
        [|java:lang:Object|] v15 @varname [|numericShaper|] @scope ((L0093,L009b));
        [|char|][] v1 @varname [|text|] @scope ((L001b,L00b5));
        [|int|] v5 @varname [|length|] @scope ((L0017,L00b5));
        [|int|] v7 @varname [|begin|] @scope ((L0011,L00b5));
        [|long|] v8 @varname [|bidi|] @scope ((L00a1,L00b5));
        [|int|] v13 @varname [|end|] @scope ((L0015,L00b5));


        v0;
        v2;
        v4;
        v9;
      
#L0f0f6c.   call temp:=  [|java:lang:Object.<init>|](v17) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f0f72.   if v18 != 0 then goto L0f0f86;
#L0f0f76.   v2:= new [|java:lang:IllegalArgumentException|];
#L0f0f7a.   v4:= "paragraph is null" @type (object, string);
#L0f0f7e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f0f84.   throw v2;
#L0f0f86.   call temp:=  [|java:text:AttributedCharacterIterator.getBeginIndex|](v18) @signature [|Ljava/text/AttributedCharacterIterator;.getBeginIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0f8c.   v7:= temp;
#L0f0f8e.   call temp:=  [|java:text:AttributedCharacterIterator.getEndIndex|](v18) @signature [|Ljava/text/AttributedCharacterIterator;.getEndIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0f94.   v13:= temp;
#L0f0f96.   v5:= v13 - v7  @type int;
#L0f0f9a.   v2:= v5 + 1;
#L0f0f9e.   v1:= new [|char|][v2];
#L0f0fa2.   if v5 == 0 then goto L0f1044;
#L0f0fa6.   v2:= 0  @length 4;
#L0f0fa8.   call temp:=  [|java:text:AttributedCharacterIterator.first|](v18) @signature [|Ljava/text/AttributedCharacterIterator;.first:()C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0fae.   v4:= temp;
#L0f0fb0.   v1[v2]:= v4  @char;
#L0f0fb4.   v6:= -2  @length 4;
#L0f0fb6.   v2:= @@[|java:awt:font:TextAttribute.RUN_DIRECTION|]   @type object;
#L0f0fba.   v0:= v18  @type object;
#L0f0fbe.   call temp:=  [|java:text:AttributedCharacterIterator.getAttribute|](v0, v2) @signature [|Ljava/text/AttributedCharacterIterator;.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0fc4.   v10:= temp  @type object;
#L0f0fc6.   if v10 == 0 then goto L0f0fe4;
#L0f0fca.   v2:= instanceof @varname v10 @type [|java:lang:Boolean|];
#L0f0fce.   if v2 == 0 then goto L0f0fe4;
#L0f0fd2.   v2:= @@[|java:awt:font:TextAttribute.RUN_DIRECTION_LTR|]   @type object;
#L0f0fd6.   call temp:=  [|java:lang:Object.equals|](v10, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f0fdc.   v2:= temp;
#L0f0fde.   if v2 == 0 then goto L0f104c;
#L0f0fe2.   v6:= 0  @length 4;
#L0f0fe4.   v3:= 0  @length 4;
#L0f0fe6.   v16:= 1  @length 16;
#L0f0fea.   v14:= 1  @length 4;
#L0f0fec.   if v14 >= v5 then goto L0f1082;
#L0f0ff0.   v2:= @@[|java:awt:font:TextAttribute.BIDI_EMBEDDING|]   @type object;
#L0f0ff4.   v0:= v18  @type object;
#L0f0ff8.   call temp:=  [|java:text:AttributedCharacterIterator.getAttribute|](v0, v2) @signature [|Ljava/text/AttributedCharacterIterator;.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f0ffe.   v12:= temp  @type object;
#L0f1000.   if v12 == 0 then goto L0f1050;
#L0f1004.   v2:= instanceof @varname v12 @type [|java:lang:Integer|];
#L0f1008.   if v2 == 0 then goto L0f1050;
#L0f100c.   v12:= ([|java:lang:Integer|])v12;
#L0f1010.   call temp:=  [|java:lang:Integer.intValue|](v12) @signature [|Ljava/lang/Integer;.intValue:()I|] @classDescriptor [|java:lang:Integer|] @type virtual;
#L0f1016.   v11:= temp;
#L0f1018.   if v3 != 0 then goto L0f1020;
#L0f101c.   v3:= new [|byte|][v5];
#L0f1020.   v0:= v16;
#L0f1024.   if v14 >= v0 then goto L0f106a;
#L0f1028.   call temp:=  [|java:text:AttributedCharacterIterator.next|](v18) @signature [|Ljava/text/AttributedCharacterIterator;.next:()C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f102e.   v2:= temp;
#L0f1030.   v1[v14]:= v2  @char;
#L0f1034.   v2:= v14 + -1;
#L0f1038.   v4:= (byte)v11  @type i2b;
#L0f103a.   v3[v2]:= v4  @byte;
#L0f103e.   v14:= v14 + 1;
#L0f1042.   goto L0f1020;
#L0f1044.   call temp:=  [|java:text:AttributedCharacterIterator.first|](v18) @signature [|Ljava/text/AttributedCharacterIterator;.first:()C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f104a.   goto L0f0fb4;
#L0f104c.   v6:= 1  @length 4;
#L0f104e.   goto L0f0fe4;
#L0f1050.   v0:= v16;
#L0f1054.   if v14 >= v0 then goto L0f106a;
#L0f1058.   call temp:=  [|java:text:AttributedCharacterIterator.next|](v18) @signature [|Ljava/text/AttributedCharacterIterator;.next:()C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f105e.   v2:= temp;
#L0f1060.   v1[v14]:= v2  @char;
#L0f1064.   v14:= v14 + 1;
#L0f1068.   goto L0f1050;
#L0f106a.   v2:= @@[|java:awt:font:TextAttribute.BIDI_EMBEDDING|]   @type object;
#L0f106e.   v0:= v18  @type object;
#L0f1072.   call temp:=  [|java:text:AttributedCharacterIterator.getRunLimit|](v0, v2) @signature [|Ljava/text/AttributedCharacterIterator;.getRunLimit:(Ljava/text/AttributedCharacterIterator$Attribute;)I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f1078.   v2:= temp;
#L0f107a.   v2:= v2 - v7  @type int;
#L0f107c.   v16:= v2 + 1;
#L0f1080.   goto L0f0fec;
#L0f1082.   v2:= @@[|java:awt:font:TextAttribute.NUMERIC_SHAPING|]   @type object;
#L0f1086.   v0:= v18  @type object;
#L0f108a.   call temp:=  [|java:text:AttributedCharacterIterator.getAttribute|](v0, v2) @signature [|Ljava/text/AttributedCharacterIterator;.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f1090.   v15:= temp  @type object;
#L0f1092.   if v15 == 0 then goto L0f10aa;
#L0f1096.   v2:= instanceof @varname v15 @type [|java:awt:font:NumericShaper|];
#L0f109a.   if v2 == 0 then goto L0f10aa;
#L0f109e.   v15:= ([|java:awt:font:NumericShaper|])v15;
#L0f10a2.   v2:= 0  @length 4;
#L0f10a4.   call temp:=  [|java:awt:font:NumericShaper.shape|](v15, v1, v2, v5) @signature [|Ljava/awt/font/NumericShaper;.shape:([CII)V|] @classDescriptor [|java:awt:font:NumericShaper|] @type virtual;
#L0f10aa.   v8:= 0  @length wide16;
#L0f10ae.   v2:= 0  @length 4;
#L0f10b0.   v4:= 0  @length 4;
#L0f10b2.   call temp:=  [|java:text:Bidi.createUBiDi|](v1, v2, v3, v4, v5, v6) @signature [|Ljava/text/Bidi;.createUBiDi:([CI[BIII)J|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f10b8.   v8:= temp  @type wide;
#L0f10ba.   v0:= v17  @type object;
#L0f10be.   call temp:=  [|java:text:Bidi.readBidiInfo|](v0, v8, v9) @signature [|Ljava/text/Bidi;.readBidiInfo:(J)V|] @classDescriptor [|java:text:Bidi|] @type direct;
#L0f10c4.   call temp:=  [|java:text:Bidi.ubidi_close|](v8, v9) @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f10ca.   return @void ;
#L0f10cc.   v2:= Exception  @type object;
#L0f10ce.   call temp:=  [|java:text:Bidi.ubidi_close|](v8, v9) @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f10d4.   throw v2;
  catch  [|any|] @[L0f10b2..L0f10c4] goto L0f10cc;

   }
    procedure [|void|] [|java:text:Bidi.<init>|] ([|java:text:Bidi|] v5 @type (this), [|char|][] v6, [|int|] v7, [|byte|][] v8, [|int|] v9, [|int|] v10, [|int|] v11) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.<init>:([CI[BIII)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|long|] v0 @varname [|bidi|] @scope ((L006e,L007e));







        v1;
        v2;
        v3;
        v4;
      
#L0f10f4.   call temp:=  [|java:lang:Object.<init>|](v5) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f10fa.   if v6 == 0 then goto L0f1106;
#L0f10fe.   v2:= v6.length;
#L0f1100.   v2:= v2 - v7  @type int;
#L0f1102.   if v2 >= v10 then goto L0f1112;
#L0f1106.   v2:= new [|java:lang:IllegalArgumentException|];
#L0f110a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f1110.   throw v2;
#L0f1112.   if v8 == 0 then goto L0f112a;
#L0f1116.   v2:= v8.length;
#L0f1118.   v2:= v2 - v9  @type int;
#L0f111a.   if v2 >= v10 then goto L0f112a;
#L0f111e.   v2:= new [|java:lang:IllegalArgumentException|];
#L0f1122.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f1128.   throw v2;
#L0f112a.   if v7 >= 0 then goto L0f1160;
#L0f112e.   v2:= new [|java:lang:IllegalArgumentException|];
#L0f1132.   v3:= new [|java:lang:StringBuilder|];
#L0f1136.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f113c.   v4:= "Negative textStart value " @type (object, string);
#L0f1140.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1146.   v3:= temp  @type object;
#L0f1148.   call temp:=  [|java:lang:StringBuilder.append|](v3, v7) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f114e.   v3:= temp  @type object;
#L0f1150.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1156.   v3:= temp  @type object;
#L0f1158.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f115e.   throw v2;
#L0f1160.   if v9 >= 0 then goto L0f1196;
#L0f1164.   v2:= new [|java:lang:IllegalArgumentException|];
#L0f1168.   v3:= new [|java:lang:StringBuilder|];
#L0f116c.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f1172.   v4:= "Negative embStart value " @type (object, string);
#L0f1176.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f117c.   v3:= temp  @type object;
#L0f117e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v9) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1184.   v3:= temp  @type object;
#L0f1186.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f118c.   v3:= temp  @type object;
#L0f118e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f1194.   throw v2;
#L0f1196.   if v10 >= 0 then goto L0f11cc;
#L0f119a.   v2:= new [|java:lang:IllegalArgumentException|];
#L0f119e.   v3:= new [|java:lang:StringBuilder|];
#L0f11a2.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f11a8.   v4:= "Negative paragraph length " @type (object, string);
#L0f11ac.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f11b2.   v3:= temp  @type object;
#L0f11b4.   call temp:=  [|java:lang:StringBuilder.append|](v3, v10) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f11ba.   v3:= temp  @type object;
#L0f11bc.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f11c2.   v3:= temp  @type object;
#L0f11c4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f11ca.   throw v2;
#L0f11cc.   v0:= 0  @length wide16;
#L0f11d0.   call temp:=  [|java:text:Bidi.createUBiDi|](v6, v7, v8, v9, v10, v11) @signature [|Ljava/text/Bidi;.createUBiDi:([CI[BIII)J|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f11d6.   v0:= temp  @type wide;
#L0f11d8.   call temp:=  [|java:text:Bidi.readBidiInfo|](v5, v0, v1) @signature [|Ljava/text/Bidi;.readBidiInfo:(J)V|] @classDescriptor [|java:text:Bidi|] @type direct;
#L0f11de.   call temp:=  [|java:text:Bidi.ubidi_close|](v0, v1) @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f11e4.   return @void ;
#L0f11e6.   v2:= Exception  @type object;
#L0f11e8.   call temp:=  [|java:text:Bidi.ubidi_close|](v0, v1) @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f11ee.   throw v2;
  catch  [|any|] @[L0f11d0..L0f11de] goto L0f11e6;

   }
    procedure [|java:text:Bidi|] [|java:text:Bidi.createEmptyLineBidi|] ([|java:text:Bidi|] v3 @type (this), [|long|] v4) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.createEmptyLineBidi:(J)Ljava/text/Bidi;|] @Access PRIVATE {
      local temp ;
        [|java:text:Bidi|] v0 @varname [|result|] @scope ((L0006,L0011));


        v1;
        v2;
      
#L0f120c.   v2:= 0  @length 4;
#L0f120e.   v0:= new [|java:text:Bidi|];
#L0f1212.   call temp:=  [|java:text:Bidi.<init>|](v0, v4, v5) @signature [|Ljava/text/Bidi;.<init>:(J)V|] @classDescriptor [|java:text:Bidi|] @type direct;
#L0f1218.   v1:= 0  @length 4;
#L0f121a.   v0.[|java:text:Bidi.length|]  := v1;
#L0f121e.   v0.[|java:text:Bidi.offsetLevel|]  := v2 @type object;
#L0f1222.   v0.[|java:text:Bidi.runs|]  := v2 @type object;
#L0f1226.   v1:= 1  @length 4;
#L0f1228.   v0.[|java:text:Bidi.unidirectional|]  := v1 @boolean;
#L0f122c.   return v0  @type object;

   }
    procedure [|long|] [|java:text:Bidi.createUBiDi|] ([|char|][] v12, [|int|] v13, [|byte|][] v14, [|int|] v15, [|int|] v16, [|int|] v17) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.createUBiDi:([CI[BIII)J|] @Access PRIVATE_STATIC {
      local temp ;
        [|byte|][] v7 @varname [|realEmbeddings|] @scope ((L0002,L0037), (L003b,L008b));
        [|java:text:Bidi|] v1 @varname [|temp|] @scope ((L0037,L0062));
        [|byte|] v8 @varname [|e|] @scope ((L004b,L0062));
        [|int|] v9 @varname [|i|] @scope ((L0045,L0062));
        [|long|] v2 @varname [|bidi|] @scope ((L0070,L008b));
        [|boolean|] v10 @varname [|needsDeletion|] @scope ((L0071,L008b));
        [|char|][] v11 @varname [|realText|] @scope ((L0001,L008b));






        v0;
        v3;
        v4;
        v5;
        v6;
      
#L0f1240.   v11:= 0  @length 4;
#L0f1242.   v7:= 0  @length 4;
#L0f1244.   if v12 == 0 then goto L0f1254;
#L0f1248.   v4:= v12.length;
#L0f124a.   v4:= v4 - v13  @type int;
#L0f124c.   v0:= v16;
#L0f1250.   if v4 >= v0 then goto L0f1260;
#L0f1254.   v4:= new [|java:lang:IllegalArgumentException|];
#L0f1258.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f125e.   throw v4;
#L0f1260.   v0:= v16;
#L0f1264.   v11:= new [|char|][v0];
#L0f1268.   v4:= 0  @length 4;
#L0f126a.   v0:= v16;
#L0f126e.   call temp:=  [|java:lang:System.arraycopy|](v12, v13, v11, v4, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0f1274.   if v14 == 0 then goto L0f1304;
#L0f1278.   v4:= v14.length;
#L0f127a.   v4:= v4 - v15  @type int;
#L0f127c.   v0:= v16;
#L0f1280.   if v4 >= v0 then goto L0f1290;
#L0f1284.   v4:= new [|java:lang:IllegalArgumentException|];
#L0f1288.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f128e.   throw v4;
#L0f1290.   if v16 <= 0 then goto L0f1304;
#L0f1294.   v1:= new [|java:text:Bidi|];
#L0f1298.   v4:= 0  @length 4;
#L0f129a.   v5:= 0  @length 4;
#L0f129c.   v2:= v12  @type object;
#L0f129e.   v3:= v13;
#L0f12a0.   v6:= v16;
#L0f12a4.   v7:= v17;
#L0f12a8.   call temp:=  [|java:text:Bidi.<init>|](v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/text/Bidi;.<init>:([CI[BIII)V|] @classDescriptor [|java:text:Bidi|] @type direct;
#L0f12ae.   v0:= v16;
#L0f12b2.   v7:= new [|byte|][v0];
#L0f12b6.   v4:= v1.[|java:text:Bidi.offsetLevel|]   @type object;
#L0f12ba.   v5:= 0  @length 4;
#L0f12bc.   v6:= 0  @length 4;
#L0f12be.   v0:= v16;
#L0f12c2.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v7, v6, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0f12c8.   v9:= 0  @length 4;
#L0f12ca.   v0:= v16;
#L0f12ce.   if v9 >= v0 then goto L0f1304;
#L0f12d2.   v8:= v14[v9]  @byte;
#L0f12d6.   if v8 >= 0 then goto L0f12ea;
#L0f12da.   v4:= v8 - 128;
#L0f12de.   v4:= (byte)v4  @type i2b;
#L0f12e0.   v7[v9]:= v4  @byte;
#L0f12e4.   v9:= v9 + 1;
#L0f12e8.   goto L0f12ca;
#L0f12ea.   if v8 <= 0 then goto L0f12f4;
#L0f12ee.   v7[v9]:= v8  @byte;
#L0f12f2.   goto L0f12e4;
#L0f12f4.   v4:= v7[v9]  @byte;
#L0f12f8.   v4:= v4 ^| -128;
#L0f12fc.   v4:= (byte)v4  @type i2b;
#L0f12fe.   v7[v9]:= v4  @byte;
#L0f1302.   goto L0f12e4;
#L0f1304.   v4:= 1  @length 4;
#L0f1306.   v0:= v17;
#L0f130a.   if v0 > v4 then goto L0f1318;
#L0f130e.   v4:= -2  @length 4;
#L0f1310.   v0:= v17;
#L0f1314.   if v0 >= v4 then goto L0f131c;
#L0f1318.   v17:= 0  @length 16;
#L0f131c.   v2:= 0  @length wide16;
#L0f1320.   v10:= 1  @length 4;
#L0f1322.   call temp:=  [|java:text:Bidi.ubidi_open|]() @signature [|Ljava/text/Bidi;.ubidi_open:()J|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f1328.   v2:= temp  @type wide;
#L0f132a.   v4:= v11  @type object;
#L0f132c.   v5:= v16;
#L0f1330.   v6:= v17;
#L0f1334.   call temp:=  [|java:text:Bidi.ubidi_setPara|](v2, v3, v4, v5, v6, v7) @signature [|Ljava/text/Bidi;.ubidi_setPara:(J[CII[B)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f133a.   v10:= 0  @length 4;
#L0f133c.   if v10 == 0 then goto L0f1346;
#L0f1340.   call temp:=  [|java:text:Bidi.ubidi_close|](v2, v3) @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f1346.   return v2  @type wide;
#L0f1348.   v4:= Exception  @type object;
#L0f134a.   if v10 == 0 then goto L0f1354;
#L0f134e.   call temp:=  [|java:text:Bidi.ubidi_close|](v2, v3) @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f1354.   throw v4;
  catch  [|any|] @[L0f1322..L0f133a] goto L0f1348;

   }
    procedure [|void|] [|java:text:Bidi.readBidiInfo|] ([|java:text:Bidi|] v5 @type (this), [|long|] v6) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.readBidiInfo:(J)V|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|runCount|] @scope ((L0019,L0026), (L002b,L004a));


        v1;
        v2;
        v3;
        v4;
      
#L0f1374.   v4:= 1  @length 4;
#L0f1376.   v2:= 0  @length 4;
#L0f1378.   call temp:=  [|java:text:Bidi.ubidi_getLength|](v6, v7) @signature [|Ljava/text/Bidi;.ubidi_getLength:(J)I|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f137e.   v1:= temp;
#L0f1380.   v5.[|java:text:Bidi.length|]  := v1;
#L0f1384.   v1:= v5.[|java:text:Bidi.length|] ;
#L0f1388.   if v1 != 0 then goto L0f13c0;
#L0f138c.   v1:= v2  @type object;
#L0f138e.   v5.[|java:text:Bidi.offsetLevel|]  := v1 @type object;
#L0f1392.   call temp:=  [|java:text:Bidi.ubidi_getParaLevel|](v6, v7) @signature [|Ljava/text/Bidi;.ubidi_getParaLevel:(J)B|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f1398.   v1:= temp;
#L0f139a.   v5.[|java:text:Bidi.baseLevel|]  := v1;
#L0f139e.   call temp:=  [|java:text:Bidi.ubidi_countRuns|](v6, v7) @signature [|Ljava/text/Bidi;.ubidi_countRuns:(J)I|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f13a4.   v0:= temp;
#L0f13a6.   if v0 != 0 then goto L0f13ca;
#L0f13aa.   v5.[|java:text:Bidi.unidirectional|]  := v4 @boolean;
#L0f13ae.   v5.[|java:text:Bidi.runs|]  := v2 @type object;
#L0f13b2.   call temp:=  [|java:text:Bidi.ubidi_getDirection|](v6, v7) @signature [|Ljava/text/Bidi;.ubidi_getDirection:(J)I|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f13b8.   v1:= temp;
#L0f13ba.   v5.[|java:text:Bidi.direction|]  := v1;
#L0f13be.   return @void ;
#L0f13c0.   call temp:=  [|java:text:Bidi.ubidi_getLevels|](v6, v7) @signature [|Ljava/text/Bidi;.ubidi_getLevels:(J)[B|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f13c6.   v1:= temp  @type object;
#L0f13c8.   goto L0f138e;
#L0f13ca.   if v0 >= 0 then goto L0f13d4;
#L0f13ce.   v5.[|java:text:Bidi.runs|]  := v2 @type object;
#L0f13d2.   goto L0f13b2;
#L0f13d4.   call temp:=  [|java:text:Bidi.ubidi_getRuns|](v6, v7) @signature [|Ljava/text/Bidi;.ubidi_getRuns:(J)[Ljava/text/Bidi$Run;|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f13da.   v1:= temp  @type object;
#L0f13dc.   v5.[|java:text:Bidi.runs|]  := v1 @type object;
#L0f13e0.   if v0 != v4 then goto L0f13b2;
#L0f13e4.   v1:= v5.[|java:text:Bidi.runs|]   @type object;
#L0f13e8.   v3:= 0  @length 4;
#L0f13ea.   v1:= v1[v3]  @type object;
#L0f13ee.   call temp:=  [|java:text:Bidi$Run.getLevel|](v1) @signature [|Ljava/text/Bidi$Run;.getLevel:()I|] @classDescriptor [|java:text:Bidi$Run|] @type virtual;
#L0f13f4.   v1:= temp;
#L0f13f6.   v3:= v5.[|java:text:Bidi.baseLevel|] ;
#L0f13fa.   if v1 != v3 then goto L0f13b2;
#L0f13fe.   v5.[|java:text:Bidi.unidirectional|]  := v4 @boolean;
#L0f1402.   v5.[|java:text:Bidi.runs|]  := v2 @type object;
#L0f1406.   goto L0f13b2;

   }
    procedure [|void|] [|java:text:Bidi.reorderVisually|] ([|byte|][] v7, [|int|] v8, [|java:lang:Object|][] v9 @type (object), [|int|] v10, [|int|] v11) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.reorderVisually:([BI[Ljava/lang/Object;II)V|] @Access PUBLIC_STATIC {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0067,L007c));
        [|int|][] v1 @varname [|indices|] @scope ((L0061,L007c));
        [|byte|][] v2 @varname [|realLevels|] @scope ((L005a,L007c));
        [|java:util:ArrayList|] v3 @varname [|result|] @scope ((L0066,L007c));





        v4;
        v5;
        v6;
      
#L0f1418.   v5:= 0  @length 4;
#L0f141a.   if v11 < 0 then goto L0f1436;
#L0f141e.   if v8 < 0 then goto L0f1436;
#L0f1422.   if v10 < 0 then goto L0f1436;
#L0f1426.   v4:= v7.length;
#L0f1428.   v4:= v4 - v8  @type int;
#L0f142a.   if v11 > v4 then goto L0f1436;
#L0f142e.   v4:= v9.length;
#L0f1430.   v4:= v4 - v10  @type int;
#L0f1432.   if v11 <= v4 then goto L0f14c8;
#L0f1436.   v4:= new [|java:lang:IllegalArgumentException|];
#L0f143a.   v5:= new [|java:lang:StringBuilder|];
#L0f143e.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f1444.   v6:= "Invalid ranges (levels=" @type (object, string);
#L0f1448.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f144e.   v5:= temp  @type object;
#L0f1450.   v6:= v7.length;
#L0f1452.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1458.   v5:= temp  @type object;
#L0f145a.   v6:= ", levelStart=" @type (object, string);
#L0f145e.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1464.   v5:= temp  @type object;
#L0f1466.   call temp:=  [|java:lang:StringBuilder.append|](v5, v8) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f146c.   v5:= temp  @type object;
#L0f146e.   v6:= ", objects=" @type (object, string);
#L0f1472.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1478.   v5:= temp  @type object;
#L0f147a.   v6:= v9.length;
#L0f147c.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1482.   v5:= temp  @type object;
#L0f1484.   v6:= ", objectStart=" @type (object, string);
#L0f1488.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f148e.   v5:= temp  @type object;
#L0f1490.   call temp:=  [|java:lang:StringBuilder.append|](v5, v10) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1496.   v5:= temp  @type object;
#L0f1498.   v6:= ", count=" @type (object, string);
#L0f149c.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f14a2.   v5:= temp  @type object;
#L0f14a4.   call temp:=  [|java:lang:StringBuilder.append|](v5, v11) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f14aa.   v5:= temp  @type object;
#L0f14ac.   v6:= ")" @type (object, string);
#L0f14b0.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f14b6.   v5:= temp  @type object;
#L0f14b8.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f14be.   v5:= temp  @type object;
#L0f14c0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f14c6.   throw v4;
#L0f14c8.   v2:= new [|byte|][v11];
#L0f14cc.   call temp:=  [|java:lang:System.arraycopy|](v7, v8, v2, v5, v11) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0f14d2.   call temp:=  [|java:text:Bidi.ubidi_reorderVisual|](v2, v11) @signature [|Ljava/text/Bidi;.ubidi_reorderVisual:([BI)[I|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f14d8.   v1:= temp  @type object;
#L0f14da.   v3:= new [|java:util:ArrayList|];
#L0f14de.   call temp:=  [|java:util:ArrayList.<init>|](v3, v11) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0f14e4.   v0:= 0  @length 4;
#L0f14e6.   if v0 >= v11 then goto L0f1500;
#L0f14ea.   v4:= v1[v0];
#L0f14ee.   v4:= v4 + v10  @type int;
#L0f14f0.   v4:= v9[v4]  @type object;
#L0f14f4.   call temp:=  [|java:util:ArrayList.add|](v3, v4) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f14fa.   v0:= v0 + 1;
#L0f14fe.   goto L0f14e6;
#L0f1500.   call temp:=  [|java:util:ArrayList.toArray|](v3) @signature [|Ljava/util/ArrayList;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f1506.   v4:= temp  @type object;
#L0f1508.   call temp:=  [|java:lang:System.arraycopy|](v4, v5, v9, v10, v11) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0f150e.   return @void ;

   }
    procedure [|boolean|] [|java:text:Bidi.requiresBidi|] ([|char|][] v7, [|int|] v8, [|int|] v9) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.requiresBidi:([CII)Z|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:text:Bidi|] v0 @varname [|bidi|] @scope ((L001b,L0023));



        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0f1520.   v4:= 0  @length 4;
#L0f1522.   if v9 < 0 then goto L0f1534;
#L0f1526.   if v8 < 0 then goto L0f1534;
#L0f152a.   if v8 > v9 then goto L0f1534;
#L0f152e.   v1:= v7.length;
#L0f1530.   if v9 <= v1 then goto L0f1540;
#L0f1534.   v1:= new [|java:lang:IllegalArgumentException|];
#L0f1538.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f153e.   throw v1;
#L0f1540.   v0:= new [|java:text:Bidi|];
#L0f1544.   v3:= 0  @length 4;
#L0f1546.   v5:= v9 - v8  @type int;
#L0f154a.   v1:= v7  @type object;
#L0f154c.   v2:= v8;
#L0f154e.   v6:= v4;
#L0f1550.   call temp:=  [|java:text:Bidi.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/text/Bidi;.<init>:([CI[BIII)V|] @classDescriptor [|java:text:Bidi|] @type direct;
#L0f1556.   call temp:=  [|java:text:Bidi.isLeftToRight|](v0) @signature [|Ljava/text/Bidi;.isLeftToRight:()Z|] @classDescriptor [|java:text:Bidi|] @type virtual;
#L0f155c.   v1:= temp;
#L0f155e.   if v1 != 0 then goto L0f1564;
#L0f1562.   v4:= 1  @length 4;
#L0f1564.   return v4;

   }
    procedure [|void|] [|java:text:Bidi.ubidi_close|] ([|long|] v0) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:text:Bidi.ubidi_countRuns|] ([|long|] v0) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_countRuns:(J)I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:text:Bidi.ubidi_getDirection|] ([|long|] v0) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_getDirection:(J)I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|] [|java:text:Bidi.ubidi_getLength|] ([|long|] v0) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_getLength:(J)I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|][] [|java:text:Bidi.ubidi_getLevels|] ([|long|] v0) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_getLevels:(J)[B|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|byte|] [|java:text:Bidi.ubidi_getParaLevel|] ([|long|] v0) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_getParaLevel:(J)B|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|java:text:Bidi$Run|][] [|java:text:Bidi.ubidi_getRuns|] ([|long|] v0) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_getRuns:(J)[Ljava/text/Bidi$Run;|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|java:text:Bidi.ubidi_open|] () @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_open:()J|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|int|][] [|java:text:Bidi.ubidi_reorderVisual|] ([|byte|][] v0, [|int|] v1) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_reorderVisual:([BI)[I|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|long|] [|java:text:Bidi.ubidi_setLine|] ([|long|] v0, [|int|] v2, [|int|] v3) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_setLine:(JII)J|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|void|] [|java:text:Bidi.ubidi_setPara|] ([|long|] v0, [|char|][] v2, [|int|] v3, [|int|] v4, [|byte|][] v5) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.ubidi_setPara:(J[CII[B)V|] @Access PRIVATE_STATIC_NATIVE {
      # return;
   }
    procedure [|boolean|] [|java:text:Bidi.baseIsLeftToRight|] ([|java:text:Bidi|] v1 @type (this)) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.baseIsLeftToRight:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f1578.   v0:= v1.[|java:text:Bidi.baseLevel|] ;
#L0f157c.   v0:= v0 % 2;
#L0f1580.   if v0 != 0 then goto L0f1588;
#L0f1584.   v0:= 1  @length 4;
#L0f1586.   return v0;
#L0f1588.   v0:= 0  @length 4;
#L0f158a.   goto L0f1586;

   }
    procedure [|java:text:Bidi|] [|java:text:Bidi.createLineBidi|] ([|java:text:Bidi|] v9 @type (this), [|int|] v10, [|int|] v11) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.createLineBidi:(II)Ljava/text/Bidi;|] @Access PUBLIC {
      local temp ;
        [|int|] v5 @varname [|dir|] @scope ((L0068,L007c), (L007e,L0090));
        [|long|] v7 @varname [|parent|] @scope ((L006a,L007c), (L007e,L0090));
        [|char|][] v0 @varname [|text|] @scope ((L004a,L0090));
        [|byte|][] v2 @varname [|embeddings|] @scope ((L0053,L0090));
        [|int|] v6 @varname [|i|] @scope ((L0054,L0090));



        v1;
        v3;
        v4;
        v8;
      
#L0f159c.   v5:= 0  @length 4;
#L0f159e.   if v10 < 0 then goto L0f15b2;
#L0f15a2.   if v11 < 0 then goto L0f15b2;
#L0f15a6.   v1:= v9.[|java:text:Bidi.length|] ;
#L0f15aa.   if v11 > v1 then goto L0f15b2;
#L0f15ae.   if v10 <= v11 then goto L0f1628;
#L0f15b2.   v1:= new [|java:lang:IllegalArgumentException|];
#L0f15b6.   v3:= new [|java:lang:StringBuilder|];
#L0f15ba.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f15c0.   v4:= "Invalid ranges (start=" @type (object, string);
#L0f15c4.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f15ca.   v3:= temp  @type object;
#L0f15cc.   call temp:=  [|java:lang:StringBuilder.append|](v3, v10) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f15d2.   v3:= temp  @type object;
#L0f15d4.   v4:= ", " @type (object, string);
#L0f15d8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f15de.   v3:= temp  @type object;
#L0f15e0.   v4:= "limit=" @type (object, string);
#L0f15e4.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f15ea.   v3:= temp  @type object;
#L0f15ec.   call temp:=  [|java:lang:StringBuilder.append|](v3, v11) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f15f2.   v3:= temp  @type object;
#L0f15f4.   v4:= ", length=" @type (object, string);
#L0f15f8.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f15fe.   v3:= temp  @type object;
#L0f1600.   v4:= v9.[|java:text:Bidi.length|] ;
#L0f1604.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f160a.   v3:= temp  @type object;
#L0f160c.   v4:= ")" @type (object, string);
#L0f1610.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1616.   v3:= temp  @type object;
#L0f1618.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f161e.   v3:= temp  @type object;
#L0f1620.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f1626.   throw v1;
#L0f1628.   v1:= v9.[|java:text:Bidi.length|] ;
#L0f162c.   v0:= new [|char|][v1];
#L0f1630.   v1:= 97  @length 16;
#L0f1634.   call temp:=  [|java:util:Arrays.fill|](v0, v1) @signature [|Ljava/util/Arrays;.fill:([CC)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f163a.   v1:= v9.[|java:text:Bidi.length|] ;
#L0f163e.   v2:= new [|byte|][v1];
#L0f1642.   v6:= 0  @length 4;
#L0f1644.   v1:= v2.length;
#L0f1646.   if v6 >= v1 then goto L0f1660;
#L0f164a.   v1:= v9.[|java:text:Bidi.offsetLevel|]   @type object;
#L0f164e.   v1:= v1[v6]  @byte;
#L0f1652.   v1:= -v1  @type int;
#L0f1654.   v1:= (byte)v1  @type i2b;
#L0f1656.   v2[v6]:= v1  @byte;
#L0f165a.   v6:= v6 + 1;
#L0f165e.   goto L0f1644;
#L0f1660.   call temp:=  [|java:text:Bidi.baseIsLeftToRight|](v9) @signature [|Ljava/text/Bidi;.baseIsLeftToRight:()Z|] @classDescriptor [|java:text:Bidi|] @type virtual;
#L0f1666.   v1:= temp;
#L0f1668.   if v1 == 0 then goto L0f1694;
#L0f166c.   v7:= 0  @length wide16;
#L0f1670.   v1:= 0  @length 4;
#L0f1672.   v3:= 0  @length 4;
#L0f1674.   v4:= v9.[|java:text:Bidi.length|] ;
#L0f1678.   call temp:=  [|java:text:Bidi.createUBiDi|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/text/Bidi;.createUBiDi:([CI[BIII)J|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f167e.   v7:= temp  @type wide;
#L0f1680.   if v10 != v11 then goto L0f1698;
#L0f1684.   call temp:=  [|java:text:Bidi.createEmptyLineBidi|](v9, v7, v8) @signature [|Ljava/text/Bidi;.createEmptyLineBidi:(J)Ljava/text/Bidi;|] @classDescriptor [|java:text:Bidi|] @type direct;
#L0f168a.   v1:= temp  @type object;
#L0f168c.   call temp:=  [|java:text:Bidi.ubidi_close|](v7, v8) @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f1692.   return v1  @type object;
#L0f1694.   v5:= 1  @length 4;
#L0f1696.   goto L0f166c;
#L0f1698.   v1:= new [|java:text:Bidi|];
#L0f169c.   call temp:=  [|java:text:Bidi.ubidi_setLine|](v7, v8, v10, v11) @signature [|Ljava/text/Bidi;.ubidi_setLine:(JII)J|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f16a2.   v3:= temp  @type wide;
#L0f16a4.   call temp:=  [|java:text:Bidi.<init>|](v1, v3, v4) @signature [|Ljava/text/Bidi;.<init>:(J)V|] @classDescriptor [|java:text:Bidi|] @type direct;
#L0f16aa.   call temp:=  [|java:text:Bidi.ubidi_close|](v7, v8) @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f16b0.   goto L0f1692;
#L0f16b2.   v1:= Exception  @type object;
#L0f16b4.   call temp:=  [|java:text:Bidi.ubidi_close|](v7, v8) @signature [|Ljava/text/Bidi;.ubidi_close:(J)V|] @classDescriptor [|java:text:Bidi|] @type static;
#L0f16ba.   throw v1;
  catch  [|any|] @[L0f1674..L0f168a] goto L0f16b2;
  catch  [|any|] @[L0f1698..L0f16aa] goto L0f16b2;

   }
    procedure [|int|] [|java:text:Bidi.getBaseLevel|] ([|java:text:Bidi|] v1 @type (this)) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.getBaseLevel:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f16e0.   v0:= v1.[|java:text:Bidi.baseLevel|] ;
#L0f16e4.   return v0;

   }
    procedure [|int|] [|java:text:Bidi.getLength|] ([|java:text:Bidi|] v1 @type (this)) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.getLength:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f16f8.   v0:= v1.[|java:text:Bidi.length|] ;
#L0f16fc.   return v0;

   }
    procedure [|int|] [|java:text:Bidi.getLevelAt|] ([|java:text:Bidi|] v2 @type (this), [|int|] v3) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.getLevelAt:(I)I|] @Access PUBLIC {
      local temp ;
        [|java:lang:RuntimeException|] v0 @varname [|e|] @scope ((L0008,L000b));


        v1;
      
#L0f1710.   v1:= v2.[|java:text:Bidi.offsetLevel|]   @type object;
#L0f1714.   v1:= v1[v3]  @byte;
#L0f1718.   v1:= v1 ^& -129;
#L0f171c.   return v1;
#L0f171e.   v0:= Exception  @type object;
#L0f1720.   v1:= v2.[|java:text:Bidi.baseLevel|] ;
#L0f1724.   goto L0f171c;
  catch  [|java:lang:RuntimeException|] @[L0f1710..L0f1718] goto L0f171e;

   }
    procedure [|int|] [|java:text:Bidi.getRunCount|] ([|java:text:Bidi|] v1 @type (this)) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.getRunCount:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f1748.   v0:= v1.[|java:text:Bidi.unidirectional|]   @boolean;
#L0f174c.   if v0 == 0 then goto L0f1754;
#L0f1750.   v0:= 1  @length 4;
#L0f1752.   return v0;
#L0f1754.   v0:= v1.[|java:text:Bidi.runs|]   @type object;
#L0f1758.   v0:= v0.length;
#L0f175a.   goto L0f1752;

   }
    procedure [|int|] [|java:text:Bidi.getRunLevel|] ([|java:text:Bidi|] v1 @type (this), [|int|] v2) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.getRunLevel:(I)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f176c.   v0:= v1.[|java:text:Bidi.unidirectional|]   @boolean;
#L0f1770.   if v0 == 0 then goto L0f177a;
#L0f1774.   v0:= v1.[|java:text:Bidi.baseLevel|] ;
#L0f1778.   return v0;
#L0f177a.   v0:= v1.[|java:text:Bidi.runs|]   @type object;
#L0f177e.   v0:= v0[v2]  @type object;
#L0f1782.   call temp:=  [|java:text:Bidi$Run.getLevel|](v0) @signature [|Ljava/text/Bidi$Run;.getLevel:()I|] @classDescriptor [|java:text:Bidi$Run|] @type virtual;
#L0f1788.   v0:= temp;
#L0f178a.   goto L0f1778;

   }
    procedure [|int|] [|java:text:Bidi.getRunLimit|] ([|java:text:Bidi|] v1 @type (this), [|int|] v2) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.getRunLimit:(I)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f179c.   v0:= v1.[|java:text:Bidi.unidirectional|]   @boolean;
#L0f17a0.   if v0 == 0 then goto L0f17aa;
#L0f17a4.   v0:= v1.[|java:text:Bidi.length|] ;
#L0f17a8.   return v0;
#L0f17aa.   v0:= v1.[|java:text:Bidi.runs|]   @type object;
#L0f17ae.   v0:= v0[v2]  @type object;
#L0f17b2.   call temp:=  [|java:text:Bidi$Run.getLimit|](v0) @signature [|Ljava/text/Bidi$Run;.getLimit:()I|] @classDescriptor [|java:text:Bidi$Run|] @type virtual;
#L0f17b8.   v0:= temp;
#L0f17ba.   goto L0f17a8;

   }
    procedure [|int|] [|java:text:Bidi.getRunStart|] ([|java:text:Bidi|] v1 @type (this), [|int|] v2) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.getRunStart:(I)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f17cc.   v0:= v1.[|java:text:Bidi.unidirectional|]   @boolean;
#L0f17d0.   if v0 == 0 then goto L0f17d8;
#L0f17d4.   v0:= 0  @length 4;
#L0f17d6.   return v0;
#L0f17d8.   v0:= v1.[|java:text:Bidi.runs|]   @type object;
#L0f17dc.   v0:= v0[v2]  @type object;
#L0f17e0.   call temp:=  [|java:text:Bidi$Run.getStart|](v0) @signature [|Ljava/text/Bidi$Run;.getStart:()I|] @classDescriptor [|java:text:Bidi$Run|] @type virtual;
#L0f17e6.   v0:= temp;
#L0f17e8.   goto L0f17d6;

   }
    procedure [|boolean|] [|java:text:Bidi.isLeftToRight|] ([|java:text:Bidi|] v1 @type (this)) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.isLeftToRight:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f17fc.   v0:= v1.[|java:text:Bidi.direction|] ;
#L0f1800.   if v0 != 0 then goto L0f1808;
#L0f1804.   v0:= 1  @length 4;
#L0f1806.   return v0;
#L0f1808.   v0:= 0  @length 4;
#L0f180a.   goto L0f1806;

   }
    procedure [|boolean|] [|java:text:Bidi.isMixed|] ([|java:text:Bidi|] v2 @type (this)) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.isMixed:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f181c.   v0:= v2.[|java:text:Bidi.direction|] ;
#L0f1820.   v1:= 2  @length 4;
#L0f1822.   if v0 != v1 then goto L0f182a;
#L0f1826.   v0:= 1  @length 4;
#L0f1828.   return v0;
#L0f182a.   v0:= 0  @length 4;
#L0f182c.   goto L0f1828;

   }
    procedure [|boolean|] [|java:text:Bidi.isRightToLeft|] ([|java:text:Bidi|] v2 @type (this)) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.isRightToLeft:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f1840.   v0:= 1  @length 4;
#L0f1842.   v1:= v2.[|java:text:Bidi.direction|] ;
#L0f1846.   if v1 != v0 then goto L0f184c;
#L0f184a.   return v0;
#L0f184c.   v0:= 0  @length 4;
#L0f184e.   goto L0f184a;

   }
    procedure [|java:lang:String|] [|java:text:Bidi.toString|] ([|java:text:Bidi|] v2 @type (this)) @owner [|java:text:Bidi|] @signature [|Ljava/text/Bidi;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f1860.   v0:= new [|java:lang:StringBuilder|];
#L0f1864.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f186a.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f1870.   v1:= temp  @type object;
#L0f1872.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0f1878.   v1:= temp  @type object;
#L0f187a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1880.   v0:= temp  @type object;
#L0f1882.   v1:= "[direction: " @type (object, string);
#L0f1886.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f188c.   v0:= temp  @type object;
#L0f188e.   v1:= v2.[|java:text:Bidi.direction|] ;
#L0f1892.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f1898.   v0:= temp  @type object;
#L0f189a.   v1:= " baseLevel: " @type (object, string);
#L0f189e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f18a4.   v0:= temp  @type object;
#L0f18a6.   v1:= v2.[|java:text:Bidi.baseLevel|] ;
#L0f18aa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f18b0.   v0:= temp  @type object;
#L0f18b2.   v1:= " length: " @type (object, string);
#L0f18b6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f18bc.   v0:= temp  @type object;
#L0f18be.   v1:= v2.[|java:text:Bidi.length|] ;
#L0f18c2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f18c8.   v0:= temp  @type object;
#L0f18ca.   v1:= " runs: " @type (object, string);
#L0f18ce.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f18d4.   v0:= temp  @type object;
#L0f18d6.   v1:= v2.[|java:text:Bidi.runs|]   @type object;
#L0f18da.   call temp:=  [|java:util:Arrays.toString|](v1) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f18e0.   v1:= temp  @type object;
#L0f18e2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f18e8.   v0:= temp  @type object;
#L0f18ea.   v1:= "]" @type (object, string);
#L0f18ee.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f18f4.   v0:= temp  @type object;
#L0f18f6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f18fc.   v0:= temp  @type object;
#L0f18fe.   return v0  @type object;

   }
record [|java:text:BreakIterator|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:lang:Cloneable|] {
      [|libcore:icu:NativeBreakIterator|] [|java:text:BreakIterator.wrapped|]    @AccessFlag ;
   }
      global [|int|] @@[|java:text:BreakIterator.DONE|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:text:BreakIterator.<init>|] ([|java:text:BreakIterator|] v0 @type (this)) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0f1910.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f1916.   return @void ;

   }
    procedure [|void|] [|java:text:BreakIterator.<init>|] ([|java:text:BreakIterator|] v0 @type (this), [|libcore:icu:NativeBreakIterator|] v1 @type (object)) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.<init>:(Llibcore/icu/NativeBreakIterator;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L0f1928.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f192e.   v0.[|java:text:BreakIterator.wrapped|]  := v1 @type object;
#L0f1932.   return @void ;

   }
    procedure [|java:util:Locale|][] [|java:text:BreakIterator.getAvailableLocales|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getAvailableLocales:()[Ljava/util/Locale;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f1944.   call temp:=  [|libcore:icu:ICU.getAvailableBreakIteratorLocales|]() @signature [|Llibcore/icu/ICU;.getAvailableBreakIteratorLocales:()[Ljava/util/Locale;|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0f194a.   v0:= temp  @type object;
#L0f194c.   return v0  @type object;

   }
    procedure [|java:text:BreakIterator|] [|java:text:BreakIterator.getCharacterInstance|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getCharacterInstance:()Ljava/text/BreakIterator;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f1960.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f1966.   v0:= temp  @type object;
#L0f1968.   call temp:=  [|java:text:BreakIterator.getCharacterInstance|](v0) @signature [|Ljava/text/BreakIterator;.getCharacterInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @classDescriptor [|java:text:BreakIterator|] @type static;
#L0f196e.   v0:= temp  @type object;
#L0f1970.   return v0  @type object;

   }
    procedure [|java:text:BreakIterator|] [|java:text:BreakIterator.getCharacterInstance|] ([|java:util:Locale|] v2 @type (object)) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getCharacterInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L0f1984.   v0:= new [|java:text:RuleBasedBreakIterator|];
#L0f1988.   call temp:=  [|libcore:icu:NativeBreakIterator.getCharacterInstance|](v2) @signature [|Llibcore/icu/NativeBreakIterator;.getCharacterInstance:(Ljava/util/Locale;)Llibcore/icu/NativeBreakIterator;|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type static;
#L0f198e.   v1:= temp  @type object;
#L0f1990.   call temp:=  [|java:text:RuleBasedBreakIterator.<init>|](v0, v1) @signature [|Ljava/text/RuleBasedBreakIterator;.<init>:(Llibcore/icu/NativeBreakIterator;)V|] @classDescriptor [|java:text:RuleBasedBreakIterator|] @type direct;
#L0f1996.   return v0  @type object;

   }
    procedure [|java:text:BreakIterator|] [|java:text:BreakIterator.getLineInstance|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getLineInstance:()Ljava/text/BreakIterator;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f19a8.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f19ae.   v0:= temp  @type object;
#L0f19b0.   call temp:=  [|java:text:BreakIterator.getLineInstance|](v0) @signature [|Ljava/text/BreakIterator;.getLineInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @classDescriptor [|java:text:BreakIterator|] @type static;
#L0f19b6.   v0:= temp  @type object;
#L0f19b8.   return v0  @type object;

   }
    procedure [|java:text:BreakIterator|] [|java:text:BreakIterator.getLineInstance|] ([|java:util:Locale|] v2 @type (object)) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getLineInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L0f19cc.   v0:= new [|java:text:RuleBasedBreakIterator|];
#L0f19d0.   call temp:=  [|libcore:icu:NativeBreakIterator.getLineInstance|](v2) @signature [|Llibcore/icu/NativeBreakIterator;.getLineInstance:(Ljava/util/Locale;)Llibcore/icu/NativeBreakIterator;|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type static;
#L0f19d6.   v1:= temp  @type object;
#L0f19d8.   call temp:=  [|java:text:RuleBasedBreakIterator.<init>|](v0, v1) @signature [|Ljava/text/RuleBasedBreakIterator;.<init>:(Llibcore/icu/NativeBreakIterator;)V|] @classDescriptor [|java:text:RuleBasedBreakIterator|] @type direct;
#L0f19de.   return v0  @type object;

   }
    procedure [|java:text:BreakIterator|] [|java:text:BreakIterator.getSentenceInstance|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getSentenceInstance:()Ljava/text/BreakIterator;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f19f0.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f19f6.   v0:= temp  @type object;
#L0f19f8.   call temp:=  [|java:text:BreakIterator.getSentenceInstance|](v0) @signature [|Ljava/text/BreakIterator;.getSentenceInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @classDescriptor [|java:text:BreakIterator|] @type static;
#L0f19fe.   v0:= temp  @type object;
#L0f1a00.   return v0  @type object;

   }
    procedure [|java:text:BreakIterator|] [|java:text:BreakIterator.getSentenceInstance|] ([|java:util:Locale|] v2 @type (object)) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getSentenceInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L0f1a14.   v0:= new [|java:text:RuleBasedBreakIterator|];
#L0f1a18.   call temp:=  [|libcore:icu:NativeBreakIterator.getSentenceInstance|](v2) @signature [|Llibcore/icu/NativeBreakIterator;.getSentenceInstance:(Ljava/util/Locale;)Llibcore/icu/NativeBreakIterator;|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type static;
#L0f1a1e.   v1:= temp  @type object;
#L0f1a20.   call temp:=  [|java:text:RuleBasedBreakIterator.<init>|](v0, v1) @signature [|Ljava/text/RuleBasedBreakIterator;.<init>:(Llibcore/icu/NativeBreakIterator;)V|] @classDescriptor [|java:text:RuleBasedBreakIterator|] @type direct;
#L0f1a26.   return v0  @type object;

   }
    procedure [|java:text:BreakIterator|] [|java:text:BreakIterator.getWordInstance|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getWordInstance:()Ljava/text/BreakIterator;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f1a38.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f1a3e.   v0:= temp  @type object;
#L0f1a40.   call temp:=  [|java:text:BreakIterator.getWordInstance|](v0) @signature [|Ljava/text/BreakIterator;.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @classDescriptor [|java:text:BreakIterator|] @type static;
#L0f1a46.   v0:= temp  @type object;
#L0f1a48.   return v0  @type object;

   }
    procedure [|java:text:BreakIterator|] [|java:text:BreakIterator.getWordInstance|] ([|java:util:Locale|] v2 @type (object)) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L0f1a5c.   v0:= new [|java:text:RuleBasedBreakIterator|];
#L0f1a60.   call temp:=  [|libcore:icu:NativeBreakIterator.getWordInstance|](v2) @signature [|Llibcore/icu/NativeBreakIterator;.getWordInstance:(Ljava/util/Locale;)Llibcore/icu/NativeBreakIterator;|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type static;
#L0f1a66.   v1:= temp  @type object;
#L0f1a68.   call temp:=  [|java:text:RuleBasedBreakIterator.<init>|](v0, v1) @signature [|Ljava/text/RuleBasedBreakIterator;.<init>:(Llibcore/icu/NativeBreakIterator;)V|] @classDescriptor [|java:text:RuleBasedBreakIterator|] @type direct;
#L0f1a6e.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:text:BreakIterator.clone|] ([|java:text:BreakIterator|] v3 @type (this)) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:BreakIterator|] v0 @varname [|cloned|] @scope ((L0006,L0011));
        [|java:lang:CloneNotSupportedException|] v1 @varname [|e|] @scope ((L0012,L0018));

        v2;
      
#L0f1a80.   call temp:=  [|java:lang:Object.clone|](v3) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0f1a86.   v0:= temp  @type object;
#L0f1a88.   v0:= ([|java:text:BreakIterator|])v0;
#L0f1a8c.   v2:= v3.[|java:text:BreakIterator.wrapped|]   @type object;
#L0f1a90.   call temp:=  [|libcore:icu:NativeBreakIterator.clone|](v2) @signature [|Llibcore/icu/NativeBreakIterator;.clone:()Ljava/lang/Object;|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f1a96.   v2:= temp  @type object;
#L0f1a98.   v2:= ([|libcore:icu:NativeBreakIterator|])v2;
#L0f1a9c.   v0.[|java:text:BreakIterator.wrapped|]  := v2 @type object;
#L0f1aa0.   return v0  @type object;
#L0f1aa2.   v1:= Exception  @type object;
#L0f1aa4.   v2:= new [|java:lang:AssertionError|];
#L0f1aa8.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v1) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0f1aae.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L0f1a80..L0f1aa0] goto L0f1aa2;

   }
    procedure [|int|] [|java:text:BreakIterator.current|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.current:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:BreakIterator.first|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.first:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:BreakIterator.following|] ([|int|] v0) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.following:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:CharacterIterator|] [|java:text:BreakIterator.getText|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.getText:()Ljava/text/CharacterIterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:text:BreakIterator.isBoundary|] ([|java:text:BreakIterator|] v1 @type (this), [|int|] v2) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.isBoundary:(I)Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f1ad0.   v0:= v1.[|java:text:BreakIterator.wrapped|]   @type object;
#L0f1ad4.   call temp:=  [|libcore:icu:NativeBreakIterator.isBoundary|](v0, v2) @signature [|Llibcore/icu/NativeBreakIterator;.isBoundary:(I)Z|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f1ada.   v0:= temp;
#L0f1adc.   return v0;

   }
    procedure [|int|] [|java:text:BreakIterator.last|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.last:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:BreakIterator.next|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.next:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:BreakIterator.next|] ([|int|] v0) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.next:(I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:BreakIterator.preceding|] ([|java:text:BreakIterator|] v1 @type (this), [|int|] v2) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.preceding:(I)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f1af0.   v0:= v1.[|java:text:BreakIterator.wrapped|]   @type object;
#L0f1af4.   call temp:=  [|libcore:icu:NativeBreakIterator.preceding|](v0, v2) @signature [|Llibcore/icu/NativeBreakIterator;.preceding:(I)I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f1afa.   v0:= temp;
#L0f1afc.   return v0;

   }
    procedure [|int|] [|java:text:BreakIterator.previous|] () @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.previous:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:text:BreakIterator.setText|] ([|java:text:BreakIterator|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.setText:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f1b10.   if v3 != 0 then goto L0f1b24;
#L0f1b14.   v0:= new [|java:lang:NullPointerException|];
#L0f1b18.   v1:= "newText == null" @type (object, string);
#L0f1b1c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f1b22.   throw v0;
#L0f1b24.   v0:= v2.[|java:text:BreakIterator.wrapped|]   @type object;
#L0f1b28.   call temp:=  [|libcore:icu:NativeBreakIterator.setText|](v0, v3) @signature [|Llibcore/icu/NativeBreakIterator;.setText:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f1b2e.   return @void ;

   }
    procedure [|void|] [|java:text:BreakIterator.setText|] ([|java:text:CharacterIterator|] v0 @type (object)) @owner [|java:text:BreakIterator|] @signature [|Ljava/text/BreakIterator;.setText:(Ljava/text/CharacterIterator;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:Format|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:io:Serializable|], [|java:lang:Cloneable|] {
   }
      global [|long|] @@[|java:text:Format.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:Format.<init>|] ([|java:text:Format|] v0 @type (this)) @owner [|java:text:Format|] @signature [|Ljava/text/Format;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0f1b40.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f1b46.   return @void ;

   }
    procedure [|boolean|] [|java:text:Format.upTo|] ([|java:lang:String|] v9 @type (object), [|java:text:ParsePosition|] v10 @type (object), [|java:lang:StringBuffer|] v11 @type (object), [|char|] v12) @owner [|java:text:Format|] @signature [|Ljava/text/Format;.upTo:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuffer;C)Z|] @Access STATIC {
      local temp ;
        [|int|] v1 @varname [|index|] @scope ((L0008,L000f), (L000f,L0013), (L0013,L0023), (L0023,L0024), (L0024,L0033), (L0033,L0037), (L0037,L0039));
        [|char|] v0 @varname [|ch|] @scope ((L0017,L002d), (L002e,L0033));
        [|boolean|] v3 @varname [|lastQuote|] @scope ((L000d,L0039));
        [|int|] v4 @varname [|length|] @scope ((L000c,L0039));
        [|boolean|] v5 @varname [|quote|] @scope ((L000e,L0039));




        v2;
        v6;
        v7;
        v8;
      
#L0f1b58.   v8:= 39  @length 16;
#L0f1b5c.   v6:= 1  @length 4;
#L0f1b5e.   v7:= 0  @length 4;
#L0f1b60.   call temp:=  [|java:text:ParsePosition.getIndex|](v10) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f1b66.   v1:= temp;
#L0f1b68.   call temp:=  [|java:lang:String.length|](v9) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f1b6e.   v4:= temp;
#L0f1b70.   v3:= 0  @length 4;
#L0f1b72.   v5:= 0  @length 4;
#L0f1b74.   v2:= v1;
#L0f1b76.   if v2 >= v4 then goto L0f1bbe;
#L0f1b7a.   v1:= v2 + 1;
#L0f1b7e.   call temp:=  [|java:lang:String.charAt|](v9, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f1b84.   v0:= temp;
#L0f1b86.   if v0 != v8 then goto L0f1ba4;
#L0f1b8a.   if v3 == 0 then goto L0f1b94;
#L0f1b8e.   call temp:=  [|java:lang:StringBuffer.append|](v11, v8) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f1b94.   if v5 != 0 then goto L0f1ba0;
#L0f1b98.   v5:= v6;
#L0f1b9a.   v3:= 1  @length 4;
#L0f1b9c.   v2:= v1;
#L0f1b9e.   goto L0f1b76;
#L0f1ba0.   v5:= v7;
#L0f1ba2.   goto L0f1b9a;
#L0f1ba4.   if v0 != v12 then goto L0f1bb4;
#L0f1ba8.   if v5 != 0 then goto L0f1bb4;
#L0f1bac.   call temp:=  [|java:text:ParsePosition.setIndex|](v10, v1) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f1bb2.   return v6;
#L0f1bb4.   v3:= 0  @length 4;
#L0f1bb6.   call temp:=  [|java:lang:StringBuffer.append|](v11, v0) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f1bbc.   goto L0f1b9c;
#L0f1bbe.   call temp:=  [|java:text:ParsePosition.setIndex|](v10, v2) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f1bc4.   v1:= v2;
#L0f1bc6.   v6:= v7;
#L0f1bc8.   goto L0f1bb2;

   }
    procedure [|boolean|] [|java:text:Format.upToWithQuotes|] ([|java:lang:String|] v8 @type (object), [|java:text:ParsePosition|] v9 @type (object), [|java:lang:StringBuffer|] v10 @type (object), [|char|] v11, [|char|] v12) @owner [|java:text:Format|] @signature [|Ljava/text/Format;.upToWithQuotes:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuffer;CC)Z|] @Access STATIC {
      local temp ;
        [|int|] v2 @varname [|index|] @scope ((L0005,L000c), (L000c,L0010), (L0010,L0031), (L0031,L003a));
        [|char|] v0 @varname [|ch|] @scope ((L0014,L0032));
        [|int|] v1 @varname [|count|] @scope ((L000a,L003a));
        [|int|] v4 @varname [|length|] @scope ((L0009,L003a));
        [|boolean|] v5 @varname [|quote|] @scope ((L000b,L003a));





        v3;
        v6;
        v7;
      
#L0f1bdc.   v6:= 1  @length 4;
#L0f1bde.   call temp:=  [|java:text:ParsePosition.getIndex|](v9) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f1be4.   v2:= temp;
#L0f1be6.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f1bec.   v4:= temp;
#L0f1bee.   v1:= 1  @length 4;
#L0f1bf0.   v5:= 0  @length 4;
#L0f1bf2.   v3:= v2;
#L0f1bf4.   if v3 >= v4 then goto L0f1c40;
#L0f1bf8.   v2:= v3 + 1;
#L0f1bfc.   call temp:=  [|java:lang:String.charAt|](v8, v3) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f1c02.   v0:= temp;
#L0f1c04.   v7:= 39  @length 16;
#L0f1c08.   if v0 != v7 then goto L0f1c12;
#L0f1c0c.   if v5 != 0 then goto L0f1c2a;
#L0f1c10.   v5:= v6;
#L0f1c12.   if v5 != 0 then goto L0f1c36;
#L0f1c16.   if v0 != v11 then goto L0f1c1e;
#L0f1c1a.   v1:= v1 + -1;
#L0f1c1e.   if v1 != 0 then goto L0f1c2e;
#L0f1c22.   call temp:=  [|java:text:ParsePosition.setIndex|](v9, v2) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f1c28.   return v6;
#L0f1c2a.   v5:= 0  @length 4;
#L0f1c2c.   goto L0f1c12;
#L0f1c2e.   if v0 != v12 then goto L0f1c36;
#L0f1c32.   v1:= v1 + 1;
#L0f1c36.   call temp:=  [|java:lang:StringBuffer.append|](v10, v0) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f1c3c.   v3:= v2;
#L0f1c3e.   goto L0f1bf4;
#L0f1c40.   v6:= new [|java:lang:IllegalArgumentException|];
#L0f1c44.   v7:= "Unmatched braces in the pattern" @type (object, string);
#L0f1c48.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f1c4e.   throw v6;

   }
    procedure [|java:lang:Object|] [|java:text:Format.clone|] ([|java:text:Format|] v2 @type (this)) @owner [|java:text:Format|] @signature [|Ljava/text/Format;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:lang:CloneNotSupportedException|] v0 @varname [|e|] @scope ((L0006,L000c));

        v1;
      
#L0f1c60.   call temp:=  [|java:lang:Object.clone|](v2) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0f1c66.   v1:= temp  @type object;
#L0f1c68.   return v1  @type object;
#L0f1c6a.   v0:= Exception  @type object;
#L0f1c6c.   v1:= new [|java:lang:AssertionError|];
#L0f1c70.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0f1c76.   throw v1;
  catch  [|java:lang:CloneNotSupportedException|] @[L0f1c60..L0f1c66] goto L0f1c6a;

   }
    procedure [|java:lang:String|] [|java:text:Format.format|] ([|java:text:Format|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:text:Format|] @signature [|Ljava/text/Format;.format:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
        v2;
      
#L0f1c98.   v0:= new [|java:lang:StringBuffer|];
#L0f1c9c.   call temp:=  [|java:lang:StringBuffer.<init>|](v0) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f1ca2.   v1:= new [|java:text:FieldPosition|];
#L0f1ca6.   v2:= 0  @length 4;
#L0f1ca8.   call temp:=  [|java:text:FieldPosition.<init>|](v1, v2) @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f1cae.   call temp:=  [|java:text:Format.format|](v3, v4, v0, v1) @signature [|Ljava/text/Format;.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:Format|] @type virtual;
#L0f1cb4.   v0:= temp  @type object;
#L0f1cb6.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f1cbc.   v0:= temp  @type object;
#L0f1cbe.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:Format.format|] ([|java:lang:Object|] v0 @type (object), [|java:lang:StringBuffer|] v1 @type (object), [|java:text:FieldPosition|] v2 @type (object)) @owner [|java:text:Format|] @signature [|Ljava/text/Format;.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:AttributedCharacterIterator|] [|java:text:Format.formatToCharacterIterator|] ([|java:text:Format|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:text:Format|] @signature [|Ljava/text/Format;.formatToCharacterIterator:(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f1cd0.   v0:= new [|java:text:AttributedString|];
#L0f1cd4.   call temp:=  [|java:text:Format.format|](v2, v3) @signature [|Ljava/text/Format;.format:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:text:Format|] @type virtual;
#L0f1cda.   v1:= temp  @type object;
#L0f1cdc.   call temp:=  [|java:text:AttributedString.<init>|](v0, v1) @signature [|Ljava/text/AttributedString;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:AttributedString|] @type direct;
#L0f1ce2.   call temp:=  [|java:text:AttributedString.getIterator|](v0) @signature [|Ljava/text/AttributedString;.getIterator:()Ljava/text/AttributedCharacterIterator;|] @classDescriptor [|java:text:AttributedString|] @type virtual;
#L0f1ce8.   v0:= temp  @type object;
#L0f1cea.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:text:Format.parseObject|] ([|java:text:Format|] v5 @type (this), [|java:lang:String|] v6 @type (object)) @owner [|java:text:Format|] @signature [|Ljava/text/Format;.parseObject:(Ljava/lang/String;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:ParsePosition|] v0 @varname [|position|] @scope ((L0006,L001d));
        [|java:lang:Object|] v1 @varname [|result|] @scope ((L000a,L001d));


        v2;
        v3;
        v4;
      
#L0f1cfc.   v0:= new [|java:text:ParsePosition|];
#L0f1d00.   v2:= 0  @length 4;
#L0f1d02.   call temp:=  [|java:text:ParsePosition.<init>|](v0, v2) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f1d08.   call temp:=  [|java:text:Format.parseObject|](v5, v6, v0) @signature [|Ljava/text/Format;.parseObject:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;|] @classDescriptor [|java:text:Format|] @type virtual;
#L0f1d0e.   v1:= temp  @type object;
#L0f1d10.   call temp:=  [|java:text:ParsePosition.getIndex|](v0) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f1d16.   v2:= temp;
#L0f1d18.   if v2 != 0 then goto L0f1d34;
#L0f1d1c.   v2:= new [|java:text:ParseException|];
#L0f1d20.   v3:= "Parse failure" @type (object, string);
#L0f1d24.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v0) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f1d2a.   v4:= temp;
#L0f1d2c.   call temp:=  [|java:text:ParseException.<init>|](v2, v3, v4) @signature [|Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:ParseException|] @type direct;
#L0f1d32.   throw v2;
#L0f1d34.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:text:Format.parseObject|] ([|java:lang:String|] v0 @type (object), [|java:text:ParsePosition|] v1 @type (object)) @owner [|java:text:Format|] @signature [|Ljava/text/Format;.parseObject:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:NumberFormat|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:text:Format|] {
      [|boolean|] [|java:text:NumberFormat.groupingUsed|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:NumberFormat.maximumFractionDigits|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:NumberFormat.maximumIntegerDigits|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:NumberFormat.minimumFractionDigits|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:NumberFormat.minimumIntegerDigits|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:text:NumberFormat.parseIntegerOnly|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:text:NumberFormat.FRACTION_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:NumberFormat.INTEGER_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:io:ObjectStreamField|][] @@[|java:text:NumberFormat.serialPersistentFields|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:text:NumberFormat.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:NumberFormat.<clinit>|] () @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0f1d48.   v0:= 11  @length 16;
#L0f1d4c.   v0:= new [|java:io:ObjectStreamField|][v0];
#L0f1d50.   v1:= 0  @length 4;
#L0f1d52.   v2:= new [|java:io:ObjectStreamField|];
#L0f1d56.   v3:= "groupingUsed" @type (object, string);
#L0f1d5a.   v4:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L0f1d5e.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1d64.   v0[v1]:= v2  @type object;
#L0f1d68.   v1:= 1  @length 4;
#L0f1d6a.   v2:= new [|java:io:ObjectStreamField|];
#L0f1d6e.   v3:= "maxFractionDigits" @type (object, string);
#L0f1d72.   v4:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0f1d76.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1d7c.   v0[v1]:= v2  @type object;
#L0f1d80.   v1:= 2  @length 4;
#L0f1d82.   v2:= new [|java:io:ObjectStreamField|];
#L0f1d86.   v3:= "maximumFractionDigits" @type (object, string);
#L0f1d8a.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f1d8e.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1d94.   v0[v1]:= v2  @type object;
#L0f1d98.   v1:= 3  @length 4;
#L0f1d9a.   v2:= new [|java:io:ObjectStreamField|];
#L0f1d9e.   v3:= "maximumIntegerDigits" @type (object, string);
#L0f1da2.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f1da6.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1dac.   v0[v1]:= v2  @type object;
#L0f1db0.   v1:= 4  @length 4;
#L0f1db2.   v2:= new [|java:io:ObjectStreamField|];
#L0f1db6.   v3:= "maxIntegerDigits" @type (object, string);
#L0f1dba.   v4:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0f1dbe.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1dc4.   v0[v1]:= v2  @type object;
#L0f1dc8.   v1:= 5  @length 4;
#L0f1dca.   v2:= new [|java:io:ObjectStreamField|];
#L0f1dce.   v3:= "minFractionDigits" @type (object, string);
#L0f1dd2.   v4:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0f1dd6.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1ddc.   v0[v1]:= v2  @type object;
#L0f1de0.   v1:= 6  @length 4;
#L0f1de2.   v2:= new [|java:io:ObjectStreamField|];
#L0f1de6.   v3:= "minimumFractionDigits" @type (object, string);
#L0f1dea.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f1dee.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1df4.   v0[v1]:= v2  @type object;
#L0f1df8.   v1:= 7  @length 4;
#L0f1dfa.   v2:= new [|java:io:ObjectStreamField|];
#L0f1dfe.   v3:= "minimumIntegerDigits" @type (object, string);
#L0f1e02.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f1e06.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1e0c.   v0[v1]:= v2  @type object;
#L0f1e10.   v1:= 8  @length 16;
#L0f1e14.   v2:= new [|java:io:ObjectStreamField|];
#L0f1e18.   v3:= "minIntegerDigits" @type (object, string);
#L0f1e1c.   v4:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0f1e20.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1e26.   v0[v1]:= v2  @type object;
#L0f1e2a.   v1:= 9  @length 16;
#L0f1e2e.   v2:= new [|java:io:ObjectStreamField|];
#L0f1e32.   v3:= "parseIntegerOnly" @type (object, string);
#L0f1e36.   v4:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L0f1e3a.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1e40.   v0[v1]:= v2  @type object;
#L0f1e44.   v1:= 10  @length 16;
#L0f1e48.   v2:= new [|java:io:ObjectStreamField|];
#L0f1e4c.   v3:= "serialVersionOnStream" @type (object, string);
#L0f1e50.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f1e54.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f1e5a.   v0[v1]:= v2  @type object;
#L0f1e5e.   @@[|java:text:NumberFormat.serialPersistentFields|] := v0  @type object;
#L0f1e62.   return @void ;

   }
    procedure [|void|] [|java:text:NumberFormat.<init>|] ([|java:text:NumberFormat|] v3 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

        v0;
        v1;
        v2;
      
#L0f1e74.   v2:= 1  @length 4;
#L0f1e76.   v1:= 0  @length 4;
#L0f1e78.   call temp:=  [|java:text:Format.<init>|](v3) @signature [|Ljava/text/Format;.<init>:()V|] @classDescriptor [|java:text:Format|] @type direct;
#L0f1e7e.   v3.[|java:text:NumberFormat.groupingUsed|]  := v2 @boolean;
#L0f1e82.   v3.[|java:text:NumberFormat.parseIntegerOnly|]  := v1 @boolean;
#L0f1e86.   v0:= 40  @length 16;
#L0f1e8a.   v3.[|java:text:NumberFormat.maximumIntegerDigits|]  := v0;
#L0f1e8e.   v3.[|java:text:NumberFormat.minimumIntegerDigits|]  := v2;
#L0f1e92.   v0:= 3  @length 4;
#L0f1e94.   v3.[|java:text:NumberFormat.maximumFractionDigits|]  := v0;
#L0f1e98.   v3.[|java:text:NumberFormat.minimumFractionDigits|]  := v1;
#L0f1e9c.   return @void ;

   }
    procedure [|java:util:Locale|][] [|java:text:NumberFormat.getAvailableLocales|] () @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getAvailableLocales:()[Ljava/util/Locale;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f1eb0.   call temp:=  [|libcore:icu:ICU.getAvailableNumberFormatLocales|]() @signature [|Llibcore/icu/ICU;.getAvailableNumberFormatLocales:()[Ljava/util/Locale;|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0f1eb6.   v0:= temp  @type object;
#L0f1eb8.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getCurrencyInstance|] () @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getCurrencyInstance:()Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f1ecc.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f1ed2.   v0:= temp  @type object;
#L0f1ed4.   call temp:=  [|java:text:NumberFormat.getCurrencyInstance|](v0) @signature [|Ljava/text/NumberFormat;.getCurrencyInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f1eda.   v0:= temp  @type object;
#L0f1edc.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getCurrencyInstance|] ([|java:util:Locale|] v1 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getCurrencyInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L0f1ef0.   call temp:=  [|libcore:icu:LocaleData.get|](v1) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f1ef6.   v0:= temp  @type object;
#L0f1ef8.   v0:= v0.[|libcore:icu:LocaleData.currencyPattern|]   @type object;
#L0f1efc.   call temp:=  [|java:text:NumberFormat.getInstance|](v0, v1) @signature [|Ljava/text/NumberFormat;.getInstance:(Ljava/lang/String;Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f1f02.   v0:= temp  @type object;
#L0f1f04.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getInstance|] () @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getInstance:()Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f1f18.   call temp:=  [|java:text:NumberFormat.getNumberInstance|]() @signature [|Ljava/text/NumberFormat;.getNumberInstance:()Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f1f1e.   v0:= temp  @type object;
#L0f1f20.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getInstance|] ([|java:lang:String|] v1 @type (object), [|java:util:Locale|] v2 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getInstance:(Ljava/lang/String;Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PRIVATE_STATIC {
      local temp ;


        v0;
      
#L0f1f34.   v0:= new [|java:text:DecimalFormat|];
#L0f1f38.   call temp:=  [|java:text:DecimalFormat.<init>|](v0, v1, v2) @signature [|Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f1f3e.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getInstance|] ([|java:util:Locale|] v1 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L0f1f50.   call temp:=  [|java:text:NumberFormat.getNumberInstance|](v1) @signature [|Ljava/text/NumberFormat;.getNumberInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f1f56.   v0:= temp  @type object;
#L0f1f58.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getIntegerInstance|] () @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getIntegerInstance:()Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f1f6c.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f1f72.   v0:= temp  @type object;
#L0f1f74.   call temp:=  [|java:text:NumberFormat.getIntegerInstance|](v0) @signature [|Ljava/text/NumberFormat;.getIntegerInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f1f7a.   v0:= temp  @type object;
#L0f1f7c.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getIntegerInstance|] ([|java:util:Locale|] v2 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getIntegerInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:text:NumberFormat|] v0 @varname [|result|] @scope ((L000a,L000f));

        v1;
      
#L0f1f90.   call temp:=  [|libcore:icu:LocaleData.get|](v2) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f1f96.   v1:= temp  @type object;
#L0f1f98.   v1:= v1.[|libcore:icu:LocaleData.integerPattern|]   @type object;
#L0f1f9c.   call temp:=  [|java:text:NumberFormat.getInstance|](v1, v2) @signature [|Ljava/text/NumberFormat;.getInstance:(Ljava/lang/String;Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f1fa2.   v0:= temp  @type object;
#L0f1fa4.   v1:= 1  @length 4;
#L0f1fa6.   call temp:=  [|java:text:NumberFormat.setParseIntegerOnly|](v0, v1) @signature [|Ljava/text/NumberFormat;.setParseIntegerOnly:(Z)V|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f1fac.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getNumberInstance|] () @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getNumberInstance:()Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f1fc0.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f1fc6.   v0:= temp  @type object;
#L0f1fc8.   call temp:=  [|java:text:NumberFormat.getNumberInstance|](v0) @signature [|Ljava/text/NumberFormat;.getNumberInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f1fce.   v0:= temp  @type object;
#L0f1fd0.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getNumberInstance|] ([|java:util:Locale|] v1 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getNumberInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L0f1fe4.   call temp:=  [|libcore:icu:LocaleData.get|](v1) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f1fea.   v0:= temp  @type object;
#L0f1fec.   v0:= v0.[|libcore:icu:LocaleData.numberPattern|]   @type object;
#L0f1ff0.   call temp:=  [|java:text:NumberFormat.getInstance|](v0, v1) @signature [|Ljava/text/NumberFormat;.getInstance:(Ljava/lang/String;Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f1ff6.   v0:= temp  @type object;
#L0f1ff8.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getPercentInstance|] () @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getPercentInstance:()Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f200c.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f2012.   v0:= temp  @type object;
#L0f2014.   call temp:=  [|java:text:NumberFormat.getPercentInstance|](v0) @signature [|Ljava/text/NumberFormat;.getPercentInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f201a.   v0:= temp  @type object;
#L0f201c.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:NumberFormat.getPercentInstance|] ([|java:util:Locale|] v1 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getPercentInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L0f2030.   call temp:=  [|libcore:icu:LocaleData.get|](v1) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f2036.   v0:= temp  @type object;
#L0f2038.   v0:= v0.[|libcore:icu:LocaleData.percentPattern|]   @type object;
#L0f203c.   call temp:=  [|java:text:NumberFormat.getInstance|](v0, v1) @signature [|Ljava/text/NumberFormat;.getInstance:(Ljava/lang/String;Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f2042.   v0:= temp  @type object;
#L0f2044.   return v0  @type object;

   }
    procedure [|void|] [|java:text:NumberFormat.readObject|] ([|java:text:NumberFormat|] v6 @type (this), [|java:io:ObjectInputStream|] v7 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        [|java:io:ObjectInputStream$GetField|] v0 @varname [|fields|] @scope ((L0009,L008f));


        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0f2058.   v5:= 40  @length 16;
#L0f205c.   v4:= 3  @length 4;
#L0f205e.   v3:= 1  @length 4;
#L0f2060.   v2:= 0  @length 4;
#L0f2062.   call temp:=  [|java:io:ObjectInputStream.readFields|](v7) @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0f2068.   v0:= temp  @type object;
#L0f206a.   v1:= "groupingUsed" @type (object, string);
#L0f206e.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v3) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Z)Z|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f2074.   v1:= temp;
#L0f2076.   v6.[|java:text:NumberFormat.groupingUsed|]  := v1 @boolean;
#L0f207a.   v1:= "parseIntegerOnly" @type (object, string);
#L0f207e.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v2) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Z)Z|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f2084.   v1:= temp;
#L0f2086.   v6.[|java:text:NumberFormat.parseIntegerOnly|]  := v1 @boolean;
#L0f208a.   v1:= "serialVersionOnStream" @type (object, string);
#L0f208e.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v2) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f2094.   v1:= temp;
#L0f2096.   if v1 != 0 then goto L0f2102;
#L0f209a.   v1:= "maxFractionDigits" @type (object, string);
#L0f209e.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;B)B|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f20a4.   v1:= temp;
#L0f20a6.   v6.[|java:text:NumberFormat.maximumFractionDigits|]  := v1;
#L0f20aa.   v1:= "maxIntegerDigits" @type (object, string);
#L0f20ae.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v5) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;B)B|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f20b4.   v1:= temp;
#L0f20b6.   v6.[|java:text:NumberFormat.maximumIntegerDigits|]  := v1;
#L0f20ba.   v1:= "minFractionDigits" @type (object, string);
#L0f20be.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v2) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;B)B|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f20c4.   v1:= temp;
#L0f20c6.   v6.[|java:text:NumberFormat.minimumFractionDigits|]  := v1;
#L0f20ca.   v1:= "minIntegerDigits" @type (object, string);
#L0f20ce.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v3) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;B)B|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f20d4.   v1:= temp;
#L0f20d6.   v6.[|java:text:NumberFormat.minimumIntegerDigits|]  := v1;
#L0f20da.   v1:= v6.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f20de.   v2:= v6.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f20e2.   if v1 > v2 then goto L0f20f2;
#L0f20e6.   v1:= v6.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f20ea.   v2:= v6.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f20ee.   if v1 <= v2 then goto L0f2144;
#L0f20f2.   v1:= new [|java:io:InvalidObjectException|];
#L0f20f6.   v2:= "min digits greater than max digits" @type (object, string);
#L0f20fa.   call temp:=  [|java:io:InvalidObjectException.<init>|](v1, v2) @signature [|Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidObjectException|] @type direct;
#L0f2100.   throw v1;
#L0f2102.   v1:= "maximumFractionDigits" @type (object, string);
#L0f2106.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f210c.   v1:= temp;
#L0f210e.   v6.[|java:text:NumberFormat.maximumFractionDigits|]  := v1;
#L0f2112.   v1:= "maximumIntegerDigits" @type (object, string);
#L0f2116.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v5) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f211c.   v1:= temp;
#L0f211e.   v6.[|java:text:NumberFormat.maximumIntegerDigits|]  := v1;
#L0f2122.   v1:= "minimumFractionDigits" @type (object, string);
#L0f2126.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v2) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f212c.   v1:= temp;
#L0f212e.   v6.[|java:text:NumberFormat.minimumFractionDigits|]  := v1;
#L0f2132.   v1:= "minimumIntegerDigits" @type (object, string);
#L0f2136.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v1, v3) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f213c.   v1:= temp;
#L0f213e.   v6.[|java:text:NumberFormat.minimumIntegerDigits|]  := v1;
#L0f2142.   goto L0f20da;
#L0f2144.   v1:= v6.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f2148.   if v1 < 0 then goto L0f2164;
#L0f214c.   v1:= v6.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f2150.   if v1 < 0 then goto L0f2164;
#L0f2154.   v1:= v6.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f2158.   if v1 < 0 then goto L0f2164;
#L0f215c.   v1:= v6.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f2160.   if v1 >= 0 then goto L0f2174;
#L0f2164.   v1:= new [|java:io:InvalidObjectException|];
#L0f2168.   v2:= "min or max digits negative" @type (object, string);
#L0f216c.   call temp:=  [|java:io:InvalidObjectException.<init>|](v1, v2) @signature [|Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:io:InvalidObjectException|] @type direct;
#L0f2172.   throw v1;
#L0f2174.   return @void ;

   }
    procedure [|void|] [|java:text:NumberFormat.writeObject|] ([|java:text:NumberFormat|] v4 @type (this), [|java:io:ObjectOutputStream|] v5 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        [|java:io:ObjectOutputStream$PutField|] v0 @varname [|fields|] @scope ((L0006,L0070));


        v1;
        v2;
        v3;
      
#L0f2188.   v2:= 127  @length 16;
#L0f218c.   call temp:=  [|java:io:ObjectOutputStream.putFields|](v5) @signature [|Ljava/io/ObjectOutputStream;.putFields:()Ljava/io/ObjectOutputStream$PutField;|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f2192.   v0:= temp  @type object;
#L0f2194.   v1:= "groupingUsed" @type (object, string);
#L0f2198.   v3:= v4.[|java:text:NumberFormat.groupingUsed|]   @boolean;
#L0f219c.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f21a2.   v3:= "maxFractionDigits" @type (object, string);
#L0f21a6.   v1:= v4.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f21aa.   if v1 >= v2 then goto L0f225c;
#L0f21ae.   v1:= v4.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f21b2.   v1:= (byte)v1  @type i2b;
#L0f21b4.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v3, v1) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;B)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f21ba.   v1:= "maximumFractionDigits" @type (object, string);
#L0f21be.   v3:= v4.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f21c2.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f21c8.   v1:= "maximumIntegerDigits" @type (object, string);
#L0f21cc.   v3:= v4.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f21d0.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f21d6.   v3:= "maxIntegerDigits" @type (object, string);
#L0f21da.   v1:= v4.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f21de.   if v1 >= v2 then goto L0f2260;
#L0f21e2.   v1:= v4.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f21e6.   v1:= (byte)v1  @type i2b;
#L0f21e8.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v3, v1) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;B)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f21ee.   v3:= "minFractionDigits" @type (object, string);
#L0f21f2.   v1:= v4.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f21f6.   if v1 >= v2 then goto L0f2264;
#L0f21fa.   v1:= v4.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f21fe.   v1:= (byte)v1  @type i2b;
#L0f2200.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v3, v1) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;B)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f2206.   v1:= "minimumFractionDigits" @type (object, string);
#L0f220a.   v3:= v4.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f220e.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f2214.   v1:= "minimumIntegerDigits" @type (object, string);
#L0f2218.   v3:= v4.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f221c.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f2222.   v1:= "minIntegerDigits" @type (object, string);
#L0f2226.   v3:= v4.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f222a.   if v3 >= v2 then goto L0f2234;
#L0f222e.   v2:= v4.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f2232.   v2:= (byte)v2  @type i2b;
#L0f2234.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;B)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f223a.   v1:= "parseIntegerOnly" @type (object, string);
#L0f223e.   v2:= v4.[|java:text:NumberFormat.parseIntegerOnly|]   @boolean;
#L0f2242.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f2248.   v1:= "serialVersionOnStream" @type (object, string);
#L0f224c.   v2:= 1  @length 4;
#L0f224e.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f2254.   call temp:=  [|java:io:ObjectOutputStream.writeFields|](v5) @signature [|Ljava/io/ObjectOutputStream;.writeFields:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f225a.   return @void ;
#L0f225c.   v1:= v2;
#L0f225e.   goto L0f21b4;
#L0f2260.   v1:= v2;
#L0f2262.   goto L0f21e8;
#L0f2264.   v1:= v2;
#L0f2266.   goto L0f2200;

   }
    procedure [|java:lang:Object|] [|java:text:NumberFormat.clone|] ([|java:text:NumberFormat|] v1 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2278.   call temp:=  [|java:text:Format.clone|](v1) @signature [|Ljava/text/Format;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:Format|] @type super;
#L0f227e.   v0:= temp  @type object;
#L0f2280.   return v0  @type object;

   }
    procedure [|boolean|] [|java:text:NumberFormat.equals|] ([|java:text:NumberFormat|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:NumberFormat|] v0 @varname [|obj|] @scope ((L000e,L0034));


        v1;
        v2;
        v3;
        v4;
      
#L0f2294.   v1:= 1  @length 4;
#L0f2296.   v2:= 0  @length 4;
#L0f2298.   if v6 != v5 then goto L0f229e;
#L0f229c.   return v1;
#L0f229e.   v3:= instanceof @varname v6 @type [|java:text:NumberFormat|];
#L0f22a2.   if v3 != 0 then goto L0f22aa;
#L0f22a6.   v1:= v2;
#L0f22a8.   goto L0f229c;
#L0f22aa.   v0:= v6  @type object;
#L0f22ac.   v0:= ([|java:text:NumberFormat|])v0;
#L0f22b0.   v3:= v5.[|java:text:NumberFormat.groupingUsed|]   @boolean;
#L0f22b4.   v4:= v0.[|java:text:NumberFormat.groupingUsed|]   @boolean;
#L0f22b8.   if v3 != v4 then goto L0f22f8;
#L0f22bc.   v3:= v5.[|java:text:NumberFormat.parseIntegerOnly|]   @boolean;
#L0f22c0.   v4:= v0.[|java:text:NumberFormat.parseIntegerOnly|]   @boolean;
#L0f22c4.   if v3 != v4 then goto L0f22f8;
#L0f22c8.   v3:= v5.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f22cc.   v4:= v0.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f22d0.   if v3 != v4 then goto L0f22f8;
#L0f22d4.   v3:= v5.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f22d8.   v4:= v0.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f22dc.   if v3 != v4 then goto L0f22f8;
#L0f22e0.   v3:= v5.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f22e4.   v4:= v0.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f22e8.   if v3 != v4 then goto L0f22f8;
#L0f22ec.   v3:= v5.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f22f0.   v4:= v0.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f22f4.   if v3 == v4 then goto L0f229c;
#L0f22f8.   v1:= v2;
#L0f22fa.   goto L0f229c;

   }
    procedure [|java:lang:String|] [|java:text:NumberFormat.format|] ([|java:text:NumberFormat|] v3 @type (this), [|double|] v4) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.format:(D)Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
        v2;
      
#L0f230c.   v0:= new [|java:lang:StringBuffer|];
#L0f2310.   call temp:=  [|java:lang:StringBuffer.<init>|](v0) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f2316.   v1:= new [|java:text:FieldPosition|];
#L0f231a.   v2:= 0  @length 4;
#L0f231c.   call temp:=  [|java:text:FieldPosition.<init>|](v1, v2) @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f2322.   call temp:=  [|java:text:NumberFormat.format|](v3, v4, v5, v0, v1) @signature [|Ljava/text/NumberFormat;.format:(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f2328.   v0:= temp  @type object;
#L0f232a.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f2330.   v0:= temp  @type object;
#L0f2332.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:NumberFormat.format|] ([|java:text:NumberFormat|] v3 @type (this), [|long|] v4) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.format:(J)Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
        v2;
      
#L0f2344.   v0:= new [|java:lang:StringBuffer|];
#L0f2348.   call temp:=  [|java:lang:StringBuffer.<init>|](v0) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f234e.   v1:= new [|java:text:FieldPosition|];
#L0f2352.   v2:= 0  @length 4;
#L0f2354.   call temp:=  [|java:text:FieldPosition.<init>|](v1, v2) @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f235a.   call temp:=  [|java:text:NumberFormat.format|](v3, v4, v5, v0, v1) @signature [|Ljava/text/NumberFormat;.format:(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f2360.   v0:= temp  @type object;
#L0f2362.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f2368.   v0:= temp  @type object;
#L0f236a.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:NumberFormat.format|] ([|double|] v0, [|java:lang:StringBuffer|] v2 @type (object), [|java:text:FieldPosition|] v3 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.format:(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:StringBuffer|] [|java:text:NumberFormat.format|] ([|long|] v0, [|java:lang:StringBuffer|] v2 @type (object), [|java:text:FieldPosition|] v3 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.format:(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:StringBuffer|] [|java:text:NumberFormat.format|] ([|java:text:NumberFormat|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:StringBuffer|] v8 @type (object), [|java:text:FieldPosition|] v9 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;

        [|long|] v2 @varname [|lv|] @scope ((L0025,L0029));

        [|double|] v0 @varname [|dv|] @scope ((L0034,L0039));




        v1;
        v3;
        v4;
        v5;
      
#L0f237c.   v4:= instanceof @varname v7 @type [|java:lang:Byte|];
#L0f2380.   if v4 != 0 then goto L0f23ba;
#L0f2384.   v4:= instanceof @varname v7 @type [|java:lang:Short|];
#L0f2388.   if v4 != 0 then goto L0f23ba;
#L0f238c.   v4:= instanceof @varname v7 @type [|java:lang:Integer|];
#L0f2390.   if v4 != 0 then goto L0f23ba;
#L0f2394.   v4:= instanceof @varname v7 @type [|java:lang:Long|];
#L0f2398.   if v4 != 0 then goto L0f23ba;
#L0f239c.   v4:= instanceof @varname v7 @type [|java:math:BigInteger|];
#L0f23a0.   if v4 == 0 then goto L0f23d0;
#L0f23a4.   v4:= v7  @type object;
#L0f23a6.   v4:= ([|java:math:BigInteger|])v4;
#L0f23aa.   call temp:=  [|java:math:BigInteger.bitLength|](v4) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0f23b0.   v4:= temp;
#L0f23b2.   v5:= 64  @length 16;
#L0f23b6.   if v4 >= v5 then goto L0f23d0;
#L0f23ba.   v7:= ([|java:lang:Number|])v7;
#L0f23be.   call temp:=  [|java:lang:Number.longValue|](v7) @signature [|Ljava/lang/Number;.longValue:()J|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f23c4.   v2:= temp  @type wide;
#L0f23c6.   call temp:=  [|java:text:NumberFormat.format|](v6, v2, v3, v8, v9) @signature [|Ljava/text/NumberFormat;.format:(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f23cc.   v4:= temp  @type object;
#L0f23ce.   return v4  @type object;
#L0f23d0.   v4:= instanceof @varname v7 @type [|java:lang:Number|];
#L0f23d4.   if v4 == 0 then goto L0f23ee;
#L0f23d8.   v7:= ([|java:lang:Number|])v7;
#L0f23dc.   call temp:=  [|java:lang:Number.doubleValue|](v7) @signature [|Ljava/lang/Number;.doubleValue:()D|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f23e2.   v0:= temp  @type wide;
#L0f23e4.   call temp:=  [|java:text:NumberFormat.format|](v6, v0, v1, v8, v9) @signature [|Ljava/text/NumberFormat;.format:(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f23ea.   v4:= temp  @type object;
#L0f23ec.   goto L0f23ce;
#L0f23ee.   v4:= new [|java:lang:IllegalArgumentException|];
#L0f23f2.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f23f8.   throw v4;

   }
    procedure [|java:util:Currency|] [|java:text:NumberFormat.getCurrency|] ([|java:text:NumberFormat|] v1 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getCurrency:()Ljava/util/Currency;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f240c.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0f2410.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0f2416.   throw v0;

   }
    procedure [|int|] [|java:text:NumberFormat.getMaximumFractionDigits|] ([|java:text:NumberFormat|] v1 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getMaximumFractionDigits:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2428.   v0:= v1.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f242c.   return v0;

   }
    procedure [|int|] [|java:text:NumberFormat.getMaximumIntegerDigits|] ([|java:text:NumberFormat|] v1 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getMaximumIntegerDigits:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2440.   v0:= v1.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f2444.   return v0;

   }
    procedure [|int|] [|java:text:NumberFormat.getMinimumFractionDigits|] ([|java:text:NumberFormat|] v1 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getMinimumFractionDigits:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2458.   v0:= v1.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f245c.   return v0;

   }
    procedure [|int|] [|java:text:NumberFormat.getMinimumIntegerDigits|] ([|java:text:NumberFormat|] v1 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getMinimumIntegerDigits:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2470.   v0:= v1.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f2474.   return v0;

   }
    procedure [|java:math:RoundingMode|] [|java:text:NumberFormat.getRoundingMode|] ([|java:text:NumberFormat|] v1 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.getRoundingMode:()Ljava/math/RoundingMode;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2488.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0f248c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0f2492.   throw v0;

   }
    procedure [|int|] [|java:text:NumberFormat.hashCode|] ([|java:text:NumberFormat|] v4 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L0f24a4.   v2:= 1237  @length 16;
#L0f24a8.   v1:= 1231  @length 16;
#L0f24ac.   v0:= v4.[|java:text:NumberFormat.groupingUsed|]   @boolean;
#L0f24b0.   if v0 == 0 then goto L0f24da;
#L0f24b4.   v0:= v1;
#L0f24b6.   v3:= v4.[|java:text:NumberFormat.parseIntegerOnly|]   @boolean;
#L0f24ba.   if v3 == 0 then goto L0f24de;
#L0f24be.   v0:= v0 + v1  @type int;
#L0f24c0.   v1:= v4.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f24c4.   v0:= v0 + v1  @type int;
#L0f24c6.   v1:= v4.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f24ca.   v0:= v0 + v1  @type int;
#L0f24cc.   v1:= v4.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f24d0.   v0:= v0 + v1  @type int;
#L0f24d2.   v1:= v4.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f24d6.   v0:= v0 + v1  @type int;
#L0f24d8.   return v0;
#L0f24da.   v0:= v2;
#L0f24dc.   goto L0f24b6;
#L0f24de.   v1:= v2;
#L0f24e0.   goto L0f24be;

   }
    procedure [|boolean|] [|java:text:NumberFormat.isGroupingUsed|] ([|java:text:NumberFormat|] v1 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.isGroupingUsed:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f24f4.   v0:= v1.[|java:text:NumberFormat.groupingUsed|]   @boolean;
#L0f24f8.   return v0;

   }
    procedure [|boolean|] [|java:text:NumberFormat.isParseIntegerOnly|] ([|java:text:NumberFormat|] v1 @type (this)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.isParseIntegerOnly:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f250c.   v0:= v1.[|java:text:NumberFormat.parseIntegerOnly|]   @boolean;
#L0f2510.   return v0;

   }
    procedure [|java:lang:Number|] [|java:text:NumberFormat.parse|] ([|java:text:NumberFormat|] v5 @type (this), [|java:lang:String|] v6 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.parse:(Ljava/lang/String;)Ljava/lang/Number;|] @Access PUBLIC {
      local temp ;
        [|java:lang:Number|] v0 @varname [|number|] @scope ((L000a,L0034));
        [|java:text:ParsePosition|] v1 @varname [|pos|] @scope ((L0006,L0034));


        v2;
        v3;
        v4;
      
#L0f2524.   v1:= new [|java:text:ParsePosition|];
#L0f2528.   v2:= 0  @length 4;
#L0f252a.   call temp:=  [|java:text:ParsePosition.<init>|](v1, v2) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f2530.   call temp:=  [|java:text:NumberFormat.parse|](v5, v6, v1) @signature [|Ljava/text/NumberFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f2536.   v0:= temp  @type object;
#L0f2538.   call temp:=  [|java:text:ParsePosition.getIndex|](v1) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f253e.   v2:= temp;
#L0f2540.   if v2 != 0 then goto L0f258a;
#L0f2544.   v2:= new [|java:text:ParseException|];
#L0f2548.   v3:= new [|java:lang:StringBuilder|];
#L0f254c.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f2552.   v4:= "Unparseable number: \"" @type (object, string);
#L0f2556.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f255c.   v3:= temp  @type object;
#L0f255e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2564.   v3:= temp  @type object;
#L0f2566.   v4:= "\"" @type (object, string);
#L0f256a.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2570.   v3:= temp  @type object;
#L0f2572.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2578.   v3:= temp  @type object;
#L0f257a.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v1) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f2580.   v4:= temp;
#L0f2582.   call temp:=  [|java:text:ParseException.<init>|](v2, v3, v4) @signature [|Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:ParseException|] @type direct;
#L0f2588.   throw v2;
#L0f258a.   return v0  @type object;

   }
    procedure [|java:lang:Number|] [|java:text:NumberFormat.parse|] ([|java:lang:String|] v0 @type (object), [|java:text:ParsePosition|] v1 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:text:NumberFormat.parseObject|] ([|java:text:NumberFormat|] v3 @type (this), [|java:lang:String|] v4 @type (object), [|java:text:ParsePosition|] v5 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.parseObject:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0010,L0012));



        v1;
        v2;
      
#L0f259c.   if v5 != 0 then goto L0f25b0;
#L0f25a0.   v1:= new [|java:lang:NullPointerException|];
#L0f25a4.   v2:= "position == null" @type (object, string);
#L0f25a8.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f25ae.   throw v1;
#L0f25b0.   call temp:=  [|java:text:NumberFormat.parse|](v3, v4, v5) @signature [|Ljava/text/NumberFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f25b6.   v1:= temp  @type object;
#L0f25b8.   return v1  @type object;
#L0f25ba.   v0:= Exception  @type object;
#L0f25bc.   v1:= 0  @length 4;
#L0f25be.   goto L0f25b8;
  catch  [|java:lang:Exception|] @[L0f25b0..L0f25b6] goto L0f25ba;

   }
    procedure [|void|] [|java:text:NumberFormat.setCurrency|] ([|java:text:NumberFormat|] v1 @type (this), [|java:util:Currency|] v2 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.setCurrency:(Ljava/util/Currency;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f25e0.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0f25e4.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0f25ea.   throw v0;

   }
    procedure [|void|] [|java:text:NumberFormat.setGroupingUsed|] ([|java:text:NumberFormat|] v0 @type (this), [|boolean|] v1) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.setGroupingUsed:(Z)V|] @Access PUBLIC {
      local temp ;


      
#L0f25fc.   v0.[|java:text:NumberFormat.groupingUsed|]  := v1 @boolean;
#L0f2600.   return @void ;

   }
    procedure [|void|] [|java:text:NumberFormat.setMaximumFractionDigits|] ([|java:text:NumberFormat|] v2 @type (this), [|int|] v3) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.setMaximumFractionDigits:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f2614.   if v3 >= 0 then goto L0f261a;
#L0f2618.   v3:= 0  @length 4;
#L0f261a.   v2.[|java:text:NumberFormat.maximumFractionDigits|]  := v3;
#L0f261e.   v0:= v2.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f2622.   v1:= v2.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f2626.   if v0 >= v1 then goto L0f2632;
#L0f262a.   v0:= v2.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f262e.   v2.[|java:text:NumberFormat.minimumFractionDigits|]  := v0;
#L0f2632.   return @void ;

   }
    procedure [|void|] [|java:text:NumberFormat.setMaximumIntegerDigits|] ([|java:text:NumberFormat|] v2 @type (this), [|int|] v3) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.setMaximumIntegerDigits:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f2644.   if v3 >= 0 then goto L0f264a;
#L0f2648.   v3:= 0  @length 4;
#L0f264a.   v2.[|java:text:NumberFormat.maximumIntegerDigits|]  := v3;
#L0f264e.   v0:= v2.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f2652.   v1:= v2.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f2656.   if v0 >= v1 then goto L0f2662;
#L0f265a.   v0:= v2.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f265e.   v2.[|java:text:NumberFormat.minimumIntegerDigits|]  := v0;
#L0f2662.   return @void ;

   }
    procedure [|void|] [|java:text:NumberFormat.setMinimumFractionDigits|] ([|java:text:NumberFormat|] v2 @type (this), [|int|] v3) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.setMinimumFractionDigits:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f2674.   if v3 >= 0 then goto L0f267a;
#L0f2678.   v3:= 0  @length 4;
#L0f267a.   v2.[|java:text:NumberFormat.minimumFractionDigits|]  := v3;
#L0f267e.   v0:= v2.[|java:text:NumberFormat.maximumFractionDigits|] ;
#L0f2682.   v1:= v2.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f2686.   if v0 >= v1 then goto L0f2692;
#L0f268a.   v0:= v2.[|java:text:NumberFormat.minimumFractionDigits|] ;
#L0f268e.   v2.[|java:text:NumberFormat.maximumFractionDigits|]  := v0;
#L0f2692.   return @void ;

   }
    procedure [|void|] [|java:text:NumberFormat.setMinimumIntegerDigits|] ([|java:text:NumberFormat|] v2 @type (this), [|int|] v3) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.setMinimumIntegerDigits:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f26a4.   if v3 >= 0 then goto L0f26aa;
#L0f26a8.   v3:= 0  @length 4;
#L0f26aa.   v2.[|java:text:NumberFormat.minimumIntegerDigits|]  := v3;
#L0f26ae.   v0:= v2.[|java:text:NumberFormat.maximumIntegerDigits|] ;
#L0f26b2.   v1:= v2.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f26b6.   if v0 >= v1 then goto L0f26c2;
#L0f26ba.   v0:= v2.[|java:text:NumberFormat.minimumIntegerDigits|] ;
#L0f26be.   v2.[|java:text:NumberFormat.maximumIntegerDigits|]  := v0;
#L0f26c2.   return @void ;

   }
    procedure [|void|] [|java:text:NumberFormat.setParseIntegerOnly|] ([|java:text:NumberFormat|] v0 @type (this), [|boolean|] v1) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.setParseIntegerOnly:(Z)V|] @Access PUBLIC {
      local temp ;


      
#L0f26d4.   v0.[|java:text:NumberFormat.parseIntegerOnly|]  := v1 @boolean;
#L0f26d8.   return @void ;

   }
    procedure [|void|] [|java:text:NumberFormat.setRoundingMode|] ([|java:text:NumberFormat|] v1 @type (this), [|java:math:RoundingMode|] v2 @type (object)) @owner [|java:text:NumberFormat|] @signature [|Ljava/text/NumberFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f26ec.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0f26f0.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0f26f6.   throw v0;

   }
record [|java:text:ChoiceFormat|]  @type class @AccessFlag PUBLIC  extends [|java:text:NumberFormat|] {
      [|java:lang:String|][] [|java:text:ChoiceFormat.choiceFormats|]    @AccessFlag PRIVATE;
      [|double|][] [|java:text:ChoiceFormat.choiceLimits|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|java:text:ChoiceFormat.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:ChoiceFormat.<init>|] ([|java:text:ChoiceFormat|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0f2708.   call temp:=  [|java:text:NumberFormat.<init>|](v0) @signature [|Ljava/text/NumberFormat;.<init>:()V|] @classDescriptor [|java:text:NumberFormat|] @type direct;
#L0f270e.   call temp:=  [|java:text:ChoiceFormat.applyPattern|](v0, v1) @signature [|Ljava/text/ChoiceFormat;.applyPattern:(Ljava/lang/String;)V|] @classDescriptor [|java:text:ChoiceFormat|] @type virtual;
#L0f2714.   return @void ;

   }
    procedure [|void|] [|java:text:ChoiceFormat.<init>|] ([|java:text:ChoiceFormat|] v0 @type (this), [|double|][] v1, [|java:lang:String|][] v3 @type (object)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.<init>:([D[Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        [|java:lang:String|][] v2 @varname [|formats|] @scope ((L0000,L0007));
      
#L0f2728.   call temp:=  [|java:text:NumberFormat.<init>|](v0) @signature [|Ljava/text/NumberFormat;.<init>:()V|] @classDescriptor [|java:text:NumberFormat|] @type direct;
#L0f272e.   call temp:=  [|java:text:ChoiceFormat.setChoices|](v0, v1, v2) @signature [|Ljava/text/ChoiceFormat;.setChoices:([D[Ljava/lang/String;)V|] @classDescriptor [|java:text:ChoiceFormat|] @type virtual;
#L0f2734.   return @void ;

   }
    procedure [|double|] [|java:text:ChoiceFormat.nextDouble|] ([|double|] v8) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.nextDouble:(D)D|] @Access PUBLIC_STATIC_FINAL {
      local temp ;

        [|long|] v0 @varname [|bits|] @scope ((L0011,L001c), (L0020,L0024));

        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0f2748.   v6:= 1  @length wide16;
#L0f274c.   v4:= 0  @length wide16;
#L0f2750.   v2:= 9218868437227405312L  @length wide_high16;
#L0f2754.   v2:= cmpl(v8,v2);
#L0f2758.   if v2 != 0 then goto L0f275e;
#L0f275c.   return v8  @type wide;
#L0f275e.   v2:= cmpl(v8,v4);
#L0f2762.   if v2 != 0 then goto L0f2780;
#L0f2766.   v0:= 0  @length wide16;
#L0f276a.   v2:= cmpg(v8,v4);
#L0f276e.   if v2 >= 0 then goto L0f278a;
#L0f2772.   v2:= v0 - v6  @type long;
#L0f2776.   call temp:=  [|java:lang:Double.longBitsToDouble|](v2, v3) @signature [|Ljava/lang/Double;.longBitsToDouble:(J)D|] @classDescriptor [|java:lang:Double|] @type static;
#L0f277c.   v8:= temp  @type wide;
#L0f277e.   goto L0f275c;
#L0f2780.   call temp:=  [|java:lang:Double.doubleToLongBits|](v8, v9) @signature [|Ljava/lang/Double;.doubleToLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L0f2786.   v0:= temp  @type wide;
#L0f2788.   goto L0f276a;
#L0f278a.   v2:= v0 + v6  @type long;
#L0f278e.   goto L0f2776;

   }
    procedure [|double|] [|java:text:ChoiceFormat.nextDouble|] ([|double|] v2, [|boolean|] v4) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.nextDouble:(DZ)D|] @Access PUBLIC_STATIC {
      local temp ;


        v0;
        v1;
      
#L0f27a0.   if v4 == 0 then goto L0f27ae;
#L0f27a4.   call temp:=  [|java:text:ChoiceFormat.nextDouble|](v2, v3) @signature [|Ljava/text/ChoiceFormat;.nextDouble:(D)D|] @classDescriptor [|java:text:ChoiceFormat|] @type static;
#L0f27aa.   v0:= temp  @type wide;
#L0f27ac.   return v0  @type wide;
#L0f27ae.   call temp:=  [|java:text:ChoiceFormat.previousDouble|](v2, v3) @signature [|Ljava/text/ChoiceFormat;.previousDouble:(D)D|] @classDescriptor [|java:text:ChoiceFormat|] @type static;
#L0f27b4.   v0:= temp  @type wide;
#L0f27b6.   goto L0f27ac;

   }
    procedure [|double|] [|java:text:ChoiceFormat.previousDouble|] ([|double|] v8) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.previousDouble:(D)D|] @Access PUBLIC_STATIC_FINAL {
      local temp ;

        [|long|] v0 @varname [|bits|] @scope ((L0011,L001c), (L0020,L0024));

        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0f27c8.   v6:= 1  @length wide16;
#L0f27cc.   v4:= 0  @length wide16;
#L0f27d0.   v2:= -4503599627370496L  @length wide_high16;
#L0f27d4.   v2:= cmpl(v8,v2);
#L0f27d8.   if v2 != 0 then goto L0f27de;
#L0f27dc.   return v8  @type wide;
#L0f27de.   v2:= cmpl(v8,v4);
#L0f27e2.   if v2 != 0 then goto L0f2800;
#L0f27e6.   v0:= -9223372036854775808L  @length wide_high16;
#L0f27ea.   v2:= cmpg(v8,v4);
#L0f27ee.   if v2 > 0 then goto L0f280a;
#L0f27f2.   v2:= v0 + v6  @type long;
#L0f27f6.   call temp:=  [|java:lang:Double.longBitsToDouble|](v2, v3) @signature [|Ljava/lang/Double;.longBitsToDouble:(J)D|] @classDescriptor [|java:lang:Double|] @type static;
#L0f27fc.   v8:= temp  @type wide;
#L0f27fe.   goto L0f27dc;
#L0f2800.   call temp:=  [|java:lang:Double.doubleToLongBits|](v8, v9) @signature [|Ljava/lang/Double;.doubleToLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L0f2806.   v0:= temp  @type wide;
#L0f2808.   goto L0f27ea;
#L0f280a.   v2:= v0 - v6  @type long;
#L0f280e.   goto L0f27f6;

   }
    procedure [|int|] [|java:text:ChoiceFormat.skipWhitespace|] ([|java:text:ChoiceFormat|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.skipWhitespace:(Ljava/lang/String;I)I|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|length|] @scope ((L0004,L0014));



        v1;
      
#L0f2820.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f2826.   v0:= temp;
#L0f2828.   if v4 >= v0 then goto L0f2846;
#L0f282c.   call temp:=  [|java:lang:String.charAt|](v3, v4) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f2832.   v1:= temp;
#L0f2834.   call temp:=  [|java:lang:Character.isWhitespace|](v1) @signature [|Ljava/lang/Character;.isWhitespace:(C)Z|] @classDescriptor [|java:lang:Character|] @type static;
#L0f283a.   v1:= temp;
#L0f283c.   if v1 == 0 then goto L0f2846;
#L0f2840.   v4:= v4 + 1;
#L0f2844.   goto L0f2828;
#L0f2846.   return v4;

   }
    procedure [|void|] [|java:text:ChoiceFormat.applyPattern|] ([|java:text:ChoiceFormat|] v22 @type (this), [|java:lang:String|] v23 @type (object)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.applyPattern:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        [|int|] v7 @varname [|i|] @scope ((L004d,L0066));
        [|java:lang:Number|] v18 @varname [|value|] @scope ((L0091,L00bd), (L00be,L013e));
        [|int|] v8 @varname [|index|] @scope ((L0011,L00c0), (L00c0,L0120), (L0120,L013e));
        [|double|][] v14 @varname [|newLimits|] @scope ((L00d3,L00df));
        [|double|] v15 @varname [|next|] @scope ((L00ec,L00fc), (L0104,L013e));
        [|int|] v11 @varname [|limitCount|] @scope ((L0010,L0122), (L0122,L012e), (L012e,L013e));
        [|java:lang:StringBuffer|] v3 @varname [|buffer|] @scope ((L0016,L013e));
        [|char|] v4 @varname [|ch|] @scope ((L00c6,L013e));
        [|java:text:NumberFormat|] v5 @varname [|format|] @scope ((L001c,L013e));
        [|java:util:List|] v6 @varname [|formats|] @scope ((L000b,L013e));
        [|int|] v10 @varname [|length|] @scope ((L000f,L013e));
        [|double|][] v13 @varname [|limits|] @scope ((L0006,L013e));
        [|java:text:ParsePosition|] v17 @varname [|position|] @scope ((L0027,L013e));


        v0;
        v1;
        v2;
        v9;
        v12;
        v16;
        v19;
        v20;
        v21;
      
#L0f2858.   v19:= 5  @length 16;
#L0f285c.   v0:= v19;
#L0f2860.   v13:= new [|double|][v0];
#L0f2864.   v6:= new [|java:util:ArrayList|];
#L0f2868.   call temp:=  [|java:util:ArrayList.<init>|](v6) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0f286e.   call temp:=  [|java:lang:String.length|](v23) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f2874.   v10:= temp;
#L0f2876.   v11:= 0  @length 4;
#L0f2878.   v8:= 0  @length 4;
#L0f287a.   v3:= new [|java:lang:StringBuffer|];
#L0f287e.   call temp:=  [|java:lang:StringBuffer.<init>|](v3) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f2884.   v19:= @@[|java:util:Locale.US|]   @type object;
#L0f2888.   call temp:=  [|java:text:NumberFormat.getInstance|](v19) @signature [|Ljava/text/NumberFormat;.getInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f288e.   v5:= temp  @type object;
#L0f2890.   v17:= new [|java:text:ParsePosition|];
#L0f2894.   v19:= 0  @length 16;
#L0f2898.   v0:= v17  @type object;
#L0f289c.   v1:= v19;
#L0f28a0.   call temp:=  [|java:text:ParsePosition.<init>|](v0, v1) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f28a6.   v0:= v22  @type object;
#L0f28aa.   v1:= v23  @type object;
#L0f28ae.   call temp:=  [|java:text:ChoiceFormat.skipWhitespace|](v0, v1, v8) @signature [|Ljava/text/ChoiceFormat;.skipWhitespace:(Ljava/lang/String;I)I|] @classDescriptor [|java:text:ChoiceFormat|] @type direct;
#L0f28b4.   v8:= temp;
#L0f28b6.   if v8 < v10 then goto L0f2960;
#L0f28ba.   v0:= v13.length;
#L0f28bc.   v19:= v0;
#L0f28c0.   v0:= v19;
#L0f28c4.   if v11 != v0 then goto L0f2924;
#L0f28c8.   v0:= v22  @type object;
#L0f28cc.   v0.[|java:text:ChoiceFormat.choiceLimits|]  := v13 @type object;
#L0f28d0.   call temp:=  [|java:util:List.size|](v6) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0f28d6.   v19:= temp;
#L0f28d8.   v0:= v19;
#L0f28dc.   v0:= new [|java:lang:String|][v0];
#L0f28e0.   v19:= v0  @type object;
#L0f28e4.   v0:= v19  @type object;
#L0f28e8.   v1:= v22  @type object;
#L0f28ec.   v1.[|java:text:ChoiceFormat.choiceFormats|]  := v0 @type object;
#L0f28f0.   v7:= 0  @length 4;
#L0f28f2.   call temp:=  [|java:util:List.size|](v6) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0f28f8.   v19:= temp;
#L0f28fa.   v0:= v19;
#L0f28fe.   if v7 >= v0 then goto L0f29d2;
#L0f2902.   v0:= v22  @type object;
#L0f2906.   v0:= v0.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f290a.   v20:= v0  @type object;
#L0f290e.   call temp:=  [|java:util:List.get|](v6, v7) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L0f2914.   v19:= temp  @type object;
#L0f2916.   v19:= ([|java:lang:String|])v19;
#L0f291a.   v20[v7]:= v19  @type object;
#L0f291e.   v7:= v7 + 1;
#L0f2922.   goto L0f28f2;
#L0f2924.   v0:= new [|double|][v11];
#L0f2928.   v19:= v0  @type object;
#L0f292c.   v0:= v19  @type object;
#L0f2930.   v1:= v22  @type object;
#L0f2934.   v1.[|java:text:ChoiceFormat.choiceLimits|]  := v0 @type object;
#L0f2938.   v19:= 0  @length 16;
#L0f293c.   v0:= v22  @type object;
#L0f2940.   v0:= v0.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2944.   v20:= v0  @type object;
#L0f2948.   v21:= 0  @length 16;
#L0f294c.   v0:= v19;
#L0f2950.   v1:= v20  @type object;
#L0f2954.   v2:= v21;
#L0f2958.   call temp:=  [|java:lang:System.arraycopy|](v13, v0, v1, v2, v11) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0f295e.   goto L0f28d0;
#L0f2960.   v0:= v17  @type object;
#L0f2964.   call temp:=  [|java:text:ParsePosition.setIndex|](v0, v8) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f296a.   v0:= v23  @type object;
#L0f296e.   v1:= v17  @type object;
#L0f2972.   call temp:=  [|java:text:NumberFormat.parse|](v5, v0, v1) @signature [|Ljava/text/NumberFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f2978.   v18:= temp  @type object;
#L0f297a.   call temp:=  [|java:text:ParsePosition.getIndex|](v17) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f2980.   v19:= temp;
#L0f2982.   v0:= v22  @type object;
#L0f2986.   v1:= v23  @type object;
#L0f298a.   v2:= v19;
#L0f298e.   call temp:=  [|java:text:ChoiceFormat.skipWhitespace|](v0, v1, v2) @signature [|Ljava/text/ChoiceFormat;.skipWhitespace:(Ljava/lang/String;I)I|] @classDescriptor [|java:text:ChoiceFormat|] @type direct;
#L0f2994.   v8:= temp;
#L0f2996.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v17) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f299c.   v19:= temp;
#L0f299e.   v20:= -1  @length 16;
#L0f29a2.   v0:= v19;
#L0f29a6.   v1:= v20;
#L0f29aa.   if v0 != v1 then goto L0f29b2;
#L0f29ae.   if v8 < v10 then goto L0f29d4;
#L0f29b2.   v19:= @@[|libcore:util:EmptyArray.DOUBLE|]   @type object;
#L0f29b6.   v0:= v19  @type object;
#L0f29ba.   v1:= v22  @type object;
#L0f29be.   v1.[|java:text:ChoiceFormat.choiceLimits|]  := v0 @type object;
#L0f29c2.   v19:= @@[|libcore:util:EmptyArray.STRING|]   @type object;
#L0f29c6.   v0:= v19  @type object;
#L0f29ca.   v1:= v22  @type object;
#L0f29ce.   v1.[|java:text:ChoiceFormat.choiceFormats|]  := v0 @type object;
#L0f29d2.   return @void ;
#L0f29d4.   v9:= v8 + 1;
#L0f29d8.   v0:= v23  @type object;
#L0f29dc.   call temp:=  [|java:lang:String.charAt|](v0, v8) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f29e2.   v4:= temp;
#L0f29e4.   v0:= v13.length;
#L0f29e6.   v19:= v0;
#L0f29ea.   v0:= v19;
#L0f29ee.   if v11 != v0 then goto L0f2a16;
#L0f29f2.   v19:= v11 * 2;
#L0f29f6.   v0:= v19;
#L0f29fa.   v14:= new [|double|][v0];
#L0f29fe.   v19:= 0  @length 16;
#L0f2a02.   v20:= 0  @length 16;
#L0f2a06.   v0:= v19;
#L0f2a0a.   v1:= v20;
#L0f2a0e.   call temp:=  [|java:lang:System.arraycopy|](v13, v0, v14, v1, v11) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0f2a14.   v13:= v14  @type object;
#L0f2a16.   goto L0f2ab8;
#L0f2a1c.   v19:= new [|java:lang:IllegalArgumentException|];
#L0f2a20.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v19) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f2a26.   throw v19;
#L0f2a28.   call temp:=  [|java:lang:Number.doubleValue|](v18) @signature [|Ljava/lang/Number;.doubleValue:()D|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f2a2e.   v15:= temp  @type wide;
#L0f2a30.   if v11 <= 0 then goto L0f2a62;
#L0f2a34.   v19:= v11 + -1;
#L0f2a38.   v19:= v13[v19]  @wide;
#L0f2a3c.   v19:= cmpg(v15,v19);
#L0f2a40.   if v19 > 0 then goto L0f2a62;
#L0f2a44.   v19:= new [|java:lang:IllegalArgumentException|];
#L0f2a48.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v19) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f2a4e.   throw v19;
#L0f2a50.   call temp:=  [|java:lang:Number.doubleValue|](v18) @signature [|Ljava/lang/Number;.doubleValue:()D|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f2a56.   v19:= temp  @type wide;
#L0f2a58.   call temp:=  [|java:text:ChoiceFormat.nextDouble|](v19, v20) @signature [|Ljava/text/ChoiceFormat;.nextDouble:(D)D|] @classDescriptor [|java:text:ChoiceFormat|] @type static;
#L0f2a5e.   v15:= temp  @type wide;
#L0f2a60.   goto L0f2a30;
#L0f2a62.   v19:= 0  @length 16;
#L0f2a66.   v0:= v19;
#L0f2a6a.   call temp:=  [|java:lang:StringBuffer.setLength|](v3, v0) @signature [|Ljava/lang/StringBuffer;.setLength:(I)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f2a70.   v0:= v17  @type object;
#L0f2a74.   call temp:=  [|java:text:ParsePosition.setIndex|](v0, v9) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f2a7a.   v19:= 124  @length 16;
#L0f2a7e.   v0:= v23  @type object;
#L0f2a82.   v1:= v17  @type object;
#L0f2a86.   v2:= v19;
#L0f2a8a.   call temp:=  [|java:text:ChoiceFormat.upTo|](v0, v1, v3, v2) @signature [|Ljava/text/ChoiceFormat;.upTo:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuffer;C)Z|] @classDescriptor [|java:text:ChoiceFormat|] @type static;
#L0f2a90.   call temp:=  [|java:text:ParsePosition.getIndex|](v17) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f2a96.   v8:= temp;
#L0f2a98.   v12:= v11 + 1;
#L0f2a9c.   v13[v11]:= v15  @wide;
#L0f2aa0.   call temp:=  [|java:lang:StringBuffer.toString|](v3) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f2aa6.   v19:= temp  @type object;
#L0f2aa8.   v0:= v19  @type object;
#L0f2aac.   call temp:=  [|java:util:List.add|](v6, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0f2ab2.   v11:= v12;
#L0f2ab4.   goto L0f28a6;
#L0f2ab8.   switch v4
                 | 35 => goto L0f2a28
                 | 60 => goto L0f2a50
                 | 8804 => goto L0f2a28
                 | => goto L0f2a1c;

   }
    procedure [|java:lang:Object|] [|java:text:ChoiceFormat.clone|] ([|java:text:ChoiceFormat|] v2 @type (this)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:ChoiceFormat|] v0 @varname [|clone|] @scope ((L0006,L001b));

        v1;
      
#L0f2ae4.   call temp:=  [|java:text:NumberFormat.clone|](v2) @signature [|Ljava/text/NumberFormat;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f2aea.   v0:= temp  @type object;
#L0f2aec.   v0:= ([|java:text:ChoiceFormat|])v0;
#L0f2af0.   v1:= v2.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2af4.   call temp:=  [|double[].clone|](v1) @signature [|[D.clone:()Ljava/lang/Object;|] @classDescriptor [|double[]|] @type virtual;
#L0f2afa.   v1:= temp  @type object;
#L0f2afc.   v1:= ([|double|][])v1;
#L0f2b00.   v0.[|java:text:ChoiceFormat.choiceLimits|]  := v1 @type object;
#L0f2b04.   v1:= v2.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2b08.   call temp:=  [|java:lang:String[].clone|](v1) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f2b0e.   v1:= temp  @type object;
#L0f2b10.   v1:= ([|java:lang:String|][])v1;
#L0f2b14.   v0.[|java:text:ChoiceFormat.choiceFormats|]  := v1 @type object;
#L0f2b18.   return v0  @type object;

   }
    procedure [|boolean|] [|java:text:ChoiceFormat.equals|] ([|java:text:ChoiceFormat|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:ChoiceFormat|] v0 @varname [|choice|] @scope ((L000e,L0024));


        v1;
        v2;
        v3;
        v4;
      
#L0f2b2c.   v1:= 1  @length 4;
#L0f2b2e.   v2:= 0  @length 4;
#L0f2b30.   if v5 != v6 then goto L0f2b36;
#L0f2b34.   return v1;
#L0f2b36.   v3:= instanceof @varname v6 @type [|java:text:ChoiceFormat|];
#L0f2b3a.   if v3 != 0 then goto L0f2b42;
#L0f2b3e.   v1:= v2;
#L0f2b40.   goto L0f2b34;
#L0f2b42.   v0:= v6  @type object;
#L0f2b44.   v0:= ([|java:text:ChoiceFormat|])v0;
#L0f2b48.   v3:= v5.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2b4c.   v4:= v0.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2b50.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([D[D)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f2b56.   v3:= temp;
#L0f2b58.   if v3 == 0 then goto L0f2b70;
#L0f2b5c.   v3:= v5.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2b60.   v4:= v0.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2b64.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f2b6a.   v3:= temp;
#L0f2b6c.   if v3 != 0 then goto L0f2b34;
#L0f2b70.   v1:= v2;
#L0f2b72.   goto L0f2b34;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:ChoiceFormat.format|] ([|java:text:ChoiceFormat|] v3 @type (this), [|double|] v4, [|java:lang:StringBuffer|] v6 @type (object), [|java:text:FieldPosition|] v7 @type (object)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.format:(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|i|] @scope ((L0005,L002a));




        v1;
        v2;
      
#L0f2b84.   v1:= v3.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2b88.   v1:= v1.length;
#L0f2b8a.   v0:= v1 + -1;
#L0f2b8e.   if v0 < 0 then goto L0f2bba;
#L0f2b92.   v1:= v3.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2b96.   v1:= v1[v0]  @wide;
#L0f2b9a.   v1:= cmpg(v1,v4);
#L0f2b9e.   if v1 > 0 then goto L0f2bb4;
#L0f2ba2.   v1:= v3.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2ba6.   v1:= v1[v0]  @type object;
#L0f2baa.   call temp:=  [|java:lang:StringBuffer.append|](v6, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f2bb0.   v6:= temp  @type object;
#L0f2bb2.   return v6  @type object;
#L0f2bb4.   v0:= v0 + -1;
#L0f2bb8.   goto L0f2b8e;
#L0f2bba.   v1:= v3.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2bbe.   v1:= v1.length;
#L0f2bc0.   if v1 == 0 then goto L0f2bb2;
#L0f2bc4.   v1:= v3.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2bc8.   v2:= 0  @length 4;
#L0f2bca.   v1:= v1[v2]  @type object;
#L0f2bce.   call temp:=  [|java:lang:StringBuffer.append|](v6, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f2bd4.   v6:= temp  @type object;
#L0f2bd6.   goto L0f2bb2;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:ChoiceFormat.format|] ([|java:text:ChoiceFormat|] v2 @type (this), [|long|] v3, [|java:lang:StringBuffer|] v5 @type (object), [|java:text:FieldPosition|] v6 @type (object)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.format:(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
      
#L0f2be8.   v0:= (double)v3  @type l2d;
#L0f2bea.   call temp:=  [|java:text:ChoiceFormat.format|](v2, v0, v1, v5, v6) @signature [|Ljava/text/ChoiceFormat;.format:(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:ChoiceFormat|] @type virtual;
#L0f2bf0.   v0:= temp  @type object;
#L0f2bf2.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:text:ChoiceFormat.getFormats|] ([|java:text:ChoiceFormat|] v1 @type (this)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.getFormats:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2c04.   v0:= v1.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2c08.   return v0  @type object;

   }
    procedure [|double|][] [|java:text:ChoiceFormat.getLimits|] ([|java:text:ChoiceFormat|] v1 @type (this)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.getLimits:()[D|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2c1c.   v0:= v1.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2c20.   return v0  @type object;

   }
    procedure [|int|] [|java:text:ChoiceFormat.hashCode|] ([|java:text:ChoiceFormat|] v6 @type (this)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        [|long|] v2 @varname [|v|] @scope ((L000f,L0022));
        [|int|] v0 @varname [|hashCode|] @scope ((L0001,L0023));
        [|int|] v1 @varname [|i|] @scope ((L0002,L0023));

        v3;
        v4;
        v5;
      
#L0f2c34.   v0:= 0  @length 4;
#L0f2c36.   v1:= 0  @length 4;
#L0f2c38.   v4:= v6.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2c3c.   v4:= v4.length;
#L0f2c3e.   if v1 >= v4 then goto L0f2c78;
#L0f2c42.   v4:= v6.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2c46.   v4:= v4[v1]  @wide;
#L0f2c4a.   call temp:=  [|java:lang:Double.doubleToLongBits|](v4, v5) @signature [|Ljava/lang/Double;.doubleToLongBits:(D)J|] @classDescriptor [|java:lang:Double|] @type static;
#L0f2c50.   v2:= temp  @type wide;
#L0f2c52.   v4:= 32  @length 16;
#L0f2c56.   v4:= v2 ^>> v4  @type long;
#L0f2c5a.   v4:= v4 ^~ v2  @type long;
#L0f2c5c.   v4:= (int)v4  @type l2i;
#L0f2c5e.   v5:= v6.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2c62.   v5:= v5[v1]  @type object;
#L0f2c66.   call temp:=  [|java:lang:String.hashCode|](v5) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f2c6c.   v5:= temp;
#L0f2c6e.   v4:= v4 + v5  @type int;
#L0f2c70.   v0:= v0 + v4  @type int;
#L0f2c72.   v1:= v1 + 1;
#L0f2c76.   goto L0f2c38;
#L0f2c78.   return v0;

   }
    procedure [|java:lang:Number|] [|java:text:ChoiceFormat.parse|] ([|java:text:ChoiceFormat|] v5 @type (this), [|java:lang:String|] v6 @type (object), [|java:text:ParsePosition|] v7 @type (object)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0005,L0038));
        [|int|] v1 @varname [|offset|] @scope ((L0004,L0038));



        v2;
        v3;
        v4;
      
#L0f2c8c.   call temp:=  [|java:text:ParsePosition.getIndex|](v7) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f2c92.   v1:= temp;
#L0f2c94.   v0:= 0  @length 4;
#L0f2c96.   v2:= v5.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2c9a.   v2:= v2.length;
#L0f2c9c.   if v0 >= v2 then goto L0f2ce6;
#L0f2ca0.   v2:= v5.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2ca4.   v2:= v2[v0]  @type object;
#L0f2ca8.   call temp:=  [|java:lang:String.startsWith|](v6, v2, v1) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;I)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f2cae.   v2:= temp;
#L0f2cb0.   if v2 == 0 then goto L0f2ce0;
#L0f2cb4.   v2:= v5.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2cb8.   v2:= v2[v0]  @type object;
#L0f2cbc.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f2cc2.   v2:= temp;
#L0f2cc4.   v2:= v2 + v1  @type int;
#L0f2cc6.   call temp:=  [|java:text:ParsePosition.setIndex|](v7, v2) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f2ccc.   v2:= new [|java:lang:Double|];
#L0f2cd0.   v3:= v5.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2cd4.   v3:= v3[v0]  @wide;
#L0f2cd8.   call temp:=  [|java:lang:Double.<init>|](v2, v3, v4) @signature [|Ljava/lang/Double;.<init>:(D)V|] @classDescriptor [|java:lang:Double|] @type direct;
#L0f2cde.   return v2  @type object;
#L0f2ce0.   v0:= v0 + 1;
#L0f2ce4.   goto L0f2c96;
#L0f2ce6.   call temp:=  [|java:text:ParsePosition.setErrorIndex|](v7, v1) @signature [|Ljava/text/ParsePosition;.setErrorIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f2cec.   v2:= new [|java:lang:Double|];
#L0f2cf0.   v3:= 9221120237041090560L  @length wide_high16;
#L0f2cf4.   call temp:=  [|java:lang:Double.<init>|](v2, v3, v4) @signature [|Ljava/lang/Double;.<init>:(D)V|] @classDescriptor [|java:lang:Double|] @type direct;
#L0f2cfa.   goto L0f2cde;

   }
    procedure [|void|] [|java:text:ChoiceFormat.setChoices|] ([|java:text:ChoiceFormat|] v2 @type (this), [|double|][] v3, [|java:lang:String|][] v5 @type (object)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.setChoices:([D[Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        [|java:lang:String|][] v4 @varname [|formats|] @scope ((L0000,L000f));
        v0;
        v1;
      
#L0f2d0c.   v0:= v3.length;
#L0f2d0e.   v1:= v4.length;
#L0f2d10.   if v0 == v1 then goto L0f2d20;
#L0f2d14.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f2d18.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f2d1e.   throw v0;
#L0f2d20.   v2.[|java:text:ChoiceFormat.choiceLimits|]  := v3 @type object;
#L0f2d24.   v2.[|java:text:ChoiceFormat.choiceFormats|]  := v4 @type object;
#L0f2d28.   return @void ;

   }
    procedure [|java:lang:String|] [|java:text:ChoiceFormat.toPattern|] ([|java:text:ChoiceFormat|] v9 @type (this)) @owner [|java:text:ChoiceFormat|] @signature [|Ljava/text/ChoiceFormat;.toPattern:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|boolean|] v4 @varname [|quote|] @scope ((L0046,L005a));
        [|java:lang:String|] v2 @varname [|limit|] @scope ((L0028,L0065));
        [|java:lang:String|] v3 @varname [|previous|] @scope ((L0020,L0065));
        [|java:lang:StringBuilder|] v0 @varname [|buffer|] @scope ((L0009,L006a));
        [|int|] v1 @varname [|i|] @scope ((L000a,L006a));

        v5;
        v6;
        v7;
        v8;
      
#L0f2d3c.   v8:= 124  @length 16;
#L0f2d40.   v7:= 39  @length 16;
#L0f2d44.   v0:= new [|java:lang:StringBuilder|];
#L0f2d48.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f2d4e.   v1:= 0  @length 4;
#L0f2d50.   v5:= v9.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2d54.   v5:= v5.length;
#L0f2d56.   if v1 >= v5 then goto L0f2e06;
#L0f2d5a.   if v1 == 0 then goto L0f2d64;
#L0f2d5e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v8) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2d64.   v5:= v9.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2d68.   v5:= v5[v1]  @wide;
#L0f2d6c.   call temp:=  [|java:text:ChoiceFormat.previousDouble|](v5, v6) @signature [|Ljava/text/ChoiceFormat;.previousDouble:(D)D|] @classDescriptor [|java:text:ChoiceFormat|] @type static;
#L0f2d72.   v5:= temp  @type wide;
#L0f2d74.   call temp:=  [|java:lang:String.valueOf|](v5, v6) @signature [|Ljava/lang/String;.valueOf:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L0f2d7a.   v3:= temp  @type object;
#L0f2d7c.   v5:= v9.[|java:text:ChoiceFormat.choiceLimits|]   @type object;
#L0f2d80.   v5:= v5[v1]  @wide;
#L0f2d84.   call temp:=  [|java:lang:String.valueOf|](v5, v6) @signature [|Ljava/lang/String;.valueOf:(D)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L0f2d8a.   v2:= temp  @type object;
#L0f2d8c.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f2d92.   v5:= temp;
#L0f2d94.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f2d9a.   v6:= temp;
#L0f2d9c.   if v5 >= v6 then goto L0f2df0;
#L0f2da0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2da6.   v5:= 60  @length 16;
#L0f2daa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2db0.   v5:= v9.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2db4.   v5:= v5[v1]  @type object;
#L0f2db8.   call temp:=  [|java:lang:String.indexOf|](v5, v8) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f2dbe.   v5:= temp;
#L0f2dc0.   v6:= -1  @length 4;
#L0f2dc2.   if v5 == v6 then goto L0f2e02;
#L0f2dc6.   v4:= 1  @length 4;
#L0f2dc8.   if v4 == 0 then goto L0f2dd2;
#L0f2dcc.   call temp:=  [|java:lang:StringBuilder.append|](v0, v7) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2dd2.   v5:= v9.[|java:text:ChoiceFormat.choiceFormats|]   @type object;
#L0f2dd6.   v5:= v5[v1]  @type object;
#L0f2dda.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2de0.   if v4 == 0 then goto L0f2dea;
#L0f2de4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v7) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2dea.   v1:= v1 + 1;
#L0f2dee.   goto L0f2d50;
#L0f2df0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2df6.   v5:= 35  @length 16;
#L0f2dfa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2e00.   goto L0f2db0;
#L0f2e02.   v4:= 0  @length 4;
#L0f2e04.   goto L0f2dc8;
#L0f2e06.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f2e0c.   v5:= temp  @type object;
#L0f2e0e.   return v5  @type object;

   }
record [|java:text:CollationElementIterator|]  @type class @AccessFlag PUBLIC_FINAL  {
      [|libcore:icu:CollationElementIteratorICU|] [|java:text:CollationElementIterator.icuIterator|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:text:CollationElementIterator.NULLORDER|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:text:CollationElementIterator.<init>|] ([|java:text:CollationElementIterator|] v0 @type (this), [|libcore:icu:CollationElementIteratorICU|] v1 @type (object)) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.<init>:(Llibcore/icu/CollationElementIteratorICU;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L0f2e20.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f2e26.   v0.[|java:text:CollationElementIterator.icuIterator|]  := v1 @type object;
#L0f2e2a.   return @void ;

   }
    procedure [|int|] [|java:text:CollationElementIterator.primaryOrder|] ([|int|] v1) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.primaryOrder:(I)I|] @Access PUBLIC_STATIC_FINAL {
      local temp ;

        v0;
      
#L0f2e3c.   call temp:=  [|libcore:icu:CollationElementIteratorICU.primaryOrder|](v1) @signature [|Llibcore/icu/CollationElementIteratorICU;.primaryOrder:(I)I|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type static;
#L0f2e42.   v0:= temp;
#L0f2e44.   return v0;

   }
    procedure [|short|] [|java:text:CollationElementIterator.secondaryOrder|] ([|int|] v1) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.secondaryOrder:(I)S|] @Access PUBLIC_STATIC_FINAL {
      local temp ;

        v0;
      
#L0f2e58.   call temp:=  [|libcore:icu:CollationElementIteratorICU.secondaryOrder|](v1) @signature [|Llibcore/icu/CollationElementIteratorICU;.secondaryOrder:(I)I|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type static;
#L0f2e5e.   v0:= temp;
#L0f2e60.   v0:= (short)v0  @type i2s;
#L0f2e62.   return v0;

   }
    procedure [|short|] [|java:text:CollationElementIterator.tertiaryOrder|] ([|int|] v1) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.tertiaryOrder:(I)S|] @Access PUBLIC_STATIC_FINAL {
      local temp ;

        v0;
      
#L0f2e74.   call temp:=  [|libcore:icu:CollationElementIteratorICU.tertiaryOrder|](v1) @signature [|Llibcore/icu/CollationElementIteratorICU;.tertiaryOrder:(I)I|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type static;
#L0f2e7a.   v0:= temp;
#L0f2e7c.   v0:= (short)v0  @type i2s;
#L0f2e7e.   return v0;

   }
    procedure [|int|] [|java:text:CollationElementIterator.getMaxExpansion|] ([|java:text:CollationElementIterator|] v1 @type (this), [|int|] v2) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.getMaxExpansion:(I)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f2e90.   v0:= v1.[|java:text:CollationElementIterator.icuIterator|]   @type object;
#L0f2e94.   call temp:=  [|libcore:icu:CollationElementIteratorICU.getMaxExpansion|](v0, v2) @signature [|Llibcore/icu/CollationElementIteratorICU;.getMaxExpansion:(I)I|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type virtual;
#L0f2e9a.   v0:= temp;
#L0f2e9c.   return v0;

   }
    procedure [|int|] [|java:text:CollationElementIterator.getOffset|] ([|java:text:CollationElementIterator|] v1 @type (this)) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.getOffset:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2eb0.   v0:= v1.[|java:text:CollationElementIterator.icuIterator|]   @type object;
#L0f2eb4.   call temp:=  [|libcore:icu:CollationElementIteratorICU.getOffset|](v0) @signature [|Llibcore/icu/CollationElementIteratorICU;.getOffset:()I|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type virtual;
#L0f2eba.   v0:= temp;
#L0f2ebc.   return v0;

   }
    procedure [|int|] [|java:text:CollationElementIterator.next|] ([|java:text:CollationElementIterator|] v1 @type (this)) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.next:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2ed0.   v0:= v1.[|java:text:CollationElementIterator.icuIterator|]   @type object;
#L0f2ed4.   call temp:=  [|libcore:icu:CollationElementIteratorICU.next|](v0) @signature [|Llibcore/icu/CollationElementIteratorICU;.next:()I|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type virtual;
#L0f2eda.   v0:= temp;
#L0f2edc.   return v0;

   }
    procedure [|int|] [|java:text:CollationElementIterator.previous|] ([|java:text:CollationElementIterator|] v1 @type (this)) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.previous:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2ef0.   v0:= v1.[|java:text:CollationElementIterator.icuIterator|]   @type object;
#L0f2ef4.   call temp:=  [|libcore:icu:CollationElementIteratorICU.previous|](v0) @signature [|Llibcore/icu/CollationElementIteratorICU;.previous:()I|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type virtual;
#L0f2efa.   v0:= temp;
#L0f2efc.   return v0;

   }
    procedure [|void|] [|java:text:CollationElementIterator.reset|] ([|java:text:CollationElementIterator|] v1 @type (this)) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.reset:()V|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2f10.   v0:= v1.[|java:text:CollationElementIterator.icuIterator|]   @type object;
#L0f2f14.   call temp:=  [|libcore:icu:CollationElementIteratorICU.reset|](v0) @signature [|Llibcore/icu/CollationElementIteratorICU;.reset:()V|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type virtual;
#L0f2f1a.   return @void ;

   }
    procedure [|void|] [|java:text:CollationElementIterator.setOffset|] ([|java:text:CollationElementIterator|] v1 @type (this), [|int|] v2) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.setOffset:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f2f2c.   v0:= v1.[|java:text:CollationElementIterator.icuIterator|]   @type object;
#L0f2f30.   call temp:=  [|libcore:icu:CollationElementIteratorICU.setOffset|](v0, v2) @signature [|Llibcore/icu/CollationElementIteratorICU;.setOffset:(I)V|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type virtual;
#L0f2f36.   return @void ;

   }
    procedure [|void|] [|java:text:CollationElementIterator.setText|] ([|java:text:CollationElementIterator|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.setText:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f2f48.   v0:= v1.[|java:text:CollationElementIterator.icuIterator|]   @type object;
#L0f2f4c.   call temp:=  [|libcore:icu:CollationElementIteratorICU.setText|](v0, v2) @signature [|Llibcore/icu/CollationElementIteratorICU;.setText:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type virtual;
#L0f2f52.   return @void ;

   }
    procedure [|void|] [|java:text:CollationElementIterator.setText|] ([|java:text:CollationElementIterator|] v1 @type (this), [|java:text:CharacterIterator|] v2 @type (object)) @owner [|java:text:CollationElementIterator|] @signature [|Ljava/text/CollationElementIterator;.setText:(Ljava/text/CharacterIterator;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f2f64.   v0:= v1.[|java:text:CollationElementIterator.icuIterator|]   @type object;
#L0f2f68.   call temp:=  [|libcore:icu:CollationElementIteratorICU.setText|](v0, v2) @signature [|Llibcore/icu/CollationElementIteratorICU;.setText:(Ljava/text/CharacterIterator;)V|] @classDescriptor [|libcore:icu:CollationElementIteratorICU|] @type virtual;
#L0f2f6e.   return @void ;

   }
record [|java:text:CollationKey|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:lang:Comparable|] {
      [|java:lang:String|] [|java:text:CollationKey.source|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:text:CollationKey.<init>|] ([|java:text:CollationKey|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:text:CollationKey|] @signature [|Ljava/text/CollationKey;.<init>:(Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;


      
#L0f2f80.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f2f86.   v0.[|java:text:CollationKey.source|]  := v1 @type object;
#L0f2f8a.   return @void ;

   }
    procedure [|int|] [|java:text:CollationKey.compareTo|] ([|java:text:CollationKey|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:text:CollationKey|] @signature [|Ljava/text/CollationKey;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L0f2f9c.   v2:= ([|java:text:CollationKey|])v2;
#L0f2fa0.   call temp:=  [|java:text:CollationKey.compareTo|](v1, v2) @signature [|Ljava/text/CollationKey;.compareTo:(Ljava/text/CollationKey;)I|] @classDescriptor [|java:text:CollationKey|] @type virtual;
#L0f2fa6.   v0:= temp;
#L0f2fa8.   return v0;

   }
    procedure [|int|] [|java:text:CollationKey.compareTo|] ([|java:text:CollationKey|] v0 @type (object)) @owner [|java:text:CollationKey|] @signature [|Ljava/text/CollationKey;.compareTo:(Ljava/text/CollationKey;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:text:CollationKey.getSourceString|] ([|java:text:CollationKey|] v1 @type (this)) @owner [|java:text:CollationKey|] @signature [|Ljava/text/CollationKey;.getSourceString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f2fbc.   v0:= v1.[|java:text:CollationKey.source|]   @type object;
#L0f2fc0.   return v0  @type object;

   }
    procedure [|byte|][] [|java:text:CollationKey.toByteArray|] () @owner [|java:text:CollationKey|] @signature [|Ljava/text/CollationKey;.toByteArray:()[B|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:Collator|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:util:Comparator|], [|java:lang:Cloneable|] {
      [|libcore:icu:RuleBasedCollatorICU|] [|java:text:Collator.icuColl|]    @AccessFlag ;
   }
      global [|int|] @@[|java:text:Collator.CANONICAL_DECOMPOSITION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Collator.FULL_DECOMPOSITION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Collator.IDENTICAL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Collator.NO_DECOMPOSITION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Collator.PRIMARY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Collator.SECONDARY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:Collator.TERTIARY|]    @AccessFlag PUBLIC_STATIC_FINAL;
    procedure [|void|] [|java:text:Collator.<init>|] ([|java:text:Collator|] v2 @type (this)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

        v0;
        v1;
      
#L0f2fd4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f2fda.   v0:= new [|libcore:icu:RuleBasedCollatorICU|];
#L0f2fde.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f2fe4.   v1:= temp  @type object;
#L0f2fe6.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.<init>|](v0, v1) @signature [|Llibcore/icu/RuleBasedCollatorICU;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type direct;
#L0f2fec.   v2.[|java:text:Collator.icuColl|]  := v0 @type object;
#L0f2ff0.   return @void ;

   }
    procedure [|void|] [|java:text:Collator.<init>|] ([|java:text:Collator|] v0 @type (this), [|libcore:icu:RuleBasedCollatorICU|] v1 @type (object)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.<init>:(Llibcore/icu/RuleBasedCollatorICU;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L0f3004.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f300a.   v0.[|java:text:Collator.icuColl|]  := v1 @type object;
#L0f300e.   return @void ;

   }
    procedure [|int|] [|java:text:Collator.decompositionMode_ICU_Java|] ([|java:text:Collator|] v1 @type (this), [|int|] v2) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.decompositionMode_ICU_Java:(I)I|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|javaMode|] @scope ((L0001,L0012));


      
#L0f3020.   v0:= v2;
#L0f3022.   goto L0f3034;
#L0f3028.   return v0;
#L0f302a.   v0:= 0  @length 4;
#L0f302c.   goto L0f3028;
#L0f302e.   v0:= 1  @length 4;
#L0f3030.   goto L0f3028;
#L0f3032.   
#L0f3034.   switch  v2
                 | 16 => goto L0f302a
                 | 17 => goto L0f302e
                 | => goto L0f3028;

   }
    procedure [|int|] [|java:text:Collator.decompositionMode_Java_ICU|] ([|java:text:Collator|] v1 @type (this), [|int|] v2) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.decompositionMode_Java_ICU:(I)I|] @Access PRIVATE {
      local temp ;


        v0;
      
#L0f3054.   goto L0f3074;
#L0f305a.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f305e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f3064.   throw v0;
#L0f3066.   v0:= 17  @length 16;
#L0f306a.   return v0;
#L0f306c.   v0:= 16  @length 16;
#L0f3070.   goto L0f306a;
#L0f3072.   
#L0f3074.   switch  v2
                 | 0 => goto L0f306c
                 | 1 => goto L0f3066
                 | => goto L0f305a;

   }
    procedure [|java:util:Locale|][] [|java:text:Collator.getAvailableLocales|] () @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.getAvailableLocales:()[Ljava/util/Locale;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f3094.   call temp:=  [|libcore:icu:ICU.getAvailableCollatorLocales|]() @signature [|Llibcore/icu/ICU;.getAvailableCollatorLocales:()[Ljava/util/Locale;|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0f309a.   v0:= temp  @type object;
#L0f309c.   return v0  @type object;

   }
    procedure [|java:text:Collator|] [|java:text:Collator.getInstance|] () @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.getInstance:()Ljava/text/Collator;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f30b0.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f30b6.   v0:= temp  @type object;
#L0f30b8.   call temp:=  [|java:text:Collator.getInstance|](v0) @signature [|Ljava/text/Collator;.getInstance:(Ljava/util/Locale;)Ljava/text/Collator;|] @classDescriptor [|java:text:Collator|] @type static;
#L0f30be.   v0:= temp  @type object;
#L0f30c0.   return v0  @type object;

   }
    procedure [|java:text:Collator|] [|java:text:Collator.getInstance|] ([|java:util:Locale|] v2 @type (object)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.getInstance:(Ljava/util/Locale;)Ljava/text/Collator;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L0f30d4.   if v2 != 0 then goto L0f30e8;
#L0f30d8.   v0:= new [|java:lang:NullPointerException|];
#L0f30dc.   v1:= "locale == null" @type (object, string);
#L0f30e0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f30e6.   throw v0;
#L0f30e8.   v0:= new [|java:text:RuleBasedCollator|];
#L0f30ec.   v1:= new [|libcore:icu:RuleBasedCollatorICU|];
#L0f30f0.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.<init>|](v1, v2) @signature [|Llibcore/icu/RuleBasedCollatorICU;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type direct;
#L0f30f6.   call temp:=  [|java:text:RuleBasedCollator.<init>|](v0, v1) @signature [|Ljava/text/RuleBasedCollator;.<init>:(Llibcore/icu/RuleBasedCollatorICU;)V|] @classDescriptor [|java:text:RuleBasedCollator|] @type direct;
#L0f30fc.   return v0  @type object;

   }
    procedure [|int|] [|java:text:Collator.strength_ICU_Java|] ([|java:text:Collator|] v1 @type (this), [|int|] v2) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.strength_ICU_Java:(I)I|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|javaValue|] @scope ((L0001,L0020));


      
#L0f3110.   v0:= v2;
#L0f3112.   goto L0f312c;
#L0f3118.   return v0;
#L0f311a.   v0:= 0  @length 4;
#L0f311c.   goto L0f3118;
#L0f311e.   v0:= 1  @length 4;
#L0f3120.   goto L0f3118;
#L0f3122.   v0:= 2  @length 4;
#L0f3124.   goto L0f3118;
#L0f3126.   v0:= 3  @length 4;
#L0f3128.   goto L0f3118;
#L0f312a.   
#L0f312c.   switch v2
                 | 0 => goto L0f311a
                 | 1 => goto L0f311e
                 | 2 => goto L0f3122
                 | 15 => goto L0f3126
                 | => goto L0f3118;

   }
    procedure [|int|] [|java:text:Collator.strength_Java_ICU|] ([|java:text:Collator|] v1 @type (this), [|int|] v2) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.strength_Java_ICU:(I)I|] @Access PRIVATE {
      local temp ;


        v0;
      
#L0f3160.   goto L0f3184;
#L0f3166.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f316a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f3170.   throw v0;
#L0f3172.   v0:= 0  @length 4;
#L0f3174.   return v0;
#L0f3176.   v0:= 1  @length 4;
#L0f3178.   goto L0f3174;
#L0f317a.   v0:= 2  @length 4;
#L0f317c.   goto L0f3174;
#L0f317e.   v0:= 15  @length 16;
#L0f3182.   goto L0f3174;
#L0f3184.   switch  v2
                 | 0 => goto L0f3172
                 | 1 => goto L0f3176
                 | 2 => goto L0f317a
                 | 3 => goto L0f317e
                 | => goto L0f3166;

   }
    procedure [|java:lang:Object|] [|java:text:Collator.clone|] ([|java:text:Collator|] v3 @type (this)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:Collator|] v0 @varname [|clone|] @scope ((L0006,L0011));
        [|java:lang:CloneNotSupportedException|] v1 @varname [|e|] @scope ((L0012,L0018));

        v2;
      
#L0f31ac.   call temp:=  [|java:lang:Object.clone|](v3) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0f31b2.   v0:= temp  @type object;
#L0f31b4.   v0:= ([|java:text:Collator|])v0;
#L0f31b8.   v2:= v3.[|java:text:Collator.icuColl|]   @type object;
#L0f31bc.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.clone|](v2) @signature [|Llibcore/icu/RuleBasedCollatorICU;.clone:()Ljava/lang/Object;|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f31c2.   v2:= temp  @type object;
#L0f31c4.   v2:= ([|libcore:icu:RuleBasedCollatorICU|])v2;
#L0f31c8.   v0.[|java:text:Collator.icuColl|]  := v2 @type object;
#L0f31cc.   return v0  @type object;
#L0f31ce.   v1:= Exception  @type object;
#L0f31d0.   v2:= new [|java:lang:AssertionError|];
#L0f31d4.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v1) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0f31da.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L0f31ac..L0f31cc] goto L0f31ce;

   }
    procedure [|int|] [|java:text:Collator.compare|] ([|java:text:Collator|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0f31fc.   v2:= ([|java:lang:String|])v2;
#L0f3200.   v3:= ([|java:lang:String|])v3;
#L0f3204.   call temp:=  [|java:text:Collator.compare|](v1, v2, v3) @signature [|Ljava/text/Collator;.compare:(Ljava/lang/String;Ljava/lang/String;)I|] @classDescriptor [|java:text:Collator|] @type virtual;
#L0f320a.   v0:= temp;
#L0f320c.   return v0;

   }
    procedure [|int|] [|java:text:Collator.compare|] ([|java:lang:String|] v0 @type (object), [|java:lang:String|] v1 @type (object)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.compare:(Ljava/lang/String;Ljava/lang/String;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:text:Collator.equals|] ([|java:text:Collator|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:Collator|] v0 @varname [|collator|] @scope ((L0009,L001c));


        v1;
        v2;
      
#L0f3220.   v1:= 0  @length 4;
#L0f3222.   v2:= instanceof @varname v4 @type [|java:text:Collator|];
#L0f3226.   if v2 != 0 then goto L0f322c;
#L0f322a.   return v1;
#L0f322c.   v0:= v4  @type object;
#L0f322e.   v0:= ([|java:text:Collator|])v0;
#L0f3232.   v2:= v3.[|java:text:Collator.icuColl|]   @type object;
#L0f3236.   if v2 != 0 then goto L0f3246;
#L0f323a.   v2:= v0.[|java:text:Collator.icuColl|]   @type object;
#L0f323e.   if v2 != 0 then goto L0f322a;
#L0f3242.   v1:= 1  @length 4;
#L0f3244.   goto L0f322a;
#L0f3246.   v1:= v3.[|java:text:Collator.icuColl|]   @type object;
#L0f324a.   v2:= v0.[|java:text:Collator.icuColl|]   @type object;
#L0f324e.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.equals|](v1, v2) @signature [|Llibcore/icu/RuleBasedCollatorICU;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f3254.   v1:= temp;
#L0f3256.   goto L0f322a;

   }
    procedure [|boolean|] [|java:text:Collator.equals|] ([|java:text:Collator|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:lang:String|] v3 @type (object)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.equals:(Ljava/lang/String;Ljava/lang/String;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0f3268.   call temp:=  [|java:text:Collator.compare|](v1, v2, v3) @signature [|Ljava/text/Collator;.compare:(Ljava/lang/String;Ljava/lang/String;)I|] @classDescriptor [|java:text:Collator|] @type virtual;
#L0f326e.   v0:= temp;
#L0f3270.   if v0 != 0 then goto L0f3278;
#L0f3274.   v0:= 1  @length 4;
#L0f3276.   return v0;
#L0f3278.   v0:= 0  @length 4;
#L0f327a.   goto L0f3276;

   }
    procedure [|java:text:CollationKey|] [|java:text:Collator.getCollationKey|] ([|java:lang:String|] v0 @type (object)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.getCollationKey:(Ljava/lang/String;)Ljava/text/CollationKey;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:text:Collator.getDecomposition|] ([|java:text:Collator|] v1 @type (this)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.getDecomposition:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f328c.   v0:= v1.[|java:text:Collator.icuColl|]   @type object;
#L0f3290.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.getDecomposition|](v0) @signature [|Llibcore/icu/RuleBasedCollatorICU;.getDecomposition:()I|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f3296.   v0:= temp;
#L0f3298.   call temp:=  [|java:text:Collator.decompositionMode_ICU_Java|](v1, v0) @signature [|Ljava/text/Collator;.decompositionMode_ICU_Java:(I)I|] @classDescriptor [|java:text:Collator|] @type direct;
#L0f329e.   v0:= temp;
#L0f32a0.   return v0;

   }
    procedure [|int|] [|java:text:Collator.getStrength|] ([|java:text:Collator|] v1 @type (this)) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.getStrength:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f32b4.   v0:= v1.[|java:text:Collator.icuColl|]   @type object;
#L0f32b8.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.getStrength|](v0) @signature [|Llibcore/icu/RuleBasedCollatorICU;.getStrength:()I|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f32be.   v0:= temp;
#L0f32c0.   call temp:=  [|java:text:Collator.strength_ICU_Java|](v1, v0) @signature [|Ljava/text/Collator;.strength_ICU_Java:(I)I|] @classDescriptor [|java:text:Collator|] @type direct;
#L0f32c6.   v0:= temp;
#L0f32c8.   return v0;

   }
    procedure [|int|] [|java:text:Collator.hashCode|] () @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.hashCode:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:text:Collator.setDecomposition|] ([|java:text:Collator|] v2 @type (this), [|int|] v3) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.setDecomposition:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f32dc.   v0:= v2.[|java:text:Collator.icuColl|]   @type object;
#L0f32e0.   call temp:=  [|java:text:Collator.decompositionMode_Java_ICU|](v2, v3) @signature [|Ljava/text/Collator;.decompositionMode_Java_ICU:(I)I|] @classDescriptor [|java:text:Collator|] @type direct;
#L0f32e6.   v1:= temp;
#L0f32e8.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.setDecomposition|](v0, v1) @signature [|Llibcore/icu/RuleBasedCollatorICU;.setDecomposition:(I)V|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f32ee.   return @void ;

   }
    procedure [|void|] [|java:text:Collator.setStrength|] ([|java:text:Collator|] v2 @type (this), [|int|] v3) @owner [|java:text:Collator|] @signature [|Ljava/text/Collator;.setStrength:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f3300.   v0:= v2.[|java:text:Collator.icuColl|]   @type object;
#L0f3304.   call temp:=  [|java:text:Collator.strength_Java_ICU|](v2, v3) @signature [|Ljava/text/Collator;.strength_Java_ICU:(I)I|] @classDescriptor [|java:text:Collator|] @type direct;
#L0f330a.   v1:= temp;
#L0f330c.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.setStrength|](v0, v1) @signature [|Llibcore/icu/RuleBasedCollatorICU;.setStrength:(I)V|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f3312.   return @void ;

   }
record [|java:text:Format$Field|]  @type class @AccessFlag PUBLIC  extends [|java:text:AttributedCharacterIterator$Attribute|] {
   }
      global [|long|] @@[|java:text:Format$Field.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:Format$Field.<init>|] ([|java:text:Format$Field|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:text:Format$Field|] @signature [|Ljava/text/Format$Field;.<init>:(Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;


      
#L0f3324.   call temp:=  [|java:text:AttributedCharacterIterator$Attribute.<init>|](v0, v1) @signature [|Ljava/text/AttributedCharacterIterator$Attribute;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:AttributedCharacterIterator$Attribute|] @type direct;
#L0f332a.   return @void ;

   }
record [|java:text:DateFormat$Field|]  @type class @AccessFlag PUBLIC  extends [|java:text:Format$Field|] {
      [|int|] [|java:text:DateFormat$Field.calendarField|]    @AccessFlag PRIVATE;
   }
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.AM_PM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.DAY_OF_MONTH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.DAY_OF_WEEK|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.DAY_OF_WEEK_IN_MONTH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.DAY_OF_YEAR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.ERA|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.HOUR0|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.HOUR1|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.HOUR_OF_DAY0|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.HOUR_OF_DAY1|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.MILLISECOND|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.MINUTE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.MONTH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.SECOND|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.TIME_ZONE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.WEEK_OF_MONTH|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.WEEK_OF_YEAR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:DateFormat$Field|] @@[|java:text:DateFormat$Field.YEAR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:text:DateFormat$Field.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:Hashtable|] @@[|java:text:DateFormat$Field.table|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:text:DateFormat$Field.<clinit>|] () @owner [|java:text:DateFormat$Field|] @signature [|Ljava/text/DateFormat$Field;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L0f333c.   v3:= -1  @length 4;
#L0f333e.   v0:= new [|java:util:Hashtable|];
#L0f3342.   call temp:=  [|java:util:Hashtable.<init>|](v0) @signature [|Ljava/util/Hashtable;.<init>:()V|] @classDescriptor [|java:util:Hashtable|] @type direct;
#L0f3348.   @@[|java:text:DateFormat$Field.table|] := v0  @type object;
#L0f334c.   v0:= new [|java:text:DateFormat$Field|];
#L0f3350.   v1:= "era" @type (object, string);
#L0f3354.   v2:= 0  @length 4;
#L0f3356.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f335c.   @@[|java:text:DateFormat$Field.ERA|] := v0  @type object;
#L0f3360.   v0:= new [|java:text:DateFormat$Field|];
#L0f3364.   v1:= "year" @type (object, string);
#L0f3368.   v2:= 1  @length 4;
#L0f336a.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f3370.   @@[|java:text:DateFormat$Field.YEAR|] := v0  @type object;
#L0f3374.   v0:= new [|java:text:DateFormat$Field|];
#L0f3378.   v1:= "month" @type (object, string);
#L0f337c.   v2:= 2  @length 4;
#L0f337e.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f3384.   @@[|java:text:DateFormat$Field.MONTH|] := v0  @type object;
#L0f3388.   v0:= new [|java:text:DateFormat$Field|];
#L0f338c.   v1:= "hour of day" @type (object, string);
#L0f3390.   v2:= 11  @length 16;
#L0f3394.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f339a.   @@[|java:text:DateFormat$Field.HOUR_OF_DAY0|] := v0  @type object;
#L0f339e.   v0:= new [|java:text:DateFormat$Field|];
#L0f33a2.   v1:= "hour of day 1" @type (object, string);
#L0f33a6.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v3) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f33ac.   @@[|java:text:DateFormat$Field.HOUR_OF_DAY1|] := v0  @type object;
#L0f33b0.   v0:= new [|java:text:DateFormat$Field|];
#L0f33b4.   v1:= "minute" @type (object, string);
#L0f33b8.   v2:= 12  @length 16;
#L0f33bc.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f33c2.   @@[|java:text:DateFormat$Field.MINUTE|] := v0  @type object;
#L0f33c6.   v0:= new [|java:text:DateFormat$Field|];
#L0f33ca.   v1:= "second" @type (object, string);
#L0f33ce.   v2:= 13  @length 16;
#L0f33d2.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f33d8.   @@[|java:text:DateFormat$Field.SECOND|] := v0  @type object;
#L0f33dc.   v0:= new [|java:text:DateFormat$Field|];
#L0f33e0.   v1:= "millisecond" @type (object, string);
#L0f33e4.   v2:= 14  @length 16;
#L0f33e8.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f33ee.   @@[|java:text:DateFormat$Field.MILLISECOND|] := v0  @type object;
#L0f33f2.   v0:= new [|java:text:DateFormat$Field|];
#L0f33f6.   v1:= "day of week" @type (object, string);
#L0f33fa.   v2:= 7  @length 4;
#L0f33fc.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f3402.   @@[|java:text:DateFormat$Field.DAY_OF_WEEK|] := v0  @type object;
#L0f3406.   v0:= new [|java:text:DateFormat$Field|];
#L0f340a.   v1:= "day of month" @type (object, string);
#L0f340e.   v2:= 5  @length 4;
#L0f3410.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f3416.   @@[|java:text:DateFormat$Field.DAY_OF_MONTH|] := v0  @type object;
#L0f341a.   v0:= new [|java:text:DateFormat$Field|];
#L0f341e.   v1:= "day of year" @type (object, string);
#L0f3422.   v2:= 6  @length 4;
#L0f3424.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f342a.   @@[|java:text:DateFormat$Field.DAY_OF_YEAR|] := v0  @type object;
#L0f342e.   v0:= new [|java:text:DateFormat$Field|];
#L0f3432.   v1:= "day of week in month" @type (object, string);
#L0f3436.   v2:= 8  @length 16;
#L0f343a.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f3440.   @@[|java:text:DateFormat$Field.DAY_OF_WEEK_IN_MONTH|] := v0  @type object;
#L0f3444.   v0:= new [|java:text:DateFormat$Field|];
#L0f3448.   v1:= "week of year" @type (object, string);
#L0f344c.   v2:= 3  @length 4;
#L0f344e.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f3454.   @@[|java:text:DateFormat$Field.WEEK_OF_YEAR|] := v0  @type object;
#L0f3458.   v0:= new [|java:text:DateFormat$Field|];
#L0f345c.   v1:= "week of month" @type (object, string);
#L0f3460.   v2:= 4  @length 4;
#L0f3462.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f3468.   @@[|java:text:DateFormat$Field.WEEK_OF_MONTH|] := v0  @type object;
#L0f346c.   v0:= new [|java:text:DateFormat$Field|];
#L0f3470.   v1:= "am pm" @type (object, string);
#L0f3474.   v2:= 9  @length 16;
#L0f3478.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f347e.   @@[|java:text:DateFormat$Field.AM_PM|] := v0  @type object;
#L0f3482.   v0:= new [|java:text:DateFormat$Field|];
#L0f3486.   v1:= "hour" @type (object, string);
#L0f348a.   v2:= 10  @length 16;
#L0f348e.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v2) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f3494.   @@[|java:text:DateFormat$Field.HOUR0|] := v0  @type object;
#L0f3498.   v0:= new [|java:text:DateFormat$Field|];
#L0f349c.   v1:= "hour 1" @type (object, string);
#L0f34a0.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v3) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f34a6.   @@[|java:text:DateFormat$Field.HOUR1|] := v0  @type object;
#L0f34aa.   v0:= new [|java:text:DateFormat$Field|];
#L0f34ae.   v1:= "time zone" @type (object, string);
#L0f34b2.   call temp:=  [|java:text:DateFormat$Field.<init>|](v0, v1, v3) @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:DateFormat$Field|] @type direct;
#L0f34b8.   @@[|java:text:DateFormat$Field.TIME_ZONE|] := v0  @type object;
#L0f34bc.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormat$Field.<init>|] ([|java:text:DateFormat$Field|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4) @owner [|java:text:DateFormat$Field|] @signature [|Ljava/text/DateFormat$Field;.<init>:(Ljava/lang/String;I)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
      
#L0f34d0.   v0:= -1  @length 4;
#L0f34d2.   call temp:=  [|java:text:Format$Field.<init>|](v2, v3) @signature [|Ljava/text/Format$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:Format$Field|] @type direct;
#L0f34d8.   v2.[|java:text:DateFormat$Field.calendarField|]  := v0;
#L0f34dc.   v2.[|java:text:DateFormat$Field.calendarField|]  := v4;
#L0f34e0.   if v4 == v0 then goto L0f350e;
#L0f34e4.   v0:= @@[|java:text:DateFormat$Field.table|]   @type object;
#L0f34e8.   call temp:=  [|java:lang:Integer.valueOf|](v4) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0f34ee.   v1:= temp  @type object;
#L0f34f0.   call temp:=  [|java:util:Hashtable.get|](v0, v1) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0f34f6.   v0:= temp  @type object;
#L0f34f8.   if v0 != 0 then goto L0f350e;
#L0f34fc.   v0:= @@[|java:text:DateFormat$Field.table|]   @type object;
#L0f3500.   call temp:=  [|java:lang:Integer.valueOf|](v4) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0f3506.   v1:= temp  @type object;
#L0f3508.   call temp:=  [|java:util:Hashtable.put|](v0, v1, v2) @signature [|Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0f350e.   return @void ;

   }
    procedure [|java:text:DateFormat$Field|] [|java:text:DateFormat$Field.ofCalendarField|] ([|int|] v2) @owner [|java:text:DateFormat$Field|] @signature [|Ljava/text/DateFormat$Field;.ofCalendarField:(I)Ljava/text/DateFormat$Field;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L0f3520.   if v2 < 0 then goto L0f352c;
#L0f3524.   v0:= 17  @length 16;
#L0f3528.   if v2 < v0 then goto L0f3538;
#L0f352c.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f3530.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f3536.   throw v0;
#L0f3538.   v0:= @@[|java:text:DateFormat$Field.table|]   @type object;
#L0f353c.   call temp:=  [|java:lang:Integer.valueOf|](v2) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0f3542.   v1:= temp  @type object;
#L0f3544.   call temp:=  [|java:util:Hashtable.get|](v0, v1) @signature [|Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Hashtable|] @type virtual;
#L0f354a.   v0:= temp  @type object;
#L0f354c.   v0:= ([|java:text:DateFormat$Field|])v0;
#L0f3550.   return v0  @type object;

   }
    procedure [|int|] [|java:text:DateFormat$Field.getCalendarField|] ([|java:text:DateFormat$Field|] v1 @type (this)) @owner [|java:text:DateFormat$Field|] @signature [|Ljava/text/DateFormat$Field;.getCalendarField:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3564.   v0:= v1.[|java:text:DateFormat$Field.calendarField|] ;
#L0f3568.   return v0;

   }
record [|java:text:DateFormat|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:text:Format|] {
      [|java:util:Calendar|] [|java:text:DateFormat.calendar|]    @AccessFlag PROTECTED;
      [|java:text:NumberFormat|] [|java:text:DateFormat.numberFormat|]    @AccessFlag PROTECTED;
   }
      global [|int|] @@[|java:text:DateFormat.AM_PM_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.DATE_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.DAY_OF_WEEK_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.DAY_OF_WEEK_IN_MONTH_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.DAY_OF_YEAR_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.DEFAULT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.ERA_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.FULL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.HOUR0_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.HOUR1_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.HOUR_OF_DAY0_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.HOUR_OF_DAY1_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.LONG|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.MEDIUM|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.MILLISECOND_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.MINUTE_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.MONTH_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.SECOND_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.SHORT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.TIMEZONE_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.WEEK_OF_MONTH_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.WEEK_OF_YEAR_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|int|] @@[|java:text:DateFormat.YEAR_FIELD|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:text:DateFormat.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:DateFormat.<init>|] ([|java:text:DateFormat|] v0 @type (this)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0f357c.   call temp:=  [|java:text:Format.<init>|](v0) @signature [|Ljava/text/Format;.<init>:()V|] @classDescriptor [|java:text:Format|] @type direct;
#L0f3582.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormat.checkDateStyle|] ([|int|] v3) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.checkDateStyle:(I)V|] @Access PRIVATE_STATIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0f3594.   v1:= 2  @length 4;
#L0f3596.   v0:= 3  @length 4;
#L0f3598.   if v3 == v0 then goto L0f35e0;
#L0f359c.   if v3 == v1 then goto L0f35e0;
#L0f35a0.   v0:= 1  @length 4;
#L0f35a2.   if v3 == v0 then goto L0f35e0;
#L0f35a6.   if v3 == 0 then goto L0f35e0;
#L0f35aa.   if v3 == v1 then goto L0f35e0;
#L0f35ae.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f35b2.   v1:= new [|java:lang:StringBuilder|];
#L0f35b6.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f35bc.   v2:= "Illegal date style " @type (object, string);
#L0f35c0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f35c6.   v1:= temp  @type object;
#L0f35c8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f35ce.   v1:= temp  @type object;
#L0f35d0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f35d6.   v1:= temp  @type object;
#L0f35d8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f35de.   throw v0;
#L0f35e0.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormat.checkTimeStyle|] ([|int|] v3) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.checkTimeStyle:(I)V|] @Access PRIVATE_STATIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0f35f4.   v1:= 2  @length 4;
#L0f35f6.   v0:= 3  @length 4;
#L0f35f8.   if v3 == v0 then goto L0f3640;
#L0f35fc.   if v3 == v1 then goto L0f3640;
#L0f3600.   v0:= 1  @length 4;
#L0f3602.   if v3 == v0 then goto L0f3640;
#L0f3606.   if v3 == 0 then goto L0f3640;
#L0f360a.   if v3 == v1 then goto L0f3640;
#L0f360e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f3612.   v1:= new [|java:lang:StringBuilder|];
#L0f3616.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f361c.   v2:= "Illegal time style " @type (object, string);
#L0f3620.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f3626.   v1:= temp  @type object;
#L0f3628.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f362e.   v1:= temp  @type object;
#L0f3630.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f3636.   v1:= temp  @type object;
#L0f3638.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f363e.   throw v0;
#L0f3640.   return @void ;

   }
    procedure [|java:util:Locale|][] [|java:text:DateFormat.getAvailableLocales|] () @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getAvailableLocales:()[Ljava/util/Locale;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f3654.   call temp:=  [|libcore:icu:ICU.getAvailableDateFormatLocales|]() @signature [|Llibcore/icu/ICU;.getAvailableDateFormatLocales:()[Ljava/util/Locale;|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0f365a.   v0:= temp  @type object;
#L0f365c.   return v0  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getDateInstance|] () @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getDateInstance:()Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f3670.   v0:= 2  @length 4;
#L0f3672.   call temp:=  [|java:text:DateFormat.getDateInstance|](v0) @signature [|Ljava/text/DateFormat;.getDateInstance:(I)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f3678.   v0:= temp  @type object;
#L0f367a.   return v0  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getDateInstance|] ([|int|] v1) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getDateInstance:(I)Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;

        v0;
      
#L0f368c.   call temp:=  [|java:text:DateFormat.checkDateStyle|](v1) @signature [|Ljava/text/DateFormat;.checkDateStyle:(I)V|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f3692.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f3698.   v0:= temp  @type object;
#L0f369a.   call temp:=  [|java:text:DateFormat.getDateInstance|](v1, v0) @signature [|Ljava/text/DateFormat;.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f36a0.   v0:= temp  @type object;
#L0f36a2.   return v0  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getDateInstance|] ([|int|] v2, [|java:util:Locale|] v3 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L0f36b4.   call temp:=  [|java:text:DateFormat.checkDateStyle|](v2) @signature [|Ljava/text/DateFormat;.checkDateStyle:(I)V|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f36ba.   v0:= new [|java:text:SimpleDateFormat|];
#L0f36be.   call temp:=  [|libcore:icu:LocaleData.get|](v3) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f36c4.   v1:= temp  @type object;
#L0f36c6.   call temp:=  [|libcore:icu:LocaleData.getDateFormat|](v1, v2) @signature [|Llibcore/icu/LocaleData;.getDateFormat:(I)Ljava/lang/String;|] @classDescriptor [|libcore:icu:LocaleData|] @type virtual;
#L0f36cc.   v1:= temp  @type object;
#L0f36ce.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v0, v1, v3) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f36d4.   return v0  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getDateTimeInstance|] () @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getDateTimeInstance:()Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f36e8.   v0:= 2  @length 4;
#L0f36ea.   call temp:=  [|java:text:DateFormat.getDateTimeInstance|](v0, v0) @signature [|Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f36f0.   v0:= temp  @type object;
#L0f36f2.   return v0  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getDateTimeInstance|] ([|int|] v1, [|int|] v2) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;


        v0;
      
#L0f3704.   call temp:=  [|java:text:DateFormat.checkTimeStyle|](v2) @signature [|Ljava/text/DateFormat;.checkTimeStyle:(I)V|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f370a.   call temp:=  [|java:text:DateFormat.checkDateStyle|](v1) @signature [|Ljava/text/DateFormat;.checkDateStyle:(I)V|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f3710.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f3716.   v0:= temp  @type object;
#L0f3718.   call temp:=  [|java:text:DateFormat.getDateTimeInstance|](v1, v2, v0) @signature [|Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f371e.   v0:= temp  @type object;
#L0f3720.   return v0  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getDateTimeInstance|] ([|int|] v4, [|int|] v5, [|java:util:Locale|] v6 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        [|libcore:icu:LocaleData|] v0 @varname [|localeData|] @scope ((L000a,L002f));
        [|java:lang:String|] v1 @varname [|pattern|] @scope ((L0029,L002f));



        v2;
        v3;
      
#L0f3734.   call temp:=  [|java:text:DateFormat.checkTimeStyle|](v5) @signature [|Ljava/text/DateFormat;.checkTimeStyle:(I)V|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f373a.   call temp:=  [|java:text:DateFormat.checkDateStyle|](v4) @signature [|Ljava/text/DateFormat;.checkDateStyle:(I)V|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f3740.   call temp:=  [|libcore:icu:LocaleData.get|](v6) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f3746.   v0:= temp  @type object;
#L0f3748.   v2:= new [|java:lang:StringBuilder|];
#L0f374c.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f3752.   call temp:=  [|libcore:icu:LocaleData.getDateFormat|](v0, v4) @signature [|Llibcore/icu/LocaleData;.getDateFormat:(I)Ljava/lang/String;|] @classDescriptor [|libcore:icu:LocaleData|] @type virtual;
#L0f3758.   v3:= temp  @type object;
#L0f375a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f3760.   v2:= temp  @type object;
#L0f3762.   v3:= " " @type (object, string);
#L0f3766.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f376c.   v2:= temp  @type object;
#L0f376e.   call temp:=  [|libcore:icu:LocaleData.getTimeFormat|](v0, v5) @signature [|Llibcore/icu/LocaleData;.getTimeFormat:(I)Ljava/lang/String;|] @classDescriptor [|libcore:icu:LocaleData|] @type virtual;
#L0f3774.   v3:= temp  @type object;
#L0f3776.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f377c.   v2:= temp  @type object;
#L0f377e.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f3784.   v1:= temp  @type object;
#L0f3786.   v2:= new [|java:text:SimpleDateFormat|];
#L0f378a.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v2, v1, v6) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f3790.   return v2  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getInstance|] () @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getInstance:()Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f37a4.   v0:= 3  @length 4;
#L0f37a6.   call temp:=  [|java:text:DateFormat.getDateTimeInstance|](v0, v0) @signature [|Ljava/text/DateFormat;.getDateTimeInstance:(II)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f37ac.   v0:= temp  @type object;
#L0f37ae.   return v0  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getTimeInstance|] () @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getTimeInstance:()Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f37c0.   v0:= 2  @length 4;
#L0f37c2.   call temp:=  [|java:text:DateFormat.getTimeInstance|](v0) @signature [|Ljava/text/DateFormat;.getTimeInstance:(I)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f37c8.   v0:= temp  @type object;
#L0f37ca.   return v0  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getTimeInstance|] ([|int|] v1) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getTimeInstance:(I)Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;

        v0;
      
#L0f37dc.   call temp:=  [|java:text:DateFormat.checkTimeStyle|](v1) @signature [|Ljava/text/DateFormat;.checkTimeStyle:(I)V|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f37e2.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f37e8.   v0:= temp  @type object;
#L0f37ea.   call temp:=  [|java:text:DateFormat.getTimeInstance|](v1, v0) @signature [|Ljava/text/DateFormat;.getTimeInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f37f0.   v0:= temp  @type object;
#L0f37f2.   return v0  @type object;

   }
    procedure [|java:text:DateFormat|] [|java:text:DateFormat.getTimeInstance|] ([|int|] v2, [|java:util:Locale|] v3 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getTimeInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L0f3804.   call temp:=  [|java:text:DateFormat.checkTimeStyle|](v2) @signature [|Ljava/text/DateFormat;.checkTimeStyle:(I)V|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f380a.   v0:= new [|java:text:SimpleDateFormat|];
#L0f380e.   call temp:=  [|libcore:icu:LocaleData.get|](v3) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f3814.   v1:= temp  @type object;
#L0f3816.   call temp:=  [|libcore:icu:LocaleData.getTimeFormat|](v1, v2) @signature [|Llibcore/icu/LocaleData;.getTimeFormat:(I)Ljava/lang/String;|] @classDescriptor [|libcore:icu:LocaleData|] @type virtual;
#L0f381c.   v1:= temp  @type object;
#L0f381e.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v0, v1, v3) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f3824.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:text:DateFormat.clone|] ([|java:text:DateFormat|] v2 @type (this)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:DateFormat|] v0 @varname [|clone|] @scope ((L0006,L001b));

        v1;
      
#L0f3838.   call temp:=  [|java:text:Format.clone|](v2) @signature [|Ljava/text/Format;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:Format|] @type super;
#L0f383e.   v0:= temp  @type object;
#L0f3840.   v0:= ([|java:text:DateFormat|])v0;
#L0f3844.   v1:= v2.[|java:text:DateFormat.calendar|]   @type object;
#L0f3848.   call temp:=  [|java:util:Calendar.clone|](v1) @signature [|Ljava/util/Calendar;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f384e.   v1:= temp  @type object;
#L0f3850.   v1:= ([|java:util:Calendar|])v1;
#L0f3854.   v0.[|java:text:DateFormat.calendar|]  := v1 @type object;
#L0f3858.   v1:= v2.[|java:text:DateFormat.numberFormat|]   @type object;
#L0f385c.   call temp:=  [|java:text:NumberFormat.clone|](v1) @signature [|Ljava/text/NumberFormat;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f3862.   v1:= temp  @type object;
#L0f3864.   v1:= ([|java:text:NumberFormat|])v1;
#L0f3868.   v0.[|java:text:DateFormat.numberFormat|]  := v1 @type object;
#L0f386c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:text:DateFormat.equals|] ([|java:text:DateFormat|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:DateFormat|] v0 @varname [|dateFormat|] @scope ((L000e,L0056));


        v1;
        v2;
        v3;
        v4;
      
#L0f3880.   v1:= 1  @length 4;
#L0f3882.   v2:= 0  @length 4;
#L0f3884.   if v5 != v6 then goto L0f388a;
#L0f3888.   return v1;
#L0f388a.   v3:= instanceof @varname v6 @type [|java:text:DateFormat|];
#L0f388e.   if v3 != 0 then goto L0f3896;
#L0f3892.   v1:= v2;
#L0f3894.   goto L0f3888;
#L0f3896.   v0:= v6  @type object;
#L0f3898.   v0:= ([|java:text:DateFormat|])v0;
#L0f389c.   v3:= v5.[|java:text:DateFormat.numberFormat|]   @type object;
#L0f38a0.   v4:= v0.[|java:text:DateFormat.numberFormat|]   @type object;
#L0f38a4.   call temp:=  [|java:text:NumberFormat.equals|](v3, v4) @signature [|Ljava/text/NumberFormat;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f38aa.   v3:= temp;
#L0f38ac.   if v3 == 0 then goto L0f3928;
#L0f38b0.   v3:= v5.[|java:text:DateFormat.calendar|]   @type object;
#L0f38b4.   call temp:=  [|java:util:Calendar.getTimeZone|](v3) @signature [|Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f38ba.   v3:= temp  @type object;
#L0f38bc.   v4:= v0.[|java:text:DateFormat.calendar|]   @type object;
#L0f38c0.   call temp:=  [|java:util:Calendar.getTimeZone|](v4) @signature [|Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f38c6.   v4:= temp  @type object;
#L0f38c8.   call temp:=  [|java:lang:Object.equals|](v3, v4) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f38ce.   v3:= temp;
#L0f38d0.   if v3 == 0 then goto L0f3928;
#L0f38d4.   v3:= v5.[|java:text:DateFormat.calendar|]   @type object;
#L0f38d8.   call temp:=  [|java:util:Calendar.getFirstDayOfWeek|](v3) @signature [|Ljava/util/Calendar;.getFirstDayOfWeek:()I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f38de.   v3:= temp;
#L0f38e0.   v4:= v0.[|java:text:DateFormat.calendar|]   @type object;
#L0f38e4.   call temp:=  [|java:util:Calendar.getFirstDayOfWeek|](v4) @signature [|Ljava/util/Calendar;.getFirstDayOfWeek:()I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f38ea.   v4:= temp;
#L0f38ec.   if v3 != v4 then goto L0f3928;
#L0f38f0.   v3:= v5.[|java:text:DateFormat.calendar|]   @type object;
#L0f38f4.   call temp:=  [|java:util:Calendar.getMinimalDaysInFirstWeek|](v3) @signature [|Ljava/util/Calendar;.getMinimalDaysInFirstWeek:()I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f38fa.   v3:= temp;
#L0f38fc.   v4:= v0.[|java:text:DateFormat.calendar|]   @type object;
#L0f3900.   call temp:=  [|java:util:Calendar.getMinimalDaysInFirstWeek|](v4) @signature [|Ljava/util/Calendar;.getMinimalDaysInFirstWeek:()I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3906.   v4:= temp;
#L0f3908.   if v3 != v4 then goto L0f3928;
#L0f390c.   v3:= v5.[|java:text:DateFormat.calendar|]   @type object;
#L0f3910.   call temp:=  [|java:util:Calendar.isLenient|](v3) @signature [|Ljava/util/Calendar;.isLenient:()Z|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3916.   v3:= temp;
#L0f3918.   v4:= v0.[|java:text:DateFormat.calendar|]   @type object;
#L0f391c.   call temp:=  [|java:util:Calendar.isLenient|](v4) @signature [|Ljava/util/Calendar;.isLenient:()Z|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3922.   v4:= temp;
#L0f3924.   if v3 == v4 then goto L0f3888;
#L0f3928.   v1:= v2;
#L0f392a.   goto L0f3888;

   }
    procedure [|java:lang:String|] [|java:text:DateFormat.format|] ([|java:text:DateFormat|] v3 @type (this), [|java:util:Date|] v4 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
        v2;
      
#L0f393c.   v0:= new [|java:lang:StringBuffer|];
#L0f3940.   call temp:=  [|java:lang:StringBuffer.<init>|](v0) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f3946.   v1:= new [|java:text:FieldPosition|];
#L0f394a.   v2:= 0  @length 4;
#L0f394c.   call temp:=  [|java:text:FieldPosition.<init>|](v1, v2) @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f3952.   call temp:=  [|java:text:DateFormat.format|](v3, v4, v0, v1) @signature [|Ljava/text/DateFormat;.format:(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:DateFormat|] @type virtual;
#L0f3958.   v0:= temp  @type object;
#L0f395a.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f3960.   v0:= temp  @type object;
#L0f3962.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:DateFormat.format|] ([|java:text:DateFormat|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:lang:StringBuffer|] v5 @type (object), [|java:text:FieldPosition|] v6 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC_FINAL {
      local temp ;






        v0;
        v1;
        v2;
      
#L0f3974.   v0:= instanceof @varname v4 @type [|java:util:Date|];
#L0f3978.   if v0 == 0 then goto L0f398a;
#L0f397c.   v4:= ([|java:util:Date|])v4;
#L0f3980.   call temp:=  [|java:text:DateFormat.format|](v3, v4, v5, v6) @signature [|Ljava/text/DateFormat;.format:(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:DateFormat|] @type virtual;
#L0f3986.   v0:= temp  @type object;
#L0f3988.   return v0  @type object;
#L0f398a.   v0:= instanceof @varname v4 @type [|java:lang:Number|];
#L0f398e.   if v0 == 0 then goto L0f39b2;
#L0f3992.   v0:= new [|java:util:Date|];
#L0f3996.   v4:= ([|java:lang:Number|])v4;
#L0f399a.   call temp:=  [|java:lang:Number.longValue|](v4) @signature [|Ljava/lang/Number;.longValue:()J|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f39a0.   v1:= temp  @type wide;
#L0f39a2.   call temp:=  [|java:util:Date.<init>|](v0, v1, v2) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0f39a8.   call temp:=  [|java:text:DateFormat.format|](v3, v0, v5, v6) @signature [|Ljava/text/DateFormat;.format:(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:DateFormat|] @type virtual;
#L0f39ae.   v0:= temp  @type object;
#L0f39b0.   goto L0f3988;
#L0f39b2.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f39b6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f39bc.   throw v0;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:DateFormat.format|] ([|java:util:Date|] v0 @type (object), [|java:lang:StringBuffer|] v1 @type (object), [|java:text:FieldPosition|] v2 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.format:(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Calendar|] [|java:text:DateFormat.getCalendar|] ([|java:text:DateFormat|] v1 @type (this)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getCalendar:()Ljava/util/Calendar;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f39d0.   v0:= v1.[|java:text:DateFormat.calendar|]   @type object;
#L0f39d4.   return v0  @type object;

   }
    procedure [|java:text:NumberFormat|] [|java:text:DateFormat.getNumberFormat|] ([|java:text:DateFormat|] v1 @type (this)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getNumberFormat:()Ljava/text/NumberFormat;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f39e8.   v0:= v1.[|java:text:DateFormat.numberFormat|]   @type object;
#L0f39ec.   return v0  @type object;

   }
    procedure [|java:util:TimeZone|] [|java:text:DateFormat.getTimeZone|] ([|java:text:DateFormat|] v1 @type (this)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.getTimeZone:()Ljava/util/TimeZone;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3a00.   v0:= v1.[|java:text:DateFormat.calendar|]   @type object;
#L0f3a04.   call temp:=  [|java:util:Calendar.getTimeZone|](v0) @signature [|Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3a0a.   v0:= temp  @type object;
#L0f3a0c.   return v0  @type object;

   }
    procedure [|int|] [|java:text:DateFormat.hashCode|] ([|java:text:DateFormat|] v2 @type (this)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f3a20.   v0:= v2.[|java:text:DateFormat.calendar|]   @type object;
#L0f3a24.   call temp:=  [|java:util:Calendar.getFirstDayOfWeek|](v0) @signature [|Ljava/util/Calendar;.getFirstDayOfWeek:()I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3a2a.   v0:= temp;
#L0f3a2c.   v1:= v2.[|java:text:DateFormat.calendar|]   @type object;
#L0f3a30.   call temp:=  [|java:util:Calendar.getMinimalDaysInFirstWeek|](v1) @signature [|Ljava/util/Calendar;.getMinimalDaysInFirstWeek:()I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3a36.   v1:= temp;
#L0f3a38.   v0:= v0 + v1  @type int;
#L0f3a3a.   v1:= v2.[|java:text:DateFormat.calendar|]   @type object;
#L0f3a3e.   call temp:=  [|java:util:Calendar.getTimeZone|](v1) @signature [|Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3a44.   v1:= temp  @type object;
#L0f3a46.   call temp:=  [|java:lang:Object.hashCode|](v1) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f3a4c.   v1:= temp;
#L0f3a4e.   v1:= v1 + v0  @type int;
#L0f3a50.   v0:= v2.[|java:text:DateFormat.calendar|]   @type object;
#L0f3a54.   call temp:=  [|java:util:Calendar.isLenient|](v0) @signature [|Ljava/util/Calendar;.isLenient:()Z|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3a5a.   v0:= temp;
#L0f3a5c.   if v0 == 0 then goto L0f3a76;
#L0f3a60.   v0:= 1231  @length 16;
#L0f3a64.   v0:= v0 + v1  @type int;
#L0f3a66.   v1:= v2.[|java:text:DateFormat.numberFormat|]   @type object;
#L0f3a6a.   call temp:=  [|java:text:NumberFormat.hashCode|](v1) @signature [|Ljava/text/NumberFormat;.hashCode:()I|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f3a70.   v1:= temp;
#L0f3a72.   v0:= v0 + v1  @type int;
#L0f3a74.   return v0;
#L0f3a76.   v0:= 1237  @length 16;
#L0f3a7a.   goto L0f3a64;

   }
    procedure [|boolean|] [|java:text:DateFormat.isLenient|] ([|java:text:DateFormat|] v1 @type (this)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.isLenient:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3a8c.   v0:= v1.[|java:text:DateFormat.calendar|]   @type object;
#L0f3a90.   call temp:=  [|java:util:Calendar.isLenient|](v0) @signature [|Ljava/util/Calendar;.isLenient:()Z|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3a96.   v0:= temp;
#L0f3a98.   return v0;

   }
    procedure [|java:util:Date|] [|java:text:DateFormat.parse|] ([|java:text:DateFormat|] v5 @type (this), [|java:lang:String|] v6 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;|] @Access PUBLIC {
      local temp ;
        [|java:util:Date|] v0 @varname [|date|] @scope ((L000a,L0034));
        [|java:text:ParsePosition|] v1 @varname [|position|] @scope ((L0006,L0034));


        v2;
        v3;
        v4;
      
#L0f3aac.   v1:= new [|java:text:ParsePosition|];
#L0f3ab0.   v2:= 0  @length 4;
#L0f3ab2.   call temp:=  [|java:text:ParsePosition.<init>|](v1, v2) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f3ab8.   call temp:=  [|java:text:DateFormat.parse|](v5, v6, v1) @signature [|Ljava/text/DateFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;|] @classDescriptor [|java:text:DateFormat|] @type virtual;
#L0f3abe.   v0:= temp  @type object;
#L0f3ac0.   call temp:=  [|java:text:ParsePosition.getIndex|](v1) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f3ac6.   v2:= temp;
#L0f3ac8.   if v2 != 0 then goto L0f3b12;
#L0f3acc.   v2:= new [|java:text:ParseException|];
#L0f3ad0.   v3:= new [|java:lang:StringBuilder|];
#L0f3ad4.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f3ada.   v4:= "Unparseable date: \"" @type (object, string);
#L0f3ade.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f3ae4.   v3:= temp  @type object;
#L0f3ae6.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f3aec.   v3:= temp  @type object;
#L0f3aee.   v4:= "\"" @type (object, string);
#L0f3af2.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f3af8.   v3:= temp  @type object;
#L0f3afa.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f3b00.   v3:= temp  @type object;
#L0f3b02.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v1) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f3b08.   v4:= temp;
#L0f3b0a.   call temp:=  [|java:text:ParseException.<init>|](v2, v3, v4) @signature [|Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:ParseException|] @type direct;
#L0f3b10.   throw v2;
#L0f3b12.   return v0  @type object;

   }
    procedure [|java:util:Date|] [|java:text:DateFormat.parse|] ([|java:lang:String|] v0 @type (object), [|java:text:ParsePosition|] v1 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:text:DateFormat.parseObject|] ([|java:text:DateFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:text:ParsePosition|] v3 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.parseObject:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0f3b24.   call temp:=  [|java:text:DateFormat.parse|](v1, v2, v3) @signature [|Ljava/text/DateFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;|] @classDescriptor [|java:text:DateFormat|] @type virtual;
#L0f3b2a.   v0:= temp  @type object;
#L0f3b2c.   return v0  @type object;

   }
    procedure [|void|] [|java:text:DateFormat.setCalendar|] ([|java:text:DateFormat|] v0 @type (this), [|java:util:Calendar|] v1 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.setCalendar:(Ljava/util/Calendar;)V|] @Access PUBLIC {
      local temp ;


      
#L0f3b40.   v0.[|java:text:DateFormat.calendar|]  := v1 @type object;
#L0f3b44.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormat.setLenient|] ([|java:text:DateFormat|] v1 @type (this), [|boolean|] v2) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.setLenient:(Z)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f3b58.   v0:= v1.[|java:text:DateFormat.calendar|]   @type object;
#L0f3b5c.   call temp:=  [|java:util:Calendar.setLenient|](v0, v2) @signature [|Ljava/util/Calendar;.setLenient:(Z)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3b62.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormat.setNumberFormat|] ([|java:text:DateFormat|] v0 @type (this), [|java:text:NumberFormat|] v1 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.setNumberFormat:(Ljava/text/NumberFormat;)V|] @Access PUBLIC {
      local temp ;


      
#L0f3b74.   v0.[|java:text:DateFormat.numberFormat|]  := v1 @type object;
#L0f3b78.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormat.setTimeZone|] ([|java:text:DateFormat|] v1 @type (this), [|java:util:TimeZone|] v2 @type (object)) @owner [|java:text:DateFormat|] @signature [|Ljava/text/DateFormat;.setTimeZone:(Ljava/util/TimeZone;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f3b8c.   v0:= v1.[|java:text:DateFormat.calendar|]   @type object;
#L0f3b90.   call temp:=  [|java:util:Calendar.setTimeZone|](v0, v2) @signature [|Ljava/util/Calendar;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f3b96.   return @void ;

   }
record [|java:text:DateFormatSymbols|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|], [|java:lang:Cloneable|] {
      [|java:lang:String|][] [|java:text:DateFormatSymbols.ampms|]    @AccessFlag ;
      [|boolean|] [|java:text:DateFormatSymbols.customZoneStrings|]    @AccessFlag TRANSIENT;
      [|java:lang:String|][] [|java:text:DateFormatSymbols.eras|]    @AccessFlag ;
      [|java:lang:String|] [|java:text:DateFormatSymbols.localPatternChars|]    @AccessFlag PRIVATE;
      [|java:util:Locale|] [|java:text:DateFormatSymbols.locale|]    @AccessFlag FINAL_TRANSIENT;
      [|java:lang:String|][] [|java:text:DateFormatSymbols.longStandAloneMonths|]    @AccessFlag TRANSIENT;
      [|java:lang:String|][] [|java:text:DateFormatSymbols.longStandAloneWeekdays|]    @AccessFlag TRANSIENT;
      [|java:lang:String|][] [|java:text:DateFormatSymbols.months|]    @AccessFlag ;
      [|java:lang:String|][] [|java:text:DateFormatSymbols.shortMonths|]    @AccessFlag ;
      [|java:lang:String|][] [|java:text:DateFormatSymbols.shortStandAloneMonths|]    @AccessFlag TRANSIENT;
      [|java:lang:String|][] [|java:text:DateFormatSymbols.shortStandAloneWeekdays|]    @AccessFlag TRANSIENT;
      [|java:lang:String|][] [|java:text:DateFormatSymbols.shortWeekdays|]    @AccessFlag ;
      [|java:lang:String|][] [|java:text:DateFormatSymbols.weekdays|]    @AccessFlag ;
      [|java:lang:String|][][] [|java:text:DateFormatSymbols.zoneStrings|]    @AccessFlag ;
   }
      global [|long|] @@[|java:text:DateFormatSymbols.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:DateFormatSymbols.<init>|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        v0;
      
#L0f3ba8.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f3bae.   v0:= temp  @type object;
#L0f3bb0.   call temp:=  [|java:text:DateFormatSymbols.<init>|](v1, v0) @signature [|Ljava/text/DateFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DateFormatSymbols|] @type direct;
#L0f3bb6.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.<init>|] ([|java:text:DateFormatSymbols|] v2 @type (this), [|java:util:Locale|] v3 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|libcore:icu:LocaleData|] v0 @varname [|localeData|] @scope ((L000d,L0036));


        v1;
      
#L0f3bc8.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f3bce.   v2.[|java:text:DateFormatSymbols.locale|]  := v3 @type object;
#L0f3bd2.   v1:= "GyMdkHmsSEDFwWahKzZLc" @type (object, string);
#L0f3bd6.   v2.[|java:text:DateFormatSymbols.localPatternChars|]  := v1 @type object;
#L0f3bda.   call temp:=  [|libcore:icu:LocaleData.get|](v3) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f3be0.   v0:= temp  @type object;
#L0f3be2.   v1:= v0.[|libcore:icu:LocaleData.amPm|]   @type object;
#L0f3be6.   v2.[|java:text:DateFormatSymbols.ampms|]  := v1 @type object;
#L0f3bea.   v1:= v0.[|libcore:icu:LocaleData.eras|]   @type object;
#L0f3bee.   v2.[|java:text:DateFormatSymbols.eras|]  := v1 @type object;
#L0f3bf2.   v1:= v0.[|libcore:icu:LocaleData.longMonthNames|]   @type object;
#L0f3bf6.   v2.[|java:text:DateFormatSymbols.months|]  := v1 @type object;
#L0f3bfa.   v1:= v0.[|libcore:icu:LocaleData.shortMonthNames|]   @type object;
#L0f3bfe.   v2.[|java:text:DateFormatSymbols.shortMonths|]  := v1 @type object;
#L0f3c02.   v1:= v0.[|libcore:icu:LocaleData.longWeekdayNames|]   @type object;
#L0f3c06.   v2.[|java:text:DateFormatSymbols.weekdays|]  := v1 @type object;
#L0f3c0a.   v1:= v0.[|libcore:icu:LocaleData.shortWeekdayNames|]   @type object;
#L0f3c0e.   v2.[|java:text:DateFormatSymbols.shortWeekdays|]  := v1 @type object;
#L0f3c12.   v1:= v0.[|libcore:icu:LocaleData.longStandAloneMonthNames|]   @type object;
#L0f3c16.   v2.[|java:text:DateFormatSymbols.longStandAloneMonths|]  := v1 @type object;
#L0f3c1a.   v1:= v0.[|libcore:icu:LocaleData.shortStandAloneMonthNames|]   @type object;
#L0f3c1e.   v2.[|java:text:DateFormatSymbols.shortStandAloneMonths|]  := v1 @type object;
#L0f3c22.   v1:= v0.[|libcore:icu:LocaleData.longStandAloneWeekdayNames|]   @type object;
#L0f3c26.   v2.[|java:text:DateFormatSymbols.longStandAloneWeekdays|]  := v1 @type object;
#L0f3c2a.   v1:= v0.[|libcore:icu:LocaleData.shortStandAloneWeekdayNames|]   @type object;
#L0f3c2e.   v2.[|java:text:DateFormatSymbols.shortStandAloneWeekdays|]  := v1 @type object;
#L0f3c32.   return @void ;

   }
    procedure [|java:lang:String|][][] [|java:text:DateFormatSymbols.clone2dStringArray|] ([|java:lang:String|][][] v3 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.clone2dStringArray:([[Ljava/lang/String;)[[Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0004,L0015));
        [|java:lang:String|][][] v1 @varname [|result|] @scope ((L0003,L0015));

        v2;
      
#L0f3c44.   v2:= v3.length;
#L0f3c46.   v1:= new [|java:lang:String|][v2][];
#L0f3c4a.   v0:= 0  @length 4;
#L0f3c4c.   v2:= v3.length;
#L0f3c4e.   if v0 >= v2 then goto L0f3c6c;
#L0f3c52.   v2:= v3[v0]  @type object;
#L0f3c56.   call temp:=  [|java:lang:String[].clone|](v2) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f3c5c.   v2:= temp  @type object;
#L0f3c5e.   v2:= ([|java:lang:String|][])v2;
#L0f3c62.   v1[v0]:= v2  @type object;
#L0f3c66.   v0:= v0 + 1;
#L0f3c6a.   goto L0f3c4c;
#L0f3c6c.   return v1  @type object;

   }
    procedure [|java:util:Locale|][] [|java:text:DateFormatSymbols.getAvailableLocales|] () @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getAvailableLocales:()[Ljava/util/Locale;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f3c80.   call temp:=  [|libcore:icu:ICU.getAvailableDateFormatSymbolsLocales|]() @signature [|Llibcore/icu/ICU;.getAvailableDateFormatSymbolsLocales:()[Ljava/util/Locale;|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0f3c86.   v0:= temp  @type object;
#L0f3c88.   return v0  @type object;

   }
    procedure [|java:text:DateFormatSymbols|] [|java:text:DateFormatSymbols.getInstance|] () @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getInstance:()Ljava/text/DateFormatSymbols;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;
        v0;
      
#L0f3c9c.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f3ca2.   v0:= temp  @type object;
#L0f3ca4.   call temp:=  [|java:text:DateFormatSymbols.getInstance|](v0) @signature [|Ljava/text/DateFormatSymbols;.getInstance:(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;|] @classDescriptor [|java:text:DateFormatSymbols|] @type static;
#L0f3caa.   v0:= temp  @type object;
#L0f3cac.   return v0  @type object;

   }
    procedure [|java:text:DateFormatSymbols|] [|java:text:DateFormatSymbols.getInstance|] ([|java:util:Locale|] v2 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getInstance:(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;|] @Access PUBLIC_STATIC_FINAL {
      local temp ;

        v0;
        v1;
      
#L0f3cc0.   if v2 != 0 then goto L0f3cd4;
#L0f3cc4.   v0:= new [|java:lang:NullPointerException|];
#L0f3cc8.   v1:= "locale == null" @type (object, string);
#L0f3ccc.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f3cd2.   throw v0;
#L0f3cd4.   v0:= new [|java:text:DateFormatSymbols|];
#L0f3cd8.   call temp:=  [|java:text:DateFormatSymbols.<init>|](v0, v2) @signature [|Ljava/text/DateFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DateFormatSymbols|] @type direct;
#L0f3cde.   return v0  @type object;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.readObject|] ([|java:text:DateFormatSymbols|] v1 @type (this), [|java:io:ObjectInputStream|] v2 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;


        v0;
      
#L0f3cf0.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v2) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0f3cf6.   v0:= v1.[|java:text:DateFormatSymbols.months|]   @type object;
#L0f3cfa.   v1.[|java:text:DateFormatSymbols.longStandAloneMonths|]  := v0 @type object;
#L0f3cfe.   v0:= v1.[|java:text:DateFormatSymbols.shortMonths|]   @type object;
#L0f3d02.   v1.[|java:text:DateFormatSymbols.shortStandAloneMonths|]  := v0 @type object;
#L0f3d06.   v0:= v1.[|java:text:DateFormatSymbols.weekdays|]   @type object;
#L0f3d0a.   v1.[|java:text:DateFormatSymbols.longStandAloneWeekdays|]  := v0 @type object;
#L0f3d0e.   v0:= v1.[|java:text:DateFormatSymbols.shortWeekdays|]   @type object;
#L0f3d12.   v1.[|java:text:DateFormatSymbols.shortStandAloneWeekdays|]  := v0 @type object;
#L0f3d16.   return @void ;

   }
    procedure [|boolean|] [|java:text:DateFormatSymbols.timeZoneStringsEqual|] ([|java:text:DateFormatSymbols|] v2 @type (object), [|java:text:DateFormatSymbols|] v3 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.timeZoneStringsEqual:(Ljava/text/DateFormatSymbols;Ljava/text/DateFormatSymbols;)Z|] @Access PRIVATE_STATIC {
      local temp ;


        v0;
        v1;
      
#L0f3d28.   v0:= v2.[|java:text:DateFormatSymbols.zoneStrings|]   @type object;
#L0f3d2c.   if v0 != 0 then goto L0f3d50;
#L0f3d30.   v0:= v3.[|java:text:DateFormatSymbols.zoneStrings|]   @type object;
#L0f3d34.   if v0 != 0 then goto L0f3d50;
#L0f3d38.   v0:= v2.[|java:text:DateFormatSymbols.locale|]   @type object;
#L0f3d3c.   v1:= v3.[|java:text:DateFormatSymbols.locale|]   @type object;
#L0f3d40.   call temp:=  [|java:util:Locale.equals|](v0, v1) @signature [|Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Locale|] @type virtual;
#L0f3d46.   v0:= temp;
#L0f3d48.   if v0 == 0 then goto L0f3d50;
#L0f3d4c.   v0:= 1  @length 4;
#L0f3d4e.   return v0;
#L0f3d50.   call temp:=  [|java:text:DateFormatSymbols.internalZoneStrings|](v2) @signature [|Ljava/text/DateFormatSymbols;.internalZoneStrings:()[[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f3d56.   v0:= temp  @type object;
#L0f3d58.   call temp:=  [|java:text:DateFormatSymbols.internalZoneStrings|](v3) @signature [|Ljava/text/DateFormatSymbols;.internalZoneStrings:()[[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f3d5e.   v1:= temp  @type object;
#L0f3d60.   call temp:=  [|java:util:Arrays.deepEquals|](v0, v1) @signature [|Ljava/util/Arrays;.deepEquals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f3d66.   v0:= temp;
#L0f3d68.   goto L0f3d4e;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.writeObject|] ([|java:text:DateFormatSymbols|] v0 @type (this), [|java:io:ObjectOutputStream|] v1 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;


      
#L0f3d7c.   call temp:=  [|java:text:DateFormatSymbols.internalZoneStrings|](v0) @signature [|Ljava/text/DateFormatSymbols;.internalZoneStrings:()[[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f3d82.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v1) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f3d88.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:text:DateFormatSymbols.clone|] ([|java:text:DateFormatSymbols|] v2 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:lang:CloneNotSupportedException|] v0 @varname [|e|] @scope ((L0006,L000c));

        v1;
      
#L0f3d9c.   call temp:=  [|java:lang:Object.clone|](v2) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0f3da2.   v1:= temp  @type object;
#L0f3da4.   return v1  @type object;
#L0f3da6.   v0:= Exception  @type object;
#L0f3da8.   v1:= new [|java:lang:AssertionError|];
#L0f3dac.   call temp:=  [|java:lang:AssertionError.<init>|](v1) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0f3db2.   throw v1;
  catch  [|java:lang:CloneNotSupportedException|] @[L0f3d9c..L0f3da2] goto L0f3da6;

   }
    procedure [|boolean|] [|java:text:DateFormatSymbols.equals|] ([|java:text:DateFormatSymbols|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:DateFormatSymbols|] v0 @varname [|rhs|] @scope ((L000e,L005c));


        v1;
        v2;
        v3;
        v4;
      
#L0f3dd4.   v1:= 1  @length 4;
#L0f3dd6.   v2:= 0  @length 4;
#L0f3dd8.   if v5 != v6 then goto L0f3dde;
#L0f3ddc.   return v1;
#L0f3dde.   v3:= instanceof @varname v6 @type [|java:text:DateFormatSymbols|];
#L0f3de2.   if v3 != 0 then goto L0f3dea;
#L0f3de6.   v1:= v2;
#L0f3de8.   goto L0f3ddc;
#L0f3dea.   v0:= v6  @type object;
#L0f3dec.   v0:= ([|java:text:DateFormatSymbols|])v0;
#L0f3df0.   v3:= v5.[|java:text:DateFormatSymbols.localPatternChars|]   @type object;
#L0f3df4.   v4:= v0.[|java:text:DateFormatSymbols.localPatternChars|]   @type object;
#L0f3df8.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f3dfe.   v3:= temp;
#L0f3e00.   if v3 == 0 then goto L0f3e88;
#L0f3e04.   v3:= v5.[|java:text:DateFormatSymbols.ampms|]   @type object;
#L0f3e08.   v4:= v0.[|java:text:DateFormatSymbols.ampms|]   @type object;
#L0f3e0c.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f3e12.   v3:= temp;
#L0f3e14.   if v3 == 0 then goto L0f3e88;
#L0f3e18.   v3:= v5.[|java:text:DateFormatSymbols.eras|]   @type object;
#L0f3e1c.   v4:= v0.[|java:text:DateFormatSymbols.eras|]   @type object;
#L0f3e20.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f3e26.   v3:= temp;
#L0f3e28.   if v3 == 0 then goto L0f3e88;
#L0f3e2c.   v3:= v5.[|java:text:DateFormatSymbols.months|]   @type object;
#L0f3e30.   v4:= v0.[|java:text:DateFormatSymbols.months|]   @type object;
#L0f3e34.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f3e3a.   v3:= temp;
#L0f3e3c.   if v3 == 0 then goto L0f3e88;
#L0f3e40.   v3:= v5.[|java:text:DateFormatSymbols.shortMonths|]   @type object;
#L0f3e44.   v4:= v0.[|java:text:DateFormatSymbols.shortMonths|]   @type object;
#L0f3e48.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f3e4e.   v3:= temp;
#L0f3e50.   if v3 == 0 then goto L0f3e88;
#L0f3e54.   v3:= v5.[|java:text:DateFormatSymbols.shortWeekdays|]   @type object;
#L0f3e58.   v4:= v0.[|java:text:DateFormatSymbols.shortWeekdays|]   @type object;
#L0f3e5c.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f3e62.   v3:= temp;
#L0f3e64.   if v3 == 0 then goto L0f3e88;
#L0f3e68.   v3:= v5.[|java:text:DateFormatSymbols.weekdays|]   @type object;
#L0f3e6c.   v4:= v0.[|java:text:DateFormatSymbols.weekdays|]   @type object;
#L0f3e70.   call temp:=  [|java:util:Arrays.equals|](v3, v4) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f3e76.   v3:= temp;
#L0f3e78.   if v3 == 0 then goto L0f3e88;
#L0f3e7c.   call temp:=  [|java:text:DateFormatSymbols.timeZoneStringsEqual|](v5, v0) @signature [|Ljava/text/DateFormatSymbols;.timeZoneStringsEqual:(Ljava/text/DateFormatSymbols;Ljava/text/DateFormatSymbols;)Z|] @classDescriptor [|java:text:DateFormatSymbols|] @type static;
#L0f3e82.   v3:= temp;
#L0f3e84.   if v3 != 0 then goto L0f3ddc;
#L0f3e88.   v1:= v2;
#L0f3e8a.   goto L0f3ddc;

   }
    procedure [|java:lang:String|][] [|java:text:DateFormatSymbols.getAmPmStrings|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getAmPmStrings:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3e9c.   v0:= v1.[|java:text:DateFormatSymbols.ampms|]   @type object;
#L0f3ea0.   call temp:=  [|java:lang:String[].clone|](v0) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f3ea6.   v0:= temp  @type object;
#L0f3ea8.   v0:= ([|java:lang:String|][])v0;
#L0f3eac.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|java:text:DateFormatSymbols.getEras|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getEras:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3ec0.   v0:= v1.[|java:text:DateFormatSymbols.eras|]   @type object;
#L0f3ec4.   call temp:=  [|java:lang:String[].clone|](v0) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f3eca.   v0:= temp  @type object;
#L0f3ecc.   v0:= ([|java:lang:String|][])v0;
#L0f3ed0.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:DateFormatSymbols.getLocalPatternChars|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getLocalPatternChars:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3ee4.   v0:= v1.[|java:text:DateFormatSymbols.localPatternChars|]   @type object;
#L0f3ee8.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|java:text:DateFormatSymbols.getMonths|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getMonths:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3efc.   v0:= v1.[|java:text:DateFormatSymbols.months|]   @type object;
#L0f3f00.   call temp:=  [|java:lang:String[].clone|](v0) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f3f06.   v0:= temp  @type object;
#L0f3f08.   v0:= ([|java:lang:String|][])v0;
#L0f3f0c.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|java:text:DateFormatSymbols.getShortMonths|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getShortMonths:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3f20.   v0:= v1.[|java:text:DateFormatSymbols.shortMonths|]   @type object;
#L0f3f24.   call temp:=  [|java:lang:String[].clone|](v0) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f3f2a.   v0:= temp  @type object;
#L0f3f2c.   v0:= ([|java:lang:String|][])v0;
#L0f3f30.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|java:text:DateFormatSymbols.getShortWeekdays|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getShortWeekdays:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3f44.   v0:= v1.[|java:text:DateFormatSymbols.shortWeekdays|]   @type object;
#L0f3f48.   call temp:=  [|java:lang:String[].clone|](v0) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f3f4e.   v0:= temp  @type object;
#L0f3f50.   v0:= ([|java:lang:String|][])v0;
#L0f3f54.   return v0  @type object;

   }
    procedure [|java:lang:String|][] [|java:text:DateFormatSymbols.getWeekdays|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getWeekdays:()[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3f68.   v0:= v1.[|java:text:DateFormatSymbols.weekdays|]   @type object;
#L0f3f6c.   call temp:=  [|java:lang:String[].clone|](v0) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f3f72.   v0:= temp  @type object;
#L0f3f74.   v0:= ([|java:lang:String|][])v0;
#L0f3f78.   return v0  @type object;

   }
    procedure [|java:lang:String|][][] [|java:text:DateFormatSymbols.getZoneStrings|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.getZoneStrings:()[[Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f3f8c.   call temp:=  [|java:text:DateFormatSymbols.internalZoneStrings|](v1) @signature [|Ljava/text/DateFormatSymbols;.internalZoneStrings:()[[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f3f92.   v0:= temp  @type object;
#L0f3f94.   call temp:=  [|java:text:DateFormatSymbols.clone2dStringArray|](v0) @signature [|Ljava/text/DateFormatSymbols;.clone2dStringArray:([[Ljava/lang/String;)[[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type static;
#L0f3f9a.   v0:= temp  @type object;
#L0f3f9c.   return v0  @type object;

   }
    procedure [|int|] [|java:text:DateFormatSymbols.hashCode|] ([|java:text:DateFormatSymbols|] v8 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        [|java:lang:String|] v1 @varname [|element|] @scope ((L0012,L001a), (L0022,L002a), (L0032,L003a), (L0042,L004a), (L0052,L005a), (L0062,L006a), (L0071,L0086));
        [|java:lang:String|][] v0 @varname [|arr$|] @scope ((L000c,L006b), (L006b,L0087));
        [|int|] v4 @varname [|j|] @scope ((L0072,L0086));
        [|int|] v2 @varname [|hashCode|] @scope ((L000a,L0087));
        [|int|] v3 @varname [|i$|] @scope ((L000e,L0087));
        [|int|] v5 @varname [|len$|] @scope ((L000d,L0087));
        [|java:lang:String|][][] v6 @varname [|zoneStrings|] @scope ((L0004,L0087));

        v7;
      
#L0f3fb0.   call temp:=  [|java:text:DateFormatSymbols.internalZoneStrings|](v8) @signature [|Ljava/text/DateFormatSymbols;.internalZoneStrings:()[[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f3fb6.   v6:= temp  @type object;
#L0f3fb8.   v7:= v8.[|java:text:DateFormatSymbols.localPatternChars|]   @type object;
#L0f3fbc.   call temp:=  [|java:lang:String.hashCode|](v7) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f3fc2.   v2:= temp;
#L0f3fc4.   v0:= v8.[|java:text:DateFormatSymbols.ampms|]   @type object;
#L0f3fc8.   v5:= v0.length;
#L0f3fca.   v3:= 0  @length 4;
#L0f3fcc.   if v3 >= v5 then goto L0f3fe4;
#L0f3fd0.   v1:= v0[v3]  @type object;
#L0f3fd4.   call temp:=  [|java:lang:String.hashCode|](v1) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f3fda.   v7:= temp;
#L0f3fdc.   v2:= v2 + v7  @type int;
#L0f3fde.   v3:= v3 + 1;
#L0f3fe2.   goto L0f3fcc;
#L0f3fe4.   v0:= v8.[|java:text:DateFormatSymbols.eras|]   @type object;
#L0f3fe8.   v5:= v0.length;
#L0f3fea.   v3:= 0  @length 4;
#L0f3fec.   if v3 >= v5 then goto L0f4004;
#L0f3ff0.   v1:= v0[v3]  @type object;
#L0f3ff4.   call temp:=  [|java:lang:String.hashCode|](v1) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f3ffa.   v7:= temp;
#L0f3ffc.   v2:= v2 + v7  @type int;
#L0f3ffe.   v3:= v3 + 1;
#L0f4002.   goto L0f3fec;
#L0f4004.   v0:= v8.[|java:text:DateFormatSymbols.months|]   @type object;
#L0f4008.   v5:= v0.length;
#L0f400a.   v3:= 0  @length 4;
#L0f400c.   if v3 >= v5 then goto L0f4024;
#L0f4010.   v1:= v0[v3]  @type object;
#L0f4014.   call temp:=  [|java:lang:String.hashCode|](v1) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f401a.   v7:= temp;
#L0f401c.   v2:= v2 + v7  @type int;
#L0f401e.   v3:= v3 + 1;
#L0f4022.   goto L0f400c;
#L0f4024.   v0:= v8.[|java:text:DateFormatSymbols.shortMonths|]   @type object;
#L0f4028.   v5:= v0.length;
#L0f402a.   v3:= 0  @length 4;
#L0f402c.   if v3 >= v5 then goto L0f4044;
#L0f4030.   v1:= v0[v3]  @type object;
#L0f4034.   call temp:=  [|java:lang:String.hashCode|](v1) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f403a.   v7:= temp;
#L0f403c.   v2:= v2 + v7  @type int;
#L0f403e.   v3:= v3 + 1;
#L0f4042.   goto L0f402c;
#L0f4044.   v0:= v8.[|java:text:DateFormatSymbols.shortWeekdays|]   @type object;
#L0f4048.   v5:= v0.length;
#L0f404a.   v3:= 0  @length 4;
#L0f404c.   if v3 >= v5 then goto L0f4064;
#L0f4050.   v1:= v0[v3]  @type object;
#L0f4054.   call temp:=  [|java:lang:String.hashCode|](v1) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f405a.   v7:= temp;
#L0f405c.   v2:= v2 + v7  @type int;
#L0f405e.   v3:= v3 + 1;
#L0f4062.   goto L0f404c;
#L0f4064.   v0:= v8.[|java:text:DateFormatSymbols.weekdays|]   @type object;
#L0f4068.   v5:= v0.length;
#L0f406a.   v3:= 0  @length 4;
#L0f406c.   if v3 >= v5 then goto L0f4084;
#L0f4070.   v1:= v0[v3]  @type object;
#L0f4074.   call temp:=  [|java:lang:String.hashCode|](v1) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f407a.   v7:= temp;
#L0f407c.   v2:= v2 + v7  @type int;
#L0f407e.   v3:= v3 + 1;
#L0f4082.   goto L0f406c;
#L0f4084.   v0:= v6  @type object;
#L0f4086.   v5:= v0.length;
#L0f4088.   v3:= 0  @length 4;
#L0f408a.   if v3 >= v5 then goto L0f40bc;
#L0f408e.   v1:= v0[v3]  @type object;
#L0f4092.   v4:= 0  @length 4;
#L0f4094.   v7:= v1.length;
#L0f4096.   if v4 >= v7 then goto L0f40b6;
#L0f409a.   v7:= v1[v4]  @type object;
#L0f409e.   if v7 == 0 then goto L0f40b0;
#L0f40a2.   v7:= v1[v4]  @type object;
#L0f40a6.   call temp:=  [|java:lang:String.hashCode|](v7) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f40ac.   v7:= temp;
#L0f40ae.   v2:= v2 + v7  @type int;
#L0f40b0.   v4:= v4 + 1;
#L0f40b4.   goto L0f4094;
#L0f40b6.   v3:= v3 + 1;
#L0f40ba.   goto L0f408a;
#L0f40bc.   return v2;

   }
    procedure [|java:lang:String|][][] [|java:text:DateFormatSymbols.internalZoneStrings|] ([|java:text:DateFormatSymbols|] v1 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.internalZoneStrings:()[[Ljava/lang/String;|] @Access DECLARED_SYNCHRONIZED {
      local temp ;

        v0;
      
#L0f40d0.   (@monitorenter v1)
#L0f40d2.   v0:= v1.[|java:text:DateFormatSymbols.zoneStrings|]   @type object;
#L0f40d6.   if v0 != 0 then goto L0f40ea;
#L0f40da.   v0:= v1.[|java:text:DateFormatSymbols.locale|]   @type object;
#L0f40de.   call temp:=  [|libcore:icu:TimeZones.getZoneStrings|](v0) @signature [|Llibcore/icu/TimeZones;.getZoneStrings:(Ljava/util/Locale;)[[Ljava/lang/String;|] @classDescriptor [|libcore:icu:TimeZones|] @type static;
#L0f40e4.   v0:= temp  @type object;
#L0f40e6.   v1.[|java:text:DateFormatSymbols.zoneStrings|]  := v0 @type object;
#L0f40ea.   v0:= v1.[|java:text:DateFormatSymbols.zoneStrings|]   @type object;
#L0f40ee.   (@monitorexit v1)
#L0f40f0.   return v0  @type object;
#L0f40f2.   v0:= Exception  @type object;
#L0f40f4.   (@monitorexit v1)
#L0f40f6.   throw v0;
  catch  [|any|] @[L0f40d2..L0f40ee] goto L0f40f2;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.setAmPmStrings|] ([|java:text:DateFormatSymbols|] v1 @type (this), [|java:lang:String|][] v2 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.setAmPmStrings:([Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f4114.   call temp:=  [|java:lang:String[].clone|](v2) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f411a.   v0:= temp  @type object;
#L0f411c.   v0:= ([|java:lang:String|][])v0;
#L0f4120.   v1.[|java:text:DateFormatSymbols.ampms|]  := v0 @type object;
#L0f4124.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.setEras|] ([|java:text:DateFormatSymbols|] v1 @type (this), [|java:lang:String|][] v2 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.setEras:([Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f4138.   call temp:=  [|java:lang:String[].clone|](v2) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f413e.   v0:= temp  @type object;
#L0f4140.   v0:= ([|java:lang:String|][])v0;
#L0f4144.   v1.[|java:text:DateFormatSymbols.eras|]  := v0 @type object;
#L0f4148.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.setLocalPatternChars|] ([|java:text:DateFormatSymbols|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.setLocalPatternChars:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f415c.   if v3 != 0 then goto L0f4170;
#L0f4160.   v0:= new [|java:lang:NullPointerException|];
#L0f4164.   v1:= "data == null" @type (object, string);
#L0f4168.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f416e.   throw v0;
#L0f4170.   v2.[|java:text:DateFormatSymbols.localPatternChars|]  := v3 @type object;
#L0f4174.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.setMonths|] ([|java:text:DateFormatSymbols|] v1 @type (this), [|java:lang:String|][] v2 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.setMonths:([Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f4188.   call temp:=  [|java:lang:String[].clone|](v2) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f418e.   v0:= temp  @type object;
#L0f4190.   v0:= ([|java:lang:String|][])v0;
#L0f4194.   v1.[|java:text:DateFormatSymbols.months|]  := v0 @type object;
#L0f4198.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.setShortMonths|] ([|java:text:DateFormatSymbols|] v1 @type (this), [|java:lang:String|][] v2 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.setShortMonths:([Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f41ac.   call temp:=  [|java:lang:String[].clone|](v2) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f41b2.   v0:= temp  @type object;
#L0f41b4.   v0:= ([|java:lang:String|][])v0;
#L0f41b8.   v1.[|java:text:DateFormatSymbols.shortMonths|]  := v0 @type object;
#L0f41bc.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.setShortWeekdays|] ([|java:text:DateFormatSymbols|] v1 @type (this), [|java:lang:String|][] v2 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.setShortWeekdays:([Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f41d0.   call temp:=  [|java:lang:String[].clone|](v2) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f41d6.   v0:= temp  @type object;
#L0f41d8.   v0:= ([|java:lang:String|][])v0;
#L0f41dc.   v1.[|java:text:DateFormatSymbols.shortWeekdays|]  := v0 @type object;
#L0f41e0.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.setWeekdays|] ([|java:text:DateFormatSymbols|] v1 @type (this), [|java:lang:String|][] v2 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.setWeekdays:([Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f41f4.   call temp:=  [|java:lang:String[].clone|](v2) @signature [|[Ljava/lang/String;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:String[]|] @type virtual;
#L0f41fa.   v0:= temp  @type object;
#L0f41fc.   v0:= ([|java:lang:String|][])v0;
#L0f4200.   v1.[|java:text:DateFormatSymbols.weekdays|]  := v0 @type object;
#L0f4204.   return @void ;

   }
    procedure [|void|] [|java:text:DateFormatSymbols.setZoneStrings|] ([|java:text:DateFormatSymbols|] v7 @type (this), [|java:lang:String|][][] v8 @type (object)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.setZoneStrings:([[Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        [|java:lang:String|][] v3 @varname [|row|] @scope ((L0011,L0035));
        [|java:lang:String|][][] v0 @varname [|arr$|] @scope ((L000b,L003f));
        [|int|] v1 @varname [|i$|] @scope ((L000d,L003f));
        [|int|] v2 @varname [|len$|] @scope ((L000c,L003f));


        v4;
        v5;
        v6;
      
#L0f4218.   if v8 != 0 then goto L0f422c;
#L0f421c.   v4:= new [|java:lang:NullPointerException|];
#L0f4220.   v5:= "zoneStrings == null" @type (object, string);
#L0f4224.   call temp:=  [|java:lang:NullPointerException.<init>|](v4, v5) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f422a.   throw v4;
#L0f422c.   v0:= v8  @type object;
#L0f422e.   v2:= v0.length;
#L0f4230.   v1:= 0  @length 4;
#L0f4232.   if v1 >= v2 then goto L0f4282;
#L0f4236.   v3:= v0[v1]  @type object;
#L0f423a.   v4:= v3.length;
#L0f423c.   v5:= 5  @length 4;
#L0f423e.   if v4 >= v5 then goto L0f427c;
#L0f4242.   v4:= new [|java:lang:IllegalArgumentException|];
#L0f4246.   v5:= new [|java:lang:StringBuilder|];
#L0f424a.   call temp:=  [|java:lang:StringBuilder.<init>|](v5) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f4250.   call temp:=  [|java:util:Arrays.toString|](v3) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f4256.   v6:= temp  @type object;
#L0f4258.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f425e.   v5:= temp  @type object;
#L0f4260.   v6:= ".length < 5" @type (object, string);
#L0f4264.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f426a.   v5:= temp  @type object;
#L0f426c.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4272.   v5:= temp  @type object;
#L0f4274.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f427a.   throw v4;
#L0f427c.   v1:= v1 + 1;
#L0f4280.   goto L0f4232;
#L0f4282.   call temp:=  [|java:text:DateFormatSymbols.clone2dStringArray|](v8) @signature [|Ljava/text/DateFormatSymbols;.clone2dStringArray:([[Ljava/lang/String;)[[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type static;
#L0f4288.   v4:= temp  @type object;
#L0f428a.   v7.[|java:text:DateFormatSymbols.zoneStrings|]  := v4 @type object;
#L0f428e.   v4:= 1  @length 4;
#L0f4290.   v7.[|java:text:DateFormatSymbols.customZoneStrings|]  := v4 @boolean;
#L0f4294.   return @void ;

   }
    procedure [|java:lang:String|] [|java:text:DateFormatSymbols.toString|] ([|java:text:DateFormatSymbols|] v3 @type (this)) @owner [|java:text:DateFormatSymbols|] @signature [|Ljava/text/DateFormatSymbols;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L0f42a8.   v0:= new [|java:lang:StringBuilder|];
#L0f42ac.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f42b2.   call temp:=  [|java:lang:Object.getClass|](v3) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f42b8.   v1:= temp  @type object;
#L0f42ba.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0f42c0.   v1:= temp  @type object;
#L0f42c2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f42c8.   v0:= temp  @type object;
#L0f42ca.   v1:= "[amPmStrings=" @type (object, string);
#L0f42ce.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f42d4.   v0:= temp  @type object;
#L0f42d6.   v1:= v3.[|java:text:DateFormatSymbols.ampms|]   @type object;
#L0f42da.   call temp:=  [|java:util:Arrays.toString|](v1) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f42e0.   v1:= temp  @type object;
#L0f42e2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f42e8.   v0:= temp  @type object;
#L0f42ea.   v1:= ",customZoneStrings=" @type (object, string);
#L0f42ee.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f42f4.   v0:= temp  @type object;
#L0f42f6.   v1:= v3.[|java:text:DateFormatSymbols.customZoneStrings|]   @boolean;
#L0f42fa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4300.   v0:= temp  @type object;
#L0f4302.   v1:= ",eras=" @type (object, string);
#L0f4306.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f430c.   v0:= temp  @type object;
#L0f430e.   v1:= v3.[|java:text:DateFormatSymbols.eras|]   @type object;
#L0f4312.   call temp:=  [|java:util:Arrays.toString|](v1) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f4318.   v1:= temp  @type object;
#L0f431a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4320.   v0:= temp  @type object;
#L0f4322.   v1:= ",localPatternChars=" @type (object, string);
#L0f4326.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f432c.   v0:= temp  @type object;
#L0f432e.   v1:= v3.[|java:text:DateFormatSymbols.localPatternChars|]   @type object;
#L0f4332.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4338.   v0:= temp  @type object;
#L0f433a.   v1:= ",months=" @type (object, string);
#L0f433e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4344.   v0:= temp  @type object;
#L0f4346.   v1:= v3.[|java:text:DateFormatSymbols.months|]   @type object;
#L0f434a.   call temp:=  [|java:util:Arrays.toString|](v1) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f4350.   v1:= temp  @type object;
#L0f4352.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4358.   v0:= temp  @type object;
#L0f435a.   v1:= ",shortMonths=" @type (object, string);
#L0f435e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4364.   v0:= temp  @type object;
#L0f4366.   v1:= v3.[|java:text:DateFormatSymbols.shortMonths|]   @type object;
#L0f436a.   call temp:=  [|java:util:Arrays.toString|](v1) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f4370.   v1:= temp  @type object;
#L0f4372.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4378.   v0:= temp  @type object;
#L0f437a.   v1:= ",shortWeekdays=" @type (object, string);
#L0f437e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4384.   v0:= temp  @type object;
#L0f4386.   v1:= v3.[|java:text:DateFormatSymbols.shortWeekdays|]   @type object;
#L0f438a.   call temp:=  [|java:util:Arrays.toString|](v1) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f4390.   v1:= temp  @type object;
#L0f4392.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4398.   v0:= temp  @type object;
#L0f439a.   v1:= ",weekdays=" @type (object, string);
#L0f439e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f43a4.   v0:= temp  @type object;
#L0f43a6.   v1:= v3.[|java:text:DateFormatSymbols.weekdays|]   @type object;
#L0f43aa.   call temp:=  [|java:util:Arrays.toString|](v1) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f43b0.   v1:= temp  @type object;
#L0f43b2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f43b8.   v0:= temp  @type object;
#L0f43ba.   v1:= ",zoneStrings=[" @type (object, string);
#L0f43be.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f43c4.   v0:= temp  @type object;
#L0f43c6.   call temp:=  [|java:text:DateFormatSymbols.internalZoneStrings|](v3) @signature [|Ljava/text/DateFormatSymbols;.internalZoneStrings:()[[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f43cc.   v1:= temp  @type object;
#L0f43ce.   v2:= 0  @length 4;
#L0f43d0.   v1:= v1[v2]  @type object;
#L0f43d4.   call temp:=  [|java:util:Arrays.toString|](v1) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f43da.   v1:= temp  @type object;
#L0f43dc.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f43e2.   v0:= temp  @type object;
#L0f43e4.   v1:= "...]" @type (object, string);
#L0f43e8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f43ee.   v0:= temp  @type object;
#L0f43f0.   v1:= "]" @type (object, string);
#L0f43f4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f43fa.   v0:= temp  @type object;
#L0f43fc.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f4402.   v0:= temp  @type object;
#L0f4404.   return v0  @type object;

   }
record [|java:text:DecimalFormat|]  @type class @AccessFlag PUBLIC  extends [|java:text:NumberFormat|] {
      [|libcore:icu:NativeDecimalFormat|] [|java:text:DecimalFormat.ndf|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:math:RoundingMode|] [|java:text:DecimalFormat.roundingMode|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:text:DecimalFormatSymbols|] [|java:text:DecimalFormat.symbols|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|java:lang:Double|] @@[|java:text:DecimalFormat.NEGATIVE_ZERO_DOUBLE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:io:ObjectStreamField|][] @@[|java:text:DecimalFormat.serialPersistentFields|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:text:DecimalFormat.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:DecimalFormat.<clinit>|] () @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0f4418.   v0:= new [|java:lang:Double|];
#L0f441c.   v1:= -9223372036854775808L  @length wide_high16;
#L0f4420.   call temp:=  [|java:lang:Double.<init>|](v0, v1, v2) @signature [|Ljava/lang/Double;.<init>:(D)V|] @classDescriptor [|java:lang:Double|] @type direct;
#L0f4426.   @@[|java:text:DecimalFormat.NEGATIVE_ZERO_DOUBLE|] := v0  @type object;
#L0f442a.   v0:= 22  @length 16;
#L0f442e.   v0:= new [|java:io:ObjectStreamField|][v0];
#L0f4432.   v1:= 0  @length 4;
#L0f4434.   v2:= new [|java:io:ObjectStreamField|];
#L0f4438.   v3:= "positivePrefix" @type (object, string);
#L0f443c.   v4:= new [|java:lang:String|];
#L0f4440.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f4446.   v0[v1]:= v2  @type object;
#L0f444a.   v1:= 1  @length 4;
#L0f444c.   v2:= new [|java:io:ObjectStreamField|];
#L0f4450.   v3:= "positiveSuffix" @type (object, string);
#L0f4454.   v4:= new [|java:lang:String|];
#L0f4458.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f445e.   v0[v1]:= v2  @type object;
#L0f4462.   v1:= 2  @length 4;
#L0f4464.   v2:= new [|java:io:ObjectStreamField|];
#L0f4468.   v3:= "negativePrefix" @type (object, string);
#L0f446c.   v4:= new [|java:lang:String|];
#L0f4470.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f4476.   v0[v1]:= v2  @type object;
#L0f447a.   v1:= 3  @length 4;
#L0f447c.   v2:= new [|java:io:ObjectStreamField|];
#L0f4480.   v3:= "negativeSuffix" @type (object, string);
#L0f4484.   v4:= new [|java:lang:String|];
#L0f4488.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f448e.   v0[v1]:= v2  @type object;
#L0f4492.   v1:= 4  @length 4;
#L0f4494.   v2:= new [|java:io:ObjectStreamField|];
#L0f4498.   v3:= "posPrefixPattern" @type (object, string);
#L0f449c.   v4:= new [|java:lang:String|];
#L0f44a0.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f44a6.   v0[v1]:= v2  @type object;
#L0f44aa.   v1:= 5  @length 4;
#L0f44ac.   v2:= new [|java:io:ObjectStreamField|];
#L0f44b0.   v3:= "posSuffixPattern" @type (object, string);
#L0f44b4.   v4:= new [|java:lang:String|];
#L0f44b8.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f44be.   v0[v1]:= v2  @type object;
#L0f44c2.   v1:= 6  @length 4;
#L0f44c4.   v2:= new [|java:io:ObjectStreamField|];
#L0f44c8.   v3:= "negPrefixPattern" @type (object, string);
#L0f44cc.   v4:= new [|java:lang:String|];
#L0f44d0.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f44d6.   v0[v1]:= v2  @type object;
#L0f44da.   v1:= 7  @length 4;
#L0f44dc.   v2:= new [|java:io:ObjectStreamField|];
#L0f44e0.   v3:= "negSuffixPattern" @type (object, string);
#L0f44e4.   v4:= new [|java:lang:String|];
#L0f44e8.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f44ee.   v0[v1]:= v2  @type object;
#L0f44f2.   v1:= 8  @length 16;
#L0f44f6.   v2:= new [|java:io:ObjectStreamField|];
#L0f44fa.   v3:= "multiplier" @type (object, string);
#L0f44fe.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f4502.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f4508.   v0[v1]:= v2  @type object;
#L0f450c.   v1:= 9  @length 16;
#L0f4510.   v2:= new [|java:io:ObjectStreamField|];
#L0f4514.   v3:= "groupingSize" @type (object, string);
#L0f4518.   v4:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0f451c.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f4522.   v0[v1]:= v2  @type object;
#L0f4526.   v1:= 10  @length 16;
#L0f452a.   v2:= new [|java:io:ObjectStreamField|];
#L0f452e.   v3:= "groupingUsed" @type (object, string);
#L0f4532.   v4:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L0f4536.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f453c.   v0[v1]:= v2  @type object;
#L0f4540.   v1:= 11  @length 16;
#L0f4544.   v2:= new [|java:io:ObjectStreamField|];
#L0f4548.   v3:= "decimalSeparatorAlwaysShown" @type (object, string);
#L0f454c.   v4:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L0f4550.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f4556.   v0[v1]:= v2  @type object;
#L0f455a.   v1:= 12  @length 16;
#L0f455e.   v2:= new [|java:io:ObjectStreamField|];
#L0f4562.   v3:= "parseBigDecimal" @type (object, string);
#L0f4566.   v4:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L0f456a.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f4570.   v0[v1]:= v2  @type object;
#L0f4574.   v1:= 13  @length 16;
#L0f4578.   v2:= new [|java:io:ObjectStreamField|];
#L0f457c.   v3:= "roundingMode" @type (object, string);
#L0f4580.   v4:= new [|java:math:RoundingMode|];
#L0f4584.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f458a.   v0[v1]:= v2  @type object;
#L0f458e.   v1:= 14  @length 16;
#L0f4592.   v2:= new [|java:io:ObjectStreamField|];
#L0f4596.   v3:= "symbols" @type (object, string);
#L0f459a.   v4:= new [|java:text:DecimalFormatSymbols|];
#L0f459e.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f45a4.   v0[v1]:= v2  @type object;
#L0f45a8.   v1:= 15  @length 16;
#L0f45ac.   v2:= new [|java:io:ObjectStreamField|];
#L0f45b0.   v3:= "useExponentialNotation" @type (object, string);
#L0f45b4.   v4:= @@[|java:lang:Boolean.TYPE|]   @type object;
#L0f45b8.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f45be.   v0[v1]:= v2  @type object;
#L0f45c2.   v1:= 16  @length 16;
#L0f45c6.   v2:= new [|java:io:ObjectStreamField|];
#L0f45ca.   v3:= "minExponentDigits" @type (object, string);
#L0f45ce.   v4:= @@[|java:lang:Byte.TYPE|]   @type object;
#L0f45d2.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f45d8.   v0[v1]:= v2  @type object;
#L0f45dc.   v1:= 17  @length 16;
#L0f45e0.   v2:= new [|java:io:ObjectStreamField|];
#L0f45e4.   v3:= "maximumIntegerDigits" @type (object, string);
#L0f45e8.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f45ec.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f45f2.   v0[v1]:= v2  @type object;
#L0f45f6.   v1:= 18  @length 16;
#L0f45fa.   v2:= new [|java:io:ObjectStreamField|];
#L0f45fe.   v3:= "minimumIntegerDigits" @type (object, string);
#L0f4602.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f4606.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f460c.   v0[v1]:= v2  @type object;
#L0f4610.   v1:= 19  @length 16;
#L0f4614.   v2:= new [|java:io:ObjectStreamField|];
#L0f4618.   v3:= "maximumFractionDigits" @type (object, string);
#L0f461c.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f4620.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f4626.   v0[v1]:= v2  @type object;
#L0f462a.   v1:= 20  @length 16;
#L0f462e.   v2:= new [|java:io:ObjectStreamField|];
#L0f4632.   v3:= "minimumFractionDigits" @type (object, string);
#L0f4636.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f463a.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f4640.   v0[v1]:= v2  @type object;
#L0f4644.   v1:= 21  @length 16;
#L0f4648.   v2:= new [|java:io:ObjectStreamField|];
#L0f464c.   v3:= "serialVersionOnStream" @type (object, string);
#L0f4650.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f4654.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f465a.   v0[v1]:= v2  @type object;
#L0f465e.   @@[|java:text:DecimalFormat.serialPersistentFields|] := v0  @type object;
#L0f4662.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.<init>|] ([|java:text:DecimalFormat|] v2 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:util:Locale|] v0 @varname [|locale|] @scope ((L000b,L001c));

        v1;
      
#L0f4674.   call temp:=  [|java:text:NumberFormat.<init>|](v2) @signature [|Ljava/text/NumberFormat;.<init>:()V|] @classDescriptor [|java:text:NumberFormat|] @type direct;
#L0f467a.   v1:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0f467e.   v2.[|java:text:DecimalFormat.roundingMode|]  := v1 @type object;
#L0f4682.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f4688.   v0:= temp  @type object;
#L0f468a.   v1:= new [|java:text:DecimalFormatSymbols|];
#L0f468e.   call temp:=  [|java:text:DecimalFormatSymbols.<init>|](v1, v0) @signature [|Ljava/text/DecimalFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type direct;
#L0f4694.   v2.[|java:text:DecimalFormat.symbols|]  := v1 @type object;
#L0f4698.   call temp:=  [|libcore:icu:LocaleData.get|](v0) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f469e.   v1:= temp  @type object;
#L0f46a0.   v1:= v1.[|libcore:icu:LocaleData.numberPattern|]   @type object;
#L0f46a4.   call temp:=  [|java:text:DecimalFormat.initNative|](v2, v1) @signature [|Ljava/text/DecimalFormat;.initNative:(Ljava/lang/String;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f46aa.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.<init>|] ([|java:text:DecimalFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L0f46bc.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f46c2.   v0:= temp  @type object;
#L0f46c4.   call temp:=  [|java:text:DecimalFormat.<init>|](v1, v2, v0) @signature [|Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f46ca.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.<init>|] ([|java:text:DecimalFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:text:DecimalFormatSymbols|] v3 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0f46dc.   call temp:=  [|java:text:NumberFormat.<init>|](v1) @signature [|Ljava/text/NumberFormat;.<init>:()V|] @classDescriptor [|java:text:NumberFormat|] @type direct;
#L0f46e2.   v0:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0f46e6.   v1.[|java:text:DecimalFormat.roundingMode|]  := v0 @type object;
#L0f46ea.   call temp:=  [|java:text:DecimalFormatSymbols.clone|](v3) @signature [|Ljava/text/DecimalFormatSymbols;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f46f0.   v0:= temp  @type object;
#L0f46f2.   v0:= ([|java:text:DecimalFormatSymbols|])v0;
#L0f46f6.   v1.[|java:text:DecimalFormat.symbols|]  := v0 @type object;
#L0f46fa.   call temp:=  [|java:text:DecimalFormat.initNative|](v1, v2) @signature [|Ljava/text/DecimalFormat;.initNative:(Ljava/lang/String;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f4700.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.<init>|] ([|java:text:DecimalFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:util:Locale|] v3 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @Access CONSTRUCTOR {
      local temp ;



        v0;
      
#L0f4714.   call temp:=  [|java:text:NumberFormat.<init>|](v1) @signature [|Ljava/text/NumberFormat;.<init>:()V|] @classDescriptor [|java:text:NumberFormat|] @type direct;
#L0f471a.   v0:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0f471e.   v1.[|java:text:DecimalFormat.roundingMode|]  := v0 @type object;
#L0f4722.   v0:= new [|java:text:DecimalFormatSymbols|];
#L0f4726.   call temp:=  [|java:text:DecimalFormatSymbols.<init>|](v0, v3) @signature [|Ljava/text/DecimalFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type direct;
#L0f472c.   v1.[|java:text:DecimalFormat.symbols|]  := v0 @type object;
#L0f4730.   call temp:=  [|java:text:DecimalFormat.initNative|](v1, v2) @signature [|Ljava/text/DecimalFormat;.initNative:(Ljava/lang/String;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f4736.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.checkBufferAndFieldPosition|] ([|java:text:DecimalFormat|] v2 @type (this), [|java:lang:StringBuffer|] v3 @type (object), [|java:text:FieldPosition|] v4 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.checkBufferAndFieldPosition:(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)V|] @Access PRIVATE {
      local temp ;



        v0;
        v1;
      
#L0f4748.   if v3 != 0 then goto L0f475c;
#L0f474c.   v0:= new [|java:lang:NullPointerException|];
#L0f4750.   v1:= "buffer == null" @type (object, string);
#L0f4754.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f475a.   throw v0;
#L0f475c.   if v4 != 0 then goto L0f4770;
#L0f4760.   v0:= new [|java:lang:NullPointerException|];
#L0f4764.   v1:= "position == null" @type (object, string);
#L0f4768.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f476e.   throw v0;
#L0f4770.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.initNative|] ([|java:text:DecimalFormat|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.initNative:(Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        [|java:lang:IllegalArgumentException|] v0 @varname [|ex|] @scope ((L002f,L0035));


        v1;
        v2;
      
#L0f4784.   v1:= new [|libcore:icu:NativeDecimalFormat|];
#L0f4788.   v2:= v3.[|java:text:DecimalFormat.symbols|]   @type object;
#L0f478c.   call temp:=  [|libcore:icu:NativeDecimalFormat.<init>|](v1, v4, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.<init>:(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type direct;
#L0f4792.   v3.[|java:text:DecimalFormat.ndf|]  := v1 @type object;
#L0f4796.   v1:= v3.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f479a.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMaximumFractionDigits|](v1) @signature [|Llibcore/icu/NativeDecimalFormat;.getMaximumFractionDigits:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f47a0.   v1:= temp;
#L0f47a2.   call temp:=  [|java:text:NumberFormat.setMaximumFractionDigits|](v3, v1) @signature [|Ljava/text/NumberFormat;.setMaximumFractionDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f47a8.   v1:= v3.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f47ac.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMaximumIntegerDigits|](v1) @signature [|Llibcore/icu/NativeDecimalFormat;.getMaximumIntegerDigits:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f47b2.   v1:= temp;
#L0f47b4.   call temp:=  [|java:text:NumberFormat.setMaximumIntegerDigits|](v3, v1) @signature [|Ljava/text/NumberFormat;.setMaximumIntegerDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f47ba.   v1:= v3.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f47be.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMinimumFractionDigits|](v1) @signature [|Llibcore/icu/NativeDecimalFormat;.getMinimumFractionDigits:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f47c4.   v1:= temp;
#L0f47c6.   call temp:=  [|java:text:NumberFormat.setMinimumFractionDigits|](v3, v1) @signature [|Ljava/text/NumberFormat;.setMinimumFractionDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f47cc.   v1:= v3.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f47d0.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMinimumIntegerDigits|](v1) @signature [|Llibcore/icu/NativeDecimalFormat;.getMinimumIntegerDigits:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f47d6.   v1:= temp;
#L0f47d8.   call temp:=  [|java:text:NumberFormat.setMinimumIntegerDigits|](v3, v1) @signature [|Ljava/text/NumberFormat;.setMinimumIntegerDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f47de.   return @void ;
#L0f47e0.   v0:= Exception  @type object;
#L0f47e2.   v1:= new [|java:lang:IllegalArgumentException|];
#L0f47e6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f47ec.   throw v1;
  catch  [|java:lang:IllegalArgumentException|] @[L0f4784..L0f4796] goto L0f47e0;

   }
    procedure [|void|] [|java:text:DecimalFormat.readObject|] ([|java:text:DecimalFormat|] v13 @type (this), [|java:io:ObjectInputStream|] v14 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        [|java:io:ObjectInputStream$GetField|] v0 @varname [|fields|] @scope ((L000b,L00ed));
        [|int|] v1 @varname [|maximumFractionDigits|] @scope ((L00a2,L00ed));
        [|int|] v2 @varname [|maximumIntegerDigits|] @scope ((L0096,L00ed));
        [|int|] v3 @varname [|minimumFractionDigits|] @scope ((L00a8,L00ed));
        [|int|] v4 @varname [|minimumIntegerDigits|] @scope ((L009c,L00ed));


        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L0f4810.   v12:= 340  @length 16;
#L0f4814.   v11:= 309  @length 16;
#L0f4818.   v10:= 3  @length 4;
#L0f481a.   v9:= 1  @length 4;
#L0f481c.   v8:= 0  @length 4;
#L0f481e.   call temp:=  [|java:io:ObjectInputStream.readFields|](v14) @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0f4824.   v0:= temp  @type object;
#L0f4826.   v5:= "symbols" @type (object, string);
#L0f482a.   v6:= 0  @length 4;
#L0f482c.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v6) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f4832.   v5:= temp  @type object;
#L0f4834.   v5:= ([|java:text:DecimalFormatSymbols|])v5;
#L0f4838.   v13.[|java:text:DecimalFormat.symbols|]  := v5 @type object;
#L0f483c.   v5:= "" @type (object, string);
#L0f4840.   call temp:=  [|java:text:DecimalFormat.initNative|](v13, v5) @signature [|Ljava/text/DecimalFormat;.initNative:(Ljava/lang/String;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f4846.   v6:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f484a.   v5:= "positivePrefix" @type (object, string);
#L0f484e.   v7:= "" @type (object, string);
#L0f4852.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v7) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f4858.   v5:= temp  @type object;
#L0f485a.   v5:= ([|java:lang:String|])v5;
#L0f485e.   call temp:=  [|libcore:icu:NativeDecimalFormat.setPositivePrefix|](v6, v5) @signature [|Llibcore/icu/NativeDecimalFormat;.setPositivePrefix:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4864.   v6:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4868.   v5:= "positiveSuffix" @type (object, string);
#L0f486c.   v7:= "" @type (object, string);
#L0f4870.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v7) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f4876.   v5:= temp  @type object;
#L0f4878.   v5:= ([|java:lang:String|])v5;
#L0f487c.   call temp:=  [|libcore:icu:NativeDecimalFormat.setPositiveSuffix|](v6, v5) @signature [|Llibcore/icu/NativeDecimalFormat;.setPositiveSuffix:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4882.   v6:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4886.   v5:= "negativePrefix" @type (object, string);
#L0f488a.   v7:= "-" @type (object, string);
#L0f488e.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v7) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f4894.   v5:= temp  @type object;
#L0f4896.   v5:= ([|java:lang:String|])v5;
#L0f489a.   call temp:=  [|libcore:icu:NativeDecimalFormat.setNegativePrefix|](v6, v5) @signature [|Llibcore/icu/NativeDecimalFormat;.setNegativePrefix:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f48a0.   v6:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f48a4.   v5:= "negativeSuffix" @type (object, string);
#L0f48a8.   v7:= "" @type (object, string);
#L0f48ac.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v7) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f48b2.   v5:= temp  @type object;
#L0f48b4.   v5:= ([|java:lang:String|])v5;
#L0f48b8.   call temp:=  [|libcore:icu:NativeDecimalFormat.setNegativeSuffix|](v6, v5) @signature [|Llibcore/icu/NativeDecimalFormat;.setNegativeSuffix:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f48be.   v5:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f48c2.   v6:= "multiplier" @type (object, string);
#L0f48c6.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v9) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f48cc.   v6:= temp;
#L0f48ce.   call temp:=  [|libcore:icu:NativeDecimalFormat.setMultiplier|](v5, v6) @signature [|Llibcore/icu/NativeDecimalFormat;.setMultiplier:(I)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f48d4.   v5:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f48d8.   v6:= "groupingSize" @type (object, string);
#L0f48dc.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v10) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;B)B|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f48e2.   v6:= temp;
#L0f48e4.   call temp:=  [|libcore:icu:NativeDecimalFormat.setGroupingSize|](v5, v6) @signature [|Llibcore/icu/NativeDecimalFormat;.setGroupingSize:(I)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f48ea.   v5:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f48ee.   v6:= "groupingUsed" @type (object, string);
#L0f48f2.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v9) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Z)Z|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f48f8.   v6:= temp;
#L0f48fa.   call temp:=  [|libcore:icu:NativeDecimalFormat.setGroupingUsed|](v5, v6) @signature [|Llibcore/icu/NativeDecimalFormat;.setGroupingUsed:(Z)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4900.   v5:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4904.   v6:= "decimalSeparatorAlwaysShown" @type (object, string);
#L0f4908.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Z)Z|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f490e.   v6:= temp;
#L0f4910.   call temp:=  [|libcore:icu:NativeDecimalFormat.setDecimalSeparatorAlwaysShown|](v5, v6) @signature [|Llibcore/icu/NativeDecimalFormat;.setDecimalSeparatorAlwaysShown:(Z)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4916.   v5:= "roundingMode" @type (object, string);
#L0f491a.   v6:= @@[|java:math:RoundingMode.HALF_EVEN|]   @type object;
#L0f491e.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v6) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f4924.   v5:= temp  @type object;
#L0f4926.   v5:= ([|java:math:RoundingMode|])v5;
#L0f492a.   call temp:=  [|java:text:DecimalFormat.setRoundingMode|](v13, v5) @signature [|Ljava/text/DecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4930.   v5:= "maximumIntegerDigits" @type (object, string);
#L0f4934.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v11) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f493a.   v2:= temp;
#L0f493c.   v5:= "minimumIntegerDigits" @type (object, string);
#L0f4940.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v11) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f4946.   v4:= temp;
#L0f4948.   v5:= "maximumFractionDigits" @type (object, string);
#L0f494c.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v12) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f4952.   v1:= temp;
#L0f4954.   v5:= "minimumFractionDigits" @type (object, string);
#L0f4958.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v12) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f495e.   v3:= temp;
#L0f4960.   v5:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4964.   call temp:=  [|libcore:icu:NativeDecimalFormat.setMaximumIntegerDigits|](v5, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setMaximumIntegerDigits:(I)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f496a.   v5:= v13.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f496e.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMaximumIntegerDigits|](v5) @signature [|Llibcore/icu/NativeDecimalFormat;.getMaximumIntegerDigits:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4974.   v5:= temp;
#L0f4976.   call temp:=  [|java:text:NumberFormat.setMaximumIntegerDigits|](v13, v5) @signature [|Ljava/text/NumberFormat;.setMaximumIntegerDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f497c.   call temp:=  [|java:text:DecimalFormat.setMinimumIntegerDigits|](v13, v4) @signature [|Ljava/text/DecimalFormat;.setMinimumIntegerDigits:(I)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4982.   call temp:=  [|java:text:DecimalFormat.setMinimumFractionDigits|](v13, v3) @signature [|Ljava/text/DecimalFormat;.setMinimumFractionDigits:(I)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4988.   call temp:=  [|java:text:DecimalFormat.setMaximumFractionDigits|](v13, v1) @signature [|Ljava/text/DecimalFormat;.setMaximumFractionDigits:(I)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f498e.   v5:= "parseBigDecimal" @type (object, string);
#L0f4992.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Z)Z|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f4998.   v5:= temp;
#L0f499a.   call temp:=  [|java:text:DecimalFormat.setParseBigDecimal|](v13, v5) @signature [|Ljava/text/DecimalFormat;.setParseBigDecimal:(Z)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f49a0.   v5:= "serialVersionOnStream" @type (object, string);
#L0f49a4.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v5, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f49aa.   v5:= temp;
#L0f49ac.   if v5 >= v10 then goto L0f49e8;
#L0f49b0.   call temp:=  [|java:text:NumberFormat.getMaximumIntegerDigits|](v13) @signature [|Ljava/text/NumberFormat;.getMaximumIntegerDigits:()I|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f49b6.   v5:= temp;
#L0f49b8.   call temp:=  [|java:text:DecimalFormat.setMaximumIntegerDigits|](v13, v5) @signature [|Ljava/text/DecimalFormat;.setMaximumIntegerDigits:(I)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f49be.   call temp:=  [|java:text:NumberFormat.getMinimumIntegerDigits|](v13) @signature [|Ljava/text/NumberFormat;.getMinimumIntegerDigits:()I|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f49c4.   v5:= temp;
#L0f49c6.   call temp:=  [|java:text:DecimalFormat.setMinimumIntegerDigits|](v13, v5) @signature [|Ljava/text/DecimalFormat;.setMinimumIntegerDigits:(I)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f49cc.   call temp:=  [|java:text:NumberFormat.getMaximumFractionDigits|](v13) @signature [|Ljava/text/NumberFormat;.getMaximumFractionDigits:()I|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f49d2.   v5:= temp;
#L0f49d4.   call temp:=  [|java:text:DecimalFormat.setMaximumFractionDigits|](v13, v5) @signature [|Ljava/text/DecimalFormat;.setMaximumFractionDigits:(I)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f49da.   call temp:=  [|java:text:NumberFormat.getMinimumFractionDigits|](v13) @signature [|Ljava/text/NumberFormat;.getMinimumFractionDigits:()I|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f49e0.   v5:= temp;
#L0f49e2.   call temp:=  [|java:text:DecimalFormat.setMinimumFractionDigits|](v13, v5) @signature [|Ljava/text/DecimalFormat;.setMinimumFractionDigits:(I)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f49e8.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.writeObject|] ([|java:text:DecimalFormat|] v5 @type (this), [|java:io:ObjectOutputStream|] v6 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        [|java:io:ObjectOutputStream$PutField|] v0 @varname [|fields|] @scope ((L0006,L00d7));


        v1;
        v2;
        v3;
        v4;
      
#L0f49fc.   v4:= 0  @length 4;
#L0f49fe.   v2:= 0  @length 4;
#L0f4a00.   call temp:=  [|java:io:ObjectOutputStream.putFields|](v6) @signature [|Ljava/io/ObjectOutputStream;.putFields:()Ljava/io/ObjectOutputStream$PutField;|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f4a06.   v0:= temp  @type object;
#L0f4a08.   v1:= "positivePrefix" @type (object, string);
#L0f4a0c.   v3:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4a10.   call temp:=  [|libcore:icu:NativeDecimalFormat.getPositivePrefix|](v3) @signature [|Llibcore/icu/NativeDecimalFormat;.getPositivePrefix:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4a16.   v3:= temp  @type object;
#L0f4a18.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4a1e.   v1:= "positiveSuffix" @type (object, string);
#L0f4a22.   v3:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4a26.   call temp:=  [|libcore:icu:NativeDecimalFormat.getPositiveSuffix|](v3) @signature [|Llibcore/icu/NativeDecimalFormat;.getPositiveSuffix:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4a2c.   v3:= temp  @type object;
#L0f4a2e.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4a34.   v1:= "negativePrefix" @type (object, string);
#L0f4a38.   v3:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4a3c.   call temp:=  [|libcore:icu:NativeDecimalFormat.getNegativePrefix|](v3) @signature [|Llibcore/icu/NativeDecimalFormat;.getNegativePrefix:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4a42.   v3:= temp  @type object;
#L0f4a44.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4a4a.   v1:= "negativeSuffix" @type (object, string);
#L0f4a4e.   v3:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4a52.   call temp:=  [|libcore:icu:NativeDecimalFormat.getNegativeSuffix|](v3) @signature [|Llibcore/icu/NativeDecimalFormat;.getNegativeSuffix:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4a58.   v3:= temp  @type object;
#L0f4a5a.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v3) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4a60.   v3:= "posPrefixPattern" @type (object, string);
#L0f4a64.   v1:= v2  @type object;
#L0f4a66.   v1:= ([|java:lang:String|])v1;
#L0f4a6a.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v3, v1) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4a70.   v3:= "posSuffixPattern" @type (object, string);
#L0f4a74.   v1:= v2  @type object;
#L0f4a76.   v1:= ([|java:lang:String|])v1;
#L0f4a7a.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v3, v1) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4a80.   v3:= "negPrefixPattern" @type (object, string);
#L0f4a84.   v1:= v2  @type object;
#L0f4a86.   v1:= ([|java:lang:String|])v1;
#L0f4a8a.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v3, v1) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4a90.   v1:= "negSuffixPattern" @type (object, string);
#L0f4a94.   v2:= ([|java:lang:String|])v2;
#L0f4a98.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4a9e.   v1:= "multiplier" @type (object, string);
#L0f4aa2.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4aa6.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMultiplier|](v2) @signature [|Llibcore/icu/NativeDecimalFormat;.getMultiplier:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4aac.   v2:= temp;
#L0f4aae.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4ab4.   v1:= "groupingSize" @type (object, string);
#L0f4ab8.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4abc.   call temp:=  [|libcore:icu:NativeDecimalFormat.getGroupingSize|](v2) @signature [|Llibcore/icu/NativeDecimalFormat;.getGroupingSize:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4ac2.   v2:= temp;
#L0f4ac4.   v2:= (byte)v2  @type i2b;
#L0f4ac6.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;B)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4acc.   v1:= "groupingUsed" @type (object, string);
#L0f4ad0.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4ad4.   call temp:=  [|libcore:icu:NativeDecimalFormat.isGroupingUsed|](v2) @signature [|Llibcore/icu/NativeDecimalFormat;.isGroupingUsed:()Z|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4ada.   v2:= temp;
#L0f4adc.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4ae2.   v1:= "decimalSeparatorAlwaysShown" @type (object, string);
#L0f4ae6.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4aea.   call temp:=  [|libcore:icu:NativeDecimalFormat.isDecimalSeparatorAlwaysShown|](v2) @signature [|Llibcore/icu/NativeDecimalFormat;.isDecimalSeparatorAlwaysShown:()Z|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4af0.   v2:= temp;
#L0f4af2.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4af8.   v1:= "parseBigDecimal" @type (object, string);
#L0f4afc.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4b00.   call temp:=  [|libcore:icu:NativeDecimalFormat.isParseBigDecimal|](v2) @signature [|Llibcore/icu/NativeDecimalFormat;.isParseBigDecimal:()Z|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4b06.   v2:= temp;
#L0f4b08.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4b0e.   v1:= "roundingMode" @type (object, string);
#L0f4b12.   v2:= v5.[|java:text:DecimalFormat.roundingMode|]   @type object;
#L0f4b16.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4b1c.   v1:= "symbols" @type (object, string);
#L0f4b20.   v2:= v5.[|java:text:DecimalFormat.symbols|]   @type object;
#L0f4b24.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4b2a.   v1:= "useExponentialNotation" @type (object, string);
#L0f4b2e.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v4) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Z)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4b34.   v1:= "minExponentDigits" @type (object, string);
#L0f4b38.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v4) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;B)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4b3e.   v1:= "maximumIntegerDigits" @type (object, string);
#L0f4b42.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4b46.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMaximumIntegerDigits|](v2) @signature [|Llibcore/icu/NativeDecimalFormat;.getMaximumIntegerDigits:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4b4c.   v2:= temp;
#L0f4b4e.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4b54.   v1:= "minimumIntegerDigits" @type (object, string);
#L0f4b58.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4b5c.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMinimumIntegerDigits|](v2) @signature [|Llibcore/icu/NativeDecimalFormat;.getMinimumIntegerDigits:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4b62.   v2:= temp;
#L0f4b64.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4b6a.   v1:= "maximumFractionDigits" @type (object, string);
#L0f4b6e.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4b72.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMaximumFractionDigits|](v2) @signature [|Llibcore/icu/NativeDecimalFormat;.getMaximumFractionDigits:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4b78.   v2:= temp;
#L0f4b7a.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4b80.   v1:= "minimumFractionDigits" @type (object, string);
#L0f4b84.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4b88.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMinimumFractionDigits|](v2) @signature [|Llibcore/icu/NativeDecimalFormat;.getMinimumFractionDigits:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4b8e.   v2:= temp;
#L0f4b90.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4b96.   v1:= "serialVersionOnStream" @type (object, string);
#L0f4b9a.   v2:= 4  @length 4;
#L0f4b9c.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f4ba2.   call temp:=  [|java:io:ObjectOutputStream.writeFields|](v6) @signature [|Ljava/io/ObjectOutputStream;.writeFields:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f4ba8.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.applyLocalizedPattern|] ([|java:text:DecimalFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.applyLocalizedPattern:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f4bbc.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4bc0.   call temp:=  [|libcore:icu:NativeDecimalFormat.applyLocalizedPattern|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.applyLocalizedPattern:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4bc6.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.applyPattern|] ([|java:text:DecimalFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.applyPattern:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f4bd8.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4bdc.   call temp:=  [|libcore:icu:NativeDecimalFormat.applyPattern|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.applyPattern:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4be2.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:text:DecimalFormat.clone|] ([|java:text:DecimalFormat|] v2 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:DecimalFormat|] v0 @varname [|clone|] @scope ((L0006,L001b));

        v1;
      
#L0f4bf4.   call temp:=  [|java:text:NumberFormat.clone|](v2) @signature [|Ljava/text/NumberFormat;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f4bfa.   v0:= temp  @type object;
#L0f4bfc.   v0:= ([|java:text:DecimalFormat|])v0;
#L0f4c00.   v1:= v2.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4c04.   call temp:=  [|libcore:icu:NativeDecimalFormat.clone|](v1) @signature [|Llibcore/icu/NativeDecimalFormat;.clone:()Ljava/lang/Object;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4c0a.   v1:= temp  @type object;
#L0f4c0c.   v1:= ([|libcore:icu:NativeDecimalFormat|])v1;
#L0f4c10.   v0.[|java:text:DecimalFormat.ndf|]  := v1 @type object;
#L0f4c14.   v1:= v2.[|java:text:DecimalFormat.symbols|]   @type object;
#L0f4c18.   call temp:=  [|java:text:DecimalFormatSymbols.clone|](v1) @signature [|Ljava/text/DecimalFormatSymbols;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f4c1e.   v1:= temp  @type object;
#L0f4c20.   v1:= ([|java:text:DecimalFormatSymbols|])v1;
#L0f4c24.   v0.[|java:text:DecimalFormat.symbols|]  := v1 @type object;
#L0f4c28.   return v0  @type object;

   }
    procedure [|boolean|] [|java:text:DecimalFormat.equals|] ([|java:text:DecimalFormat|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:DecimalFormat|] v0 @varname [|other|] @scope ((L000e,L0031));


        v1;
        v2;
        v3;
        v4;
      
#L0f4c3c.   v1:= 1  @length 4;
#L0f4c3e.   v2:= 0  @length 4;
#L0f4c40.   if v5 != v6 then goto L0f4c46;
#L0f4c44.   return v1;
#L0f4c46.   v3:= instanceof @varname v6 @type [|java:text:DecimalFormat|];
#L0f4c4a.   if v3 != 0 then goto L0f4c52;
#L0f4c4e.   v1:= v2;
#L0f4c50.   goto L0f4c44;
#L0f4c52.   v0:= v6  @type object;
#L0f4c54.   v0:= ([|java:text:DecimalFormat|])v0;
#L0f4c58.   v3:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4c5c.   if v3 != 0 then goto L0f4c88;
#L0f4c60.   v3:= v0.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4c64.   if v3 != 0 then goto L0f4c84;
#L0f4c68.   call temp:=  [|java:text:DecimalFormat.getDecimalFormatSymbols|](v5) @signature [|Ljava/text/DecimalFormat;.getDecimalFormatSymbols:()Ljava/text/DecimalFormatSymbols;|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4c6e.   v3:= temp  @type object;
#L0f4c70.   call temp:=  [|java:text:DecimalFormat.getDecimalFormatSymbols|](v0) @signature [|Ljava/text/DecimalFormat;.getDecimalFormatSymbols:()Ljava/text/DecimalFormatSymbols;|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4c76.   v4:= temp  @type object;
#L0f4c78.   call temp:=  [|java:text:DecimalFormatSymbols.equals|](v3, v4) @signature [|Ljava/text/DecimalFormatSymbols;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f4c7e.   v3:= temp;
#L0f4c80.   if v3 != 0 then goto L0f4c44;
#L0f4c84.   v1:= v2;
#L0f4c86.   goto L0f4c44;
#L0f4c88.   v3:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4c8c.   v4:= v0.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4c90.   call temp:=  [|libcore:icu:NativeDecimalFormat.equals|](v3, v4) @signature [|Llibcore/icu/NativeDecimalFormat;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4c96.   v3:= temp;
#L0f4c98.   if v3 == 0 then goto L0f4c84;
#L0f4c9c.   goto L0f4c68;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:DecimalFormat.format|] ([|java:text:DecimalFormat|] v5 @type (this), [|double|] v6, [|java:lang:StringBuffer|] v8 @type (object), [|java:text:FieldPosition|] v9 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.format:(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;
        [|java:lang:String|] v0 @varname [|downResult|] @scope ((L0039,L0047), (L004e,L0053));
        [|java:lang:String|] v1 @varname [|upResult|] @scope ((L0021,L0047), (L004e,L0053));




        v2;
        v3;
        v4;
      
#L0f4cb0.   call temp:=  [|java:text:DecimalFormat.checkBufferAndFieldPosition|](v5, v8, v9) @signature [|Ljava/text/DecimalFormat;.checkBufferAndFieldPosition:(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f4cb6.   v2:= v5.[|java:text:DecimalFormat.roundingMode|]   @type object;
#L0f4cba.   v3:= @@[|java:math:RoundingMode.UNNECESSARY|]   @type object;
#L0f4cbe.   if v2 != v3 then goto L0f4d56;
#L0f4cc2.   v2:= @@[|java:math:RoundingMode.UP|]   @type object;
#L0f4cc6.   call temp:=  [|java:text:DecimalFormat.setRoundingMode|](v5, v2) @signature [|Ljava/text/DecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4ccc.   v2:= new [|java:lang:StringBuffer|];
#L0f4cd0.   call temp:=  [|java:lang:StringBuffer.<init>|](v2) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f4cd6.   v3:= new [|java:text:FieldPosition|];
#L0f4cda.   v4:= 0  @length 4;
#L0f4cdc.   call temp:=  [|java:text:FieldPosition.<init>|](v3, v4) @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f4ce2.   call temp:=  [|java:text:DecimalFormat.format|](v5, v6, v7, v2, v3) @signature [|Ljava/text/DecimalFormat;.format:(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4ce8.   v2:= temp  @type object;
#L0f4cea.   call temp:=  [|java:lang:StringBuffer.toString|](v2) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f4cf0.   v1:= temp  @type object;
#L0f4cf2.   v2:= @@[|java:math:RoundingMode.DOWN|]   @type object;
#L0f4cf6.   call temp:=  [|java:text:DecimalFormat.setRoundingMode|](v5, v2) @signature [|Ljava/text/DecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4cfc.   v2:= new [|java:lang:StringBuffer|];
#L0f4d00.   call temp:=  [|java:lang:StringBuffer.<init>|](v2) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f4d06.   v3:= new [|java:text:FieldPosition|];
#L0f4d0a.   v4:= 0  @length 4;
#L0f4d0c.   call temp:=  [|java:text:FieldPosition.<init>|](v3, v4) @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f4d12.   call temp:=  [|java:text:DecimalFormat.format|](v5, v6, v7, v2, v3) @signature [|Ljava/text/DecimalFormat;.format:(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4d18.   v2:= temp  @type object;
#L0f4d1a.   call temp:=  [|java:lang:StringBuffer.toString|](v2) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f4d20.   v0:= temp  @type object;
#L0f4d22.   call temp:=  [|java:lang:String.equals|](v1, v0) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f4d28.   v2:= temp;
#L0f4d2a.   if v2 != 0 then goto L0f4d4c;
#L0f4d2e.   v2:= new [|java:lang:ArithmeticException|];
#L0f4d32.   v3:= "rounding mode UNNECESSARY but rounding required" @type (object, string);
#L0f4d36.   call temp:=  [|java:lang:ArithmeticException.<init>|](v2, v3) @signature [|Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ArithmeticException|] @type direct;
#L0f4d3c.   throw v2;
#L0f4d3e.   v2:= Exception  @type object;
#L0f4d40.   v3:= @@[|java:math:RoundingMode.UNNECESSARY|]   @type object;
#L0f4d44.   call temp:=  [|java:text:DecimalFormat.setRoundingMode|](v5, v3) @signature [|Ljava/text/DecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4d4a.   throw v2;
#L0f4d4c.   v2:= @@[|java:math:RoundingMode.UNNECESSARY|]   @type object;
#L0f4d50.   call temp:=  [|java:text:DecimalFormat.setRoundingMode|](v5, v2) @signature [|Ljava/text/DecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4d56.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4d5a.   call temp:=  [|libcore:icu:NativeDecimalFormat.formatDouble|](v2, v6, v7, v9) @signature [|Llibcore/icu/NativeDecimalFormat;.formatDouble:(DLjava/text/FieldPosition;)[C|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4d60.   v2:= temp  @type object;
#L0f4d62.   call temp:=  [|java:lang:StringBuffer.append|](v8, v2) @signature [|Ljava/lang/StringBuffer;.append:([C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f4d68.   return v8  @type object;
  catch  [|any|] @[L0f4cc2..L0f4d3e] goto L0f4d3e;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:DecimalFormat.format|] ([|java:text:DecimalFormat|] v1 @type (this), [|long|] v2, [|java:lang:StringBuffer|] v4 @type (object), [|java:text:FieldPosition|] v5 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.format:(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L0f4d88.   call temp:=  [|java:text:DecimalFormat.checkBufferAndFieldPosition|](v1, v4, v5) @signature [|Ljava/text/DecimalFormat;.checkBufferAndFieldPosition:(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f4d8e.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4d92.   call temp:=  [|libcore:icu:NativeDecimalFormat.formatLong|](v0, v2, v3, v5) @signature [|Llibcore/icu/NativeDecimalFormat;.formatLong:(JLjava/text/FieldPosition;)[C|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4d98.   v0:= temp  @type object;
#L0f4d9a.   call temp:=  [|java:lang:StringBuffer.append|](v4, v0) @signature [|Ljava/lang/StringBuffer;.append:([C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f4da0.   return v4  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:DecimalFormat.format|] ([|java:text:DecimalFormat|] v5 @type (this), [|java:lang:Object|] v6 @type (object), [|java:lang:StringBuffer|] v7 @type (object), [|java:text:FieldPosition|] v8 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC_FINAL {
      local temp ;
        [|java:math:BigInteger|] v0 @varname [|bigInteger|] @scope ((L000a,L001f), (L0020,L0027));
        [|char|][] v1 @varname [|chars|] @scope ((L001c,L001f));







        v2;
        v3;
        v4;
      
#L0f4db4.   call temp:=  [|java:text:DecimalFormat.checkBufferAndFieldPosition|](v5, v7, v8) @signature [|Ljava/text/DecimalFormat;.checkBufferAndFieldPosition:(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f4dba.   v2:= instanceof @varname v6 @type [|java:math:BigInteger|];
#L0f4dbe.   if v2 == 0 then goto L0f4e02;
#L0f4dc2.   v0:= v6  @type object;
#L0f4dc4.   v0:= ([|java:math:BigInteger|])v0;
#L0f4dc8.   call temp:=  [|java:math:BigInteger.bitLength|](v0) @signature [|Ljava/math/BigInteger;.bitLength:()I|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0f4dce.   v2:= temp;
#L0f4dd0.   v3:= 64  @length 16;
#L0f4dd4.   if v2 >= v3 then goto L0f4df4;
#L0f4dd8.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4ddc.   call temp:=  [|java:math:BigInteger.longValue|](v0) @signature [|Ljava/math/BigInteger;.longValue:()J|] @classDescriptor [|java:math:BigInteger|] @type virtual;
#L0f4de2.   v3:= temp  @type wide;
#L0f4de4.   call temp:=  [|libcore:icu:NativeDecimalFormat.formatLong|](v2, v3, v4, v8) @signature [|Llibcore/icu/NativeDecimalFormat;.formatLong:(JLjava/text/FieldPosition;)[C|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4dea.   v1:= temp  @type object;
#L0f4dec.   call temp:=  [|java:lang:StringBuffer.append|](v7, v1) @signature [|Ljava/lang/StringBuffer;.append:([C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f4df2.   return v7  @type object;
#L0f4df4.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4df8.   call temp:=  [|libcore:icu:NativeDecimalFormat.formatBigInteger|](v2, v0, v8) @signature [|Llibcore/icu/NativeDecimalFormat;.formatBigInteger:(Ljava/math/BigInteger;Ljava/text/FieldPosition;)[C|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4dfe.   v1:= temp  @type object;
#L0f4e00.   goto L0f4dec;
#L0f4e02.   v2:= instanceof @varname v6 @type [|java:math:BigDecimal|];
#L0f4e06.   if v2 == 0 then goto L0f4e22;
#L0f4e0a.   v2:= v5.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4e0e.   v6:= ([|java:math:BigDecimal|])v6;
#L0f4e12.   call temp:=  [|libcore:icu:NativeDecimalFormat.formatBigDecimal|](v2, v6, v8) @signature [|Llibcore/icu/NativeDecimalFormat;.formatBigDecimal:(Ljava/math/BigDecimal;Ljava/text/FieldPosition;)[C|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4e18.   v2:= temp  @type object;
#L0f4e1a.   call temp:=  [|java:lang:StringBuffer.append|](v7, v2) @signature [|Ljava/lang/StringBuffer;.append:([C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f4e20.   goto L0f4df2;
#L0f4e22.   call temp:=  [|java:text:NumberFormat.format|](v5, v6, v7, v8) @signature [|Ljava/text/NumberFormat;.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f4e28.   v7:= temp  @type object;
#L0f4e2a.   goto L0f4df2;

   }
    procedure [|java:text:AttributedCharacterIterator|] [|java:text:DecimalFormat.formatToCharacterIterator|] ([|java:text:DecimalFormat|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.formatToCharacterIterator:(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f4e3c.   if v3 != 0 then goto L0f4e50;
#L0f4e40.   v0:= new [|java:lang:NullPointerException|];
#L0f4e44.   v1:= "object == null" @type (object, string);
#L0f4e48.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f4e4e.   throw v0;
#L0f4e50.   v0:= v2.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4e54.   call temp:=  [|libcore:icu:NativeDecimalFormat.formatToCharacterIterator|](v0, v3) @signature [|Llibcore/icu/NativeDecimalFormat;.formatToCharacterIterator:(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4e5a.   v0:= temp  @type object;
#L0f4e5c.   return v0  @type object;

   }
    procedure [|java:util:Currency|] [|java:text:DecimalFormat.getCurrency|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.getCurrency:()Ljava/util/Currency;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4e70.   v0:= v1.[|java:text:DecimalFormat.symbols|]   @type object;
#L0f4e74.   call temp:=  [|java:text:DecimalFormatSymbols.getCurrency|](v0) @signature [|Ljava/text/DecimalFormatSymbols;.getCurrency:()Ljava/util/Currency;|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f4e7a.   v0:= temp  @type object;
#L0f4e7c.   return v0  @type object;

   }
    procedure [|java:text:DecimalFormatSymbols|] [|java:text:DecimalFormat.getDecimalFormatSymbols|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.getDecimalFormatSymbols:()Ljava/text/DecimalFormatSymbols;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4e90.   v0:= v1.[|java:text:DecimalFormat.symbols|]   @type object;
#L0f4e94.   call temp:=  [|java:text:DecimalFormatSymbols.clone|](v0) @signature [|Ljava/text/DecimalFormatSymbols;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f4e9a.   v0:= temp  @type object;
#L0f4e9c.   v0:= ([|java:text:DecimalFormatSymbols|])v0;
#L0f4ea0.   return v0  @type object;

   }
    procedure [|int|] [|java:text:DecimalFormat.getGroupingSize|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.getGroupingSize:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4eb4.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4eb8.   call temp:=  [|libcore:icu:NativeDecimalFormat.getGroupingSize|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.getGroupingSize:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4ebe.   v0:= temp;
#L0f4ec0.   return v0;

   }
    procedure [|int|] [|java:text:DecimalFormat.getMultiplier|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.getMultiplier:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4ed4.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4ed8.   call temp:=  [|libcore:icu:NativeDecimalFormat.getMultiplier|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.getMultiplier:()I|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4ede.   v0:= temp;
#L0f4ee0.   return v0;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormat.getNegativePrefix|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.getNegativePrefix:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4ef4.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4ef8.   call temp:=  [|libcore:icu:NativeDecimalFormat.getNegativePrefix|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.getNegativePrefix:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4efe.   v0:= temp  @type object;
#L0f4f00.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormat.getNegativeSuffix|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.getNegativeSuffix:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4f14.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4f18.   call temp:=  [|libcore:icu:NativeDecimalFormat.getNegativeSuffix|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.getNegativeSuffix:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4f1e.   v0:= temp  @type object;
#L0f4f20.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormat.getPositivePrefix|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.getPositivePrefix:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4f34.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4f38.   call temp:=  [|libcore:icu:NativeDecimalFormat.getPositivePrefix|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.getPositivePrefix:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4f3e.   v0:= temp  @type object;
#L0f4f40.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormat.getPositiveSuffix|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.getPositiveSuffix:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4f54.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4f58.   call temp:=  [|libcore:icu:NativeDecimalFormat.getPositiveSuffix|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.getPositiveSuffix:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4f5e.   v0:= temp  @type object;
#L0f4f60.   return v0  @type object;

   }
    procedure [|java:math:RoundingMode|] [|java:text:DecimalFormat.getRoundingMode|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.getRoundingMode:()Ljava/math/RoundingMode;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4f74.   v0:= v1.[|java:text:DecimalFormat.roundingMode|]   @type object;
#L0f4f78.   return v0  @type object;

   }
    procedure [|int|] [|java:text:DecimalFormat.hashCode|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4f8c.   call temp:=  [|java:text:DecimalFormat.getPositivePrefix|](v1) @signature [|Ljava/text/DecimalFormat;.getPositivePrefix:()Ljava/lang/String;|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f4f92.   v0:= temp  @type object;
#L0f4f94.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f4f9a.   v0:= temp;
#L0f4f9c.   return v0;

   }
    procedure [|boolean|] [|java:text:DecimalFormat.isDecimalSeparatorAlwaysShown|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.isDecimalSeparatorAlwaysShown:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4fb0.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4fb4.   call temp:=  [|libcore:icu:NativeDecimalFormat.isDecimalSeparatorAlwaysShown|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.isDecimalSeparatorAlwaysShown:()Z|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4fba.   v0:= temp;
#L0f4fbc.   return v0;

   }
    procedure [|boolean|] [|java:text:DecimalFormat.isGroupingUsed|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.isGroupingUsed:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4fd0.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4fd4.   call temp:=  [|libcore:icu:NativeDecimalFormat.isGroupingUsed|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.isGroupingUsed:()Z|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4fda.   v0:= temp;
#L0f4fdc.   return v0;

   }
    procedure [|boolean|] [|java:text:DecimalFormat.isParseBigDecimal|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.isParseBigDecimal:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f4ff0.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f4ff4.   call temp:=  [|libcore:icu:NativeDecimalFormat.isParseBigDecimal|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.isParseBigDecimal:()Z|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f4ffa.   v0:= temp;
#L0f4ffc.   return v0;

   }
    procedure [|boolean|] [|java:text:DecimalFormat.isParseIntegerOnly|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.isParseIntegerOnly:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5010.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f5014.   call temp:=  [|libcore:icu:NativeDecimalFormat.isParseIntegerOnly|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.isParseIntegerOnly:()Z|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f501a.   v0:= temp;
#L0f501c.   return v0;

   }
    procedure [|java:lang:Number|] [|java:text:DecimalFormat.parse|] ([|java:text:DecimalFormat|] v4 @type (this), [|java:lang:String|] v5 @type (object), [|java:text:ParsePosition|] v6 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @Access PUBLIC {
      local temp ;
        [|java:lang:Number|] v0 @varname [|number|] @scope ((L0006,L0009), (L000a,L0077));



        v1;
        v2;
        v3;
      
#L0f5030.   v1:= v4.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f5034.   call temp:=  [|libcore:icu:NativeDecimalFormat.parse|](v1, v5, v6) @signature [|Llibcore/icu/NativeDecimalFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f503a.   v0:= temp  @type object;
#L0f503c.   if v0 != 0 then goto L0f5044;
#L0f5040.   v0:= 0  @length 4;
#L0f5042.   return v0  @type object;
#L0f5044.   call temp:=  [|java:text:DecimalFormat.isParseBigDecimal|](v4) @signature [|Ljava/text/DecimalFormat;.isParseBigDecimal:()Z|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f504a.   v1:= temp;
#L0f504c.   if v1 == 0 then goto L0f50ce;
#L0f5050.   v1:= instanceof @varname v0 @type [|java:lang:Long|];
#L0f5054.   if v1 == 0 then goto L0f506e;
#L0f5058.   v1:= new [|java:math:BigDecimal|];
#L0f505c.   call temp:=  [|java:lang:Number.longValue|](v0) @signature [|Ljava/lang/Number;.longValue:()J|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f5062.   v2:= temp  @type wide;
#L0f5064.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2, v3) @signature [|Ljava/math/BigDecimal;.<init>:(J)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0f506a.   v0:= v1  @type object;
#L0f506c.   goto L0f5042;
#L0f506e.   v1:= instanceof @varname v0 @type [|java:lang:Double|];
#L0f5072.   if v1 == 0 then goto L0f50b0;
#L0f5076.   v1:= v0  @type object;
#L0f5078.   v1:= ([|java:lang:Double|])v1;
#L0f507c.   call temp:=  [|java:lang:Double.isInfinite|](v1) @signature [|Ljava/lang/Double;.isInfinite:()Z|] @classDescriptor [|java:lang:Double|] @type virtual;
#L0f5082.   v1:= temp;
#L0f5084.   if v1 != 0 then goto L0f50b0;
#L0f5088.   v1:= v0  @type object;
#L0f508a.   v1:= ([|java:lang:Double|])v1;
#L0f508e.   call temp:=  [|java:lang:Double.isNaN|](v1) @signature [|Ljava/lang/Double;.isNaN:()Z|] @classDescriptor [|java:lang:Double|] @type virtual;
#L0f5094.   v1:= temp;
#L0f5096.   if v1 != 0 then goto L0f50b0;
#L0f509a.   v1:= new [|java:math:BigDecimal|];
#L0f509e.   call temp:=  [|java:lang:Object.toString|](v0) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f50a4.   v2:= temp  @type object;
#L0f50a6.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0f50ac.   v0:= v1  @type object;
#L0f50ae.   goto L0f5042;
#L0f50b0.   v1:= instanceof @varname v0 @type [|java:math:BigInteger|];
#L0f50b4.   if v1 == 0 then goto L0f5042;
#L0f50b8.   v1:= new [|java:math:BigDecimal|];
#L0f50bc.   call temp:=  [|java:lang:Object.toString|](v0) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f50c2.   v2:= temp  @type object;
#L0f50c4.   call temp:=  [|java:math:BigDecimal.<init>|](v1, v2) @signature [|Ljava/math/BigDecimal;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:math:BigDecimal|] @type direct;
#L0f50ca.   v0:= v1  @type object;
#L0f50cc.   goto L0f5042;
#L0f50ce.   v1:= instanceof @varname v0 @type [|java:math:BigDecimal|];
#L0f50d2.   if v1 != 0 then goto L0f50de;
#L0f50d6.   v1:= instanceof @varname v0 @type [|java:math:BigInteger|];
#L0f50da.   if v1 == 0 then goto L0f50f4;
#L0f50de.   v1:= new [|java:lang:Double|];
#L0f50e2.   call temp:=  [|java:lang:Number.doubleValue|](v0) @signature [|Ljava/lang/Number;.doubleValue:()D|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f50e8.   v2:= temp  @type wide;
#L0f50ea.   call temp:=  [|java:lang:Double.<init>|](v1, v2, v3) @signature [|Ljava/lang/Double;.<init>:(D)V|] @classDescriptor [|java:lang:Double|] @type direct;
#L0f50f0.   v0:= v1  @type object;
#L0f50f2.   goto L0f5042;
#L0f50f4.   call temp:=  [|java:text:DecimalFormat.isParseIntegerOnly|](v4) @signature [|Ljava/text/DecimalFormat;.isParseIntegerOnly:()Z|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f50fa.   v1:= temp;
#L0f50fc.   if v1 == 0 then goto L0f5042;
#L0f5100.   v1:= @@[|java:text:DecimalFormat.NEGATIVE_ZERO_DOUBLE|]   @type object;
#L0f5104.   call temp:=  [|java:lang:Object.equals|](v0, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f510a.   v1:= temp;
#L0f510c.   if v1 == 0 then goto L0f5042;
#L0f5110.   v1:= 0  @length wide16;
#L0f5114.   call temp:=  [|java:lang:Long.valueOf|](v1, v2) @signature [|Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;|] @classDescriptor [|java:lang:Long|] @type static;
#L0f511a.   v0:= temp  @type object;
#L0f511c.   goto L0f5042;

   }
    procedure [|void|] [|java:text:DecimalFormat.setCurrency|] ([|java:text:DecimalFormat|] v2 @type (this), [|java:util:Currency|] v3 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setCurrency:(Ljava/util/Currency;)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f5130.   v0:= v2.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f5134.   call temp:=  [|java:util:Currency.getCurrencyCode|](v3) @signature [|Ljava/util/Currency;.getCurrencyCode:()Ljava/lang/String;|] @classDescriptor [|java:util:Currency|] @type virtual;
#L0f513a.   v1:= temp  @type object;
#L0f513c.   call temp:=  [|java:util:Currency.getInstance|](v1) @signature [|Ljava/util/Currency;.getInstance:(Ljava/lang/String;)Ljava/util/Currency;|] @classDescriptor [|java:util:Currency|] @type static;
#L0f5142.   v1:= temp  @type object;
#L0f5144.   call temp:=  [|libcore:icu:NativeDecimalFormat.setCurrency|](v0, v1) @signature [|Llibcore/icu/NativeDecimalFormat;.setCurrency:(Ljava/util/Currency;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f514a.   v0:= v2.[|java:text:DecimalFormat.symbols|]   @type object;
#L0f514e.   call temp:=  [|java:text:DecimalFormatSymbols.setCurrency|](v0, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setCurrency:(Ljava/util/Currency;)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5154.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setDecimalFormatSymbols|] ([|java:text:DecimalFormat|] v2 @type (this), [|java:text:DecimalFormatSymbols|] v3 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setDecimalFormatSymbols:(Ljava/text/DecimalFormatSymbols;)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f5168.   if v3 == 0 then goto L0f518a;
#L0f516c.   call temp:=  [|java:text:DecimalFormatSymbols.clone|](v3) @signature [|Ljava/text/DecimalFormatSymbols;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5172.   v0:= temp  @type object;
#L0f5174.   v0:= ([|java:text:DecimalFormatSymbols|])v0;
#L0f5178.   v2.[|java:text:DecimalFormat.symbols|]  := v0 @type object;
#L0f517c.   v0:= v2.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f5180.   v1:= v2.[|java:text:DecimalFormat.symbols|]   @type object;
#L0f5184.   call temp:=  [|libcore:icu:NativeDecimalFormat.setDecimalFormatSymbols|](v0, v1) @signature [|Llibcore/icu/NativeDecimalFormat;.setDecimalFormatSymbols:(Ljava/text/DecimalFormatSymbols;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f518a.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setDecimalSeparatorAlwaysShown|] ([|java:text:DecimalFormat|] v1 @type (this), [|boolean|] v2) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setDecimalSeparatorAlwaysShown:(Z)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f519c.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f51a0.   call temp:=  [|libcore:icu:NativeDecimalFormat.setDecimalSeparatorAlwaysShown|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setDecimalSeparatorAlwaysShown:(Z)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f51a6.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setGroupingSize|] ([|java:text:DecimalFormat|] v1 @type (this), [|int|] v2) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setGroupingSize:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f51b8.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f51bc.   call temp:=  [|libcore:icu:NativeDecimalFormat.setGroupingSize|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setGroupingSize:(I)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f51c2.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setGroupingUsed|] ([|java:text:DecimalFormat|] v1 @type (this), [|boolean|] v2) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setGroupingUsed:(Z)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f51d4.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f51d8.   call temp:=  [|libcore:icu:NativeDecimalFormat.setGroupingUsed|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setGroupingUsed:(Z)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f51de.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setMaximumFractionDigits|] ([|java:text:DecimalFormat|] v2 @type (this), [|int|] v3) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setMaximumFractionDigits:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f51f0.   call temp:=  [|java:text:NumberFormat.setMaximumFractionDigits|](v2, v3) @signature [|Ljava/text/NumberFormat;.setMaximumFractionDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f51f6.   v0:= v2.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f51fa.   call temp:=  [|java:text:DecimalFormat.getMaximumFractionDigits|](v2) @signature [|Ljava/text/DecimalFormat;.getMaximumFractionDigits:()I|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f5200.   v1:= temp;
#L0f5202.   call temp:=  [|libcore:icu:NativeDecimalFormat.setMaximumFractionDigits|](v0, v1) @signature [|Llibcore/icu/NativeDecimalFormat;.setMaximumFractionDigits:(I)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f5208.   v0:= v2.[|java:text:DecimalFormat.roundingMode|]   @type object;
#L0f520c.   call temp:=  [|java:text:DecimalFormat.setRoundingMode|](v2, v0) @signature [|Ljava/text/DecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f5212.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setMaximumIntegerDigits|] ([|java:text:DecimalFormat|] v2 @type (this), [|int|] v3) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setMaximumIntegerDigits:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f5224.   call temp:=  [|java:text:NumberFormat.setMaximumIntegerDigits|](v2, v3) @signature [|Ljava/text/NumberFormat;.setMaximumIntegerDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f522a.   v0:= v2.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f522e.   call temp:=  [|java:text:DecimalFormat.getMaximumIntegerDigits|](v2) @signature [|Ljava/text/DecimalFormat;.getMaximumIntegerDigits:()I|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f5234.   v1:= temp;
#L0f5236.   call temp:=  [|libcore:icu:NativeDecimalFormat.setMaximumIntegerDigits|](v0, v1) @signature [|Llibcore/icu/NativeDecimalFormat;.setMaximumIntegerDigits:(I)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f523c.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setMinimumFractionDigits|] ([|java:text:DecimalFormat|] v2 @type (this), [|int|] v3) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setMinimumFractionDigits:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f5250.   call temp:=  [|java:text:NumberFormat.setMinimumFractionDigits|](v2, v3) @signature [|Ljava/text/NumberFormat;.setMinimumFractionDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f5256.   v0:= v2.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f525a.   call temp:=  [|java:text:DecimalFormat.getMinimumFractionDigits|](v2) @signature [|Ljava/text/DecimalFormat;.getMinimumFractionDigits:()I|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f5260.   v1:= temp;
#L0f5262.   call temp:=  [|libcore:icu:NativeDecimalFormat.setMinimumFractionDigits|](v0, v1) @signature [|Llibcore/icu/NativeDecimalFormat;.setMinimumFractionDigits:(I)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f5268.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setMinimumIntegerDigits|] ([|java:text:DecimalFormat|] v2 @type (this), [|int|] v3) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setMinimumIntegerDigits:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f527c.   call temp:=  [|java:text:NumberFormat.setMinimumIntegerDigits|](v2, v3) @signature [|Ljava/text/NumberFormat;.setMinimumIntegerDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type super;
#L0f5282.   v0:= v2.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f5286.   call temp:=  [|java:text:DecimalFormat.getMinimumIntegerDigits|](v2) @signature [|Ljava/text/DecimalFormat;.getMinimumIntegerDigits:()I|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f528c.   v1:= temp;
#L0f528e.   call temp:=  [|libcore:icu:NativeDecimalFormat.setMinimumIntegerDigits|](v0, v1) @signature [|Llibcore/icu/NativeDecimalFormat;.setMinimumIntegerDigits:(I)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f5294.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setMultiplier|] ([|java:text:DecimalFormat|] v1 @type (this), [|int|] v2) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setMultiplier:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f52a8.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f52ac.   call temp:=  [|libcore:icu:NativeDecimalFormat.setMultiplier|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setMultiplier:(I)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f52b2.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setNegativePrefix|] ([|java:text:DecimalFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setNegativePrefix:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f52c4.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f52c8.   call temp:=  [|libcore:icu:NativeDecimalFormat.setNegativePrefix|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setNegativePrefix:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f52ce.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setNegativeSuffix|] ([|java:text:DecimalFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setNegativeSuffix:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f52e0.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f52e4.   call temp:=  [|libcore:icu:NativeDecimalFormat.setNegativeSuffix|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setNegativeSuffix:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f52ea.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setParseBigDecimal|] ([|java:text:DecimalFormat|] v1 @type (this), [|boolean|] v2) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setParseBigDecimal:(Z)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f52fc.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f5300.   call temp:=  [|libcore:icu:NativeDecimalFormat.setParseBigDecimal|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setParseBigDecimal:(Z)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f5306.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setParseIntegerOnly|] ([|java:text:DecimalFormat|] v1 @type (this), [|boolean|] v2) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setParseIntegerOnly:(Z)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f5318.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f531c.   call temp:=  [|libcore:icu:NativeDecimalFormat.setParseIntegerOnly|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setParseIntegerOnly:(Z)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f5322.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setPositivePrefix|] ([|java:text:DecimalFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setPositivePrefix:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f5334.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f5338.   call temp:=  [|libcore:icu:NativeDecimalFormat.setPositivePrefix|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setPositivePrefix:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f533e.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setPositiveSuffix|] ([|java:text:DecimalFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setPositiveSuffix:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f5350.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f5354.   call temp:=  [|libcore:icu:NativeDecimalFormat.setPositiveSuffix|](v0, v2) @signature [|Llibcore/icu/NativeDecimalFormat;.setPositiveSuffix:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f535a.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormat.setRoundingMode|] ([|java:text:DecimalFormat|] v8 @type (this), [|java:math:RoundingMode|] v9 @type (object)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;)V|] @Access PUBLIC {
      local temp ;
        [|double|] v0 @varname [|roundingIncrement|] @scope ((L0024,L0029));


        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0f536c.   if v9 != 0 then goto L0f5380;
#L0f5370.   v2:= new [|java:lang:NullPointerException|];
#L0f5374.   v3:= "roundingMode == null" @type (object, string);
#L0f5378.   call temp:=  [|java:lang:NullPointerException.<init>|](v2, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f537e.   throw v2;
#L0f5380.   v8.[|java:text:DecimalFormat.roundingMode|]  := v9 @type object;
#L0f5384.   v2:= @@[|java:math:RoundingMode.UNNECESSARY|]   @type object;
#L0f5388.   if v9 == v2 then goto L0f53be;
#L0f538c.   v2:= 4607182418800017408L  @length wide_high16;
#L0f5390.   v4:= 4621819117588971520L  @length wide_high16;
#L0f5394.   v6:= 0  @length 4;
#L0f5396.   call temp:=  [|java:text:DecimalFormat.getMaximumFractionDigits|](v8) @signature [|Ljava/text/DecimalFormat;.getMaximumFractionDigits:()I|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f539c.   v7:= temp;
#L0f539e.   call temp:=  [|java:lang:Math.max|](v6, v7) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L0f53a4.   v6:= temp;
#L0f53a6.   v6:= (double)v6  @type i2d;
#L0f53a8.   call temp:=  [|java:lang:Math.pow|](v4, v5, v6, v7) @signature [|Ljava/lang/Math;.pow:(DD)D|] @classDescriptor [|java:lang:Math|] @type static;
#L0f53ae.   v4:= temp  @type wide;
#L0f53b0.   v0:= v2 / v4  @type double;
#L0f53b4.   v2:= v8.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f53b8.   call temp:=  [|libcore:icu:NativeDecimalFormat.setRoundingMode|](v2, v9, v0, v1) @signature [|Llibcore/icu/NativeDecimalFormat;.setRoundingMode:(Ljava/math/RoundingMode;D)V|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f53be.   return @void ;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormat.toLocalizedPattern|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.toLocalizedPattern:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f53d0.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f53d4.   call temp:=  [|libcore:icu:NativeDecimalFormat.toLocalizedPattern|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.toLocalizedPattern:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f53da.   v0:= temp  @type object;
#L0f53dc.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormat.toPattern|] ([|java:text:DecimalFormat|] v1 @type (this)) @owner [|java:text:DecimalFormat|] @signature [|Ljava/text/DecimalFormat;.toPattern:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f53f0.   v0:= v1.[|java:text:DecimalFormat.ndf|]   @type object;
#L0f53f4.   call temp:=  [|libcore:icu:NativeDecimalFormat.toPattern|](v0) @signature [|Llibcore/icu/NativeDecimalFormat;.toPattern:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeDecimalFormat|] @type virtual;
#L0f53fa.   v0:= temp  @type object;
#L0f53fc.   return v0  @type object;

   }
record [|java:text:DecimalFormatSymbols|]  @type class @AccessFlag PUBLIC extends  [|java:lang:Cloneable|], [|java:io:Serializable|] {
      [|java:lang:String|] [|java:text:DecimalFormatSymbols.NaN|]    @AccessFlag PRIVATE;
      [|java:util:Currency|] [|java:text:DecimalFormatSymbols.currency|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:String|] [|java:text:DecimalFormatSymbols.currencySymbol|]    @AccessFlag PRIVATE;
      [|char|] [|java:text:DecimalFormatSymbols.decimalSeparator|]    @AccessFlag PRIVATE;
      [|char|] [|java:text:DecimalFormatSymbols.digit|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:text:DecimalFormatSymbols.exponentSeparator|]    @AccessFlag PRIVATE_TRANSIENT;
      [|char|] [|java:text:DecimalFormatSymbols.groupingSeparator|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:text:DecimalFormatSymbols.infinity|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:text:DecimalFormatSymbols.intlCurrencySymbol|]    @AccessFlag PRIVATE;
      [|java:util:Locale|] [|java:text:DecimalFormatSymbols.locale|]    @AccessFlag PRIVATE_TRANSIENT;
      [|char|] [|java:text:DecimalFormatSymbols.minusSign|]    @AccessFlag PRIVATE;
      [|char|] [|java:text:DecimalFormatSymbols.monetarySeparator|]    @AccessFlag PRIVATE;
      [|char|] [|java:text:DecimalFormatSymbols.patternSeparator|]    @AccessFlag PRIVATE;
      [|char|] [|java:text:DecimalFormatSymbols.perMill|]    @AccessFlag PRIVATE;
      [|char|] [|java:text:DecimalFormatSymbols.percent|]    @AccessFlag PRIVATE;
      [|char|] [|java:text:DecimalFormatSymbols.zeroDigit|]    @AccessFlag PRIVATE;
   }
      global [|java:io:ObjectStreamField|][] @@[|java:text:DecimalFormatSymbols.serialPersistentFields|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:text:DecimalFormatSymbols.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:DecimalFormatSymbols.<clinit>|] () @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0f5410.   v0:= 17  @length 16;
#L0f5414.   v0:= new [|java:io:ObjectStreamField|][v0];
#L0f5418.   v1:= 0  @length 4;
#L0f541a.   v2:= new [|java:io:ObjectStreamField|];
#L0f541e.   v3:= "currencySymbol" @type (object, string);
#L0f5422.   v4:= new [|java:lang:String|];
#L0f5426.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f542c.   v0[v1]:= v2  @type object;
#L0f5430.   v1:= 1  @length 4;
#L0f5432.   v2:= new [|java:io:ObjectStreamField|];
#L0f5436.   v3:= "decimalSeparator" @type (object, string);
#L0f543a.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f543e.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f5444.   v0[v1]:= v2  @type object;
#L0f5448.   v1:= 2  @length 4;
#L0f544a.   v2:= new [|java:io:ObjectStreamField|];
#L0f544e.   v3:= "digit" @type (object, string);
#L0f5452.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f5456.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f545c.   v0[v1]:= v2  @type object;
#L0f5460.   v1:= 3  @length 4;
#L0f5462.   v2:= new [|java:io:ObjectStreamField|];
#L0f5466.   v3:= "exponential" @type (object, string);
#L0f546a.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f546e.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f5474.   v0[v1]:= v2  @type object;
#L0f5478.   v1:= 4  @length 4;
#L0f547a.   v2:= new [|java:io:ObjectStreamField|];
#L0f547e.   v3:= "exponentialSeparator" @type (object, string);
#L0f5482.   v4:= new [|java:lang:String|];
#L0f5486.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f548c.   v0[v1]:= v2  @type object;
#L0f5490.   v1:= 5  @length 4;
#L0f5492.   v2:= new [|java:io:ObjectStreamField|];
#L0f5496.   v3:= "groupingSeparator" @type (object, string);
#L0f549a.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f549e.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f54a4.   v0[v1]:= v2  @type object;
#L0f54a8.   v1:= 6  @length 4;
#L0f54aa.   v2:= new [|java:io:ObjectStreamField|];
#L0f54ae.   v3:= "infinity" @type (object, string);
#L0f54b2.   v4:= new [|java:lang:String|];
#L0f54b6.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f54bc.   v0[v1]:= v2  @type object;
#L0f54c0.   v1:= 7  @length 4;
#L0f54c2.   v2:= new [|java:io:ObjectStreamField|];
#L0f54c6.   v3:= "intlCurrencySymbol" @type (object, string);
#L0f54ca.   v4:= new [|java:lang:String|];
#L0f54ce.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f54d4.   v0[v1]:= v2  @type object;
#L0f54d8.   v1:= 8  @length 16;
#L0f54dc.   v2:= new [|java:io:ObjectStreamField|];
#L0f54e0.   v3:= "minusSign" @type (object, string);
#L0f54e4.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f54e8.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f54ee.   v0[v1]:= v2  @type object;
#L0f54f2.   v1:= 9  @length 16;
#L0f54f6.   v2:= new [|java:io:ObjectStreamField|];
#L0f54fa.   v3:= "monetarySeparator" @type (object, string);
#L0f54fe.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f5502.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f5508.   v0[v1]:= v2  @type object;
#L0f550c.   v1:= 10  @length 16;
#L0f5510.   v2:= new [|java:io:ObjectStreamField|];
#L0f5514.   v3:= "NaN" @type (object, string);
#L0f5518.   v4:= new [|java:lang:String|];
#L0f551c.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f5522.   v0[v1]:= v2  @type object;
#L0f5526.   v1:= 11  @length 16;
#L0f552a.   v2:= new [|java:io:ObjectStreamField|];
#L0f552e.   v3:= "patternSeparator" @type (object, string);
#L0f5532.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f5536.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f553c.   v0[v1]:= v2  @type object;
#L0f5540.   v1:= 12  @length 16;
#L0f5544.   v2:= new [|java:io:ObjectStreamField|];
#L0f5548.   v3:= "percent" @type (object, string);
#L0f554c.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f5550.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f5556.   v0[v1]:= v2  @type object;
#L0f555a.   v1:= 13  @length 16;
#L0f555e.   v2:= new [|java:io:ObjectStreamField|];
#L0f5562.   v3:= "perMill" @type (object, string);
#L0f5566.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f556a.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f5570.   v0[v1]:= v2  @type object;
#L0f5574.   v1:= 14  @length 16;
#L0f5578.   v2:= new [|java:io:ObjectStreamField|];
#L0f557c.   v3:= "serialVersionOnStream" @type (object, string);
#L0f5580.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f5584.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f558a.   v0[v1]:= v2  @type object;
#L0f558e.   v1:= 15  @length 16;
#L0f5592.   v2:= new [|java:io:ObjectStreamField|];
#L0f5596.   v3:= "zeroDigit" @type (object, string);
#L0f559a.   v4:= @@[|java:lang:Character.TYPE|]   @type object;
#L0f559e.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f55a4.   v0[v1]:= v2  @type object;
#L0f55a8.   v1:= 16  @length 16;
#L0f55ac.   v2:= new [|java:io:ObjectStreamField|];
#L0f55b0.   v3:= "locale" @type (object, string);
#L0f55b4.   v4:= new [|java:util:Locale|];
#L0f55b8.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f55be.   v0[v1]:= v2  @type object;
#L0f55c2.   @@[|java:text:DecimalFormatSymbols.serialPersistentFields|] := v0  @type object;
#L0f55c6.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.<init>|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        v0;
      
#L0f55d8.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f55de.   v0:= temp  @type object;
#L0f55e0.   call temp:=  [|java:text:DecimalFormatSymbols.<init>|](v1, v0) @signature [|Ljava/text/DecimalFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type direct;
#L0f55e6.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.<init>|] ([|java:text:DecimalFormatSymbols|] v3 @type (this), [|java:util:Locale|] v4 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:IllegalArgumentException|] v0 @varname [|e|] @scope ((L0051,L0062));
        [|libcore:icu:LocaleData|] v1 @varname [|localeData|] @scope ((L0007,L0062));


        v2;
      
#L0f55f8.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f55fe.   call temp:=  [|libcore:icu:LocaleData.get|](v4) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f5604.   v1:= temp  @type object;
#L0f5606.   v2:= v1.[|libcore:icu:LocaleData.zeroDigit|]   @char;
#L0f560a.   v3.[|java:text:DecimalFormatSymbols.zeroDigit|]  := v2 @char;
#L0f560e.   v2:= 35  @length 16;
#L0f5612.   v3.[|java:text:DecimalFormatSymbols.digit|]  := v2 @char;
#L0f5616.   v2:= v1.[|libcore:icu:LocaleData.decimalSeparator|]   @char;
#L0f561a.   v3.[|java:text:DecimalFormatSymbols.decimalSeparator|]  := v2 @char;
#L0f561e.   v2:= v1.[|libcore:icu:LocaleData.groupingSeparator|]   @char;
#L0f5622.   v3.[|java:text:DecimalFormatSymbols.groupingSeparator|]  := v2 @char;
#L0f5626.   v2:= v1.[|libcore:icu:LocaleData.patternSeparator|]   @char;
#L0f562a.   v3.[|java:text:DecimalFormatSymbols.patternSeparator|]  := v2 @char;
#L0f562e.   v2:= v1.[|libcore:icu:LocaleData.percent|]   @char;
#L0f5632.   v3.[|java:text:DecimalFormatSymbols.percent|]  := v2 @char;
#L0f5636.   v2:= v1.[|libcore:icu:LocaleData.perMill|]   @char;
#L0f563a.   v3.[|java:text:DecimalFormatSymbols.perMill|]  := v2 @char;
#L0f563e.   v2:= v1.[|libcore:icu:LocaleData.monetarySeparator|]   @char;
#L0f5642.   v3.[|java:text:DecimalFormatSymbols.monetarySeparator|]  := v2 @char;
#L0f5646.   v2:= v1.[|libcore:icu:LocaleData.minusSign|]   @char;
#L0f564a.   v3.[|java:text:DecimalFormatSymbols.minusSign|]  := v2 @char;
#L0f564e.   v2:= v1.[|libcore:icu:LocaleData.infinity|]   @type object;
#L0f5652.   v3.[|java:text:DecimalFormatSymbols.infinity|]  := v2 @type object;
#L0f5656.   v2:= v1.[|libcore:icu:LocaleData.NaN|]   @type object;
#L0f565a.   v3.[|java:text:DecimalFormatSymbols.NaN|]  := v2 @type object;
#L0f565e.   v2:= v1.[|libcore:icu:LocaleData.exponentSeparator|]   @type object;
#L0f5662.   v3.[|java:text:DecimalFormatSymbols.exponentSeparator|]  := v2 @type object;
#L0f5666.   v3.[|java:text:DecimalFormatSymbols.locale|]  := v4 @type object;
#L0f566a.   call temp:=  [|java:util:Currency.getInstance|](v4) @signature [|Ljava/util/Currency;.getInstance:(Ljava/util/Locale;)Ljava/util/Currency;|] @classDescriptor [|java:util:Currency|] @type static;
#L0f5670.   v2:= temp  @type object;
#L0f5672.   v3.[|java:text:DecimalFormatSymbols.currency|]  := v2 @type object;
#L0f5676.   v2:= v3.[|java:text:DecimalFormatSymbols.currency|]   @type object;
#L0f567a.   call temp:=  [|java:util:Currency.getSymbol|](v2, v4) @signature [|Ljava/util/Currency;.getSymbol:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:util:Currency|] @type virtual;
#L0f5680.   v2:= temp  @type object;
#L0f5682.   v3.[|java:text:DecimalFormatSymbols.currencySymbol|]  := v2 @type object;
#L0f5686.   v2:= v3.[|java:text:DecimalFormatSymbols.currency|]   @type object;
#L0f568a.   call temp:=  [|java:util:Currency.getCurrencyCode|](v2) @signature [|Ljava/util/Currency;.getCurrencyCode:()Ljava/lang/String;|] @classDescriptor [|java:util:Currency|] @type virtual;
#L0f5690.   v2:= temp  @type object;
#L0f5692.   v3.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]  := v2 @type object;
#L0f5696.   return @void ;
#L0f5698.   v0:= Exception  @type object;
#L0f569a.   v2:= "XXX" @type (object, string);
#L0f569e.   call temp:=  [|java:util:Currency.getInstance|](v2) @signature [|Ljava/util/Currency;.getInstance:(Ljava/lang/String;)Ljava/util/Currency;|] @classDescriptor [|java:util:Currency|] @type static;
#L0f56a4.   v2:= temp  @type object;
#L0f56a6.   v3.[|java:text:DecimalFormatSymbols.currency|]  := v2 @type object;
#L0f56aa.   v2:= v1.[|libcore:icu:LocaleData.currencySymbol|]   @type object;
#L0f56ae.   v3.[|java:text:DecimalFormatSymbols.currencySymbol|]  := v2 @type object;
#L0f56b2.   v2:= v1.[|libcore:icu:LocaleData.internationalCurrencySymbol|]   @type object;
#L0f56b6.   v3.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]  := v2 @type object;
#L0f56ba.   goto L0f5696;
  catch  [|java:lang:IllegalArgumentException|] @[L0f566a..L0f5696] goto L0f5698;

   }
    procedure [|java:util:Locale|][] [|java:text:DecimalFormatSymbols.getAvailableLocales|] () @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getAvailableLocales:()[Ljava/util/Locale;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f56dc.   call temp:=  [|libcore:icu:ICU.getAvailableDecimalFormatSymbolsLocales|]() @signature [|Llibcore/icu/ICU;.getAvailableDecimalFormatSymbolsLocales:()[Ljava/util/Locale;|] @classDescriptor [|libcore:icu:ICU|] @type static;
#L0f56e2.   v0:= temp  @type object;
#L0f56e4.   return v0  @type object;

   }
    procedure [|java:text:DecimalFormatSymbols|] [|java:text:DecimalFormatSymbols.getInstance|] () @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getInstance:()Ljava/text/DecimalFormatSymbols;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f56f8.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f56fe.   v0:= temp  @type object;
#L0f5700.   call temp:=  [|java:text:DecimalFormatSymbols.getInstance|](v0) @signature [|Ljava/text/DecimalFormatSymbols;.getInstance:(Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols;|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type static;
#L0f5706.   v0:= temp  @type object;
#L0f5708.   return v0  @type object;

   }
    procedure [|java:text:DecimalFormatSymbols|] [|java:text:DecimalFormatSymbols.getInstance|] ([|java:util:Locale|] v2 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getInstance:(Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L0f571c.   if v2 != 0 then goto L0f5730;
#L0f5720.   v0:= new [|java:lang:NullPointerException|];
#L0f5724.   v1:= "locale == null" @type (object, string);
#L0f5728.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f572e.   throw v0;
#L0f5730.   v0:= new [|java:text:DecimalFormatSymbols|];
#L0f5734.   call temp:=  [|java:text:DecimalFormatSymbols.<init>|](v0, v2) @signature [|Ljava/text/DecimalFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type direct;
#L0f573a.   return v0  @type object;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.readObject|] ([|java:text:DecimalFormatSymbols|] v7 @type (this), [|java:io:ObjectInputStream|] v8 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        [|java:lang:IllegalArgumentException|] v0 @varname [|e|] @scope ((L00e2,L00e5));
        [|java:io:ObjectInputStream$GetField|] v1 @varname [|fields|] @scope ((L0007,L00e5));
        [|int|] v2 @varname [|serialVersionOnStream|] @scope ((L000e,L00e5));


        v3;
        v4;
        v5;
        v6;
      
#L0f574c.   v6:= 0  @length 4;
#L0f574e.   v5:= 46  @length 16;
#L0f5752.   call temp:=  [|java:io:ObjectInputStream.readFields|](v8) @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0f5758.   v1:= temp  @type object;
#L0f575a.   v3:= "serialVersionOnStream" @type (object, string);
#L0f575e.   v4:= 0  @length 4;
#L0f5760.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f5766.   v2:= temp;
#L0f5768.   v3:= "currencySymbol" @type (object, string);
#L0f576c.   v4:= "" @type (object, string);
#L0f5770.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f5776.   v3:= temp  @type object;
#L0f5778.   v3:= ([|java:lang:String|])v3;
#L0f577c.   v7.[|java:text:DecimalFormatSymbols.currencySymbol|]  := v3 @type object;
#L0f5780.   v3:= "decimalSeparator" @type (object, string);
#L0f5784.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v5) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f578a.   v3:= temp;
#L0f578c.   call temp:=  [|java:text:DecimalFormatSymbols.setDecimalSeparator|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setDecimalSeparator:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5792.   v3:= "digit" @type (object, string);
#L0f5796.   v4:= 35  @length 16;
#L0f579a.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f57a0.   v3:= temp;
#L0f57a2.   call temp:=  [|java:text:DecimalFormatSymbols.setDigit|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setDigit:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f57a8.   v3:= "groupingSeparator" @type (object, string);
#L0f57ac.   v4:= 44  @length 16;
#L0f57b0.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f57b6.   v3:= temp;
#L0f57b8.   call temp:=  [|java:text:DecimalFormatSymbols.setGroupingSeparator|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setGroupingSeparator:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f57be.   v3:= "infinity" @type (object, string);
#L0f57c2.   v4:= "" @type (object, string);
#L0f57c6.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f57cc.   v3:= temp  @type object;
#L0f57ce.   v3:= ([|java:lang:String|])v3;
#L0f57d2.   v7.[|java:text:DecimalFormatSymbols.infinity|]  := v3 @type object;
#L0f57d6.   v3:= "intlCurrencySymbol" @type (object, string);
#L0f57da.   v4:= "" @type (object, string);
#L0f57de.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f57e4.   v3:= temp  @type object;
#L0f57e6.   v3:= ([|java:lang:String|])v3;
#L0f57ea.   v7.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]  := v3 @type object;
#L0f57ee.   v3:= "minusSign" @type (object, string);
#L0f57f2.   v4:= 45  @length 16;
#L0f57f6.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f57fc.   v3:= temp;
#L0f57fe.   call temp:=  [|java:text:DecimalFormatSymbols.setMinusSign|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setMinusSign:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5804.   v3:= "NaN" @type (object, string);
#L0f5808.   v4:= "" @type (object, string);
#L0f580c.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f5812.   v3:= temp  @type object;
#L0f5814.   v3:= ([|java:lang:String|])v3;
#L0f5818.   v7.[|java:text:DecimalFormatSymbols.NaN|]  := v3 @type object;
#L0f581c.   v3:= "patternSeparator" @type (object, string);
#L0f5820.   v4:= 59  @length 16;
#L0f5824.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f582a.   v3:= temp;
#L0f582c.   call temp:=  [|java:text:DecimalFormatSymbols.setPatternSeparator|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setPatternSeparator:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5832.   v3:= "percent" @type (object, string);
#L0f5836.   v4:= 37  @length 16;
#L0f583a.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f5840.   v3:= temp;
#L0f5842.   call temp:=  [|java:text:DecimalFormatSymbols.setPercent|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setPercent:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5848.   v3:= "perMill" @type (object, string);
#L0f584c.   v4:= 8240  @length 16;
#L0f5850.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f5856.   v3:= temp;
#L0f5858.   call temp:=  [|java:text:DecimalFormatSymbols.setPerMill|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setPerMill:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f585e.   v3:= "zeroDigit" @type (object, string);
#L0f5862.   v4:= 48  @length 16;
#L0f5866.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f586c.   v3:= temp;
#L0f586e.   call temp:=  [|java:text:DecimalFormatSymbols.setZeroDigit|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setZeroDigit:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5874.   v3:= "locale" @type (object, string);
#L0f5878.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v6) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f587e.   v3:= temp  @type object;
#L0f5880.   v3:= ([|java:util:Locale|])v3;
#L0f5884.   v7.[|java:text:DecimalFormatSymbols.locale|]  := v3 @type object;
#L0f5888.   if v2 != 0 then goto L0f58b8;
#L0f588c.   call temp:=  [|java:text:DecimalFormatSymbols.getDecimalSeparator|](v7) @signature [|Ljava/text/DecimalFormatSymbols;.getDecimalSeparator:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5892.   v3:= temp;
#L0f5894.   call temp:=  [|java:text:DecimalFormatSymbols.setMonetaryDecimalSeparator|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setMonetaryDecimalSeparator:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f589a.   if v2 != 0 then goto L0f58cc;
#L0f589e.   v3:= "E" @type (object, string);
#L0f58a2.   v7.[|java:text:DecimalFormatSymbols.exponentSeparator|]  := v3 @type object;
#L0f58a6.   v3:= v7.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]   @type object;
#L0f58aa.   call temp:=  [|java:util:Currency.getInstance|](v3) @signature [|Ljava/util/Currency;.getInstance:(Ljava/lang/String;)Ljava/util/Currency;|] @classDescriptor [|java:util:Currency|] @type static;
#L0f58b0.   v3:= temp  @type object;
#L0f58b2.   v7.[|java:text:DecimalFormatSymbols.currency|]  := v3 @type object;
#L0f58b6.   return @void ;
#L0f58b8.   v3:= "monetarySeparator" @type (object, string);
#L0f58bc.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v5) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f58c2.   v3:= temp;
#L0f58c4.   call temp:=  [|java:text:DecimalFormatSymbols.setMonetaryDecimalSeparator|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setMonetaryDecimalSeparator:(C)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f58ca.   goto L0f589a;
#L0f58cc.   v3:= 3  @length 4;
#L0f58ce.   if v2 >= v3 then goto L0f58f2;
#L0f58d2.   v3:= "exponential" @type (object, string);
#L0f58d6.   v4:= 69  @length 16;
#L0f58da.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;C)C|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f58e0.   v3:= temp;
#L0f58e2.   call temp:=  [|java:lang:String.valueOf|](v3) @signature [|Ljava/lang/String;.valueOf:(C)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L0f58e8.   v3:= temp  @type object;
#L0f58ea.   call temp:=  [|java:text:DecimalFormatSymbols.setExponentSeparator|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setExponentSeparator:(Ljava/lang/String;)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f58f0.   goto L0f58a6;
#L0f58f2.   v3:= "exponentialSeparator" @type (object, string);
#L0f58f6.   v4:= "E" @type (object, string);
#L0f58fa.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f5900.   v3:= temp  @type object;
#L0f5902.   v3:= ([|java:lang:String|])v3;
#L0f5906.   call temp:=  [|java:text:DecimalFormatSymbols.setExponentSeparator|](v7, v3) @signature [|Ljava/text/DecimalFormatSymbols;.setExponentSeparator:(Ljava/lang/String;)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f590c.   goto L0f58a6;
#L0f590e.   v0:= Exception  @type object;
#L0f5910.   v7.[|java:text:DecimalFormatSymbols.currency|]  := v6 @type object;
#L0f5914.   goto L0f58b6;
  catch  [|java:lang:IllegalArgumentException|] @[L0f58a6..L0f58b6] goto L0f590e;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.writeObject|] ([|java:text:DecimalFormatSymbols|] v4 @type (this), [|java:io:ObjectOutputStream|] v5 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        [|java:io:ObjectOutputStream$PutField|] v0 @varname [|fields|] @scope ((L0004,L0095));


        v1;
        v2;
        v3;
      
#L0f5938.   call temp:=  [|java:io:ObjectOutputStream.putFields|](v5) @signature [|Ljava/io/ObjectOutputStream;.putFields:()Ljava/io/ObjectOutputStream$PutField;|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f593e.   v0:= temp  @type object;
#L0f5940.   v1:= "currencySymbol" @type (object, string);
#L0f5944.   v2:= v4.[|java:text:DecimalFormatSymbols.currencySymbol|]   @type object;
#L0f5948.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f594e.   v1:= "decimalSeparator" @type (object, string);
#L0f5952.   call temp:=  [|java:text:DecimalFormatSymbols.getDecimalSeparator|](v4) @signature [|Ljava/text/DecimalFormatSymbols;.getDecimalSeparator:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5958.   v2:= temp;
#L0f595a.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f5960.   v1:= "digit" @type (object, string);
#L0f5964.   call temp:=  [|java:text:DecimalFormatSymbols.getDigit|](v4) @signature [|Ljava/text/DecimalFormatSymbols;.getDigit:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f596a.   v2:= temp;
#L0f596c.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f5972.   v1:= "exponential" @type (object, string);
#L0f5976.   v2:= v4.[|java:text:DecimalFormatSymbols.exponentSeparator|]   @type object;
#L0f597a.   v3:= 0  @length 4;
#L0f597c.   call temp:=  [|java:lang:String.charAt|](v2, v3) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5982.   v2:= temp;
#L0f5984.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f598a.   v1:= "exponentialSeparator" @type (object, string);
#L0f598e.   v2:= v4.[|java:text:DecimalFormatSymbols.exponentSeparator|]   @type object;
#L0f5992.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f5998.   v1:= "groupingSeparator" @type (object, string);
#L0f599c.   call temp:=  [|java:text:DecimalFormatSymbols.getGroupingSeparator|](v4) @signature [|Ljava/text/DecimalFormatSymbols;.getGroupingSeparator:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f59a2.   v2:= temp;
#L0f59a4.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f59aa.   v1:= "infinity" @type (object, string);
#L0f59ae.   v2:= v4.[|java:text:DecimalFormatSymbols.infinity|]   @type object;
#L0f59b2.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f59b8.   v1:= "intlCurrencySymbol" @type (object, string);
#L0f59bc.   v2:= v4.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]   @type object;
#L0f59c0.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f59c6.   v1:= "minusSign" @type (object, string);
#L0f59ca.   call temp:=  [|java:text:DecimalFormatSymbols.getMinusSign|](v4) @signature [|Ljava/text/DecimalFormatSymbols;.getMinusSign:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f59d0.   v2:= temp;
#L0f59d2.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f59d8.   v1:= "monetarySeparator" @type (object, string);
#L0f59dc.   call temp:=  [|java:text:DecimalFormatSymbols.getMonetaryDecimalSeparator|](v4) @signature [|Ljava/text/DecimalFormatSymbols;.getMonetaryDecimalSeparator:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f59e2.   v2:= temp;
#L0f59e4.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f59ea.   v1:= "NaN" @type (object, string);
#L0f59ee.   v2:= v4.[|java:text:DecimalFormatSymbols.NaN|]   @type object;
#L0f59f2.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f59f8.   v1:= "patternSeparator" @type (object, string);
#L0f59fc.   call temp:=  [|java:text:DecimalFormatSymbols.getPatternSeparator|](v4) @signature [|Ljava/text/DecimalFormatSymbols;.getPatternSeparator:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5a02.   v2:= temp;
#L0f5a04.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f5a0a.   v1:= "percent" @type (object, string);
#L0f5a0e.   call temp:=  [|java:text:DecimalFormatSymbols.getPercent|](v4) @signature [|Ljava/text/DecimalFormatSymbols;.getPercent:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5a14.   v2:= temp;
#L0f5a16.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f5a1c.   v1:= "perMill" @type (object, string);
#L0f5a20.   call temp:=  [|java:text:DecimalFormatSymbols.getPerMill|](v4) @signature [|Ljava/text/DecimalFormatSymbols;.getPerMill:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5a26.   v2:= temp;
#L0f5a28.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f5a2e.   v1:= "serialVersionOnStream" @type (object, string);
#L0f5a32.   v2:= 3  @length 4;
#L0f5a34.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f5a3a.   v1:= "zeroDigit" @type (object, string);
#L0f5a3e.   call temp:=  [|java:text:DecimalFormatSymbols.getZeroDigit|](v4) @signature [|Ljava/text/DecimalFormatSymbols;.getZeroDigit:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f5a44.   v2:= temp;
#L0f5a46.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;C)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f5a4c.   v1:= "locale" @type (object, string);
#L0f5a50.   v2:= v4.[|java:text:DecimalFormatSymbols.locale|]   @type object;
#L0f5a54.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f5a5a.   call temp:=  [|java:io:ObjectOutputStream.writeFields|](v5) @signature [|Ljava/io/ObjectOutputStream;.writeFields:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f5a60.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:text:DecimalFormatSymbols.clone|] ([|java:text:DecimalFormatSymbols|] v2 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:lang:CloneNotSupportedException|] v0 @varname [|e|] @scope ((L0006,L000c));

        v1;
      
#L0f5a74.   call temp:=  [|java:lang:Object.clone|](v2) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0f5a7a.   v1:= temp  @type object;
#L0f5a7c.   return v1  @type object;
#L0f5a7e.   v0:= Exception  @type object;
#L0f5a80.   v1:= new [|java:lang:AssertionError|];
#L0f5a84.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0f5a8a.   throw v1;
  catch  [|java:lang:CloneNotSupportedException|] @[L0f5a74..L0f5a7a] goto L0f5a7e;

   }
    procedure [|boolean|] [|java:text:DecimalFormatSymbols.equals|] ([|java:text:DecimalFormatSymbols|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:DecimalFormatSymbols|] v0 @varname [|obj|] @scope ((L000e,L0082));


        v1;
        v2;
        v3;
        v4;
      
#L0f5aac.   v1:= 1  @length 4;
#L0f5aae.   v2:= 0  @length 4;
#L0f5ab0.   if v5 != v6 then goto L0f5ab6;
#L0f5ab4.   return v1;
#L0f5ab6.   v3:= instanceof @varname v6 @type [|java:text:DecimalFormatSymbols|];
#L0f5aba.   if v3 != 0 then goto L0f5ac2;
#L0f5abe.   v1:= v2;
#L0f5ac0.   goto L0f5ab4;
#L0f5ac2.   v0:= v6  @type object;
#L0f5ac4.   v0:= ([|java:text:DecimalFormatSymbols|])v0;
#L0f5ac8.   v3:= v5.[|java:text:DecimalFormatSymbols.currency|]   @type object;
#L0f5acc.   v4:= v0.[|java:text:DecimalFormatSymbols.currency|]   @type object;
#L0f5ad0.   call temp:=  [|java:lang:Object.equals|](v3, v4) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f5ad6.   v3:= temp;
#L0f5ad8.   if v3 == 0 then goto L0f5bac;
#L0f5adc.   v3:= v5.[|java:text:DecimalFormatSymbols.currencySymbol|]   @type object;
#L0f5ae0.   v4:= v0.[|java:text:DecimalFormatSymbols.currencySymbol|]   @type object;
#L0f5ae4.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5aea.   v3:= temp;
#L0f5aec.   if v3 == 0 then goto L0f5bac;
#L0f5af0.   v3:= v5.[|java:text:DecimalFormatSymbols.decimalSeparator|]   @char;
#L0f5af4.   v4:= v0.[|java:text:DecimalFormatSymbols.decimalSeparator|]   @char;
#L0f5af8.   if v3 != v4 then goto L0f5bac;
#L0f5afc.   v3:= v5.[|java:text:DecimalFormatSymbols.digit|]   @char;
#L0f5b00.   v4:= v0.[|java:text:DecimalFormatSymbols.digit|]   @char;
#L0f5b04.   if v3 != v4 then goto L0f5bac;
#L0f5b08.   v3:= v5.[|java:text:DecimalFormatSymbols.exponentSeparator|]   @type object;
#L0f5b0c.   v4:= v0.[|java:text:DecimalFormatSymbols.exponentSeparator|]   @type object;
#L0f5b10.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5b16.   v3:= temp;
#L0f5b18.   if v3 == 0 then goto L0f5bac;
#L0f5b1c.   v3:= v5.[|java:text:DecimalFormatSymbols.groupingSeparator|]   @char;
#L0f5b20.   v4:= v0.[|java:text:DecimalFormatSymbols.groupingSeparator|]   @char;
#L0f5b24.   if v3 != v4 then goto L0f5bac;
#L0f5b28.   v3:= v5.[|java:text:DecimalFormatSymbols.infinity|]   @type object;
#L0f5b2c.   v4:= v0.[|java:text:DecimalFormatSymbols.infinity|]   @type object;
#L0f5b30.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5b36.   v3:= temp;
#L0f5b38.   if v3 == 0 then goto L0f5bac;
#L0f5b3c.   v3:= v5.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]   @type object;
#L0f5b40.   v4:= v0.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]   @type object;
#L0f5b44.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5b4a.   v3:= temp;
#L0f5b4c.   if v3 == 0 then goto L0f5bac;
#L0f5b50.   v3:= v5.[|java:text:DecimalFormatSymbols.minusSign|]   @char;
#L0f5b54.   v4:= v0.[|java:text:DecimalFormatSymbols.minusSign|]   @char;
#L0f5b58.   if v3 != v4 then goto L0f5bac;
#L0f5b5c.   v3:= v5.[|java:text:DecimalFormatSymbols.monetarySeparator|]   @char;
#L0f5b60.   v4:= v0.[|java:text:DecimalFormatSymbols.monetarySeparator|]   @char;
#L0f5b64.   if v3 != v4 then goto L0f5bac;
#L0f5b68.   v3:= v5.[|java:text:DecimalFormatSymbols.NaN|]   @type object;
#L0f5b6c.   v4:= v0.[|java:text:DecimalFormatSymbols.NaN|]   @type object;
#L0f5b70.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5b76.   v3:= temp;
#L0f5b78.   if v3 == 0 then goto L0f5bac;
#L0f5b7c.   v3:= v5.[|java:text:DecimalFormatSymbols.patternSeparator|]   @char;
#L0f5b80.   v4:= v0.[|java:text:DecimalFormatSymbols.patternSeparator|]   @char;
#L0f5b84.   if v3 != v4 then goto L0f5bac;
#L0f5b88.   v3:= v5.[|java:text:DecimalFormatSymbols.perMill|]   @char;
#L0f5b8c.   v4:= v0.[|java:text:DecimalFormatSymbols.perMill|]   @char;
#L0f5b90.   if v3 != v4 then goto L0f5bac;
#L0f5b94.   v3:= v5.[|java:text:DecimalFormatSymbols.percent|]   @char;
#L0f5b98.   v4:= v0.[|java:text:DecimalFormatSymbols.percent|]   @char;
#L0f5b9c.   if v3 != v4 then goto L0f5bac;
#L0f5ba0.   v3:= v5.[|java:text:DecimalFormatSymbols.zeroDigit|]   @char;
#L0f5ba4.   v4:= v0.[|java:text:DecimalFormatSymbols.zeroDigit|]   @char;
#L0f5ba8.   if v3 == v4 then goto L0f5ab4;
#L0f5bac.   v1:= v2;
#L0f5bae.   goto L0f5ab4;

   }
    procedure [|java:util:Currency|] [|java:text:DecimalFormatSymbols.getCurrency|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getCurrency:()Ljava/util/Currency;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5bc0.   v0:= v1.[|java:text:DecimalFormatSymbols.currency|]   @type object;
#L0f5bc4.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormatSymbols.getCurrencySymbol|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getCurrencySymbol:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5bd8.   v0:= v1.[|java:text:DecimalFormatSymbols.currencySymbol|]   @type object;
#L0f5bdc.   return v0  @type object;

   }
    procedure [|char|] [|java:text:DecimalFormatSymbols.getDecimalSeparator|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getDecimalSeparator:()C|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5bf0.   v0:= v1.[|java:text:DecimalFormatSymbols.decimalSeparator|]   @char;
#L0f5bf4.   return v0;

   }
    procedure [|char|] [|java:text:DecimalFormatSymbols.getDigit|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getDigit:()C|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5c08.   v0:= v1.[|java:text:DecimalFormatSymbols.digit|]   @char;
#L0f5c0c.   return v0;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormatSymbols.getExponentSeparator|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getExponentSeparator:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5c20.   v0:= v1.[|java:text:DecimalFormatSymbols.exponentSeparator|]   @type object;
#L0f5c24.   return v0  @type object;

   }
    procedure [|char|] [|java:text:DecimalFormatSymbols.getGroupingSeparator|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getGroupingSeparator:()C|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5c38.   v0:= v1.[|java:text:DecimalFormatSymbols.groupingSeparator|]   @char;
#L0f5c3c.   return v0;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormatSymbols.getInfinity|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getInfinity:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5c50.   v0:= v1.[|java:text:DecimalFormatSymbols.infinity|]   @type object;
#L0f5c54.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormatSymbols.getInternationalCurrencySymbol|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getInternationalCurrencySymbol:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5c68.   v0:= v1.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]   @type object;
#L0f5c6c.   return v0  @type object;

   }
    procedure [|char|] [|java:text:DecimalFormatSymbols.getMinusSign|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getMinusSign:()C|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5c80.   v0:= v1.[|java:text:DecimalFormatSymbols.minusSign|]   @char;
#L0f5c84.   return v0;

   }
    procedure [|char|] [|java:text:DecimalFormatSymbols.getMonetaryDecimalSeparator|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getMonetaryDecimalSeparator:()C|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5c98.   v0:= v1.[|java:text:DecimalFormatSymbols.monetarySeparator|]   @char;
#L0f5c9c.   return v0;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormatSymbols.getNaN|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getNaN:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5cb0.   v0:= v1.[|java:text:DecimalFormatSymbols.NaN|]   @type object;
#L0f5cb4.   return v0  @type object;

   }
    procedure [|char|] [|java:text:DecimalFormatSymbols.getPatternSeparator|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getPatternSeparator:()C|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5cc8.   v0:= v1.[|java:text:DecimalFormatSymbols.patternSeparator|]   @char;
#L0f5ccc.   return v0;

   }
    procedure [|char|] [|java:text:DecimalFormatSymbols.getPerMill|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getPerMill:()C|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5ce0.   v0:= v1.[|java:text:DecimalFormatSymbols.perMill|]   @char;
#L0f5ce4.   return v0;

   }
    procedure [|char|] [|java:text:DecimalFormatSymbols.getPercent|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getPercent:()C|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5cf8.   v0:= v1.[|java:text:DecimalFormatSymbols.percent|]   @char;
#L0f5cfc.   return v0;

   }
    procedure [|char|] [|java:text:DecimalFormatSymbols.getZeroDigit|] ([|java:text:DecimalFormatSymbols|] v1 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.getZeroDigit:()C|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f5d10.   v0:= v1.[|java:text:DecimalFormatSymbols.zeroDigit|]   @char;
#L0f5d14.   return v0;

   }
    procedure [|int|] [|java:text:DecimalFormatSymbols.hashCode|] ([|java:text:DecimalFormatSymbols|] v3 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|result|] @scope ((L0002,L0069));

        v1;
        v2;
      
#L0f5d28.   v0:= 17  @length 16;
#L0f5d2c.   v1:= v3.[|java:text:DecimalFormatSymbols.zeroDigit|]   @char;
#L0f5d30.   v0:= v1 + 527;
#L0f5d34.   v1:= v0 * 31;
#L0f5d38.   v2:= v3.[|java:text:DecimalFormatSymbols.digit|]   @char;
#L0f5d3c.   v0:= v1 + v2  @type int;
#L0f5d40.   v1:= v0 * 31;
#L0f5d44.   v2:= v3.[|java:text:DecimalFormatSymbols.decimalSeparator|]   @char;
#L0f5d48.   v0:= v1 + v2  @type int;
#L0f5d4c.   v1:= v0 * 31;
#L0f5d50.   v2:= v3.[|java:text:DecimalFormatSymbols.groupingSeparator|]   @char;
#L0f5d54.   v0:= v1 + v2  @type int;
#L0f5d58.   v1:= v0 * 31;
#L0f5d5c.   v2:= v3.[|java:text:DecimalFormatSymbols.patternSeparator|]   @char;
#L0f5d60.   v0:= v1 + v2  @type int;
#L0f5d64.   v1:= v0 * 31;
#L0f5d68.   v2:= v3.[|java:text:DecimalFormatSymbols.percent|]   @char;
#L0f5d6c.   v0:= v1 + v2  @type int;
#L0f5d70.   v1:= v0 * 31;
#L0f5d74.   v2:= v3.[|java:text:DecimalFormatSymbols.perMill|]   @char;
#L0f5d78.   v0:= v1 + v2  @type int;
#L0f5d7c.   v1:= v0 * 31;
#L0f5d80.   v2:= v3.[|java:text:DecimalFormatSymbols.monetarySeparator|]   @char;
#L0f5d84.   v0:= v1 + v2  @type int;
#L0f5d88.   v1:= v0 * 31;
#L0f5d8c.   v2:= v3.[|java:text:DecimalFormatSymbols.minusSign|]   @char;
#L0f5d90.   v0:= v1 + v2  @type int;
#L0f5d94.   v1:= v0 * 31;
#L0f5d98.   v2:= v3.[|java:text:DecimalFormatSymbols.exponentSeparator|]   @type object;
#L0f5d9c.   call temp:=  [|java:lang:String.hashCode|](v2) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5da2.   v2:= temp;
#L0f5da4.   v0:= v1 + v2  @type int;
#L0f5da8.   v1:= v0 * 31;
#L0f5dac.   v2:= v3.[|java:text:DecimalFormatSymbols.infinity|]   @type object;
#L0f5db0.   call temp:=  [|java:lang:String.hashCode|](v2) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5db6.   v2:= temp;
#L0f5db8.   v0:= v1 + v2  @type int;
#L0f5dbc.   v1:= v0 * 31;
#L0f5dc0.   v2:= v3.[|java:text:DecimalFormatSymbols.NaN|]   @type object;
#L0f5dc4.   call temp:=  [|java:lang:String.hashCode|](v2) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5dca.   v2:= temp;
#L0f5dcc.   v0:= v1 + v2  @type int;
#L0f5dd0.   v1:= v0 * 31;
#L0f5dd4.   v2:= v3.[|java:text:DecimalFormatSymbols.currencySymbol|]   @type object;
#L0f5dd8.   call temp:=  [|java:lang:String.hashCode|](v2) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5dde.   v2:= temp;
#L0f5de0.   v0:= v1 + v2  @type int;
#L0f5de4.   v1:= v0 * 31;
#L0f5de8.   v2:= v3.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]   @type object;
#L0f5dec.   call temp:=  [|java:lang:String.hashCode|](v2) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5df2.   v2:= temp;
#L0f5df4.   v0:= v1 + v2  @type int;
#L0f5df8.   return v0;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setCurrency|] ([|java:text:DecimalFormatSymbols|] v2 @type (this), [|java:util:Currency|] v3 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setCurrency:(Ljava/util/Currency;)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f5e0c.   if v3 != 0 then goto L0f5e20;
#L0f5e10.   v0:= new [|java:lang:NullPointerException|];
#L0f5e14.   v1:= "currency == null" @type (object, string);
#L0f5e18.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f5e1e.   throw v0;
#L0f5e20.   v0:= v2.[|java:text:DecimalFormatSymbols.currency|]   @type object;
#L0f5e24.   if v3 != v0 then goto L0f5e2a;
#L0f5e28.   return @void ;
#L0f5e2a.   v2.[|java:text:DecimalFormatSymbols.currency|]  := v3 @type object;
#L0f5e2e.   call temp:=  [|java:util:Currency.getCurrencyCode|](v3) @signature [|Ljava/util/Currency;.getCurrencyCode:()Ljava/lang/String;|] @classDescriptor [|java:util:Currency|] @type virtual;
#L0f5e34.   v0:= temp  @type object;
#L0f5e36.   v2.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]  := v0 @type object;
#L0f5e3a.   v0:= v2.[|java:text:DecimalFormatSymbols.locale|]   @type object;
#L0f5e3e.   call temp:=  [|java:util:Currency.getSymbol|](v3, v0) @signature [|Ljava/util/Currency;.getSymbol:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:util:Currency|] @type virtual;
#L0f5e44.   v0:= temp  @type object;
#L0f5e46.   v2.[|java:text:DecimalFormatSymbols.currencySymbol|]  := v0 @type object;
#L0f5e4a.   goto L0f5e28;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setCurrencySymbol|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setCurrencySymbol:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


      
#L0f5e5c.   v0.[|java:text:DecimalFormatSymbols.currencySymbol|]  := v1 @type object;
#L0f5e60.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setDecimalSeparator|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|char|] v1) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setDecimalSeparator:(C)V|] @Access PUBLIC {
      local temp ;


      
#L0f5e74.   v0.[|java:text:DecimalFormatSymbols.decimalSeparator|]  := v1 @char;
#L0f5e78.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setDigit|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|char|] v1) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setDigit:(C)V|] @Access PUBLIC {
      local temp ;


      
#L0f5e8c.   v0.[|java:text:DecimalFormatSymbols.digit|]  := v1 @char;
#L0f5e90.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setExponentSeparator|] ([|java:text:DecimalFormatSymbols|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setExponentSeparator:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f5ea4.   if v3 != 0 then goto L0f5eb8;
#L0f5ea8.   v0:= new [|java:lang:NullPointerException|];
#L0f5eac.   v1:= "value == null" @type (object, string);
#L0f5eb0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f5eb6.   throw v0;
#L0f5eb8.   v2.[|java:text:DecimalFormatSymbols.exponentSeparator|]  := v3 @type object;
#L0f5ebc.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setGroupingSeparator|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|char|] v1) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setGroupingSeparator:(C)V|] @Access PUBLIC {
      local temp ;


      
#L0f5ed0.   v0.[|java:text:DecimalFormatSymbols.groupingSeparator|]  := v1 @char;
#L0f5ed4.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setInfinity|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setInfinity:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


      
#L0f5ee8.   v0.[|java:text:DecimalFormatSymbols.infinity|]  := v1 @type object;
#L0f5eec.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setInternationalCurrencySymbol|] ([|java:text:DecimalFormatSymbols|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setInternationalCurrencySymbol:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        [|java:lang:IllegalArgumentException|] v0 @varname [|e|] @scope ((L0024,L0027));


        v1;
        v2;
        v3;
      
#L0f5f00.   v3:= 0  @length 4;
#L0f5f02.   if v5 != 0 then goto L0f5f10;
#L0f5f06.   v4.[|java:text:DecimalFormatSymbols.currency|]  := v3 @type object;
#L0f5f0a.   v4.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]  := v3 @type object;
#L0f5f0e.   return @void ;
#L0f5f10.   v1:= v4.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]   @type object;
#L0f5f14.   call temp:=  [|java:lang:String.equals|](v5, v1) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f5f1a.   v1:= temp;
#L0f5f1c.   if v1 != 0 then goto L0f5f0e;
#L0f5f20.   call temp:=  [|java:util:Currency.getInstance|](v5) @signature [|Ljava/util/Currency;.getInstance:(Ljava/lang/String;)Ljava/util/Currency;|] @classDescriptor [|java:util:Currency|] @type static;
#L0f5f26.   v1:= temp  @type object;
#L0f5f28.   v4.[|java:text:DecimalFormatSymbols.currency|]  := v1 @type object;
#L0f5f2c.   v1:= v4.[|java:text:DecimalFormatSymbols.currency|]   @type object;
#L0f5f30.   v2:= v4.[|java:text:DecimalFormatSymbols.locale|]   @type object;
#L0f5f34.   call temp:=  [|java:util:Currency.getSymbol|](v1, v2) @signature [|Ljava/util/Currency;.getSymbol:(Ljava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:util:Currency|] @type virtual;
#L0f5f3a.   v1:= temp  @type object;
#L0f5f3c.   v4.[|java:text:DecimalFormatSymbols.currencySymbol|]  := v1 @type object;
#L0f5f40.   v4.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]  := v5 @type object;
#L0f5f44.   goto L0f5f0e;
#L0f5f46.   v0:= Exception  @type object;
#L0f5f48.   v4.[|java:text:DecimalFormatSymbols.currency|]  := v3 @type object;
#L0f5f4c.   goto L0f5f40;
  catch  [|java:lang:IllegalArgumentException|] @[L0f5f20..L0f5f40] goto L0f5f46;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setMinusSign|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|char|] v1) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setMinusSign:(C)V|] @Access PUBLIC {
      local temp ;


      
#L0f5f70.   v0.[|java:text:DecimalFormatSymbols.minusSign|]  := v1 @char;
#L0f5f74.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setMonetaryDecimalSeparator|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|char|] v1) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setMonetaryDecimalSeparator:(C)V|] @Access PUBLIC {
      local temp ;


      
#L0f5f88.   v0.[|java:text:DecimalFormatSymbols.monetarySeparator|]  := v1 @char;
#L0f5f8c.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setNaN|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setNaN:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


      
#L0f5fa0.   v0.[|java:text:DecimalFormatSymbols.NaN|]  := v1 @type object;
#L0f5fa4.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setPatternSeparator|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|char|] v1) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setPatternSeparator:(C)V|] @Access PUBLIC {
      local temp ;


      
#L0f5fb8.   v0.[|java:text:DecimalFormatSymbols.patternSeparator|]  := v1 @char;
#L0f5fbc.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setPerMill|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|char|] v1) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setPerMill:(C)V|] @Access PUBLIC {
      local temp ;


      
#L0f5fd0.   v0.[|java:text:DecimalFormatSymbols.perMill|]  := v1 @char;
#L0f5fd4.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setPercent|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|char|] v1) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setPercent:(C)V|] @Access PUBLIC {
      local temp ;


      
#L0f5fe8.   v0.[|java:text:DecimalFormatSymbols.percent|]  := v1 @char;
#L0f5fec.   return @void ;

   }
    procedure [|void|] [|java:text:DecimalFormatSymbols.setZeroDigit|] ([|java:text:DecimalFormatSymbols|] v0 @type (this), [|char|] v1) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.setZeroDigit:(C)V|] @Access PUBLIC {
      local temp ;


      
#L0f6000.   v0.[|java:text:DecimalFormatSymbols.zeroDigit|]  := v1 @char;
#L0f6004.   return @void ;

   }
    procedure [|java:lang:String|] [|java:text:DecimalFormatSymbols.toString|] ([|java:text:DecimalFormatSymbols|] v2 @type (this)) @owner [|java:text:DecimalFormatSymbols|] @signature [|Ljava/text/DecimalFormatSymbols;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f6018.   v0:= new [|java:lang:StringBuilder|];
#L0f601c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f6022.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f6028.   v1:= temp  @type object;
#L0f602a.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0f6030.   v1:= temp  @type object;
#L0f6032.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6038.   v0:= temp  @type object;
#L0f603a.   v1:= "[currency=" @type (object, string);
#L0f603e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6044.   v0:= temp  @type object;
#L0f6046.   v1:= v2.[|java:text:DecimalFormatSymbols.currency|]   @type object;
#L0f604a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6050.   v0:= temp  @type object;
#L0f6052.   v1:= ",currencySymbol=" @type (object, string);
#L0f6056.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f605c.   v0:= temp  @type object;
#L0f605e.   v1:= v2.[|java:text:DecimalFormatSymbols.currencySymbol|]   @type object;
#L0f6062.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6068.   v0:= temp  @type object;
#L0f606a.   v1:= ",decimalSeparator=" @type (object, string);
#L0f606e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6074.   v0:= temp  @type object;
#L0f6076.   v1:= v2.[|java:text:DecimalFormatSymbols.decimalSeparator|]   @char;
#L0f607a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6080.   v0:= temp  @type object;
#L0f6082.   v1:= ",digit=" @type (object, string);
#L0f6086.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f608c.   v0:= temp  @type object;
#L0f608e.   v1:= v2.[|java:text:DecimalFormatSymbols.digit|]   @char;
#L0f6092.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6098.   v0:= temp  @type object;
#L0f609a.   v1:= ",exponentSeparator=" @type (object, string);
#L0f609e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f60a4.   v0:= temp  @type object;
#L0f60a6.   v1:= v2.[|java:text:DecimalFormatSymbols.exponentSeparator|]   @type object;
#L0f60aa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f60b0.   v0:= temp  @type object;
#L0f60b2.   v1:= ",groupingSeparator=" @type (object, string);
#L0f60b6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f60bc.   v0:= temp  @type object;
#L0f60be.   v1:= v2.[|java:text:DecimalFormatSymbols.groupingSeparator|]   @char;
#L0f60c2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f60c8.   v0:= temp  @type object;
#L0f60ca.   v1:= ",infinity=" @type (object, string);
#L0f60ce.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f60d4.   v0:= temp  @type object;
#L0f60d6.   v1:= v2.[|java:text:DecimalFormatSymbols.infinity|]   @type object;
#L0f60da.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f60e0.   v0:= temp  @type object;
#L0f60e2.   v1:= ",intlCurrencySymbol=" @type (object, string);
#L0f60e6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f60ec.   v0:= temp  @type object;
#L0f60ee.   v1:= v2.[|java:text:DecimalFormatSymbols.intlCurrencySymbol|]   @type object;
#L0f60f2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f60f8.   v0:= temp  @type object;
#L0f60fa.   v1:= ",minusSign=" @type (object, string);
#L0f60fe.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6104.   v0:= temp  @type object;
#L0f6106.   v1:= v2.[|java:text:DecimalFormatSymbols.minusSign|]   @char;
#L0f610a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6110.   v0:= temp  @type object;
#L0f6112.   v1:= ",monetarySeparator=" @type (object, string);
#L0f6116.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f611c.   v0:= temp  @type object;
#L0f611e.   v1:= v2.[|java:text:DecimalFormatSymbols.monetarySeparator|]   @char;
#L0f6122.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6128.   v0:= temp  @type object;
#L0f612a.   v1:= ",NaN=" @type (object, string);
#L0f612e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6134.   v0:= temp  @type object;
#L0f6136.   v1:= v2.[|java:text:DecimalFormatSymbols.NaN|]   @type object;
#L0f613a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6140.   v0:= temp  @type object;
#L0f6142.   v1:= ",patternSeparator=" @type (object, string);
#L0f6146.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f614c.   v0:= temp  @type object;
#L0f614e.   v1:= v2.[|java:text:DecimalFormatSymbols.patternSeparator|]   @char;
#L0f6152.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6158.   v0:= temp  @type object;
#L0f615a.   v1:= ",perMill=" @type (object, string);
#L0f615e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6164.   v0:= temp  @type object;
#L0f6166.   v1:= v2.[|java:text:DecimalFormatSymbols.perMill|]   @char;
#L0f616a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6170.   v0:= temp  @type object;
#L0f6172.   v1:= ",percent=" @type (object, string);
#L0f6176.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f617c.   v0:= temp  @type object;
#L0f617e.   v1:= v2.[|java:text:DecimalFormatSymbols.percent|]   @char;
#L0f6182.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6188.   v0:= temp  @type object;
#L0f618a.   v1:= ",zeroDigit=" @type (object, string);
#L0f618e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6194.   v0:= temp  @type object;
#L0f6196.   v1:= v2.[|java:text:DecimalFormatSymbols.zeroDigit|]   @char;
#L0f619a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f61a0.   v0:= temp  @type object;
#L0f61a2.   v1:= "]" @type (object, string);
#L0f61a6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f61ac.   v0:= temp  @type object;
#L0f61ae.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f61b4.   v0:= temp  @type object;
#L0f61b6.   return v0  @type object;

   }
record [|java:text:FieldPosition|]  @type class @AccessFlag PUBLIC  {
      [|int|] [|java:text:FieldPosition.beginIndex|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:FieldPosition.endIndex|]    @AccessFlag PRIVATE;
      [|java:text:Format$Field|] [|java:text:FieldPosition.myAttribute|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:FieldPosition.myField|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:text:FieldPosition.<init>|] ([|java:text:FieldPosition|] v0 @type (this), [|int|] v1) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L0f61c8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f61ce.   v0.[|java:text:FieldPosition.myField|]  := v1;
#L0f61d2.   return @void ;

   }
    procedure [|void|] [|java:text:FieldPosition.<init>|] ([|java:text:FieldPosition|] v1 @type (this), [|java:text:Format$Field|] v2 @type (object)) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.<init>:(Ljava/text/Format$Field;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L0f61e4.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f61ea.   v1.[|java:text:FieldPosition.myAttribute|]  := v2 @type object;
#L0f61ee.   v0:= -1  @length 4;
#L0f61f0.   v1.[|java:text:FieldPosition.myField|]  := v0;
#L0f61f4.   return @void ;

   }
    procedure [|void|] [|java:text:FieldPosition.<init>|] ([|java:text:FieldPosition|] v0 @type (this), [|java:text:Format$Field|] v1 @type (object), [|int|] v2) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.<init>:(Ljava/text/Format$Field;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0f6208.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f620e.   v0.[|java:text:FieldPosition.myAttribute|]  := v1 @type object;
#L0f6212.   v0.[|java:text:FieldPosition.myField|]  := v2;
#L0f6216.   return @void ;

   }
    procedure [|void|] [|java:text:FieldPosition.clear|] ([|java:text:FieldPosition|] v1 @type (this)) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.clear:()V|] @Access  {
      local temp ;

        v0;
      
#L0f6228.   v0:= 0  @length 4;
#L0f622a.   v1.[|java:text:FieldPosition.endIndex|]  := v0;
#L0f622e.   v1.[|java:text:FieldPosition.beginIndex|]  := v0;
#L0f6232.   return @void ;

   }
    procedure [|boolean|] [|java:text:FieldPosition.equals|] ([|java:text:FieldPosition|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:FieldPosition|] v0 @varname [|pos|] @scope ((L0009,L0023));


        v1;
        v2;
        v3;
      
#L0f6244.   v1:= 0  @length 4;
#L0f6246.   v2:= instanceof @varname v5 @type [|java:text:FieldPosition|];
#L0f624a.   if v2 != 0 then goto L0f6250;
#L0f624e.   return v1;
#L0f6250.   v0:= v5  @type object;
#L0f6252.   v0:= ([|java:text:FieldPosition|])v0;
#L0f6256.   v2:= v4.[|java:text:FieldPosition.myField|] ;
#L0f625a.   v3:= v0.[|java:text:FieldPosition.myField|] ;
#L0f625e.   if v2 != v3 then goto L0f624e;
#L0f6262.   v2:= v4.[|java:text:FieldPosition.myAttribute|]   @type object;
#L0f6266.   v3:= v0.[|java:text:FieldPosition.myAttribute|]   @type object;
#L0f626a.   if v2 != v3 then goto L0f624e;
#L0f626e.   v2:= v4.[|java:text:FieldPosition.beginIndex|] ;
#L0f6272.   v3:= v0.[|java:text:FieldPosition.beginIndex|] ;
#L0f6276.   if v2 != v3 then goto L0f624e;
#L0f627a.   v2:= v4.[|java:text:FieldPosition.endIndex|] ;
#L0f627e.   v3:= v0.[|java:text:FieldPosition.endIndex|] ;
#L0f6282.   if v2 != v3 then goto L0f624e;
#L0f6286.   v1:= 1  @length 4;
#L0f6288.   goto L0f624e;

   }
    procedure [|int|] [|java:text:FieldPosition.getBeginIndex|] ([|java:text:FieldPosition|] v1 @type (this)) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.getBeginIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f629c.   v0:= v1.[|java:text:FieldPosition.beginIndex|] ;
#L0f62a0.   return v0;

   }
    procedure [|int|] [|java:text:FieldPosition.getEndIndex|] ([|java:text:FieldPosition|] v1 @type (this)) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.getEndIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f62b4.   v0:= v1.[|java:text:FieldPosition.endIndex|] ;
#L0f62b8.   return v0;

   }
    procedure [|int|] [|java:text:FieldPosition.getField|] ([|java:text:FieldPosition|] v1 @type (this)) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.getField:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f62cc.   v0:= v1.[|java:text:FieldPosition.myField|] ;
#L0f62d0.   return v0;

   }
    procedure [|java:text:Format$Field|] [|java:text:FieldPosition.getFieldAttribute|] ([|java:text:FieldPosition|] v1 @type (this)) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.getFieldAttribute:()Ljava/text/Format$Field;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f62e4.   v0:= v1.[|java:text:FieldPosition.myAttribute|]   @type object;
#L0f62e8.   return v0  @type object;

   }
    procedure [|int|] [|java:text:FieldPosition.hashCode|] ([|java:text:FieldPosition|] v3 @type (this)) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|attributeHash|] @scope ((L0005,L0013));

        v1;
        v2;
      
#L0f62fc.   v1:= v3.[|java:text:FieldPosition.myAttribute|]   @type object;
#L0f6300.   if v1 != 0 then goto L0f6322;
#L0f6304.   v0:= 0  @length 4;
#L0f6306.   v1:= v3.[|java:text:FieldPosition.myField|] ;
#L0f630a.   v1:= v1 * 10;
#L0f630e.   v1:= v1 + v0  @type int;
#L0f6310.   v2:= v3.[|java:text:FieldPosition.beginIndex|] ;
#L0f6314.   v2:= v2 * 100;
#L0f6318.   v1:= v1 + v2  @type int;
#L0f631a.   v2:= v3.[|java:text:FieldPosition.endIndex|] ;
#L0f631e.   v1:= v1 + v2  @type int;
#L0f6320.   return v1;
#L0f6322.   v1:= v3.[|java:text:FieldPosition.myAttribute|]   @type object;
#L0f6326.   call temp:=  [|java:text:Format$Field.hashCode|](v1) @signature [|Ljava/text/Format$Field;.hashCode:()I|] @classDescriptor [|java:text:Format$Field|] @type virtual;
#L0f632c.   v0:= temp;
#L0f632e.   goto L0f6306;

   }
    procedure [|void|] [|java:text:FieldPosition.setBeginIndex|] ([|java:text:FieldPosition|] v0 @type (this), [|int|] v1) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.setBeginIndex:(I)V|] @Access PUBLIC {
      local temp ;


      
#L0f6340.   v0.[|java:text:FieldPosition.beginIndex|]  := v1;
#L0f6344.   return @void ;

   }
    procedure [|void|] [|java:text:FieldPosition.setEndIndex|] ([|java:text:FieldPosition|] v0 @type (this), [|int|] v1) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.setEndIndex:(I)V|] @Access PUBLIC {
      local temp ;


      
#L0f6358.   v0.[|java:text:FieldPosition.endIndex|]  := v1;
#L0f635c.   return @void ;

   }
    procedure [|java:lang:String|] [|java:text:FieldPosition.toString|] ([|java:text:FieldPosition|] v2 @type (this)) @owner [|java:text:FieldPosition|] @signature [|Ljava/text/FieldPosition;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f6370.   v0:= new [|java:lang:StringBuilder|];
#L0f6374.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f637a.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f6380.   v1:= temp  @type object;
#L0f6382.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0f6388.   v1:= temp  @type object;
#L0f638a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6390.   v0:= temp  @type object;
#L0f6392.   v1:= "[attribute=" @type (object, string);
#L0f6396.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f639c.   v0:= temp  @type object;
#L0f639e.   v1:= v2.[|java:text:FieldPosition.myAttribute|]   @type object;
#L0f63a2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f63a8.   v0:= temp  @type object;
#L0f63aa.   v1:= ", field=" @type (object, string);
#L0f63ae.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f63b4.   v0:= temp  @type object;
#L0f63b6.   v1:= v2.[|java:text:FieldPosition.myField|] ;
#L0f63ba.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f63c0.   v0:= temp  @type object;
#L0f63c2.   v1:= ", beginIndex=" @type (object, string);
#L0f63c6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f63cc.   v0:= temp  @type object;
#L0f63ce.   v1:= v2.[|java:text:FieldPosition.beginIndex|] ;
#L0f63d2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f63d8.   v0:= temp  @type object;
#L0f63da.   v1:= ", endIndex=" @type (object, string);
#L0f63de.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f63e4.   v0:= temp  @type object;
#L0f63e6.   v1:= v2.[|java:text:FieldPosition.endIndex|] ;
#L0f63ea.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f63f0.   v0:= temp  @type object;
#L0f63f2.   v1:= "]" @type (object, string);
#L0f63f6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f63fc.   v0:= temp  @type object;
#L0f63fe.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f6404.   v0:= temp  @type object;
#L0f6406.   return v0  @type object;

   }
record [|java:text:MessageFormat$Field|]  @type class @AccessFlag PUBLIC  extends [|java:text:Format$Field|] {
   }
      global [|java:text:MessageFormat$Field|] @@[|java:text:MessageFormat$Field.ARGUMENT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:text:MessageFormat$Field.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:MessageFormat$Field.<clinit>|] () @owner [|java:text:MessageFormat$Field|] @signature [|Ljava/text/MessageFormat$Field;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0f6418.   v0:= new [|java:text:MessageFormat$Field|];
#L0f641c.   v1:= "message argument field" @type (object, string);
#L0f6420.   call temp:=  [|java:text:MessageFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/MessageFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:MessageFormat$Field|] @type direct;
#L0f6426.   @@[|java:text:MessageFormat$Field.ARGUMENT|] := v0  @type object;
#L0f642a.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat$Field.<init>|] ([|java:text:MessageFormat$Field|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:text:MessageFormat$Field|] @signature [|Ljava/text/MessageFormat$Field;.<init>:(Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;


      
#L0f643c.   call temp:=  [|java:text:Format$Field.<init>|](v0, v1) @signature [|Ljava/text/Format$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:Format$Field|] @type direct;
#L0f6442.   return @void ;

   }
record [|java:text:MessageFormat$FieldContainer|]  @type class @AccessFlag   {
      [|java:text:AttributedCharacterIterator$Attribute|] [|java:text:MessageFormat$FieldContainer.attribute|]    @AccessFlag ;
      [|int|] [|java:text:MessageFormat$FieldContainer.end|]    @AccessFlag ;
      [|int|] [|java:text:MessageFormat$FieldContainer.start|]    @AccessFlag ;
      [|java:lang:Object|] [|java:text:MessageFormat$FieldContainer.value|]    @AccessFlag ;
   }
    procedure [|void|] [|java:text:MessageFormat$FieldContainer.<init>|] ([|java:text:MessageFormat$FieldContainer|] v0 @type (this), [|int|] v1, [|int|] v2, [|java:text:AttributedCharacterIterator$Attribute|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:text:MessageFormat$FieldContainer|] @signature [|Ljava/text/MessageFormat$FieldContainer;.<init>:(IILjava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





      
#L0f6454.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f645a.   v0.[|java:text:MessageFormat$FieldContainer.start|]  := v1;
#L0f645e.   v0.[|java:text:MessageFormat$FieldContainer.end|]  := v2;
#L0f6462.   v0.[|java:text:MessageFormat$FieldContainer.attribute|]  := v3 @type object;
#L0f6466.   v0.[|java:text:MessageFormat$FieldContainer.value|]  := v4 @type object;
#L0f646a.   return @void ;

   }
record [|java:text:MessageFormat|]  @type class @AccessFlag PUBLIC  extends [|java:text:Format|] {
      [|int|][] [|java:text:MessageFormat.argumentNumbers|]    @AccessFlag PRIVATE;
      [|java:text:Format|][] [|java:text:MessageFormat.formats|]    @AccessFlag PRIVATE;
      [|java:util:Locale|] [|java:text:MessageFormat.locale|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:MessageFormat.maxArgumentIndex|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:text:MessageFormat.maxOffset|]    @AccessFlag PRIVATE;
      [|java:lang:String|][] [|java:text:MessageFormat.strings|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|java:io:ObjectStreamField|][] @@[|java:text:MessageFormat.serialPersistentFields|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:text:MessageFormat.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:MessageFormat.<clinit>|] () @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0f647c.   v0:= 6  @length 4;
#L0f647e.   v0:= new [|java:io:ObjectStreamField|][v0];
#L0f6482.   v1:= 0  @length 4;
#L0f6484.   v2:= new [|java:io:ObjectStreamField|];
#L0f6488.   v3:= "argumentNumbers" @type (object, string);
#L0f648c.   v4:= new [|int|][];
#L0f6490.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f6496.   v0[v1]:= v2  @type object;
#L0f649a.   v1:= 1  @length 4;
#L0f649c.   v2:= new [|java:io:ObjectStreamField|];
#L0f64a0.   v3:= "formats" @type (object, string);
#L0f64a4.   v4:= new [|java:text:Format|][];
#L0f64a8.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f64ae.   v0[v1]:= v2  @type object;
#L0f64b2.   v1:= 2  @length 4;
#L0f64b4.   v2:= new [|java:io:ObjectStreamField|];
#L0f64b8.   v3:= "locale" @type (object, string);
#L0f64bc.   v4:= new [|java:util:Locale|];
#L0f64c0.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f64c6.   v0[v1]:= v2  @type object;
#L0f64ca.   v1:= 3  @length 4;
#L0f64cc.   v2:= new [|java:io:ObjectStreamField|];
#L0f64d0.   v3:= "maxOffset" @type (object, string);
#L0f64d4.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f64d8.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f64de.   v0[v1]:= v2  @type object;
#L0f64e2.   v1:= 4  @length 4;
#L0f64e4.   v2:= new [|java:io:ObjectStreamField|];
#L0f64e8.   v3:= "offsets" @type (object, string);
#L0f64ec.   v4:= new [|int|][];
#L0f64f0.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f64f6.   v0[v1]:= v2  @type object;
#L0f64fa.   v1:= 5  @length 4;
#L0f64fc.   v2:= new [|java:io:ObjectStreamField|];
#L0f6500.   v3:= "pattern" @type (object, string);
#L0f6504.   v4:= new [|java:lang:String|];
#L0f6508.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f650e.   v0[v1]:= v2  @type object;
#L0f6512.   @@[|java:text:MessageFormat.serialPersistentFields|] := v0  @type object;
#L0f6516.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat.<init>|] ([|java:text:MessageFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L0f6528.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f652e.   v0:= temp  @type object;
#L0f6530.   call temp:=  [|java:text:MessageFormat.<init>|](v1, v2, v0) @signature [|Ljava/text/MessageFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f6536.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat.<init>|] ([|java:text:MessageFormat|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:util:Locale|] v2 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L0f6548.   call temp:=  [|java:text:Format.<init>|](v0) @signature [|Ljava/text/Format;.<init>:()V|] @classDescriptor [|java:text:Format|] @type direct;
#L0f654e.   v0.[|java:text:MessageFormat.locale|]  := v2 @type object;
#L0f6552.   call temp:=  [|java:text:MessageFormat.applyPattern|](v0, v1) @signature [|Ljava/text/MessageFormat;.applyPattern:(Ljava/lang/String;)V|] @classDescriptor [|java:text:MessageFormat|] @type virtual;
#L0f6558.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat.appendQuoted|] ([|java:text:MessageFormat|] v5 @type (this), [|java:lang:StringBuffer|] v6 @type (object), [|java:lang:String|] v7 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.appendQuoted:(Ljava/lang/StringBuffer;Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        [|char|] v0 @varname [|ch|] @scope ((L000d,L0025));
        [|int|] v1 @varname [|i|] @scope ((L0007,L0026));
        [|int|] v2 @varname [|length|] @scope ((L0006,L0026));



        v3;
        v4;
      
#L0f656c.   v4:= 39  @length 16;
#L0f6570.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6576.   v2:= temp;
#L0f6578.   v1:= 0  @length 4;
#L0f657a.   if v1 >= v2 then goto L0f65b6;
#L0f657e.   call temp:=  [|java:lang:String.charAt|](v7, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6584.   v0:= temp;
#L0f6586.   v3:= 123  @length 16;
#L0f658a.   if v0 == v3 then goto L0f6596;
#L0f658e.   v3:= 125  @length 16;
#L0f6592.   if v0 != v3 then goto L0f65ae;
#L0f6596.   call temp:=  [|java:lang:StringBuffer.append|](v6, v4) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f659c.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f65a2.   call temp:=  [|java:lang:StringBuffer.append|](v6, v4) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f65a8.   v1:= v1 + 1;
#L0f65ac.   goto L0f657a;
#L0f65ae.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f65b4.   goto L0f65a8;
#L0f65b6.   return @void ;

   }
    procedure [|java:lang:String|] [|java:text:MessageFormat.decodeDecimalFormat|] ([|java:text:MessageFormat|] v1 @type (this), [|java:lang:StringBuffer|] v2 @type (object), [|java:text:Format|] v3 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.decodeDecimalFormat:(Ljava/lang/StringBuffer;Ljava/text/Format;)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;




        v0;
      
#L0f65c8.   v0:= ",number" @type (object, string);
#L0f65cc.   call temp:=  [|java:lang:StringBuffer.append|](v2, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f65d2.   v0:= v1.[|java:text:MessageFormat.locale|]   @type object;
#L0f65d6.   call temp:=  [|java:text:NumberFormat.getNumberInstance|](v0) @signature [|Ljava/text/NumberFormat;.getNumberInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f65dc.   v0:= temp  @type object;
#L0f65de.   call temp:=  [|java:lang:Object.equals|](v3, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f65e4.   v0:= temp;
#L0f65e6.   if v0 == 0 then goto L0f65ee;
#L0f65ea.   v0:= 0  @length 4;
#L0f65ec.   return v0  @type object;
#L0f65ee.   v0:= v1.[|java:text:MessageFormat.locale|]   @type object;
#L0f65f2.   call temp:=  [|java:text:NumberFormat.getIntegerInstance|](v0) @signature [|Ljava/text/NumberFormat;.getIntegerInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f65f8.   v0:= temp  @type object;
#L0f65fa.   call temp:=  [|java:lang:Object.equals|](v3, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f6600.   v0:= temp;
#L0f6602.   if v0 == 0 then goto L0f6612;
#L0f6606.   v0:= ",integer" @type (object, string);
#L0f660a.   call temp:=  [|java:lang:StringBuffer.append|](v2, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6610.   goto L0f65ea;
#L0f6612.   v0:= v1.[|java:text:MessageFormat.locale|]   @type object;
#L0f6616.   call temp:=  [|java:text:NumberFormat.getCurrencyInstance|](v0) @signature [|Ljava/text/NumberFormat;.getCurrencyInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f661c.   v0:= temp  @type object;
#L0f661e.   call temp:=  [|java:lang:Object.equals|](v3, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f6624.   v0:= temp;
#L0f6626.   if v0 == 0 then goto L0f6636;
#L0f662a.   v0:= ",currency" @type (object, string);
#L0f662e.   call temp:=  [|java:lang:StringBuffer.append|](v2, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6634.   goto L0f65ea;
#L0f6636.   v0:= v1.[|java:text:MessageFormat.locale|]   @type object;
#L0f663a.   call temp:=  [|java:text:NumberFormat.getPercentInstance|](v0) @signature [|Ljava/text/NumberFormat;.getPercentInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f6640.   v0:= temp  @type object;
#L0f6642.   call temp:=  [|java:lang:Object.equals|](v3, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f6648.   v0:= temp;
#L0f664a.   if v0 == 0 then goto L0f665a;
#L0f664e.   v0:= ",percent" @type (object, string);
#L0f6652.   call temp:=  [|java:lang:StringBuffer.append|](v2, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6658.   goto L0f65ea;
#L0f665a.   v0:= 44  @length 16;
#L0f665e.   call temp:=  [|java:lang:StringBuffer.append|](v2, v0) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6664.   v3:= ([|java:text:DecimalFormat|])v3;
#L0f6668.   call temp:=  [|java:text:DecimalFormat.toPattern|](v3) @signature [|Ljava/text/DecimalFormat;.toPattern:()Ljava/lang/String;|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f666e.   v0:= temp  @type object;
#L0f6670.   goto L0f65ec;

   }
    procedure [|java:lang:String|] [|java:text:MessageFormat.decodeSimpleDateFormat|] ([|java:text:MessageFormat|] v5 @type (this), [|java:lang:StringBuffer|] v6 @type (object), [|java:text:Format|] v7 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.decodeSimpleDateFormat:(Ljava/lang/StringBuffer;Ljava/text/Format;)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0f6684.   v4:= 3  @length 4;
#L0f6686.   v3:= 2  @length 4;
#L0f6688.   v2:= 1  @length 4;
#L0f668a.   v1:= 0  @length 4;
#L0f668c.   v0:= v5.[|java:text:MessageFormat.locale|]   @type object;
#L0f6690.   call temp:=  [|java:text:DateFormat.getTimeInstance|](v3, v0) @signature [|Ljava/text/DateFormat;.getTimeInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6696.   v0:= temp  @type object;
#L0f6698.   call temp:=  [|java:lang:Object.equals|](v7, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f669e.   v0:= temp;
#L0f66a0.   if v0 == 0 then goto L0f66b2;
#L0f66a4.   v0:= ",time" @type (object, string);
#L0f66a8.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f66ae.   v0:= 0  @length 4;
#L0f66b0.   return v0  @type object;
#L0f66b2.   v0:= v5.[|java:text:MessageFormat.locale|]   @type object;
#L0f66b6.   call temp:=  [|java:text:DateFormat.getDateInstance|](v3, v0) @signature [|Ljava/text/DateFormat;.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f66bc.   v0:= temp  @type object;
#L0f66be.   call temp:=  [|java:lang:Object.equals|](v7, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f66c4.   v0:= temp;
#L0f66c6.   if v0 == 0 then goto L0f66d6;
#L0f66ca.   v0:= ",date" @type (object, string);
#L0f66ce.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f66d4.   goto L0f66ae;
#L0f66d6.   v0:= v5.[|java:text:MessageFormat.locale|]   @type object;
#L0f66da.   call temp:=  [|java:text:DateFormat.getTimeInstance|](v4, v0) @signature [|Ljava/text/DateFormat;.getTimeInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f66e0.   v0:= temp  @type object;
#L0f66e2.   call temp:=  [|java:lang:Object.equals|](v7, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f66e8.   v0:= temp;
#L0f66ea.   if v0 == 0 then goto L0f66fa;
#L0f66ee.   v0:= ",time,short" @type (object, string);
#L0f66f2.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f66f8.   goto L0f66ae;
#L0f66fa.   v0:= v5.[|java:text:MessageFormat.locale|]   @type object;
#L0f66fe.   call temp:=  [|java:text:DateFormat.getDateInstance|](v4, v0) @signature [|Ljava/text/DateFormat;.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6704.   v0:= temp  @type object;
#L0f6706.   call temp:=  [|java:lang:Object.equals|](v7, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f670c.   v0:= temp;
#L0f670e.   if v0 == 0 then goto L0f671e;
#L0f6712.   v0:= ",date,short" @type (object, string);
#L0f6716.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f671c.   goto L0f66ae;
#L0f671e.   v0:= v5.[|java:text:MessageFormat.locale|]   @type object;
#L0f6722.   call temp:=  [|java:text:DateFormat.getTimeInstance|](v2, v0) @signature [|Ljava/text/DateFormat;.getTimeInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6728.   v0:= temp  @type object;
#L0f672a.   call temp:=  [|java:lang:Object.equals|](v7, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f6730.   v0:= temp;
#L0f6732.   if v0 == 0 then goto L0f6742;
#L0f6736.   v0:= ",time,long" @type (object, string);
#L0f673a.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6740.   goto L0f66ae;
#L0f6742.   v0:= v5.[|java:text:MessageFormat.locale|]   @type object;
#L0f6746.   call temp:=  [|java:text:DateFormat.getDateInstance|](v2, v0) @signature [|Ljava/text/DateFormat;.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f674c.   v0:= temp  @type object;
#L0f674e.   call temp:=  [|java:lang:Object.equals|](v7, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f6754.   v0:= temp;
#L0f6756.   if v0 == 0 then goto L0f6766;
#L0f675a.   v0:= ",date,long" @type (object, string);
#L0f675e.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6764.   goto L0f66ae;
#L0f6766.   v0:= v5.[|java:text:MessageFormat.locale|]   @type object;
#L0f676a.   call temp:=  [|java:text:DateFormat.getTimeInstance|](v1, v0) @signature [|Ljava/text/DateFormat;.getTimeInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6770.   v0:= temp  @type object;
#L0f6772.   call temp:=  [|java:lang:Object.equals|](v7, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f6778.   v0:= temp;
#L0f677a.   if v0 == 0 then goto L0f678a;
#L0f677e.   v0:= ",time,full" @type (object, string);
#L0f6782.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6788.   goto L0f66ae;
#L0f678a.   v0:= v5.[|java:text:MessageFormat.locale|]   @type object;
#L0f678e.   call temp:=  [|java:text:DateFormat.getDateInstance|](v1, v0) @signature [|Ljava/text/DateFormat;.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6794.   v0:= temp  @type object;
#L0f6796.   call temp:=  [|java:lang:Object.equals|](v7, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f679c.   v0:= temp;
#L0f679e.   if v0 == 0 then goto L0f67ae;
#L0f67a2.   v0:= ",date,full" @type (object, string);
#L0f67a6.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f67ac.   goto L0f66ae;
#L0f67ae.   v0:= ",date," @type (object, string);
#L0f67b2.   call temp:=  [|java:lang:StringBuffer.append|](v6, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f67b8.   v7:= ([|java:text:SimpleDateFormat|])v7;
#L0f67bc.   call temp:=  [|java:text:SimpleDateFormat.toPattern|](v7) @signature [|Ljava/text/SimpleDateFormat;.toPattern:()Ljava/lang/String;|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0f67c2.   v0:= temp  @type object;
#L0f67c4.   goto L0f66b0;

   }
    procedure [|java:lang:String|] [|java:text:MessageFormat.format|] ([|java:lang:String|] v2 @type (object), [|java:lang:Object|][] v3 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC_STATIC_VARARGS {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0003,L0011));


        v1;
      
#L0f67d8.   if v3 == 0 then goto L0f67fa;
#L0f67dc.   v0:= 0  @length 4;
#L0f67de.   v1:= v3.length;
#L0f67e0.   if v0 >= v1 then goto L0f67fa;
#L0f67e4.   v1:= v3[v0]  @type object;
#L0f67e8.   if v1 != 0 then goto L0f67f4;
#L0f67ec.   v1:= "null" @type (object, string);
#L0f67f0.   v3[v0]:= v1  @type object;
#L0f67f4.   v0:= v0 + 1;
#L0f67f8.   goto L0f67de;
#L0f67fa.   v1:= new [|java:text:MessageFormat|];
#L0f67fe.   call temp:=  [|java:text:MessageFormat.<init>|](v1, v2) @signature [|Ljava/text/MessageFormat;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f6804.   call temp:=  [|java:text:MessageFormat.format|](v1, v3) @signature [|Ljava/text/MessageFormat;.format:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:text:MessageFormat|] @type virtual;
#L0f680a.   v1:= temp  @type object;
#L0f680c.   return v1  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:MessageFormat.formatImpl|] ([|java:text:MessageFormat|] v13 @type (this), [|java:lang:Object|][] v14 @type (object), [|java:lang:StringBuffer|] v15 @type (object), [|java:text:FieldPosition|] v16 @type (object), [|java:util:List|] v17 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.formatImpl:([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer;|] @Access PRIVATE {
      local temp ;
        [|java:lang:Object|] v7 @varname [|arg|] @scope ((L0025,L005f), (L0084,L00ba));
        [|java:text:Format|] v8 @varname [|format|] @scope ((L0029,L005f), (L0084,L00ba));
        [|java:text:MessageFormat|] v10 @varname [|mf|] @scope ((L0042,L005f));
        [|java:lang:String|] v12 @varname [|result|] @scope ((L003d,L005f));
        [|int|] v2 @varname [|begin|] @scope ((L0016,L00ba));
        [|int|] v9 @varname [|i|] @scope ((L0007,L00cf));
        [|java:text:FieldPosition|] v11 @varname [|passedField|] @scope ((L0006,L00cf));





        v0;
        v1;
        v3;
        v4;
        v5;
        v6;
      
#L0f6820.   v11:= new [|java:text:FieldPosition|];
#L0f6824.   v1:= 0  @length 4;
#L0f6826.   call temp:=  [|java:text:FieldPosition.<init>|](v11, v1) @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f682c.   v9:= 0  @length 4;
#L0f682e.   v1:= v13.[|java:text:MessageFormat.maxOffset|] ;
#L0f6832.   if v9 > v1 then goto L0f6994;
#L0f6836.   v1:= v13.[|java:text:MessageFormat.strings|]   @type object;
#L0f683a.   v1:= v1[v9]  @type object;
#L0f683e.   call temp:=  [|java:lang:StringBuffer.append|](v15, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6844.   call temp:=  [|java:lang:StringBuffer.length|](v15) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f684a.   v2:= temp;
#L0f684c.   if v14 == 0 then goto L0f68e4;
#L0f6850.   v1:= v13.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f6854.   v1:= v1[v9];
#L0f6858.   v3:= v14.length;
#L0f685a.   if v1 >= v3 then goto L0f68e4;
#L0f685e.   v1:= v13.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f6862.   v1:= v1[v9];
#L0f6866.   v7:= v14[v1]  @type object;
#L0f686a.   v1:= v13.[|java:text:MessageFormat.formats|]   @type object;
#L0f686e.   v8:= v1[v9]  @type object;
#L0f6872.   if v8 == 0 then goto L0f687a;
#L0f6876.   if v7 != 0 then goto L0f688a;
#L0f687a.   v1:= instanceof @varname v7 @type [|java:lang:Number|];
#L0f687e.   if v1 == 0 then goto L0f6928;
#L0f6882.   call temp:=  [|java:text:NumberFormat.getInstance|]() @signature [|Ljava/text/NumberFormat;.getInstance:()Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f6888.   v8:= temp  @type object;
#L0f688a.   v1:= instanceof @varname v8 @type [|java:text:ChoiceFormat|];
#L0f688e.   if v1 == 0 then goto L0f6962;
#L0f6892.   call temp:=  [|java:text:Format.format|](v8, v7) @signature [|Ljava/text/Format;.format:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:text:Format|] @type virtual;
#L0f6898.   v12:= temp  @type object;
#L0f689a.   v10:= new [|java:text:MessageFormat|];
#L0f689e.   call temp:=  [|java:text:MessageFormat.<init>|](v10, v12) @signature [|Ljava/text/MessageFormat;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f68a4.   v1:= v13.[|java:text:MessageFormat.locale|]   @type object;
#L0f68a8.   call temp:=  [|java:text:MessageFormat.setLocale|](v10, v1) @signature [|Ljava/text/MessageFormat;.setLocale:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:MessageFormat|] @type virtual;
#L0f68ae.   call temp:=  [|java:text:MessageFormat.format|](v10, v14, v15, v11) @signature [|Ljava/text/MessageFormat;.format:([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:MessageFormat|] @type virtual;
#L0f68b4.   call temp:=  [|java:lang:StringBuffer.length|](v15) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f68ba.   v3:= temp;
#L0f68bc.   v1:= v13.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f68c0.   v4:= v1[v9];
#L0f68c4.   v1:= v13  @type object;
#L0f68c6.   v5:= v16  @type object;
#L0f68ca.   v6:= v17  @type object;
#L0f68ce.   call temp:=  [|java:text:MessageFormat.handleArgumentField|](v1, v2, v3, v4, v5, v6) @signature [|Ljava/text/MessageFormat;.handleArgumentField:(IIILjava/text/FieldPosition;Ljava/util/List;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f68d4.   v0:= v17  @type object;
#L0f68d8.   call temp:=  [|java:text:MessageFormat.handleFormat|](v13, v8, v7, v2, v0) @signature [|Ljava/text/MessageFormat;.handleFormat:(Ljava/text/Format;Ljava/lang/Object;ILjava/util/List;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f68de.   v9:= v9 + 1;
#L0f68e2.   goto L0f682e;
#L0f68e4.   v1:= 123  @length 16;
#L0f68e8.   call temp:=  [|java:lang:StringBuffer.append|](v15, v1) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f68ee.   v1:= v13.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f68f2.   v1:= v1[v9];
#L0f68f6.   call temp:=  [|java:lang:StringBuffer.append|](v15, v1) @signature [|Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f68fc.   v1:= 125  @length 16;
#L0f6900.   call temp:=  [|java:lang:StringBuffer.append|](v15, v1) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6906.   call temp:=  [|java:lang:StringBuffer.length|](v15) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f690c.   v3:= temp;
#L0f690e.   v1:= v13.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f6912.   v4:= v1[v9];
#L0f6916.   v1:= v13  @type object;
#L0f6918.   v5:= v16  @type object;
#L0f691c.   v6:= v17  @type object;
#L0f6920.   call temp:=  [|java:text:MessageFormat.handleArgumentField|](v1, v2, v3, v4, v5, v6) @signature [|Ljava/text/MessageFormat;.handleArgumentField:(IIILjava/text/FieldPosition;Ljava/util/List;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f6926.   goto L0f68de;
#L0f6928.   v1:= instanceof @varname v7 @type [|java:util:Date|];
#L0f692c.   if v1 == 0 then goto L0f693a;
#L0f6930.   call temp:=  [|java:text:DateFormat.getInstance|]() @signature [|Ljava/text/DateFormat;.getInstance:()Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6936.   v8:= temp  @type object;
#L0f6938.   goto L0f688a;
#L0f693a.   call temp:=  [|java:lang:StringBuffer.append|](v15, v7) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6940.   call temp:=  [|java:lang:StringBuffer.length|](v15) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6946.   v3:= temp;
#L0f6948.   v1:= v13.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f694c.   v4:= v1[v9];
#L0f6950.   v1:= v13  @type object;
#L0f6952.   v5:= v16  @type object;
#L0f6956.   v6:= v17  @type object;
#L0f695a.   call temp:=  [|java:text:MessageFormat.handleArgumentField|](v1, v2, v3, v4, v5, v6) @signature [|Ljava/text/MessageFormat;.handleArgumentField:(IIILjava/text/FieldPosition;Ljava/util/List;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f6960.   goto L0f68de;
#L0f6962.   call temp:=  [|java:text:Format.format|](v8, v7, v15, v11) @signature [|Ljava/text/Format;.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:Format|] @type virtual;
#L0f6968.   call temp:=  [|java:lang:StringBuffer.length|](v15) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f696e.   v3:= temp;
#L0f6970.   v1:= v13.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f6974.   v4:= v1[v9];
#L0f6978.   v1:= v13  @type object;
#L0f697a.   v5:= v16  @type object;
#L0f697e.   v6:= v17  @type object;
#L0f6982.   call temp:=  [|java:text:MessageFormat.handleArgumentField|](v1, v2, v3, v4, v5, v6) @signature [|Ljava/text/MessageFormat;.handleArgumentField:(IIILjava/text/FieldPosition;Ljava/util/List;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f6988.   v0:= v17  @type object;
#L0f698c.   call temp:=  [|java:text:MessageFormat.handleFormat|](v13, v8, v7, v2, v0) @signature [|Ljava/text/MessageFormat;.handleFormat:(Ljava/text/Format;Ljava/lang/Object;ILjava/util/List;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f6992.   goto L0f68de;
#L0f6994.   v1:= v13.[|java:text:MessageFormat.maxOffset|] ;
#L0f6998.   v1:= v1 + 1;
#L0f699c.   v3:= v13.[|java:text:MessageFormat.strings|]   @type object;
#L0f69a0.   v3:= v3.length;
#L0f69a2.   if v1 >= v3 then goto L0f69bc;
#L0f69a6.   v1:= v13.[|java:text:MessageFormat.strings|]   @type object;
#L0f69aa.   v3:= v13.[|java:text:MessageFormat.maxOffset|] ;
#L0f69ae.   v3:= v3 + 1;
#L0f69b2.   v1:= v1[v3]  @type object;
#L0f69b6.   call temp:=  [|java:lang:StringBuffer.append|](v15, v1) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f69bc.   return v15  @type object;

   }
    procedure [|void|] [|java:text:MessageFormat.handleArgumentField|] ([|java:text:MessageFormat|] v3 @type (this), [|int|] v4, [|int|] v5, [|int|] v6, [|java:text:FieldPosition|] v7 @type (object), [|java:util:List|] v8 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.handleArgumentField:(IIILjava/text/FieldPosition;Ljava/util/List;)V|] @Access PRIVATE {
      local temp ;






        v0;
        v1;
        v2;
      
#L0f69d0.   if v8 == 0 then goto L0f69f2;
#L0f69d4.   v0:= new [|java:text:MessageFormat$FieldContainer|];
#L0f69d8.   v1:= @@[|java:text:MessageFormat$Field.ARGUMENT|]   @type object;
#L0f69dc.   call temp:=  [|java:lang:Integer.valueOf|](v6) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0f69e2.   v2:= temp  @type object;
#L0f69e4.   call temp:=  [|java:text:MessageFormat$FieldContainer.<init>|](v0, v4, v5, v1, v2) @signature [|Ljava/text/MessageFormat$FieldContainer;.<init>:(IILjava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V|] @classDescriptor [|java:text:MessageFormat$FieldContainer|] @type direct;
#L0f69ea.   call temp:=  [|java:util:List.add|](v8, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0f69f0.   return @void ;
#L0f69f2.   if v7 == 0 then goto L0f69f0;
#L0f69f6.   call temp:=  [|java:text:FieldPosition.getFieldAttribute|](v7) @signature [|Ljava/text/FieldPosition;.getFieldAttribute:()Ljava/text/Format$Field;|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f69fc.   v0:= temp  @type object;
#L0f69fe.   v1:= @@[|java:text:MessageFormat$Field.ARGUMENT|]   @type object;
#L0f6a02.   if v0 != v1 then goto L0f69f0;
#L0f6a06.   call temp:=  [|java:text:FieldPosition.getEndIndex|](v7) @signature [|Ljava/text/FieldPosition;.getEndIndex:()I|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f6a0c.   v0:= temp;
#L0f6a0e.   if v0 != 0 then goto L0f69f0;
#L0f6a12.   call temp:=  [|java:text:FieldPosition.setBeginIndex|](v7, v4) @signature [|Ljava/text/FieldPosition;.setBeginIndex:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f6a18.   call temp:=  [|java:text:FieldPosition.setEndIndex|](v7, v5) @signature [|Ljava/text/FieldPosition;.setEndIndex:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f6a1e.   goto L0f69f0;

   }
    procedure [|void|] [|java:text:MessageFormat.handleFormat|] ([|java:text:MessageFormat|] v9 @type (this), [|java:text:Format|] v10 @type (object), [|java:lang:Object|] v11 @type (object), [|int|] v12, [|java:util:List|] v13 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.handleFormat:(Ljava/text/Format;Ljava/lang/Object;ILjava/util/List;)V|] @Access PRIVATE {
      local temp ;
        [|java:text:AttributedCharacterIterator$Attribute|] v0 @varname [|attribute|] @scope ((L0031,L0042));
        [|java:lang:Object|] v5 @varname [|value|] @scope ((L0035,L0042));
        [|int|] v1 @varname [|end|] @scope ((L0019,L0046));
        [|java:util:Iterator|] v2 @varname [|it|] @scope ((L0025,L0046));
        [|java:text:AttributedCharacterIterator|] v3 @varname [|iterator|] @scope ((L0007,L0046));
        [|int|] v4 @varname [|start|] @scope ((L0015,L0046));





        v6;
        v7;
        v8;
      
#L0f6a30.   if v13 != 0 then goto L0f6a36;
#L0f6a34.   return @void ;
#L0f6a36.   call temp:=  [|java:text:Format.formatToCharacterIterator|](v10, v11) @signature [|Ljava/text/Format;.formatToCharacterIterator:(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;|] @classDescriptor [|java:text:Format|] @type virtual;
#L0f6a3c.   v3:= temp  @type object;
#L0f6a3e.   call temp:=  [|java:text:AttributedCharacterIterator.getIndex|](v3) @signature [|Ljava/text/AttributedCharacterIterator;.getIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f6a44.   v6:= temp;
#L0f6a46.   call temp:=  [|java:text:AttributedCharacterIterator.getEndIndex|](v3) @signature [|Ljava/text/AttributedCharacterIterator;.getEndIndex:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f6a4c.   v7:= temp;
#L0f6a4e.   if v6 == v7 then goto L0f6a34;
#L0f6a52.   call temp:=  [|java:text:AttributedCharacterIterator.getRunStart|](v3) @signature [|Ljava/text/AttributedCharacterIterator;.getRunStart:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f6a58.   v4:= temp;
#L0f6a5a.   call temp:=  [|java:text:AttributedCharacterIterator.getRunLimit|](v3) @signature [|Ljava/text/AttributedCharacterIterator;.getRunLimit:()I|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f6a60.   v1:= temp;
#L0f6a62.   call temp:=  [|java:text:AttributedCharacterIterator.getAttributes|](v3) @signature [|Ljava/text/AttributedCharacterIterator;.getAttributes:()Ljava/util/Map;|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f6a68.   v6:= temp  @type object;
#L0f6a6a.   call temp:=  [|java:util:Map.keySet|](v6) @signature [|Ljava/util/Map;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L0f6a70.   v6:= temp  @type object;
#L0f6a72.   call temp:=  [|java:util:Set.iterator|](v6) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0f6a78.   v2:= temp  @type object;
#L0f6a7a.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f6a80.   v6:= temp;
#L0f6a82.   if v6 == 0 then goto L0f6ab4;
#L0f6a86.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f6a8c.   v0:= temp  @type object;
#L0f6a8e.   v0:= ([|java:text:AttributedCharacterIterator$Attribute|])v0;
#L0f6a92.   call temp:=  [|java:text:AttributedCharacterIterator.getAttribute|](v3, v0) @signature [|Ljava/text/AttributedCharacterIterator;.getAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;)Ljava/lang/Object;|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f6a98.   v5:= temp  @type object;
#L0f6a9a.   v6:= new [|java:text:MessageFormat$FieldContainer|];
#L0f6a9e.   v7:= v12 + v4  @type int;
#L0f6aa2.   v8:= v12 + v1  @type int;
#L0f6aa6.   call temp:=  [|java:text:MessageFormat$FieldContainer.<init>|](v6, v7, v8, v0, v5) @signature [|Ljava/text/MessageFormat$FieldContainer;.<init>:(IILjava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;)V|] @classDescriptor [|java:text:MessageFormat$FieldContainer|] @type direct;
#L0f6aac.   call temp:=  [|java:util:List.add|](v13, v6) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0f6ab2.   goto L0f6a7a;
#L0f6ab4.   call temp:=  [|java:text:AttributedCharacterIterator.setIndex|](v3, v1) @signature [|Ljava/text/AttributedCharacterIterator;.setIndex:(I)C|] @classDescriptor [|java:text:AttributedCharacterIterator|] @type interface;
#L0f6aba.   goto L0f6a3e;

   }
    procedure [|int|] [|java:text:MessageFormat.match|] ([|java:text:MessageFormat|] v11 @type (this), [|java:lang:String|] v12 @type (object), [|java:text:ParsePosition|] v13 @type (object), [|boolean|] v14, [|java:lang:String|][] v15 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.match:(Ljava/lang/String;Ljava/text/ParsePosition;Z[Ljava/lang/String;)I|] @Access PRIVATE {
      local temp ;
        [|int|] v9 @varname [|token|] @scope ((L000a,L0033), (L0034,L0062));
        [|char|] v6 @varname [|ch|] @scope ((L0050,L0060));
        [|int|] v2 @varname [|offset|] @scope ((L0009,L0062));
        [|int|] v7 @varname [|i|] @scope ((L001a,L0062));
        [|int|] v8 @varname [|length|] @scope ((L0005,L0062));





        v0;
        v1;
        v3;
        v4;
        v5;
        v10;
      
#L0f6acc.   v10:= -1  @length 4;
#L0f6ace.   call temp:=  [|java:lang:String.length|](v12) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6ad4.   v8:= temp;
#L0f6ad6.   call temp:=  [|java:text:ParsePosition.getIndex|](v13) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f6adc.   v2:= temp;
#L0f6ade.   v9:= -1  @length 4;
#L0f6ae0.   if v2 >= v8 then goto L0f6afe;
#L0f6ae4.   call temp:=  [|java:lang:String.charAt|](v12, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6aea.   v0:= temp;
#L0f6aec.   call temp:=  [|java:lang:Character.isWhitespace|](v0) @signature [|Ljava/lang/Character;.isWhitespace:(C)Z|] @classDescriptor [|java:lang:Character|] @type static;
#L0f6af2.   v0:= temp;
#L0f6af4.   if v0 == 0 then goto L0f6afe;
#L0f6af8.   v2:= v2 + 1;
#L0f6afc.   goto L0f6ae0;
#L0f6afe.   v7:= v15.length;
#L0f6b00.   v7:= v7 + -1;
#L0f6b04.   if v7 < 0 then goto L0f6b2c;
#L0f6b08.   v1:= 1  @length 4;
#L0f6b0a.   v3:= v15[v7]  @type object;
#L0f6b0e.   v4:= 0  @length 4;
#L0f6b10.   v0:= v15[v7]  @type object;
#L0f6b14.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6b1a.   v5:= temp;
#L0f6b1c.   v0:= v12  @type object;
#L0f6b1e.   call temp:=  [|java:lang:String.regionMatches|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6b24.   v0:= temp;
#L0f6b26.   if v0 == 0 then goto L0f6b00;
#L0f6b2a.   v9:= v7;
#L0f6b2c.   if v9 != v10 then goto L0f6b34;
#L0f6b30.   v9:= v10;
#L0f6b32.   return v9;
#L0f6b34.   v0:= v15[v9]  @type object;
#L0f6b38.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6b3e.   v0:= temp;
#L0f6b40.   v2:= v2 + v0  @type int;
#L0f6b42.   if v2 >= v8 then goto L0f6b60;
#L0f6b46.   call temp:=  [|java:lang:String.charAt|](v12, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6b4c.   v0:= temp;
#L0f6b4e.   call temp:=  [|java:lang:Character.isWhitespace|](v0) @signature [|Ljava/lang/Character;.isWhitespace:(C)Z|] @classDescriptor [|java:lang:Character|] @type static;
#L0f6b54.   v0:= temp;
#L0f6b56.   if v0 == 0 then goto L0f6b60;
#L0f6b5a.   v2:= v2 + 1;
#L0f6b5e.   goto L0f6b42;
#L0f6b60.   if v2 >= v8 then goto L0f6b8c;
#L0f6b64.   call temp:=  [|java:lang:String.charAt|](v12, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6b6a.   v6:= temp;
#L0f6b6c.   v0:= 125  @length 16;
#L0f6b70.   if v6 == v0 then goto L0f6b80;
#L0f6b74.   if v14 != 0 then goto L0f6b8c;
#L0f6b78.   v0:= 44  @length 16;
#L0f6b7c.   if v6 != v0 then goto L0f6b8c;
#L0f6b80.   v0:= v2 + 1;
#L0f6b84.   call temp:=  [|java:text:ParsePosition.setIndex|](v13, v0) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f6b8a.   goto L0f6b32;
#L0f6b8c.   v9:= v10;
#L0f6b8e.   goto L0f6b32;

   }
    procedure [|java:text:Format|] [|java:text:MessageFormat.parseVariable|] ([|java:text:MessageFormat|] v12 @type (this), [|java:lang:String|] v13 @type (object), [|java:text:ParsePosition|] v14 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.parseVariable:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/text/Format;|] @Access PRIVATE {
      local temp ;
        [|int|] v5 @varname [|offset|] @scope ((L0008,L000c), (L000c,L0019), (L0019,L0021), (L0021,L0158));
        [|char|] v1 @varname [|ch|] @scope ((L0010,L0019), (L0021,L0158));
        [|int|] v2 @varname [|dateStyle|] @scope ((L00a7,L00dc));
        [|int|] v4 @varname [|numberStyle|] @scope ((L00ff,L0136));
        [|java:lang:StringBuffer|] v0 @varname [|buffer|] @scope ((L0056,L0158));
        [|int|] v3 @varname [|length|] @scope ((L0004,L0158));
        [|int|] v7 @varname [|type|] @scope ((L0046,L0158));



        v6;
        v8;
        v9;
        v10;
        v11;
      
#L0f6ba0.   call temp:=  [|java:lang:String.length|](v13) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6ba6.   v3:= temp;
#L0f6ba8.   call temp:=  [|java:text:ParsePosition.getIndex|](v14) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f6bae.   v5:= temp;
#L0f6bb0.   if v5 >= v3 then goto L0f6bd2;
#L0f6bb4.   v6:= v5 + 1;
#L0f6bb8.   call temp:=  [|java:lang:String.charAt|](v13, v5) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6bbe.   v1:= temp;
#L0f6bc0.   v8:= 125  @length 16;
#L0f6bc4.   if v1 == v8 then goto L0f6be2;
#L0f6bc8.   v8:= 44  @length 16;
#L0f6bcc.   if v1 == v8 then goto L0f6be2;
#L0f6bd0.   v5:= v6;
#L0f6bd2.   v8:= new [|java:lang:IllegalArgumentException|];
#L0f6bd6.   v9:= "Missing element format" @type (object, string);
#L0f6bda.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v8, v9) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f6be0.   throw v8;
#L0f6be2.   call temp:=  [|java:text:ParsePosition.setIndex|](v14, v6) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f6be8.   v8:= 125  @length 16;
#L0f6bec.   if v1 != v8 then goto L0f6bf4;
#L0f6bf0.   v8:= 0  @length 4;
#L0f6bf2.   return v8  @type object;
#L0f6bf4.   v8:= 0  @length 4;
#L0f6bf6.   v9:= 4  @length 4;
#L0f6bf8.   v9:= new [|java:lang:String|][v9];
#L0f6bfc.   v10:= 0  @length 4;
#L0f6bfe.   v11:= "time" @type (object, string);
#L0f6c02.   v9[v10]:= v11  @type object;
#L0f6c06.   v10:= 1  @length 4;
#L0f6c08.   v11:= "date" @type (object, string);
#L0f6c0c.   v9[v10]:= v11  @type object;
#L0f6c10.   v10:= 2  @length 4;
#L0f6c12.   v11:= "number" @type (object, string);
#L0f6c16.   v9[v10]:= v11  @type object;
#L0f6c1a.   v10:= 3  @length 4;
#L0f6c1c.   v11:= "choice" @type (object, string);
#L0f6c20.   v9[v10]:= v11  @type object;
#L0f6c24.   call temp:=  [|java:text:MessageFormat.match|](v12, v13, v14, v8, v9) @signature [|Ljava/text/MessageFormat;.match:(Ljava/lang/String;Ljava/text/ParsePosition;Z[Ljava/lang/String;)I|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f6c2a.   v7:= temp;
#L0f6c2c.   v8:= -1  @length 4;
#L0f6c2e.   if v7 != v8 then goto L0f6c42;
#L0f6c32.   v8:= new [|java:lang:IllegalArgumentException|];
#L0f6c36.   v9:= "Unknown element format" @type (object, string);
#L0f6c3a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v8, v9) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f6c40.   throw v8;
#L0f6c42.   v0:= new [|java:lang:StringBuffer|];
#L0f6c46.   call temp:=  [|java:lang:StringBuffer.<init>|](v0) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f6c4c.   call temp:=  [|java:text:ParsePosition.getIndex|](v14) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f6c52.   v8:= temp;
#L0f6c54.   v8:= v8 + -1;
#L0f6c58.   call temp:=  [|java:lang:String.charAt|](v13, v8) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6c5e.   v1:= temp;
#L0f6c60.   goto L0f6e14;
#L0f6c66.   v8:= 125  @length 16;
#L0f6c6a.   v9:= 123  @length 16;
#L0f6c6e.   call temp:=  [|java:text:Format.upToWithQuotes|](v13, v14, v0, v8, v9) @signature [|Ljava/text/Format;.upToWithQuotes:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuffer;CC)Z|] @classDescriptor [|java:text:Format|] @type static;
#L0f6c74.   v8:= new [|java:text:ChoiceFormat|];
#L0f6c78.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6c7e.   v9:= temp  @type object;
#L0f6c80.   call temp:=  [|java:text:ChoiceFormat.<init>|](v8, v9) @signature [|Ljava/text/ChoiceFormat;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:ChoiceFormat|] @type direct;
#L0f6c86.   goto L0f6bf2;
#L0f6c88.   v8:= 125  @length 16;
#L0f6c8c.   if v1 != v8 then goto L0f6cb6;
#L0f6c90.   v8:= 1  @length 4;
#L0f6c92.   if v7 != v8 then goto L0f6ca6;
#L0f6c96.   v8:= 2  @length 4;
#L0f6c98.   v9:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6c9c.   call temp:=  [|java:text:DateFormat.getDateInstance|](v8, v9) @signature [|Ljava/text/DateFormat;.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6ca2.   v8:= temp  @type object;
#L0f6ca4.   goto L0f6bf2;
#L0f6ca6.   v8:= 2  @length 4;
#L0f6ca8.   v9:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6cac.   call temp:=  [|java:text:DateFormat.getTimeInstance|](v8, v9) @signature [|Ljava/text/DateFormat;.getTimeInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6cb2.   v8:= temp  @type object;
#L0f6cb4.   goto L0f6bf2;
#L0f6cb6.   v8:= 1  @length 4;
#L0f6cb8.   v9:= 4  @length 4;
#L0f6cba.   v9:= new [|java:lang:String|][v9];
#L0f6cbe.   v10:= 0  @length 4;
#L0f6cc0.   v11:= "full" @type (object, string);
#L0f6cc4.   v9[v10]:= v11  @type object;
#L0f6cc8.   v10:= 1  @length 4;
#L0f6cca.   v11:= "long" @type (object, string);
#L0f6cce.   v9[v10]:= v11  @type object;
#L0f6cd2.   v10:= 2  @length 4;
#L0f6cd4.   v11:= "medium" @type (object, string);
#L0f6cd8.   v9[v10]:= v11  @type object;
#L0f6cdc.   v10:= 3  @length 4;
#L0f6cde.   v11:= "short" @type (object, string);
#L0f6ce2.   v9[v10]:= v11  @type object;
#L0f6ce6.   call temp:=  [|java:text:MessageFormat.match|](v12, v13, v14, v8, v9) @signature [|Ljava/text/MessageFormat;.match:(Ljava/lang/String;Ljava/text/ParsePosition;Z[Ljava/lang/String;)I|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f6cec.   v2:= temp;
#L0f6cee.   v8:= -1  @length 4;
#L0f6cf0.   if v2 != v8 then goto L0f6d1c;
#L0f6cf4.   v8:= 125  @length 16;
#L0f6cf8.   v9:= 123  @length 16;
#L0f6cfc.   call temp:=  [|java:text:Format.upToWithQuotes|](v13, v14, v0, v8, v9) @signature [|Ljava/text/Format;.upToWithQuotes:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuffer;CC)Z|] @classDescriptor [|java:text:Format|] @type static;
#L0f6d02.   v8:= new [|java:text:SimpleDateFormat|];
#L0f6d06.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6d0c.   v9:= temp  @type object;
#L0f6d0e.   v10:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6d12.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v8, v9, v10) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f6d18.   goto L0f6bf2;
#L0f6d1c.   goto L0f6e28;
#L0f6d22.   v8:= 1  @length 4;
#L0f6d24.   if v7 != v8 then goto L0f6d48;
#L0f6d28.   v8:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6d2c.   call temp:=  [|java:text:DateFormat.getDateInstance|](v2, v8) @signature [|Ljava/text/DateFormat;.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6d32.   v8:= temp  @type object;
#L0f6d34.   goto L0f6bf2;
#L0f6d38.   v2:= 0  @length 4;
#L0f6d3a.   goto L0f6d22;
#L0f6d3c.   v2:= 1  @length 4;
#L0f6d3e.   goto L0f6d22;
#L0f6d40.   v2:= 2  @length 4;
#L0f6d42.   goto L0f6d22;
#L0f6d44.   v2:= 3  @length 4;
#L0f6d46.   goto L0f6d22;
#L0f6d48.   v8:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6d4c.   call temp:=  [|java:text:DateFormat.getTimeInstance|](v2, v8) @signature [|Ljava/text/DateFormat;.getTimeInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @classDescriptor [|java:text:DateFormat|] @type static;
#L0f6d52.   v8:= temp  @type object;
#L0f6d54.   goto L0f6bf2;
#L0f6d58.   v8:= 125  @length 16;
#L0f6d5c.   if v1 != v8 then goto L0f6d70;
#L0f6d60.   v8:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6d64.   call temp:=  [|java:text:NumberFormat.getInstance|](v8) @signature [|Ljava/text/NumberFormat;.getInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f6d6a.   v8:= temp  @type object;
#L0f6d6c.   goto L0f6bf2;
#L0f6d70.   v8:= 1  @length 4;
#L0f6d72.   v9:= 3  @length 4;
#L0f6d74.   v9:= new [|java:lang:String|][v9];
#L0f6d78.   v10:= 0  @length 4;
#L0f6d7a.   v11:= "currency" @type (object, string);
#L0f6d7e.   v9[v10]:= v11  @type object;
#L0f6d82.   v10:= 1  @length 4;
#L0f6d84.   v11:= "percent" @type (object, string);
#L0f6d88.   v9[v10]:= v11  @type object;
#L0f6d8c.   v10:= 2  @length 4;
#L0f6d8e.   v11:= "integer" @type (object, string);
#L0f6d92.   v9[v10]:= v11  @type object;
#L0f6d96.   call temp:=  [|java:text:MessageFormat.match|](v12, v13, v14, v8, v9) @signature [|Ljava/text/MessageFormat;.match:(Ljava/lang/String;Ljava/text/ParsePosition;Z[Ljava/lang/String;)I|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f6d9c.   v4:= temp;
#L0f6d9e.   v8:= -1  @length 4;
#L0f6da0.   if v4 != v8 then goto L0f6dd6;
#L0f6da4.   v8:= 125  @length 16;
#L0f6da8.   v9:= 123  @length 16;
#L0f6dac.   call temp:=  [|java:text:Format.upToWithQuotes|](v13, v14, v0, v8, v9) @signature [|Ljava/text/Format;.upToWithQuotes:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuffer;CC)Z|] @classDescriptor [|java:text:Format|] @type static;
#L0f6db2.   v8:= new [|java:text:DecimalFormat|];
#L0f6db6.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f6dbc.   v9:= temp  @type object;
#L0f6dbe.   v10:= new [|java:text:DecimalFormatSymbols|];
#L0f6dc2.   v11:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6dc6.   call temp:=  [|java:text:DecimalFormatSymbols.<init>|](v10, v11) @signature [|Ljava/text/DecimalFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type direct;
#L0f6dcc.   call temp:=  [|java:text:DecimalFormat.<init>|](v8, v9, v10) @signature [|Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f6dd2.   goto L0f6bf2;
#L0f6dd6.   goto L0f6e40;
#L0f6ddc.   v8:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6de0.   call temp:=  [|java:text:NumberFormat.getIntegerInstance|](v8) @signature [|Ljava/text/NumberFormat;.getIntegerInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f6de6.   v8:= temp  @type object;
#L0f6de8.   goto L0f6bf2;
#L0f6dec.   v8:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6df0.   call temp:=  [|java:text:NumberFormat.getCurrencyInstance|](v8) @signature [|Ljava/text/NumberFormat;.getCurrencyInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f6df6.   v8:= temp  @type object;
#L0f6df8.   goto L0f6bf2;
#L0f6dfc.   v8:= v12.[|java:text:MessageFormat.locale|]   @type object;
#L0f6e00.   call temp:=  [|java:text:NumberFormat.getPercentInstance|](v8) @signature [|Ljava/text/NumberFormat;.getPercentInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f6e06.   v8:= temp  @type object;
#L0f6e08.   goto L0f6bf2;
#L0f6e0c.   v8:= Exception  @type object;
#L0f6e0e.   goto L0f6c74;
#L0f6e12.   
#L0f6e14.   switch  v7
                 | 0 => goto L0f6c88
                 | 1 => goto L0f6c88
                 | 2 => goto L0f6d58
                 | => goto L0f6c66;
#L0f6e28.   switch  v2
                 | 0 => goto L0f6d38
                 | 1 => goto L0f6d3c
                 | 2 => goto L0f6d40
                 | 3 => goto L0f6d44
                 | => goto L0f6d22;
#L0f6e40.   switch  v4
                 | 0 => goto L0f6dec
                 | 1 => goto L0f6dfc
                 | => goto L0f6ddc;
  catch  [|java:lang:IllegalArgumentException|] @[L0f6c6e..L0f6c74] goto L0f6e0c;

   }
    procedure [|void|] [|java:text:MessageFormat.readObject|] ([|java:text:MessageFormat|] v9 @type (this), [|java:io:ObjectInputStream|] v10 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        [|int|] v1 @varname [|i|] @scope ((L0054,L0067), (L0079,L0094));
        [|int|] v2 @varname [|last|] @scope ((L0053,L0067), (L0079,L0094));
        [|int|] v3 @varname [|length|] @scope ((L004e,L0067), (L0076,L0077), (L0079,L0094));
        [|java:io:ObjectInputStream$GetField|] v0 @varname [|fields|] @scope ((L0007,L0094));
        [|int|][] v4 @varname [|offsets|] @scope ((L003c,L0094));
        [|java:lang:String|] v5 @varname [|pattern|] @scope ((L0044,L0094));


        v6;
        v7;
        v8;
      
#L0f6e70.   v3:= 1  @length 4;
#L0f6e72.   v7:= 0  @length 4;
#L0f6e74.   v8:= 0  @length 4;
#L0f6e76.   call temp:=  [|java:io:ObjectInputStream.readFields|](v10) @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0f6e7c.   v0:= temp  @type object;
#L0f6e7e.   v6:= "argumentNumbers" @type (object, string);
#L0f6e82.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f6e88.   v6:= temp  @type object;
#L0f6e8a.   v6:= ([|int|][])v6;
#L0f6e8e.   v6:= ([|int|][])v6;
#L0f6e92.   v9.[|java:text:MessageFormat.argumentNumbers|]  := v6 @type object;
#L0f6e96.   v6:= "formats" @type (object, string);
#L0f6e9a.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f6ea0.   v6:= temp  @type object;
#L0f6ea2.   v6:= ([|java:text:Format|][])v6;
#L0f6ea6.   v6:= ([|java:text:Format|][])v6;
#L0f6eaa.   v9.[|java:text:MessageFormat.formats|]  := v6 @type object;
#L0f6eae.   v6:= "locale" @type (object, string);
#L0f6eb2.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f6eb8.   v6:= temp  @type object;
#L0f6eba.   v6:= ([|java:util:Locale|])v6;
#L0f6ebe.   v9.[|java:text:MessageFormat.locale|]  := v6 @type object;
#L0f6ec2.   v6:= "maxOffset" @type (object, string);
#L0f6ec6.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v7) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f6ecc.   v6:= temp;
#L0f6ece.   v9.[|java:text:MessageFormat.maxOffset|]  := v6;
#L0f6ed2.   v6:= "offsets" @type (object, string);
#L0f6ed6.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f6edc.   v6:= temp  @type object;
#L0f6ede.   v6:= ([|int|][])v6;
#L0f6ee2.   v4:= v6  @type object;
#L0f6ee4.   v4:= ([|int|][])v4;
#L0f6ee8.   v6:= "pattern" @type (object, string);
#L0f6eec.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v6, v8) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f6ef2.   v5:= temp  @type object;
#L0f6ef4.   v5:= ([|java:lang:String|])v5;
#L0f6ef8.   v6:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f6efc.   if v6 >= 0 then goto L0f6f42;
#L0f6f00.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6f06.   v6:= temp;
#L0f6f08.   if v6 <= 0 then goto L0f6f3e;
#L0f6f0c.   v6:= new [|java:lang:String|][v3];
#L0f6f10.   v9.[|java:text:MessageFormat.strings|]  := v6 @type object;
#L0f6f14.   v2:= 0  @length 4;
#L0f6f16.   v1:= 0  @length 4;
#L0f6f18.   v6:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f6f1c.   if v1 > v6 then goto L0f6f62;
#L0f6f20.   v6:= v9.[|java:text:MessageFormat.strings|]   @type object;
#L0f6f24.   v7:= v4[v1];
#L0f6f28.   call temp:=  [|java:lang:String.substring|](v5, v2, v7) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6f2e.   v7:= temp  @type object;
#L0f6f30.   v6[v1]:= v7  @type object;
#L0f6f34.   v2:= v4[v1];
#L0f6f38.   v1:= v1 + 1;
#L0f6f3c.   goto L0f6f18;
#L0f6f3e.   v3:= v7;
#L0f6f40.   goto L0f6f0c;
#L0f6f42.   v6:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f6f46.   v7:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f6f4a.   v7:= v4[v7];
#L0f6f4e.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6f54.   v8:= temp;
#L0f6f56.   if v7 != v8 then goto L0f6f5e;
#L0f6f5a.   v3:= v3 + v6  @type int;
#L0f6f5c.   goto L0f6f0c;
#L0f6f5e.   v3:= 2  @length 4;
#L0f6f60.   goto L0f6f5a;
#L0f6f62.   v6:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f6f66.   v6:= v6 + 1;
#L0f6f6a.   v7:= v9.[|java:text:MessageFormat.strings|]   @type object;
#L0f6f6e.   v7:= v7.length;
#L0f6f70.   if v6 >= v7 then goto L0f6f96;
#L0f6f74.   v6:= v9.[|java:text:MessageFormat.strings|]   @type object;
#L0f6f78.   v7:= v9.[|java:text:MessageFormat.strings|]   @type object;
#L0f6f7c.   v7:= v7.length;
#L0f6f7e.   v7:= v7 + -1;
#L0f6f82.   call temp:=  [|java:lang:String.length|](v5) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6f88.   v8:= temp;
#L0f6f8a.   call temp:=  [|java:lang:String.substring|](v5, v2, v8) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f6f90.   v8:= temp  @type object;
#L0f6f92.   v6[v7]:= v8  @type object;
#L0f6f96.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat.writeObject|] ([|java:text:MessageFormat|] v9 @type (this), [|java:io:ObjectOutputStream|] v10 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        [|java:text:Format|][] v0 @varname [|compatibleFormats|] @scope ((L000d,L006c));
        [|java:io:ObjectOutputStream$PutField|] v1 @varname [|fields|] @scope ((L0004,L006c));
        [|int|] v2 @varname [|i|] @scope ((L002d,L006c));
        [|int|] v3 @varname [|offset|] @scope ((L0021,L006c));
        [|int|][] v4 @varname [|offsets|] @scope ((L0027,L006c));
        [|int|] v5 @varname [|offsetsLength|] @scope ((L0025,L006c));
        [|java:lang:StringBuilder|] v6 @varname [|pattern|] @scope ((L002c,L006c));


        v7;
        v8;
      
#L0f6fa8.   call temp:=  [|java:io:ObjectOutputStream.putFields|](v10) @signature [|Ljava/io/ObjectOutputStream;.putFields:()Ljava/io/ObjectOutputStream$PutField;|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f6fae.   v1:= temp  @type object;
#L0f6fb0.   v7:= "argumentNumbers" @type (object, string);
#L0f6fb4.   v8:= v9.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f6fb8.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v1, v7, v8) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f6fbe.   v0:= v9.[|java:text:MessageFormat.formats|]   @type object;
#L0f6fc2.   v7:= "formats" @type (object, string);
#L0f6fc6.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v1, v7, v0) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f6fcc.   v7:= "locale" @type (object, string);
#L0f6fd0.   v8:= v9.[|java:text:MessageFormat.locale|]   @type object;
#L0f6fd4.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v1, v7, v8) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f6fda.   v7:= "maxOffset" @type (object, string);
#L0f6fde.   v8:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f6fe2.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v1, v7, v8) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f6fe8.   v3:= 0  @length 4;
#L0f6fea.   v7:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f6fee.   v5:= v7 + 1;
#L0f6ff2.   v4:= new [|int|][v5];
#L0f6ff6.   v6:= new [|java:lang:StringBuilder|];
#L0f6ffa.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f7000.   v2:= 0  @length 4;
#L0f7002.   v7:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f7006.   if v2 > v7 then goto L0f7034;
#L0f700a.   v7:= v9.[|java:text:MessageFormat.strings|]   @type object;
#L0f700e.   v7:= v7[v2]  @type object;
#L0f7012.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f7018.   v7:= temp;
#L0f701a.   v3:= v3 + v7  @type int;
#L0f701c.   v4[v2]:= v3;
#L0f7020.   v7:= v9.[|java:text:MessageFormat.strings|]   @type object;
#L0f7024.   v7:= v7[v2]  @type object;
#L0f7028.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f702e.   v2:= v2 + 1;
#L0f7032.   goto L0f7002;
#L0f7034.   v7:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f7038.   v7:= v7 + 1;
#L0f703c.   v8:= v9.[|java:text:MessageFormat.strings|]   @type object;
#L0f7040.   v8:= v8.length;
#L0f7042.   if v7 >= v8 then goto L0f705c;
#L0f7046.   v7:= v9.[|java:text:MessageFormat.strings|]   @type object;
#L0f704a.   v8:= v9.[|java:text:MessageFormat.maxOffset|] ;
#L0f704e.   v8:= v8 + 1;
#L0f7052.   v7:= v7[v8]  @type object;
#L0f7056.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f705c.   v7:= "offsets" @type (object, string);
#L0f7060.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v1, v7, v4) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f7066.   v7:= "pattern" @type (object, string);
#L0f706a.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7070.   v8:= temp  @type object;
#L0f7072.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v1, v7, v8) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f7078.   call temp:=  [|java:io:ObjectOutputStream.writeFields|](v10) @signature [|Ljava/io/ObjectOutputStream;.writeFields:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f707e.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat.applyPattern|] ([|java:text:MessageFormat|] v20 @type (this), [|java:lang:String|] v21 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.applyPattern:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;
        [|int|] v14 @varname [|offset|] @scope ((L003d,L0047), (L0047,L0048), (L0048,L004a), (L004a,L0084), (L0084,L00c1), (L010e,L0110));
        [|char|] v8 @varname [|ch|] @scope ((L0047,L0048), (L0050,L00c1), (L010e,L0110));
        [|int|][] v13 @varname [|newArgs|] @scope ((L00a8,L00b9));
        [|int|] v4 @varname [|argCount|] @scope ((L0016,L00bb), (L00bb,L00c1), (L00c1,L010e), (L010e,L010f), (L010f,L0110));
        [|int|] v3 @varname [|arg|] @scope ((L0039,L00c1), (L010e,L0110));
        [|int|][] v6 @varname [|args|] @scope ((L001c,L0110));
        [|java:lang:StringBuffer|] v7 @varname [|buffer|] @scope ((L0009,L0110));
        [|int|] v9 @varname [|length|] @scope ((L0004,L0110));
        [|java:util:ArrayList|] v10 @varname [|localFormats|] @scope ((L0022,L0110));
        [|java:util:ArrayList|] v11 @varname [|localStrings|] @scope ((L0015,L0110));
        [|int|] v12 @varname [|maxArg|] @scope ((L001d,L0110));
        [|java:text:ParsePosition|] v16 @varname [|position|] @scope ((L0010,L0110));


        v0;
        v1;
        v2;
        v5;
        v15;
        v17;
        v18;
        v19;
      
#L0f7090.   call temp:=  [|java:lang:String.length|](v21) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f7096.   v9:= temp;
#L0f7098.   v7:= new [|java:lang:StringBuffer|];
#L0f709c.   call temp:=  [|java:lang:StringBuffer.<init>|](v7) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f70a2.   v16:= new [|java:text:ParsePosition|];
#L0f70a6.   v17:= 0  @length 16;
#L0f70aa.   call temp:=  [|java:text:ParsePosition.<init>|](v16, v17) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f70b0.   v11:= new [|java:util:ArrayList|];
#L0f70b4.   call temp:=  [|java:util:ArrayList.<init>|](v11) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0f70ba.   v4:= 0  @length 4;
#L0f70bc.   v17:= 10  @length 16;
#L0f70c0.   v0:= v17;
#L0f70c4.   v6:= new [|int|][v0];
#L0f70c8.   v12:= -1  @length 4;
#L0f70ca.   v10:= new [|java:util:ArrayList|];
#L0f70ce.   call temp:=  [|java:util:ArrayList.<init>|](v10) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0f70d4.   call temp:=  [|java:text:ParsePosition.getIndex|](v16) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f70da.   v17:= temp;
#L0f70dc.   v0:= v17;
#L0f70e0.   if v0 >= v9 then goto L0f7236;
#L0f70e4.   v17:= 123  @length 16;
#L0f70e8.   v0:= v21  @type object;
#L0f70ec.   v1:= v16  @type object;
#L0f70f0.   v2:= v17;
#L0f70f4.   call temp:=  [|java:text:Format.upTo|](v0, v1, v7, v2) @signature [|Ljava/text/Format;.upTo:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/lang/StringBuffer;C)Z|] @classDescriptor [|java:text:Format|] @type static;
#L0f70fa.   v17:= temp;
#L0f70fc.   if v17 == 0 then goto L0f7212;
#L0f7100.   v3:= 0  @length 4;
#L0f7102.   call temp:=  [|java:text:ParsePosition.getIndex|](v16) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f7108.   v14:= temp;
#L0f710a.   if v14 < v9 then goto L0f7120;
#L0f710e.   v17:= new [|java:lang:IllegalArgumentException|];
#L0f7112.   v18:= "Invalid argument number" @type (object, string);
#L0f7116.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v17, v18) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f711c.   throw v17;
#L0f711e.   v14:= v15;
#L0f7120.   v15:= v14 + 1;
#L0f7124.   v0:= v21  @type object;
#L0f7128.   call temp:=  [|java:lang:String.charAt|](v0, v14) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f712e.   v8:= temp;
#L0f7130.   v17:= 125  @length 16;
#L0f7134.   v0:= v17;
#L0f7138.   if v8 == v0 then goto L0f7194;
#L0f713c.   v17:= 44  @length 16;
#L0f7140.   v0:= v17;
#L0f7144.   if v8 == v0 then goto L0f7194;
#L0f7148.   v17:= 48  @length 16;
#L0f714c.   v0:= v17;
#L0f7150.   if v8 >= v0 then goto L0f7170;
#L0f7154.   v17:= 57  @length 16;
#L0f7158.   v0:= v17;
#L0f715c.   if v8 <= v0 then goto L0f7170;
#L0f7160.   v17:= new [|java:lang:IllegalArgumentException|];
#L0f7164.   v18:= "Invalid argument number" @type (object, string);
#L0f7168.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v17, v18) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f716e.   throw v17;
#L0f7170.   v17:= v3 * 10;
#L0f7174.   v18:= v8 + -48;
#L0f7178.   v3:= v17 + v18  @type int;
#L0f717c.   if v3 < 0 then goto L0f7184;
#L0f7180.   if v15 < v9 then goto L0f711e;
#L0f7184.   v17:= new [|java:lang:IllegalArgumentException|];
#L0f7188.   v18:= "Invalid argument number" @type (object, string);
#L0f718c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v17, v18) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f7192.   throw v17;
#L0f7194.   v14:= v15 + -1;
#L0f7198.   v0:= v16  @type object;
#L0f719c.   call temp:=  [|java:text:ParsePosition.setIndex|](v0, v14) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f71a2.   v0:= v20  @type object;
#L0f71a6.   v1:= v21  @type object;
#L0f71aa.   v2:= v16  @type object;
#L0f71ae.   call temp:=  [|java:text:MessageFormat.parseVariable|](v0, v1, v2) @signature [|Ljava/text/MessageFormat;.parseVariable:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/text/Format;|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f71b4.   v17:= temp  @type object;
#L0f71b6.   v0:= v17  @type object;
#L0f71ba.   call temp:=  [|java:util:ArrayList.add|](v10, v0) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f71c0.   v0:= v6.length;
#L0f71c2.   v17:= v0;
#L0f71c6.   v0:= v17;
#L0f71ca.   if v4 < v0 then goto L0f7202;
#L0f71ce.   v0:= v6.length;
#L0f71d0.   v17:= v0;
#L0f71d4.   v17:= v17 * 2;
#L0f71d8.   v0:= v17;
#L0f71dc.   v13:= new [|int|][v0];
#L0f71e0.   v17:= 0  @length 16;
#L0f71e4.   v18:= 0  @length 16;
#L0f71e8.   v0:= v6.length;
#L0f71ea.   v19:= v0;
#L0f71ee.   v0:= v17;
#L0f71f2.   v1:= v18;
#L0f71f6.   v2:= v19;
#L0f71fa.   call temp:=  [|java:lang:System.arraycopy|](v6, v0, v13, v1, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L0f7200.   v6:= v13  @type object;
#L0f7202.   v5:= v4 + 1;
#L0f7206.   v6[v4]:= v3;
#L0f720a.   if v3 <= v12 then goto L0f72ac;
#L0f720e.   v12:= v3;
#L0f7210.   v4:= v5;
#L0f7212.   call temp:=  [|java:lang:StringBuffer.toString|](v7) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f7218.   v17:= temp  @type object;
#L0f721a.   v0:= v17  @type object;
#L0f721e.   call temp:=  [|java:util:ArrayList.add|](v11, v0) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f7224.   v17:= 0  @length 16;
#L0f7228.   v0:= v17;
#L0f722c.   call temp:=  [|java:lang:StringBuffer.setLength|](v7, v0) @signature [|Ljava/lang/StringBuffer;.setLength:(I)V|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f7232.   goto L0f70d4;
#L0f7236.   call temp:=  [|java:util:ArrayList.size|](v11) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f723c.   v17:= temp;
#L0f723e.   v0:= v17;
#L0f7242.   v0:= new [|java:lang:String|][v0];
#L0f7246.   v17:= v0  @type object;
#L0f724a.   v0:= v17  @type object;
#L0f724e.   call temp:=  [|java:util:ArrayList.toArray|](v11, v0) @signature [|Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f7254.   v17:= temp  @type object;
#L0f7256.   v17:= ([|java:lang:String|][])v17;
#L0f725a.   v0:= v17  @type object;
#L0f725e.   v1:= v20  @type object;
#L0f7262.   v1.[|java:text:MessageFormat.strings|]  := v0 @type object;
#L0f7266.   v0:= v20  @type object;
#L0f726a.   v0.[|java:text:MessageFormat.argumentNumbers|]  := v6 @type object;
#L0f726e.   v0:= new [|java:text:Format|][v4];
#L0f7272.   v17:= v0  @type object;
#L0f7276.   v0:= v17  @type object;
#L0f727a.   call temp:=  [|java:util:ArrayList.toArray|](v10, v0) @signature [|Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f7280.   v17:= temp  @type object;
#L0f7282.   v17:= ([|java:text:Format|][])v17;
#L0f7286.   v0:= v17  @type object;
#L0f728a.   v1:= v20  @type object;
#L0f728e.   v1.[|java:text:MessageFormat.formats|]  := v0 @type object;
#L0f7292.   v17:= v4 + -1;
#L0f7296.   v0:= v17;
#L0f729a.   v1:= v20  @type object;
#L0f729e.   v1.[|java:text:MessageFormat.maxOffset|]  := v0;
#L0f72a2.   v0:= v20  @type object;
#L0f72a6.   v0.[|java:text:MessageFormat.maxArgumentIndex|]  := v12;
#L0f72aa.   return @void ;
#L0f72ac.   v4:= v5;
#L0f72ae.   goto L0f7212;

   }
    procedure [|java:lang:Object|] [|java:text:MessageFormat.clone|] ([|java:text:MessageFormat|] v4 @type (this)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:Format|][] v0 @varname [|array|] @scope ((L000b,L0028));
        [|java:text:MessageFormat|] v1 @varname [|clone|] @scope ((L0006,L0028));
        [|int|] v2 @varname [|i|] @scope ((L000e,L0028));

        v3;
      
#L0f72c0.   call temp:=  [|java:text:Format.clone|](v4) @signature [|Ljava/text/Format;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:Format|] @type super;
#L0f72c6.   v1:= temp  @type object;
#L0f72c8.   v1:= ([|java:text:MessageFormat|])v1;
#L0f72cc.   v3:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f72d0.   v3:= v3.length;
#L0f72d2.   v0:= new [|java:text:Format|][v3];
#L0f72d6.   v3:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f72da.   v2:= v3.length;
#L0f72dc.   v2:= v2 + -1;
#L0f72e0.   if v2 < 0 then goto L0f730a;
#L0f72e4.   v3:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f72e8.   v3:= v3[v2]  @type object;
#L0f72ec.   if v3 == 0 then goto L0f72dc;
#L0f72f0.   v3:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f72f4.   v3:= v3[v2]  @type object;
#L0f72f8.   call temp:=  [|java:text:Format.clone|](v3) @signature [|Ljava/text/Format;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:Format|] @type virtual;
#L0f72fe.   v3:= temp  @type object;
#L0f7300.   v3:= ([|java:text:Format|])v3;
#L0f7304.   v0[v2]:= v3  @type object;
#L0f7308.   goto L0f72dc;
#L0f730a.   v1.[|java:text:MessageFormat.formats|]  := v0 @type object;
#L0f730e.   return v1  @type object;

   }
    procedure [|boolean|] [|java:text:MessageFormat.equals|] ([|java:text:MessageFormat|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:MessageFormat|] v0 @varname [|format|] @scope ((L000d,L0047));
        [|int|] v1 @varname [|i|] @scope ((L0014,L0047));


        v2;
        v3;
        v4;
        v5;
      
#L0f7320.   v2:= 1  @length 4;
#L0f7322.   v3:= 0  @length 4;
#L0f7324.   if v6 != v7 then goto L0f732c;
#L0f7328.   v3:= v2;
#L0f732a.   return v3;
#L0f732c.   v4:= instanceof @varname v7 @type [|java:text:MessageFormat|];
#L0f7330.   if v4 == 0 then goto L0f732a;
#L0f7334.   v0:= v7  @type object;
#L0f7336.   v0:= ([|java:text:MessageFormat|])v0;
#L0f733a.   v4:= v6.[|java:text:MessageFormat.maxOffset|] ;
#L0f733e.   v5:= v0.[|java:text:MessageFormat.maxOffset|] ;
#L0f7342.   if v4 != v5 then goto L0f732a;
#L0f7346.   v1:= 0  @length 4;
#L0f7348.   v4:= v6.[|java:text:MessageFormat.maxOffset|] ;
#L0f734c.   if v1 > v4 then goto L0f736a;
#L0f7350.   v4:= v6.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f7354.   v4:= v4[v1];
#L0f7358.   v5:= v0.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f735c.   v5:= v5[v1];
#L0f7360.   if v4 != v5 then goto L0f732a;
#L0f7364.   v1:= v1 + 1;
#L0f7368.   goto L0f7348;
#L0f736a.   v4:= v6.[|java:text:MessageFormat.locale|]   @type object;
#L0f736e.   v5:= v0.[|java:text:MessageFormat.locale|]   @type object;
#L0f7372.   call temp:=  [|java:util:Locale.equals|](v4, v5) @signature [|Ljava/util/Locale;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Locale|] @type virtual;
#L0f7378.   v4:= temp;
#L0f737a.   if v4 == 0 then goto L0f73aa;
#L0f737e.   v4:= v6.[|java:text:MessageFormat.strings|]   @type object;
#L0f7382.   v5:= v0.[|java:text:MessageFormat.strings|]   @type object;
#L0f7386.   call temp:=  [|java:util:Arrays.equals|](v4, v5) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f738c.   v4:= temp;
#L0f738e.   if v4 == 0 then goto L0f73aa;
#L0f7392.   v4:= v6.[|java:text:MessageFormat.formats|]   @type object;
#L0f7396.   v5:= v0.[|java:text:MessageFormat.formats|]   @type object;
#L0f739a.   call temp:=  [|java:util:Arrays.equals|](v4, v5) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L0f73a0.   v4:= temp;
#L0f73a2.   if v4 == 0 then goto L0f73aa;
#L0f73a6.   v3:= v2;
#L0f73a8.   goto L0f732a;
#L0f73aa.   v2:= v3;
#L0f73ac.   goto L0f73a6;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:MessageFormat.format|] ([|java:text:MessageFormat|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:StringBuffer|] v3 @type (object), [|java:text:FieldPosition|] v4 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC_FINAL {
      local temp ;




        v0;
      
#L0f73c0.   v2:= ([|java:lang:Object|][])v2;
#L0f73c4.   v2:= ([|java:lang:Object|][])v2;
#L0f73c8.   call temp:=  [|java:text:MessageFormat.format|](v1, v2, v3, v4) @signature [|Ljava/text/MessageFormat;.format:([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:MessageFormat|] @type virtual;
#L0f73ce.   v0:= temp  @type object;
#L0f73d0.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:MessageFormat.format|] ([|java:text:MessageFormat|] v1 @type (this), [|java:lang:Object|][] v2 @type (object), [|java:lang:StringBuffer|] v3 @type (object), [|java:text:FieldPosition|] v4 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.format:([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC_FINAL {
      local temp ;




        v0;
      
#L0f73e4.   v0:= 0  @length 4;
#L0f73e6.   call temp:=  [|java:text:MessageFormat.formatImpl|](v1, v2, v3, v4, v0) @signature [|Ljava/text/MessageFormat;.formatImpl:([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f73ec.   v0:= temp  @type object;
#L0f73ee.   return v0  @type object;

   }
    procedure [|java:text:AttributedCharacterIterator|] [|java:text:MessageFormat.formatToCharacterIterator|] ([|java:text:MessageFormat|] v9 @type (this), [|java:lang:Object|] v10 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.formatToCharacterIterator:(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;|] @Access PUBLIC {
      local temp ;

        [|java:text:MessageFormat$FieldContainer|] v2 @varname [|fc|] @scope ((L003a,L0046));
        [|java:text:AttributedString|] v0 @varname [|as|] @scope ((L002a,L004b));
        [|java:lang:StringBuffer|] v1 @varname [|buffer|] @scope ((L000f,L004b));
        [|java:util:ArrayList|] v3 @varname [|fields|] @scope ((L0014,L004b));
        [|java:util:Iterator|] v4 @varname [|i$|] @scope ((L002e,L004b));

        v5;
        v6;
        v7;
        v8;
      
#L0f7400.   if v10 != 0 then goto L0f7414;
#L0f7404.   v5:= new [|java:lang:NullPointerException|];
#L0f7408.   v6:= "object == null" @type (object, string);
#L0f740c.   call temp:=  [|java:lang:NullPointerException.<init>|](v5, v6) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f7412.   throw v5;
#L0f7414.   v1:= new [|java:lang:StringBuffer|];
#L0f7418.   call temp:=  [|java:lang:StringBuffer.<init>|](v1) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f741e.   v3:= new [|java:util:ArrayList|];
#L0f7422.   call temp:=  [|java:util:ArrayList.<init>|](v3) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0f7428.   v10:= ([|java:lang:Object|][])v10;
#L0f742c.   v10:= ([|java:lang:Object|][])v10;
#L0f7430.   v5:= new [|java:text:FieldPosition|];
#L0f7434.   v6:= 0  @length 4;
#L0f7436.   call temp:=  [|java:text:FieldPosition.<init>|](v5, v6) @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f743c.   call temp:=  [|java:text:MessageFormat.formatImpl|](v9, v10, v1, v5, v3) @signature [|Ljava/text/MessageFormat;.formatImpl:([Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f7442.   v0:= new [|java:text:AttributedString|];
#L0f7446.   call temp:=  [|java:lang:StringBuffer.toString|](v1) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f744c.   v5:= temp  @type object;
#L0f744e.   call temp:=  [|java:text:AttributedString.<init>|](v0, v5) @signature [|Ljava/text/AttributedString;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:AttributedString|] @type direct;
#L0f7454.   call temp:=  [|java:util:ArrayList.iterator|](v3) @signature [|Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f745a.   v4:= temp  @type object;
#L0f745c.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f7462.   v5:= temp;
#L0f7464.   if v5 == 0 then goto L0f748c;
#L0f7468.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f746e.   v2:= temp  @type object;
#L0f7470.   v2:= ([|java:text:MessageFormat$FieldContainer|])v2;
#L0f7474.   v5:= v2.[|java:text:MessageFormat$FieldContainer.attribute|]   @type object;
#L0f7478.   v6:= v2.[|java:text:MessageFormat$FieldContainer.value|]   @type object;
#L0f747c.   v7:= v2.[|java:text:MessageFormat$FieldContainer.start|] ;
#L0f7480.   v8:= v2.[|java:text:MessageFormat$FieldContainer.end|] ;
#L0f7484.   call temp:=  [|java:text:AttributedString.addAttribute|](v0, v5, v6, v7, v8) @signature [|Ljava/text/AttributedString;.addAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V|] @classDescriptor [|java:text:AttributedString|] @type virtual;
#L0f748a.   goto L0f745c;
#L0f748c.   call temp:=  [|java:text:AttributedString.getIterator|](v0) @signature [|Ljava/text/AttributedString;.getIterator:()Ljava/text/AttributedCharacterIterator;|] @classDescriptor [|java:text:AttributedString|] @type virtual;
#L0f7492.   v5:= temp  @type object;
#L0f7494.   return v5  @type object;

   }
    procedure [|java:text:Format|][] [|java:text:MessageFormat.getFormats|] ([|java:text:MessageFormat|] v1 @type (this)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.getFormats:()[Ljava/text/Format;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f74a8.   v0:= v1.[|java:text:MessageFormat.formats|]   @type object;
#L0f74ac.   call temp:=  [|java:text:Format[].clone|](v0) @signature [|[Ljava/text/Format;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:Format[]|] @type virtual;
#L0f74b2.   v0:= temp  @type object;
#L0f74b4.   v0:= ([|java:text:Format|][])v0;
#L0f74b8.   return v0  @type object;

   }
    procedure [|java:text:Format|][] [|java:text:MessageFormat.getFormatsByArgumentIndex|] ([|java:text:MessageFormat|] v4 @type (this)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.getFormatsByArgumentIndex:()[Ljava/text/Format;|] @Access PUBLIC {
      local temp ;
        [|java:text:Format|][] v0 @varname [|answer|] @scope ((L0006,L001b));
        [|int|] v1 @varname [|i|] @scope ((L0007,L001b));

        v2;
        v3;
      
#L0f74cc.   v2:= v4.[|java:text:MessageFormat.maxArgumentIndex|] ;
#L0f74d0.   v2:= v2 + 1;
#L0f74d4.   v0:= new [|java:text:Format|][v2];
#L0f74d8.   v1:= 0  @length 4;
#L0f74da.   v2:= v4.[|java:text:MessageFormat.maxOffset|] ;
#L0f74de.   v2:= v2 + 1;
#L0f74e2.   if v1 >= v2 then goto L0f7500;
#L0f74e6.   v2:= v4.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f74ea.   v2:= v2[v1];
#L0f74ee.   v3:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f74f2.   v3:= v3[v1]  @type object;
#L0f74f6.   v0[v2]:= v3  @type object;
#L0f74fa.   v1:= v1 + 1;
#L0f74fe.   goto L0f74da;
#L0f7500.   return v0  @type object;

   }
    procedure [|java:util:Locale|] [|java:text:MessageFormat.getLocale|] ([|java:text:MessageFormat|] v1 @type (this)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.getLocale:()Ljava/util/Locale;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f7514.   v0:= v1.[|java:text:MessageFormat.locale|]   @type object;
#L0f7518.   return v0  @type object;

   }
    procedure [|int|] [|java:text:MessageFormat.hashCode|] ([|java:text:MessageFormat|] v4 @type (this)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|hashCode|] @scope ((L0001,L0047));
        [|int|] v1 @varname [|i|] @scope ((L0002,L0048));

        v2;
        v3;
      
#L0f752c.   v0:= 0  @length 4;
#L0f752e.   v1:= 0  @length 4;
#L0f7530.   v2:= v4.[|java:text:MessageFormat.maxOffset|] ;
#L0f7534.   if v1 > v2 then goto L0f7578;
#L0f7538.   v2:= v4.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f753c.   v2:= v2[v1];
#L0f7540.   v3:= v4.[|java:text:MessageFormat.strings|]   @type object;
#L0f7544.   v3:= v3[v1]  @type object;
#L0f7548.   call temp:=  [|java:lang:String.hashCode|](v3) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f754e.   v3:= temp;
#L0f7550.   v2:= v2 + v3  @type int;
#L0f7552.   v0:= v0 + v2  @type int;
#L0f7554.   v2:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f7558.   v2:= v2[v1]  @type object;
#L0f755c.   if v2 == 0 then goto L0f7572;
#L0f7560.   v2:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f7564.   v2:= v2[v1]  @type object;
#L0f7568.   call temp:=  [|java:lang:Object.hashCode|](v2) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f756e.   v2:= temp;
#L0f7570.   v0:= v0 + v2  @type int;
#L0f7572.   v1:= v1 + 1;
#L0f7576.   goto L0f7530;
#L0f7578.   v2:= v4.[|java:text:MessageFormat.maxOffset|] ;
#L0f757c.   v2:= v2 + 1;
#L0f7580.   v3:= v4.[|java:text:MessageFormat.strings|]   @type object;
#L0f7584.   v3:= v3.length;
#L0f7586.   if v2 >= v3 then goto L0f75a4;
#L0f758a.   v2:= v4.[|java:text:MessageFormat.strings|]   @type object;
#L0f758e.   v3:= v4.[|java:text:MessageFormat.maxOffset|] ;
#L0f7592.   v3:= v3 + 1;
#L0f7596.   v2:= v2[v3]  @type object;
#L0f759a.   call temp:=  [|java:lang:String.hashCode|](v2) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f75a0.   v2:= temp;
#L0f75a2.   v0:= v0 + v2  @type int;
#L0f75a4.   v2:= v4.[|java:text:MessageFormat.locale|]   @type object;
#L0f75a8.   if v2 == 0 then goto L0f75ba;
#L0f75ac.   v2:= v4.[|java:text:MessageFormat.locale|]   @type object;
#L0f75b0.   call temp:=  [|java:util:Locale.hashCode|](v2) @signature [|Ljava/util/Locale;.hashCode:()I|] @classDescriptor [|java:util:Locale|] @type virtual;
#L0f75b6.   v2:= temp;
#L0f75b8.   v0:= v0 + v2  @type int;
#L0f75ba.   return v0;

   }
    procedure [|java:lang:Object|][] [|java:text:MessageFormat.parse|] ([|java:text:MessageFormat|] v5 @type (this), [|java:lang:String|] v6 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.parse:(Ljava/lang/String;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:ParsePosition|] v0 @varname [|position|] @scope ((L0006,L001d));
        [|java:lang:Object|][] v1 @varname [|result|] @scope ((L000a,L001d));


        v2;
        v3;
        v4;
      
#L0f75cc.   v0:= new [|java:text:ParsePosition|];
#L0f75d0.   v2:= 0  @length 4;
#L0f75d2.   call temp:=  [|java:text:ParsePosition.<init>|](v0, v2) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f75d8.   call temp:=  [|java:text:MessageFormat.parse|](v5, v6, v0) @signature [|Ljava/text/MessageFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)[Ljava/lang/Object;|] @classDescriptor [|java:text:MessageFormat|] @type virtual;
#L0f75de.   v1:= temp  @type object;
#L0f75e0.   call temp:=  [|java:text:ParsePosition.getIndex|](v0) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f75e6.   v2:= temp;
#L0f75e8.   if v2 != 0 then goto L0f7604;
#L0f75ec.   v2:= new [|java:text:ParseException|];
#L0f75f0.   v3:= "Parse failure" @type (object, string);
#L0f75f4.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v0) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f75fa.   v4:= temp;
#L0f75fc.   call temp:=  [|java:text:ParseException.<init>|](v2, v3, v4) @signature [|Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:ParseException|] @type direct;
#L0f7602.   throw v2;
#L0f7604.   return v1  @type object;

   }
    procedure [|java:lang:Object|][] [|java:text:MessageFormat.parse|] ([|java:text:MessageFormat|] v12 @type (this), [|java:lang:String|] v13 @type (object), [|java:text:ParsePosition|] v14 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|int|] v3 @varname [|next|] @scope ((L0047,L0053));
        [|java:lang:String|] v5 @varname [|parse|] @scope ((L0052,L0053), (L0060,L0065), (L006c,L007c));
        [|java:text:Format|] v0 @varname [|format|] @scope ((L0034,L007c));
        [|java:lang:String|] v7 @varname [|sub|] @scope ((L0020,L007c), (L008d,L009e));
        [|int|] v1 @varname [|i|] @scope ((L0018,L00a3));
        [|java:text:ParsePosition|] v2 @varname [|internalPos|] @scope ((L000d,L00a3));
        [|int|] v4 @varname [|offset|] @scope ((L0011,L00a3));
        [|java:lang:Object|][] v6 @varname [|result|] @scope ((L0017,L00a3));



        v8;
        v9;
        v10;
        v11;
      
#L0f7618.   v11:= -1  @length 4;
#L0f761a.   v8:= 0  @length 4;
#L0f761c.   if v13 != 0 then goto L0f7626;
#L0f7620.   v6:= @@[|libcore:util:EmptyArray.OBJECT|]   @type object;
#L0f7624.   return v6  @type object;
#L0f7626.   v2:= new [|java:text:ParsePosition|];
#L0f762a.   v9:= 0  @length 4;
#L0f762c.   call temp:=  [|java:text:ParsePosition.<init>|](v2, v9) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f7632.   call temp:=  [|java:text:ParsePosition.getIndex|](v14) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f7638.   v4:= temp;
#L0f763a.   v9:= v12.[|java:text:MessageFormat.maxArgumentIndex|] ;
#L0f763e.   v9:= v9 + 1;
#L0f7642.   v6:= new [|java:lang:Object|][v9];
#L0f7646.   v1:= 0  @length 4;
#L0f7648.   v9:= v12.[|java:text:MessageFormat.maxOffset|] ;
#L0f764c.   if v1 > v9 then goto L0f7710;
#L0f7650.   v9:= v12.[|java:text:MessageFormat.strings|]   @type object;
#L0f7654.   v7:= v9[v1]  @type object;
#L0f7658.   call temp:=  [|java:lang:String.startsWith|](v13, v7, v4) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;I)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f765e.   v9:= temp;
#L0f7660.   if v9 != 0 then goto L0f766e;
#L0f7664.   call temp:=  [|java:text:ParsePosition.setErrorIndex|](v14, v4) @signature [|Ljava/text/ParsePosition;.setErrorIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f766a.   v6:= v8  @type object;
#L0f766c.   goto L0f7624;
#L0f766e.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f7674.   v9:= temp;
#L0f7676.   v4:= v4 + v9  @type int;
#L0f7678.   v9:= v12.[|java:text:MessageFormat.formats|]   @type object;
#L0f767c.   v0:= v9[v1]  @type object;
#L0f7680.   if v0 != 0 then goto L0f76e2;
#L0f7684.   v9:= v1 + 1;
#L0f7688.   v10:= v12.[|java:text:MessageFormat.strings|]   @type object;
#L0f768c.   v10:= v10.length;
#L0f768e.   if v9 >= v10 then goto L0f76d0;
#L0f7692.   v9:= v12.[|java:text:MessageFormat.strings|]   @type object;
#L0f7696.   v10:= v1 + 1;
#L0f769a.   v9:= v9[v10]  @type object;
#L0f769e.   call temp:=  [|java:lang:String.indexOf|](v13, v9, v4) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f76a4.   v3:= temp;
#L0f76a6.   if v3 != v11 then goto L0f76b4;
#L0f76aa.   call temp:=  [|java:text:ParsePosition.setErrorIndex|](v14, v4) @signature [|Ljava/text/ParsePosition;.setErrorIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f76b0.   v6:= v8  @type object;
#L0f76b2.   goto L0f7624;
#L0f76b4.   call temp:=  [|java:lang:String.substring|](v13, v4, v3) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f76ba.   v5:= temp  @type object;
#L0f76bc.   v4:= v3;
#L0f76be.   v9:= v12.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f76c2.   v9:= v9[v1];
#L0f76c6.   v6[v9]:= v5  @type object;
#L0f76ca.   v1:= v1 + 1;
#L0f76ce.   goto L0f7648;
#L0f76d0.   call temp:=  [|java:lang:String.substring|](v13, v4) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f76d6.   v5:= temp  @type object;
#L0f76d8.   call temp:=  [|java:lang:String.length|](v13) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f76de.   v4:= temp;
#L0f76e0.   goto L0f76be;
#L0f76e2.   call temp:=  [|java:text:ParsePosition.setIndex|](v2, v4) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f76e8.   call temp:=  [|java:text:Format.parseObject|](v0, v13, v2) @signature [|Ljava/text/Format;.parseObject:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;|] @classDescriptor [|java:text:Format|] @type virtual;
#L0f76ee.   v5:= temp  @type object;
#L0f76f0.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v2) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f76f6.   v9:= temp;
#L0f76f8.   if v9 == v11 then goto L0f7706;
#L0f76fc.   call temp:=  [|java:text:ParsePosition.setErrorIndex|](v14, v4) @signature [|Ljava/text/ParsePosition;.setErrorIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f7702.   v6:= v8  @type object;
#L0f7704.   goto L0f7624;
#L0f7706.   call temp:=  [|java:text:ParsePosition.getIndex|](v2) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f770c.   v4:= temp;
#L0f770e.   goto L0f76be;
#L0f7710.   v9:= v12.[|java:text:MessageFormat.maxOffset|] ;
#L0f7714.   v9:= v9 + 1;
#L0f7718.   v10:= v12.[|java:text:MessageFormat.strings|]   @type object;
#L0f771c.   v10:= v10.length;
#L0f771e.   if v9 >= v10 then goto L0f7754;
#L0f7722.   v9:= v12.[|java:text:MessageFormat.strings|]   @type object;
#L0f7726.   v10:= v12.[|java:text:MessageFormat.maxOffset|] ;
#L0f772a.   v10:= v10 + 1;
#L0f772e.   v7:= v9[v10]  @type object;
#L0f7732.   call temp:=  [|java:lang:String.startsWith|](v13, v7, v4) @signature [|Ljava/lang/String;.startsWith:(Ljava/lang/String;I)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f7738.   v9:= temp;
#L0f773a.   if v9 != 0 then goto L0f774a;
#L0f773e.   call temp:=  [|java:text:ParsePosition.setErrorIndex|](v14, v4) @signature [|Ljava/text/ParsePosition;.setErrorIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f7744.   v6:= v8  @type object;
#L0f7746.   goto L0f7624;
#L0f774a.   call temp:=  [|java:lang:String.length|](v7) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f7750.   v8:= temp;
#L0f7752.   v4:= v4 + v8  @type int;
#L0f7754.   call temp:=  [|java:text:ParsePosition.setIndex|](v14, v4) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f775a.   goto L0f7624;

   }
    procedure [|java:lang:Object|] [|java:text:MessageFormat.parseObject|] ([|java:text:MessageFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:text:ParsePosition|] v3 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.parseObject:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0f7770.   call temp:=  [|java:text:MessageFormat.parse|](v1, v2, v3) @signature [|Ljava/text/MessageFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)[Ljava/lang/Object;|] @classDescriptor [|java:text:MessageFormat|] @type virtual;
#L0f7776.   v0:= temp  @type object;
#L0f7778.   return v0  @type object;

   }
    procedure [|void|] [|java:text:MessageFormat.setFormat|] ([|java:text:MessageFormat|] v1 @type (this), [|int|] v2, [|java:text:Format|] v3 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.setFormat:(ILjava/text/Format;)V|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0f778c.   v0:= v1.[|java:text:MessageFormat.formats|]   @type object;
#L0f7790.   v0[v2]:= v3  @type object;
#L0f7794.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat.setFormatByArgumentIndex|] ([|java:text:MessageFormat|] v2 @type (this), [|int|] v3, [|java:text:Format|] v4 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.setFormatByArgumentIndex:(ILjava/text/Format;)V|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0001,L0015));



        v1;
      
#L0f77a8.   v0:= 0  @length 4;
#L0f77aa.   v1:= v2.[|java:text:MessageFormat.maxOffset|] ;
#L0f77ae.   v1:= v1 + 1;
#L0f77b2.   if v0 >= v1 then goto L0f77d0;
#L0f77b6.   v1:= v2.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f77ba.   v1:= v1[v0];
#L0f77be.   if v1 != v3 then goto L0f77ca;
#L0f77c2.   v1:= v2.[|java:text:MessageFormat.formats|]   @type object;
#L0f77c6.   v1[v0]:= v4  @type object;
#L0f77ca.   v0:= v0 + 1;
#L0f77ce.   goto L0f77aa;
#L0f77d0.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat.setFormats|] ([|java:text:MessageFormat|] v4 @type (this), [|java:text:Format|][] v5 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.setFormats:([Ljava/text/Format;)V|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0008,L0014));
        [|int|] v1 @varname [|min|] @scope ((L0003,L0014));


        v2;
        v3;
      
#L0f77e4.   v2:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f77e8.   v1:= v2.length;
#L0f77ea.   v2:= v5.length;
#L0f77ec.   if v2 >= v1 then goto L0f77f2;
#L0f77f0.   v1:= v5.length;
#L0f77f2.   v0:= 0  @length 4;
#L0f77f4.   if v0 >= v1 then goto L0f780a;
#L0f77f8.   v2:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f77fc.   v3:= v5[v0]  @type object;
#L0f7800.   v2[v0]:= v3  @type object;
#L0f7804.   v0:= v0 + 1;
#L0f7808.   goto L0f77f4;
#L0f780a.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat.setFormatsByArgumentIndex|] ([|java:text:MessageFormat|] v4 @type (this), [|java:text:Format|][] v5 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.setFormatsByArgumentIndex:([Ljava/text/Format;)V|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0005,L001d));
        [|int|] v1 @varname [|j|] @scope ((L0001,L001e));


        v2;
        v3;
      
#L0f781c.   v1:= 0  @length 4;
#L0f781e.   v2:= v5.length;
#L0f7820.   if v1 >= v2 then goto L0f7856;
#L0f7824.   v0:= 0  @length 4;
#L0f7826.   v2:= v4.[|java:text:MessageFormat.maxOffset|] ;
#L0f782a.   v2:= v2 + 1;
#L0f782e.   if v0 >= v2 then goto L0f7850;
#L0f7832.   v2:= v4.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f7836.   v2:= v2[v0];
#L0f783a.   if v2 != v1 then goto L0f784a;
#L0f783e.   v2:= v4.[|java:text:MessageFormat.formats|]   @type object;
#L0f7842.   v3:= v5[v1]  @type object;
#L0f7846.   v2[v0]:= v3  @type object;
#L0f784a.   v0:= v0 + 1;
#L0f784e.   goto L0f7826;
#L0f7850.   v1:= v1 + 1;
#L0f7854.   goto L0f781e;
#L0f7856.   return @void ;

   }
    procedure [|void|] [|java:text:MessageFormat.setLocale|] ([|java:text:MessageFormat|] v8 @type (this), [|java:util:Locale|] v9 @type (object)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.setLocale:(Ljava/util/Locale;)V|] @Access PUBLIC {
      local temp ;
        [|java:text:Format|] v0 @varname [|format|] @scope ((L000c,L0016), (L002d,L0037));
        [|java:lang:NullPointerException|] v2 @varname [|npe|] @scope ((L0028,L002d), (L0042,L0047));
        [|int|] v1 @varname [|i|] @scope ((L0004,L0048));


        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0f7868.   v7:= 0  @length 4;
#L0f786a.   v8.[|java:text:MessageFormat.locale|]  := v9 @type object;
#L0f786e.   v1:= 0  @length 4;
#L0f7870.   v3:= v8.[|java:text:MessageFormat.maxOffset|] ;
#L0f7874.   if v1 > v3 then goto L0f78f6;
#L0f7878.   v3:= v8.[|java:text:MessageFormat.formats|]   @type object;
#L0f787c.   v0:= v3[v1]  @type object;
#L0f7880.   v3:= instanceof @varname v0 @type [|java:text:DecimalFormat|];
#L0f7884.   if v3 == 0 then goto L0f78c2;
#L0f7888.   v3:= v8.[|java:text:MessageFormat.formats|]   @type object;
#L0f788c.   v4:= new [|java:text:DecimalFormat|];
#L0f7890.   v0:= ([|java:text:DecimalFormat|])v0;
#L0f7894.   call temp:=  [|java:text:DecimalFormat.toPattern|](v0) @signature [|Ljava/text/DecimalFormat;.toPattern:()Ljava/lang/String;|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f789a.   v5:= temp  @type object;
#L0f789c.   v6:= new [|java:text:DecimalFormatSymbols|];
#L0f78a0.   call temp:=  [|java:text:DecimalFormatSymbols.<init>|](v6, v9) @signature [|Ljava/text/DecimalFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type direct;
#L0f78a6.   call temp:=  [|java:text:DecimalFormat.<init>|](v4, v5, v6) @signature [|Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V|] @classDescriptor [|java:text:DecimalFormat|] @type direct;
#L0f78ac.   v3[v1]:= v4  @type object;
#L0f78b0.   v1:= v1 + 1;
#L0f78b4.   goto L0f7870;
#L0f78b6.   v2:= Exception  @type object;
#L0f78b8.   v3:= v8.[|java:text:MessageFormat.formats|]   @type object;
#L0f78bc.   v3[v1]:= v7  @type object;
#L0f78c0.   goto L0f78b0;
#L0f78c2.   v3:= instanceof @varname v0 @type [|java:text:SimpleDateFormat|];
#L0f78c6.   if v3 == 0 then goto L0f78b0;
#L0f78ca.   v3:= v8.[|java:text:MessageFormat.formats|]   @type object;
#L0f78ce.   v4:= new [|java:text:SimpleDateFormat|];
#L0f78d2.   v0:= ([|java:text:SimpleDateFormat|])v0;
#L0f78d6.   call temp:=  [|java:text:SimpleDateFormat.toPattern|](v0) @signature [|Ljava/text/SimpleDateFormat;.toPattern:()Ljava/lang/String;|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0f78dc.   v5:= temp  @type object;
#L0f78de.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v4, v5, v9) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f78e4.   v3[v1]:= v4  @type object;
#L0f78e8.   goto L0f78b0;
#L0f78ea.   v2:= Exception  @type object;
#L0f78ec.   v3:= v8.[|java:text:MessageFormat.formats|]   @type object;
#L0f78f0.   v3[v1]:= v7  @type object;
#L0f78f4.   goto L0f78b0;
#L0f78f6.   return @void ;
  catch  [|java:lang:NullPointerException|] @[L0f7888..L0f78b0] goto L0f78b6;
  catch  [|java:lang:NullPointerException|] @[L0f78ca..L0f78e8] goto L0f78ea;

   }
    procedure [|java:lang:String|] [|java:text:MessageFormat.toPattern|] ([|java:text:MessageFormat|] v13 @type (this)) @owner [|java:text:MessageFormat|] @signature [|Ljava/text/MessageFormat;.toPattern:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|java:text:Format|] v3 @varname [|format|] @scope ((L0023,L002f), (L005d,L0079));
        [|int|] v5 @varname [|index|] @scope ((L0037,L003d), (L003d,L0041), (L0041,L005c), (L005c,L005d), (L0079,L0083));
        [|char|] v1 @varname [|ch|] @scope ((L0045,L005d), (L0079,L0083));
        [|int|] v2 @varname [|count|] @scope ((L003c,L005d), (L0079,L0083));
        [|int|] v7 @varname [|length|] @scope ((L003b,L005d), (L0079,L0083));
        [|boolean|] v9 @varname [|quote|] @scope ((L0036,L005d), (L0079,L0083));
        [|java:lang:String|] v8 @varname [|pattern|] @scope ((L0024,L0089));
        [|java:lang:StringBuffer|] v0 @varname [|buffer|] @scope ((L0009,L00a2));
        [|int|] v4 @varname [|i|] @scope ((L000a,L00a2));

        v6;
        v10;
        v11;
        v12;
      
#L0f7924.   v12:= 125  @length 16;
#L0f7928.   v11:= 123  @length 16;
#L0f792c.   v0:= new [|java:lang:StringBuffer|];
#L0f7930.   call temp:=  [|java:lang:StringBuffer.<init>|](v0) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f7936.   v4:= 0  @length 4;
#L0f7938.   v10:= v13.[|java:text:MessageFormat.maxOffset|] ;
#L0f793c.   if v4 > v10 then goto L0f7a36;
#L0f7940.   v10:= v13.[|java:text:MessageFormat.strings|]   @type object;
#L0f7944.   v10:= v10[v4]  @type object;
#L0f7948.   call temp:=  [|java:text:MessageFormat.appendQuoted|](v13, v0, v10) @signature [|Ljava/text/MessageFormat;.appendQuoted:(Ljava/lang/StringBuffer;Ljava/lang/String;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f794e.   call temp:=  [|java:lang:StringBuffer.append|](v0, v11) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f7954.   v10:= v13.[|java:text:MessageFormat.argumentNumbers|]   @type object;
#L0f7958.   v10:= v10[v4];
#L0f795c.   call temp:=  [|java:lang:StringBuffer.append|](v0, v10) @signature [|Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f7962.   v10:= v13.[|java:text:MessageFormat.formats|]   @type object;
#L0f7966.   v3:= v10[v4]  @type object;
#L0f796a.   v8:= 0  @length 4;
#L0f796c.   v10:= instanceof @varname v3 @type [|java:text:ChoiceFormat|];
#L0f7970.   if v10 == 0 then goto L0f79de;
#L0f7974.   v10:= ",choice," @type (object, string);
#L0f7978.   call temp:=  [|java:lang:StringBuffer.append|](v0, v10) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f797e.   v3:= ([|java:text:ChoiceFormat|])v3;
#L0f7982.   call temp:=  [|java:text:ChoiceFormat.toPattern|](v3) @signature [|Ljava/text/ChoiceFormat;.toPattern:()Ljava/lang/String;|] @classDescriptor [|java:text:ChoiceFormat|] @type virtual;
#L0f7988.   v8:= temp  @type object;
#L0f798a.   if v8 == 0 then goto L0f7a2a;
#L0f798e.   v9:= 0  @length 4;
#L0f7990.   v5:= 0  @length 4;
#L0f7992.   call temp:=  [|java:lang:String.length|](v8) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f7998.   v7:= temp;
#L0f799a.   v2:= 0  @length 4;
#L0f799c.   v6:= v5;
#L0f799e.   if v6 >= v7 then goto L0f7a2a;
#L0f79a2.   v5:= v6 + 1;
#L0f79a6.   call temp:=  [|java:lang:String.charAt|](v8, v6) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f79ac.   v1:= temp;
#L0f79ae.   v10:= 39  @length 16;
#L0f79b2.   if v1 != v10 then goto L0f79bc;
#L0f79b6.   if v9 != 0 then goto L0f7a16;
#L0f79ba.   v9:= 1  @length 4;
#L0f79bc.   if v9 != 0 then goto L0f79d4;
#L0f79c0.   if v1 != v11 then goto L0f79c8;
#L0f79c4.   v2:= v2 + 1;
#L0f79c8.   if v1 != v12 then goto L0f79d4;
#L0f79cc.   if v2 <= 0 then goto L0f7a1a;
#L0f79d0.   v2:= v2 + -1;
#L0f79d4.   call temp:=  [|java:lang:StringBuffer.append|](v0, v1) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f79da.   v6:= v5;
#L0f79dc.   goto L0f799e;
#L0f79de.   v10:= instanceof @varname v3 @type [|java:text:DecimalFormat|];
#L0f79e2.   if v10 == 0 then goto L0f79f0;
#L0f79e6.   call temp:=  [|java:text:MessageFormat.decodeDecimalFormat|](v13, v0, v3) @signature [|Ljava/text/MessageFormat;.decodeDecimalFormat:(Ljava/lang/StringBuffer;Ljava/text/Format;)Ljava/lang/String;|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f79ec.   v8:= temp  @type object;
#L0f79ee.   goto L0f798a;
#L0f79f0.   v10:= instanceof @varname v3 @type [|java:text:SimpleDateFormat|];
#L0f79f4.   if v10 == 0 then goto L0f7a02;
#L0f79f8.   call temp:=  [|java:text:MessageFormat.decodeSimpleDateFormat|](v13, v0, v3) @signature [|Ljava/text/MessageFormat;.decodeSimpleDateFormat:(Ljava/lang/StringBuffer;Ljava/text/Format;)Ljava/lang/String;|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f79fe.   v8:= temp  @type object;
#L0f7a00.   goto L0f798a;
#L0f7a02.   if v3 == 0 then goto L0f798a;
#L0f7a06.   v10:= new [|java:lang:IllegalArgumentException|];
#L0f7a0a.   v11:= "Unknown format" @type (object, string);
#L0f7a0e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v10, v11) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f7a14.   throw v10;
#L0f7a16.   v9:= 0  @length 4;
#L0f7a18.   goto L0f79bc;
#L0f7a1a.   v10:= "'}" @type (object, string);
#L0f7a1e.   call temp:=  [|java:lang:StringBuffer.append|](v0, v10) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f7a24.   v1:= 39  @length 16;
#L0f7a28.   goto L0f79d4;
#L0f7a2a.   call temp:=  [|java:lang:StringBuffer.append|](v0, v12) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f7a30.   v4:= v4 + 1;
#L0f7a34.   goto L0f7938;
#L0f7a36.   v10:= v13.[|java:text:MessageFormat.maxOffset|] ;
#L0f7a3a.   v10:= v10 + 1;
#L0f7a3e.   v11:= v13.[|java:text:MessageFormat.strings|]   @type object;
#L0f7a42.   v11:= v11.length;
#L0f7a44.   if v10 >= v11 then goto L0f7a5e;
#L0f7a48.   v10:= v13.[|java:text:MessageFormat.strings|]   @type object;
#L0f7a4c.   v11:= v13.[|java:text:MessageFormat.maxOffset|] ;
#L0f7a50.   v11:= v11 + 1;
#L0f7a54.   v10:= v10[v11]  @type object;
#L0f7a58.   call temp:=  [|java:text:MessageFormat.appendQuoted|](v13, v0, v10) @signature [|Ljava/text/MessageFormat;.appendQuoted:(Ljava/lang/StringBuffer;Ljava/lang/String;)V|] @classDescriptor [|java:text:MessageFormat|] @type direct;
#L0f7a5e.   call temp:=  [|java:lang:StringBuffer.toString|](v0) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f7a64.   v10:= temp  @type object;
#L0f7a66.   return v10  @type object;

   }
record [|java:text:Normalizer$Form|]  @type class @AccessFlag PUBLIC_FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:text:Normalizer$Form|][] @@[|java:text:Normalizer$Form.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:text:Normalizer$Form|] @@[|java:text:Normalizer$Form.NFC|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:text:Normalizer$Form|] @@[|java:text:Normalizer$Form.NFD|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:text:Normalizer$Form|] @@[|java:text:Normalizer$Form.NFKC|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:text:Normalizer$Form|] @@[|java:text:Normalizer$Form.NFKD|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:text:Normalizer$Form.<clinit>|] () @owner [|java:text:Normalizer$Form|] @signature [|Ljava/text/Normalizer$Form;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0f7a78.   v5:= 3  @length 4;
#L0f7a7a.   v4:= 2  @length 4;
#L0f7a7c.   v3:= 1  @length 4;
#L0f7a7e.   v2:= 0  @length 4;
#L0f7a80.   v0:= new [|java:text:Normalizer$Form|];
#L0f7a84.   v1:= "NFD" @type (object, string);
#L0f7a88.   call temp:=  [|java:text:Normalizer$Form.<init>|](v0, v1, v2) @signature [|Ljava/text/Normalizer$Form;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:Normalizer$Form|] @type direct;
#L0f7a8e.   @@[|java:text:Normalizer$Form.NFD|] := v0  @type object;
#L0f7a92.   v0:= new [|java:text:Normalizer$Form|];
#L0f7a96.   v1:= "NFC" @type (object, string);
#L0f7a9a.   call temp:=  [|java:text:Normalizer$Form.<init>|](v0, v1, v3) @signature [|Ljava/text/Normalizer$Form;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:Normalizer$Form|] @type direct;
#L0f7aa0.   @@[|java:text:Normalizer$Form.NFC|] := v0  @type object;
#L0f7aa4.   v0:= new [|java:text:Normalizer$Form|];
#L0f7aa8.   v1:= "NFKD" @type (object, string);
#L0f7aac.   call temp:=  [|java:text:Normalizer$Form.<init>|](v0, v1, v4) @signature [|Ljava/text/Normalizer$Form;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:Normalizer$Form|] @type direct;
#L0f7ab2.   @@[|java:text:Normalizer$Form.NFKD|] := v0  @type object;
#L0f7ab6.   v0:= new [|java:text:Normalizer$Form|];
#L0f7aba.   v1:= "NFKC" @type (object, string);
#L0f7abe.   call temp:=  [|java:text:Normalizer$Form.<init>|](v0, v1, v5) @signature [|Ljava/text/Normalizer$Form;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:Normalizer$Form|] @type direct;
#L0f7ac4.   @@[|java:text:Normalizer$Form.NFKC|] := v0  @type object;
#L0f7ac8.   v0:= 4  @length 4;
#L0f7aca.   v0:= new [|java:text:Normalizer$Form|][v0];
#L0f7ace.   v1:= @@[|java:text:Normalizer$Form.NFD|]   @type object;
#L0f7ad2.   v0[v2]:= v1  @type object;
#L0f7ad6.   v1:= @@[|java:text:Normalizer$Form.NFC|]   @type object;
#L0f7ada.   v0[v3]:= v1  @type object;
#L0f7ade.   v1:= @@[|java:text:Normalizer$Form.NFKD|]   @type object;
#L0f7ae2.   v0[v4]:= v1  @type object;
#L0f7ae6.   v1:= @@[|java:text:Normalizer$Form.NFKC|]   @type object;
#L0f7aea.   v0[v5]:= v1  @type object;
#L0f7aee.   @@[|java:text:Normalizer$Form.$VALUES|] := v0  @type object;
#L0f7af2.   return @void ;

   }
    procedure [|void|] [|java:text:Normalizer$Form.<init>|] ([|java:text:Normalizer$Form|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:text:Normalizer$Form|] @signature [|Ljava/text/Normalizer$Form;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;

      
#L0f7b04.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L0f7b0a.   return @void ;

   }
    procedure [|java:text:Normalizer$Form|] [|java:text:Normalizer$Form.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:text:Normalizer$Form|] @signature [|Ljava/text/Normalizer$Form;.valueOf:(Ljava/lang/String;)Ljava/text/Normalizer$Form;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L0f7b1c.   v0:= new [|java:text:Normalizer$Form|];
#L0f7b20.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L0f7b26.   v0:= temp  @type object;
#L0f7b28.   v0:= ([|java:text:Normalizer$Form|])v0;
#L0f7b2c.   return v0  @type object;

   }
    procedure [|java:text:Normalizer$Form|][] [|java:text:Normalizer$Form.values|] () @owner [|java:text:Normalizer$Form|] @signature [|Ljava/text/Normalizer$Form;.values:()[Ljava/text/Normalizer$Form;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L0f7b40.   v0:= @@[|java:text:Normalizer$Form.$VALUES|]   @type object;
#L0f7b44.   call temp:=  [|java:text:Normalizer$Form[].clone|](v0) @signature [|[Ljava/text/Normalizer$Form;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:Normalizer$Form[]|] @type virtual;
#L0f7b4a.   v0:= temp  @type object;
#L0f7b4c.   v0:= ([|java:text:Normalizer$Form|][])v0;
#L0f7b50.   return v0  @type object;

   }
record [|java:text:Normalizer|]  @type class @AccessFlag PUBLIC_FINAL  {
   }
    procedure [|void|] [|java:text:Normalizer.<init>|] ([|java:text:Normalizer|] v0 @type (this)) @owner [|java:text:Normalizer|] @signature [|Ljava/text/Normalizer;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;

      
#L0f7b64.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f7b6a.   return @void ;

   }
    procedure [|boolean|] [|java:text:Normalizer.isNormalized|] ([|java:lang:CharSequence|] v1 @type (object), [|java:text:Normalizer$Form|] v2 @type (object)) @owner [|java:text:Normalizer|] @signature [|Ljava/text/Normalizer;.isNormalized:(Ljava/lang/CharSequence;Ljava/text/Normalizer$Form;)Z|] @Access PUBLIC_STATIC {
      local temp ;


        v0;
      
#L0f7b7c.   call temp:=  [|libcore:icu:NativeNormalizer.isNormalized|](v1, v2) @signature [|Llibcore/icu/NativeNormalizer;.isNormalized:(Ljava/lang/CharSequence;Ljava/text/Normalizer$Form;)Z|] @classDescriptor [|libcore:icu:NativeNormalizer|] @type static;
#L0f7b82.   v0:= temp;
#L0f7b84.   return v0;

   }
    procedure [|java:lang:String|] [|java:text:Normalizer.normalize|] ([|java:lang:CharSequence|] v1 @type (object), [|java:text:Normalizer$Form|] v2 @type (object)) @owner [|java:text:Normalizer|] @signature [|Ljava/text/Normalizer;.normalize:(Ljava/lang/CharSequence;Ljava/text/Normalizer$Form;)Ljava/lang/String;|] @Access PUBLIC_STATIC {
      local temp ;


        v0;
      
#L0f7b98.   call temp:=  [|libcore:icu:NativeNormalizer.normalize|](v1, v2) @signature [|Llibcore/icu/NativeNormalizer;.normalize:(Ljava/lang/CharSequence;Ljava/text/Normalizer$Form;)Ljava/lang/String;|] @classDescriptor [|libcore:icu:NativeNormalizer|] @type static;
#L0f7b9e.   v0:= temp  @type object;
#L0f7ba0.   return v0  @type object;

   }
record [|java:text:NumberFormat$Field|]  @type class @AccessFlag PUBLIC  extends [|java:text:Format$Field|] {
   }
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.CURRENCY|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.DECIMAL_SEPARATOR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.EXPONENT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.EXPONENT_SIGN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.EXPONENT_SYMBOL|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.FRACTION|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.GROUPING_SEPARATOR|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.INTEGER|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.PERCENT|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.PERMILLE|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:text:NumberFormat$Field|] @@[|java:text:NumberFormat$Field.SIGN|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|long|] @@[|java:text:NumberFormat$Field.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:NumberFormat$Field.<clinit>|] () @owner [|java:text:NumberFormat$Field|] @signature [|Ljava/text/NumberFormat$Field;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L0f7bb4.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7bb8.   v1:= "sign" @type (object, string);
#L0f7bbc.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7bc2.   @@[|java:text:NumberFormat$Field.SIGN|] := v0  @type object;
#L0f7bc6.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7bca.   v1:= "integer" @type (object, string);
#L0f7bce.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7bd4.   @@[|java:text:NumberFormat$Field.INTEGER|] := v0  @type object;
#L0f7bd8.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7bdc.   v1:= "fraction" @type (object, string);
#L0f7be0.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7be6.   @@[|java:text:NumberFormat$Field.FRACTION|] := v0  @type object;
#L0f7bea.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7bee.   v1:= "exponent" @type (object, string);
#L0f7bf2.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7bf8.   @@[|java:text:NumberFormat$Field.EXPONENT|] := v0  @type object;
#L0f7bfc.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7c00.   v1:= "exponent sign" @type (object, string);
#L0f7c04.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7c0a.   @@[|java:text:NumberFormat$Field.EXPONENT_SIGN|] := v0  @type object;
#L0f7c0e.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7c12.   v1:= "exponent symbol" @type (object, string);
#L0f7c16.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7c1c.   @@[|java:text:NumberFormat$Field.EXPONENT_SYMBOL|] := v0  @type object;
#L0f7c20.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7c24.   v1:= "decimal separator" @type (object, string);
#L0f7c28.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7c2e.   @@[|java:text:NumberFormat$Field.DECIMAL_SEPARATOR|] := v0  @type object;
#L0f7c32.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7c36.   v1:= "grouping separator" @type (object, string);
#L0f7c3a.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7c40.   @@[|java:text:NumberFormat$Field.GROUPING_SEPARATOR|] := v0  @type object;
#L0f7c44.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7c48.   v1:= "percent" @type (object, string);
#L0f7c4c.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7c52.   @@[|java:text:NumberFormat$Field.PERCENT|] := v0  @type object;
#L0f7c56.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7c5a.   v1:= "per mille" @type (object, string);
#L0f7c5e.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7c64.   @@[|java:text:NumberFormat$Field.PERMILLE|] := v0  @type object;
#L0f7c68.   v0:= new [|java:text:NumberFormat$Field|];
#L0f7c6c.   v1:= "currency" @type (object, string);
#L0f7c70.   call temp:=  [|java:text:NumberFormat$Field.<init>|](v0, v1) @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:NumberFormat$Field|] @type direct;
#L0f7c76.   @@[|java:text:NumberFormat$Field.CURRENCY|] := v0  @type object;
#L0f7c7a.   return @void ;

   }
    procedure [|void|] [|java:text:NumberFormat$Field.<init>|] ([|java:text:NumberFormat$Field|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:text:NumberFormat$Field|] @signature [|Ljava/text/NumberFormat$Field;.<init>:(Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;


      
#L0f7c8c.   call temp:=  [|java:text:Format$Field.<init>|](v0, v1) @signature [|Ljava/text/Format$Field;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:Format$Field|] @type direct;
#L0f7c92.   return @void ;

   }
record [|java:text:ParseException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
      [|int|] [|java:text:ParseException.errorOffset|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|java:text:ParseException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:ParseException.<init>|] ([|java:text:ParseException|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4) @owner [|java:text:ParseException|] @signature [|Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
      
#L0f7ca4.   v0:= new [|java:lang:StringBuilder|];
#L0f7ca8.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f7cae.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7cb4.   v0:= temp  @type object;
#L0f7cb6.   v1:= " (at offset " @type (object, string);
#L0f7cba.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7cc0.   v0:= temp  @type object;
#L0f7cc2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7cc8.   v0:= temp  @type object;
#L0f7cca.   v1:= ")" @type (object, string);
#L0f7cce.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7cd4.   v0:= temp  @type object;
#L0f7cd6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7cdc.   v0:= temp  @type object;
#L0f7cde.   call temp:=  [|java:lang:Exception.<init>|](v2, v0) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L0f7ce4.   v2.[|java:text:ParseException.errorOffset|]  := v4;
#L0f7ce8.   return @void ;

   }
    procedure [|int|] [|java:text:ParseException.getErrorOffset|] ([|java:text:ParseException|] v1 @type (this)) @owner [|java:text:ParseException|] @signature [|Ljava/text/ParseException;.getErrorOffset:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f7cfc.   v0:= v1.[|java:text:ParseException.errorOffset|] ;
#L0f7d00.   return v0;

   }
record [|java:text:ParsePosition|]  @type class @AccessFlag PUBLIC  {
      [|int|] [|java:text:ParsePosition.currentPosition|]    @AccessFlag PRIVATE;
      [|int|] [|java:text:ParsePosition.errorIndex|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:text:ParsePosition.<init>|] ([|java:text:ParsePosition|] v1 @type (this), [|int|] v2) @owner [|java:text:ParsePosition|] @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L0f7d14.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f7d1a.   v0:= -1  @length 4;
#L0f7d1c.   v1.[|java:text:ParsePosition.errorIndex|]  := v0;
#L0f7d20.   v1.[|java:text:ParsePosition.currentPosition|]  := v2;
#L0f7d24.   return @void ;

   }
    procedure [|boolean|] [|java:text:ParsePosition.equals|] ([|java:text:ParsePosition|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:text:ParsePosition|] @signature [|Ljava/text/ParsePosition;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:ParsePosition|] v0 @varname [|pos|] @scope ((L0009,L0017));


        v1;
        v2;
        v3;
      
#L0f7d38.   v1:= 0  @length 4;
#L0f7d3a.   v2:= instanceof @varname v5 @type [|java:text:ParsePosition|];
#L0f7d3e.   if v2 != 0 then goto L0f7d44;
#L0f7d42.   return v1;
#L0f7d44.   v0:= v5  @type object;
#L0f7d46.   v0:= ([|java:text:ParsePosition|])v0;
#L0f7d4a.   v2:= v4.[|java:text:ParsePosition.currentPosition|] ;
#L0f7d4e.   v3:= v0.[|java:text:ParsePosition.currentPosition|] ;
#L0f7d52.   if v2 != v3 then goto L0f7d42;
#L0f7d56.   v2:= v4.[|java:text:ParsePosition.errorIndex|] ;
#L0f7d5a.   v3:= v0.[|java:text:ParsePosition.errorIndex|] ;
#L0f7d5e.   if v2 != v3 then goto L0f7d42;
#L0f7d62.   v1:= 1  @length 4;
#L0f7d64.   goto L0f7d42;

   }
    procedure [|int|] [|java:text:ParsePosition.getErrorIndex|] ([|java:text:ParsePosition|] v1 @type (this)) @owner [|java:text:ParsePosition|] @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f7d78.   v0:= v1.[|java:text:ParsePosition.errorIndex|] ;
#L0f7d7c.   return v0;

   }
    procedure [|int|] [|java:text:ParsePosition.getIndex|] ([|java:text:ParsePosition|] v1 @type (this)) @owner [|java:text:ParsePosition|] @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f7d90.   v0:= v1.[|java:text:ParsePosition.currentPosition|] ;
#L0f7d94.   return v0;

   }
    procedure [|int|] [|java:text:ParsePosition.hashCode|] ([|java:text:ParsePosition|] v2 @type (this)) @owner [|java:text:ParsePosition|] @signature [|Ljava/text/ParsePosition;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f7da8.   v0:= v2.[|java:text:ParsePosition.currentPosition|] ;
#L0f7dac.   v1:= v2.[|java:text:ParsePosition.errorIndex|] ;
#L0f7db0.   v0:= v0 + v1  @type int;
#L0f7db2.   return v0;

   }
    procedure [|void|] [|java:text:ParsePosition.setErrorIndex|] ([|java:text:ParsePosition|] v0 @type (this), [|int|] v1) @owner [|java:text:ParsePosition|] @signature [|Ljava/text/ParsePosition;.setErrorIndex:(I)V|] @Access PUBLIC {
      local temp ;


      
#L0f7dc4.   v0.[|java:text:ParsePosition.errorIndex|]  := v1;
#L0f7dc8.   return @void ;

   }
    procedure [|void|] [|java:text:ParsePosition.setIndex|] ([|java:text:ParsePosition|] v0 @type (this), [|int|] v1) @owner [|java:text:ParsePosition|] @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @Access PUBLIC {
      local temp ;


      
#L0f7ddc.   v0.[|java:text:ParsePosition.currentPosition|]  := v1;
#L0f7de0.   return @void ;

   }
    procedure [|java:lang:String|] [|java:text:ParsePosition.toString|] ([|java:text:ParsePosition|] v2 @type (this)) @owner [|java:text:ParsePosition|] @signature [|Ljava/text/ParsePosition;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f7df4.   v0:= new [|java:lang:StringBuilder|];
#L0f7df8.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f7dfe.   call temp:=  [|java:lang:Object.getClass|](v2) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f7e04.   v1:= temp  @type object;
#L0f7e06.   call temp:=  [|java:lang:Class.getName|](v1) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0f7e0c.   v1:= temp  @type object;
#L0f7e0e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7e14.   v0:= temp  @type object;
#L0f7e16.   v1:= "[index=" @type (object, string);
#L0f7e1a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7e20.   v0:= temp  @type object;
#L0f7e22.   v1:= v2.[|java:text:ParsePosition.currentPosition|] ;
#L0f7e26.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7e2c.   v0:= temp  @type object;
#L0f7e2e.   v1:= ", errorIndex=" @type (object, string);
#L0f7e32.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7e38.   v0:= temp  @type object;
#L0f7e3a.   v1:= v2.[|java:text:ParsePosition.errorIndex|] ;
#L0f7e3e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7e44.   v0:= temp  @type object;
#L0f7e46.   v1:= "]" @type (object, string);
#L0f7e4a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7e50.   v0:= temp  @type object;
#L0f7e52.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7e58.   v0:= temp  @type object;
#L0f7e5a.   return v0  @type object;

   }
record [|java:text:RuleBasedBreakIterator|]  @type class @AccessFlag   extends [|java:text:BreakIterator|] {
   }
    procedure [|void|] [|java:text:RuleBasedBreakIterator.<init>|] ([|java:text:RuleBasedBreakIterator|] v0 @type (this), [|libcore:icu:NativeBreakIterator|] v1 @type (object)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.<init>:(Llibcore/icu/NativeBreakIterator;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L0f7e6c.   call temp:=  [|java:text:BreakIterator.<init>|](v0, v1) @signature [|Ljava/text/BreakIterator;.<init>:(Llibcore/icu/NativeBreakIterator;)V|] @classDescriptor [|java:text:BreakIterator|] @type direct;
#L0f7e72.   return @void ;

   }
    procedure [|void|] [|java:text:RuleBasedBreakIterator.checkOffset|] ([|java:text:RuleBasedBreakIterator|] v4 @type (this), [|int|] v5) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.checkOffset:(I)V|] @Access PRIVATE {
      local temp ;
        [|java:lang:String|] v1 @varname [|message|] @scope ((L004d,L0053));
        [|java:text:CharacterIterator|] v0 @varname [|it|] @scope ((L0016,L0054));


        v2;
        v3;
      
#L0f7e84.   v2:= v4.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f7e88.   call temp:=  [|libcore:icu:NativeBreakIterator.hasText|](v2) @signature [|Llibcore/icu/NativeBreakIterator;.hasText:()Z|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f7e8e.   v2:= temp;
#L0f7e90.   if v2 != 0 then goto L0f7ea4;
#L0f7e94.   v2:= new [|java:lang:IllegalArgumentException|];
#L0f7e98.   v3:= "BreakIterator has no text" @type (object, string);
#L0f7e9c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f7ea2.   throw v2;
#L0f7ea4.   v2:= v4.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f7ea8.   call temp:=  [|libcore:icu:NativeBreakIterator.getText|](v2) @signature [|Llibcore/icu/NativeBreakIterator;.getText:()Ljava/text/CharacterIterator;|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f7eae.   v0:= temp  @type object;
#L0f7eb0.   call temp:=  [|java:text:CharacterIterator.getBeginIndex|](v0) @signature [|Ljava/text/CharacterIterator;.getBeginIndex:()I|] @classDescriptor [|java:text:CharacterIterator|] @type interface;
#L0f7eb6.   v2:= temp;
#L0f7eb8.   if v5 < v2 then goto L0f7ec8;
#L0f7ebc.   call temp:=  [|java:text:CharacterIterator.getEndIndex|](v0) @signature [|Ljava/text/CharacterIterator;.getEndIndex:()I|] @classDescriptor [|java:text:CharacterIterator|] @type interface;
#L0f7ec2.   v2:= temp;
#L0f7ec4.   if v5 <= v2 then goto L0f7f2a;
#L0f7ec8.   v2:= new [|java:lang:StringBuilder|];
#L0f7ecc.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f7ed2.   v3:= "Valid range is [" @type (object, string);
#L0f7ed6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7edc.   v2:= temp  @type object;
#L0f7ede.   call temp:=  [|java:text:CharacterIterator.getBeginIndex|](v0) @signature [|Ljava/text/CharacterIterator;.getBeginIndex:()I|] @classDescriptor [|java:text:CharacterIterator|] @type interface;
#L0f7ee4.   v3:= temp;
#L0f7ee6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7eec.   v2:= temp  @type object;
#L0f7eee.   v3:= " " @type (object, string);
#L0f7ef2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7ef8.   v2:= temp  @type object;
#L0f7efa.   call temp:=  [|java:text:CharacterIterator.getEndIndex|](v0) @signature [|Ljava/text/CharacterIterator;.getEndIndex:()I|] @classDescriptor [|java:text:CharacterIterator|] @type interface;
#L0f7f00.   v3:= temp;
#L0f7f02.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7f08.   v2:= temp  @type object;
#L0f7f0a.   v3:= "]" @type (object, string);
#L0f7f0e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7f14.   v2:= temp  @type object;
#L0f7f16.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f7f1c.   v1:= temp  @type object;
#L0f7f1e.   v2:= new [|java:lang:IllegalArgumentException|];
#L0f7f22.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f7f28.   throw v2;
#L0f7f2a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:text:RuleBasedBreakIterator.clone|] ([|java:text:RuleBasedBreakIterator|] v2 @type (this)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:RuleBasedBreakIterator|] v0 @varname [|cloned|] @scope ((L0006,L0011));

        v1;
      
#L0f7f3c.   call temp:=  [|java:text:BreakIterator.clone|](v2) @signature [|Ljava/text/BreakIterator;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:BreakIterator|] @type super;
#L0f7f42.   v0:= temp  @type object;
#L0f7f44.   v0:= ([|java:text:RuleBasedBreakIterator|])v0;
#L0f7f48.   v1:= v2.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f7f4c.   call temp:=  [|libcore:icu:NativeBreakIterator.clone|](v1) @signature [|Llibcore/icu/NativeBreakIterator;.clone:()Ljava/lang/Object;|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f7f52.   v1:= temp  @type object;
#L0f7f54.   v1:= ([|libcore:icu:NativeBreakIterator|])v1;
#L0f7f58.   v0.[|java:text:RuleBasedBreakIterator.wrapped|]  := v1 @type object;
#L0f7f5c.   return v0  @type object;

   }
    procedure [|int|] [|java:text:RuleBasedBreakIterator.current|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.current:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f7f70.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f7f74.   call temp:=  [|libcore:icu:NativeBreakIterator.current|](v0) @signature [|Llibcore/icu/NativeBreakIterator;.current:()I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f7f7a.   v0:= temp;
#L0f7f7c.   return v0;

   }
    procedure [|boolean|] [|java:text:RuleBasedBreakIterator.equals|] ([|java:text:RuleBasedBreakIterator|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L0f7f90.   v0:= instanceof @varname v3 @type [|java:text:RuleBasedBreakIterator|];
#L0f7f94.   if v0 != 0 then goto L0f7f9c;
#L0f7f98.   v0:= 0  @length 4;
#L0f7f9a.   return v0;
#L0f7f9c.   v0:= v2.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f7fa0.   v3:= ([|java:text:RuleBasedBreakIterator|])v3;
#L0f7fa4.   v1:= v3.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f7fa8.   call temp:=  [|libcore:icu:NativeBreakIterator.equals|](v0, v1) @signature [|Llibcore/icu/NativeBreakIterator;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f7fae.   v0:= temp;
#L0f7fb0.   goto L0f7f9a;

   }
    procedure [|int|] [|java:text:RuleBasedBreakIterator.first|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.first:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f7fc4.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f7fc8.   call temp:=  [|libcore:icu:NativeBreakIterator.first|](v0) @signature [|Llibcore/icu/NativeBreakIterator;.first:()I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f7fce.   v0:= temp;
#L0f7fd0.   return v0;

   }
    procedure [|int|] [|java:text:RuleBasedBreakIterator.following|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this), [|int|] v2) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.following:(I)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f7fe4.   call temp:=  [|java:text:RuleBasedBreakIterator.checkOffset|](v1, v2) @signature [|Ljava/text/RuleBasedBreakIterator;.checkOffset:(I)V|] @classDescriptor [|java:text:RuleBasedBreakIterator|] @type direct;
#L0f7fea.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f7fee.   call temp:=  [|libcore:icu:NativeBreakIterator.following|](v0, v2) @signature [|Llibcore/icu/NativeBreakIterator;.following:(I)I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f7ff4.   v0:= temp;
#L0f7ff6.   return v0;

   }
    procedure [|java:text:CharacterIterator|] [|java:text:RuleBasedBreakIterator.getText|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.getText:()Ljava/text/CharacterIterator;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f8008.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f800c.   call temp:=  [|libcore:icu:NativeBreakIterator.getText|](v0) @signature [|Llibcore/icu/NativeBreakIterator;.getText:()Ljava/text/CharacterIterator;|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f8012.   v0:= temp  @type object;
#L0f8014.   return v0  @type object;

   }
    procedure [|int|] [|java:text:RuleBasedBreakIterator.hashCode|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f8028.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f802c.   call temp:=  [|libcore:icu:NativeBreakIterator.hashCode|](v0) @signature [|Llibcore/icu/NativeBreakIterator;.hashCode:()I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f8032.   v0:= temp;
#L0f8034.   return v0;

   }
    procedure [|boolean|] [|java:text:RuleBasedBreakIterator.isBoundary|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this), [|int|] v2) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.isBoundary:(I)Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f8048.   call temp:=  [|java:text:RuleBasedBreakIterator.checkOffset|](v1, v2) @signature [|Ljava/text/RuleBasedBreakIterator;.checkOffset:(I)V|] @classDescriptor [|java:text:RuleBasedBreakIterator|] @type direct;
#L0f804e.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f8052.   call temp:=  [|libcore:icu:NativeBreakIterator.isBoundary|](v0, v2) @signature [|Llibcore/icu/NativeBreakIterator;.isBoundary:(I)Z|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f8058.   v0:= temp;
#L0f805a.   return v0;

   }
    procedure [|int|] [|java:text:RuleBasedBreakIterator.last|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.last:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f806c.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f8070.   call temp:=  [|libcore:icu:NativeBreakIterator.last|](v0) @signature [|Llibcore/icu/NativeBreakIterator;.last:()I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f8076.   v0:= temp;
#L0f8078.   return v0;

   }
    procedure [|int|] [|java:text:RuleBasedBreakIterator.next|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.next:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f808c.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f8090.   call temp:=  [|libcore:icu:NativeBreakIterator.next|](v0) @signature [|Llibcore/icu/NativeBreakIterator;.next:()I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f8096.   v0:= temp;
#L0f8098.   return v0;

   }
    procedure [|int|] [|java:text:RuleBasedBreakIterator.next|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this), [|int|] v2) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.next:(I)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f80ac.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f80b0.   call temp:=  [|libcore:icu:NativeBreakIterator.next|](v0, v2) @signature [|Llibcore/icu/NativeBreakIterator;.next:(I)I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f80b6.   v0:= temp;
#L0f80b8.   return v0;

   }
    procedure [|int|] [|java:text:RuleBasedBreakIterator.preceding|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this), [|int|] v2) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.preceding:(I)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f80cc.   call temp:=  [|java:text:RuleBasedBreakIterator.checkOffset|](v1, v2) @signature [|Ljava/text/RuleBasedBreakIterator;.checkOffset:(I)V|] @classDescriptor [|java:text:RuleBasedBreakIterator|] @type direct;
#L0f80d2.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f80d6.   call temp:=  [|libcore:icu:NativeBreakIterator.preceding|](v0, v2) @signature [|Llibcore/icu/NativeBreakIterator;.preceding:(I)I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f80dc.   v0:= temp;
#L0f80de.   return v0;

   }
    procedure [|int|] [|java:text:RuleBasedBreakIterator.previous|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.previous:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f80f0.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f80f4.   call temp:=  [|libcore:icu:NativeBreakIterator.previous|](v0) @signature [|Llibcore/icu/NativeBreakIterator;.previous:()I|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f80fa.   v0:= temp;
#L0f80fc.   return v0;

   }
    procedure [|void|] [|java:text:RuleBasedBreakIterator.setText|] ([|java:text:RuleBasedBreakIterator|] v2 @type (this), [|java:text:CharacterIterator|] v3 @type (object)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.setText:(Ljava/text/CharacterIterator;)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f8110.   if v3 != 0 then goto L0f8124;
#L0f8114.   v0:= new [|java:lang:NullPointerException|];
#L0f8118.   v1:= "newText == null" @type (object, string);
#L0f811c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f8122.   throw v0;
#L0f8124.   call temp:=  [|java:text:CharacterIterator.current|](v3) @signature [|Ljava/text/CharacterIterator;.current:()C|] @classDescriptor [|java:text:CharacterIterator|] @type interface;
#L0f812a.   v0:= v2.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f812e.   call temp:=  [|libcore:icu:NativeBreakIterator.setText|](v0, v3) @signature [|Llibcore/icu/NativeBreakIterator;.setText:(Ljava/text/CharacterIterator;)V|] @classDescriptor [|libcore:icu:NativeBreakIterator|] @type virtual;
#L0f8134.   return @void ;

   }
    procedure [|java:lang:String|] [|java:text:RuleBasedBreakIterator.toString|] ([|java:text:RuleBasedBreakIterator|] v1 @type (this)) @owner [|java:text:RuleBasedBreakIterator|] @signature [|Ljava/text/RuleBasedBreakIterator;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f8148.   v0:= v1.[|java:text:RuleBasedBreakIterator.wrapped|]   @type object;
#L0f814c.   call temp:=  [|java:lang:Object.toString|](v0) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0f8152.   v0:= temp  @type object;
#L0f8154.   return v0  @type object;

   }
record [|java:text:RuleBasedCollator|]  @type class @AccessFlag PUBLIC  extends [|java:text:Collator|] {
   }
    procedure [|void|] [|java:text:RuleBasedCollator.<init>|] ([|java:text:RuleBasedCollator|] v4 @type (this), [|java:lang:String|] v5 @type (object)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0025,L002b), (L002c,L0037));


        v1;
        v2;
        v3;
      
#L0f8168.   call temp:=  [|java:text:Collator.<init>|](v4) @signature [|Ljava/text/Collator;.<init>:()V|] @classDescriptor [|java:text:Collator|] @type direct;
#L0f816e.   if v5 != 0 then goto L0f8182;
#L0f8172.   v1:= new [|java:lang:NullPointerException|];
#L0f8176.   v2:= "rules == null" @type (object, string);
#L0f817a.   call temp:=  [|java:lang:NullPointerException.<init>|](v1, v2) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f8180.   throw v1;
#L0f8182.   call temp:=  [|java:lang:String.isEmpty|](v5) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8188.   v1:= temp;
#L0f818a.   if v1 == 0 then goto L0f81a0;
#L0f818e.   v1:= new [|java:text:ParseException|];
#L0f8192.   v2:= "empty rules" @type (object, string);
#L0f8196.   v3:= 0  @length 4;
#L0f8198.   call temp:=  [|java:text:ParseException.<init>|](v1, v2, v3) @signature [|Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:ParseException|] @type direct;
#L0f819e.   throw v1;
#L0f81a0.   v1:= new [|libcore:icu:RuleBasedCollatorICU|];
#L0f81a4.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.<init>|](v1, v5) @signature [|Llibcore/icu/RuleBasedCollatorICU;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type direct;
#L0f81aa.   v4.[|java:text:RuleBasedCollator.icuColl|]  := v1 @type object;
#L0f81ae.   return @void ;
#L0f81b0.   v0:= Exception  @type object;
#L0f81b2.   v1:= instanceof @varname v0 @type [|java:text:ParseException|];
#L0f81b6.   if v1 == 0 then goto L0f81c0;
#L0f81ba.   v0:= ([|java:text:ParseException|])v0;
#L0f81be.   throw v0;
#L0f81c0.   v1:= new [|java:text:ParseException|];
#L0f81c4.   call temp:=  [|java:lang:Exception.getMessage|](v0) @signature [|Ljava/lang/Exception;.getMessage:()Ljava/lang/String;|] @classDescriptor [|java:lang:Exception|] @type virtual;
#L0f81ca.   v2:= temp  @type object;
#L0f81cc.   v3:= -1  @length 4;
#L0f81ce.   call temp:=  [|java:text:ParseException.<init>|](v1, v2, v3) @signature [|Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:text:ParseException|] @type direct;
#L0f81d4.   throw v1;
  catch  [|java:lang:Exception|] @[L0f81a0..L0f81ae] goto L0f81b0;

   }
    procedure [|void|] [|java:text:RuleBasedCollator.<init>|] ([|java:text:RuleBasedCollator|] v0 @type (this), [|libcore:icu:RuleBasedCollatorICU|] v1 @type (object)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.<init>:(Llibcore/icu/RuleBasedCollatorICU;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L0f81f8.   call temp:=  [|java:text:Collator.<init>|](v0, v1) @signature [|Ljava/text/Collator;.<init>:(Llibcore/icu/RuleBasedCollatorICU;)V|] @classDescriptor [|java:text:Collator|] @type direct;
#L0f81fe.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:text:RuleBasedCollator.clone|] ([|java:text:RuleBasedCollator|] v1 @type (this)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:RuleBasedCollator|] v0 @varname [|clone|] @scope ((L0006,L0007));

      
#L0f8210.   call temp:=  [|java:text:Collator.clone|](v1) @signature [|Ljava/text/Collator;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:Collator|] @type super;
#L0f8216.   v0:= temp  @type object;
#L0f8218.   v0:= ([|java:text:RuleBasedCollator|])v0;
#L0f821c.   return v0  @type object;

   }
    procedure [|int|] [|java:text:RuleBasedCollator.compare|] ([|java:text:RuleBasedCollator|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|java:lang:String|] v4 @type (object)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.compare:(Ljava/lang/String;Ljava/lang/String;)I|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L0f8230.   if v3 != 0 then goto L0f8244;
#L0f8234.   v0:= new [|java:lang:NullPointerException|];
#L0f8238.   v1:= "source == null" @type (object, string);
#L0f823c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f8242.   throw v0;
#L0f8244.   if v4 != 0 then goto L0f8258;
#L0f8248.   v0:= new [|java:lang:NullPointerException|];
#L0f824c.   v1:= "target == null" @type (object, string);
#L0f8250.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f8256.   throw v0;
#L0f8258.   v0:= v2.[|java:text:RuleBasedCollator.icuColl|]   @type object;
#L0f825c.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.compare|](v0, v3, v4) @signature [|Llibcore/icu/RuleBasedCollatorICU;.compare:(Ljava/lang/String;Ljava/lang/String;)I|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f8262.   v0:= temp;
#L0f8264.   return v0;

   }
    procedure [|boolean|] [|java:text:RuleBasedCollator.equals|] ([|java:text:RuleBasedCollator|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f8278.   v0:= instanceof @varname v2 @type [|java:text:Collator|];
#L0f827c.   if v0 != 0 then goto L0f8284;
#L0f8280.   v0:= 0  @length 4;
#L0f8282.   return v0;
#L0f8284.   call temp:=  [|java:text:Collator.equals|](v1, v2) @signature [|Ljava/text/Collator;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:text:Collator|] @type super;
#L0f828a.   v0:= temp;
#L0f828c.   goto L0f8282;

   }
    procedure [|java:text:CollationElementIterator|] [|java:text:RuleBasedCollator.getCollationElementIterator|] ([|java:text:RuleBasedCollator|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.getCollationElementIterator:(Ljava/lang/String;)Ljava/text/CollationElementIterator;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f82a0.   if v3 != 0 then goto L0f82b4;
#L0f82a4.   v0:= new [|java:lang:NullPointerException|];
#L0f82a8.   v1:= "source == null" @type (object, string);
#L0f82ac.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f82b2.   throw v0;
#L0f82b4.   v0:= new [|java:text:CollationElementIterator|];
#L0f82b8.   v1:= v2.[|java:text:RuleBasedCollator.icuColl|]   @type object;
#L0f82bc.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.getCollationElementIterator|](v1, v3) @signature [|Llibcore/icu/RuleBasedCollatorICU;.getCollationElementIterator:(Ljava/lang/String;)Llibcore/icu/CollationElementIteratorICU;|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f82c2.   v1:= temp  @type object;
#L0f82c4.   call temp:=  [|java:text:CollationElementIterator.<init>|](v0, v1) @signature [|Ljava/text/CollationElementIterator;.<init>:(Llibcore/icu/CollationElementIteratorICU;)V|] @classDescriptor [|java:text:CollationElementIterator|] @type direct;
#L0f82ca.   return v0  @type object;

   }
    procedure [|java:text:CollationElementIterator|] [|java:text:RuleBasedCollator.getCollationElementIterator|] ([|java:text:RuleBasedCollator|] v2 @type (this), [|java:text:CharacterIterator|] v3 @type (object)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.getCollationElementIterator:(Ljava/text/CharacterIterator;)Ljava/text/CollationElementIterator;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0f82dc.   if v3 != 0 then goto L0f82f0;
#L0f82e0.   v0:= new [|java:lang:NullPointerException|];
#L0f82e4.   v1:= "source == null" @type (object, string);
#L0f82e8.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f82ee.   throw v0;
#L0f82f0.   v0:= new [|java:text:CollationElementIterator|];
#L0f82f4.   v1:= v2.[|java:text:RuleBasedCollator.icuColl|]   @type object;
#L0f82f8.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.getCollationElementIterator|](v1, v3) @signature [|Llibcore/icu/RuleBasedCollatorICU;.getCollationElementIterator:(Ljava/text/CharacterIterator;)Llibcore/icu/CollationElementIteratorICU;|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f82fe.   v1:= temp  @type object;
#L0f8300.   call temp:=  [|java:text:CollationElementIterator.<init>|](v0, v1) @signature [|Ljava/text/CollationElementIterator;.<init>:(Llibcore/icu/CollationElementIteratorICU;)V|] @classDescriptor [|java:text:CollationElementIterator|] @type direct;
#L0f8306.   return v0  @type object;

   }
    procedure [|java:text:CollationKey|] [|java:text:RuleBasedCollator.getCollationKey|] ([|java:text:RuleBasedCollator|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.getCollationKey:(Ljava/lang/String;)Ljava/text/CollationKey;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f8318.   v0:= v1.[|java:text:RuleBasedCollator.icuColl|]   @type object;
#L0f831c.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.getCollationKey|](v0, v2) @signature [|Llibcore/icu/RuleBasedCollatorICU;.getCollationKey:(Ljava/lang/String;)Ljava/text/CollationKey;|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f8322.   v0:= temp  @type object;
#L0f8324.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:RuleBasedCollator.getRules|] ([|java:text:RuleBasedCollator|] v1 @type (this)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.getRules:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f8338.   v0:= v1.[|java:text:RuleBasedCollator.icuColl|]   @type object;
#L0f833c.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.getRules|](v0) @signature [|Llibcore/icu/RuleBasedCollatorICU;.getRules:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f8342.   v0:= temp  @type object;
#L0f8344.   return v0  @type object;

   }
    procedure [|int|] [|java:text:RuleBasedCollator.hashCode|] ([|java:text:RuleBasedCollator|] v1 @type (this)) @owner [|java:text:RuleBasedCollator|] @signature [|Ljava/text/RuleBasedCollator;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f8358.   v0:= v1.[|java:text:RuleBasedCollator.icuColl|]   @type object;
#L0f835c.   call temp:=  [|libcore:icu:RuleBasedCollatorICU.getRules|](v0) @signature [|Llibcore/icu/RuleBasedCollatorICU;.getRules:()Ljava/lang/String;|] @classDescriptor [|libcore:icu:RuleBasedCollatorICU|] @type virtual;
#L0f8362.   v0:= temp  @type object;
#L0f8364.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f836a.   v0:= temp;
#L0f836c.   return v0;

   }
record [|java:text:SimpleDateFormat|]  @type class @AccessFlag PUBLIC  extends [|java:text:DateFormat|] {
      [|int|] [|java:text:SimpleDateFormat.creationYear|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:Date|] [|java:text:SimpleDateFormat.defaultCenturyStart|]    @AccessFlag PRIVATE;
      [|java:text:DateFormatSymbols|] [|java:text:SimpleDateFormat.formatData|]    @AccessFlag PRIVATE;
      [|java:lang:String|] [|java:text:SimpleDateFormat.pattern|]    @AccessFlag PRIVATE;
   }
      global [|java:lang:String|] @@[|java:text:SimpleDateFormat.PATTERN_CHARS|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:text:SimpleDateFormat.RFC_822_TIMEZONE_FIELD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:text:SimpleDateFormat.STAND_ALONE_DAY_OF_WEEK_FIELD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:text:SimpleDateFormat.STAND_ALONE_MONTH_FIELD|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:io:ObjectStreamField|][] @@[|java:text:SimpleDateFormat.serialPersistentFields|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:text:SimpleDateFormat.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:text:SimpleDateFormat.<clinit>|] () @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0f8380.   v0:= 4  @length 4;
#L0f8382.   v0:= new [|java:io:ObjectStreamField|][v0];
#L0f8386.   v1:= 0  @length 4;
#L0f8388.   v2:= new [|java:io:ObjectStreamField|];
#L0f838c.   v3:= "defaultCenturyStart" @type (object, string);
#L0f8390.   v4:= new [|java:util:Date|];
#L0f8394.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f839a.   v0[v1]:= v2  @type object;
#L0f839e.   v1:= 1  @length 4;
#L0f83a0.   v2:= new [|java:io:ObjectStreamField|];
#L0f83a4.   v3:= "formatData" @type (object, string);
#L0f83a8.   v4:= new [|java:text:DateFormatSymbols|];
#L0f83ac.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f83b2.   v0[v1]:= v2  @type object;
#L0f83b6.   v1:= 2  @length 4;
#L0f83b8.   v2:= new [|java:io:ObjectStreamField|];
#L0f83bc.   v3:= "pattern" @type (object, string);
#L0f83c0.   v4:= new [|java:lang:String|];
#L0f83c4.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f83ca.   v0[v1]:= v2  @type object;
#L0f83ce.   v1:= 3  @length 4;
#L0f83d0.   v2:= new [|java:io:ObjectStreamField|];
#L0f83d4.   v3:= "serialVersionOnStream" @type (object, string);
#L0f83d8.   v4:= @@[|java:lang:Integer.TYPE|]   @type object;
#L0f83dc.   call temp:=  [|java:io:ObjectStreamField.<init>|](v2, v3, v4) @signature [|Ljava/io/ObjectStreamField;.<init>:(Ljava/lang/String;Ljava/lang/Class;)V|] @classDescriptor [|java:io:ObjectStreamField|] @type direct;
#L0f83e2.   v0[v1]:= v2  @type object;
#L0f83e6.   @@[|java:text:SimpleDateFormat.serialPersistentFields|] := v0  @type object;
#L0f83ea.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.<init>|] ([|java:text:SimpleDateFormat|] v2 @type (this)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        v0;
        v1;
      
#L0f83fc.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f8402.   v0:= temp  @type object;
#L0f8404.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v2, v0) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f840a.   call temp:=  [|java:text:SimpleDateFormat.defaultPattern|]() @signature [|Ljava/text/SimpleDateFormat;.defaultPattern:()Ljava/lang/String;|] @classDescriptor [|java:text:SimpleDateFormat|] @type static;
#L0f8410.   v0:= temp  @type object;
#L0f8412.   v2.[|java:text:SimpleDateFormat.pattern|]  := v0 @type object;
#L0f8416.   v0:= new [|java:text:DateFormatSymbols|];
#L0f841a.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f8420.   v1:= temp  @type object;
#L0f8422.   call temp:=  [|java:text:DateFormatSymbols.<init>|](v0, v1) @signature [|Ljava/text/DateFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DateFormatSymbols|] @type direct;
#L0f8428.   v2.[|java:text:SimpleDateFormat.formatData|]  := v0 @type object;
#L0f842c.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.<init>|] ([|java:text:SimpleDateFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L0f8440.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f8446.   v0:= temp  @type object;
#L0f8448.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v1, v2, v0) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f844e.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.<init>|] ([|java:text:SimpleDateFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:text:DateFormatSymbols|] v3 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/text/DateFormatSymbols;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0f8460.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f8466.   v0:= temp  @type object;
#L0f8468.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v1, v0) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f846e.   call temp:=  [|java:text:SimpleDateFormat.validatePattern|](v1, v2) @signature [|Ljava/text/SimpleDateFormat;.validatePattern:(Ljava/lang/String;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8474.   v1.[|java:text:SimpleDateFormat.pattern|]  := v2 @type object;
#L0f8478.   call temp:=  [|java:text:DateFormatSymbols.clone|](v3) @signature [|Ljava/text/DateFormatSymbols;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f847e.   v0:= temp  @type object;
#L0f8480.   v0:= ([|java:text:DateFormatSymbols|])v0;
#L0f8484.   v1.[|java:text:SimpleDateFormat.formatData|]  := v0 @type object;
#L0f8488.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.<init>|] ([|java:text:SimpleDateFormat|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|java:util:Locale|] v3 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0f849c.   call temp:=  [|java:text:SimpleDateFormat.<init>|](v1, v3) @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f84a2.   call temp:=  [|java:text:SimpleDateFormat.validatePattern|](v1, v2) @signature [|Ljava/text/SimpleDateFormat;.validatePattern:(Ljava/lang/String;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f84a8.   v1.[|java:text:SimpleDateFormat.pattern|]  := v2 @type object;
#L0f84ac.   v0:= new [|java:text:DateFormatSymbols|];
#L0f84b0.   call temp:=  [|java:text:DateFormatSymbols.<init>|](v0, v3) @signature [|Ljava/text/DateFormatSymbols;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:text:DateFormatSymbols|] @type direct;
#L0f84b6.   v1.[|java:text:SimpleDateFormat.formatData|]  := v0 @type object;
#L0f84ba.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.<init>|] ([|java:text:SimpleDateFormat|] v3 @type (this), [|java:util:Locale|] v4 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.<init>:(Ljava/util/Locale;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
        v2;
      
#L0f84cc.   v2:= 1  @length 4;
#L0f84ce.   call temp:=  [|java:text:DateFormat.<init>|](v3) @signature [|Ljava/text/DateFormat;.<init>:()V|] @classDescriptor [|java:text:DateFormat|] @type direct;
#L0f84d4.   call temp:=  [|java:text:NumberFormat.getInstance|](v4) @signature [|Ljava/text/NumberFormat;.getInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @classDescriptor [|java:text:NumberFormat|] @type static;
#L0f84da.   v0:= temp  @type object;
#L0f84dc.   v3.[|java:text:SimpleDateFormat.numberFormat|]  := v0 @type object;
#L0f84e0.   v0:= v3.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f84e4.   call temp:=  [|java:text:NumberFormat.setParseIntegerOnly|](v0, v2) @signature [|Ljava/text/NumberFormat;.setParseIntegerOnly:(Z)V|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f84ea.   v0:= v3.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f84ee.   v1:= 0  @length 4;
#L0f84f0.   call temp:=  [|java:text:NumberFormat.setGroupingUsed|](v0, v1) @signature [|Ljava/text/NumberFormat;.setGroupingUsed:(Z)V|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f84f6.   v0:= new [|java:util:GregorianCalendar|];
#L0f84fa.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0, v4) @signature [|Ljava/util/GregorianCalendar;.<init>:(Ljava/util/Locale;)V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0f8500.   v3.[|java:text:SimpleDateFormat.calendar|]  := v0 @type object;
#L0f8504.   v0:= v3.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8508.   v1:= -80  @length 16;
#L0f850c.   call temp:=  [|java:util:Calendar.add|](v0, v2, v1) @signature [|Ljava/util/Calendar;.add:(II)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8512.   v0:= v3.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8516.   call temp:=  [|java:util:Calendar.get|](v0, v2) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f851c.   v0:= temp;
#L0f851e.   v3.[|java:text:SimpleDateFormat.creationYear|]  := v0;
#L0f8522.   v0:= v3.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8526.   call temp:=  [|java:util:Calendar.getTime|](v0) @signature [|Ljava/util/Calendar;.getTime:()Ljava/util/Date;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f852c.   v0:= temp  @type object;
#L0f852e.   v3.[|java:text:SimpleDateFormat.defaultCenturyStart|]  := v0 @type object;
#L0f8532.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.append|] ([|java:text:SimpleDateFormat|] v10 @type (this), [|java:lang:StringBuffer|] v11 @type (object), [|java:text:FieldPosition|] v12 @type (object), [|java:util:List|] v13 @type (object), [|char|] v14, [|int|] v15) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.append:(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;CI)V|] @Access PRIVATE {
      local temp ;

        [|int|] v6 @varname [|year|] @scope ((L006e,L007c));
        [|int|] v3 @varname [|hour|] @scope ((L00a6,L00aa), (L0121,L0125));
        [|int|] v5 @varname [|value|] @scope ((L00ca,L00cf));
        [|int|] v0 @varname [|beginPosition|] @scope ((L002d,L0192));
        [|java:text:DateFormat$Field|] v1 @varname [|dateFormatField|] @scope ((L002e,L0192));
        [|int|] v2 @varname [|field|] @scope ((L0001,L0192));
        [|int|] v4 @varname [|index|] @scope ((L0007,L0192));






        v7;
        v8;
        v9;
      
#L0f8544.   v2:= -1  @length 4;
#L0f8546.   v7:= "GyMdkHmsSEDFwWahKzZLc" @type (object, string);
#L0f854a.   call temp:=  [|java:lang:String.indexOf|](v7, v14) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8550.   v4:= temp;
#L0f8552.   v7:= -1  @length 4;
#L0f8554.   if v4 != v7 then goto L0f8596;
#L0f8558.   v7:= new [|java:lang:IllegalArgumentException|];
#L0f855c.   v8:= new [|java:lang:StringBuilder|];
#L0f8560.   call temp:=  [|java:lang:StringBuilder.<init>|](v8) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f8566.   v9:= "Unknown pattern character '" @type (object, string);
#L0f856a.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8570.   v8:= temp  @type object;
#L0f8572.   call temp:=  [|java:lang:StringBuilder.append|](v8, v14) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8578.   v8:= temp  @type object;
#L0f857a.   v9:= "'" @type (object, string);
#L0f857e.   call temp:=  [|java:lang:StringBuilder.append|](v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8584.   v8:= temp  @type object;
#L0f8586.   call temp:=  [|java:lang:StringBuilder.toString|](v8) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f858c.   v8:= temp  @type object;
#L0f858e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v7, v8) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f8594.   throw v7;
#L0f8596.   call temp:=  [|java:lang:StringBuffer.length|](v11) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f859c.   v0:= temp;
#L0f859e.   v1:= 0  @length 4;
#L0f85a0.   goto L0f880c;
#L0f85a6.   v7:= -1  @length 4;
#L0f85a8.   if v2 == v7 then goto L0f85be;
#L0f85ac.   v7:= v10.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f85b0.   call temp:=  [|java:util:Calendar.get|](v7, v2) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f85b6.   v7:= temp;
#L0f85b8.   call temp:=  [|java:text:SimpleDateFormat.appendNumber|](v10, v11, v15, v7) @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f85be.   if v13 == 0 then goto L0f87c4;
#L0f85c2.   v12:= new [|java:text:FieldPosition|];
#L0f85c6.   call temp:=  [|java:text:FieldPosition.<init>|](v12, v1) @signature [|Ljava/text/FieldPosition;.<init>:(Ljava/text/Format$Field;)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f85cc.   call temp:=  [|java:text:FieldPosition.setBeginIndex|](v12, v0) @signature [|Ljava/text/FieldPosition;.setBeginIndex:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f85d2.   call temp:=  [|java:lang:StringBuffer.length|](v11) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f85d8.   v7:= temp;
#L0f85da.   call temp:=  [|java:text:FieldPosition.setEndIndex|](v12, v7) @signature [|Ljava/text/FieldPosition;.setEndIndex:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f85e0.   call temp:=  [|java:util:List.add|](v13, v12) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L0f85e6.   return @void ;
#L0f85e8.   v1:= @@[|java:text:DateFormat$Field.ERA|]   @type object;
#L0f85ec.   v7:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f85f0.   v7:= v7.[|java:text:DateFormatSymbols.eras|]   @type object;
#L0f85f4.   v8:= v10.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f85f8.   v9:= 0  @length 4;
#L0f85fa.   call temp:=  [|java:util:Calendar.get|](v8, v9) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8600.   v8:= temp;
#L0f8602.   v7:= v7[v8]  @type object;
#L0f8606.   call temp:=  [|java:lang:StringBuffer.append|](v11, v7) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f860c.   goto L0f85a6;
#L0f860e.   v1:= @@[|java:text:DateFormat$Field.YEAR|]   @type object;
#L0f8612.   v7:= v10.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8616.   v8:= 1  @length 4;
#L0f8618.   call temp:=  [|java:util:Calendar.get|](v7, v8) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f861e.   v6:= temp;
#L0f8620.   v7:= 2  @length 4;
#L0f8622.   if v15 != v7 then goto L0f8634;
#L0f8626.   v7:= 2  @length 4;
#L0f8628.   v8:= v6 % 100;
#L0f862c.   call temp:=  [|java:text:SimpleDateFormat.appendNumber|](v10, v11, v7, v8) @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8632.   goto L0f85a6;
#L0f8634.   call temp:=  [|java:text:SimpleDateFormat.appendNumber|](v10, v11, v15, v6) @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f863a.   goto L0f85a6;
#L0f863c.   v1:= @@[|java:text:DateFormat$Field.MONTH|]   @type object;
#L0f8640.   v7:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8644.   v7:= v7.[|java:text:DateFormatSymbols.longStandAloneMonths|]   @type object;
#L0f8648.   v8:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f864c.   v8:= v8.[|java:text:DateFormatSymbols.shortStandAloneMonths|]   @type object;
#L0f8650.   call temp:=  [|java:text:SimpleDateFormat.appendMonth|](v10, v11, v15, v7, v8) @signature [|Ljava/text/SimpleDateFormat;.appendMonth:(Ljava/lang/StringBuffer;I[Ljava/lang/String;[Ljava/lang/String;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8656.   goto L0f85a6;
#L0f8658.   v1:= @@[|java:text:DateFormat$Field.MONTH|]   @type object;
#L0f865c.   v7:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8660.   v7:= v7.[|java:text:DateFormatSymbols.months|]   @type object;
#L0f8664.   v8:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8668.   v8:= v8.[|java:text:DateFormatSymbols.shortMonths|]   @type object;
#L0f866c.   call temp:=  [|java:text:SimpleDateFormat.appendMonth|](v10, v11, v15, v7, v8) @signature [|Ljava/text/SimpleDateFormat;.appendMonth:(Ljava/lang/StringBuffer;I[Ljava/lang/String;[Ljava/lang/String;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8672.   goto L0f85a6;
#L0f8674.   v1:= @@[|java:text:DateFormat$Field.DAY_OF_MONTH|]   @type object;
#L0f8678.   v2:= 5  @length 4;
#L0f867a.   goto L0f85a6;
#L0f867c.   v1:= @@[|java:text:DateFormat$Field.HOUR_OF_DAY1|]   @type object;
#L0f8680.   v7:= v10.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8684.   v8:= 11  @length 16;
#L0f8688.   call temp:=  [|java:util:Calendar.get|](v7, v8) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f868e.   v3:= temp;
#L0f8690.   if v3 != 0 then goto L0f8698;
#L0f8694.   v3:= 24  @length 16;
#L0f8698.   call temp:=  [|java:text:SimpleDateFormat.appendNumber|](v10, v11, v15, v3) @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f869e.   goto L0f85a6;
#L0f86a0.   v1:= @@[|java:text:DateFormat$Field.HOUR_OF_DAY0|]   @type object;
#L0f86a4.   v2:= 11  @length 16;
#L0f86a8.   goto L0f85a6;
#L0f86ac.   v1:= @@[|java:text:DateFormat$Field.MINUTE|]   @type object;
#L0f86b0.   v2:= 12  @length 16;
#L0f86b4.   goto L0f85a6;
#L0f86b8.   v1:= @@[|java:text:DateFormat$Field.SECOND|]   @type object;
#L0f86bc.   v2:= 13  @length 16;
#L0f86c0.   goto L0f85a6;
#L0f86c4.   v1:= @@[|java:text:DateFormat$Field.MILLISECOND|]   @type object;
#L0f86c8.   v7:= v10.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f86cc.   v8:= 14  @length 16;
#L0f86d0.   call temp:=  [|java:util:Calendar.get|](v7, v8) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f86d6.   v5:= temp;
#L0f86d8.   call temp:=  [|java:text:SimpleDateFormat.appendNumber|](v10, v11, v15, v5) @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f86de.   goto L0f85a6;
#L0f86e2.   v1:= @@[|java:text:DateFormat$Field.DAY_OF_WEEK|]   @type object;
#L0f86e6.   v7:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f86ea.   v7:= v7.[|java:text:DateFormatSymbols.longStandAloneWeekdays|]   @type object;
#L0f86ee.   v8:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f86f2.   v8:= v8.[|java:text:DateFormatSymbols.shortStandAloneWeekdays|]   @type object;
#L0f86f6.   call temp:=  [|java:text:SimpleDateFormat.appendDayOfWeek|](v10, v11, v15, v7, v8) @signature [|Ljava/text/SimpleDateFormat;.appendDayOfWeek:(Ljava/lang/StringBuffer;I[Ljava/lang/String;[Ljava/lang/String;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f86fc.   goto L0f85a6;
#L0f8700.   v1:= @@[|java:text:DateFormat$Field.DAY_OF_WEEK|]   @type object;
#L0f8704.   v7:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8708.   v7:= v7.[|java:text:DateFormatSymbols.weekdays|]   @type object;
#L0f870c.   v8:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8710.   v8:= v8.[|java:text:DateFormatSymbols.shortWeekdays|]   @type object;
#L0f8714.   call temp:=  [|java:text:SimpleDateFormat.appendDayOfWeek|](v10, v11, v15, v7, v8) @signature [|Ljava/text/SimpleDateFormat;.appendDayOfWeek:(Ljava/lang/StringBuffer;I[Ljava/lang/String;[Ljava/lang/String;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f871a.   goto L0f85a6;
#L0f871e.   v1:= @@[|java:text:DateFormat$Field.DAY_OF_YEAR|]   @type object;
#L0f8722.   v2:= 6  @length 4;
#L0f8724.   goto L0f85a6;
#L0f8728.   v1:= @@[|java:text:DateFormat$Field.DAY_OF_WEEK_IN_MONTH|]   @type object;
#L0f872c.   v2:= 8  @length 16;
#L0f8730.   goto L0f85a6;
#L0f8734.   v1:= @@[|java:text:DateFormat$Field.WEEK_OF_YEAR|]   @type object;
#L0f8738.   v2:= 3  @length 4;
#L0f873a.   goto L0f85a6;
#L0f873e.   v1:= @@[|java:text:DateFormat$Field.WEEK_OF_MONTH|]   @type object;
#L0f8742.   v2:= 4  @length 4;
#L0f8744.   goto L0f85a6;
#L0f8748.   v1:= @@[|java:text:DateFormat$Field.AM_PM|]   @type object;
#L0f874c.   v7:= v10.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8750.   v7:= v7.[|java:text:DateFormatSymbols.ampms|]   @type object;
#L0f8754.   v8:= v10.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8758.   v9:= 9  @length 16;
#L0f875c.   call temp:=  [|java:util:Calendar.get|](v8, v9) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8762.   v8:= temp;
#L0f8764.   v7:= v7[v8]  @type object;
#L0f8768.   call temp:=  [|java:lang:StringBuffer.append|](v11, v7) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f876e.   goto L0f85a6;
#L0f8772.   v1:= @@[|java:text:DateFormat$Field.HOUR1|]   @type object;
#L0f8776.   v7:= v10.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f877a.   v8:= 10  @length 16;
#L0f877e.   call temp:=  [|java:util:Calendar.get|](v7, v8) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8784.   v3:= temp;
#L0f8786.   if v3 != 0 then goto L0f878e;
#L0f878a.   v3:= 12  @length 16;
#L0f878e.   call temp:=  [|java:text:SimpleDateFormat.appendNumber|](v10, v11, v15, v3) @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8794.   goto L0f85a6;
#L0f8798.   v1:= @@[|java:text:DateFormat$Field.HOUR0|]   @type object;
#L0f879c.   v2:= 10  @length 16;
#L0f87a0.   goto L0f85a6;
#L0f87a4.   v1:= @@[|java:text:DateFormat$Field.TIME_ZONE|]   @type object;
#L0f87a8.   v7:= 1  @length 4;
#L0f87aa.   call temp:=  [|java:text:SimpleDateFormat.appendTimeZone|](v10, v11, v15, v7) @signature [|Ljava/text/SimpleDateFormat;.appendTimeZone:(Ljava/lang/StringBuffer;IZ)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f87b0.   goto L0f85a6;
#L0f87b4.   v1:= @@[|java:text:DateFormat$Field.TIME_ZONE|]   @type object;
#L0f87b8.   v7:= 0  @length 4;
#L0f87ba.   call temp:=  [|java:text:SimpleDateFormat.appendNumericTimeZone|](v10, v11, v7) @signature [|Ljava/text/SimpleDateFormat;.appendNumericTimeZone:(Ljava/lang/StringBuffer;Z)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f87c0.   goto L0f85a6;
#L0f87c4.   call temp:=  [|java:text:FieldPosition.getFieldAttribute|](v12) @signature [|Ljava/text/FieldPosition;.getFieldAttribute:()Ljava/text/Format$Field;|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f87ca.   v7:= temp  @type object;
#L0f87cc.   if v7 == v1 then goto L0f87e8;
#L0f87d0.   call temp:=  [|java:text:FieldPosition.getFieldAttribute|](v12) @signature [|Ljava/text/FieldPosition;.getFieldAttribute:()Ljava/text/Format$Field;|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f87d6.   v7:= temp  @type object;
#L0f87d8.   if v7 != 0 then goto L0f85e6;
#L0f87dc.   call temp:=  [|java:text:FieldPosition.getField|](v12) @signature [|Ljava/text/FieldPosition;.getField:()I|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f87e2.   v7:= temp;
#L0f87e4.   if v7 != v4 then goto L0f85e6;
#L0f87e8.   call temp:=  [|java:text:FieldPosition.getEndIndex|](v12) @signature [|Ljava/text/FieldPosition;.getEndIndex:()I|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f87ee.   v7:= temp;
#L0f87f0.   if v7 != 0 then goto L0f85e6;
#L0f87f4.   call temp:=  [|java:text:FieldPosition.setBeginIndex|](v12, v0) @signature [|Ljava/text/FieldPosition;.setBeginIndex:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f87fa.   call temp:=  [|java:lang:StringBuffer.length|](v11) @signature [|Ljava/lang/StringBuffer;.length:()I|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f8800.   v7:= temp;
#L0f8802.   call temp:=  [|java:text:FieldPosition.setEndIndex|](v12, v7) @signature [|Ljava/text/FieldPosition;.setEndIndex:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f8808.   goto L0f85e6;
#L0f880c.   switch  v4
                 | 0 => goto L0f85e8
                 | 1 => goto L0f860e
                 | 2 => goto L0f8658
                 | 3 => goto L0f8674
                 | 4 => goto L0f867c
                 | 5 => goto L0f86a0
                 | 6 => goto L0f86ac
                 | 7 => goto L0f86b8
                 | 8 => goto L0f86c4
                 | 9 => goto L0f8700
                 | 10 => goto L0f871e
                 | 11 => goto L0f8728
                 | 12 => goto L0f8734
                 | 13 => goto L0f873e
                 | 14 => goto L0f8748
                 | 15 => goto L0f8772
                 | 16 => goto L0f8798
                 | 17 => goto L0f87a4
                 | 18 => goto L0f87b4
                 | 19 => goto L0f863c
                 | 20 => goto L0f86e2
                 | => goto L0f85a6;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.appendDayOfWeek|] ([|java:text:SimpleDateFormat|] v4 @type (this), [|java:lang:StringBuffer|] v5 @type (object), [|int|] v6, [|java:lang:String|][] v7 @type (object), [|java:lang:String|][] v8 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.appendDayOfWeek:(Ljava/lang/StringBuffer;I[Ljava/lang/String;[Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        [|java:lang:String|][] v0 @varname [|days|] @scope ((L0007,L0014));
        [|boolean|] v1 @varname [|isLong|] @scope ((L0004,L0014), (L0016,L0018));





        v2;
        v3;
      
#L0f8878.   v2:= 3  @length 4;
#L0f887a.   if v6 <= v2 then goto L0f88a0;
#L0f887e.   v1:= 1  @length 4;
#L0f8880.   if v1 == 0 then goto L0f88a4;
#L0f8884.   v0:= v7  @type object;
#L0f8886.   v2:= v4.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f888a.   v3:= 7  @length 4;
#L0f888c.   call temp:=  [|java:util:Calendar.get|](v2, v3) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8892.   v2:= temp;
#L0f8894.   v2:= v0[v2]  @type object;
#L0f8898.   call temp:=  [|java:lang:StringBuffer.append|](v5, v2) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f889e.   return @void ;
#L0f88a0.   v1:= 0  @length 4;
#L0f88a2.   goto L0f8880;
#L0f88a4.   v0:= v8  @type object;
#L0f88a6.   goto L0f8886;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.appendMonth|] ([|java:text:SimpleDateFormat|] v5 @type (this), [|java:lang:StringBuffer|] v6 @type (object), [|int|] v7, [|java:lang:String|][] v8 @type (object), [|java:lang:String|][] v9 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.appendMonth:(Ljava/lang/StringBuffer;I[Ljava/lang/String;[Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        [|boolean|] v0 @varname [|isLong|] @scope ((L0013,L001c), (L001e,L0020));
        [|java:lang:String|][] v2 @varname [|months|] @scope ((L0016,L001c));
        [|int|] v1 @varname [|month|] @scope ((L0007,L0020));





        v3;
        v4;
      
#L0f88b8.   v4:= 2  @length 4;
#L0f88ba.   v3:= v5.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f88be.   call temp:=  [|java:util:Calendar.get|](v3, v4) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f88c4.   v1:= temp;
#L0f88c6.   if v7 > v4 then goto L0f88d6;
#L0f88ca.   v3:= v1 + 1;
#L0f88ce.   call temp:=  [|java:text:SimpleDateFormat.appendNumber|](v5, v6, v7, v3) @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f88d4.   return @void ;
#L0f88d6.   v3:= 3  @length 4;
#L0f88d8.   if v7 <= v3 then goto L0f88f0;
#L0f88dc.   v0:= 1  @length 4;
#L0f88de.   if v0 == 0 then goto L0f88f4;
#L0f88e2.   v2:= v8  @type object;
#L0f88e4.   v3:= v2[v1]  @type object;
#L0f88e8.   call temp:=  [|java:lang:StringBuffer.append|](v6, v3) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f88ee.   goto L0f88d4;
#L0f88f0.   v0:= 0  @length 4;
#L0f88f2.   goto L0f88de;
#L0f88f4.   v2:= v9  @type object;
#L0f88f6.   goto L0f88e4;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.appendNumber|] ([|java:text:SimpleDateFormat|] v5 @type (this), [|java:lang:StringBuffer|] v6 @type (object), [|int|] v7, [|int|] v8) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|minimumIntegerDigits|] @scope ((L0006,L0020));




        v1;
        v2;
        v3;
        v4;
      
#L0f8908.   v1:= v5.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f890c.   call temp:=  [|java:text:NumberFormat.getMinimumIntegerDigits|](v1) @signature [|Ljava/text/NumberFormat;.getMinimumIntegerDigits:()I|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f8912.   v0:= temp;
#L0f8914.   v1:= v5.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f8918.   call temp:=  [|java:text:NumberFormat.setMinimumIntegerDigits|](v1, v7) @signature [|Ljava/text/NumberFormat;.setMinimumIntegerDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f891e.   v1:= v5.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f8922.   call temp:=  [|java:lang:Integer.valueOf|](v8) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0f8928.   v2:= temp  @type object;
#L0f892a.   v3:= new [|java:text:FieldPosition|];
#L0f892e.   v4:= 0  @length 4;
#L0f8930.   call temp:=  [|java:text:FieldPosition.<init>|](v3, v4) @signature [|Ljava/text/FieldPosition;.<init>:(I)V|] @classDescriptor [|java:text:FieldPosition|] @type direct;
#L0f8936.   call temp:=  [|java:text:NumberFormat.format|](v1, v2, v6, v3) @signature [|Ljava/text/NumberFormat;.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f893c.   v1:= v5.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f8940.   call temp:=  [|java:text:NumberFormat.setMinimumIntegerDigits|](v1, v0) @signature [|Ljava/text/NumberFormat;.setMinimumIntegerDigits:(I)V|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f8946.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.appendNumericTimeZone|] ([|java:text:SimpleDateFormat|] v7 @type (this), [|java:lang:StringBuffer|] v8 @type (object), [|boolean|] v9) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.appendNumericTimeZone:(Ljava/lang/StringBuffer;Z)V|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|offset|] @scope ((L0016,L003d));
        [|char|] v1 @varname [|sign|] @scope ((L0018,L003d));



        v2;
        v3;
        v4;
        v5;
        v6;
      
#L0f8958.    v6:= 0.000000;
#L0f895e.   v5:= 2  @length 4;
#L0f8960.   v2:= v7.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8964.   v3:= 15  @length 16;
#L0f8968.   call temp:=  [|java:util:Calendar.get|](v2, v3) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f896e.   v2:= temp;
#L0f8970.   v3:= v7.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8974.   v4:= 16  @length 16;
#L0f8978.   call temp:=  [|java:util:Calendar.get|](v3, v4) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f897e.   v3:= temp;
#L0f8980.   v0:= v2 + v3  @type int;
#L0f8984.   v1:= 43  @length 16;
#L0f8988.   if v0 >= 0 then goto L0f8992;
#L0f898c.   v1:= 45  @length 16;
#L0f8990.   v0:= -v0  @type int;
#L0f8992.   if v9 == 0 then goto L0f89a0;
#L0f8996.   v2:= "GMT" @type (object, string);
#L0f899a.   call temp:=  [|java:lang:StringBuffer.append|](v8, v2) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f89a0.   call temp:=  [|java:lang:StringBuffer.append|](v8, v1) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f89a6.   v2:= v0 / v6  @type int;
#L0f89aa.   call temp:=  [|java:text:SimpleDateFormat.appendNumber|](v7, v8, v5, v2) @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f89b0.   if v9 == 0 then goto L0f89be;
#L0f89b4.   v2:= 58  @length 16;
#L0f89b8.   call temp:=  [|java:lang:StringBuffer.append|](v8, v2) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f89be.   v2:= v0 % v6  @type int;
#L0f89c2.    v3:= 0.000000;
#L0f89c8.   v2:= v2 / v3  @type int;
#L0f89ca.   call temp:=  [|java:text:SimpleDateFormat.appendNumber|](v7, v8, v5, v2) @signature [|Ljava/text/SimpleDateFormat;.appendNumber:(Ljava/lang/StringBuffer;II)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f89d0.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.appendTimeZone|] ([|java:text:SimpleDateFormat|] v7 @type (this), [|java:lang:StringBuffer|] v8 @type (object), [|int|] v9, [|boolean|] v10) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.appendTimeZone:(Ljava/lang/StringBuffer;IZ)V|] @Access PRIVATE {
      local temp ;
        [|boolean|] v1 @varname [|daylight|] @scope ((L0015,L0029), (L002c,L0040));
        [|int|] v2 @varname [|style|] @scope ((L0018,L0029), (L002e,L0040));
        [|java:util:TimeZone|] v3 @varname [|tz|] @scope ((L000a,L0029), (L002a,L0040));
        [|java:lang:String|] v0 @varname [|custom|] @scope ((L003a,L0040));




        v4;
        v5;
        v6;
      
#L0f89e4.   v4:= 1  @length 4;
#L0f89e6.   v2:= 0  @length 4;
#L0f89e8.   if v10 == 0 then goto L0f8a64;
#L0f89ec.   v5:= v7.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f89f0.   call temp:=  [|java:util:Calendar.getTimeZone|](v5) @signature [|Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f89f6.   v3:= temp  @type object;
#L0f89f8.   v5:= v7.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f89fc.   v6:= 16  @length 16;
#L0f8a00.   call temp:=  [|java:util:Calendar.get|](v5, v6) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8a06.   v5:= temp;
#L0f8a08.   if v5 == 0 then goto L0f8a38;
#L0f8a0c.   v1:= v4;
#L0f8a0e.   v5:= 4  @length 4;
#L0f8a10.   if v9 >= v5 then goto L0f8a3c;
#L0f8a14.   v4:= v7.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8a18.   v4:= v4.[|java:text:DateFormatSymbols.customZoneStrings|]   @boolean;
#L0f8a1c.   if v4 != 0 then goto L0f8a40;
#L0f8a20.   v4:= v7.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8a24.   v4:= v4.[|java:text:DateFormatSymbols.locale|]   @type object;
#L0f8a28.   call temp:=  [|java:util:TimeZone.getDisplayName|](v3, v1, v2, v4) @signature [|Ljava/util/TimeZone;.getDisplayName:(ZILjava/util/Locale;)Ljava/lang/String;|] @classDescriptor [|java:util:TimeZone|] @type virtual;
#L0f8a2e.   v4:= temp  @type object;
#L0f8a30.   call temp:=  [|java:lang:StringBuffer.append|](v8, v4) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f8a36.   return @void ;
#L0f8a38.   v1:= v2;
#L0f8a3a.   goto L0f8a0e;
#L0f8a3c.   v2:= v4;
#L0f8a3e.   goto L0f8a14;
#L0f8a40.   v4:= v7.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8a44.   v4:= v4.[|java:text:DateFormatSymbols.zoneStrings|]   @type object;
#L0f8a48.   call temp:=  [|java:util:TimeZone.getID|](v3) @signature [|Ljava/util/TimeZone;.getID:()Ljava/lang/String;|] @classDescriptor [|java:util:TimeZone|] @type virtual;
#L0f8a4e.   v5:= temp  @type object;
#L0f8a50.   call temp:=  [|libcore:icu:TimeZones.getDisplayName|](v4, v5, v1, v2) @signature [|Llibcore/icu/TimeZones;.getDisplayName:([[Ljava/lang/String;Ljava/lang/String;ZI)Ljava/lang/String;|] @classDescriptor [|libcore:icu:TimeZones|] @type static;
#L0f8a56.   v0:= temp  @type object;
#L0f8a58.   if v0 == 0 then goto L0f8a64;
#L0f8a5c.   call temp:=  [|java:lang:StringBuffer.append|](v8, v0) @signature [|Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f8a62.   goto L0f8a36;
#L0f8a64.   call temp:=  [|java:text:SimpleDateFormat.appendNumericTimeZone|](v7, v8, v10) @signature [|Ljava/text/SimpleDateFormat;.appendNumericTimeZone:(Ljava/lang/StringBuffer;Z)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8a6a.   goto L0f8a36;

   }
    procedure [|java:lang:String|] [|java:text:SimpleDateFormat.convertPattern|] ([|java:lang:String|] v9 @type (object), [|java:lang:String|] v10 @type (object), [|java:lang:String|] v11 @type (object), [|boolean|] v12) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.convertPattern:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;

        [|int|] v1 @varname [|index|] @scope ((L0027,L0031));
        [|char|] v3 @varname [|next|] @scope ((L001a,L007d));
        [|int|] v0 @varname [|i|] @scope ((L0014,L008d));
        [|int|] v2 @varname [|length|] @scope ((L0013,L008d));
        [|java:lang:StringBuilder|] v4 @varname [|output|] @scope ((L000f,L008d));
        [|boolean|] v5 @varname [|quote|] @scope ((L000a,L008d));




        v6;
        v7;
        v8;
      
#L0f8a7c.   if v12 != 0 then goto L0f8a8e;
#L0f8a80.   call temp:=  [|java:lang:String.equals|](v10, v11) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8a86.   v6:= temp;
#L0f8a88.   if v6 == 0 then goto L0f8a8e;
#L0f8a8c.   return v9  @type object;
#L0f8a8e.   v5:= 0  @length 4;
#L0f8a90.   v4:= new [|java:lang:StringBuilder|];
#L0f8a94.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f8a9a.   call temp:=  [|java:lang:String.length|](v9) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8aa0.   v2:= temp;
#L0f8aa2.   v0:= 0  @length 4;
#L0f8aa4.   if v0 >= v2 then goto L0f8b76;
#L0f8aa8.   call temp:=  [|java:lang:String.charAt|](v9, v0) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8aae.   v3:= temp;
#L0f8ab0.   v6:= 39  @length 16;
#L0f8ab4.   if v3 != v6 then goto L0f8abe;
#L0f8ab8.   if v5 != 0 then goto L0f8ae4;
#L0f8abc.   v5:= 1  @length 4;
#L0f8abe.   if v5 != 0 then goto L0f8ae8;
#L0f8ac2.   call temp:=  [|java:lang:String.indexOf|](v10, v3) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8ac8.   v1:= temp;
#L0f8aca.   v6:= -1  @length 4;
#L0f8acc.   if v1 == v6 then goto L0f8ae8;
#L0f8ad0.   call temp:=  [|java:lang:String.charAt|](v11, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8ad6.   v6:= temp;
#L0f8ad8.   call temp:=  [|java:lang:StringBuilder.append|](v4, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8ade.   v0:= v0 + 1;
#L0f8ae2.   goto L0f8aa4;
#L0f8ae4.   v5:= 0  @length 4;
#L0f8ae6.   goto L0f8abe;
#L0f8ae8.   if v12 == 0 then goto L0f8b6e;
#L0f8aec.   if v5 != 0 then goto L0f8b6e;
#L0f8af0.   v6:= 97  @length 16;
#L0f8af4.   if v3 < v6 then goto L0f8b00;
#L0f8af8.   v6:= 122  @length 16;
#L0f8afc.   if v3 <= v6 then goto L0f8b10;
#L0f8b00.   v6:= 65  @length 16;
#L0f8b04.   if v3 < v6 then goto L0f8b6e;
#L0f8b08.   v6:= 90  @length 16;
#L0f8b0c.   if v3 > v6 then goto L0f8b6e;
#L0f8b10.   v6:= new [|java:lang:IllegalArgumentException|];
#L0f8b14.   v7:= new [|java:lang:StringBuilder|];
#L0f8b18.   call temp:=  [|java:lang:StringBuilder.<init>|](v7) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f8b1e.   v8:= "Invalid pattern character '" @type (object, string);
#L0f8b22.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8b28.   v7:= temp  @type object;
#L0f8b2a.   call temp:=  [|java:lang:StringBuilder.append|](v7, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8b30.   v7:= temp  @type object;
#L0f8b32.   v8:= "' in " @type (object, string);
#L0f8b36.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8b3c.   v7:= temp  @type object;
#L0f8b3e.   v8:= "'" @type (object, string);
#L0f8b42.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8b48.   v7:= temp  @type object;
#L0f8b4a.   call temp:=  [|java:lang:StringBuilder.append|](v7, v9) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8b50.   v7:= temp  @type object;
#L0f8b52.   v8:= "'" @type (object, string);
#L0f8b56.   call temp:=  [|java:lang:StringBuilder.append|](v7, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8b5c.   v7:= temp  @type object;
#L0f8b5e.   call temp:=  [|java:lang:StringBuilder.toString|](v7) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8b64.   v7:= temp  @type object;
#L0f8b66.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f8b6c.   throw v6;
#L0f8b6e.   call temp:=  [|java:lang:StringBuilder.append|](v4, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8b74.   goto L0f8ade;
#L0f8b76.   if v5 == 0 then goto L0f8b8a;
#L0f8b7a.   v6:= new [|java:lang:IllegalArgumentException|];
#L0f8b7e.   v7:= "Unterminated quote" @type (object, string);
#L0f8b82.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f8b88.   throw v6;
#L0f8b8a.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8b90.   v9:= temp  @type object;
#L0f8b92.   goto L0f8a8c;

   }
    procedure [|java:lang:String|] [|java:text:SimpleDateFormat.defaultPattern|] () @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.defaultPattern:()Ljava/lang/String;|] @Access PRIVATE_STATIC {
      local temp ;
        [|libcore:icu:LocaleData|] v0 @varname [|localeData|] @scope ((L0009,L0029));
        v1;
        v2;
        v3;
      
#L0f8ba8.   v3:= 3  @length 4;
#L0f8baa.   call temp:=  [|java:util:Locale.getDefault|]() @signature [|Ljava/util/Locale;.getDefault:()Ljava/util/Locale;|] @classDescriptor [|java:util:Locale|] @type static;
#L0f8bb0.   v1:= temp  @type object;
#L0f8bb2.   call temp:=  [|libcore:icu:LocaleData.get|](v1) @signature [|Llibcore/icu/LocaleData;.get:(Ljava/util/Locale;)Llibcore/icu/LocaleData;|] @classDescriptor [|libcore:icu:LocaleData|] @type static;
#L0f8bb8.   v0:= temp  @type object;
#L0f8bba.   v1:= new [|java:lang:StringBuilder|];
#L0f8bbe.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f8bc4.   call temp:=  [|libcore:icu:LocaleData.getDateFormat|](v0, v3) @signature [|Llibcore/icu/LocaleData;.getDateFormat:(I)Ljava/lang/String;|] @classDescriptor [|libcore:icu:LocaleData|] @type virtual;
#L0f8bca.   v2:= temp  @type object;
#L0f8bcc.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8bd2.   v1:= temp  @type object;
#L0f8bd4.   v2:= " " @type (object, string);
#L0f8bd8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8bde.   v1:= temp  @type object;
#L0f8be0.   call temp:=  [|libcore:icu:LocaleData.getTimeFormat|](v0, v3) @signature [|Llibcore/icu/LocaleData;.getTimeFormat:(I)Ljava/lang/String;|] @classDescriptor [|libcore:icu:LocaleData|] @type virtual;
#L0f8be6.   v2:= temp  @type object;
#L0f8be8.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8bee.   v1:= temp  @type object;
#L0f8bf0.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8bf6.   v1:= temp  @type object;
#L0f8bf8.   return v1  @type object;

   }
    procedure [|java:util:Date|] [|java:text:SimpleDateFormat.error|] ([|java:text:SimpleDateFormat|] v1 @type (this), [|java:text:ParsePosition|] v2 @type (object), [|int|] v3, [|java:util:TimeZone|] v4 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.error:(Ljava/text/ParsePosition;ILjava/util/TimeZone;)Ljava/util/Date;|] @Access PRIVATE {
      local temp ;




        v0;
      
#L0f8c0c.   call temp:=  [|java:text:ParsePosition.setErrorIndex|](v2, v3) @signature [|Ljava/text/ParsePosition;.setErrorIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f8c12.   v0:= v1.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8c16.   call temp:=  [|java:util:Calendar.setTimeZone|](v0, v4) @signature [|Ljava/util/Calendar;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8c1c.   v0:= 0  @length 4;
#L0f8c1e.   return v0  @type object;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:SimpleDateFormat.formatImpl|] ([|java:text:SimpleDateFormat|] v11 @type (this), [|java:util:Date|] v12 @type (object), [|java:lang:StringBuffer|] v13 @type (object), [|java:text:FieldPosition|] v14 @type (object), [|java:util:List|] v15 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.formatImpl:(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer;|] @Access PRIVATE {
      local temp ;
        [|int|] v8 @varname [|next|] @scope ((L001c,L0074));
        [|int|] v5 @varname [|count|] @scope ((L0003,L007f));
        [|int|] v6 @varname [|i|] @scope ((L0014,L007f));
        [|int|] v7 @varname [|last|] @scope ((L0002,L007f));
        [|int|] v9 @varname [|patternLength|] @scope ((L0013,L007f));
        [|boolean|] v10 @varname [|quote|] @scope ((L0001,L007f));





        v0;
        v1;
        v2;
        v3;
        v4;
      
#L0f8c30.   v10:= 0  @length 4;
#L0f8c32.   v7:= -1  @length 4;
#L0f8c34.   v5:= 0  @length 4;
#L0f8c36.   v0:= v11.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8c3a.   call temp:=  [|java:util:Calendar.setTime|](v0, v12) @signature [|Ljava/util/Calendar;.setTime:(Ljava/util/Date;)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8c40.   if v14 == 0 then goto L0f8c4a;
#L0f8c44.   call temp:=  [|java:text:FieldPosition.clear|](v14) @signature [|Ljava/text/FieldPosition;.clear:()V|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f8c4a.   v0:= v11.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f8c4e.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8c54.   v9:= temp;
#L0f8c56.   v6:= 0  @length 4;
#L0f8c58.   if v6 >= v9 then goto L0f8d18;
#L0f8c5c.   v0:= v11.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f8c60.   call temp:=  [|java:lang:String.charAt|](v0, v6) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8c66.   v8:= temp;
#L0f8c68.   v0:= 39  @length 16;
#L0f8c6c.   if v8 != v0 then goto L0f8caa;
#L0f8c70.   if v5 <= 0 then goto L0f8c86;
#L0f8c74.   v4:= (char)v7  @type i2c;
#L0f8c76.   v0:= v11  @type object;
#L0f8c78.   v1:= v13  @type object;
#L0f8c7a.   v2:= v14  @type object;
#L0f8c7c.   v3:= v15  @type object;
#L0f8c7e.   call temp:=  [|java:text:SimpleDateFormat.append|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/text/SimpleDateFormat;.append:(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;CI)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8c84.   v5:= 0  @length 4;
#L0f8c86.   if v7 != v8 then goto L0f8ca2;
#L0f8c8a.   v0:= 39  @length 16;
#L0f8c8e.   call temp:=  [|java:lang:StringBuffer.append|](v13, v0) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f8c94.   v7:= -1  @length 4;
#L0f8c96.   if v10 != 0 then goto L0f8ca6;
#L0f8c9a.   v10:= 1  @length 4;
#L0f8c9c.   v6:= v6 + 1;
#L0f8ca0.   goto L0f8c58;
#L0f8ca2.   v7:= v8;
#L0f8ca4.   goto L0f8c96;
#L0f8ca6.   v10:= 0  @length 4;
#L0f8ca8.   goto L0f8c9c;
#L0f8caa.   if v10 != 0 then goto L0f8cf6;
#L0f8cae.   if v7 == v8 then goto L0f8cd2;
#L0f8cb2.   v0:= 97  @length 16;
#L0f8cb6.   if v8 < v0 then goto L0f8cc2;
#L0f8cba.   v0:= 122  @length 16;
#L0f8cbe.   if v8 <= v0 then goto L0f8cd2;
#L0f8cc2.   v0:= 65  @length 16;
#L0f8cc6.   if v8 < v0 then goto L0f8cf6;
#L0f8cca.   v0:= 90  @length 16;
#L0f8cce.   if v8 > v0 then goto L0f8cf6;
#L0f8cd2.   if v7 != v8 then goto L0f8cdc;
#L0f8cd6.   v5:= v5 + 1;
#L0f8cda.   goto L0f8c9c;
#L0f8cdc.   if v5 <= 0 then goto L0f8cf0;
#L0f8ce0.   v4:= (char)v7  @type i2c;
#L0f8ce2.   v0:= v11  @type object;
#L0f8ce4.   v1:= v13  @type object;
#L0f8ce6.   v2:= v14  @type object;
#L0f8ce8.   v3:= v15  @type object;
#L0f8cea.   call temp:=  [|java:text:SimpleDateFormat.append|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/text/SimpleDateFormat;.append:(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;CI)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8cf0.   v7:= v8;
#L0f8cf2.   v5:= 1  @length 4;
#L0f8cf4.   goto L0f8c9c;
#L0f8cf6.   if v5 <= 0 then goto L0f8d0c;
#L0f8cfa.   v4:= (char)v7  @type i2c;
#L0f8cfc.   v0:= v11  @type object;
#L0f8cfe.   v1:= v13  @type object;
#L0f8d00.   v2:= v14  @type object;
#L0f8d02.   v3:= v15  @type object;
#L0f8d04.   call temp:=  [|java:text:SimpleDateFormat.append|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/text/SimpleDateFormat;.append:(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;CI)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8d0a.   v5:= 0  @length 4;
#L0f8d0c.   v7:= -1  @length 4;
#L0f8d0e.   v0:= (char)v8  @type i2c;
#L0f8d10.   call temp:=  [|java:lang:StringBuffer.append|](v13, v0) @signature [|Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f8d16.   goto L0f8c9c;
#L0f8d18.   if v5 <= 0 then goto L0f8d2c;
#L0f8d1c.   v4:= (char)v7  @type i2c;
#L0f8d1e.   v0:= v11  @type object;
#L0f8d20.   v1:= v13  @type object;
#L0f8d22.   v2:= v14  @type object;
#L0f8d24.   v3:= v15  @type object;
#L0f8d26.   call temp:=  [|java:text:SimpleDateFormat.append|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/text/SimpleDateFormat;.append:(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;CI)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8d2c.   return v13  @type object;

   }
    procedure [|java:text:AttributedCharacterIterator|] [|java:text:SimpleDateFormat.formatToCharacterIteratorImpl|] ([|java:text:SimpleDateFormat|] v8 @type (this), [|java:util:Date|] v9 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.formatToCharacterIteratorImpl:(Ljava/util/Date;)Ljava/text/AttributedCharacterIterator;|] @Access PRIVATE {
      local temp ;
        [|java:text:Format$Field|] v1 @varname [|attribute|] @scope ((L002b,L0037));
        [|java:text:FieldPosition|] v5 @varname [|pos|] @scope ((L0027,L0037));
        [|java:text:AttributedString|] v0 @varname [|as|] @scope ((L0017,L003c));
        [|java:lang:StringBuffer|] v2 @varname [|buffer|] @scope ((L0005,L003c));
        [|java:util:ArrayList|] v3 @varname [|fields|] @scope ((L000a,L003c));
        [|java:util:Iterator|] v4 @varname [|i$|] @scope ((L001b,L003c));


        v6;
        v7;
      
#L0f8d40.   v2:= new [|java:lang:StringBuffer|];
#L0f8d44.   call temp:=  [|java:lang:StringBuffer.<init>|](v2) @signature [|Ljava/lang/StringBuffer;.<init>:()V|] @classDescriptor [|java:lang:StringBuffer|] @type direct;
#L0f8d4a.   v3:= new [|java:util:ArrayList|];
#L0f8d4e.   call temp:=  [|java:util:ArrayList.<init>|](v3) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L0f8d54.   v6:= 0  @length 4;
#L0f8d56.   call temp:=  [|java:text:SimpleDateFormat.formatImpl|](v8, v9, v2, v6, v3) @signature [|Ljava/text/SimpleDateFormat;.formatImpl:(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8d5c.   v0:= new [|java:text:AttributedString|];
#L0f8d60.   call temp:=  [|java:lang:StringBuffer.toString|](v2) @signature [|Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuffer|] @type virtual;
#L0f8d66.   v6:= temp  @type object;
#L0f8d68.   call temp:=  [|java:text:AttributedString.<init>|](v0, v6) @signature [|Ljava/text/AttributedString;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:text:AttributedString|] @type direct;
#L0f8d6e.   call temp:=  [|java:util:ArrayList.iterator|](v3) @signature [|Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L0f8d74.   v4:= temp  @type object;
#L0f8d76.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f8d7c.   v6:= temp;
#L0f8d7e.   if v6 == 0 then goto L0f8dae;
#L0f8d82.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0f8d88.   v5:= temp  @type object;
#L0f8d8a.   v5:= ([|java:text:FieldPosition|])v5;
#L0f8d8e.   call temp:=  [|java:text:FieldPosition.getFieldAttribute|](v5) @signature [|Ljava/text/FieldPosition;.getFieldAttribute:()Ljava/text/Format$Field;|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f8d94.   v1:= temp  @type object;
#L0f8d96.   call temp:=  [|java:text:FieldPosition.getBeginIndex|](v5) @signature [|Ljava/text/FieldPosition;.getBeginIndex:()I|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f8d9c.   v6:= temp;
#L0f8d9e.   call temp:=  [|java:text:FieldPosition.getEndIndex|](v5) @signature [|Ljava/text/FieldPosition;.getEndIndex:()I|] @classDescriptor [|java:text:FieldPosition|] @type virtual;
#L0f8da4.   v7:= temp;
#L0f8da6.   call temp:=  [|java:text:AttributedString.addAttribute|](v0, v1, v1, v6, v7) @signature [|Ljava/text/AttributedString;.addAttribute:(Ljava/text/AttributedCharacterIterator$Attribute;Ljava/lang/Object;II)V|] @classDescriptor [|java:text:AttributedString|] @type virtual;
#L0f8dac.   goto L0f8d76;
#L0f8dae.   call temp:=  [|java:text:AttributedString.getIterator|](v0) @signature [|Ljava/text/AttributedString;.getIterator:()Ljava/text/AttributedCharacterIterator;|] @classDescriptor [|java:text:AttributedString|] @type virtual;
#L0f8db4.   v6:= temp  @type object;
#L0f8db6.   return v6  @type object;

   }
    procedure [|int|] [|java:text:SimpleDateFormat.parse|] ([|java:text:SimpleDateFormat|] v17 @type (this), [|java:lang:String|] v18 @type (object), [|int|] v19, [|char|] v20, [|int|] v21) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;ICI)I|] @Access PRIVATE {
      local temp ;

        [|java:text:ParsePosition|] v14 @varname [|position|] @scope ((L0069,L00ad), (L00ea,L0115), (L017d,L01a8));
        [|java:lang:Number|] v15 @varname [|result|] @scope ((L0071,L00ad), (L00f2,L0115), (L0185,L01a8));
        [|int|] v16 @varname [|year|] @scope ((L007f,L00ad));
        [|int|] v12 @varname [|hour|] @scope ((L0101,L0115), (L0194,L01a8));
        [|int|] v7 @varname [|absolute|] @scope ((L002e,L01e6));
        [|int|] v10 @varname [|field|] @scope ((L002d,L01e6));
        [|int|] v13 @varname [|index|] @scope ((L0008,L01e6));





        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v8;
        v9;
        v11;
      
#L0f8dc8.   v3:= "GyMdkHmsSEDFwWahKzZLc" @type (object, string);
#L0f8dcc.   v0:= v20;
#L0f8dd0.   call temp:=  [|java:lang:String.indexOf|](v3, v0) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f8dd6.   v13:= temp;
#L0f8dd8.   v3:= -1  @length 4;
#L0f8dda.   if v13 != v3 then goto L0f8e20;
#L0f8dde.   v3:= new [|java:lang:IllegalArgumentException|];
#L0f8de2.   v4:= new [|java:lang:StringBuilder|];
#L0f8de6.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f8dec.   v5:= "Unknown pattern character '" @type (object, string);
#L0f8df0.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8df6.   v4:= temp  @type object;
#L0f8df8.   v0:= v20;
#L0f8dfc.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8e02.   v4:= temp  @type object;
#L0f8e04.   v5:= "'" @type (object, string);
#L0f8e08.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8e0e.   v4:= temp  @type object;
#L0f8e10.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f8e16.   v4:= temp  @type object;
#L0f8e18.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f8e1e.   throw v3;
#L0f8e20.   v10:= -1  @length 4;
#L0f8e22.   v7:= 0  @length 4;
#L0f8e24.   if v21 >= 0 then goto L0f8e36;
#L0f8e28.   v0:= v21;
#L0f8e2c.   v0:= -v0  @type int;
#L0f8e2e.   v21:= v0;
#L0f8e32.   v7:= v21;
#L0f8e36.   goto L0f9138;
#L0f8e3c.   v3:= -1  @length 4;
#L0f8e3e.   if v10 == v3 then goto L0f8e58;
#L0f8e42.   v11:= 0  @length 4;
#L0f8e44.   v6:= v17  @type object;
#L0f8e48.   v8:= v18  @type object;
#L0f8e4c.   v9:= v19;
#L0f8e50.   call temp:=  [|java:text:SimpleDateFormat.parseNumber|](v6, v7, v8, v9, v10, v11) @signature [|Ljava/text/SimpleDateFormat;.parseNumber:(ILjava/lang/String;III)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8e56.   v19:= temp;
#L0f8e58.   return v19;
#L0f8e5a.   v0:= v17  @type object;
#L0f8e5e.   v3:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8e62.   v3:= v3.[|java:text:DateFormatSymbols.eras|]   @type object;
#L0f8e66.   v4:= 0  @length 4;
#L0f8e68.   v0:= v17  @type object;
#L0f8e6c.   v1:= v18  @type object;
#L0f8e70.   v2:= v19;
#L0f8e74.   call temp:=  [|java:text:SimpleDateFormat.parseText|](v0, v1, v2, v3, v4) @signature [|Ljava/text/SimpleDateFormat;.parseText:(Ljava/lang/String;I[Ljava/lang/String;I)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8e7a.   v19:= temp;
#L0f8e7c.   goto L0f8e58;
#L0f8e7e.   v3:= 3  @length 4;
#L0f8e80.   v0:= v21;
#L0f8e84.   if v0 < v3 then goto L0f8e8c;
#L0f8e88.   v10:= 1  @length 4;
#L0f8e8a.   goto L0f8e3c;
#L0f8e8c.   v14:= new [|java:text:ParsePosition|];
#L0f8e90.   v0:= v19;
#L0f8e94.   call temp:=  [|java:text:ParsePosition.<init>|](v14, v0) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f8e9a.   v0:= v17  @type object;
#L0f8e9e.   v1:= v18  @type object;
#L0f8ea2.   call temp:=  [|java:text:SimpleDateFormat.parseNumber|](v0, v7, v1, v14) @signature [|Ljava/text/SimpleDateFormat;.parseNumber:(ILjava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8ea8.   v15:= temp  @type object;
#L0f8eaa.   if v15 != 0 then goto L0f8ebe;
#L0f8eae.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v14) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f8eb4.   v3:= temp;
#L0f8eb6.   v3:= -v3  @type int;
#L0f8eb8.   v19:= v3 + -1;
#L0f8ebc.   goto L0f8e58;
#L0f8ebe.   call temp:=  [|java:lang:Number.intValue|](v15) @signature [|Ljava/lang/Number;.intValue:()I|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f8ec4.   v16:= temp;
#L0f8ec6.   call temp:=  [|java:text:ParsePosition.getIndex|](v14) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f8ecc.   v3:= temp;
#L0f8ece.   v3:= v3 - v19  @type int;
#L0f8ed2.   v4:= 2  @length 4;
#L0f8ed4.   if v3 != v4 then goto L0f8f04;
#L0f8ed8.   if v16 < 0 then goto L0f8f04;
#L0f8edc.   v0:= v17  @type object;
#L0f8ee0.   v3:= v0.[|java:text:SimpleDateFormat.creationYear|] ;
#L0f8ee4.   v3:= v3 / 100;
#L0f8ee8.   v3:= v3 * 100;
#L0f8eec.   v16:= v16 + v3  @type int;
#L0f8ef0.   v0:= v17  @type object;
#L0f8ef4.   v3:= v0.[|java:text:SimpleDateFormat.creationYear|] ;
#L0f8ef8.   v0:= v16;
#L0f8efc.   if v0 >= v3 then goto L0f8f04;
#L0f8f00.   v16:= v16 + 100;
#L0f8f04.   v0:= v17  @type object;
#L0f8f08.   v3:= v0.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8f0c.   v4:= 1  @length 4;
#L0f8f0e.   v0:= v16;
#L0f8f12.   call temp:=  [|java:util:Calendar.set|](v3, v4, v0) @signature [|Ljava/util/Calendar;.set:(II)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8f18.   call temp:=  [|java:text:ParsePosition.getIndex|](v14) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f8f1e.   v19:= temp;
#L0f8f20.   goto L0f8e58;
#L0f8f22.   v0:= v17  @type object;
#L0f8f26.   v3:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8f2a.   v8:= v3.[|java:text:DateFormatSymbols.longStandAloneMonths|]   @type object;
#L0f8f2e.   v0:= v17  @type object;
#L0f8f32.   v3:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8f36.   v9:= v3.[|java:text:DateFormatSymbols.shortStandAloneMonths|]   @type object;
#L0f8f3a.   v3:= v17  @type object;
#L0f8f3e.   v4:= v18  @type object;
#L0f8f42.   v5:= v19;
#L0f8f46.   v6:= v21;
#L0f8f4a.   call temp:=  [|java:text:SimpleDateFormat.parseMonth|](v3, v4, v5, v6, v7, v8, v9) @signature [|Ljava/text/SimpleDateFormat;.parseMonth:(Ljava/lang/String;III[Ljava/lang/String;[Ljava/lang/String;)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8f50.   v19:= temp;
#L0f8f52.   goto L0f8e58;
#L0f8f54.   v0:= v17  @type object;
#L0f8f58.   v3:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8f5c.   v8:= v3.[|java:text:DateFormatSymbols.months|]   @type object;
#L0f8f60.   v0:= v17  @type object;
#L0f8f64.   v3:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f8f68.   v9:= v3.[|java:text:DateFormatSymbols.shortMonths|]   @type object;
#L0f8f6c.   v3:= v17  @type object;
#L0f8f70.   v4:= v18  @type object;
#L0f8f74.   v5:= v19;
#L0f8f78.   v6:= v21;
#L0f8f7c.   call temp:=  [|java:text:SimpleDateFormat.parseMonth|](v3, v4, v5, v6, v7, v8, v9) @signature [|Ljava/text/SimpleDateFormat;.parseMonth:(Ljava/lang/String;III[Ljava/lang/String;[Ljava/lang/String;)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8f82.   v19:= temp;
#L0f8f84.   goto L0f8e58;
#L0f8f88.   v10:= 5  @length 4;
#L0f8f8a.   goto L0f8e3c;
#L0f8f8e.   v14:= new [|java:text:ParsePosition|];
#L0f8f92.   v0:= v19;
#L0f8f96.   call temp:=  [|java:text:ParsePosition.<init>|](v14, v0) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f8f9c.   v0:= v17  @type object;
#L0f8fa0.   v1:= v18  @type object;
#L0f8fa4.   call temp:=  [|java:text:SimpleDateFormat.parseNumber|](v0, v7, v1, v14) @signature [|Ljava/text/SimpleDateFormat;.parseNumber:(ILjava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f8faa.   v15:= temp  @type object;
#L0f8fac.   if v15 != 0 then goto L0f8fc2;
#L0f8fb0.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v14) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f8fb6.   v3:= temp;
#L0f8fb8.   v3:= -v3  @type int;
#L0f8fba.   v19:= v3 + -1;
#L0f8fbe.   goto L0f8e58;
#L0f8fc2.   call temp:=  [|java:lang:Number.intValue|](v15) @signature [|Ljava/lang/Number;.intValue:()I|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f8fc8.   v12:= temp;
#L0f8fca.   v3:= 24  @length 16;
#L0f8fce.   if v12 != v3 then goto L0f8fd4;
#L0f8fd2.   v12:= 0  @length 4;
#L0f8fd4.   v0:= v17  @type object;
#L0f8fd8.   v3:= v0.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f8fdc.   v4:= 11  @length 16;
#L0f8fe0.   call temp:=  [|java:util:Calendar.set|](v3, v4, v12) @signature [|Ljava/util/Calendar;.set:(II)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f8fe6.   call temp:=  [|java:text:ParsePosition.getIndex|](v14) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f8fec.   v19:= temp;
#L0f8fee.   goto L0f8e58;
#L0f8ff2.   v10:= 11  @length 16;
#L0f8ff6.   goto L0f8e3c;
#L0f8ffa.   v10:= 12  @length 16;
#L0f8ffe.   goto L0f8e3c;
#L0f9002.   v10:= 13  @length 16;
#L0f9006.   goto L0f8e3c;
#L0f900a.   v10:= 14  @length 16;
#L0f900e.   goto L0f8e3c;
#L0f9012.   v0:= v17  @type object;
#L0f9016.   v3:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f901a.   v3:= v3.[|java:text:DateFormatSymbols.longStandAloneWeekdays|]   @type object;
#L0f901e.   v0:= v17  @type object;
#L0f9022.   v4:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f9026.   v4:= v4.[|java:text:DateFormatSymbols.shortStandAloneWeekdays|]   @type object;
#L0f902a.   v0:= v17  @type object;
#L0f902e.   v1:= v18  @type object;
#L0f9032.   v2:= v19;
#L0f9036.   call temp:=  [|java:text:SimpleDateFormat.parseDayOfWeek|](v0, v1, v2, v3, v4) @signature [|Ljava/text/SimpleDateFormat;.parseDayOfWeek:(Ljava/lang/String;I[Ljava/lang/String;[Ljava/lang/String;)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f903c.   v19:= temp;
#L0f903e.   goto L0f8e58;
#L0f9042.   v0:= v17  @type object;
#L0f9046.   v3:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f904a.   v3:= v3.[|java:text:DateFormatSymbols.weekdays|]   @type object;
#L0f904e.   v0:= v17  @type object;
#L0f9052.   v4:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f9056.   v4:= v4.[|java:text:DateFormatSymbols.shortWeekdays|]   @type object;
#L0f905a.   v0:= v17  @type object;
#L0f905e.   v1:= v18  @type object;
#L0f9062.   v2:= v19;
#L0f9066.   call temp:=  [|java:text:SimpleDateFormat.parseDayOfWeek|](v0, v1, v2, v3, v4) @signature [|Ljava/text/SimpleDateFormat;.parseDayOfWeek:(Ljava/lang/String;I[Ljava/lang/String;[Ljava/lang/String;)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f906c.   v19:= temp;
#L0f906e.   goto L0f8e58;
#L0f9072.   v10:= 6  @length 4;
#L0f9074.   goto L0f8e3c;
#L0f9078.   v10:= 8  @length 16;
#L0f907c.   goto L0f8e3c;
#L0f9080.   v10:= 3  @length 4;
#L0f9082.   goto L0f8e3c;
#L0f9086.   v10:= 4  @length 4;
#L0f9088.   goto L0f8e3c;
#L0f908c.   v0:= v17  @type object;
#L0f9090.   v3:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f9094.   v3:= v3.[|java:text:DateFormatSymbols.ampms|]   @type object;
#L0f9098.   v4:= 9  @length 16;
#L0f909c.   v0:= v17  @type object;
#L0f90a0.   v1:= v18  @type object;
#L0f90a4.   v2:= v19;
#L0f90a8.   call temp:=  [|java:text:SimpleDateFormat.parseText|](v0, v1, v2, v3, v4) @signature [|Ljava/text/SimpleDateFormat;.parseText:(Ljava/lang/String;I[Ljava/lang/String;I)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f90ae.   v19:= temp;
#L0f90b0.   goto L0f8e58;
#L0f90b4.   v14:= new [|java:text:ParsePosition|];
#L0f90b8.   v0:= v19;
#L0f90bc.   call temp:=  [|java:text:ParsePosition.<init>|](v14, v0) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f90c2.   v0:= v17  @type object;
#L0f90c6.   v1:= v18  @type object;
#L0f90ca.   call temp:=  [|java:text:SimpleDateFormat.parseNumber|](v0, v7, v1, v14) @signature [|Ljava/text/SimpleDateFormat;.parseNumber:(ILjava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f90d0.   v15:= temp  @type object;
#L0f90d2.   if v15 != 0 then goto L0f90e8;
#L0f90d6.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v14) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f90dc.   v3:= temp;
#L0f90de.   v3:= -v3  @type int;
#L0f90e0.   v19:= v3 + -1;
#L0f90e4.   goto L0f8e58;
#L0f90e8.   call temp:=  [|java:lang:Number.intValue|](v15) @signature [|Ljava/lang/Number;.intValue:()I|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f90ee.   v12:= temp;
#L0f90f0.   v3:= 12  @length 16;
#L0f90f4.   if v12 != v3 then goto L0f90fa;
#L0f90f8.   v12:= 0  @length 4;
#L0f90fa.   v0:= v17  @type object;
#L0f90fe.   v3:= v0.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f9102.   v4:= 10  @length 16;
#L0f9106.   call temp:=  [|java:util:Calendar.set|](v3, v4, v12) @signature [|Ljava/util/Calendar;.set:(II)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f910c.   call temp:=  [|java:text:ParsePosition.getIndex|](v14) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f9112.   v19:= temp;
#L0f9114.   goto L0f8e58;
#L0f9118.   v10:= 10  @length 16;
#L0f911c.   goto L0f8e3c;
#L0f9120.   call temp:=  [|java:text:SimpleDateFormat.parseTimeZone|](v17, v18, v19) @signature [|Ljava/text/SimpleDateFormat;.parseTimeZone:(Ljava/lang/String;I)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9126.   v19:= temp;
#L0f9128.   goto L0f8e58;
#L0f912c.   call temp:=  [|java:text:SimpleDateFormat.parseTimeZone|](v17, v18, v19) @signature [|Ljava/text/SimpleDateFormat;.parseTimeZone:(Ljava/lang/String;I)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9132.   v19:= temp;
#L0f9134.   goto L0f8e58;
#L0f9138.   switch  v13
                 | 0 => goto L0f8e5a
                 | 1 => goto L0f8e7e
                 | 2 => goto L0f8f54
                 | 3 => goto L0f8f88
                 | 4 => goto L0f8f8e
                 | 5 => goto L0f8ff2
                 | 6 => goto L0f8ffa
                 | 7 => goto L0f9002
                 | 8 => goto L0f900a
                 | 9 => goto L0f9042
                 | 10 => goto L0f9072
                 | 11 => goto L0f9078
                 | 12 => goto L0f9080
                 | 13 => goto L0f9086
                 | 14 => goto L0f908c
                 | 15 => goto L0f90b4
                 | 16 => goto L0f9118
                 | 17 => goto L0f9120
                 | 18 => goto L0f912c
                 | 19 => goto L0f8f22
                 | 20 => goto L0f9012
                 | => goto L0f8e3c;

   }
    procedure [|int|] [|java:text:SimpleDateFormat.parseDayOfWeek|] ([|java:text:SimpleDateFormat|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|int|] v4, [|java:lang:String|][] v5 @type (object), [|java:lang:String|][] v6 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.parseDayOfWeek:(Ljava/lang/String;I[Ljava/lang/String;[Ljava/lang/String;)I|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|index|] @scope ((L0005,L000c));





        v1;
      
#L0f91a4.   v1:= 7  @length 4;
#L0f91a6.   call temp:=  [|java:text:SimpleDateFormat.parseText|](v2, v3, v4, v5, v1) @signature [|Ljava/text/SimpleDateFormat;.parseText:(Ljava/lang/String;I[Ljava/lang/String;I)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f91ac.   v0:= temp;
#L0f91ae.   if v0 >= 0 then goto L0f91ba;
#L0f91b2.   call temp:=  [|java:text:SimpleDateFormat.parseText|](v2, v3, v4, v6, v1) @signature [|Ljava/text/SimpleDateFormat;.parseText:(Ljava/lang/String;I[Ljava/lang/String;I)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f91b8.   v0:= temp;
#L0f91ba.   return v0;

   }
    procedure [|int|] [|java:text:SimpleDateFormat.parseMonth|] ([|java:text:SimpleDateFormat|] v7 @type (this), [|java:lang:String|] v8 @type (object), [|int|] v9, [|int|] v10, [|int|] v11, [|java:lang:String|][] v12 @type (object), [|java:lang:String|][] v13 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.parseMonth:(Ljava/lang/String;III[Ljava/lang/String;[Ljava/lang/String;)I|] @Access PRIVATE {
      local temp ;
        [|int|] v6 @varname [|index|] @scope ((L0011,L0018));







        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L0f91cc.   v4:= 2  @length 4;
#L0f91ce.   if v10 > v4 then goto L0f91e6;
#L0f91d2.   v5:= -1  @length 4;
#L0f91d4.   v0:= v7  @type object;
#L0f91d6.   v1:= v11;
#L0f91d8.   v2:= v8  @type object;
#L0f91da.   v3:= v9;
#L0f91dc.   call temp:=  [|java:text:SimpleDateFormat.parseNumber|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/text/SimpleDateFormat;.parseNumber:(ILjava/lang/String;III)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f91e2.   v6:= temp;
#L0f91e4.   return v6;
#L0f91e6.   call temp:=  [|java:text:SimpleDateFormat.parseText|](v7, v8, v9, v12, v4) @signature [|Ljava/text/SimpleDateFormat;.parseText:(Ljava/lang/String;I[Ljava/lang/String;I)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f91ec.   v6:= temp;
#L0f91ee.   if v6 >= 0 then goto L0f91e4;
#L0f91f2.   call temp:=  [|java:text:SimpleDateFormat.parseText|](v7, v8, v9, v13, v4) @signature [|Ljava/text/SimpleDateFormat;.parseText:(Ljava/lang/String;I[Ljava/lang/String;I)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f91f8.   v6:= temp;
#L0f91fa.   goto L0f91e4;

   }
    procedure [|int|] [|java:text:SimpleDateFormat.parseNumber|] ([|java:text:SimpleDateFormat|] v4 @type (this), [|int|] v5, [|java:lang:String|] v6 @type (object), [|int|] v7, [|int|] v8, [|int|] v9) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.parseNumber:(ILjava/lang/String;III)I|] @Access PRIVATE {
      local temp ;
        [|java:text:ParsePosition|] v0 @varname [|position|] @scope ((L0005,L0022));
        [|java:lang:Number|] v1 @varname [|result|] @scope ((L0009,L0022));






        v2;
        v3;
      
#L0f920c.   v0:= new [|java:text:ParsePosition|];
#L0f9210.   call temp:=  [|java:text:ParsePosition.<init>|](v0, v7) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f9216.   call temp:=  [|java:text:SimpleDateFormat.parseNumber|](v4, v5, v6, v0) @signature [|Ljava/text/SimpleDateFormat;.parseNumber:(ILjava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f921c.   v1:= temp  @type object;
#L0f921e.   if v1 != 0 then goto L0f9232;
#L0f9222.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v0) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f9228.   v2:= temp;
#L0f922a.   v2:= -v2  @type int;
#L0f922c.   v2:= v2 + -1;
#L0f9230.   return v2;
#L0f9232.   v2:= v4.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f9236.   call temp:=  [|java:lang:Number.intValue|](v1) @signature [|Ljava/lang/Number;.intValue:()I|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f923c.   v3:= temp;
#L0f923e.   v3:= v3 + v9  @type int;
#L0f9240.   call temp:=  [|java:util:Calendar.set|](v2, v8, v3) @signature [|Ljava/util/Calendar;.set:(II)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f9246.   call temp:=  [|java:text:ParsePosition.getIndex|](v0) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f924c.   v2:= temp;
#L0f924e.   goto L0f9230;

   }
    procedure [|java:lang:Number|] [|java:text:SimpleDateFormat.parseNumber|] ([|java:text:SimpleDateFormat|] v12 @type (this), [|int|] v13, [|java:lang:String|] v14 @type (object), [|java:text:ParsePosition|] v15 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.parseNumber:(ILjava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @Access PRIVATE {
      local temp ;
        [|java:text:DecimalFormat|] v0 @varname [|df|] @scope ((L0046,L006c));
        [|char|] v3 @varname [|lastChar|] @scope ((L0050,L006c));
        [|char|] v5 @varname [|minusSign|] @scope ((L0058,L006c));
        [|java:lang:Number|] v6 @varname [|n|] @scope ((L0030,L006c));
        [|int|] v1 @varname [|digit|] @scope ((L007a,L0084));
        [|int|] v2 @varname [|index|] @scope ((L0008,L0097));
        [|int|] v4 @varname [|length|] @scope ((L0004,L0097));
        [|int|] v7 @varname [|result|] @scope ((L006e,L0097));




        v8;
        v9;
        v10;
        v11;
      
#L0f9260.   call temp:=  [|java:lang:String.length|](v14) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9266.   v4:= temp;
#L0f9268.   call temp:=  [|java:text:ParsePosition.getIndex|](v15) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f926e.   v2:= temp;
#L0f9270.   if v13 <= 0 then goto L0f9280;
#L0f9274.   v8:= v4 - v2  @type int;
#L0f9278.   if v13 >= v8 then goto L0f9280;
#L0f927c.   v4:= v2 + v13  @type int;
#L0f9280.   if v2 >= v4 then goto L0f92aa;
#L0f9284.   call temp:=  [|java:lang:String.charAt|](v14, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f928a.   v8:= temp;
#L0f928c.   v9:= 32  @length 16;
#L0f9290.   if v8 == v9 then goto L0f92a4;
#L0f9294.   call temp:=  [|java:lang:String.charAt|](v14, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f929a.   v8:= temp;
#L0f929c.   v9:= 9  @length 16;
#L0f92a0.   if v8 != v9 then goto L0f92aa;
#L0f92a4.   v2:= v2 + 1;
#L0f92a8.   goto L0f9280;
#L0f92aa.   if v13 != 0 then goto L0f933a;
#L0f92ae.   call temp:=  [|java:text:ParsePosition.setIndex|](v15, v2) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f92b4.   v8:= v12.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f92b8.   call temp:=  [|java:text:NumberFormat.parse|](v8, v14, v15) @signature [|Ljava/text/NumberFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f92be.   v6:= temp  @type object;
#L0f92c0.   if v6 == 0 then goto L0f9338;
#L0f92c4.   call temp:=  [|java:lang:Number.longValue|](v6) @signature [|Ljava/lang/Number;.longValue:()J|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f92ca.   v8:= temp  @type wide;
#L0f92cc.   v10:= 0  @length wide16;
#L0f92d0.   v8:= cmp(v8,v10);
#L0f92d4.   if v8 >= 0 then goto L0f9338;
#L0f92d8.   v8:= v12.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f92dc.   v8:= instanceof @varname v8 @type [|java:text:DecimalFormat|];
#L0f92e0.   if v8 == 0 then goto L0f9338;
#L0f92e4.   v0:= v12.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f92e8.   v0:= ([|java:text:DecimalFormat|])v0;
#L0f92ec.   call temp:=  [|java:text:ParsePosition.getIndex|](v15) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f92f2.   v8:= temp;
#L0f92f4.   v8:= v8 + -1;
#L0f92f8.   call temp:=  [|java:lang:String.charAt|](v14, v8) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f92fe.   v3:= temp;
#L0f9300.   call temp:=  [|java:text:DecimalFormat.getDecimalFormatSymbols|](v0) @signature [|Ljava/text/DecimalFormat;.getDecimalFormatSymbols:()Ljava/text/DecimalFormatSymbols;|] @classDescriptor [|java:text:DecimalFormat|] @type virtual;
#L0f9306.   v8:= temp  @type object;
#L0f9308.   call temp:=  [|java:text:DecimalFormatSymbols.getMinusSign|](v8) @signature [|Ljava/text/DecimalFormatSymbols;.getMinusSign:()C|] @classDescriptor [|java:text:DecimalFormatSymbols|] @type virtual;
#L0f930e.   v5:= temp;
#L0f9310.   if v3 != v5 then goto L0f9338;
#L0f9314.   call temp:=  [|java:lang:Number.longValue|](v6) @signature [|Ljava/lang/Number;.longValue:()J|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f931a.   v8:= temp  @type wide;
#L0f931c.   v8:= -v8  @type long;
#L0f931e.   call temp:=  [|java:lang:Long.valueOf|](v8, v9) @signature [|Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;|] @classDescriptor [|java:lang:Long|] @type static;
#L0f9324.   v6:= temp  @type object;
#L0f9326.   call temp:=  [|java:text:ParsePosition.getIndex|](v15) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f932c.   v8:= temp;
#L0f932e.   v8:= v8 + -1;
#L0f9332.   call temp:=  [|java:text:ParsePosition.setIndex|](v15, v8) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f9338.   return v6  @type object;
#L0f933a.   v7:= 0  @length 4;
#L0f933c.   if v2 >= v4 then goto L0f9368;
#L0f9340.   call temp:=  [|java:lang:String.charAt|](v14, v2) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9346.   v8:= temp;
#L0f9348.   v9:= 10  @length 16;
#L0f934c.   call temp:=  [|java:lang:Character.digit|](v8, v9) @signature [|Ljava/lang/Character;.digit:(CI)I|] @classDescriptor [|java:lang:Character|] @type static;
#L0f9352.   v1:= temp;
#L0f9354.   v8:= -1  @length 4;
#L0f9356.   if v1 == v8 then goto L0f9368;
#L0f935a.   v8:= v7 * 10;
#L0f935e.   v7:= v8 + v1  @type int;
#L0f9362.   v2:= v2 + 1;
#L0f9366.   goto L0f933c;
#L0f9368.   call temp:=  [|java:text:ParsePosition.getIndex|](v15) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f936e.   v8:= temp;
#L0f9370.   if v2 != v8 then goto L0f937e;
#L0f9374.   call temp:=  [|java:text:ParsePosition.setErrorIndex|](v15, v2) @signature [|Ljava/text/ParsePosition;.setErrorIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f937a.   v6:= 0  @length 4;
#L0f937c.   goto L0f9338;
#L0f937e.   call temp:=  [|java:text:ParsePosition.setIndex|](v15, v2) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f9384.   call temp:=  [|java:lang:Integer.valueOf|](v7) @signature [|Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;|] @classDescriptor [|java:lang:Integer|] @type static;
#L0f938a.   v6:= temp  @type object;
#L0f938c.   goto L0f9338;

   }
    procedure [|int|] [|java:text:SimpleDateFormat.parseText|] ([|java:text:SimpleDateFormat|] v9 @type (this), [|java:lang:String|] v10 @type (object), [|int|] v11, [|java:lang:String|][] v12 @type (object), [|int|] v13) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.parseText:(Ljava/lang/String;I[Ljava/lang/String;I)I|] @Access PRIVATE {
      local temp ;
        [|int|] v6 @varname [|found|] @scope ((L0002,L0048));
        [|int|] v7 @varname [|i|] @scope ((L0003,L0048));





        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v8;
      
#L0f93a0.   v8:= -1  @length 4;
#L0f93a2.   v6:= -1  @length 4;
#L0f93a4.   v7:= 0  @length 4;
#L0f93a6.   v0:= v12.length;
#L0f93a8.   if v7 >= v0 then goto L0f940a;
#L0f93ac.   v0:= v12[v7]  @type object;
#L0f93b0.   call temp:=  [|java:lang:String.isEmpty|](v0) @signature [|Ljava/lang/String;.isEmpty:()Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f93b6.   v0:= temp;
#L0f93b8.   if v0 == 0 then goto L0f93c2;
#L0f93bc.   v7:= v7 + 1;
#L0f93c0.   goto L0f93a6;
#L0f93c2.   v1:= 1  @length 4;
#L0f93c4.   v3:= v12[v7]  @type object;
#L0f93c8.   v4:= 0  @length 4;
#L0f93ca.   v0:= v12[v7]  @type object;
#L0f93ce.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f93d4.   v5:= temp;
#L0f93d6.   v0:= v10  @type object;
#L0f93d8.   v2:= v11;
#L0f93da.   call temp:=  [|java:lang:String.regionMatches|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f93e0.   v0:= temp;
#L0f93e2.   if v0 == 0 then goto L0f93bc;
#L0f93e6.   if v6 == v8 then goto L0f9406;
#L0f93ea.   v0:= v12[v7]  @type object;
#L0f93ee.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f93f4.   v0:= temp;
#L0f93f6.   v1:= v12[v6]  @type object;
#L0f93fa.   call temp:=  [|java:lang:String.length|](v1) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9400.   v1:= temp;
#L0f9402.   if v0 <= v1 then goto L0f93bc;
#L0f9406.   v6:= v7;
#L0f9408.   goto L0f93bc;
#L0f940a.   if v6 == v8 then goto L0f9428;
#L0f940e.   v0:= v9.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f9412.   call temp:=  [|java:util:Calendar.set|](v0, v13, v6) @signature [|Ljava/util/Calendar;.set:(II)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f9418.   v0:= v12[v6]  @type object;
#L0f941c.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9422.   v0:= temp;
#L0f9424.   v0:= v0 + v11  @type int;
#L0f9426.   return v0;
#L0f9428.   v0:= -v11  @type int;
#L0f942a.   v0:= v0 + -1;
#L0f942e.   goto L0f9426;

   }
    procedure [|int|] [|java:text:SimpleDateFormat.parseTimeZone|] ([|java:text:SimpleDateFormat|] v24 @type (this), [|java:lang:String|] v25 @type (object), [|int|] v26) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.parseTimeZone:(Ljava/lang/String;I)I|] @Access PRIVATE {
      local temp ;
        [|java:text:ParsePosition|] v18 @varname [|position|] @scope ((L0031,L0046), (L0047,L00bf));
        [|java:lang:Number|] v20 @varname [|result|] @scope ((L003d,L0046), (L0047,L00bf));
        [|char|] v21 @varname [|sign|] @scope ((L001c,L0046), (L0047,L00bf));

        [|int|] v17 @varname [|minute|] @scope ((L0085,L008c));
        [|int|] v12 @varname [|hour|] @scope ((L004b,L00bf));
        [|int|] v14 @varname [|index|] @scope ((L0054,L00bf));
        [|int|] v19 @varname [|raw|] @scope ((L0050,L00bf), (L0110,L013b));
        [|int|] v9 @varname [|dstSavings|] @scope ((L011a,L0121));
        [|java:util:TimeZone|] v22 @varname [|zone|] @scope ((L0103,L013b));
        [|java:lang:String|][] v10 @varname [|element|] @scope ((L00e4,L0141));
        [|int|] v15 @varname [|j|] @scope ((L00e5,L0141));
        [|java:lang:String|][][] v8 @varname [|arr$|] @scope ((L00da,L0148));
        [|boolean|] v11 @varname [|foundGMT|] @scope ((L000c,L0148));
        [|int|] v13 @varname [|i$|] @scope ((L00de,L0148));
        [|int|] v16 @varname [|len$|] @scope ((L00dd,L0148));
        [|java:lang:String|][][] v23 @varname [|zones|] @scope ((L00d8,L0148));



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L0f9440.   v2:= "GMT" @type (object, string);
#L0f9444.   v3:= 0  @length 4;
#L0f9446.   v4:= 3  @length 4;
#L0f9448.   v0:= v25  @type object;
#L0f944c.   v1:= v26;
#L0f9450.   call temp:=  [|java:lang:String.regionMatches|](v0, v1, v2, v3, v4) @signature [|Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9456.   v11:= temp;
#L0f9458.   if v11 == 0 then goto L0f9460;
#L0f945c.   v26:= v26 + 3;
#L0f9460.   call temp:=  [|java:lang:String.length|](v25) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9466.   v2:= temp;
#L0f9468.   v0:= v26;
#L0f946c.   if v0 >= v2 then goto L0f95be;
#L0f9470.   call temp:=  [|java:lang:String.charAt|](v25, v26) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9476.   v21:= temp;
#L0f9478.   v2:= 43  @length 16;
#L0f947c.   v0:= v21;
#L0f9480.   if v0 == v2 then goto L0f9490;
#L0f9484.   v2:= 45  @length 16;
#L0f9488.   v0:= v21;
#L0f948c.   if v0 != v2 then goto L0f95be;
#L0f9490.   v18:= new [|java:text:ParsePosition|];
#L0f9494.   v2:= v26 + 1;
#L0f9498.   v0:= v18  @type object;
#L0f949c.   call temp:=  [|java:text:ParsePosition.<init>|](v0, v2) @signature [|Ljava/text/ParsePosition;.<init>:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type direct;
#L0f94a2.   v0:= v24  @type object;
#L0f94a6.   v2:= v0.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f94aa.   v0:= v25  @type object;
#L0f94ae.   v1:= v18  @type object;
#L0f94b2.   call temp:=  [|java:text:NumberFormat.parse|](v2, v0, v1) @signature [|Ljava/text/NumberFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f94b8.   v20:= temp  @type object;
#L0f94ba.   if v20 != 0 then goto L0f94ce;
#L0f94be.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v18) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f94c4.   v2:= temp;
#L0f94c6.   v2:= -v2  @type int;
#L0f94c8.   v26:= v2 + -1;
#L0f94cc.   return v26;
#L0f94ce.   call temp:=  [|java:lang:Number.intValue|](v20) @signature [|Ljava/lang/Number;.intValue:()I|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f94d4.   v12:= temp;
#L0f94d6.    v2:= 0.000000;
#L0f94dc.   v19:= v12 * v2  @type int;
#L0f94e0.   call temp:=  [|java:text:ParsePosition.getIndex|](v18) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f94e6.   v14:= temp;
#L0f94e8.   call temp:=  [|java:lang:String.length|](v25) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f94ee.   v2:= temp;
#L0f94f0.   if v14 >= v2 then goto L0f9598;
#L0f94f4.   v0:= v25  @type object;
#L0f94f8.   call temp:=  [|java:lang:String.charAt|](v0, v14) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f94fe.   v2:= temp;
#L0f9500.   v3:= 58  @length 16;
#L0f9504.   if v2 != v3 then goto L0f9598;
#L0f9508.   v2:= v14 + 1;
#L0f950c.   v0:= v18  @type object;
#L0f9510.   call temp:=  [|java:text:ParsePosition.setIndex|](v0, v2) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f9516.   v0:= v24  @type object;
#L0f951a.   v2:= v0.[|java:text:SimpleDateFormat.numberFormat|]   @type object;
#L0f951e.   v0:= v25  @type object;
#L0f9522.   v1:= v18  @type object;
#L0f9526.   call temp:=  [|java:text:NumberFormat.parse|](v2, v0, v1) @signature [|Ljava/text/NumberFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;|] @classDescriptor [|java:text:NumberFormat|] @type virtual;
#L0f952c.   v20:= temp  @type object;
#L0f952e.   if v20 != 0 then goto L0f9542;
#L0f9532.   call temp:=  [|java:text:ParsePosition.getErrorIndex|](v18) @signature [|Ljava/text/ParsePosition;.getErrorIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f9538.   v2:= temp;
#L0f953a.   v2:= -v2  @type int;
#L0f953c.   v26:= v2 + -1;
#L0f9540.   goto L0f94cc;
#L0f9542.   call temp:=  [|java:lang:Number.intValue|](v20) @signature [|Ljava/lang/Number;.intValue:()I|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f9548.   v17:= temp;
#L0f954a.    v2:= 0.000000;
#L0f9550.   v2:= v2 * v17  @type int;
#L0f9554.   v19:= v19 + v2  @type int;
#L0f9558.   v2:= 45  @length 16;
#L0f955c.   v0:= v21;
#L0f9560.   if v0 != v2 then goto L0f956e;
#L0f9564.   v0:= v19;
#L0f9568.   v0:= -v0  @type int;
#L0f956a.   v19:= v0;
#L0f956e.   v0:= v24  @type object;
#L0f9572.   v2:= v0.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f9576.   v3:= new [|java:util:SimpleTimeZone|];
#L0f957a.   v4:= "" @type (object, string);
#L0f957e.   v0:= v19;
#L0f9582.   call temp:=  [|java:util:SimpleTimeZone.<init>|](v3, v0, v4) @signature [|Ljava/util/SimpleTimeZone;.<init>:(ILjava/lang/String;)V|] @classDescriptor [|java:util:SimpleTimeZone|] @type direct;
#L0f9588.   call temp:=  [|java:util:Calendar.setTimeZone|](v2, v3) @signature [|Ljava/util/Calendar;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f958e.   call temp:=  [|java:text:ParsePosition.getIndex|](v18) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f9594.   v26:= temp;
#L0f9596.   goto L0f94cc;
#L0f9598.   v2:= 24  @length 16;
#L0f959c.   if v12 < v2 then goto L0f9558;
#L0f95a0.   v2:= v12 / 100;
#L0f95a4.    v3:= 0.000000;
#L0f95aa.   v2:= v2 * v3  @type int;
#L0f95ac.   v3:= v12 % 100;
#L0f95b0.    v4:= 0.000000;
#L0f95b6.   v3:= v3 * v4  @type int;
#L0f95b8.   v19:= v2 + v3  @type int;
#L0f95bc.   goto L0f9558;
#L0f95be.   if v11 == 0 then goto L0f95e0;
#L0f95c2.   v0:= v24  @type object;
#L0f95c6.   v2:= v0.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f95ca.   v3:= "GMT" @type (object, string);
#L0f95ce.   call temp:=  [|java:util:TimeZone.getTimeZone|](v3) @signature [|Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;|] @classDescriptor [|java:util:TimeZone|] @type static;
#L0f95d4.   v3:= temp  @type object;
#L0f95d6.   call temp:=  [|java:util:Calendar.setTimeZone|](v2, v3) @signature [|Ljava/util/Calendar;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f95dc.   goto L0f94cc;
#L0f95e0.   v0:= v24  @type object;
#L0f95e4.   v2:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f95e8.   call temp:=  [|java:text:DateFormatSymbols.internalZoneStrings|](v2) @signature [|Ljava/text/DateFormatSymbols;.internalZoneStrings:()[[Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f95ee.   v23:= temp  @type object;
#L0f95f0.   v8:= v23  @type object;
#L0f95f4.   v0:= v8.length;
#L0f95f6.   v16:= v0;
#L0f95fa.   v13:= 0  @length 4;
#L0f95fc.   v0:= v16;
#L0f9600.   if v13 >= v0 then goto L0f96c2;
#L0f9604.   v10:= v8[v13]  @type object;
#L0f9608.   v15:= 1  @length 4;
#L0f960a.   v2:= 5  @length 4;
#L0f960c.   if v15 >= v2 then goto L0f96bc;
#L0f9610.   v3:= 1  @length 4;
#L0f9612.   v5:= v10[v15]  @type object;
#L0f9616.   v6:= 0  @length 4;
#L0f9618.   v2:= v10[v15]  @type object;
#L0f961c.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9622.   v7:= temp;
#L0f9624.   v2:= v25  @type object;
#L0f9628.   v4:= v26;
#L0f962c.   call temp:=  [|java:lang:String.regionMatches|](v2, v3, v4, v5, v6, v7) @signature [|Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9632.   v2:= temp;
#L0f9634.   if v2 == 0 then goto L0f96b6;
#L0f9638.   v2:= 0  @length 4;
#L0f963a.   v2:= v10[v2]  @type object;
#L0f963e.   call temp:=  [|java:util:TimeZone.getTimeZone|](v2) @signature [|Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;|] @classDescriptor [|java:util:TimeZone|] @type static;
#L0f9644.   v22:= temp  @type object;
#L0f9646.   if v22 != 0 then goto L0f9658;
#L0f964a.   v0:= v26;
#L0f964e.   v2:= -v0  @type int;
#L0f9650.   v26:= v2 + -1;
#L0f9654.   goto L0f94cc;
#L0f9658.   call temp:=  [|java:util:TimeZone.getRawOffset|](v22) @signature [|Ljava/util/TimeZone;.getRawOffset:()I|] @classDescriptor [|java:util:TimeZone|] @type virtual;
#L0f965e.   v19:= temp;
#L0f9660.   v2:= 3  @length 4;
#L0f9662.   if v15 == v2 then goto L0f966c;
#L0f9666.   v2:= 4  @length 4;
#L0f9668.   if v15 != v2 then goto L0f9682;
#L0f966c.   call temp:=  [|java:util:TimeZone.getDSTSavings|](v22) @signature [|Ljava/util/TimeZone;.getDSTSavings:()I|] @classDescriptor [|java:util:TimeZone|] @type virtual;
#L0f9672.   v9:= temp;
#L0f9674.   if v9 != 0 then goto L0f967e;
#L0f9678.    v9:= 0.000000;
#L0f967e.   v19:= v19 + v9  @type int;
#L0f9682.   v0:= v24  @type object;
#L0f9686.   v2:= v0.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f968a.   v3:= new [|java:util:SimpleTimeZone|];
#L0f968e.   v4:= "" @type (object, string);
#L0f9692.   v0:= v19;
#L0f9696.   call temp:=  [|java:util:SimpleTimeZone.<init>|](v3, v0, v4) @signature [|Ljava/util/SimpleTimeZone;.<init>:(ILjava/lang/String;)V|] @classDescriptor [|java:util:SimpleTimeZone|] @type direct;
#L0f969c.   call temp:=  [|java:util:Calendar.setTimeZone|](v2, v3) @signature [|Ljava/util/Calendar;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f96a2.   v2:= v10[v15]  @type object;
#L0f96a6.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f96ac.   v2:= temp;
#L0f96ae.   v26:= v26 + v2  @type int;
#L0f96b2.   goto L0f94cc;
#L0f96b6.   v15:= v15 + 1;
#L0f96ba.   goto L0f960a;
#L0f96bc.   v13:= v13 + 1;
#L0f96c0.   goto L0f95fc;
#L0f96c2.   v0:= v26;
#L0f96c6.   v2:= -v0  @type int;
#L0f96c8.   v26:= v2 + -1;
#L0f96cc.   goto L0f94cc;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.readObject|] ([|java:text:SimpleDateFormat|] v5 @type (this), [|java:io:ObjectInputStream|] v6 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        [|java:util:Date|] v0 @varname [|date|] @scope ((L001a,L0035), (L003a,L003b));
        [|java:io:ObjectInputStream$GetField|] v1 @varname [|fields|] @scope ((L0004,L003b));
        [|int|] v2 @varname [|version|] @scope ((L000b,L003b));


        v3;
        v4;
      
#L0f96e0.   call temp:=  [|java:io:ObjectInputStream.readFields|](v6) @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L0f96e6.   v1:= temp  @type object;
#L0f96e8.   v3:= "serialVersionOnStream" @type (object, string);
#L0f96ec.   v4:= 0  @length 4;
#L0f96ee.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;I)I|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f96f4.   v2:= temp;
#L0f96f6.   if v2 <= 0 then goto L0f974a;
#L0f96fa.   v3:= "defaultCenturyStart" @type (object, string);
#L0f96fe.   v4:= new [|java:util:Date|];
#L0f9702.   call temp:=  [|java:util:Date.<init>|](v4) @signature [|Ljava/util/Date;.<init>:()V|] @classDescriptor [|java:util:Date|] @type direct;
#L0f9708.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f970e.   v0:= temp  @type object;
#L0f9710.   v0:= ([|java:util:Date|])v0;
#L0f9714.   call temp:=  [|java:text:SimpleDateFormat.set2DigitYearStart|](v5, v0) @signature [|Ljava/text/SimpleDateFormat;.set2DigitYearStart:(Ljava/util/Date;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type virtual;
#L0f971a.   v3:= "formatData" @type (object, string);
#L0f971e.   v4:= 0  @length 4;
#L0f9720.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f9726.   v3:= temp  @type object;
#L0f9728.   v3:= ([|java:text:DateFormatSymbols|])v3;
#L0f972c.   v5.[|java:text:SimpleDateFormat.formatData|]  := v3 @type object;
#L0f9730.   v3:= "pattern" @type (object, string);
#L0f9734.   v4:= "" @type (object, string);
#L0f9738.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v1, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L0f973e.   v3:= temp  @type object;
#L0f9740.   v3:= ([|java:lang:String|])v3;
#L0f9744.   v5.[|java:text:SimpleDateFormat.pattern|]  := v3 @type object;
#L0f9748.   return @void ;
#L0f974a.   v0:= new [|java:util:Date|];
#L0f974e.   call temp:=  [|java:util:Date.<init>|](v0) @signature [|Ljava/util/Date;.<init>:()V|] @classDescriptor [|java:util:Date|] @type direct;
#L0f9754.   goto L0f9714;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.validateFormat|] ([|java:text:SimpleDateFormat|] v4 @type (this), [|char|] v5) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.validateFormat:(C)V|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|index|] @scope ((L0006,L0029));


        v1;
        v2;
        v3;
      
#L0f9768.   v1:= "GyMdkHmsSEDFwWahKzZLc" @type (object, string);
#L0f976c.   call temp:=  [|java:lang:String.indexOf|](v1, v5) @signature [|Ljava/lang/String;.indexOf:(I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9772.   v0:= temp;
#L0f9774.   v1:= -1  @length 4;
#L0f9776.   if v0 != v1 then goto L0f97b8;
#L0f977a.   v1:= new [|java:lang:IllegalArgumentException|];
#L0f977e.   v2:= new [|java:lang:StringBuilder|];
#L0f9782.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0f9788.   v3:= "Unknown pattern character '" @type (object, string);
#L0f978c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f9792.   v2:= temp  @type object;
#L0f9794.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f979a.   v2:= temp  @type object;
#L0f979c.   v3:= "'" @type (object, string);
#L0f97a0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f97a6.   v2:= temp  @type object;
#L0f97a8.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0f97ae.   v2:= temp  @type object;
#L0f97b0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f97b6.   throw v1;
#L0f97b8.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.validatePattern|] ([|java:text:SimpleDateFormat|] v8 @type (this), [|java:lang:String|] v9 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.validatePattern:(Ljava/lang/String;)V|] @Access PRIVATE {
      local temp ;
        [|int|] v3 @varname [|next|] @scope ((L000e,L0051));
        [|int|] v0 @varname [|count|] @scope ((L0003,L0062));
        [|int|] v1 @varname [|i|] @scope ((L0008,L0062));
        [|int|] v2 @varname [|last|] @scope ((L0002,L0062));
        [|int|] v4 @varname [|patternLength|] @scope ((L0007,L0062));
        [|boolean|] v5 @varname [|quote|] @scope ((L0001,L0062));


        v6;
        v7;
      
#L0f97cc.   v5:= 0  @length 4;
#L0f97ce.   v2:= -1  @length 4;
#L0f97d0.   v0:= 0  @length 4;
#L0f97d2.   call temp:=  [|java:lang:String.length|](v9) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f97d8.   v4:= temp;
#L0f97da.   v1:= 0  @length 4;
#L0f97dc.   if v1 >= v4 then goto L0f986e;
#L0f97e0.   call temp:=  [|java:lang:String.charAt|](v9, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f97e6.   v3:= temp;
#L0f97e8.   v6:= 39  @length 16;
#L0f97ec.   if v3 != v6 then goto L0f9818;
#L0f97f0.   if v0 <= 0 then goto L0f97fe;
#L0f97f4.   v6:= (char)v2  @type i2c;
#L0f97f6.   call temp:=  [|java:text:SimpleDateFormat.validateFormat|](v8, v6) @signature [|Ljava/text/SimpleDateFormat;.validateFormat:(C)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f97fc.   v0:= 0  @length 4;
#L0f97fe.   if v2 != v3 then goto L0f9810;
#L0f9802.   v2:= -1  @length 4;
#L0f9804.   if v5 != 0 then goto L0f9814;
#L0f9808.   v5:= 1  @length 4;
#L0f980a.   v1:= v1 + 1;
#L0f980e.   goto L0f97dc;
#L0f9810.   v2:= v3;
#L0f9812.   goto L0f9804;
#L0f9814.   v5:= 0  @length 4;
#L0f9816.   goto L0f980a;
#L0f9818.   if v5 != 0 then goto L0f985c;
#L0f981c.   if v2 == v3 then goto L0f9840;
#L0f9820.   v6:= 97  @length 16;
#L0f9824.   if v3 < v6 then goto L0f9830;
#L0f9828.   v6:= 122  @length 16;
#L0f982c.   if v3 <= v6 then goto L0f9840;
#L0f9830.   v6:= 65  @length 16;
#L0f9834.   if v3 < v6 then goto L0f985c;
#L0f9838.   v6:= 90  @length 16;
#L0f983c.   if v3 > v6 then goto L0f985c;
#L0f9840.   if v2 != v3 then goto L0f984a;
#L0f9844.   v0:= v0 + 1;
#L0f9848.   goto L0f980a;
#L0f984a.   if v0 <= 0 then goto L0f9856;
#L0f984e.   v6:= (char)v2  @type i2c;
#L0f9850.   call temp:=  [|java:text:SimpleDateFormat.validateFormat|](v8, v6) @signature [|Ljava/text/SimpleDateFormat;.validateFormat:(C)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9856.   v2:= v3;
#L0f9858.   v0:= 1  @length 4;
#L0f985a.   goto L0f980a;
#L0f985c.   if v0 <= 0 then goto L0f986a;
#L0f9860.   v6:= (char)v2  @type i2c;
#L0f9862.   call temp:=  [|java:text:SimpleDateFormat.validateFormat|](v8, v6) @signature [|Ljava/text/SimpleDateFormat;.validateFormat:(C)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9868.   v0:= 0  @length 4;
#L0f986a.   v2:= -1  @length 4;
#L0f986c.   goto L0f980a;
#L0f986e.   if v0 <= 0 then goto L0f987a;
#L0f9872.   v6:= (char)v2  @type i2c;
#L0f9874.   call temp:=  [|java:text:SimpleDateFormat.validateFormat|](v8, v6) @signature [|Ljava/text/SimpleDateFormat;.validateFormat:(C)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f987a.   if v5 == 0 then goto L0f988e;
#L0f987e.   v6:= new [|java:lang:IllegalArgumentException|];
#L0f9882.   v7:= "Unterminated quote" @type (object, string);
#L0f9886.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6, v7) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f988c.   throw v6;
#L0f988e.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.writeObject|] ([|java:text:SimpleDateFormat|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        [|java:io:ObjectOutputStream$PutField|] v0 @varname [|fields|] @scope ((L0004,L0023));


        v1;
        v2;
      
#L0f98a0.   call temp:=  [|java:io:ObjectOutputStream.putFields|](v4) @signature [|Ljava/io/ObjectOutputStream;.putFields:()Ljava/io/ObjectOutputStream$PutField;|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f98a6.   v0:= temp  @type object;
#L0f98a8.   v1:= "defaultCenturyStart" @type (object, string);
#L0f98ac.   v2:= v3.[|java:text:SimpleDateFormat.defaultCenturyStart|]   @type object;
#L0f98b0.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f98b6.   v1:= "formatData" @type (object, string);
#L0f98ba.   v2:= v3.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f98be.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f98c4.   v1:= "pattern" @type (object, string);
#L0f98c8.   v2:= v3.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f98cc.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f98d2.   v1:= "serialVersionOnStream" @type (object, string);
#L0f98d6.   v2:= 1  @length 4;
#L0f98d8.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v0, v1, v2) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;I)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L0f98de.   call temp:=  [|java:io:ObjectOutputStream.writeFields|](v4) @signature [|Ljava/io/ObjectOutputStream;.writeFields:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L0f98e4.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.applyLocalizedPattern|] ([|java:text:SimpleDateFormat|] v3 @type (this), [|java:lang:String|] v4 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.applyLocalizedPattern:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L0f98f8.   v0:= v3.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f98fc.   call temp:=  [|java:text:DateFormatSymbols.getLocalPatternChars|](v0) @signature [|Ljava/text/DateFormatSymbols;.getLocalPatternChars:()Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f9902.   v0:= temp  @type object;
#L0f9904.   v1:= "GyMdkHmsSEDFwWahKzZLc" @type (object, string);
#L0f9908.   v2:= 1  @length 4;
#L0f990a.   call temp:=  [|java:text:SimpleDateFormat.convertPattern|](v4, v0, v1, v2) @signature [|Ljava/text/SimpleDateFormat;.convertPattern:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;|] @classDescriptor [|java:text:SimpleDateFormat|] @type static;
#L0f9910.   v0:= temp  @type object;
#L0f9912.   v3.[|java:text:SimpleDateFormat.pattern|]  := v0 @type object;
#L0f9916.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.applyPattern|] ([|java:text:SimpleDateFormat|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.applyPattern:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


      
#L0f9928.   call temp:=  [|java:text:SimpleDateFormat.validatePattern|](v0, v1) @signature [|Ljava/text/SimpleDateFormat;.validatePattern:(Ljava/lang/String;)V|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f992e.   v0.[|java:text:SimpleDateFormat.pattern|]  := v1 @type object;
#L0f9932.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:text:SimpleDateFormat.clone|] ([|java:text:SimpleDateFormat|] v4 @type (this)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:text:SimpleDateFormat|] v0 @varname [|clone|] @scope ((L0006,L001e));

        v1;
        v2;
        v3;
      
#L0f9944.   call temp:=  [|java:text:DateFormat.clone|](v4) @signature [|Ljava/text/DateFormat;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:DateFormat|] @type super;
#L0f994a.   v0:= temp  @type object;
#L0f994c.   v0:= ([|java:text:SimpleDateFormat|])v0;
#L0f9950.   v1:= v4.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f9954.   call temp:=  [|java:text:DateFormatSymbols.clone|](v1) @signature [|Ljava/text/DateFormatSymbols;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f995a.   v1:= temp  @type object;
#L0f995c.   v1:= ([|java:text:DateFormatSymbols|])v1;
#L0f9960.   v0.[|java:text:SimpleDateFormat.formatData|]  := v1 @type object;
#L0f9964.   v1:= new [|java:util:Date|];
#L0f9968.   v2:= v4.[|java:text:SimpleDateFormat.defaultCenturyStart|]   @type object;
#L0f996c.   call temp:=  [|java:util:Date.getTime|](v2) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L0f9972.   v2:= temp  @type wide;
#L0f9974.   call temp:=  [|java:util:Date.<init>|](v1, v2, v3) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0f997a.   v0.[|java:text:SimpleDateFormat.defaultCenturyStart|]  := v1 @type object;
#L0f997e.   return v0  @type object;

   }
    procedure [|boolean|] [|java:text:SimpleDateFormat.equals|] ([|java:text:SimpleDateFormat|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:SimpleDateFormat|] v0 @varname [|simple|] @scope ((L000e,L002a));


        v1;
        v2;
        v3;
        v4;
      
#L0f9990.   v1:= 1  @length 4;
#L0f9992.   v2:= 0  @length 4;
#L0f9994.   if v5 != v6 then goto L0f999a;
#L0f9998.   return v1;
#L0f999a.   v3:= instanceof @varname v6 @type [|java:text:SimpleDateFormat|];
#L0f999e.   if v3 != 0 then goto L0f99a6;
#L0f99a2.   v1:= v2;
#L0f99a4.   goto L0f9998;
#L0f99a6.   v0:= v6  @type object;
#L0f99a8.   v0:= ([|java:text:SimpleDateFormat|])v0;
#L0f99ac.   call temp:=  [|java:text:DateFormat.equals|](v5, v6) @signature [|Ljava/text/DateFormat;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:text:DateFormat|] @type super;
#L0f99b2.   v3:= temp;
#L0f99b4.   if v3 == 0 then goto L0f99e0;
#L0f99b8.   v3:= v5.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f99bc.   v4:= v0.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f99c0.   call temp:=  [|java:lang:String.equals|](v3, v4) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f99c6.   v3:= temp;
#L0f99c8.   if v3 == 0 then goto L0f99e0;
#L0f99cc.   v3:= v5.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f99d0.   v4:= v0.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f99d4.   call temp:=  [|java:text:DateFormatSymbols.equals|](v3, v4) @signature [|Ljava/text/DateFormatSymbols;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f99da.   v3:= temp;
#L0f99dc.   if v3 != 0 then goto L0f9998;
#L0f99e0.   v1:= v2;
#L0f99e2.   goto L0f9998;

   }
    procedure [|java:lang:StringBuffer|] [|java:text:SimpleDateFormat.format|] ([|java:text:SimpleDateFormat|] v1 @type (this), [|java:util:Date|] v2 @type (object), [|java:lang:StringBuffer|] v3 @type (object), [|java:text:FieldPosition|] v4 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.format:(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L0f99f4.   v0:= 0  @length 4;
#L0f99f6.   call temp:=  [|java:text:SimpleDateFormat.formatImpl|](v1, v2, v3, v4, v0) @signature [|Ljava/text/SimpleDateFormat;.formatImpl:(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;Ljava/util/List;)Ljava/lang/StringBuffer;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f99fc.   v0:= temp  @type object;
#L0f99fe.   return v0  @type object;

   }
    procedure [|java:text:AttributedCharacterIterator|] [|java:text:SimpleDateFormat.formatToCharacterIterator|] ([|java:text:SimpleDateFormat|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.formatToCharacterIterator:(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
        v2;
      
#L0f9a10.   if v4 != 0 then goto L0f9a24;
#L0f9a14.   v0:= new [|java:lang:NullPointerException|];
#L0f9a18.   v1:= "object == null" @type (object, string);
#L0f9a1c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L0f9a22.   throw v0;
#L0f9a24.   v0:= instanceof @varname v4 @type [|java:util:Date|];
#L0f9a28.   if v0 == 0 then goto L0f9a3a;
#L0f9a2c.   v4:= ([|java:util:Date|])v4;
#L0f9a30.   call temp:=  [|java:text:SimpleDateFormat.formatToCharacterIteratorImpl|](v3, v4) @signature [|Ljava/text/SimpleDateFormat;.formatToCharacterIteratorImpl:(Ljava/util/Date;)Ljava/text/AttributedCharacterIterator;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9a36.   v0:= temp  @type object;
#L0f9a38.   return v0  @type object;
#L0f9a3a.   v0:= instanceof @varname v4 @type [|java:lang:Number|];
#L0f9a3e.   if v0 == 0 then goto L0f9a62;
#L0f9a42.   v0:= new [|java:util:Date|];
#L0f9a46.   v4:= ([|java:lang:Number|])v4;
#L0f9a4a.   call temp:=  [|java:lang:Number.longValue|](v4) @signature [|Ljava/lang/Number;.longValue:()J|] @classDescriptor [|java:lang:Number|] @type virtual;
#L0f9a50.   v1:= temp  @type wide;
#L0f9a52.   call temp:=  [|java:util:Date.<init>|](v0, v1, v2) @signature [|Ljava/util/Date;.<init>:(J)V|] @classDescriptor [|java:util:Date|] @type direct;
#L0f9a58.   call temp:=  [|java:text:SimpleDateFormat.formatToCharacterIteratorImpl|](v3, v0) @signature [|Ljava/text/SimpleDateFormat;.formatToCharacterIteratorImpl:(Ljava/util/Date;)Ljava/text/AttributedCharacterIterator;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9a5e.   v0:= temp  @type object;
#L0f9a60.   goto L0f9a38;
#L0f9a62.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f9a66.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f9a6c.   throw v0;

   }
    procedure [|java:util:Date|] [|java:text:SimpleDateFormat.get2DigitYearStart|] ([|java:text:SimpleDateFormat|] v1 @type (this)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.get2DigitYearStart:()Ljava/util/Date;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f9a80.   v0:= v1.[|java:text:SimpleDateFormat.defaultCenturyStart|]   @type object;
#L0f9a84.   call temp:=  [|java:util:Date.clone|](v0) @signature [|Ljava/util/Date;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:Date|] @type virtual;
#L0f9a8a.   v0:= temp  @type object;
#L0f9a8c.   v0:= ([|java:util:Date|])v0;
#L0f9a90.   return v0  @type object;

   }
    procedure [|java:text:DateFormatSymbols|] [|java:text:SimpleDateFormat.getDateFormatSymbols|] ([|java:text:SimpleDateFormat|] v1 @type (this)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.getDateFormatSymbols:()Ljava/text/DateFormatSymbols;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f9aa4.   v0:= v1.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f9aa8.   call temp:=  [|java:text:DateFormatSymbols.clone|](v0) @signature [|Ljava/text/DateFormatSymbols;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f9aae.   v0:= temp  @type object;
#L0f9ab0.   v0:= ([|java:text:DateFormatSymbols|])v0;
#L0f9ab4.   return v0  @type object;

   }
    procedure [|int|] [|java:text:SimpleDateFormat.hashCode|] ([|java:text:SimpleDateFormat|] v2 @type (this)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f9ac8.   call temp:=  [|java:text:DateFormat.hashCode|](v2) @signature [|Ljava/text/DateFormat;.hashCode:()I|] @classDescriptor [|java:text:DateFormat|] @type super;
#L0f9ace.   v0:= temp;
#L0f9ad0.   v1:= v2.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f9ad4.   call temp:=  [|java:lang:String.hashCode|](v1) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9ada.   v1:= temp;
#L0f9adc.   v0:= v0 + v1  @type int;
#L0f9ade.   v1:= v2.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f9ae2.   call temp:=  [|java:text:DateFormatSymbols.hashCode|](v1) @signature [|Ljava/text/DateFormatSymbols;.hashCode:()I|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f9ae8.   v1:= temp;
#L0f9aea.   v0:= v0 + v1  @type int;
#L0f9aec.   v1:= v2.[|java:text:SimpleDateFormat.creationYear|] ;
#L0f9af0.   v0:= v0 + v1  @type int;
#L0f9af2.   return v0;

   }
    procedure [|java:util:Date|] [|java:text:SimpleDateFormat.parse|] ([|java:text:SimpleDateFormat|] v13 @type (this), [|java:lang:String|] v14 @type (object), [|java:text:ParsePosition|] v15 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;|] @Access PUBLIC {
      local temp ;
        [|int|] v6 @varname [|next|] @scope ((L0025,L0039), (L003a,L00aa));
        [|java:util:Date|] v1 @varname [|date|] @scope ((L00c2,L00cc));
        [|int|] v0 @varname [|count|] @scope ((L0003,L00d3));
        [|java:lang:IllegalArgumentException|] v2 @varname [|e|] @scope ((L00cd,L00d3));
        [|int|] v3 @varname [|i|] @scope ((L001d,L00d3));
        [|int|] v4 @varname [|last|] @scope ((L0002,L00d3));
        [|int|] v5 @varname [|length|] @scope ((L000b,L00d3));
        [|int|] v7 @varname [|offset|] @scope ((L0007,L00d3));
        [|int|] v8 @varname [|patternLength|] @scope ((L001c,L00d3));
        [|boolean|] v9 @varname [|quote|] @scope ((L0001,L00d3));
        [|java:util:TimeZone|] v10 @varname [|zone|] @scope ((L0016,L00d3));



        v11;
        v12;
      
#L0f9b04.   v9:= 0  @length 4;
#L0f9b06.   v4:= -1  @length 4;
#L0f9b08.   v0:= 0  @length 4;
#L0f9b0a.   call temp:=  [|java:text:ParsePosition.getIndex|](v15) @signature [|Ljava/text/ParsePosition;.getIndex:()I|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f9b10.   v7:= temp;
#L0f9b12.   call temp:=  [|java:lang:String.length|](v14) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9b18.   v5:= temp;
#L0f9b1a.   v11:= v13.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f9b1e.   call temp:=  [|java:util:Calendar.clear|](v11) @signature [|Ljava/util/Calendar;.clear:()V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f9b24.   v11:= v13.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f9b28.   call temp:=  [|java:util:Calendar.getTimeZone|](v11) @signature [|Ljava/util/Calendar;.getTimeZone:()Ljava/util/TimeZone;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f9b2e.   v10:= temp  @type object;
#L0f9b30.   v11:= v13.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f9b34.   call temp:=  [|java:lang:String.length|](v11) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9b3a.   v8:= temp;
#L0f9b3c.   v3:= 0  @length 4;
#L0f9b3e.   if v3 >= v8 then goto L0f9c58;
#L0f9b42.   v11:= v13.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f9b46.   call temp:=  [|java:lang:String.charAt|](v11, v3) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9b4c.   v6:= temp;
#L0f9b4e.   v11:= 39  @length 16;
#L0f9b52.   if v6 != v11 then goto L0f9bb6;
#L0f9b56.   if v0 <= 0 then goto L0f9b7a;
#L0f9b5a.   v11:= (char)v4  @type i2c;
#L0f9b5c.   call temp:=  [|java:text:SimpleDateFormat.parse|](v13, v14, v7, v11, v0) @signature [|Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;ICI)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9b62.   v7:= temp;
#L0f9b64.   if v7 >= 0 then goto L0f9b78;
#L0f9b68.   v11:= -v7  @type int;
#L0f9b6a.   v11:= v11 + -1;
#L0f9b6e.   call temp:=  [|java:text:SimpleDateFormat.error|](v13, v15, v11, v10) @signature [|Ljava/text/SimpleDateFormat;.error:(Ljava/text/ParsePosition;ILjava/util/TimeZone;)Ljava/util/Date;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9b74.   v1:= temp  @type object;
#L0f9b76.   return v1  @type object;
#L0f9b78.   v0:= 0  @length 4;
#L0f9b7a.   if v4 != v6 then goto L0f9bae;
#L0f9b7e.   if v7 >= v5 then goto L0f9b92;
#L0f9b82.   call temp:=  [|java:lang:String.charAt|](v14, v7) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9b88.   v11:= temp;
#L0f9b8a.   v12:= 39  @length 16;
#L0f9b8e.   if v11 == v12 then goto L0f9b9c;
#L0f9b92.   call temp:=  [|java:text:SimpleDateFormat.error|](v13, v15, v7, v10) @signature [|Ljava/text/SimpleDateFormat;.error:(Ljava/text/ParsePosition;ILjava/util/TimeZone;)Ljava/util/Date;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9b98.   v1:= temp  @type object;
#L0f9b9a.   goto L0f9b76;
#L0f9b9c.   v7:= v7 + 1;
#L0f9ba0.   v4:= -1  @length 4;
#L0f9ba2.   if v9 != 0 then goto L0f9bb2;
#L0f9ba6.   v9:= 1  @length 4;
#L0f9ba8.   v3:= v3 + 1;
#L0f9bac.   goto L0f9b3e;
#L0f9bae.   v4:= v6;
#L0f9bb0.   goto L0f9ba2;
#L0f9bb2.   v9:= 0  @length 4;
#L0f9bb4.   goto L0f9ba8;
#L0f9bb6.   if v9 != 0 then goto L0f9c12;
#L0f9bba.   if v4 == v6 then goto L0f9bde;
#L0f9bbe.   v11:= 97  @length 16;
#L0f9bc2.   if v6 < v11 then goto L0f9bce;
#L0f9bc6.   v11:= 122  @length 16;
#L0f9bca.   if v6 <= v11 then goto L0f9bde;
#L0f9bce.   v11:= 65  @length 16;
#L0f9bd2.   if v6 < v11 then goto L0f9c12;
#L0f9bd6.   v11:= 90  @length 16;
#L0f9bda.   if v6 > v11 then goto L0f9c12;
#L0f9bde.   if v4 != v6 then goto L0f9be8;
#L0f9be2.   v0:= v0 + 1;
#L0f9be6.   goto L0f9ba8;
#L0f9be8.   if v0 <= 0 then goto L0f9c0c;
#L0f9bec.   v11:= (char)v4  @type i2c;
#L0f9bee.   v12:= -v0  @type int;
#L0f9bf0.   call temp:=  [|java:text:SimpleDateFormat.parse|](v13, v14, v7, v11, v12) @signature [|Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;ICI)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9bf6.   v7:= temp;
#L0f9bf8.   if v7 >= 0 then goto L0f9c0c;
#L0f9bfc.   v11:= -v7  @type int;
#L0f9bfe.   v11:= v11 + -1;
#L0f9c02.   call temp:=  [|java:text:SimpleDateFormat.error|](v13, v15, v11, v10) @signature [|Ljava/text/SimpleDateFormat;.error:(Ljava/text/ParsePosition;ILjava/util/TimeZone;)Ljava/util/Date;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9c08.   v1:= temp  @type object;
#L0f9c0a.   goto L0f9b76;
#L0f9c0c.   v4:= v6;
#L0f9c0e.   v0:= 1  @length 4;
#L0f9c10.   goto L0f9ba8;
#L0f9c12.   if v0 <= 0 then goto L0f9c36;
#L0f9c16.   v11:= (char)v4  @type i2c;
#L0f9c18.   call temp:=  [|java:text:SimpleDateFormat.parse|](v13, v14, v7, v11, v0) @signature [|Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;ICI)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9c1e.   v7:= temp;
#L0f9c20.   if v7 >= 0 then goto L0f9c34;
#L0f9c24.   v11:= -v7  @type int;
#L0f9c26.   v11:= v11 + -1;
#L0f9c2a.   call temp:=  [|java:text:SimpleDateFormat.error|](v13, v15, v11, v10) @signature [|Ljava/text/SimpleDateFormat;.error:(Ljava/text/ParsePosition;ILjava/util/TimeZone;)Ljava/util/Date;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9c30.   v1:= temp  @type object;
#L0f9c32.   goto L0f9b76;
#L0f9c34.   v0:= 0  @length 4;
#L0f9c36.   v4:= -1  @length 4;
#L0f9c38.   if v7 >= v5 then goto L0f9c48;
#L0f9c3c.   call temp:=  [|java:lang:String.charAt|](v14, v7) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9c42.   v11:= temp;
#L0f9c44.   if v11 == v6 then goto L0f9c52;
#L0f9c48.   call temp:=  [|java:text:SimpleDateFormat.error|](v13, v15, v7, v10) @signature [|Ljava/text/SimpleDateFormat;.error:(Ljava/text/ParsePosition;ILjava/util/TimeZone;)Ljava/util/Date;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9c4e.   v1:= temp  @type object;
#L0f9c50.   goto L0f9b76;
#L0f9c52.   v7:= v7 + 1;
#L0f9c56.   goto L0f9ba8;
#L0f9c58.   if v0 <= 0 then goto L0f9c7c;
#L0f9c5c.   v11:= (char)v4  @type i2c;
#L0f9c5e.   call temp:=  [|java:text:SimpleDateFormat.parse|](v13, v14, v7, v11, v0) @signature [|Ljava/text/SimpleDateFormat;.parse:(Ljava/lang/String;ICI)I|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9c64.   v7:= temp;
#L0f9c66.   if v7 >= 0 then goto L0f9c7c;
#L0f9c6a.   v11:= -v7  @type int;
#L0f9c6c.   v11:= v11 + -1;
#L0f9c70.   call temp:=  [|java:text:SimpleDateFormat.error|](v13, v15, v11, v10) @signature [|Ljava/text/SimpleDateFormat;.error:(Ljava/text/ParsePosition;ILjava/util/TimeZone;)Ljava/util/Date;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9c76.   v1:= temp  @type object;
#L0f9c78.   goto L0f9b76;
#L0f9c7c.   v11:= v13.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f9c80.   call temp:=  [|java:util:Calendar.getTime|](v11) @signature [|Ljava/util/Calendar;.getTime:()Ljava/util/Date;|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f9c86.   v1:= temp  @type object;
#L0f9c88.   call temp:=  [|java:text:ParsePosition.setIndex|](v15, v7) @signature [|Ljava/text/ParsePosition;.setIndex:(I)V|] @classDescriptor [|java:text:ParsePosition|] @type virtual;
#L0f9c8e.   v11:= v13.[|java:text:SimpleDateFormat.calendar|]   @type object;
#L0f9c92.   call temp:=  [|java:util:Calendar.setTimeZone|](v11, v10) @signature [|Ljava/util/Calendar;.setTimeZone:(Ljava/util/TimeZone;)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f9c98.   goto L0f9b76;
#L0f9c9c.   v2:= Exception  @type object;
#L0f9c9e.   call temp:=  [|java:text:SimpleDateFormat.error|](v13, v15, v7, v10) @signature [|Ljava/text/SimpleDateFormat;.error:(Ljava/text/ParsePosition;ILjava/util/TimeZone;)Ljava/util/Date;|] @classDescriptor [|java:text:SimpleDateFormat|] @type direct;
#L0f9ca4.   v1:= temp  @type object;
#L0f9ca6.   goto L0f9b76;
  catch  [|java:lang:IllegalArgumentException|] @[L0f9c7c..L0f9c86] goto L0f9c9c;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.set2DigitYearStart|] ([|java:text:SimpleDateFormat|] v2 @type (this), [|java:util:Date|] v3 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.set2DigitYearStart:(Ljava/util/Date;)V|] @Access PUBLIC {
      local temp ;
        [|java:util:Calendar|] v0 @varname [|cal|] @scope ((L000d,L001a));


        v1;
      
#L0f9ccc.   call temp:=  [|java:util:Date.clone|](v3) @signature [|Ljava/util/Date;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:Date|] @type virtual;
#L0f9cd2.   v1:= temp  @type object;
#L0f9cd4.   v1:= ([|java:util:Date|])v1;
#L0f9cd8.   v2.[|java:text:SimpleDateFormat.defaultCenturyStart|]  := v1 @type object;
#L0f9cdc.   v0:= new [|java:util:GregorianCalendar|];
#L0f9ce0.   call temp:=  [|java:util:GregorianCalendar.<init>|](v0) @signature [|Ljava/util/GregorianCalendar;.<init>:()V|] @classDescriptor [|java:util:GregorianCalendar|] @type direct;
#L0f9ce6.   v1:= v2.[|java:text:SimpleDateFormat.defaultCenturyStart|]   @type object;
#L0f9cea.   call temp:=  [|java:util:Calendar.setTime|](v0, v1) @signature [|Ljava/util/Calendar;.setTime:(Ljava/util/Date;)V|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f9cf0.   v1:= 1  @length 4;
#L0f9cf2.   call temp:=  [|java:util:Calendar.get|](v0, v1) @signature [|Ljava/util/Calendar;.get:(I)I|] @classDescriptor [|java:util:Calendar|] @type virtual;
#L0f9cf8.   v1:= temp;
#L0f9cfa.   v2.[|java:text:SimpleDateFormat.creationYear|]  := v1;
#L0f9cfe.   return @void ;

   }
    procedure [|void|] [|java:text:SimpleDateFormat.setDateFormatSymbols|] ([|java:text:SimpleDateFormat|] v1 @type (this), [|java:text:DateFormatSymbols|] v2 @type (object)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.setDateFormatSymbols:(Ljava/text/DateFormatSymbols;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0f9d10.   call temp:=  [|java:text:DateFormatSymbols.clone|](v2) @signature [|Ljava/text/DateFormatSymbols;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f9d16.   v0:= temp  @type object;
#L0f9d18.   v0:= ([|java:text:DateFormatSymbols|])v0;
#L0f9d1c.   v1.[|java:text:SimpleDateFormat.formatData|]  := v0 @type object;
#L0f9d20.   return @void ;

   }
    procedure [|java:lang:String|] [|java:text:SimpleDateFormat.toLocalizedPattern|] ([|java:text:SimpleDateFormat|] v4 @type (this)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.toLocalizedPattern:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L0f9d34.   v0:= v4.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f9d38.   v1:= "GyMdkHmsSEDFwWahKzZLc" @type (object, string);
#L0f9d3c.   v2:= v4.[|java:text:SimpleDateFormat.formatData|]   @type object;
#L0f9d40.   call temp:=  [|java:text:DateFormatSymbols.getLocalPatternChars|](v2) @signature [|Ljava/text/DateFormatSymbols;.getLocalPatternChars:()Ljava/lang/String;|] @classDescriptor [|java:text:DateFormatSymbols|] @type virtual;
#L0f9d46.   v2:= temp  @type object;
#L0f9d48.   v3:= 0  @length 4;
#L0f9d4a.   call temp:=  [|java:text:SimpleDateFormat.convertPattern|](v0, v1, v2, v3) @signature [|Ljava/text/SimpleDateFormat;.convertPattern:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;|] @classDescriptor [|java:text:SimpleDateFormat|] @type static;
#L0f9d50.   v0:= temp  @type object;
#L0f9d52.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:text:SimpleDateFormat.toPattern|] ([|java:text:SimpleDateFormat|] v1 @type (this)) @owner [|java:text:SimpleDateFormat|] @signature [|Ljava/text/SimpleDateFormat;.toPattern:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f9d64.   v0:= v1.[|java:text:SimpleDateFormat.pattern|]   @type object;
#L0f9d68.   return v0  @type object;

   }
record [|java:text:StringCharacterIterator|]  @type class @AccessFlag PUBLIC_FINAL extends  [|java:text:CharacterIterator|] {
      [|int|] [|java:text:StringCharacterIterator.end|]    @AccessFlag ;
      [|int|] [|java:text:StringCharacterIterator.offset|]    @AccessFlag ;
      [|int|] [|java:text:StringCharacterIterator.start|]    @AccessFlag ;
      [|java:lang:String|] [|java:text:StringCharacterIterator.string|]    @AccessFlag ;
   }
    procedure [|void|] [|java:text:StringCharacterIterator.<init>|] ([|java:text:StringCharacterIterator|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L0f9d7c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f9d82.   v1.[|java:text:StringCharacterIterator.string|]  := v2 @type object;
#L0f9d86.   v0:= 0  @length 4;
#L0f9d88.   v1.[|java:text:StringCharacterIterator.offset|]  := v0;
#L0f9d8c.   v1.[|java:text:StringCharacterIterator.start|]  := v0;
#L0f9d90.   v0:= v1.[|java:text:StringCharacterIterator.string|]   @type object;
#L0f9d94.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9d9a.   v0:= temp;
#L0f9d9c.   v1.[|java:text:StringCharacterIterator.end|]  := v0;
#L0f9da0.   return @void ;

   }
    procedure [|void|] [|java:text:StringCharacterIterator.<init>|] ([|java:text:StringCharacterIterator|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.<init>:(Ljava/lang/String;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L0f9db4.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f9dba.   v1.[|java:text:StringCharacterIterator.string|]  := v2 @type object;
#L0f9dbe.   v0:= 0  @length 4;
#L0f9dc0.   v1.[|java:text:StringCharacterIterator.start|]  := v0;
#L0f9dc4.   v0:= v1.[|java:text:StringCharacterIterator.string|]   @type object;
#L0f9dc8.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9dce.   v0:= temp;
#L0f9dd0.   v1.[|java:text:StringCharacterIterator.end|]  := v0;
#L0f9dd4.   if v3 < 0 then goto L0f9de0;
#L0f9dd8.   v0:= v1.[|java:text:StringCharacterIterator.end|] ;
#L0f9ddc.   if v3 <= v0 then goto L0f9dec;
#L0f9de0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f9de4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f9dea.   throw v0;
#L0f9dec.   v1.[|java:text:StringCharacterIterator.offset|]  := v3;
#L0f9df0.   return @void ;

   }
    procedure [|void|] [|java:text:StringCharacterIterator.<init>|] ([|java:text:StringCharacterIterator|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3, [|int|] v4, [|int|] v5) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.<init>:(Ljava/lang/String;III)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





        v0;
      
#L0f9e04.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0f9e0a.   v1.[|java:text:StringCharacterIterator.string|]  := v2 @type object;
#L0f9e0e.   if v3 < 0 then goto L0f9e2e;
#L0f9e12.   v0:= v1.[|java:text:StringCharacterIterator.string|]   @type object;
#L0f9e16.   call temp:=  [|java:lang:String.length|](v0) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9e1c.   v0:= temp;
#L0f9e1e.   if v4 > v0 then goto L0f9e2e;
#L0f9e22.   if v3 > v4 then goto L0f9e2e;
#L0f9e26.   if v5 < v3 then goto L0f9e2e;
#L0f9e2a.   if v5 <= v4 then goto L0f9e3a;
#L0f9e2e.   v0:= new [|java:lang:IllegalArgumentException|];
#L0f9e32.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0f9e38.   throw v0;
#L0f9e3a.   v1.[|java:text:StringCharacterIterator.start|]  := v3;
#L0f9e3e.   v1.[|java:text:StringCharacterIterator.end|]  := v4;
#L0f9e42.   v1.[|java:text:StringCharacterIterator.offset|]  := v5;
#L0f9e46.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:text:StringCharacterIterator.clone|] ([|java:text:StringCharacterIterator|] v2 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:lang:CloneNotSupportedException|] v0 @varname [|e|] @scope ((L0006,L000c));

        v1;
      
#L0f9e58.   call temp:=  [|java:lang:Object.clone|](v2) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L0f9e5e.   v1:= temp  @type object;
#L0f9e60.   return v1  @type object;
#L0f9e62.   v0:= Exception  @type object;
#L0f9e64.   v1:= new [|java:lang:AssertionError|];
#L0f9e68.   call temp:=  [|java:lang:AssertionError.<init>|](v1, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L0f9e6e.   throw v1;
  catch  [|java:lang:CloneNotSupportedException|] @[L0f9e58..L0f9e5e] goto L0f9e62;

   }
    procedure [|char|] [|java:text:StringCharacterIterator.current|] ([|java:text:StringCharacterIterator|] v2 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.current:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f9e90.   v0:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0f9e94.   v1:= v2.[|java:text:StringCharacterIterator.end|] ;
#L0f9e98.   if v0 != v1 then goto L0f9ea4;
#L0f9e9c.    v0:= 0.000000;
#L0f9ea2.   return v0;
#L0f9ea4.   v0:= v2.[|java:text:StringCharacterIterator.string|]   @type object;
#L0f9ea8.   v1:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0f9eac.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9eb2.   v0:= temp;
#L0f9eb4.   goto L0f9ea2;

   }
    procedure [|boolean|] [|java:text:StringCharacterIterator.equals|] ([|java:text:StringCharacterIterator|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:text:StringCharacterIterator|] v0 @varname [|it|] @scope ((L0009,L0027));


        v1;
        v2;
        v3;
      
#L0f9ec8.   v1:= 0  @length 4;
#L0f9eca.   v2:= instanceof @varname v5 @type [|java:text:StringCharacterIterator|];
#L0f9ece.   if v2 != 0 then goto L0f9ed4;
#L0f9ed2.   return v1;
#L0f9ed4.   v0:= v5  @type object;
#L0f9ed6.   v0:= ([|java:text:StringCharacterIterator|])v0;
#L0f9eda.   v2:= v4.[|java:text:StringCharacterIterator.string|]   @type object;
#L0f9ede.   v3:= v0.[|java:text:StringCharacterIterator.string|]   @type object;
#L0f9ee2.   call temp:=  [|java:lang:String.equals|](v2, v3) @signature [|Ljava/lang/String;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9ee8.   v2:= temp;
#L0f9eea.   if v2 == 0 then goto L0f9ed2;
#L0f9eee.   v2:= v4.[|java:text:StringCharacterIterator.start|] ;
#L0f9ef2.   v3:= v0.[|java:text:StringCharacterIterator.start|] ;
#L0f9ef6.   if v2 != v3 then goto L0f9ed2;
#L0f9efa.   v2:= v4.[|java:text:StringCharacterIterator.end|] ;
#L0f9efe.   v3:= v0.[|java:text:StringCharacterIterator.end|] ;
#L0f9f02.   if v2 != v3 then goto L0f9ed2;
#L0f9f06.   v2:= v4.[|java:text:StringCharacterIterator.offset|] ;
#L0f9f0a.   v3:= v0.[|java:text:StringCharacterIterator.offset|] ;
#L0f9f0e.   if v2 != v3 then goto L0f9ed2;
#L0f9f12.   v1:= 1  @length 4;
#L0f9f14.   goto L0f9ed2;

   }
    procedure [|char|] [|java:text:StringCharacterIterator.first|] ([|java:text:StringCharacterIterator|] v2 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.first:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f9f28.   v0:= v2.[|java:text:StringCharacterIterator.start|] ;
#L0f9f2c.   v1:= v2.[|java:text:StringCharacterIterator.end|] ;
#L0f9f30.   if v0 != v1 then goto L0f9f3c;
#L0f9f34.    v0:= 0.000000;
#L0f9f3a.   return v0;
#L0f9f3c.   v0:= v2.[|java:text:StringCharacterIterator.start|] ;
#L0f9f40.   v2.[|java:text:StringCharacterIterator.offset|]  := v0;
#L0f9f44.   v0:= v2.[|java:text:StringCharacterIterator.string|]   @type object;
#L0f9f48.   v1:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0f9f4c.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9f52.   v0:= temp;
#L0f9f54.   goto L0f9f3a;

   }
    procedure [|int|] [|java:text:StringCharacterIterator.getBeginIndex|] ([|java:text:StringCharacterIterator|] v1 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.getBeginIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f9f68.   v0:= v1.[|java:text:StringCharacterIterator.start|] ;
#L0f9f6c.   return v0;

   }
    procedure [|int|] [|java:text:StringCharacterIterator.getEndIndex|] ([|java:text:StringCharacterIterator|] v1 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.getEndIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f9f80.   v0:= v1.[|java:text:StringCharacterIterator.end|] ;
#L0f9f84.   return v0;

   }
    procedure [|int|] [|java:text:StringCharacterIterator.getIndex|] ([|java:text:StringCharacterIterator|] v1 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.getIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L0f9f98.   v0:= v1.[|java:text:StringCharacterIterator.offset|] ;
#L0f9f9c.   return v0;

   }
    procedure [|int|] [|java:text:StringCharacterIterator.hashCode|] ([|java:text:StringCharacterIterator|] v2 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f9fb0.   v0:= v2.[|java:text:StringCharacterIterator.string|]   @type object;
#L0f9fb4.   call temp:=  [|java:lang:String.hashCode|](v0) @signature [|Ljava/lang/String;.hashCode:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0f9fba.   v0:= temp;
#L0f9fbc.   v1:= v2.[|java:text:StringCharacterIterator.start|] ;
#L0f9fc0.   v0:= v0 + v1  @type int;
#L0f9fc2.   v1:= v2.[|java:text:StringCharacterIterator.end|] ;
#L0f9fc6.   v0:= v0 + v1  @type int;
#L0f9fc8.   v1:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0f9fcc.   v0:= v0 + v1  @type int;
#L0f9fce.   return v0;

   }
    procedure [|char|] [|java:text:StringCharacterIterator.last|] ([|java:text:StringCharacterIterator|] v2 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.last:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0f9fe0.   v0:= v2.[|java:text:StringCharacterIterator.start|] ;
#L0f9fe4.   v1:= v2.[|java:text:StringCharacterIterator.end|] ;
#L0f9fe8.   if v0 != v1 then goto L0f9ff4;
#L0f9fec.    v0:= 0.000000;
#L0f9ff2.   return v0;
#L0f9ff4.   v0:= v2.[|java:text:StringCharacterIterator.end|] ;
#L0f9ff8.   v0:= v0 + -1;
#L0f9ffc.   v2.[|java:text:StringCharacterIterator.offset|]  := v0;
#L0fa000.   v0:= v2.[|java:text:StringCharacterIterator.string|]   @type object;
#L0fa004.   v1:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0fa008.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0fa00e.   v0:= temp;
#L0fa010.   goto L0f9ff2;

   }
    procedure [|char|] [|java:text:StringCharacterIterator.next|] ([|java:text:StringCharacterIterator|] v2 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.next:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0fa024.   v0:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0fa028.   v1:= v2.[|java:text:StringCharacterIterator.end|] ;
#L0fa02c.   v1:= v1 + -1;
#L0fa030.   if v0 < v1 then goto L0fa044;
#L0fa034.   v0:= v2.[|java:text:StringCharacterIterator.end|] ;
#L0fa038.   v2.[|java:text:StringCharacterIterator.offset|]  := v0;
#L0fa03c.    v0:= 0.000000;
#L0fa042.   return v0;
#L0fa044.   v0:= v2.[|java:text:StringCharacterIterator.string|]   @type object;
#L0fa048.   v1:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0fa04c.   v1:= v1 + 1;
#L0fa050.   v2.[|java:text:StringCharacterIterator.offset|]  := v1;
#L0fa054.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0fa05a.   v0:= temp;
#L0fa05c.   goto L0fa042;

   }
    procedure [|char|] [|java:text:StringCharacterIterator.previous|] ([|java:text:StringCharacterIterator|] v2 @type (this)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.previous:()C|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L0fa070.   v0:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0fa074.   v1:= v2.[|java:text:StringCharacterIterator.start|] ;
#L0fa078.   if v0 != v1 then goto L0fa084;
#L0fa07c.    v0:= 0.000000;
#L0fa082.   return v0;
#L0fa084.   v0:= v2.[|java:text:StringCharacterIterator.string|]   @type object;
#L0fa088.   v1:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0fa08c.   v1:= v1 + -1;
#L0fa090.   v2.[|java:text:StringCharacterIterator.offset|]  := v1;
#L0fa094.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0fa09a.   v0:= temp;
#L0fa09c.   goto L0fa082;

   }
    procedure [|char|] [|java:text:StringCharacterIterator.setIndex|] ([|java:text:StringCharacterIterator|] v2 @type (this), [|int|] v3) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.setIndex:(I)C|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0fa0b0.   v0:= v2.[|java:text:StringCharacterIterator.start|] ;
#L0fa0b4.   if v3 < v0 then goto L0fa0c0;
#L0fa0b8.   v0:= v2.[|java:text:StringCharacterIterator.end|] ;
#L0fa0bc.   if v3 <= v0 then goto L0fa0cc;
#L0fa0c0.   v0:= new [|java:lang:IllegalArgumentException|];
#L0fa0c4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0fa0ca.   throw v0;
#L0fa0cc.   v2.[|java:text:StringCharacterIterator.offset|]  := v3;
#L0fa0d0.   v0:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0fa0d4.   v1:= v2.[|java:text:StringCharacterIterator.end|] ;
#L0fa0d8.   if v0 != v1 then goto L0fa0e4;
#L0fa0dc.    v0:= 0.000000;
#L0fa0e2.   return v0;
#L0fa0e4.   v0:= v2.[|java:text:StringCharacterIterator.string|]   @type object;
#L0fa0e8.   v1:= v2.[|java:text:StringCharacterIterator.offset|] ;
#L0fa0ec.   call temp:=  [|java:lang:String.charAt|](v0, v1) @signature [|Ljava/lang/String;.charAt:(I)C|] @classDescriptor [|java:lang:String|] @type virtual;
#L0fa0f2.   v0:= temp;
#L0fa0f4.   goto L0fa0e2;

   }
    procedure [|void|] [|java:text:StringCharacterIterator.setText|] ([|java:text:StringCharacterIterator|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:text:StringCharacterIterator|] @signature [|Ljava/text/StringCharacterIterator;.setText:(Ljava/lang/String;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fa108.   v1.[|java:text:StringCharacterIterator.string|]  := v2 @type object;
#L0fa10c.   v0:= 0  @length 4;
#L0fa10e.   v1.[|java:text:StringCharacterIterator.offset|]  := v0;
#L0fa112.   v1.[|java:text:StringCharacterIterator.start|]  := v0;
#L0fa116.   call temp:=  [|java:lang:String.length|](v2) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L0fa11c.   v0:= temp;
#L0fa11e.   v1.[|java:text:StringCharacterIterator.end|]  := v0;
#L0fa122.   return @void ;

   }
record [|java:util:spi:LocaleServiceProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  {
   }
    procedure [|void|] [|java:util:spi:LocaleServiceProvider.<init>|] ([|java:util:spi:LocaleServiceProvider|] v0 @type (this)) @owner [|java:util:spi:LocaleServiceProvider|] @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0fa134.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0fa13a.   return @void ;

   }
    procedure [|java:util:Locale|][] [|java:util:spi:LocaleServiceProvider.getAvailableLocales|] () @owner [|java:util:spi:LocaleServiceProvider|] @signature [|Ljava/util/spi/LocaleServiceProvider;.getAvailableLocales:()[Ljava/util/Locale;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:spi:BreakIteratorProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:spi:LocaleServiceProvider|] {
   }
    procedure [|void|] [|java:text:spi:BreakIteratorProvider.<init>|] ([|java:text:spi:BreakIteratorProvider|] v0 @type (this)) @owner [|java:text:spi:BreakIteratorProvider|] @signature [|Ljava/text/spi/BreakIteratorProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0fa14c.   call temp:=  [|java:util:spi:LocaleServiceProvider.<init>|](v0) @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @classDescriptor [|java:util:spi:LocaleServiceProvider|] @type direct;
#L0fa152.   return @void ;

   }
    procedure [|java:text:BreakIterator|] [|java:text:spi:BreakIteratorProvider.getCharacterInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:BreakIteratorProvider|] @signature [|Ljava/text/spi/BreakIteratorProvider;.getCharacterInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:BreakIterator|] [|java:text:spi:BreakIteratorProvider.getLineInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:BreakIteratorProvider|] @signature [|Ljava/text/spi/BreakIteratorProvider;.getLineInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:BreakIterator|] [|java:text:spi:BreakIteratorProvider.getSentenceInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:BreakIteratorProvider|] @signature [|Ljava/text/spi/BreakIteratorProvider;.getSentenceInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:BreakIterator|] [|java:text:spi:BreakIteratorProvider.getWordInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:BreakIteratorProvider|] @signature [|Ljava/text/spi/BreakIteratorProvider;.getWordInstance:(Ljava/util/Locale;)Ljava/text/BreakIterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:spi:CollatorProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:spi:LocaleServiceProvider|] {
   }
    procedure [|void|] [|java:text:spi:CollatorProvider.<init>|] ([|java:text:spi:CollatorProvider|] v0 @type (this)) @owner [|java:text:spi:CollatorProvider|] @signature [|Ljava/text/spi/CollatorProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0fa164.   call temp:=  [|java:util:spi:LocaleServiceProvider.<init>|](v0) @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @classDescriptor [|java:util:spi:LocaleServiceProvider|] @type direct;
#L0fa16a.   return @void ;

   }
    procedure [|java:text:Collator|] [|java:text:spi:CollatorProvider.getInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:CollatorProvider|] @signature [|Ljava/text/spi/CollatorProvider;.getInstance:(Ljava/util/Locale;)Ljava/text/Collator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:spi:DateFormatProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:spi:LocaleServiceProvider|] {
   }
    procedure [|void|] [|java:text:spi:DateFormatProvider.<init>|] ([|java:text:spi:DateFormatProvider|] v0 @type (this)) @owner [|java:text:spi:DateFormatProvider|] @signature [|Ljava/text/spi/DateFormatProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0fa17c.   call temp:=  [|java:util:spi:LocaleServiceProvider.<init>|](v0) @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @classDescriptor [|java:util:spi:LocaleServiceProvider|] @type direct;
#L0fa182.   return @void ;

   }
    procedure [|java:text:DateFormat|] [|java:text:spi:DateFormatProvider.getDateInstance|] ([|int|] v0, [|java:util:Locale|] v1 @type (object)) @owner [|java:text:spi:DateFormatProvider|] @signature [|Ljava/text/spi/DateFormatProvider;.getDateInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:DateFormat|] [|java:text:spi:DateFormatProvider.getDateTimeInstance|] ([|int|] v0, [|int|] v1, [|java:util:Locale|] v2 @type (object)) @owner [|java:text:spi:DateFormatProvider|] @signature [|Ljava/text/spi/DateFormatProvider;.getDateTimeInstance:(IILjava/util/Locale;)Ljava/text/DateFormat;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:DateFormat|] [|java:text:spi:DateFormatProvider.getTimeInstance|] ([|int|] v0, [|java:util:Locale|] v1 @type (object)) @owner [|java:text:spi:DateFormatProvider|] @signature [|Ljava/text/spi/DateFormatProvider;.getTimeInstance:(ILjava/util/Locale;)Ljava/text/DateFormat;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:spi:DateFormatSymbolsProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:spi:LocaleServiceProvider|] {
   }
    procedure [|void|] [|java:text:spi:DateFormatSymbolsProvider.<init>|] ([|java:text:spi:DateFormatSymbolsProvider|] v0 @type (this)) @owner [|java:text:spi:DateFormatSymbolsProvider|] @signature [|Ljava/text/spi/DateFormatSymbolsProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0fa194.   call temp:=  [|java:util:spi:LocaleServiceProvider.<init>|](v0) @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @classDescriptor [|java:util:spi:LocaleServiceProvider|] @type direct;
#L0fa19a.   return @void ;

   }
    procedure [|java:text:DateFormatSymbols|] [|java:text:spi:DateFormatSymbolsProvider.getInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:DateFormatSymbolsProvider|] @signature [|Ljava/text/spi/DateFormatSymbolsProvider;.getInstance:(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:spi:DecimalFormatSymbolsProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:spi:LocaleServiceProvider|] {
   }
    procedure [|void|] [|java:text:spi:DecimalFormatSymbolsProvider.<init>|] ([|java:text:spi:DecimalFormatSymbolsProvider|] v0 @type (this)) @owner [|java:text:spi:DecimalFormatSymbolsProvider|] @signature [|Ljava/text/spi/DecimalFormatSymbolsProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0fa1ac.   call temp:=  [|java:util:spi:LocaleServiceProvider.<init>|](v0) @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @classDescriptor [|java:util:spi:LocaleServiceProvider|] @type direct;
#L0fa1b2.   return @void ;

   }
    procedure [|java:text:DecimalFormatSymbols|] [|java:text:spi:DecimalFormatSymbolsProvider.getInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:DecimalFormatSymbolsProvider|] @signature [|Ljava/text/spi/DecimalFormatSymbolsProvider;.getInstance:(Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:text:spi:NumberFormatProvider|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:spi:LocaleServiceProvider|] {
   }
    procedure [|void|] [|java:text:spi:NumberFormatProvider.<init>|] ([|java:text:spi:NumberFormatProvider|] v0 @type (this)) @owner [|java:text:spi:NumberFormatProvider|] @signature [|Ljava/text/spi/NumberFormatProvider;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L0fa1c4.   call temp:=  [|java:util:spi:LocaleServiceProvider.<init>|](v0) @signature [|Ljava/util/spi/LocaleServiceProvider;.<init>:()V|] @classDescriptor [|java:util:spi:LocaleServiceProvider|] @type direct;
#L0fa1ca.   return @void ;

   }
    procedure [|java:text:NumberFormat|] [|java:text:spi:NumberFormatProvider.getCurrencyInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:NumberFormatProvider|] @signature [|Ljava/text/spi/NumberFormatProvider;.getCurrencyInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:NumberFormat|] [|java:text:spi:NumberFormatProvider.getIntegerInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:NumberFormatProvider|] @signature [|Ljava/text/spi/NumberFormatProvider;.getIntegerInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:NumberFormat|] [|java:text:spi:NumberFormatProvider.getNumberInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:NumberFormatProvider|] @signature [|Ljava/text/spi/NumberFormatProvider;.getNumberInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:text:NumberFormat|] [|java:text:spi:NumberFormatProvider.getPercentInstance|] ([|java:util:Locale|] v0 @type (object)) @owner [|java:text:spi:NumberFormatProvider|] @signature [|Ljava/text/spi/NumberFormatProvider;.getPercentInstance:(Ljava/util/Locale;)Ljava/text/NumberFormat;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:AbstractCollection|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:util:Collection|] {
   }
    procedure [|void|] [|java:util:AbstractCollection.<init>|] ([|java:util:AbstractCollection|] v0 @type (this)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;


      
#L0fa1dc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0fa1e2.   return @void ;

   }
    procedure [|boolean|] [|java:util:AbstractCollection.add|] ([|java:util:AbstractCollection|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0fa1f4.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0fa1f8.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0fa1fe.   throw v0;

   }
    procedure [|boolean|] [|java:util:AbstractCollection.addAll|] ([|java:util:AbstractCollection|] v3 @type (this), [|java:util:Collection|] v4 @type (object)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0005,L0018));
        [|boolean|] v1 @varname [|result|] @scope ((L0001,L0018));


        v2;
      
#L0fa210.   v1:= 0  @length 4;
#L0fa212.   call temp:=  [|java:util:Collection.iterator|](v4) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fa218.   v0:= temp  @type object;
#L0fa21a.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa220.   v2:= temp;
#L0fa222.   if v2 == 0 then goto L0fa23e;
#L0fa226.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa22c.   v2:= temp  @type object;
#L0fa22e.   call temp:=  [|java:util:AbstractCollection.add|](v3, v2) @signature [|Ljava/util/AbstractCollection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa234.   v2:= temp;
#L0fa236.   if v2 == 0 then goto L0fa21a;
#L0fa23a.   v1:= 1  @length 4;
#L0fa23c.   goto L0fa21a;
#L0fa23e.   return v1;

   }
    procedure [|void|] [|java:util:AbstractCollection.clear|] ([|java:util:AbstractCollection|] v2 @type (this)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.clear:()V|] @Access PUBLIC {
      local temp ;

        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0004,L0012));

        v1;
      
#L0fa250.   call temp:=  [|java:util:AbstractCollection.iterator|](v2) @signature [|Ljava/util/AbstractCollection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa256.   v0:= temp  @type object;
#L0fa258.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa25e.   v1:= temp;
#L0fa260.   if v1 == 0 then goto L0fa272;
#L0fa264.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa26a.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa270.   goto L0fa258;
#L0fa272.   return @void ;

   }
    procedure [|boolean|] [|java:util:AbstractCollection.contains|] ([|java:util:AbstractCollection|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0005,L0027));


        v1;
        v2;
      
#L0fa284.   v1:= 1  @length 4;
#L0fa286.   call temp:=  [|java:util:AbstractCollection.iterator|](v3) @signature [|Ljava/util/AbstractCollection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa28c.   v0:= temp  @type object;
#L0fa28e.   if v4 == 0 then goto L0fa2b4;
#L0fa292.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa298.   v2:= temp;
#L0fa29a.   if v2 == 0 then goto L0fa2ce;
#L0fa29e.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa2a4.   v2:= temp  @type object;
#L0fa2a6.   call temp:=  [|java:lang:Object.equals|](v4, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0fa2ac.   v2:= temp;
#L0fa2ae.   if v2 == 0 then goto L0fa292;
#L0fa2b2.   return v1;
#L0fa2b4.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa2ba.   v2:= temp;
#L0fa2bc.   if v2 == 0 then goto L0fa2ce;
#L0fa2c0.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa2c6.   v2:= temp  @type object;
#L0fa2c8.   if v2 != 0 then goto L0fa2b4;
#L0fa2cc.   goto L0fa2b2;
#L0fa2ce.   v1:= 0  @length 4;
#L0fa2d0.   goto L0fa2b2;

   }
    procedure [|boolean|] [|java:util:AbstractCollection.containsAll|] ([|java:util:AbstractCollection|] v2 @type (this), [|java:util:Collection|] v3 @type (object)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.containsAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0004,L0018));


        v1;
      
#L0fa2e4.   call temp:=  [|java:util:Collection.iterator|](v3) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fa2ea.   v0:= temp  @type object;
#L0fa2ec.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa2f2.   v1:= temp;
#L0fa2f4.   if v1 == 0 then goto L0fa310;
#L0fa2f8.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa2fe.   v1:= temp  @type object;
#L0fa300.   call temp:=  [|java:util:AbstractCollection.contains|](v2, v1) @signature [|Ljava/util/AbstractCollection;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa306.   v1:= temp;
#L0fa308.   if v1 != 0 then goto L0fa2ec;
#L0fa30c.   v1:= 0  @length 4;
#L0fa30e.   return v1;
#L0fa310.   v1:= 1  @length 4;
#L0fa312.   goto L0fa30e;

   }
    procedure [|boolean|] [|java:util:AbstractCollection.isEmpty|] ([|java:util:AbstractCollection|] v1 @type (this)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fa324.   call temp:=  [|java:util:AbstractCollection.size|](v1) @signature [|Ljava/util/AbstractCollection;.size:()I|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa32a.   v0:= temp;
#L0fa32c.   if v0 != 0 then goto L0fa334;
#L0fa330.   v0:= 1  @length 4;
#L0fa332.   return v0;
#L0fa334.   v0:= 0  @length 4;
#L0fa336.   goto L0fa332;

   }
    procedure [|java:util:Iterator|] [|java:util:AbstractCollection.iterator|] () @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:AbstractCollection.remove|] ([|java:util:AbstractCollection|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0005,L002d));


        v1;
        v2;
      
#L0fa348.   v1:= 1  @length 4;
#L0fa34a.   call temp:=  [|java:util:AbstractCollection.iterator|](v3) @signature [|Ljava/util/AbstractCollection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa350.   v0:= temp  @type object;
#L0fa352.   if v4 == 0 then goto L0fa37e;
#L0fa356.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa35c.   v2:= temp;
#L0fa35e.   if v2 == 0 then goto L0fa39e;
#L0fa362.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa368.   v2:= temp  @type object;
#L0fa36a.   call temp:=  [|java:lang:Object.equals|](v4, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0fa370.   v2:= temp;
#L0fa372.   if v2 == 0 then goto L0fa356;
#L0fa376.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa37c.   return v1;
#L0fa37e.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa384.   v2:= temp;
#L0fa386.   if v2 == 0 then goto L0fa39e;
#L0fa38a.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa390.   v2:= temp  @type object;
#L0fa392.   if v2 != 0 then goto L0fa37e;
#L0fa396.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa39c.   goto L0fa37c;
#L0fa39e.   v1:= 0  @length 4;
#L0fa3a0.   goto L0fa37c;

   }
    procedure [|boolean|] [|java:util:AbstractCollection.removeAll|] ([|java:util:AbstractCollection|] v3 @type (this), [|java:util:Collection|] v4 @type (object)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0005,L001b));
        [|boolean|] v1 @varname [|result|] @scope ((L0001,L001b));


        v2;
      
#L0fa3b4.   v1:= 0  @length 4;
#L0fa3b6.   call temp:=  [|java:util:AbstractCollection.iterator|](v3) @signature [|Ljava/util/AbstractCollection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa3bc.   v0:= temp  @type object;
#L0fa3be.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa3c4.   v2:= temp;
#L0fa3c6.   if v2 == 0 then goto L0fa3e8;
#L0fa3ca.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa3d0.   v2:= temp  @type object;
#L0fa3d2.   call temp:=  [|java:util:Collection.contains|](v4, v2) @signature [|Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fa3d8.   v2:= temp;
#L0fa3da.   if v2 == 0 then goto L0fa3be;
#L0fa3de.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa3e4.   v1:= 1  @length 4;
#L0fa3e6.   goto L0fa3be;
#L0fa3e8.   return v1;

   }
    procedure [|boolean|] [|java:util:AbstractCollection.retainAll|] ([|java:util:AbstractCollection|] v3 @type (this), [|java:util:Collection|] v4 @type (object)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.retainAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0005,L001b));
        [|boolean|] v1 @varname [|result|] @scope ((L0001,L001b));


        v2;
      
#L0fa3fc.   v1:= 0  @length 4;
#L0fa3fe.   call temp:=  [|java:util:AbstractCollection.iterator|](v3) @signature [|Ljava/util/AbstractCollection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa404.   v0:= temp  @type object;
#L0fa406.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa40c.   v2:= temp;
#L0fa40e.   if v2 == 0 then goto L0fa430;
#L0fa412.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa418.   v2:= temp  @type object;
#L0fa41a.   call temp:=  [|java:util:Collection.contains|](v4, v2) @signature [|Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fa420.   v2:= temp;
#L0fa422.   if v2 != 0 then goto L0fa406;
#L0fa426.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa42c.   v1:= 1  @length 4;
#L0fa42e.   goto L0fa406;
#L0fa430.   return v1;

   }
    procedure [|int|] [|java:util:AbstractCollection.size|] () @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.size:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|][] [|java:util:AbstractCollection.toArray|] ([|java:util:AbstractCollection|] v6 @type (this)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|int|] v1 @varname [|index|] @scope ((L0005,L000c), (L000c,L0010), (L0010,L0017), (L0017,L0019));
        [|java:lang:Object|][] v0 @varname [|array|] @scope ((L000b,L0019));
        [|java:util:Iterator|] v3 @varname [|it|] @scope ((L0009,L0019));
        [|int|] v4 @varname [|size|] @scope ((L0004,L0019));

        v2;
        v5;
      
#L0fa444.   call temp:=  [|java:util:AbstractCollection.size|](v6) @signature [|Ljava/util/AbstractCollection;.size:()I|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa44a.   v4:= temp;
#L0fa44c.   v1:= 0  @length 4;
#L0fa44e.   call temp:=  [|java:util:AbstractCollection.iterator|](v6) @signature [|Ljava/util/AbstractCollection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa454.   v3:= temp  @type object;
#L0fa456.   v0:= new [|java:lang:Object|][v4];
#L0fa45a.   v2:= v1;
#L0fa45c.   if v2 >= v4 then goto L0fa474;
#L0fa460.   v1:= v2 + 1;
#L0fa464.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa46a.   v5:= temp  @type object;
#L0fa46c.   v0[v2]:= v5  @type object;
#L0fa470.   v2:= v1;
#L0fa472.   goto L0fa45c;
#L0fa474.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:AbstractCollection.toArray|] ([|java:util:AbstractCollection|] v7 @type (this), [|java:lang:Object|][] v8 @type (object)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Class|] v0 @varname [|ct|] @scope ((L0010,L0019));
        [|int|] v3 @varname [|index|] @scope ((L0005,L0029), (L0029,L002c), (L002c,L0034));
        [|java:lang:Object|] v1 @varname [|entry|] @scope ((L0027,L002d));
        [|java:util:Iterator|] v2 @varname [|i$|] @scope ((L001d,L0034));
        [|int|] v5 @varname [|size|] @scope ((L0004,L0034));


        v4;
        v6;
      
#L0fa488.   call temp:=  [|java:util:AbstractCollection.size|](v7) @signature [|Ljava/util/AbstractCollection;.size:()I|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa48e.   v5:= temp;
#L0fa490.   v3:= 0  @length 4;
#L0fa492.   v6:= v8.length;
#L0fa494.   if v5 <= v6 then goto L0fa4ba;
#L0fa498.   call temp:=  [|java:lang:Object.getClass|](v8) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0fa49e.   v6:= temp  @type object;
#L0fa4a0.   call temp:=  [|java:lang:Class.getComponentType|](v6) @signature [|Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L0fa4a6.   v0:= temp  @type object;
#L0fa4a8.   call temp:=  [|java:lang:reflect:Array.newInstance|](v0, v5) @signature [|Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L0fa4ae.   v6:= temp  @type object;
#L0fa4b0.   v6:= ([|java:lang:Object|][])v6;
#L0fa4b4.   v8:= v6  @type object;
#L0fa4b6.   v8:= ([|java:lang:Object|][])v8;
#L0fa4ba.   call temp:=  [|java:util:AbstractCollection.iterator|](v7) @signature [|Ljava/util/AbstractCollection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa4c0.   v2:= temp  @type object;
#L0fa4c2.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa4c8.   v6:= temp;
#L0fa4ca.   if v6 == 0 then goto L0fa4e2;
#L0fa4ce.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa4d4.   v1:= temp  @type object;
#L0fa4d6.   v4:= v3 + 1;
#L0fa4da.   v8[v3]:= v1  @type object;
#L0fa4de.   v3:= v4;
#L0fa4e0.   goto L0fa4c2;
#L0fa4e2.   v6:= v8.length;
#L0fa4e4.   if v3 >= v6 then goto L0fa4ee;
#L0fa4e8.   v6:= 0  @length 4;
#L0fa4ea.   v8[v3]:= v6  @type object;
#L0fa4ee.   return v8  @type object;

   }
    procedure [|java:lang:String|] [|java:util:AbstractCollection.toString|] ([|java:util:AbstractCollection|] v4 @type (this)) @owner [|java:util:AbstractCollection|] @signature [|Ljava/util/AbstractCollection;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v2 @varname [|next|] @scope ((L0027,L003e));
        [|java:lang:StringBuilder|] v0 @varname [|buffer|] @scope ((L0014,L0048));
        [|java:util:Iterator|] v1 @varname [|it|] @scope ((L001d,L0048));

        v3;
      
#L0fa500.   call temp:=  [|java:util:AbstractCollection.isEmpty|](v4) @signature [|Ljava/util/AbstractCollection;.isEmpty:()Z|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa506.   v3:= temp;
#L0fa508.   if v3 == 0 then goto L0fa512;
#L0fa50c.   v3:= "[]" @type (object, string);
#L0fa510.   return v3  @type object;
#L0fa512.   v0:= new [|java:lang:StringBuilder|];
#L0fa516.   call temp:=  [|java:util:AbstractCollection.size|](v4) @signature [|Ljava/util/AbstractCollection;.size:()I|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa51c.   v3:= temp;
#L0fa51e.   v3:= v3 * 16;
#L0fa522.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v3) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L0fa528.   v3:= 91  @length 16;
#L0fa52c.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0fa532.   call temp:=  [|java:util:AbstractCollection.iterator|](v4) @signature [|Ljava/util/AbstractCollection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractCollection|] @type virtual;
#L0fa538.   v1:= temp  @type object;
#L0fa53a.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa540.   v3:= temp;
#L0fa542.   if v3 == 0 then goto L0fa57c;
#L0fa546.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa54c.   v2:= temp  @type object;
#L0fa54e.   if v2 == v4 then goto L0fa570;
#L0fa552.   call temp:=  [|java:lang:StringBuilder.append|](v0, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0fa558.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fa55e.   v3:= temp;
#L0fa560.   if v3 == 0 then goto L0fa53a;
#L0fa564.   v3:= ", " @type (object, string);
#L0fa568.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0fa56e.   goto L0fa53a;
#L0fa570.   v3:= "(this Collection)" @type (object, string);
#L0fa574.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0fa57a.   goto L0fa558;
#L0fa57c.   v3:= 93  @length 16;
#L0fa580.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0fa586.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L0fa58c.   v3:= temp  @type object;
#L0fa58e.   goto L0fa510;

   }
record [|java:util:AbstractList$SimpleListIterator|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
      [|int|] [|java:util:AbstractList$SimpleListIterator.expectedModCount|]    @AccessFlag ;
      [|int|] [|java:util:AbstractList$SimpleListIterator.lastPosition|]    @AccessFlag ;
      [|int|] [|java:util:AbstractList$SimpleListIterator.pos|]    @AccessFlag ;
      [|java:util:AbstractList|] [|java:util:AbstractList$SimpleListIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:AbstractList$SimpleListIterator.<init>|] ([|java:util:AbstractList$SimpleListIterator|] v1 @type (this), [|java:util:AbstractList|] v2 @type (object)) @owner [|java:util:AbstractList$SimpleListIterator|] @signature [|Ljava/util/AbstractList$SimpleListIterator;.<init>:(Ljava/util/AbstractList;)V|] @Access CONSTRUCTOR {
      local temp ;


        v0;
      
#L0fa5a0.   v0:= -1  @length 4;
#L0fa5a2.   v1.[|java:util:AbstractList$SimpleListIterator.this$0|]  := v2 @type object;
#L0fa5a6.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0fa5ac.   v1.[|java:util:AbstractList$SimpleListIterator.pos|]  := v0;
#L0fa5b0.   v1.[|java:util:AbstractList$SimpleListIterator.lastPosition|]  := v0;
#L0fa5b4.   v0:= v2.[|java:util:AbstractList.modCount|] ;
#L0fa5b8.   v1.[|java:util:AbstractList$SimpleListIterator.expectedModCount|]  := v0;
#L0fa5bc.   return @void ;

   }
    procedure [|boolean|] [|java:util:AbstractList$SimpleListIterator.hasNext|] ([|java:util:AbstractList$SimpleListIterator|] v2 @type (this)) @owner [|java:util:AbstractList$SimpleListIterator|] @signature [|Ljava/util/AbstractList$SimpleListIterator;.hasNext:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0fa5d0.   v0:= v2.[|java:util:AbstractList$SimpleListIterator.pos|] ;
#L0fa5d4.   v0:= v0 + 1;
#L0fa5d8.   v1:= v2.[|java:util:AbstractList$SimpleListIterator.this$0|]   @type object;
#L0fa5dc.   call temp:=  [|java:util:AbstractList.size|](v1) @signature [|Ljava/util/AbstractList;.size:()I|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fa5e2.   v1:= temp;
#L0fa5e4.   if v0 >= v1 then goto L0fa5ec;
#L0fa5e8.   v0:= 1  @length 4;
#L0fa5ea.   return v0;
#L0fa5ec.   v0:= 0  @length 4;
#L0fa5ee.   goto L0fa5ea;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList$SimpleListIterator.next|] ([|java:util:AbstractList$SimpleListIterator|] v4 @type (this)) @owner [|java:util:AbstractList$SimpleListIterator|] @signature [|Ljava/util/AbstractList$SimpleListIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v1 @varname [|result|] @scope ((L0012,L001b));
        [|java:lang:IndexOutOfBoundsException|] v0 @varname [|e|] @scope ((L001c,L0022));

        v2;
        v3;
      
#L0fa600.   v2:= v4.[|java:util:AbstractList$SimpleListIterator.expectedModCount|] ;
#L0fa604.   v3:= v4.[|java:util:AbstractList$SimpleListIterator.this$0|]   @type object;
#L0fa608.   v3:= v3.[|java:util:AbstractList.modCount|] ;
#L0fa60c.   if v2 != v3 then goto L0fa644;
#L0fa610.   v2:= v4.[|java:util:AbstractList$SimpleListIterator.this$0|]   @type object;
#L0fa614.   v3:= v4.[|java:util:AbstractList$SimpleListIterator.pos|] ;
#L0fa618.   v3:= v3 + 1;
#L0fa61c.   call temp:=  [|java:util:AbstractList.get|](v2, v3) @signature [|Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fa622.   v1:= temp  @type object;
#L0fa624.   v2:= v4.[|java:util:AbstractList$SimpleListIterator.pos|] ;
#L0fa628.   v2:= v2 + 1;
#L0fa62c.   v4.[|java:util:AbstractList$SimpleListIterator.pos|]  := v2;
#L0fa630.   v4.[|java:util:AbstractList$SimpleListIterator.lastPosition|]  := v2;
#L0fa634.   return v1  @type object;
#L0fa636.   v0:= Exception  @type object;
#L0fa638.   v2:= new [|java:util:NoSuchElementException|];
#L0fa63c.   call temp:=  [|java:util:NoSuchElementException.<init>|](v2) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L0fa642.   throw v2;
#L0fa644.   v2:= new [|java:util:ConcurrentModificationException|];
#L0fa648.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v2) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fa64e.   throw v2;
  catch  [|java:lang:IndexOutOfBoundsException|] @[L0fa610..L0fa634] goto L0fa636;

   }
    procedure [|void|] [|java:util:AbstractList$SimpleListIterator.remove|] ([|java:util:AbstractList$SimpleListIterator|] v4 @type (this)) @owner [|java:util:AbstractList$SimpleListIterator|] @signature [|Ljava/util/AbstractList$SimpleListIterator;.remove:()V|] @Access PUBLIC {
      local temp ;

        [|java:lang:IndexOutOfBoundsException|] v0 @varname [|e|] @scope ((L0036,L003c));

        v1;
        v2;
        v3;
      
#L0fa670.   v3:= -1  @length 4;
#L0fa672.   v1:= v4.[|java:util:AbstractList$SimpleListIterator.lastPosition|] ;
#L0fa676.   if v1 != v3 then goto L0fa686;
#L0fa67a.   v1:= new [|java:lang:IllegalStateException|];
#L0fa67e.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0fa684.   throw v1;
#L0fa686.   v1:= v4.[|java:util:AbstractList$SimpleListIterator.expectedModCount|] ;
#L0fa68a.   v2:= v4.[|java:util:AbstractList$SimpleListIterator.this$0|]   @type object;
#L0fa68e.   v2:= v2.[|java:util:AbstractList.modCount|] ;
#L0fa692.   if v1 == v2 then goto L0fa6a2;
#L0fa696.   v1:= new [|java:util:ConcurrentModificationException|];
#L0fa69a.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v1) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fa6a0.   throw v1;
#L0fa6a2.   v1:= v4.[|java:util:AbstractList$SimpleListIterator.this$0|]   @type object;
#L0fa6a6.   v2:= v4.[|java:util:AbstractList$SimpleListIterator.lastPosition|] ;
#L0fa6aa.   call temp:=  [|java:util:AbstractList.remove|](v1, v2) @signature [|Ljava/util/AbstractList;.remove:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fa6b0.   v1:= v4.[|java:util:AbstractList$SimpleListIterator.this$0|]   @type object;
#L0fa6b4.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fa6b8.   v4.[|java:util:AbstractList$SimpleListIterator.expectedModCount|]  := v1;
#L0fa6bc.   v1:= v4.[|java:util:AbstractList$SimpleListIterator.pos|] ;
#L0fa6c0.   v2:= v4.[|java:util:AbstractList$SimpleListIterator.lastPosition|] ;
#L0fa6c4.   if v1 != v2 then goto L0fa6d4;
#L0fa6c8.   v1:= v4.[|java:util:AbstractList$SimpleListIterator.pos|] ;
#L0fa6cc.   v1:= v1 + -1;
#L0fa6d0.   v4.[|java:util:AbstractList$SimpleListIterator.pos|]  := v1;
#L0fa6d4.   v4.[|java:util:AbstractList$SimpleListIterator.lastPosition|]  := v3;
#L0fa6d8.   return @void ;
#L0fa6da.   v0:= Exception  @type object;
#L0fa6dc.   v1:= new [|java:util:ConcurrentModificationException|];
#L0fa6e0.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v1) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fa6e6.   throw v1;
  catch  [|java:lang:IndexOutOfBoundsException|] @[L0fa6a2..L0fa6b0] goto L0fa6da;

   }
record [|java:util:ListIterator|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:Iterator|] {
   }
    procedure [|void|] [|java:util:ListIterator.add|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:ListIterator|] @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:ListIterator.hasNext|] () @owner [|java:util:ListIterator|] @signature [|Ljava/util/ListIterator;.hasNext:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:ListIterator.hasPrevious|] () @owner [|java:util:ListIterator|] @signature [|Ljava/util/ListIterator;.hasPrevious:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:ListIterator.next|] () @owner [|java:util:ListIterator|] @signature [|Ljava/util/ListIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:ListIterator.nextIndex|] () @owner [|java:util:ListIterator|] @signature [|Ljava/util/ListIterator;.nextIndex:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:ListIterator.previous|] () @owner [|java:util:ListIterator|] @signature [|Ljava/util/ListIterator;.previous:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:ListIterator.previousIndex|] () @owner [|java:util:ListIterator|] @signature [|Ljava/util/ListIterator;.previousIndex:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:ListIterator.remove|] () @owner [|java:util:ListIterator|] @signature [|Ljava/util/ListIterator;.remove:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:ListIterator.set|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:ListIterator|] @signature [|Ljava/util/ListIterator;.set:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:AbstractList$FullListIterator|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractList$SimpleListIterator|], [|java:util:ListIterator|] {
      [|java:util:AbstractList|] [|java:util:AbstractList$FullListIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:AbstractList$FullListIterator.<init>|] ([|java:util:AbstractList$FullListIterator|] v1 @type (this), [|java:util:AbstractList|] v2 @type (object), [|int|] v3) @owner [|java:util:AbstractList$FullListIterator|] @signature [|Ljava/util/AbstractList$FullListIterator;.<init>:(Ljava/util/AbstractList;I)V|] @Access CONSTRUCTOR {
      local temp ;



        v0;
      
#L0fa708.   v1.[|java:util:AbstractList$FullListIterator.this$0|]  := v2 @type object;
#L0fa70c.   call temp:=  [|java:util:AbstractList$SimpleListIterator.<init>|](v1, v2) @signature [|Ljava/util/AbstractList$SimpleListIterator;.<init>:(Ljava/util/AbstractList;)V|] @classDescriptor [|java:util:AbstractList$SimpleListIterator|] @type direct;
#L0fa712.   if v3 < 0 then goto L0fa72c;
#L0fa716.   call temp:=  [|java:util:AbstractList.size|](v2) @signature [|Ljava/util/AbstractList;.size:()I|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fa71c.   v0:= temp;
#L0fa71e.   if v3 > v0 then goto L0fa72c;
#L0fa722.   v0:= v3 + -1;
#L0fa726.   v1.[|java:util:AbstractList$FullListIterator.pos|]  := v0;
#L0fa72a.   return @void ;
#L0fa72c.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L0fa730.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0fa736.   throw v0;

   }
    procedure [|void|] [|java:util:AbstractList$FullListIterator.add|] ([|java:util:AbstractList$FullListIterator|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractList$FullListIterator|] @signature [|Ljava/util/AbstractList$FullListIterator;.add:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;

        [|java:lang:IndexOutOfBoundsException|] v0 @varname [|e|] @scope ((L002a,L0030));


        v1;
        v2;
      
#L0fa748.   v1:= v3.[|java:util:AbstractList$FullListIterator.expectedModCount|] ;
#L0fa74c.   v2:= v3.[|java:util:AbstractList$FullListIterator.this$0|]   @type object;
#L0fa750.   v2:= v2.[|java:util:AbstractList.modCount|] ;
#L0fa754.   if v1 != v2 then goto L0fa7a8;
#L0fa758.   v1:= v3.[|java:util:AbstractList$FullListIterator.this$0|]   @type object;
#L0fa75c.   v2:= v3.[|java:util:AbstractList$FullListIterator.pos|] ;
#L0fa760.   v2:= v2 + 1;
#L0fa764.   call temp:=  [|java:util:AbstractList.add|](v1, v2, v4) @signature [|Ljava/util/AbstractList;.add:(ILjava/lang/Object;)V|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fa76a.   v1:= v3.[|java:util:AbstractList$FullListIterator.pos|] ;
#L0fa76e.   v1:= v1 + 1;
#L0fa772.   v3.[|java:util:AbstractList$FullListIterator.pos|]  := v1;
#L0fa776.   v1:= -1  @length 4;
#L0fa778.   v3.[|java:util:AbstractList$FullListIterator.lastPosition|]  := v1;
#L0fa77c.   v1:= v3.[|java:util:AbstractList$FullListIterator.this$0|]   @type object;
#L0fa780.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fa784.   v2:= v3.[|java:util:AbstractList$FullListIterator.expectedModCount|] ;
#L0fa788.   if v1 == v2 then goto L0fa798;
#L0fa78c.   v1:= v3.[|java:util:AbstractList$FullListIterator.this$0|]   @type object;
#L0fa790.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fa794.   v3.[|java:util:AbstractList$FullListIterator.expectedModCount|]  := v1;
#L0fa798.   return @void ;
#L0fa79a.   v0:= Exception  @type object;
#L0fa79c.   v1:= new [|java:util:NoSuchElementException|];
#L0fa7a0.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L0fa7a6.   throw v1;
#L0fa7a8.   v1:= new [|java:util:ConcurrentModificationException|];
#L0fa7ac.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v1) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fa7b2.   throw v1;
  catch  [|java:lang:IndexOutOfBoundsException|] @[L0fa758..L0fa76a] goto L0fa79a;

   }
    procedure [|boolean|] [|java:util:AbstractList$FullListIterator.hasPrevious|] ([|java:util:AbstractList$FullListIterator|] v1 @type (this)) @owner [|java:util:AbstractList$FullListIterator|] @signature [|Ljava/util/AbstractList$FullListIterator;.hasPrevious:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fa7d4.   v0:= v1.[|java:util:AbstractList$FullListIterator.pos|] ;
#L0fa7d8.   if v0 < 0 then goto L0fa7e0;
#L0fa7dc.   v0:= 1  @length 4;
#L0fa7de.   return v0;
#L0fa7e0.   v0:= 0  @length 4;
#L0fa7e2.   goto L0fa7de;

   }
    procedure [|int|] [|java:util:AbstractList$FullListIterator.nextIndex|] ([|java:util:AbstractList$FullListIterator|] v1 @type (this)) @owner [|java:util:AbstractList$FullListIterator|] @signature [|Ljava/util/AbstractList$FullListIterator;.nextIndex:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fa7f4.   v0:= v1.[|java:util:AbstractList$FullListIterator.pos|] ;
#L0fa7f8.   v0:= v0 + 1;
#L0fa7fc.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList$FullListIterator.previous|] ([|java:util:AbstractList$FullListIterator|] v4 @type (this)) @owner [|java:util:AbstractList$FullListIterator|] @signature [|Ljava/util/AbstractList$FullListIterator;.previous:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v1 @varname [|result|] @scope ((L0010,L001b));
        [|java:lang:IndexOutOfBoundsException|] v0 @varname [|e|] @scope ((L001c,L0022));

        v2;
        v3;
      
#L0fa810.   v2:= v4.[|java:util:AbstractList$FullListIterator.expectedModCount|] ;
#L0fa814.   v3:= v4.[|java:util:AbstractList$FullListIterator.this$0|]   @type object;
#L0fa818.   v3:= v3.[|java:util:AbstractList.modCount|] ;
#L0fa81c.   if v2 != v3 then goto L0fa854;
#L0fa820.   v2:= v4.[|java:util:AbstractList$FullListIterator.this$0|]   @type object;
#L0fa824.   v3:= v4.[|java:util:AbstractList$FullListIterator.pos|] ;
#L0fa828.   call temp:=  [|java:util:AbstractList.get|](v2, v3) @signature [|Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fa82e.   v1:= temp  @type object;
#L0fa830.   v2:= v4.[|java:util:AbstractList$FullListIterator.pos|] ;
#L0fa834.   v4.[|java:util:AbstractList$FullListIterator.lastPosition|]  := v2;
#L0fa838.   v2:= v4.[|java:util:AbstractList$FullListIterator.pos|] ;
#L0fa83c.   v2:= v2 + -1;
#L0fa840.   v4.[|java:util:AbstractList$FullListIterator.pos|]  := v2;
#L0fa844.   return v1  @type object;
#L0fa846.   v0:= Exception  @type object;
#L0fa848.   v2:= new [|java:util:NoSuchElementException|];
#L0fa84c.   call temp:=  [|java:util:NoSuchElementException.<init>|](v2) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L0fa852.   throw v2;
#L0fa854.   v2:= new [|java:util:ConcurrentModificationException|];
#L0fa858.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v2) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fa85e.   throw v2;
  catch  [|java:lang:IndexOutOfBoundsException|] @[L0fa820..L0fa844] goto L0fa846;

   }
    procedure [|int|] [|java:util:AbstractList$FullListIterator.previousIndex|] ([|java:util:AbstractList$FullListIterator|] v1 @type (this)) @owner [|java:util:AbstractList$FullListIterator|] @signature [|Ljava/util/AbstractList$FullListIterator;.previousIndex:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fa880.   v0:= v1.[|java:util:AbstractList$FullListIterator.pos|] ;
#L0fa884.   return v0;

   }
    procedure [|void|] [|java:util:AbstractList$FullListIterator.set|] ([|java:util:AbstractList$FullListIterator|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractList$FullListIterator|] @signature [|Ljava/util/AbstractList$FullListIterator;.set:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;

        [|java:lang:IndexOutOfBoundsException|] v0 @varname [|e|] @scope ((L0011,L0017));


        v1;
        v2;
      
#L0fa898.   v1:= v3.[|java:util:AbstractList$FullListIterator.expectedModCount|] ;
#L0fa89c.   v2:= v3.[|java:util:AbstractList$FullListIterator.this$0|]   @type object;
#L0fa8a0.   v2:= v2.[|java:util:AbstractList.modCount|] ;
#L0fa8a4.   if v1 != v2 then goto L0fa8c6;
#L0fa8a8.   v1:= v3.[|java:util:AbstractList$FullListIterator.this$0|]   @type object;
#L0fa8ac.   v2:= v3.[|java:util:AbstractList$FullListIterator.lastPosition|] ;
#L0fa8b0.   call temp:=  [|java:util:AbstractList.set|](v1, v2, v4) @signature [|Ljava/util/AbstractList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fa8b6.   return @void ;
#L0fa8b8.   v0:= Exception  @type object;
#L0fa8ba.   v1:= new [|java:lang:IllegalStateException|];
#L0fa8be.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L0fa8c4.   throw v1;
#L0fa8c6.   v1:= new [|java:util:ConcurrentModificationException|];
#L0fa8ca.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v1) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fa8d0.   throw v1;
  catch  [|java:lang:IndexOutOfBoundsException|] @[L0fa8a8..L0fa8b6] goto L0fa8b8;

   }
record [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|]  @type class @AccessFlag FINAL extends  [|java:util:ListIterator|] {
      [|int|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.end|]    @AccessFlag PRIVATE;
      [|java:util:ListIterator|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.start|]    @AccessFlag PRIVATE;
      [|java:util:AbstractList$SubAbstractList|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.subList|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.<init>|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v1 @type (this), [|java:util:ListIterator|] v2 @type (object), [|java:util:AbstractList$SubAbstractList|] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.<init>:(Ljava/util/ListIterator;Ljava/util/AbstractList$SubAbstractList;II)V|] @Access CONSTRUCTOR {
      local temp ;






        v0;
      
#L0fa8f4.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0fa8fa.   v1.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]  := v2 @type object;
#L0fa8fe.   v1.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.subList|]  := v3 @type object;
#L0fa902.   v1.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.start|]  := v4;
#L0fa906.   v0:= v1.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.start|] ;
#L0fa90a.   v0:= v0 + v5  @type int;
#L0fa90c.   v1.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.end|]  := v0;
#L0fa910.   return @void ;

   }
    procedure [|void|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.add|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.add:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L0fa924.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0fa928.   call temp:=  [|java:util:ListIterator.add|](v0, v3) @signature [|Ljava/util/ListIterator;.add:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fa92e.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.subList|]   @type object;
#L0fa932.   v1:= 1  @length 4;
#L0fa934.   call temp:=  [|java:util:AbstractList$SubAbstractList.sizeChanged|](v0, v1) @signature [|Ljava/util/AbstractList$SubAbstractList;.sizeChanged:(Z)V|] @classDescriptor [|java:util:AbstractList$SubAbstractList|] @type virtual;
#L0fa93a.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.end|] ;
#L0fa93e.   v0:= v0 + 1;
#L0fa942.   v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.end|]  := v0;
#L0fa946.   return @void ;

   }
    procedure [|boolean|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.hasNext|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v2 @type (this)) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.hasNext:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0fa958.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0fa95c.   call temp:=  [|java:util:ListIterator.nextIndex|](v0) @signature [|Ljava/util/ListIterator;.nextIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fa962.   v0:= temp;
#L0fa964.   v1:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.end|] ;
#L0fa968.   if v0 >= v1 then goto L0fa970;
#L0fa96c.   v0:= 1  @length 4;
#L0fa96e.   return v0;
#L0fa970.   v0:= 0  @length 4;
#L0fa972.   goto L0fa96e;

   }
    procedure [|boolean|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.hasPrevious|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v2 @type (this)) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.hasPrevious:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0fa984.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0fa988.   call temp:=  [|java:util:ListIterator.previousIndex|](v0) @signature [|Ljava/util/ListIterator;.previousIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fa98e.   v0:= temp;
#L0fa990.   v1:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.start|] ;
#L0fa994.   if v0 < v1 then goto L0fa99c;
#L0fa998.   v0:= 1  @length 4;
#L0fa99a.   return v0;
#L0fa99c.   v0:= 0  @length 4;
#L0fa99e.   goto L0fa99a;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.next|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v2 @type (this)) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0fa9b0.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0fa9b4.   call temp:=  [|java:util:ListIterator.nextIndex|](v0) @signature [|Ljava/util/ListIterator;.nextIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fa9ba.   v0:= temp;
#L0fa9bc.   v1:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.end|] ;
#L0fa9c0.   if v0 >= v1 then goto L0fa9d2;
#L0fa9c4.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0fa9c8.   call temp:=  [|java:util:ListIterator.next|](v0) @signature [|Ljava/util/ListIterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fa9ce.   v0:= temp  @type object;
#L0fa9d0.   return v0  @type object;
#L0fa9d2.   v0:= new [|java:util:NoSuchElementException|];
#L0fa9d6.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L0fa9dc.   throw v0;

   }
    procedure [|int|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.nextIndex|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v2 @type (this)) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.nextIndex:()I|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0fa9f0.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0fa9f4.   call temp:=  [|java:util:ListIterator.nextIndex|](v0) @signature [|Ljava/util/ListIterator;.nextIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fa9fa.   v0:= temp;
#L0fa9fc.   v1:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.start|] ;
#L0faa00.   v0:= v0 - v1  @type int;
#L0faa02.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.previous|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v2 @type (this)) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.previous:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0faa14.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0faa18.   call temp:=  [|java:util:ListIterator.previousIndex|](v0) @signature [|Ljava/util/ListIterator;.previousIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0faa1e.   v0:= temp;
#L0faa20.   v1:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.start|] ;
#L0faa24.   if v0 < v1 then goto L0faa36;
#L0faa28.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0faa2c.   call temp:=  [|java:util:ListIterator.previous|](v0) @signature [|Ljava/util/ListIterator;.previous:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0faa32.   v0:= temp  @type object;
#L0faa34.   return v0  @type object;
#L0faa36.   v0:= new [|java:util:NoSuchElementException|];
#L0faa3a.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L0faa40.   throw v0;

   }
    procedure [|int|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.previousIndex|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v2 @type (this)) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.previousIndex:()I|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|previous|] @scope ((L0006,L0011));

        v1;
      
#L0faa54.   v1:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0faa58.   call temp:=  [|java:util:ListIterator.previousIndex|](v1) @signature [|Ljava/util/ListIterator;.previousIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0faa5e.   v0:= temp;
#L0faa60.   v1:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.start|] ;
#L0faa64.   if v0 < v1 then goto L0faa72;
#L0faa68.   v1:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.start|] ;
#L0faa6c.   v1:= v0 - v1  @type int;
#L0faa70.   return v1;
#L0faa72.   v1:= -1  @length 4;
#L0faa74.   goto L0faa70;

   }
    procedure [|void|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.remove|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v2 @type (this)) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.remove:()V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0faa88.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0faa8c.   call temp:=  [|java:util:ListIterator.remove|](v0) @signature [|Ljava/util/ListIterator;.remove:()V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0faa92.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.subList|]   @type object;
#L0faa96.   v1:= 0  @length 4;
#L0faa98.   call temp:=  [|java:util:AbstractList$SubAbstractList.sizeChanged|](v0, v1) @signature [|Ljava/util/AbstractList$SubAbstractList;.sizeChanged:(Z)V|] @classDescriptor [|java:util:AbstractList$SubAbstractList|] @type virtual;
#L0faa9e.   v0:= v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.end|] ;
#L0faaa2.   v0:= v0 + -1;
#L0faaa6.   v2.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.end|]  := v0;
#L0faaaa.   return @void ;

   }
    procedure [|void|] [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.set|] ([|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.set:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0faabc.   v0:= v1.[|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.iterator|]   @type object;
#L0faac0.   call temp:=  [|java:util:ListIterator.set|](v0, v2) @signature [|Ljava/util/ListIterator;.set:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0faac6.   return @void ;

   }
record [|java:util:List|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:Collection|] {
   }
    procedure [|void|] [|java:util:List.add|] ([|int|] v0, [|java:lang:Object|] v1 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.add:(ILjava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.add|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.addAll|] ([|int|] v0, [|java:util:Collection|] v1 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.addAll:(ILjava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.addAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:List.clear|] () @owner [|java:util:List|] @signature [|Ljava/util/List;.clear:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.contains|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.containsAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.containsAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.equals|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:List.get|] ([|int|] v0) @owner [|java:util:List|] @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:List.hashCode|] () @owner [|java:util:List|] @signature [|Ljava/util/List;.hashCode:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:List.indexOf|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.indexOf:(Ljava/lang/Object;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.isEmpty|] () @owner [|java:util:List|] @signature [|Ljava/util/List;.isEmpty:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Iterator|] [|java:util:List.iterator|] () @owner [|java:util:List|] @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:List.lastIndexOf|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.lastIndexOf:(Ljava/lang/Object;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:ListIterator|] [|java:util:List.listIterator|] () @owner [|java:util:List|] @signature [|Ljava/util/List;.listIterator:()Ljava/util/ListIterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:ListIterator|] [|java:util:List.listIterator|] ([|int|] v0) @owner [|java:util:List|] @signature [|Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:List.remove|] ([|int|] v0) @owner [|java:util:List|] @signature [|Ljava/util/List;.remove:(I)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.remove|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.removeAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:List.retainAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.retainAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:List.set|] ([|int|] v0, [|java:lang:Object|] v1 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:List.size|] () @owner [|java:util:List|] @signature [|Ljava/util/List;.size:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:List|] [|java:util:List.subList|] ([|int|] v0, [|int|] v1) @owner [|java:util:List|] @signature [|Ljava/util/List;.subList:(II)Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|][] [|java:util:List.toArray|] () @owner [|java:util:List|] @signature [|Ljava/util/List;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|][] [|java:util:List.toArray|] ([|java:lang:Object|][] v0 @type (object)) @owner [|java:util:List|] @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:AbstractList|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:AbstractCollection|], [|java:util:List|] {
      [|int|] [|java:util:AbstractList.modCount|]    @AccessFlag PROTECTED_TRANSIENT;
   }
    procedure [|void|] [|java:util:AbstractList.<init>|] ([|java:util:AbstractList|] v0 @type (this)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;


      
#L0faad8.   call temp:=  [|java:util:AbstractCollection.<init>|](v0) @signature [|Ljava/util/AbstractCollection;.<init>:()V|] @classDescriptor [|java:util:AbstractCollection|] @type direct;
#L0faade.   return @void ;

   }
    procedure [|void|] [|java:util:AbstractList.add|] ([|java:util:AbstractList|] v1 @type (this), [|int|] v2, [|java:lang:Object|] v3 @type (object)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.add:(ILjava/lang/Object;)V|] @Access PUBLIC {
      local temp ;




        v0;
      
#L0faaf0.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0faaf4.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0faafa.   throw v0;

   }
    procedure [|boolean|] [|java:util:AbstractList.add|] ([|java:util:AbstractList|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0fab0c.   call temp:=  [|java:util:AbstractList.size|](v1) @signature [|Ljava/util/AbstractList;.size:()I|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fab12.   v0:= temp;
#L0fab14.   call temp:=  [|java:util:AbstractList.add|](v1, v0, v2) @signature [|Ljava/util/AbstractList;.add:(ILjava/lang/Object;)V|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fab1a.   v0:= 1  @length 4;
#L0fab1c.   return v0;

   }
    procedure [|boolean|] [|java:util:AbstractList.addAll|] ([|java:util:AbstractList|] v3 @type (this), [|int|] v4, [|java:util:Collection|] v5 @type (object)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.addAll:(ILjava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;


        [|int|] v1 @varname [|location|] @scope ((L000c,L0014));
        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0004,L001f));



        v2;
      
#L0fab30.   call temp:=  [|java:util:Collection.iterator|](v5) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fab36.   v0:= temp  @type object;
#L0fab38.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fab3e.   v2:= temp;
#L0fab40.   if v2 == 0 then goto L0fab5a;
#L0fab44.   v1:= v4 + 1;
#L0fab48.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fab4e.   v2:= temp  @type object;
#L0fab50.   call temp:=  [|java:util:AbstractList.add|](v3, v4, v2) @signature [|Ljava/util/AbstractList;.add:(ILjava/lang/Object;)V|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fab56.   v4:= v1;
#L0fab58.   goto L0fab38;
#L0fab5a.   call temp:=  [|java:util:Collection.isEmpty|](v5) @signature [|Ljava/util/Collection;.isEmpty:()Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fab60.   v2:= temp;
#L0fab62.   if v2 != 0 then goto L0fab6a;
#L0fab66.   v2:= 1  @length 4;
#L0fab68.   return v2;
#L0fab6a.   v2:= 0  @length 4;
#L0fab6c.   goto L0fab68;

   }
    procedure [|void|] [|java:util:AbstractList.clear|] ([|java:util:AbstractList|] v2 @type (this)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.clear:()V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0fab80.   v0:= 0  @length 4;
#L0fab82.   call temp:=  [|java:util:AbstractList.size|](v2) @signature [|Ljava/util/AbstractList;.size:()I|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fab88.   v1:= temp;
#L0fab8a.   call temp:=  [|java:util:AbstractList.removeRange|](v2, v0, v1) @signature [|Ljava/util/AbstractList;.removeRange:(II)V|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fab90.   return @void ;

   }
    procedure [|boolean|] [|java:util:AbstractList.equals|] ([|java:util:AbstractList|] v9 @type (this), [|java:lang:Object|] v10 @type (object)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e1|] @scope ((L002a,L003b));
        [|java:lang:Object|] v1 @varname [|e2|] @scope ((L002e,L003b));
        [|java:util:Iterator|] v2 @varname [|it1|] @scope ((L001c,L003b));
        [|java:util:Iterator|] v3 @varname [|it2|] @scope ((L0020,L003b));
        [|java:util:List|] v4 @varname [|list|] @scope ((L000c,L003b));


        v5;
        v6;
        v7;
        v8;
      
#L0faba4.   v5:= 1  @length 4;
#L0faba6.   v6:= 0  @length 4;
#L0faba8.   if v9 != v10 then goto L0fabae;
#L0fabac.   return v5;
#L0fabae.   v7:= instanceof @varname v10 @type [|java:util:List|];
#L0fabb2.   if v7 == 0 then goto L0fac1a;
#L0fabb6.   v4:= v10  @type object;
#L0fabb8.   v4:= ([|java:util:List|])v4;
#L0fabbc.   call temp:=  [|java:util:List.size|](v4) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L0fabc2.   v7:= temp;
#L0fabc4.   call temp:=  [|java:util:AbstractList.size|](v9) @signature [|Ljava/util/AbstractList;.size:()I|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fabca.   v8:= temp;
#L0fabcc.   if v7 == v8 then goto L0fabd4;
#L0fabd0.   v5:= v6;
#L0fabd2.   goto L0fabac;
#L0fabd4.   call temp:=  [|java:util:AbstractList.iterator|](v9) @signature [|Ljava/util/AbstractList;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fabda.   v2:= temp  @type object;
#L0fabdc.   call temp:=  [|java:util:List.iterator|](v4) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L0fabe2.   v3:= temp  @type object;
#L0fabe4.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fabea.   v7:= temp;
#L0fabec.   if v7 == 0 then goto L0fabac;
#L0fabf0.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fabf6.   v0:= temp  @type object;
#L0fabf8.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fabfe.   v1:= temp  @type object;
#L0fac00.   if v0 != 0 then goto L0fac0c;
#L0fac04.   if v1 == 0 then goto L0fabe4;
#L0fac08.   v5:= v6;
#L0fac0a.   goto L0fabac;
#L0fac0c.   call temp:=  [|java:lang:Object.equals|](v0, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0fac12.   v7:= temp;
#L0fac14.   if v7 != 0 then goto L0fabe4;
#L0fac18.   goto L0fac08;
#L0fac1a.   v5:= v6;
#L0fac1c.   goto L0fabac;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList.get|] ([|int|] v0) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:AbstractList.hashCode|] ([|java:util:AbstractList|] v5 @type (this)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v1 @varname [|object|] @scope ((L000f,L001c));
        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0005,L001d));
        [|int|] v2 @varname [|result|] @scope ((L0001,L001d));

        v3;
        v4;
      
#L0fac30.   v2:= 1  @length 4;
#L0fac32.   call temp:=  [|java:util:AbstractList.iterator|](v5) @signature [|Ljava/util/AbstractList;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fac38.   v0:= temp  @type object;
#L0fac3a.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fac40.   v3:= temp;
#L0fac42.   if v3 == 0 then goto L0fac68;
#L0fac46.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fac4c.   v1:= temp  @type object;
#L0fac4e.   v4:= v2 * 31;
#L0fac52.   if v1 != 0 then goto L0fac5e;
#L0fac56.   v3:= 0  @length 4;
#L0fac58.   v2:= v4 + v3  @type int;
#L0fac5c.   goto L0fac3a;
#L0fac5e.   call temp:=  [|java:lang:Object.hashCode|](v1) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0fac64.   v3:= temp;
#L0fac66.   goto L0fac58;
#L0fac68.   return v2;

   }
    procedure [|int|] [|java:util:AbstractList.indexOf|] ([|java:util:AbstractList|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.indexOf:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;

        [|java:util:ListIterator|] v0 @varname [|it|] @scope ((L0004,L002e));


        v1;
      
#L0fac7c.   call temp:=  [|java:util:AbstractList.listIterator|](v2) @signature [|Ljava/util/AbstractList;.listIterator:()Ljava/util/ListIterator;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fac82.   v0:= temp  @type object;
#L0fac84.   if v3 == 0 then goto L0facb2;
#L0fac88.   call temp:=  [|java:util:ListIterator.hasNext|](v0) @signature [|Ljava/util/ListIterator;.hasNext:()Z|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fac8e.   v1:= temp;
#L0fac90.   if v1 == 0 then goto L0facd4;
#L0fac94.   call temp:=  [|java:util:ListIterator.next|](v0) @signature [|Ljava/util/ListIterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fac9a.   v1:= temp  @type object;
#L0fac9c.   call temp:=  [|java:lang:Object.equals|](v3, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0faca2.   v1:= temp;
#L0faca4.   if v1 == 0 then goto L0fac88;
#L0faca8.   call temp:=  [|java:util:ListIterator.previousIndex|](v0) @signature [|Ljava/util/ListIterator;.previousIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0facae.   v1:= temp;
#L0facb0.   return v1;
#L0facb2.   call temp:=  [|java:util:ListIterator.hasNext|](v0) @signature [|Ljava/util/ListIterator;.hasNext:()Z|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0facb8.   v1:= temp;
#L0facba.   if v1 == 0 then goto L0facd4;
#L0facbe.   call temp:=  [|java:util:ListIterator.next|](v0) @signature [|Ljava/util/ListIterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0facc4.   v1:= temp  @type object;
#L0facc6.   if v1 != 0 then goto L0facb2;
#L0facca.   call temp:=  [|java:util:ListIterator.previousIndex|](v0) @signature [|Ljava/util/ListIterator;.previousIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0facd0.   v1:= temp;
#L0facd2.   goto L0facb0;
#L0facd4.   v1:= -1  @length 4;
#L0facd6.   goto L0facb0;

   }
    procedure [|java:util:Iterator|] [|java:util:AbstractList.iterator|] ([|java:util:AbstractList|] v1 @type (this)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0face8.   v0:= new [|java:util:AbstractList$SimpleListIterator|];
#L0facec.   call temp:=  [|java:util:AbstractList$SimpleListIterator.<init>|](v0, v1) @signature [|Ljava/util/AbstractList$SimpleListIterator;.<init>:(Ljava/util/AbstractList;)V|] @classDescriptor [|java:util:AbstractList$SimpleListIterator|] @type direct;
#L0facf2.   return v0  @type object;

   }
    procedure [|int|] [|java:util:AbstractList.lastIndexOf|] ([|java:util:AbstractList|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.lastIndexOf:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;

        [|java:util:ListIterator|] v0 @varname [|it|] @scope ((L0008,L0032));


        v1;
      
#L0fad04.   call temp:=  [|java:util:AbstractList.size|](v2) @signature [|Ljava/util/AbstractList;.size:()I|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fad0a.   v1:= temp;
#L0fad0c.   call temp:=  [|java:util:AbstractList.listIterator|](v2, v1) @signature [|Ljava/util/AbstractList;.listIterator:(I)Ljava/util/ListIterator;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fad12.   v0:= temp  @type object;
#L0fad14.   if v3 == 0 then goto L0fad42;
#L0fad18.   call temp:=  [|java:util:ListIterator.hasPrevious|](v0) @signature [|Ljava/util/ListIterator;.hasPrevious:()Z|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fad1e.   v1:= temp;
#L0fad20.   if v1 == 0 then goto L0fad64;
#L0fad24.   call temp:=  [|java:util:ListIterator.previous|](v0) @signature [|Ljava/util/ListIterator;.previous:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fad2a.   v1:= temp  @type object;
#L0fad2c.   call temp:=  [|java:lang:Object.equals|](v3, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0fad32.   v1:= temp;
#L0fad34.   if v1 == 0 then goto L0fad18;
#L0fad38.   call temp:=  [|java:util:ListIterator.nextIndex|](v0) @signature [|Ljava/util/ListIterator;.nextIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fad3e.   v1:= temp;
#L0fad40.   return v1;
#L0fad42.   call temp:=  [|java:util:ListIterator.hasPrevious|](v0) @signature [|Ljava/util/ListIterator;.hasPrevious:()Z|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fad48.   v1:= temp;
#L0fad4a.   if v1 == 0 then goto L0fad64;
#L0fad4e.   call temp:=  [|java:util:ListIterator.previous|](v0) @signature [|Ljava/util/ListIterator;.previous:()Ljava/lang/Object;|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fad54.   v1:= temp  @type object;
#L0fad56.   if v1 != 0 then goto L0fad42;
#L0fad5a.   call temp:=  [|java:util:ListIterator.nextIndex|](v0) @signature [|Ljava/util/ListIterator;.nextIndex:()I|] @classDescriptor [|java:util:ListIterator|] @type interface;
#L0fad60.   v1:= temp;
#L0fad62.   goto L0fad40;
#L0fad64.   v1:= -1  @length 4;
#L0fad66.   goto L0fad40;

   }
    procedure [|java:util:ListIterator|] [|java:util:AbstractList.listIterator|] ([|java:util:AbstractList|] v1 @type (this)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.listIterator:()Ljava/util/ListIterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fad78.   v0:= 0  @length 4;
#L0fad7a.   call temp:=  [|java:util:AbstractList.listIterator|](v1, v0) @signature [|Ljava/util/AbstractList;.listIterator:(I)Ljava/util/ListIterator;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fad80.   v0:= temp  @type object;
#L0fad82.   return v0  @type object;

   }
    procedure [|java:util:ListIterator|] [|java:util:AbstractList.listIterator|] ([|java:util:AbstractList|] v1 @type (this), [|int|] v2) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.listIterator:(I)Ljava/util/ListIterator;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0fad94.   v0:= new [|java:util:AbstractList$FullListIterator|];
#L0fad98.   call temp:=  [|java:util:AbstractList$FullListIterator.<init>|](v0, v1, v2) @signature [|Ljava/util/AbstractList$FullListIterator;.<init>:(Ljava/util/AbstractList;I)V|] @classDescriptor [|java:util:AbstractList$FullListIterator|] @type direct;
#L0fad9e.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList.remove|] ([|java:util:AbstractList|] v1 @type (this), [|int|] v2) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.remove:(I)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0fadb0.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0fadb4.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0fadba.   throw v0;

   }
    procedure [|void|] [|java:util:AbstractList.removeRange|] ([|java:util:AbstractList|] v2 @type (this), [|int|] v3, [|int|] v4) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.removeRange:(II)V|] @Access PROTECTED {
      local temp ;

        [|int|] v0 @varname [|i|] @scope ((L0005,L0011));
        [|java:util:Iterator|] v1 @varname [|it|] @scope ((L0004,L0011));



      
#L0fadcc.   call temp:=  [|java:util:AbstractList.listIterator|](v2, v3) @signature [|Ljava/util/AbstractList;.listIterator:(I)Ljava/util/ListIterator;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fadd2.   v1:= temp  @type object;
#L0fadd4.   v0:= v3;
#L0fadd6.   if v0 >= v4 then goto L0fadec;
#L0fadda.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fade0.   call temp:=  [|java:util:Iterator.remove|](v1) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fade6.   v0:= v0 + 1;
#L0fadea.   goto L0fadd6;
#L0fadec.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList.set|] ([|java:util:AbstractList|] v1 @type (this), [|int|] v2, [|java:lang:Object|] v3 @type (object)) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L0fae00.   v0:= new [|java:lang:UnsupportedOperationException|];
#L0fae04.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L0fae0a.   throw v0;

   }
    procedure [|java:util:List|] [|java:util:AbstractList.subList|] ([|java:util:AbstractList|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:util:AbstractList|] @signature [|Ljava/util/AbstractList;.subList:(II)Ljava/util/List;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L0fae1c.   if v2 < 0 then goto L0fae5c;
#L0fae20.   call temp:=  [|java:util:AbstractList.size|](v1) @signature [|Ljava/util/AbstractList;.size:()I|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fae26.   v0:= temp;
#L0fae28.   if v3 > v0 then goto L0fae5c;
#L0fae2c.   if v2 > v3 then goto L0fae50;
#L0fae30.   v0:= instanceof @varname v1 @type [|java:util:RandomAccess|];
#L0fae34.   if v0 == 0 then goto L0fae44;
#L0fae38.   v0:= new [|java:util:AbstractList$SubAbstractListRandomAccess|];
#L0fae3c.   call temp:=  [|java:util:AbstractList$SubAbstractListRandomAccess.<init>|](v0, v1, v2, v3) @signature [|Ljava/util/AbstractList$SubAbstractListRandomAccess;.<init>:(Ljava/util/AbstractList;II)V|] @classDescriptor [|java:util:AbstractList$SubAbstractListRandomAccess|] @type direct;
#L0fae42.   return v0  @type object;
#L0fae44.   v0:= new [|java:util:AbstractList$SubAbstractList|];
#L0fae48.   call temp:=  [|java:util:AbstractList$SubAbstractList.<init>|](v0, v1, v2, v3) @signature [|Ljava/util/AbstractList$SubAbstractList;.<init>:(Ljava/util/AbstractList;II)V|] @classDescriptor [|java:util:AbstractList$SubAbstractList|] @type direct;
#L0fae4e.   goto L0fae42;
#L0fae50.   v0:= new [|java:lang:IllegalArgumentException|];
#L0fae54.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L0fae5a.   throw v0;
#L0fae5c.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L0fae60.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0fae66.   throw v0;

   }
record [|java:util:AbstractList$SubAbstractList|]  @type class @AccessFlag   extends [|java:util:AbstractList|] {
      [|java:util:AbstractList|] [|java:util:AbstractList$SubAbstractList.fullList|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:AbstractList$SubAbstractList.offset|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:AbstractList$SubAbstractList.size|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:AbstractList$SubAbstractList.<init>|] ([|java:util:AbstractList$SubAbstractList|] v1 @type (this), [|java:util:AbstractList|] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.<init>:(Ljava/util/AbstractList;II)V|] @Access CONSTRUCTOR {
      local temp ;





        v0;
      
#L0fae78.   call temp:=  [|java:util:AbstractList.<init>|](v1) @signature [|Ljava/util/AbstractList;.<init>:()V|] @classDescriptor [|java:util:AbstractList|] @type direct;
#L0fae7e.   v1.[|java:util:AbstractList$SubAbstractList.fullList|]  := v2 @type object;
#L0fae82.   v0:= v1.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fae86.   v0:= v0.[|java:util:AbstractList.modCount|] ;
#L0fae8a.   v1.[|java:util:AbstractList$SubAbstractList.modCount|]  := v0;
#L0fae8e.   v1.[|java:util:AbstractList$SubAbstractList.offset|]  := v3;
#L0fae92.   v0:= v4 - v3  @type int;
#L0fae96.   v1.[|java:util:AbstractList$SubAbstractList.size|]  := v0;
#L0fae9a.   return @void ;

   }
    procedure [|void|] [|java:util:AbstractList$SubAbstractList.add|] ([|java:util:AbstractList$SubAbstractList|] v2 @type (this), [|int|] v3, [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.add:(ILjava/lang/Object;)V|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
      
#L0faeac.   v0:= v2.[|java:util:AbstractList$SubAbstractList.modCount|] ;
#L0faeb0.   v1:= v2.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0faeb4.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0faeb8.   if v0 != v1 then goto L0faefe;
#L0faebc.   if v3 < 0 then goto L0faef2;
#L0faec0.   v0:= v2.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0faec4.   if v3 > v0 then goto L0faef2;
#L0faec8.   v0:= v2.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0faecc.   v1:= v2.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0faed0.   v1:= v1 + v3  @type int;
#L0faed2.   call temp:=  [|java:util:AbstractList.add|](v0, v1, v4) @signature [|Ljava/util/AbstractList;.add:(ILjava/lang/Object;)V|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0faed8.   v0:= v2.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0faedc.   v0:= v0 + 1;
#L0faee0.   v2.[|java:util:AbstractList$SubAbstractList.size|]  := v0;
#L0faee4.   v0:= v2.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0faee8.   v0:= v0.[|java:util:AbstractList.modCount|] ;
#L0faeec.   v2.[|java:util:AbstractList$SubAbstractList.modCount|]  := v0;
#L0faef0.   return @void ;
#L0faef2.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L0faef6.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0faefc.   throw v0;
#L0faefe.   v0:= new [|java:util:ConcurrentModificationException|];
#L0faf02.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0faf08.   throw v0;

   }
    procedure [|boolean|] [|java:util:AbstractList$SubAbstractList.addAll|] ([|java:util:AbstractList$SubAbstractList|] v3 @type (this), [|int|] v4, [|java:util:Collection|] v5 @type (object)) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.addAll:(ILjava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|boolean|] v0 @varname [|result|] @scope ((L0017,L0029));



        v1;
        v2;
      
#L0faf1c.   v1:= v3.[|java:util:AbstractList$SubAbstractList.modCount|] ;
#L0faf20.   v2:= v3.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0faf24.   v2:= v2.[|java:util:AbstractList.modCount|] ;
#L0faf28.   if v1 != v2 then goto L0faf7a;
#L0faf2c.   if v4 < 0 then goto L0faf6e;
#L0faf30.   v1:= v3.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0faf34.   if v4 > v1 then goto L0faf6e;
#L0faf38.   v1:= v3.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0faf3c.   v2:= v3.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0faf40.   v2:= v2 + v4  @type int;
#L0faf42.   call temp:=  [|java:util:AbstractList.addAll|](v1, v2, v5) @signature [|Ljava/util/AbstractList;.addAll:(ILjava/util/Collection;)Z|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0faf48.   v0:= temp;
#L0faf4a.   if v0 == 0 then goto L0faf6c;
#L0faf4e.   v1:= v3.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0faf52.   call temp:=  [|java:util:Collection.size|](v5) @signature [|Ljava/util/Collection;.size:()I|] @classDescriptor [|java:util:Collection|] @type interface;
#L0faf58.   v2:= temp;
#L0faf5a.   v1:= v1 + v2  @type int;
#L0faf5c.   v3.[|java:util:AbstractList$SubAbstractList.size|]  := v1;
#L0faf60.   v1:= v3.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0faf64.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0faf68.   v3.[|java:util:AbstractList$SubAbstractList.modCount|]  := v1;
#L0faf6c.   return v0;
#L0faf6e.   v1:= new [|java:lang:IndexOutOfBoundsException|];
#L0faf72.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0faf78.   throw v1;
#L0faf7a.   v1:= new [|java:util:ConcurrentModificationException|];
#L0faf7e.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v1) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0faf84.   throw v1;

   }
    procedure [|boolean|] [|java:util:AbstractList$SubAbstractList.addAll|] ([|java:util:AbstractList$SubAbstractList|] v4 @type (this), [|java:util:Collection|] v5 @type (object)) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|boolean|] v0 @varname [|result|] @scope ((L0013,L0025));


        v1;
        v2;
        v3;
      
#L0faf98.   v1:= v4.[|java:util:AbstractList$SubAbstractList.modCount|] ;
#L0faf9c.   v2:= v4.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fafa0.   v2:= v2.[|java:util:AbstractList.modCount|] ;
#L0fafa4.   if v1 != v2 then goto L0fafe2;
#L0fafa8.   v1:= v4.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fafac.   v2:= v4.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0fafb0.   v3:= v4.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fafb4.   v2:= v2 + v3  @type int;
#L0fafb6.   call temp:=  [|java:util:AbstractList.addAll|](v1, v2, v5) @signature [|Ljava/util/AbstractList;.addAll:(ILjava/util/Collection;)Z|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fafbc.   v0:= temp;
#L0fafbe.   if v0 == 0 then goto L0fafe0;
#L0fafc2.   v1:= v4.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fafc6.   call temp:=  [|java:util:Collection.size|](v5) @signature [|Ljava/util/Collection;.size:()I|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fafcc.   v2:= temp;
#L0fafce.   v1:= v1 + v2  @type int;
#L0fafd0.   v4.[|java:util:AbstractList$SubAbstractList.size|]  := v1;
#L0fafd4.   v1:= v4.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fafd8.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fafdc.   v4.[|java:util:AbstractList$SubAbstractList.modCount|]  := v1;
#L0fafe0.   return v0;
#L0fafe2.   v1:= new [|java:util:ConcurrentModificationException|];
#L0fafe6.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v1) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fafec.   throw v1;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList$SubAbstractList.get|] ([|java:util:AbstractList$SubAbstractList|] v2 @type (this), [|int|] v3) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.get:(I)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L0fb000.   v0:= v2.[|java:util:AbstractList$SubAbstractList.modCount|] ;
#L0fb004.   v1:= v2.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb008.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fb00c.   if v0 != v1 then goto L0fb03c;
#L0fb010.   if v3 < 0 then goto L0fb030;
#L0fb014.   v0:= v2.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb018.   if v3 >= v0 then goto L0fb030;
#L0fb01c.   v0:= v2.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb020.   v1:= v2.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0fb024.   v1:= v1 + v3  @type int;
#L0fb026.   call temp:=  [|java:util:AbstractList.get|](v0, v1) @signature [|Ljava/util/AbstractList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fb02c.   v0:= temp  @type object;
#L0fb02e.   return v0  @type object;
#L0fb030.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L0fb034.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0fb03a.   throw v0;
#L0fb03c.   v0:= new [|java:util:ConcurrentModificationException|];
#L0fb040.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fb046.   throw v0;

   }
    procedure [|java:util:Iterator|] [|java:util:AbstractList$SubAbstractList.iterator|] ([|java:util:AbstractList$SubAbstractList|] v1 @type (this)) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fb058.   v0:= 0  @length 4;
#L0fb05a.   call temp:=  [|java:util:AbstractList$SubAbstractList.listIterator|](v1, v0) @signature [|Ljava/util/AbstractList$SubAbstractList;.listIterator:(I)Ljava/util/ListIterator;|] @classDescriptor [|java:util:AbstractList$SubAbstractList|] @type virtual;
#L0fb060.   v0:= temp  @type object;
#L0fb062.   return v0  @type object;

   }
    procedure [|java:util:ListIterator|] [|java:util:AbstractList$SubAbstractList.listIterator|] ([|java:util:AbstractList$SubAbstractList|] v4 @type (this), [|int|] v5) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.listIterator:(I)Ljava/util/ListIterator;|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L0fb074.   v0:= v4.[|java:util:AbstractList$SubAbstractList.modCount|] ;
#L0fb078.   v1:= v4.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb07c.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fb080.   if v0 != v1 then goto L0fb0c2;
#L0fb084.   if v5 < 0 then goto L0fb0b6;
#L0fb088.   v0:= v4.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb08c.   if v5 > v0 then goto L0fb0b6;
#L0fb090.   v0:= new [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|];
#L0fb094.   v1:= v4.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb098.   v2:= v4.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0fb09c.   v2:= v2 + v5  @type int;
#L0fb09e.   call temp:=  [|java:util:AbstractList.listIterator|](v1, v2) @signature [|Ljava/util/AbstractList;.listIterator:(I)Ljava/util/ListIterator;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fb0a4.   v1:= temp  @type object;
#L0fb0a6.   v2:= v4.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0fb0aa.   v3:= v4.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb0ae.   call temp:=  [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator.<init>|](v0, v1, v4, v2, v3) @signature [|Ljava/util/AbstractList$SubAbstractList$SubAbstractListIterator;.<init>:(Ljava/util/ListIterator;Ljava/util/AbstractList$SubAbstractList;II)V|] @classDescriptor [|java:util:AbstractList$SubAbstractList$SubAbstractListIterator|] @type direct;
#L0fb0b4.   return v0  @type object;
#L0fb0b6.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L0fb0ba.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0fb0c0.   throw v0;
#L0fb0c2.   v0:= new [|java:util:ConcurrentModificationException|];
#L0fb0c6.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fb0cc.   throw v0;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList$SubAbstractList.remove|] ([|java:util:AbstractList$SubAbstractList|] v3 @type (this), [|int|] v4) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.remove:(I)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|result|] @scope ((L0017,L0024));


        v1;
        v2;
      
#L0fb0e0.   v1:= v3.[|java:util:AbstractList$SubAbstractList.modCount|] ;
#L0fb0e4.   v2:= v3.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb0e8.   v2:= v2.[|java:util:AbstractList.modCount|] ;
#L0fb0ec.   if v1 != v2 then goto L0fb134;
#L0fb0f0.   if v4 < 0 then goto L0fb128;
#L0fb0f4.   v1:= v3.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb0f8.   if v4 >= v1 then goto L0fb128;
#L0fb0fc.   v1:= v3.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb100.   v2:= v3.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0fb104.   v2:= v2 + v4  @type int;
#L0fb106.   call temp:=  [|java:util:AbstractList.remove|](v1, v2) @signature [|Ljava/util/AbstractList;.remove:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fb10c.   v0:= temp  @type object;
#L0fb10e.   v1:= v3.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb112.   v1:= v1 + -1;
#L0fb116.   v3.[|java:util:AbstractList$SubAbstractList.size|]  := v1;
#L0fb11a.   v1:= v3.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb11e.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fb122.   v3.[|java:util:AbstractList$SubAbstractList.modCount|]  := v1;
#L0fb126.   return v0  @type object;
#L0fb128.   v1:= new [|java:lang:IndexOutOfBoundsException|];
#L0fb12c.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0fb132.   throw v1;
#L0fb134.   v1:= new [|java:util:ConcurrentModificationException|];
#L0fb138.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v1) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fb13e.   throw v1;

   }
    procedure [|void|] [|java:util:AbstractList$SubAbstractList.removeRange|] ([|java:util:AbstractList$SubAbstractList|] v3 @type (this), [|int|] v4, [|int|] v5) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.removeRange:(II)V|] @Access PROTECTED {
      local temp ;




        v0;
        v1;
        v2;
      
#L0fb150.   if v4 == v5 then goto L0fb194;
#L0fb154.   v0:= v3.[|java:util:AbstractList$SubAbstractList.modCount|] ;
#L0fb158.   v1:= v3.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb15c.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fb160.   if v0 != v1 then goto L0fb196;
#L0fb164.   v0:= v3.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb168.   v1:= v3.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0fb16c.   v1:= v1 + v4  @type int;
#L0fb16e.   v2:= v3.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0fb172.   v2:= v2 + v5  @type int;
#L0fb174.   call temp:=  [|java:util:AbstractList.removeRange|](v0, v1, v2) @signature [|Ljava/util/AbstractList;.removeRange:(II)V|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fb17a.   v0:= v3.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb17e.   v1:= v5 - v4  @type int;
#L0fb182.   v0:= v0 - v1  @type int;
#L0fb184.   v3.[|java:util:AbstractList$SubAbstractList.size|]  := v0;
#L0fb188.   v0:= v3.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb18c.   v0:= v0.[|java:util:AbstractList.modCount|] ;
#L0fb190.   v3.[|java:util:AbstractList$SubAbstractList.modCount|]  := v0;
#L0fb194.   return @void ;
#L0fb196.   v0:= new [|java:util:ConcurrentModificationException|];
#L0fb19a.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fb1a0.   throw v0;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractList$SubAbstractList.set|] ([|java:util:AbstractList$SubAbstractList|] v2 @type (this), [|int|] v3, [|java:lang:Object|] v4 @type (object)) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
      
#L0fb1b4.   v0:= v2.[|java:util:AbstractList$SubAbstractList.modCount|] ;
#L0fb1b8.   v1:= v2.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb1bc.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fb1c0.   if v0 != v1 then goto L0fb1f0;
#L0fb1c4.   if v3 < 0 then goto L0fb1e4;
#L0fb1c8.   v0:= v2.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb1cc.   if v3 >= v0 then goto L0fb1e4;
#L0fb1d0.   v0:= v2.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb1d4.   v1:= v2.[|java:util:AbstractList$SubAbstractList.offset|] ;
#L0fb1d8.   v1:= v1 + v3  @type int;
#L0fb1da.   call temp:=  [|java:util:AbstractList.set|](v0, v1, v4) @signature [|Ljava/util/AbstractList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractList|] @type virtual;
#L0fb1e0.   v0:= temp  @type object;
#L0fb1e2.   return v0  @type object;
#L0fb1e4.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L0fb1e8.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:()V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L0fb1ee.   throw v0;
#L0fb1f0.   v0:= new [|java:util:ConcurrentModificationException|];
#L0fb1f4.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fb1fa.   throw v0;

   }
    procedure [|int|] [|java:util:AbstractList$SubAbstractList.size|] ([|java:util:AbstractList$SubAbstractList|] v2 @type (this)) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.size:()I|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L0fb20c.   v0:= v2.[|java:util:AbstractList$SubAbstractList.modCount|] ;
#L0fb210.   v1:= v2.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb214.   v1:= v1.[|java:util:AbstractList.modCount|] ;
#L0fb218.   if v0 != v1 then goto L0fb222;
#L0fb21c.   v0:= v2.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb220.   return v0;
#L0fb222.   v0:= new [|java:util:ConcurrentModificationException|];
#L0fb226.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L0fb22c.   throw v0;

   }
    procedure [|void|] [|java:util:AbstractList$SubAbstractList.sizeChanged|] ([|java:util:AbstractList$SubAbstractList|] v1 @type (this), [|boolean|] v2) @owner [|java:util:AbstractList$SubAbstractList|] @signature [|Ljava/util/AbstractList$SubAbstractList;.sizeChanged:(Z)V|] @Access  {
      local temp ;



        v0;
      
#L0fb240.   if v2 == 0 then goto L0fb25e;
#L0fb244.   v0:= v1.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb248.   v0:= v0 + 1;
#L0fb24c.   v1.[|java:util:AbstractList$SubAbstractList.size|]  := v0;
#L0fb250.   v0:= v1.[|java:util:AbstractList$SubAbstractList.fullList|]   @type object;
#L0fb254.   v0:= v0.[|java:util:AbstractList.modCount|] ;
#L0fb258.   v1.[|java:util:AbstractList$SubAbstractList.modCount|]  := v0;
#L0fb25c.   return @void ;
#L0fb25e.   v0:= v1.[|java:util:AbstractList$SubAbstractList.size|] ;
#L0fb262.   v0:= v0 + -1;
#L0fb266.   v1.[|java:util:AbstractList$SubAbstractList.size|]  := v0;
#L0fb26a.   goto L0fb250;

   }
record [|java:util:RandomAccess|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
record [|java:util:AbstractList$SubAbstractListRandomAccess|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractList$SubAbstractList|], [|java:util:RandomAccess|] {
   }
    procedure [|void|] [|java:util:AbstractList$SubAbstractListRandomAccess.<init>|] ([|java:util:AbstractList$SubAbstractListRandomAccess|] v0 @type (this), [|java:util:AbstractList|] v1 @type (object), [|int|] v2, [|int|] v3) @owner [|java:util:AbstractList$SubAbstractListRandomAccess|] @signature [|Ljava/util/AbstractList$SubAbstractListRandomAccess;.<init>:(Ljava/util/AbstractList;II)V|] @Access CONSTRUCTOR {
      local temp ;





      
#L0fb27c.   call temp:=  [|java:util:AbstractList$SubAbstractList.<init>|](v0, v1, v2, v3) @signature [|Ljava/util/AbstractList$SubAbstractList;.<init>:(Ljava/util/AbstractList;II)V|] @classDescriptor [|java:util:AbstractList$SubAbstractList|] @type direct;
#L0fb282.   return @void ;

   }
record [|java:util:AbstractMap$1$1|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
      [|java:util:Iterator|] [|java:util:AbstractMap$1$1.setIterator|]    @AccessFlag ;
      [|java:util:AbstractMap$1|] [|java:util:AbstractMap$1$1.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:AbstractMap$1$1.<init>|] ([|java:util:AbstractMap$1$1|] v1 @type (this), [|java:util:AbstractMap$1|] v2 @type (object)) @owner [|java:util:AbstractMap$1$1|] @signature [|Ljava/util/AbstractMap$1$1;.<init>:(Ljava/util/AbstractMap$1;)V|] @Access CONSTRUCTOR {
      local temp ;


        v0;
      
#L0fb294.   v1.[|java:util:AbstractMap$1$1.this$1|]  := v2 @type object;
#L0fb298.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L0fb29e.   v0:= v1.[|java:util:AbstractMap$1$1.this$1|]   @type object;
#L0fb2a2.   v0:= v0.[|java:util:AbstractMap$1.this$0|]   @type object;
#L0fb2a6.   call temp:=  [|java:util:AbstractMap.entrySet|](v0) @signature [|Ljava/util/AbstractMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0fb2ac.   v0:= temp  @type object;
#L0fb2ae.   call temp:=  [|java:util:Set.iterator|](v0) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L0fb2b4.   v0:= temp  @type object;
#L0fb2b6.   v1.[|java:util:AbstractMap$1$1.setIterator|]  := v0 @type object;
#L0fb2ba.   return @void ;

   }
    procedure [|boolean|] [|java:util:AbstractMap$1$1.hasNext|] ([|java:util:AbstractMap$1$1|] v1 @type (this)) @owner [|java:util:AbstractMap$1$1|] @signature [|Ljava/util/AbstractMap$1$1;.hasNext:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fb2cc.   v0:= v1.[|java:util:AbstractMap$1$1.setIterator|]   @type object;
#L0fb2d0.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb2d6.   v0:= temp;
#L0fb2d8.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:AbstractMap$1$1.next|] ([|java:util:AbstractMap$1$1|] v1 @type (this)) @owner [|java:util:AbstractMap$1$1|] @signature [|Ljava/util/AbstractMap$1$1;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fb2ec.   v0:= v1.[|java:util:AbstractMap$1$1.setIterator|]   @type object;
#L0fb2f0.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb2f6.   v0:= temp  @type object;
#L0fb2f8.   v0:= ([|java:util:Map$Entry|])v0;
#L0fb2fc.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L0fb302.   v0:= temp  @type object;
#L0fb304.   return v0  @type object;

   }
    procedure [|void|] [|java:util:AbstractMap$1$1.remove|] ([|java:util:AbstractMap$1$1|] v1 @type (this)) @owner [|java:util:AbstractMap$1$1|] @signature [|Ljava/util/AbstractMap$1$1;.remove:()V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fb318.   v0:= v1.[|java:util:AbstractMap$1$1.setIterator|]   @type object;
#L0fb31c.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb322.   return @void ;

   }
record [|java:util:AbstractSet|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:AbstractCollection|], [|java:util:Set|] {
   }
    procedure [|void|] [|java:util:AbstractSet.<init>|] ([|java:util:AbstractSet|] v0 @type (this)) @owner [|java:util:AbstractSet|] @signature [|Ljava/util/AbstractSet;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;


      
#L0fb334.   call temp:=  [|java:util:AbstractCollection.<init>|](v0) @signature [|Ljava/util/AbstractCollection;.<init>:()V|] @classDescriptor [|java:util:AbstractCollection|] @type direct;
#L0fb33a.   return @void ;

   }
    procedure [|boolean|] [|java:util:AbstractSet.equals|] ([|java:util:AbstractSet|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:AbstractSet|] @signature [|Ljava/util/AbstractSet;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:NullPointerException|] v0 @varname [|ignored|] @scope ((L0022,L0023), (L0024,L0025));
        [|java:util:Set|] v1 @varname [|s|] @scope ((L000d,L0025));


        v2;
        v3;
        v4;
        v5;
      
#L0fb34c.   v2:= 1  @length 4;
#L0fb34e.   v3:= 0  @length 4;
#L0fb350.   if v6 != v7 then goto L0fb358;
#L0fb354.   v3:= v2;
#L0fb356.   return v3;
#L0fb358.   v4:= instanceof @varname v7 @type [|java:util:Set|];
#L0fb35c.   if v4 == 0 then goto L0fb356;
#L0fb360.   v1:= v7  @type object;
#L0fb362.   v1:= ([|java:util:Set|])v1;
#L0fb366.   call temp:=  [|java:util:AbstractSet.size|](v6) @signature [|Ljava/util/AbstractSet;.size:()I|] @classDescriptor [|java:util:AbstractSet|] @type virtual;
#L0fb36c.   v4:= temp;
#L0fb36e.   call temp:=  [|java:util:Set.size|](v1) @signature [|Ljava/util/Set;.size:()I|] @classDescriptor [|java:util:Set|] @type interface;
#L0fb374.   v5:= temp;
#L0fb376.   if v4 != v5 then goto L0fb38a;
#L0fb37a.   call temp:=  [|java:util:AbstractSet.containsAll|](v6, v1) @signature [|Ljava/util/AbstractSet;.containsAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:AbstractSet|] @type virtual;
#L0fb380.   v4:= temp;
#L0fb382.   if v4 == 0 then goto L0fb38a;
#L0fb386.   v3:= v2;
#L0fb388.   goto L0fb356;
#L0fb38a.   v2:= v3;
#L0fb38c.   goto L0fb386;
#L0fb38e.   v0:= Exception  @type object;
#L0fb390.   goto L0fb356;
#L0fb392.   v0:= Exception  @type object;
#L0fb394.   goto L0fb356;
  catch  [|java:lang:NullPointerException|] @[L0fb366..L0fb380] goto L0fb38e;
  catch  [|java:lang:ClassCastException|] @[L0fb366..L0fb380] goto L0fb392;

   }
    procedure [|int|] [|java:util:AbstractSet.hashCode|] ([|java:util:AbstractSet|] v4 @type (this)) @owner [|java:util:AbstractSet|] @signature [|Ljava/util/AbstractSet;.hashCode:()I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v1 @varname [|next|] @scope ((L000f,L0019));
        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L0005,L001a));
        [|int|] v2 @varname [|result|] @scope ((L0001,L001a));

        v3;
      
#L0fb3b8.   v2:= 0  @length 4;
#L0fb3ba.   call temp:=  [|java:util:AbstractSet.iterator|](v4) @signature [|Ljava/util/AbstractSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractSet|] @type virtual;
#L0fb3c0.   v0:= temp  @type object;
#L0fb3c2.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb3c8.   v3:= temp;
#L0fb3ca.   if v3 == 0 then goto L0fb3ea;
#L0fb3ce.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb3d4.   v1:= temp  @type object;
#L0fb3d6.   if v1 != 0 then goto L0fb3e0;
#L0fb3da.   v3:= 0  @length 4;
#L0fb3dc.   v2:= v2 + v3  @type int;
#L0fb3de.   goto L0fb3c2;
#L0fb3e0.   call temp:=  [|java:lang:Object.hashCode|](v1) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L0fb3e6.   v3:= temp;
#L0fb3e8.   goto L0fb3dc;
#L0fb3ea.   return v2;

   }
    procedure [|boolean|] [|java:util:AbstractSet.removeAll|] ([|java:util:AbstractSet|] v4 @type (this), [|java:util:Collection|] v5 @type (object)) @owner [|java:util:AbstractSet|] @signature [|Ljava/util/AbstractSet;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L000f,L0024), (L0028,L003f));
        [|boolean|] v1 @varname [|result|] @scope ((L0001,L003f));


        v2;
        v3;
      
#L0fb3fc.   v1:= 0  @length 4;
#L0fb3fe.   call temp:=  [|java:util:AbstractSet.size|](v4) @signature [|Ljava/util/AbstractSet;.size:()I|] @classDescriptor [|java:util:AbstractSet|] @type virtual;
#L0fb404.   v2:= temp;
#L0fb406.   call temp:=  [|java:util:Collection.size|](v5) @signature [|Ljava/util/Collection;.size:()I|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fb40c.   v3:= temp;
#L0fb40e.   if v2 > v3 then goto L0fb444;
#L0fb412.   call temp:=  [|java:util:AbstractSet.iterator|](v4) @signature [|Ljava/util/AbstractSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:AbstractSet|] @type virtual;
#L0fb418.   v0:= temp  @type object;
#L0fb41a.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb420.   v2:= temp;
#L0fb422.   if v2 == 0 then goto L0fb478;
#L0fb426.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb42c.   v2:= temp  @type object;
#L0fb42e.   call temp:=  [|java:util:Collection.contains|](v5, v2) @signature [|Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fb434.   v2:= temp;
#L0fb436.   if v2 == 0 then goto L0fb41a;
#L0fb43a.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb440.   v1:= 1  @length 4;
#L0fb442.   goto L0fb41a;
#L0fb444.   call temp:=  [|java:util:Collection.iterator|](v5) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L0fb44a.   v0:= temp  @type object;
#L0fb44c.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb452.   v2:= temp;
#L0fb454.   if v2 == 0 then goto L0fb478;
#L0fb458.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L0fb45e.   v2:= temp  @type object;
#L0fb460.   call temp:=  [|java:util:AbstractSet.remove|](v4, v2) @signature [|Ljava/util/AbstractSet;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:AbstractSet|] @type virtual;
#L0fb466.   v2:= temp;
#L0fb468.   if v2 != 0 then goto L0fb470;
#L0fb46c.   if v1 == 0 then goto L0fb474;
#L0fb470.   v1:= 1  @length 4;
#L0fb472.   goto L0fb44c;
#L0fb474.   v1:= 0  @length 4;
#L0fb476.   goto L0fb472;
#L0fb478.   return v1;

   }
record [|java:util:AbstractMap$1|]  @type class @AccessFlag   extends [|java:util:AbstractSet|] {
      [|java:util:AbstractMap|] [|java:util:AbstractMap$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:AbstractMap$1.<init>|] ([|java:util:AbstractMap$1|] v0 @type (this), [|java:util:AbstractMap|] v1 @type (object)) @owner [|java:util:AbstractMap$1|] @signature [|Ljava/util/AbstractMap$1;.<init>:(Ljava/util/AbstractMap;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L0fb48c.   v0.[|java:util:AbstractMap$1.this$0|]  := v1 @type object;
#L0fb490.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L0fb496.   return @void ;

   }
    procedure [|boolean|] [|java:util:AbstractMap$1.contains|] ([|java:util:AbstractMap$1|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:AbstractMap$1|] @signature [|Ljava/util/AbstractMap$1;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L0fb4a8.   v0:= v1.[|java:util:AbstractMap$1.this$0|]   @type object;
#L0fb4ac.   call temp:=  [|java:util:AbstractMap.containsKey|](v0, v2) @signature [|Ljava/util/AbstractMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0fb4b2.   v0:= temp;
#L0fb4b4.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:AbstractMap$1.iterator|] ([|java:util:AbstractMap$1|] v1 @type (this)) @owner [|java:util:AbstractMap$1|] @signature [|Ljava/util/AbstractMap$1;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fb4c8.   v0:= new [|java:util:AbstractMap$1$1|];
#L0fb4cc.   call temp:=  [|java:util:AbstractMap$1$1.<init>|](v0, v1) @signature [|Ljava/util/AbstractMap$1$1;.<init>:(Ljava/util/AbstractMap$1;)V|] @classDescriptor [|java:util:AbstractMap$1$1|] @type direct;
#L0fb4d2.   return v0  @type object;

   }
    procedure [|int|] [|java:util:AbstractMap$1.size|] ([|java:util:AbstractMap$1|] v1 @type (this)) @owner [|java:util:AbstractMap$1|] @signature [|Ljava/util/AbstractMap$1;.size:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L0fb4e4.   v0:= v1.[|java:util:AbstractMap$1.this$0|]   @type object;
#L0fb4e8.   call temp:=  [|java:util:AbstractMap.size|](v0) @signature [|Ljava/util/AbstractMap;.size:()I|] @classDescriptor [|java:util:AbstractMap|] @type virtual;
#L0fb4ee.   v0:= temp;
#L0fb4f0.   return v0;

   }
