record [|java:util:Timer$FinalizerHelper|]  @type class @AccessFlag FINAL  {
      [|java:util:Timer$TimerImpl|] [|java:util:Timer$FinalizerHelper.impl|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:Timer$FinalizerHelper.<init>|] ([|java:util:Timer$FinalizerHelper|] v0 @type (this), [|java:util:Timer$TimerImpl|] v1 @type (object)) @owner [|java:util:Timer$FinalizerHelper|] @signature [|Ljava/util/Timer$FinalizerHelper;.<init>:(Ljava/util/Timer$TimerImpl;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L11fe84.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L11fe8a.   v0.[|java:util:Timer$FinalizerHelper.impl|]  := v1 @type object;
#L11fe8e.   return @void ;

   }
    procedure [|void|] [|java:util:Timer$FinalizerHelper.finalize|] ([|java:util:Timer$FinalizerHelper|] v3 @type (this)) @owner [|java:util:Timer$FinalizerHelper|] @signature [|Ljava/util/Timer$FinalizerHelper;.finalize:()V|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
      
#L11fea0.   v1:= v3.[|java:util:Timer$FinalizerHelper.impl|]   @type object;
#L11fea4.   (@monitorenter v1)
#L11fea6.   v0:= v3.[|java:util:Timer$FinalizerHelper.impl|]   @type object;
#L11feaa.   v2:= 1  @length 4;
#L11feac.   call temp:=  [|java:util:Timer$TimerImpl.access$302|](v0, v2) @signature [|Ljava/util/Timer$TimerImpl;.access$302:(Ljava/util/Timer$TimerImpl;Z)Z|] @classDescriptor [|java:util:Timer$TimerImpl|] @type static;
#L11feb2.   v0:= v3.[|java:util:Timer$FinalizerHelper.impl|]   @type object;
#L11feb6.   call temp:=  [|java:lang:Object.notify|](v0) @signature [|Ljava/lang/Object;.notify:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L11febc.   (@monitorexit v1)
#L11febe.   call temp:=  [|java:lang:Object.finalize|](v3) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L11fec4.   return @void ;
#L11fec6.   v0:= Exception  @type object;
#L11fec8.   (@monitorexit v1)
#L11feca.   throw v0;
#L11fecc.   v0:= Exception  @type object;
#L11fece.   call temp:=  [|java:lang:Object.finalize|](v3) @signature [|Ljava/lang/Object;.finalize:()V|] @classDescriptor [|java:lang:Object|] @type super;
#L11fed4.   throw v0;
  catch  [|any|] @[L11fea0..L11fea6] goto L11fecc;
  catch  [|any|] @[L11fea6..L11febe] goto L11fec6;
  catch  [|any|] @[L11fec8..L11feca] goto L11fec6;
  catch  [|any|] @[L11feca..L11fecc] goto L11fecc;

   }
record [|java:util:Timer$TimerImpl$TimerHeap|]  @type class @AccessFlag FINAL  {
      [|int|] [|java:util:Timer$TimerImpl$TimerHeap.DEFAULT_HEAP_SIZE|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:Timer$TimerImpl$TimerHeap.deletedCancelledNumber|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:Timer$TimerImpl$TimerHeap.size|]    @AccessFlag PRIVATE;
      [|java:util:TimerTask|][] [|java:util:Timer$TimerImpl$TimerHeap.timers|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:Timer$TimerImpl$TimerHeap.<init>|] ([|java:util:Timer$TimerImpl$TimerHeap|] v2 @type (this)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L11ff10.   v1:= 0  @length 4;
#L11ff12.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L11ff18.   v0:= 256  @length 16;
#L11ff1c.   v2.[|java:util:Timer$TimerImpl$TimerHeap.DEFAULT_HEAP_SIZE|]  := v0;
#L11ff20.   v0:= v2.[|java:util:Timer$TimerImpl$TimerHeap.DEFAULT_HEAP_SIZE|] ;
#L11ff24.   v0:= new [|java:util:TimerTask|][v0];
#L11ff28.   v2.[|java:util:Timer$TimerImpl$TimerHeap.timers|]  := v0 @type object;
#L11ff2c.   v2.[|java:util:Timer$TimerImpl$TimerHeap.size|]  := v1;
#L11ff30.   v2.[|java:util:Timer$TimerImpl$TimerHeap.deletedCancelledNumber|]  := v1;
#L11ff34.   return @void ;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl$TimerHeap.<init>|] ([|java:util:Timer$TimerImpl$TimerHeap|] v0 @type (this), [|java:util:Timer$1|] v1 @type (object)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.<init>:(Ljava/util/Timer$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L11ff48.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.<init>|](v0) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.<init>:()V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type direct;
#L11ff4e.   return @void ;

   }
    procedure [|int|] [|java:util:Timer$TimerImpl$TimerHeap.access$100|] ([|java:util:Timer$TimerImpl$TimerHeap|] v1 @type (object), [|java:util:TimerTask|] v2 @type (object)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.access$100:(Ljava/util/Timer$TimerImpl$TimerHeap;Ljava/util/TimerTask;)I|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L11ff60.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.getTask|](v1, v2) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.getTask:(Ljava/util/TimerTask;)I|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type direct;
#L11ff66.   v0:= temp;
#L11ff68.   return v0;

   }
    procedure [|int|] [|java:util:Timer$TimerImpl$TimerHeap.access$200|] ([|java:util:Timer$TimerImpl$TimerHeap|] v1 @type (object)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.access$200:(Ljava/util/Timer$TimerImpl$TimerHeap;)I|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L11ff7c.   v0:= v1.[|java:util:Timer$TimerImpl$TimerHeap.deletedCancelledNumber|] ;
#L11ff80.   return v0;

   }
    procedure [|int|] [|java:util:Timer$TimerImpl$TimerHeap.access$202|] ([|java:util:Timer$TimerImpl$TimerHeap|] v0 @type (object), [|int|] v1) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.access$202:(Ljava/util/Timer$TimerImpl$TimerHeap;I)I|] @Access STATIC_SYNTHETIC {
      local temp ;
      
#L11ff94.   v0.[|java:util:Timer$TimerImpl$TimerHeap.deletedCancelledNumber|]  := v1;
#L11ff98.   return v1;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl$TimerHeap.downHeap|] ([|java:util:Timer$TimerImpl$TimerHeap|] v7 @type (this), [|int|] v8) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.downHeap:(I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L11ffac.   v1:= v8;
#L11ffae.   v3:= v1 * 2;
#L11ffb2.   v0:= v3 + 1;
#L11ffb6.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L11ffba.   if v0 >= v3 then goto L12001a;
#L11ffbe.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L11ffc2.   if v3 <= 0 then goto L12001a;
#L11ffc6.   v3:= v0 + 1;
#L11ffca.   v4:= v7.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L11ffce.   if v3 >= v4 then goto L11fffa;
#L11ffd2.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L11ffd6.   v4:= v0 + 1;
#L11ffda.   v3:= v3[v4]  @type object;
#L11ffde.   v3:= v3.[|java:util:TimerTask.when|]   @wide;
#L11ffe2.   v5:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L11ffe6.   v5:= v5[v0]  @type object;
#L11ffea.   v5:= v5.[|java:util:TimerTask.when|]   @wide;
#L11ffee.   v3:= cmp(v3,v5);
#L11fff2.   if v3 >= 0 then goto L11fffa;
#L11fff6.   v0:= v0 + 1;
#L11fffa.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L11fffe.   v3:= v3[v1]  @type object;
#L120002.   v3:= v3.[|java:util:TimerTask.when|]   @wide;
#L120006.   v5:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L12000a.   v5:= v5[v0]  @type object;
#L12000e.   v5:= v5.[|java:util:TimerTask.when|]   @wide;
#L120012.   v3:= cmp(v3,v5);
#L120016.   if v3 >= 0 then goto L12001c;
#L12001a.   return @void ;
#L12001c.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L120020.   v2:= v3[v1]  @type object;
#L120024.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L120028.   v4:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L12002c.   v4:= v4[v0]  @type object;
#L120030.   v3[v1]:= v4  @type object;
#L120034.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L120038.   v3[v0]:= v2  @type object;
#L12003c.   v1:= v0;
#L12003e.   v3:= v1 * 2;
#L120042.   v0:= v3 + 1;
#L120046.   goto L11ffb6;

   }
    procedure [|int|] [|java:util:Timer$TimerImpl$TimerHeap.getTask|] ([|java:util:Timer$TimerImpl$TimerHeap|] v2 @type (this), [|java:util:TimerTask|] v3 @type (object)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.getTask:(Ljava/util/TimerTask;)I|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L120058.   v0:= 0  @length 4;
#L12005a.   v1:= v2.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L12005e.   v1:= v1.length;
#L120060.   if v0 >= v1 then goto L120078;
#L120064.   v1:= v2.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L120068.   v1:= v1[v0]  @type object;
#L12006c.   if v1 != v3 then goto L120072;
#L120070.   return v0;
#L120072.   v0:= v0 + 1;
#L120076.   goto L12005a;
#L120078.   v0:= -1  @length 4;
#L12007a.   goto L120070;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl$TimerHeap.upHeap|] ([|java:util:Timer$TimerImpl$TimerHeap|] v7 @type (this)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.upHeap:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12008c.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L120090.   v0:= v3 + -1;
#L120094.   v3:= v0 + -1;
#L120098.   v1:= v3 / 2;
#L12009c.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L1200a0.   v3:= v3[v0]  @type object;
#L1200a4.   v3:= v3.[|java:util:TimerTask.when|]   @wide;
#L1200a8.   v5:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L1200ac.   v5:= v5[v1]  @type object;
#L1200b0.   v5:= v5.[|java:util:TimerTask.when|]   @wide;
#L1200b4.   v3:= cmp(v3,v5);
#L1200b8.   if v3 >= 0 then goto L1200e8;
#L1200bc.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L1200c0.   v2:= v3[v0]  @type object;
#L1200c4.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L1200c8.   v4:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L1200cc.   v4:= v4[v1]  @type object;
#L1200d0.   v3[v0]:= v4  @type object;
#L1200d4.   v3:= v7.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L1200d8.   v3[v1]:= v2  @type object;
#L1200dc.   v0:= v1;
#L1200de.   v3:= v0 + -1;
#L1200e2.   v1:= v3 / 2;
#L1200e6.   goto L12009c;
#L1200e8.   return @void ;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl$TimerHeap.adjustMinimum|] ([|java:util:Timer$TimerImpl$TimerHeap|] v1 @type (this)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.adjustMinimum:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1200fc.   v0:= 0  @length 4;
#L1200fe.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.downHeap|](v1, v0) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.downHeap:(I)V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type direct;
#L120104.   return @void ;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl$TimerHeap.delete|] ([|java:util:Timer$TimerImpl$TimerHeap|] v3 @type (this), [|int|] v4) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.delete:(I)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L120118.   if v4 < 0 then goto L120154;
#L12011c.   v0:= v3.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L120120.   if v4 >= v0 then goto L120154;
#L120124.   v0:= v3.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L120128.   v1:= v3.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L12012c.   v2:= v3.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L120130.   v2:= v2 + -1;
#L120134.   v3.[|java:util:Timer$TimerImpl$TimerHeap.size|]  := v2;
#L120138.   v1:= v1[v2]  @type object;
#L12013c.   v0[v4]:= v1  @type object;
#L120140.   v0:= v3.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L120144.   v1:= v3.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L120148.   v2:= 0  @length 4;
#L12014a.   v0[v1]:= v2  @type object;
#L12014e.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.downHeap|](v3, v4) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.downHeap:(I)V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type direct;
#L120154.   return @void ;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl$TimerHeap.deleteIfCancelled|] ([|java:util:Timer$TimerImpl$TimerHeap|] v2 @type (this)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.deleteIfCancelled:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L120168.   v0:= 0  @length 4;
#L12016a.   v1:= v2.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L12016e.   if v0 >= v1 then goto L12019e;
#L120172.   v1:= v2.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L120176.   v1:= v1[v0]  @type object;
#L12017a.   v1:= v1.[|java:util:TimerTask.cancelled|]   @boolean;
#L12017e.   if v1 == 0 then goto L120198;
#L120182.   v1:= v2.[|java:util:Timer$TimerImpl$TimerHeap.deletedCancelledNumber|] ;
#L120186.   v1:= v1 + 1;
#L12018a.   v2.[|java:util:Timer$TimerImpl$TimerHeap.deletedCancelledNumber|]  := v1;
#L12018e.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.delete|](v2, v0) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.delete:(I)V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L120194.   v0:= v0 + -1;
#L120198.   v0:= v0 + 1;
#L12019c.   goto L12016a;
#L12019e.   return @void ;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl$TimerHeap.insert|] ([|java:util:Timer$TimerImpl$TimerHeap|] v4 @type (this), [|java:util:TimerTask|] v5 @type (object)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.insert:(Ljava/util/TimerTask;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1201b0.   v3:= 0  @length 4;
#L1201b2.   v1:= v4.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L1201b6.   v1:= v1.length;
#L1201b8.   v2:= v4.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L1201bc.   if v1 != v2 then goto L1201de;
#L1201c0.   v1:= v4.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L1201c4.   v1:= v1 * 2;
#L1201c8.   v0:= new [|java:util:TimerTask|][v1];
#L1201cc.   v1:= v4.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L1201d0.   v2:= v4.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L1201d4.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1201da.   v4.[|java:util:Timer$TimerImpl$TimerHeap.timers|]  := v0 @type object;
#L1201de.   v1:= v4.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L1201e2.   v2:= v4.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L1201e6.   v3:= v2 + 1;
#L1201ea.   v4.[|java:util:Timer$TimerImpl$TimerHeap.size|]  := v3;
#L1201ee.   v1[v2]:= v5  @type object;
#L1201f2.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.upHeap|](v4) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.upHeap:()V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type direct;
#L1201f8.   return @void ;

   }
    procedure [|boolean|] [|java:util:Timer$TimerImpl$TimerHeap.isEmpty|] ([|java:util:Timer$TimerImpl$TimerHeap|] v1 @type (this)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12020c.   v0:= v1.[|java:util:Timer$TimerImpl$TimerHeap.size|] ;
#L120210.   if v0 != 0 then goto L120218;
#L120214.   v0:= 1  @length 4;
#L120216.   return v0;
#L120218.   v0:= 0  @length 4;
#L12021a.   goto L120216;

   }
    procedure [|java:util:TimerTask|] [|java:util:Timer$TimerImpl$TimerHeap.minimum|] ([|java:util:Timer$TimerImpl$TimerHeap|] v2 @type (this)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.minimum:()Ljava/util/TimerTask;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12022c.   v0:= v2.[|java:util:Timer$TimerImpl$TimerHeap.timers|]   @type object;
#L120230.   v1:= 0  @length 4;
#L120232.   v0:= v0[v1]  @type object;
#L120236.   return v0  @type object;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl$TimerHeap.reset|] ([|java:util:Timer$TimerImpl$TimerHeap|] v1 @type (this)) @owner [|java:util:Timer$TimerImpl$TimerHeap|] @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.reset:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L120248.   v0:= v1.[|java:util:Timer$TimerImpl$TimerHeap.DEFAULT_HEAP_SIZE|] ;
#L12024c.   v0:= new [|java:util:TimerTask|][v0];
#L120250.   v1.[|java:util:Timer$TimerImpl$TimerHeap.timers|]  := v0 @type object;
#L120254.   v0:= 0  @length 4;
#L120256.   v1.[|java:util:Timer$TimerImpl$TimerHeap.size|]  := v0;
#L12025a.   return @void ;

   }
record [|java:util:Timer$TimerImpl|]  @type class @AccessFlag FINAL  extends [|java:lang:Thread|] {
      [|boolean|] [|java:util:Timer$TimerImpl.cancelled|]    @AccessFlag PRIVATE;
      [|boolean|] [|java:util:Timer$TimerImpl.finished|]    @AccessFlag PRIVATE;
      [|java:util:Timer$TimerImpl$TimerHeap|] [|java:util:Timer$TimerImpl.tasks|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:Timer$TimerImpl.<init>|] ([|java:util:Timer$TimerImpl|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|boolean|] v4) @owner [|java:util:Timer$TimerImpl|] @signature [|Ljava/util/Timer$TimerImpl;.<init>:(Ljava/lang/String;Z)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L12026c.   call temp:=  [|java:lang:Thread.<init>|](v2) @signature [|Ljava/lang/Thread;.<init>:()V|] @classDescriptor [|java:lang:Thread|] @type direct;
#L120272.   v0:= new [|java:util:Timer$TimerImpl$TimerHeap|];
#L120276.   v1:= 0  @length 4;
#L120278.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.<init>|](v0, v1) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.<init>:(Ljava/util/Timer$1;)V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type direct;
#L12027e.   v2.[|java:util:Timer$TimerImpl.tasks|]  := v0 @type object;
#L120282.   call temp:=  [|java:util:Timer$TimerImpl.setName|](v2, v3) @signature [|Ljava/util/Timer$TimerImpl;.setName:(Ljava/lang/String;)V|] @classDescriptor [|java:util:Timer$TimerImpl|] @type virtual;
#L120288.   call temp:=  [|java:util:Timer$TimerImpl.setDaemon|](v2, v4) @signature [|Ljava/util/Timer$TimerImpl;.setDaemon:(Z)V|] @classDescriptor [|java:util:Timer$TimerImpl|] @type virtual;
#L12028e.   call temp:=  [|java:util:Timer$TimerImpl.start|](v2) @signature [|Ljava/util/Timer$TimerImpl;.start:()V|] @classDescriptor [|java:util:Timer$TimerImpl|] @type virtual;
#L120294.   return @void ;

   }
    procedure [|boolean|] [|java:util:Timer$TimerImpl.access$302|] ([|java:util:Timer$TimerImpl|] v0 @type (object), [|boolean|] v1) @owner [|java:util:Timer$TimerImpl|] @signature [|Ljava/util/Timer$TimerImpl;.access$302:(Ljava/util/Timer$TimerImpl;Z)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
      
#L1202a8.   v0.[|java:util:Timer$TimerImpl.finished|]  := v1 @boolean;
#L1202ac.   return v1;

   }
    procedure [|boolean|] [|java:util:Timer$TimerImpl.access$400|] ([|java:util:Timer$TimerImpl|] v1 @type (object)) @owner [|java:util:Timer$TimerImpl|] @signature [|Ljava/util/Timer$TimerImpl;.access$400:(Ljava/util/Timer$TimerImpl;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L1202c0.   v0:= v1.[|java:util:Timer$TimerImpl.cancelled|]   @boolean;
#L1202c4.   return v0;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl.access$500|] ([|java:util:Timer$TimerImpl|] v0 @type (object), [|java:util:TimerTask|] v1 @type (object)) @owner [|java:util:Timer$TimerImpl|] @signature [|Ljava/util/Timer$TimerImpl;.access$500:(Ljava/util/Timer$TimerImpl;Ljava/util/TimerTask;)V|] @Access STATIC_SYNTHETIC {
      local temp ;
      
#L1202d8.   call temp:=  [|java:util:Timer$TimerImpl.insertTask|](v0, v1) @signature [|Ljava/util/Timer$TimerImpl;.insertTask:(Ljava/util/TimerTask;)V|] @classDescriptor [|java:util:Timer$TimerImpl|] @type direct;
#L1202de.   return @void ;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl.insertTask|] ([|java:util:Timer$TimerImpl|] v1 @type (this), [|java:util:TimerTask|] v2 @type (object)) @owner [|java:util:Timer$TimerImpl|] @signature [|Ljava/util/Timer$TimerImpl;.insertTask:(Ljava/util/TimerTask;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1202f0.   v0:= v1.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L1202f4.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.insert|](v0, v2) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.insert:(Ljava/util/TimerTask;)V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L1202fa.   call temp:=  [|java:lang:Object.notify|](v1) @signature [|Ljava/lang/Object;.notify:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L120300.   return @void ;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl.cancel|] ([|java:util:Timer$TimerImpl|] v1 @type (this)) @owner [|java:util:Timer$TimerImpl|] @signature [|Ljava/util/Timer$TimerImpl;.cancel:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
      
#L120314.   (@monitorenter v1)
#L120316.   v0:= 1  @length 4;
#L120318.   v1.[|java:util:Timer$TimerImpl.cancelled|]  := v0 @boolean;
#L12031c.   v0:= v1.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L120320.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.reset|](v0) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.reset:()V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L120326.   call temp:=  [|java:lang:Object.notify|](v1) @signature [|Ljava/lang/Object;.notify:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12032c.   (@monitorexit v1)
#L12032e.   return @void ;
#L120330.   v0:= Exception  @type object;
#L120332.   (@monitorexit v1)
#L120334.   throw v0;
  catch  [|any|] @[L120318..L12032c] goto L120330;

   }
    procedure [|int|] [|java:util:Timer$TimerImpl.purge|] ([|java:util:Timer$TimerImpl|] v2 @type (this)) @owner [|java:util:Timer$TimerImpl|] @signature [|Ljava/util/Timer$TimerImpl;.purge:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L120354.   v0:= 0  @length 4;
#L120356.   v1:= v2.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L12035a.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.isEmpty|](v1) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.isEmpty:()Z|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L120360.   v1:= temp;
#L120362.   if v1 == 0 then goto L120368;
#L120366.   return v0;
#L120368.   v1:= v2.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L12036c.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.access$202|](v1, v0) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.access$202:(Ljava/util/Timer$TimerImpl$TimerHeap;I)I|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type static;
#L120372.   v0:= v2.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L120376.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.deleteIfCancelled|](v0) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.deleteIfCancelled:()V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L12037c.   v0:= v2.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L120380.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.access$200|](v0) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.access$200:(Ljava/util/Timer$TimerImpl$TimerHeap;)I|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type static;
#L120386.   v0:= temp;
#L120388.   goto L120366;

   }
    procedure [|void|] [|java:util:Timer$TimerImpl.run|] ([|java:util:Timer$TimerImpl|] v15 @type (this)) @owner [|java:util:Timer$TimerImpl|] @signature [|Ljava/util/Timer$TimerImpl;.run:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L12039c.   v13:= 0  @length wide16;
#L1203a0.   (@monitorenter v15)
#L1203a2.   v7:= v15.[|java:util:Timer$TimerImpl.cancelled|]   @boolean;
#L1203a6.   if v7 == 0 then goto L1203ae;
#L1203aa.   (@monitorexit v15)
#L1203ac.   return @void ;
#L1203ae.   v7:= v15.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L1203b2.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.isEmpty|](v7) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.isEmpty:()Z|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L1203b8.   v7:= temp;
#L1203ba.   if v7 == 0 then goto L1203da;
#L1203be.   v7:= v15.[|java:util:Timer$TimerImpl.finished|]   @boolean;
#L1203c2.   if v7 == 0 then goto L1203d0;
#L1203c6.   (@monitorexit v15)
#L1203c8.   goto L1203ac;
#L1203ca.   v7:= Exception  @type object;
#L1203cc.   (@monitorexit v15)
#L1203ce.   throw v7;
#L1203d0.   call temp:=  [|java:lang:Object.wait|](v15) @signature [|Ljava/lang/Object;.wait:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1203d6.   (@monitorexit v15)
#L1203d8.   goto L1203a0;
#L1203da.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1203e0.   v0:= temp  @type wide;
#L1203e2.   v7:= v15.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L1203e6.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.minimum|](v7) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.minimum:()Ljava/util/TimerTask;|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L1203ec.   v3:= temp  @type object;
#L1203ee.   v8:= v3.[|java:util:TimerTask.lock|]   @type object;
#L1203f2.   (@monitorenter v8)
#L1203f4.   v7:= v3.[|java:util:TimerTask.cancelled|]   @boolean;
#L1203f8.   if v7 == 0 then goto L12040e;
#L1203fc.   v7:= v15.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L120400.   v9:= 0  @length 4;
#L120402.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.delete|](v7, v9) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.delete:(I)V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L120408.   (@monitorexit v8)
#L12040a.   (@monitorexit v15)
#L12040c.   goto L1203a0;
#L12040e.   v9:= v3.[|java:util:TimerTask.when|]   @wide;
#L120412.   v5:= v9 - v0  @type long;
#L120416.   (@monitorexit v8)
#L120418.   v7:= cmp(v5,v13);
#L12041c.   if v7 <= 0 then goto L120430;
#L120420.   call temp:=  [|java:lang:Object.wait|](v15, v5, v6) @signature [|Ljava/lang/Object;.wait:(J)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L120426.   (@monitorexit v15)
#L120428.   goto L1203a0;
#L12042a.   v7:= Exception  @type object;
#L12042c.   (@monitorexit v8)
#L12042e.   throw v7;
#L120430.   v8:= v3.[|java:util:TimerTask.lock|]   @type object;
#L120434.   (@monitorenter v8)
#L120436.   v2:= 0  @length 4;
#L120438.   v7:= v15.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L12043c.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.minimum|](v7) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.minimum:()Ljava/util/TimerTask;|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L120442.   v7:= temp  @type object;
#L120444.   v9:= v7.[|java:util:TimerTask.when|]   @wide;
#L120448.   v11:= v3.[|java:util:TimerTask.when|]   @wide;
#L12044c.   v7:= cmp(v9,v11);
#L120450.   if v7 == 0 then goto L120460;
#L120454.   v7:= v15.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L120458.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.access$100|](v7, v3) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.access$100:(Ljava/util/Timer$TimerImpl$TimerHeap;Ljava/util/TimerTask;)I|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type static;
#L12045e.   v2:= temp;
#L120460.   v7:= v3.[|java:util:TimerTask.cancelled|]   @boolean;
#L120464.   if v7 == 0 then goto L120484;
#L120468.   v7:= v15.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L12046c.   v9:= v15.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L120470.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.access$100|](v9, v3) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.access$100:(Ljava/util/Timer$TimerImpl$TimerHeap;Ljava/util/TimerTask;)I|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type static;
#L120476.   v9:= temp;
#L120478.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.delete|](v7, v9) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.delete:(I)V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L12047e.   (@monitorexit v8)
#L120480.   (@monitorexit v15)
#L120482.   goto L1203a0;
#L120484.   v9:= v3.[|java:util:TimerTask.when|]   @wide;
#L120488.   call temp:=  [|java:util:TimerTask.setScheduledTime|](v3, v9, v10) @signature [|Ljava/util/TimerTask;.setScheduledTime:(J)V|] @classDescriptor [|java:util:TimerTask|] @type virtual;
#L12048e.   v7:= v15.[|java:util:Timer$TimerImpl.tasks|]   @type object;
#L120492.   call temp:=  [|java:util:Timer$TimerImpl$TimerHeap.delete|](v7, v2) @signature [|Ljava/util/Timer$TimerImpl$TimerHeap;.delete:(I)V|] @classDescriptor [|java:util:Timer$TimerImpl$TimerHeap|] @type virtual;
#L120498.   v9:= v3.[|java:util:TimerTask.period|]   @wide;
#L12049c.   v7:= cmp(v9,v13);
#L1204a0.   if v7 < 0 then goto L120500;
#L1204a4.   v7:= v3.[|java:util:TimerTask.fixedRate|]   @boolean;
#L1204a8.   if v7 == 0 then goto L1204e6;
#L1204ac.   v9:= v3.[|java:util:TimerTask.when|]   @wide;
#L1204b0.   v11:= v3.[|java:util:TimerTask.period|]   @wide;
#L1204b4.   v9:= v9 + v11  @type long;
#L1204b6.   v3.[|java:util:TimerTask.when|]  := v9 @wide;
#L1204ba.   call temp:=  [|java:util:Timer$TimerImpl.insertTask|](v15, v3) @signature [|Ljava/util/Timer$TimerImpl;.insertTask:(Ljava/util/TimerTask;)V|] @classDescriptor [|java:util:Timer$TimerImpl|] @type direct;
#L1204c0.   (@monitorexit v8)
#L1204c2.   (@monitorexit v15)
#L1204c4.   v4:= 0  @length 4;
#L1204c6.   call temp:=  [|java:util:TimerTask.run|](v3) @signature [|Ljava/util/TimerTask;.run:()V|] @classDescriptor [|java:util:TimerTask|] @type virtual;
#L1204cc.   v4:= 1  @length 4;
#L1204ce.   if v4 != 0 then goto L1203a0;
#L1204d2.   (@monitorenter v15)
#L1204d4.   v7:= 1  @length 4;
#L1204d6.   v15.[|java:util:Timer$TimerImpl.cancelled|]  := v7 @boolean;
#L1204da.   (@monitorexit v15)
#L1204dc.   goto L1203a0;
#L1204e0.   v7:= Exception  @type object;
#L1204e2.   (@monitorexit v15)
#L1204e4.   throw v7;
#L1204e6.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1204ec.   v9:= temp  @type wide;
#L1204ee.   v11:= v3.[|java:util:TimerTask.period|]   @wide;
#L1204f2.   v9:= v9 + v11  @type long;
#L1204f4.   v3.[|java:util:TimerTask.when|]  := v9 @wide;
#L1204f8.   goto L1204ba;
#L1204fa.   v7:= Exception  @type object;
#L1204fc.   (@monitorexit v8)
#L1204fe.   throw v7;
#L120500.   v9:= 0  @length wide16;
#L120504.   v3.[|java:util:TimerTask.when|]  := v9 @wide;
#L120508.   goto L1204c0;
#L12050a.   v7:= Exception  @type object;
#L12050c.   if v4 != 0 then goto L12051a;
#L120510.   (@monitorenter v15)
#L120512.   v8:= 1  @length 4;
#L120514.   v15.[|java:util:Timer$TimerImpl.cancelled|]  := v8 @boolean;
#L120518.   (@monitorexit v15)
#L12051a.   throw v7;
#L12051c.   v7:= Exception  @type object;
#L12051e.   goto L1203d6;
#L120522.   v7:= Exception  @type object;
#L120524.   goto L120426;
#L120526.   v7:= Exception  @type object;
#L120528.   (@monitorexit v15)
#L12052a.   throw v7;
  catch  [|any|] @[L1203a2..L1203ce] goto L1203ca;
  catch  [|java:lang:InterruptedException|] @[L1203d0..L1203d6] goto L12051c;
  catch  [|any|] @[L1203d0..L1203d6] goto L1203ca;
  catch  [|any|] @[L1203d6..L1203f4] goto L1203ca;
  catch  [|any|] @[L1203f4..L12040a] goto L12042a;
  catch  [|any|] @[L12040a..L12040c] goto L1203ca;
  catch  [|any|] @[L12040e..L120418] goto L12042a;
  catch  [|java:lang:InterruptedException|] @[L120420..L120426] goto L120522;
  catch  [|any|] @[L120420..L120426] goto L1203ca;
  catch  [|any|] @[L120426..L120428] goto L1203ca;
  catch  [|any|] @[L12042c..L12042e] goto L12042a;
  catch  [|any|] @[L12042e..L120436] goto L1203ca;
  catch  [|any|] @[L120438..L120480] goto L1204fa;
  catch  [|any|] @[L120480..L120482] goto L1203ca;
  catch  [|any|] @[L120484..L1204c2] goto L1204fa;
  catch  [|any|] @[L1204c2..L1204c4] goto L1203ca;
  catch  [|any|] @[L1204c6..L1204cc] goto L12050a;
  catch  [|any|] @[L1204d6..L1204e4] goto L1204e0;
  catch  [|any|] @[L1204e6..L1204fe] goto L1204fa;
  catch  [|any|] @[L1204fe..L120500] goto L1203ca;
  catch  [|any|] @[L120504..L120508] goto L1204fa;
  catch  [|any|] @[L120514..L12051a] goto L120526;
  catch  [|any|] @[L120528..L12052a] goto L120526;

   }
record [|java:util:Timer|]  @type class @AccessFlag PUBLIC  {
      [|java:util:Timer$FinalizerHelper|] [|java:util:Timer.finalizer|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:Timer$TimerImpl|] [|java:util:Timer.impl|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:Timer.timerId|]    @AccessFlag PRIVATE_STATIC;
    procedure [|void|] [|java:util:Timer.<init>|] ([|java:util:Timer|] v1 @type (this)) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L120604.   v0:= 0  @length 4;
#L120606.   call temp:=  [|java:util:Timer.<init>|](v1, v0) @signature [|Ljava/util/Timer;.<init>:(Z)V|] @classDescriptor [|java:util:Timer|] @type direct;
#L12060c.   return @void ;

   }
    procedure [|void|] [|java:util:Timer.<init>|] ([|java:util:Timer|] v1 @type (this), [|java:lang:String|] v2 @type (object)) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L120620.   v0:= 0  @length 4;
#L120622.   call temp:=  [|java:util:Timer.<init>|](v1, v2, v0) @signature [|Ljava/util/Timer;.<init>:(Ljava/lang/String;Z)V|] @classDescriptor [|java:util:Timer|] @type direct;
#L120628.   return @void ;

   }
    procedure [|void|] [|java:util:Timer.<init>|] ([|java:util:Timer|] v2 @type (this), [|java:lang:String|] v3 @type (object), [|boolean|] v4) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.<init>:(Ljava/lang/String;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L12063c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L120642.   if v3 != 0 then goto L120656;
#L120646.   v0:= new [|java:lang:NullPointerException|];
#L12064a.   v1:= "name == null" @type (object, string);
#L12064e.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L120654.   throw v0;
#L120656.   v0:= new [|java:util:Timer$TimerImpl|];
#L12065a.   call temp:=  [|java:util:Timer$TimerImpl.<init>|](v0, v3, v4) @signature [|Ljava/util/Timer$TimerImpl;.<init>:(Ljava/lang/String;Z)V|] @classDescriptor [|java:util:Timer$TimerImpl|] @type direct;
#L120660.   v2.[|java:util:Timer.impl|]  := v0 @type object;
#L120664.   v0:= new [|java:util:Timer$FinalizerHelper|];
#L120668.   v1:= v2.[|java:util:Timer.impl|]   @type object;
#L12066c.   call temp:=  [|java:util:Timer$FinalizerHelper.<init>|](v0, v1) @signature [|Ljava/util/Timer$FinalizerHelper;.<init>:(Ljava/util/Timer$TimerImpl;)V|] @classDescriptor [|java:util:Timer$FinalizerHelper|] @type direct;
#L120672.   v2.[|java:util:Timer.finalizer|]  := v0 @type object;
#L120676.   return @void ;

   }
    procedure [|void|] [|java:util:Timer.<init>|] ([|java:util:Timer|] v3 @type (this), [|boolean|] v4) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.<init>:(Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L120688.   v0:= new [|java:lang:StringBuilder|];
#L12068c.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L120692.   v1:= "Timer-" @type (object, string);
#L120696.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12069c.   v0:= temp  @type object;
#L12069e.   call temp:=  [|java:util:Timer.nextId|]() @signature [|Ljava/util/Timer;.nextId:()J|] @classDescriptor [|java:util:Timer|] @type static;
#L1206a4.   v1:= temp  @type wide;
#L1206a6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1206ac.   v0:= temp  @type object;
#L1206ae.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1206b4.   v0:= temp  @type object;
#L1206b6.   call temp:=  [|java:util:Timer.<init>|](v3, v0, v4) @signature [|Ljava/util/Timer;.<init>:(Ljava/lang/String;Z)V|] @classDescriptor [|java:util:Timer|] @type direct;
#L1206bc.   return @void ;

   }
    procedure [|long|] [|java:util:Timer.nextId|] () @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.nextId:()J|] @Access PRIVATE_STATIC_DECLARED_SYNCHRONIZED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1206d0.   v1:= new [|java:util:Timer|];
#L1206d4.   (@monitorenter v1)
#L1206d6.   v2:= @@[|java:util:Timer.timerId|]   @wide;
#L1206da.   v4:= 1  @length wide16;
#L1206de.   v4:= v4 + v2  @type long;
#L1206e0.   @@[|java:util:Timer.timerId|] := v4  @wide;
#L1206e4.   (@monitorexit v1)
#L1206e6.   return v2  @type wide;
#L1206e8.   v0:= Exception  @type object;
#L1206ea.   (@monitorexit v1)
#L1206ec.   throw v0;
  catch  [|any|] @[L1206d6..L1206e4] goto L1206e8;

   }
    procedure [|void|] [|java:util:Timer.scheduleImpl|] ([|java:util:Timer|] v6 @type (this), [|java:util:TimerTask|] v7 @type (object), [|long|] v8, [|long|] v10, [|boolean|] v12) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.scheduleImpl:(Ljava/util/TimerTask;JJZ)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12070c.   v3:= v6.[|java:util:Timer.impl|]   @type object;
#L120710.   (@monitorenter v3)
#L120712.   v2:= v6.[|java:util:Timer.impl|]   @type object;
#L120716.   call temp:=  [|java:util:Timer$TimerImpl.access$400|](v2) @signature [|Ljava/util/Timer$TimerImpl;.access$400:(Ljava/util/Timer$TimerImpl;)Z|] @classDescriptor [|java:util:Timer$TimerImpl|] @type static;
#L12071c.   v2:= temp;
#L12071e.   if v2 == 0 then goto L120738;
#L120722.   v2:= new [|java:lang:IllegalStateException|];
#L120726.   v4:= "Timer was canceled" @type (object, string);
#L12072a.   call temp:=  [|java:lang:IllegalStateException.<init>|](v2, v4) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L120730.   throw v2;
#L120732.   v2:= Exception  @type object;
#L120734.   (@monitorexit v3)
#L120736.   throw v2;
#L120738.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L12073e.   v4:= temp  @type wide;
#L120740.   v0:= v8 + v4  @type long;
#L120744.   v4:= 0  @length wide16;
#L120748.   v2:= cmp(v0,v4);
#L12074c.   if v2 >= 0 then goto L120782;
#L120750.   v2:= new [|java:lang:IllegalArgumentException|];
#L120754.   v4:= new [|java:lang:StringBuilder|];
#L120758.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L12075e.   v5:= "Illegal delay to start the TimerTask: " @type (object, string);
#L120762.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120768.   v4:= temp  @type object;
#L12076a.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120770.   v4:= temp  @type object;
#L120772.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120778.   v4:= temp  @type object;
#L12077a.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L120780.   throw v2;
#L120782.   v4:= v7.[|java:util:TimerTask.lock|]   @type object;
#L120786.   (@monitorenter v4)
#L120788.   call temp:=  [|java:util:TimerTask.isScheduled|](v7) @signature [|Ljava/util/TimerTask;.isScheduled:()Z|] @classDescriptor [|java:util:TimerTask|] @type virtual;
#L12078e.   v2:= temp;
#L120790.   if v2 == 0 then goto L1207aa;
#L120794.   v2:= new [|java:lang:IllegalStateException|];
#L120798.   v5:= "TimerTask is scheduled already" @type (object, string);
#L12079c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v2, v5) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1207a2.   throw v2;
#L1207a4.   v2:= Exception  @type object;
#L1207a6.   (@monitorexit v4)
#L1207a8.   throw v2;
#L1207aa.   v2:= v7.[|java:util:TimerTask.cancelled|]   @boolean;
#L1207ae.   if v2 == 0 then goto L1207c2;
#L1207b2.   v2:= new [|java:lang:IllegalStateException|];
#L1207b6.   v5:= "TimerTask is canceled" @type (object, string);
#L1207ba.   call temp:=  [|java:lang:IllegalStateException.<init>|](v2, v5) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1207c0.   throw v2;
#L1207c2.   v7.[|java:util:TimerTask.when|]  := v0 @wide;
#L1207c6.   v7.[|java:util:TimerTask.period|]  := v10 @wide;
#L1207ca.   v7.[|java:util:TimerTask.fixedRate|]  := v12 @boolean;
#L1207ce.   (@monitorexit v4)
#L1207d0.   v2:= v6.[|java:util:Timer.impl|]   @type object;
#L1207d4.   call temp:=  [|java:util:Timer$TimerImpl.access$500|](v2, v7) @signature [|Ljava/util/Timer$TimerImpl;.access$500:(Ljava/util/Timer$TimerImpl;Ljava/util/TimerTask;)V|] @classDescriptor [|java:util:Timer$TimerImpl|] @type static;
#L1207da.   (@monitorexit v3)
#L1207dc.   return @void ;
  catch  [|any|] @[L120712..L120736] goto L120732;
  catch  [|any|] @[L120738..L120788] goto L120732;
  catch  [|any|] @[L120788..L1207a8] goto L1207a4;
  catch  [|any|] @[L1207a8..L1207aa] goto L120732;
  catch  [|any|] @[L1207aa..L1207d0] goto L1207a4;
  catch  [|any|] @[L1207d0..L1207dc] goto L120732;

   }
    procedure [|void|] [|java:util:Timer.cancel|] ([|java:util:Timer|] v1 @type (this)) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.cancel:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L120828.   v0:= v1.[|java:util:Timer.impl|]   @type object;
#L12082c.   call temp:=  [|java:util:Timer$TimerImpl.cancel|](v0) @signature [|Ljava/util/Timer$TimerImpl;.cancel:()V|] @classDescriptor [|java:util:Timer$TimerImpl|] @type virtual;
#L120832.   return @void ;

   }
    procedure [|int|] [|java:util:Timer.purge|] ([|java:util:Timer|] v2 @type (this)) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.purge:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L120844.   v1:= v2.[|java:util:Timer.impl|]   @type object;
#L120848.   (@monitorenter v1)
#L12084a.   v0:= v2.[|java:util:Timer.impl|]   @type object;
#L12084e.   call temp:=  [|java:util:Timer$TimerImpl.purge|](v0) @signature [|Ljava/util/Timer$TimerImpl;.purge:()I|] @classDescriptor [|java:util:Timer$TimerImpl|] @type virtual;
#L120854.   v0:= temp;
#L120856.   (@monitorexit v1)
#L120858.   return v0;
#L12085a.   v0:= Exception  @type object;
#L12085c.   (@monitorexit v1)
#L12085e.   throw v0;
  catch  [|any|] @[L12084a..L12085e] goto L12085a;

   }
    procedure [|void|] [|java:util:Timer.schedule|] ([|java:util:Timer|] v7 @type (this), [|java:util:TimerTask|] v8 @type (object), [|long|] v9) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.schedule:(Ljava/util/TimerTask;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12087c.   v0:= 0  @length wide16;
#L120880.   v0:= cmp(v9,v0);
#L120884.   if v0 >= 0 then goto L120894;
#L120888.   v0:= new [|java:lang:IllegalArgumentException|];
#L12088c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L120892.   throw v0;
#L120894.   v4:= -1  @length wide16;
#L120898.   v6:= 0  @length 4;
#L12089a.   v0:= v7  @type object;
#L12089c.   v1:= v8  @type object;
#L12089e.   v2:= v9  @type wide;
#L1208a0.   call temp:=  [|java:util:Timer.scheduleImpl|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/Timer;.scheduleImpl:(Ljava/util/TimerTask;JJZ)V|] @classDescriptor [|java:util:Timer|] @type direct;
#L1208a6.   return @void ;

   }
    procedure [|void|] [|java:util:Timer.schedule|] ([|java:util:Timer|] v7 @type (this), [|java:util:TimerTask|] v8 @type (object), [|long|] v9, [|long|] v11) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.schedule:(Ljava/util/TimerTask;JJ)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1208b8.   v1:= 0  @length wide16;
#L1208bc.   v0:= cmp(v9,v1);
#L1208c0.   if v0 < 0 then goto L1208cc;
#L1208c4.   v0:= cmp(v11,v1);
#L1208c8.   if v0 > 0 then goto L1208d8;
#L1208cc.   v0:= new [|java:lang:IllegalArgumentException|];
#L1208d0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1208d6.   throw v0;
#L1208d8.   v6:= 0  @length 4;
#L1208da.   v0:= v7  @type object;
#L1208dc.   v1:= v8  @type object;
#L1208de.   v2:= v9  @type wide;
#L1208e0.   v4:= v11  @type wide;
#L1208e2.   call temp:=  [|java:util:Timer.scheduleImpl|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/Timer;.scheduleImpl:(Ljava/util/TimerTask;JJZ)V|] @classDescriptor [|java:util:Timer|] @type direct;
#L1208e8.   return @void ;

   }
    procedure [|void|] [|java:util:Timer.schedule|] ([|java:util:Timer|] v9 @type (this), [|java:util:TimerTask|] v10 @type (object), [|java:util:Date|] v11 @type (object)) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.schedule:(Ljava/util/TimerTask;Ljava/util/Date;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1208fc.   v2:= 0  @length wide16;
#L120900.   call temp:=  [|java:util:Date.getTime|](v11) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L120906.   v0:= temp  @type wide;
#L120908.   v0:= cmp(v0,v2);
#L12090c.   if v0 >= 0 then goto L12091c;
#L120910.   v0:= new [|java:lang:IllegalArgumentException|];
#L120914.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12091a.   throw v0;
#L12091c.   call temp:=  [|java:util:Date.getTime|](v11) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L120922.   v0:= temp  @type wide;
#L120924.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L12092a.   v4:= temp  @type wide;
#L12092c.   v7:= v0 - v4  @type long;
#L120930.   v0:= cmp(v7,v2);
#L120934.   if v0 >= 0 then goto L12094a;
#L120938.   v4:= -1  @length wide16;
#L12093c.   v6:= 0  @length 4;
#L12093e.   v0:= v9  @type object;
#L120940.   v1:= v10  @type object;
#L120942.   call temp:=  [|java:util:Timer.scheduleImpl|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/Timer;.scheduleImpl:(Ljava/util/TimerTask;JJZ)V|] @classDescriptor [|java:util:Timer|] @type direct;
#L120948.   return @void ;
#L12094a.   v2:= v7  @type wide;
#L12094c.   goto L120938;

   }
    procedure [|void|] [|java:util:Timer.schedule|] ([|java:util:Timer|] v9 @type (this), [|java:util:TimerTask|] v10 @type (object), [|java:util:Date|] v11 @type (object), [|long|] v12) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.schedule:(Ljava/util/TimerTask;Ljava/util/Date;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L120960.   v2:= 0  @length wide16;
#L120964.   v0:= cmp(v12,v2);
#L120968.   if v0 <= 0 then goto L12097c;
#L12096c.   call temp:=  [|java:util:Date.getTime|](v11) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L120972.   v0:= temp  @type wide;
#L120974.   v0:= cmp(v0,v2);
#L120978.   if v0 >= 0 then goto L120988;
#L12097c.   v0:= new [|java:lang:IllegalArgumentException|];
#L120980.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L120986.   throw v0;
#L120988.   call temp:=  [|java:util:Date.getTime|](v11) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L12098e.   v0:= temp  @type wide;
#L120990.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L120996.   v4:= temp  @type wide;
#L120998.   v7:= v0 - v4  @type long;
#L12099c.   v0:= cmp(v7,v2);
#L1209a0.   if v0 >= 0 then goto L1209b4;
#L1209a4.   v6:= 0  @length 4;
#L1209a6.   v0:= v9  @type object;
#L1209a8.   v1:= v10  @type object;
#L1209aa.   v4:= v12  @type wide;
#L1209ac.   call temp:=  [|java:util:Timer.scheduleImpl|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/Timer;.scheduleImpl:(Ljava/util/TimerTask;JJZ)V|] @classDescriptor [|java:util:Timer|] @type direct;
#L1209b2.   return @void ;
#L1209b4.   v2:= v7  @type wide;
#L1209b6.   goto L1209a4;

   }
    procedure [|void|] [|java:util:Timer.scheduleAtFixedRate|] ([|java:util:Timer|] v7 @type (this), [|java:util:TimerTask|] v8 @type (object), [|long|] v9, [|long|] v11) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.scheduleAtFixedRate:(Ljava/util/TimerTask;JJ)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1209c8.   v1:= 0  @length wide16;
#L1209cc.   v0:= cmp(v9,v1);
#L1209d0.   if v0 < 0 then goto L1209dc;
#L1209d4.   v0:= cmp(v11,v1);
#L1209d8.   if v0 > 0 then goto L1209e8;
#L1209dc.   v0:= new [|java:lang:IllegalArgumentException|];
#L1209e0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1209e6.   throw v0;
#L1209e8.   v6:= 1  @length 4;
#L1209ea.   v0:= v7  @type object;
#L1209ec.   v1:= v8  @type object;
#L1209ee.   v2:= v9  @type wide;
#L1209f0.   v4:= v11  @type wide;
#L1209f2.   call temp:=  [|java:util:Timer.scheduleImpl|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/Timer;.scheduleImpl:(Ljava/util/TimerTask;JJZ)V|] @classDescriptor [|java:util:Timer|] @type direct;
#L1209f8.   return @void ;

   }
    procedure [|void|] [|java:util:Timer.scheduleAtFixedRate|] ([|java:util:Timer|] v7 @type (this), [|java:util:TimerTask|] v8 @type (object), [|java:util:Date|] v9 @type (object), [|long|] v10) @owner [|java:util:Timer|] @signature [|Ljava/util/Timer;.scheduleAtFixedRate:(Ljava/util/TimerTask;Ljava/util/Date;J)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L120a0c.   v4:= 0  @length wide16;
#L120a10.   v0:= cmp(v10,v4);
#L120a14.   if v0 <= 0 then goto L120a28;
#L120a18.   call temp:=  [|java:util:Date.getTime|](v9) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L120a1e.   v0:= temp  @type wide;
#L120a20.   v0:= cmp(v0,v4);
#L120a24.   if v0 >= 0 then goto L120a34;
#L120a28.   v0:= new [|java:lang:IllegalArgumentException|];
#L120a2c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L120a32.   throw v0;
#L120a34.   call temp:=  [|java:util:Date.getTime|](v9) @signature [|Ljava/util/Date;.getTime:()J|] @classDescriptor [|java:util:Date|] @type virtual;
#L120a3a.   v0:= temp  @type wide;
#L120a3c.   call temp:=  [|java:lang:System.currentTimeMillis|]() @signature [|Ljava/lang/System;.currentTimeMillis:()J|] @classDescriptor [|java:lang:System|] @type static;
#L120a42.   v4:= temp  @type wide;
#L120a44.   v2:= v0 - v4  @type long;
#L120a48.   v6:= 1  @length 4;
#L120a4a.   v0:= v7  @type object;
#L120a4c.   v1:= v8  @type object;
#L120a4e.   v4:= v10  @type wide;
#L120a50.   call temp:=  [|java:util:Timer.scheduleImpl|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/Timer;.scheduleImpl:(Ljava/util/TimerTask;JJZ)V|] @classDescriptor [|java:util:Timer|] @type direct;
#L120a56.   return @void ;

   }
record [|java:util:TooManyListenersException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
   }
      global [|long|] @@[|java:util:TooManyListenersException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:TooManyListenersException.<init>|] ([|java:util:TooManyListenersException|] v0 @type (this)) @owner [|java:util:TooManyListenersException|] @signature [|Ljava/util/TooManyListenersException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L120a68.   call temp:=  [|java:lang:Exception.<init>|](v0) @signature [|Ljava/lang/Exception;.<init>:()V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L120a6e.   return @void ;

   }
    procedure [|void|] [|java:util:TooManyListenersException.<init>|] ([|java:util:TooManyListenersException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:TooManyListenersException|] @signature [|Ljava/util/TooManyListenersException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L120a80.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L120a86.   return @void ;

   }
record [|java:util:TreeMap$1|]  @type class @AccessFlag FINAL extends  [|java:util:Comparator|] {
   }
    procedure [|void|] [|java:util:TreeMap$1.<init>|] ([|java:util:TreeMap$1|] v0 @type (this)) @owner [|java:util:TreeMap$1|] @signature [|Ljava/util/TreeMap$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L120a98.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L120a9e.   return @void ;

   }
    procedure [|int|] [|java:util:TreeMap$1.compare|] ([|java:util:TreeMap$1|] v1 @type (this), [|java:lang:Comparable|] v2 @type (object), [|java:lang:Comparable|] v3 @type (object)) @owner [|java:util:TreeMap$1|] @signature [|Ljava/util/TreeMap$1;.compare:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L120ab0.   call temp:=  [|java:lang:Comparable.compareTo|](v2, v3) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L120ab6.   v0:= temp;
#L120ab8.   return v0;

   }
    procedure [|int|] [|java:util:TreeMap$1.compare|] ([|java:util:TreeMap$1|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$1|] @signature [|Ljava/util/TreeMap$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L120acc.   v2:= ([|java:lang:Comparable|])v2;
#L120ad0.   v3:= ([|java:lang:Comparable|])v3;
#L120ad4.   call temp:=  [|java:util:TreeMap$1.compare|](v1, v2, v3) @signature [|Ljava/util/TreeMap$1;.compare:(Ljava/lang/Comparable;Ljava/lang/Comparable;)I|] @classDescriptor [|java:util:TreeMap$1|] @type virtual;
#L120ada.   v0:= temp;
#L120adc.   return v0;

   }
record [|java:util:TreeMap$2|]  @type class @AccessFlag SYNTHETIC  {
   }
      global [|int|][] @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Bound|]    @AccessFlag STATIC_FINAL_SYNTHETIC;
      global [|int|][] @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]    @AccessFlag STATIC_FINAL_SYNTHETIC;
    procedure [|void|] [|java:util:TreeMap$2.<clinit>|] () @owner [|java:util:TreeMap$2|] @signature [|Ljava/util/TreeMap$2;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L120af0.   call temp:=  [|java:util:TreeMap$Bound.values|]() @signature [|Ljava/util/TreeMap$Bound;.values:()[Ljava/util/TreeMap$Bound;|] @classDescriptor [|java:util:TreeMap$Bound|] @type static;
#L120af6.   v0:= temp  @type object;
#L120af8.   v0:= v0.length;
#L120afa.   v0:= new [|int|][v0];
#L120afe.   @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Bound|] := v0  @type object;
#L120b02.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Bound|]   @type object;
#L120b06.   v1:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L120b0a.   call temp:=  [|java:util:TreeMap$Bound.ordinal|](v1) @signature [|Ljava/util/TreeMap$Bound;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Bound|] @type virtual;
#L120b10.   v1:= temp;
#L120b12.   v2:= 1  @length 4;
#L120b14.   v0[v1]:= v2;
#L120b18.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Bound|]   @type object;
#L120b1c.   v1:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L120b20.   call temp:=  [|java:util:TreeMap$Bound.ordinal|](v1) @signature [|Ljava/util/TreeMap$Bound;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Bound|] @type virtual;
#L120b26.   v1:= temp;
#L120b28.   v2:= 2  @length 4;
#L120b2a.   v0[v1]:= v2;
#L120b2e.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Bound|]   @type object;
#L120b32.   v1:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L120b36.   call temp:=  [|java:util:TreeMap$Bound.ordinal|](v1) @signature [|Ljava/util/TreeMap$Bound;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Bound|] @type virtual;
#L120b3c.   v1:= temp;
#L120b3e.   v2:= 3  @length 4;
#L120b40.   v0[v1]:= v2;
#L120b44.   call temp:=  [|java:util:TreeMap$Relation.values|]() @signature [|Ljava/util/TreeMap$Relation;.values:()[Ljava/util/TreeMap$Relation;|] @classDescriptor [|java:util:TreeMap$Relation|] @type static;
#L120b4a.   v0:= temp  @type object;
#L120b4c.   v0:= v0.length;
#L120b4e.   v0:= new [|int|][v0];
#L120b52.   @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|] := v0  @type object;
#L120b56.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L120b5a.   v1:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L120b5e.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v1) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L120b64.   v1:= temp;
#L120b66.   v2:= 1  @length 4;
#L120b68.   v0[v1]:= v2;
#L120b6c.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L120b70.   v1:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L120b74.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v1) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L120b7a.   v1:= temp;
#L120b7c.   v2:= 2  @length 4;
#L120b7e.   v0[v1]:= v2;
#L120b82.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L120b86.   v1:= @@[|java:util:TreeMap$Relation.EQUAL|]   @type object;
#L120b8a.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v1) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L120b90.   v1:= temp;
#L120b92.   v2:= 3  @length 4;
#L120b94.   v0[v1]:= v2;
#L120b98.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L120b9c.   v1:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L120ba0.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v1) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L120ba6.   v1:= temp;
#L120ba8.   v2:= 4  @length 4;
#L120baa.   v0[v1]:= v2;
#L120bae.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L120bb2.   v1:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L120bb6.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v1) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L120bbc.   v1:= temp;
#L120bbe.   v2:= 5  @length 4;
#L120bc0.   v0[v1]:= v2;
#L120bc4.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L120bc8.   v1:= @@[|java:util:TreeMap$Relation.CREATE|]   @type object;
#L120bcc.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v1) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L120bd2.   v1:= temp;
#L120bd4.   v2:= 6  @length 4;
#L120bd6.   v0[v1]:= v2;
#L120bda.   return @void ;
#L120bdc.   v0:= Exception  @type object;
#L120bde.   goto L120bda;
#L120be0.   v0:= Exception  @type object;
#L120be2.   goto L120bc4;
#L120be4.   v0:= Exception  @type object;
#L120be6.   goto L120bae;
#L120be8.   v0:= Exception  @type object;
#L120bea.   goto L120b98;
#L120bec.   v0:= Exception  @type object;
#L120bee.   goto L120b82;
#L120bf0.   v0:= Exception  @type object;
#L120bf2.   goto L120b6c;
#L120bf4.   v0:= Exception  @type object;
#L120bf6.   goto L120b44;
#L120bf8.   v0:= Exception  @type object;
#L120bfa.   goto L120b2e;
#L120bfc.   v0:= Exception  @type object;
#L120bfe.   goto L120b18;
  catch  [|java:lang:NoSuchFieldError|] @[L120b02..L120b18] goto L120bfc;
  catch  [|java:lang:NoSuchFieldError|] @[L120b18..L120b2e] goto L120bf8;
  catch  [|java:lang:NoSuchFieldError|] @[L120b2e..L120b44] goto L120bf4;
  catch  [|java:lang:NoSuchFieldError|] @[L120b56..L120b6c] goto L120bf0;
  catch  [|java:lang:NoSuchFieldError|] @[L120b6c..L120b82] goto L120bec;
  catch  [|java:lang:NoSuchFieldError|] @[L120b82..L120b98] goto L120be8;
  catch  [|java:lang:NoSuchFieldError|] @[L120b98..L120bae] goto L120be4;
  catch  [|java:lang:NoSuchFieldError|] @[L120bae..L120bc4] goto L120be0;
  catch  [|java:lang:NoSuchFieldError|] @[L120bc4..L120bda] goto L120bdc;

   }
record [|java:util:TreeMap$NavigableSubMap|]  @type class @AccessFlag ABSTRACT  extends [|java:util:AbstractMap|], [|java:io:Serializable|] {
      [|boolean|] [|java:util:TreeMap$NavigableSubMap.fromStart|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:TreeMap$NavigableSubMap.hi|]    @AccessFlag ;
      [|boolean|] [|java:util:TreeMap$NavigableSubMap.hiInclusive|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:TreeMap$NavigableSubMap.lo|]    @AccessFlag ;
      [|boolean|] [|java:util:TreeMap$NavigableSubMap.loInclusive|]    @AccessFlag ;
      [|java:util:TreeMap|] [|java:util:TreeMap$NavigableSubMap.m|]    @AccessFlag ;
      [|boolean|] [|java:util:TreeMap$NavigableSubMap.toEnd|]    @AccessFlag ;
   }
      global [|long|] @@[|java:util:TreeMap$NavigableSubMap.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:TreeMap$NavigableSubMap.<init>|] ([|java:util:TreeMap$NavigableSubMap|] v3 @type (this), [|java:util:TreeMap|] v4 @type (object), [|java:lang:Object|] v5 @type (object), [|java:util:TreeMap$Bound|] v6 @type (object), [|java:lang:Object|] v7 @type (object), [|java:util:TreeMap$Bound|] v8 @type (object)) @owner [|java:util:TreeMap$NavigableSubMap|] @signature [|Ljava/util/TreeMap$NavigableSubMap;.<init>:(Ljava/util/TreeMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L120c84.   v1:= 1  @length 4;
#L120c86.   v2:= 0  @length 4;
#L120c88.   call temp:=  [|java:util:AbstractMap.<init>|](v3) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L120c8e.   v3.[|java:util:TreeMap$NavigableSubMap.m|]  := v4 @type object;
#L120c92.   v3.[|java:util:TreeMap$NavigableSubMap.lo|]  := v5 @type object;
#L120c96.   v3.[|java:util:TreeMap$NavigableSubMap.hi|]  := v7 @type object;
#L120c9a.   v0:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L120c9e.   if v6 != v0 then goto L120cd2;
#L120ca2.   v0:= v1;
#L120ca4.   v3.[|java:util:TreeMap$NavigableSubMap.fromStart|]  := v0 @boolean;
#L120ca8.   v0:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L120cac.   if v8 != v0 then goto L120cd6;
#L120cb0.   v0:= v1;
#L120cb2.   v3.[|java:util:TreeMap$NavigableSubMap.toEnd|]  := v0 @boolean;
#L120cb6.   v0:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L120cba.   if v6 != v0 then goto L120cda;
#L120cbe.   v0:= v1;
#L120cc0.   v3.[|java:util:TreeMap$NavigableSubMap.loInclusive|]  := v0 @boolean;
#L120cc4.   v0:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L120cc8.   if v8 != v0 then goto L120cde;
#L120ccc.   v3.[|java:util:TreeMap$NavigableSubMap.hiInclusive|]  := v1 @boolean;
#L120cd0.   return @void ;
#L120cd2.   v0:= v2;
#L120cd4.   goto L120ca4;
#L120cd6.   v0:= v2;
#L120cd8.   goto L120cb2;
#L120cda.   v0:= v2;
#L120cdc.   goto L120cc0;
#L120cde.   v1:= v2;
#L120ce0.   goto L120ccc;

   }
    procedure [|java:util:Set|] [|java:util:TreeMap$NavigableSubMap.entrySet|] ([|java:util:TreeMap$NavigableSubMap|] v1 @type (this)) @owner [|java:util:TreeMap$NavigableSubMap|] @signature [|Ljava/util/TreeMap$NavigableSubMap;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L120cf4.   v0:= new [|java:lang:UnsupportedOperationException|];
#L120cf8.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L120cfe.   throw v0;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$NavigableSubMap.readResolve|] ([|java:util:TreeMap$NavigableSubMap|] v7 @type (this)) @owner [|java:util:TreeMap$NavigableSubMap|] @signature [|Ljava/util/TreeMap$NavigableSubMap;.readResolve:()Ljava/lang/Object;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L120d10.   v0:= v7.[|java:util:TreeMap$NavigableSubMap.fromStart|]   @boolean;
#L120d14.   if v0 == 0 then goto L120d50;
#L120d18.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L120d1c.   v0:= v7.[|java:util:TreeMap$NavigableSubMap.toEnd|]   @boolean;
#L120d20.   if v0 == 0 then goto L120d64;
#L120d24.   v6:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L120d28.   v0:= instanceof @varname v7 @type [|java:util:TreeMap$DescendingSubMap|];
#L120d2c.   if v0 != 0 then goto L120d78;
#L120d30.   v2:= 1  @length 4;
#L120d32.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L120d36.   v1:= v7.[|java:util:TreeMap$NavigableSubMap.m|]   @type object;
#L120d3a.   call temp:=  [|java:lang:Object.getClass|](v1) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L120d40.   v3:= v7.[|java:util:TreeMap$NavigableSubMap.lo|]   @type object;
#L120d44.   v5:= v7.[|java:util:TreeMap$NavigableSubMap.hi|]   @type object;
#L120d48.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L120d4e.   return v0  @type object;
#L120d50.   v0:= v7.[|java:util:TreeMap$NavigableSubMap.loInclusive|]   @boolean;
#L120d54.   if v0 == 0 then goto L120d5e;
#L120d58.   v4:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L120d5c.   goto L120d1c;
#L120d5e.   v4:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L120d62.   goto L120d1c;
#L120d64.   v0:= v7.[|java:util:TreeMap$NavigableSubMap.hiInclusive|]   @boolean;
#L120d68.   if v0 == 0 then goto L120d72;
#L120d6c.   v6:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L120d70.   goto L120d28;
#L120d72.   v6:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L120d76.   goto L120d28;
#L120d78.   v2:= 0  @length 4;
#L120d7a.   goto L120d32;

   }
record [|java:util:TreeMap$AscendingSubMap|]  @type class @AccessFlag   extends [|java:util:TreeMap$NavigableSubMap|] {
   }
      global [|long|] @@[|java:util:TreeMap$AscendingSubMap.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:TreeMap$AscendingSubMap.<init>|] ([|java:util:TreeMap$AscendingSubMap|] v0 @type (this), [|java:util:TreeMap|] v1 @type (object), [|java:lang:Object|] v2 @type (object), [|java:util:TreeMap$Bound|] v3 @type (object), [|java:lang:Object|] v4 @type (object), [|java:util:TreeMap$Bound|] v5 @type (object)) @owner [|java:util:TreeMap$AscendingSubMap|] @signature [|Ljava/util/TreeMap$AscendingSubMap;.<init>:(Ljava/util/TreeMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L120d8c.   call temp:=  [|java:util:TreeMap$NavigableSubMap.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/TreeMap$NavigableSubMap;.<init>:(Ljava/util/TreeMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$NavigableSubMap|] @type direct;
#L120d92.   return @void ;

   }
record [|java:util:TreeMap$Bound|]  @type class @AccessFlag ABSTRACT_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:util:TreeMap$Bound|][] @@[|java:util:TreeMap$Bound.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:util:TreeMap$Bound|] @@[|java:util:TreeMap$Bound.EXCLUSIVE|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:TreeMap$Bound|] @@[|java:util:TreeMap$Bound.INCLUSIVE|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:TreeMap$Bound|] @@[|java:util:TreeMap$Bound.NO_BOUND|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:util:TreeMap$Bound.<clinit>|] () @owner [|java:util:TreeMap$Bound|] @signature [|Ljava/util/TreeMap$Bound;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L120da4.   v4:= 2  @length 4;
#L120da6.   v3:= 1  @length 4;
#L120da8.   v2:= 0  @length 4;
#L120daa.   v0:= new [|java:util:TreeMap$Bound$1|];
#L120dae.   v1:= "INCLUSIVE" @type (object, string);
#L120db2.   call temp:=  [|java:util:TreeMap$Bound$1.<init>|](v0, v1, v2) @signature [|Ljava/util/TreeMap$Bound$1;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Bound$1|] @type direct;
#L120db8.   @@[|java:util:TreeMap$Bound.INCLUSIVE|] := v0  @type object;
#L120dbc.   v0:= new [|java:util:TreeMap$Bound$2|];
#L120dc0.   v1:= "EXCLUSIVE" @type (object, string);
#L120dc4.   call temp:=  [|java:util:TreeMap$Bound$2.<init>|](v0, v1, v3) @signature [|Ljava/util/TreeMap$Bound$2;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Bound$2|] @type direct;
#L120dca.   @@[|java:util:TreeMap$Bound.EXCLUSIVE|] := v0  @type object;
#L120dce.   v0:= new [|java:util:TreeMap$Bound$3|];
#L120dd2.   v1:= "NO_BOUND" @type (object, string);
#L120dd6.   call temp:=  [|java:util:TreeMap$Bound$3.<init>|](v0, v1, v4) @signature [|Ljava/util/TreeMap$Bound$3;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Bound$3|] @type direct;
#L120ddc.   @@[|java:util:TreeMap$Bound.NO_BOUND|] := v0  @type object;
#L120de0.   v0:= 3  @length 4;
#L120de2.   v0:= new [|java:util:TreeMap$Bound|][v0];
#L120de6.   v1:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L120dea.   v0[v2]:= v1  @type object;
#L120dee.   v1:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L120df2.   v0[v3]:= v1  @type object;
#L120df6.   v1:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L120dfa.   v0[v4]:= v1  @type object;
#L120dfe.   @@[|java:util:TreeMap$Bound.$VALUES|] := v0  @type object;
#L120e02.   return @void ;

   }
    procedure [|void|] [|java:util:TreeMap$Bound.<init>|] ([|java:util:TreeMap$Bound|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:util:TreeMap$Bound|] @signature [|Ljava/util/TreeMap$Bound;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L120e14.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L120e1a.   return @void ;

   }
    procedure [|void|] [|java:util:TreeMap$Bound.<init>|] ([|java:util:TreeMap$Bound|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2, [|java:util:TreeMap$1|] v3 @type (object)) @owner [|java:util:TreeMap$Bound|] @signature [|Ljava/util/TreeMap$Bound;.<init>:(Ljava/lang/String;ILjava/util/TreeMap$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L120e2c.   call temp:=  [|java:util:TreeMap$Bound.<init>|](v0, v1, v2) @signature [|Ljava/util/TreeMap$Bound;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Bound|] @type direct;
#L120e32.   return @void ;

   }
    procedure [|java:util:TreeMap$Bound|] [|java:util:TreeMap$Bound.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:util:TreeMap$Bound|] @signature [|Ljava/util/TreeMap$Bound;.valueOf:(Ljava/lang/String;)Ljava/util/TreeMap$Bound;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L120e44.   v0:= new [|java:util:TreeMap$Bound|];
#L120e48.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L120e4e.   v0:= temp  @type object;
#L120e50.   v0:= ([|java:util:TreeMap$Bound|])v0;
#L120e54.   return v0  @type object;

   }
    procedure [|java:util:TreeMap$Bound|][] [|java:util:TreeMap$Bound.values|] () @owner [|java:util:TreeMap$Bound|] @signature [|Ljava/util/TreeMap$Bound;.values:()[Ljava/util/TreeMap$Bound;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L120e68.   v0:= @@[|java:util:TreeMap$Bound.$VALUES|]   @type object;
#L120e6c.   call temp:=  [|java:util:TreeMap$Bound[].clone|](v0) @signature [|[Ljava/util/TreeMap$Bound;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$Bound[]|] @type virtual;
#L120e72.   v0:= temp  @type object;
#L120e74.   v0:= ([|java:util:TreeMap$Bound|][])v0;
#L120e78.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:TreeMap$Bound.leftCap|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:TreeMap$Bound|] @signature [|Ljava/util/TreeMap$Bound;.leftCap:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:String|] [|java:util:TreeMap$Bound.rightCap|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:TreeMap$Bound|] @signature [|Ljava/util/TreeMap$Bound;.rightCap:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:TreeMap$Bound$1|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:TreeMap$Bound|] {
   }
    procedure [|void|] [|java:util:TreeMap$Bound$1.<init>|] ([|java:util:TreeMap$Bound$1|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:TreeMap$Bound$1|] @signature [|Ljava/util/TreeMap$Bound$1;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L120e8c.   v0:= 0  @length 4;
#L120e8e.   call temp:=  [|java:util:TreeMap$Bound.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/TreeMap$Bound;.<init>:(Ljava/lang/String;ILjava/util/TreeMap$1;)V|] @classDescriptor [|java:util:TreeMap$Bound|] @type direct;
#L120e94.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:TreeMap$Bound$1.leftCap|] ([|java:util:TreeMap$Bound$1|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$Bound$1|] @signature [|Ljava/util/TreeMap$Bound$1;.leftCap:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L120ea8.   v0:= new [|java:lang:StringBuilder|];
#L120eac.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L120eb2.   v1:= "[" @type (object, string);
#L120eb6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120ebc.   v0:= temp  @type object;
#L120ebe.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120ec4.   v0:= temp  @type object;
#L120ec6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120ecc.   v0:= temp  @type object;
#L120ece.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:TreeMap$Bound$1.rightCap|] ([|java:util:TreeMap$Bound$1|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$Bound$1|] @signature [|Ljava/util/TreeMap$Bound$1;.rightCap:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L120ee0.   v0:= new [|java:lang:StringBuilder|];
#L120ee4.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L120eea.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120ef0.   v0:= temp  @type object;
#L120ef2.   v1:= "]" @type (object, string);
#L120ef6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120efc.   v0:= temp  @type object;
#L120efe.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120f04.   v0:= temp  @type object;
#L120f06.   return v0  @type object;

   }
record [|java:util:TreeMap$Bound$2|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:TreeMap$Bound|] {
   }
    procedure [|void|] [|java:util:TreeMap$Bound$2.<init>|] ([|java:util:TreeMap$Bound$2|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:TreeMap$Bound$2|] @signature [|Ljava/util/TreeMap$Bound$2;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L120f18.   v0:= 0  @length 4;
#L120f1a.   call temp:=  [|java:util:TreeMap$Bound.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/TreeMap$Bound;.<init>:(Ljava/lang/String;ILjava/util/TreeMap$1;)V|] @classDescriptor [|java:util:TreeMap$Bound|] @type direct;
#L120f20.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:TreeMap$Bound$2.leftCap|] ([|java:util:TreeMap$Bound$2|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$Bound$2|] @signature [|Ljava/util/TreeMap$Bound$2;.leftCap:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L120f34.   v0:= new [|java:lang:StringBuilder|];
#L120f38.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L120f3e.   v1:= "(" @type (object, string);
#L120f42.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120f48.   v0:= temp  @type object;
#L120f4a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120f50.   v0:= temp  @type object;
#L120f52.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120f58.   v0:= temp  @type object;
#L120f5a.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:TreeMap$Bound$2.rightCap|] ([|java:util:TreeMap$Bound$2|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$Bound$2|] @signature [|Ljava/util/TreeMap$Bound$2;.rightCap:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L120f6c.   v0:= new [|java:lang:StringBuilder|];
#L120f70.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L120f76.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120f7c.   v0:= temp  @type object;
#L120f7e.   v1:= ")" @type (object, string);
#L120f82.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120f88.   v0:= temp  @type object;
#L120f8a.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L120f90.   v0:= temp  @type object;
#L120f92.   return v0  @type object;

   }
record [|java:util:TreeMap$Bound$3|]  @type class @AccessFlag FINAL_ENUM  extends [|java:util:TreeMap$Bound|] {
   }
    procedure [|void|] [|java:util:TreeMap$Bound$3.<init>|] ([|java:util:TreeMap$Bound$3|] v1 @type (this), [|java:lang:String|] v2 @type (object), [|int|] v3) @owner [|java:util:TreeMap$Bound$3|] @signature [|Ljava/util/TreeMap$Bound$3;.<init>:(Ljava/lang/String;I)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L120fa4.   v0:= 0  @length 4;
#L120fa6.   call temp:=  [|java:util:TreeMap$Bound.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/TreeMap$Bound;.<init>:(Ljava/lang/String;ILjava/util/TreeMap$1;)V|] @classDescriptor [|java:util:TreeMap$Bound|] @type direct;
#L120fac.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:TreeMap$Bound$3.leftCap|] ([|java:util:TreeMap$Bound$3|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$Bound$3|] @signature [|Ljava/util/TreeMap$Bound$3;.leftCap:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L120fc0.   v0:= "." @type (object, string);
#L120fc4.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:TreeMap$Bound$3.rightCap|] ([|java:util:TreeMap$Bound$3|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$Bound$3|] @signature [|Ljava/util/TreeMap$Bound$3;.rightCap:(Ljava/lang/Object;)Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L120fd8.   v0:= "." @type (object, string);
#L120fdc.   return v0  @type object;

   }
record [|java:util:TreeMap$MapIterator|]  @type class @AccessFlag ABSTRACT extends  [|java:util:Iterator|] {
      [|int|] [|java:util:TreeMap$MapIterator.expectedModCount|]    @AccessFlag PROTECTED;
      [|java:util:TreeMap$Node|] [|java:util:TreeMap$MapIterator.last|]    @AccessFlag PROTECTED;
      [|java:util:TreeMap$Node|] [|java:util:TreeMap$MapIterator.next|]    @AccessFlag PROTECTED;
      [|java:util:TreeMap|] [|java:util:TreeMap$MapIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$MapIterator.<init>|] ([|java:util:TreeMap$MapIterator|] v1 @type (this), [|java:util:TreeMap|] v2 @type (object), [|java:util:TreeMap$Node|] v3 @type (object)) @owner [|java:util:TreeMap$MapIterator|] @signature [|Ljava/util/TreeMap$MapIterator;.<init>:(Ljava/util/TreeMap;Ljava/util/TreeMap$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L120ff0.   v1.[|java:util:TreeMap$MapIterator.this$0|]  := v2 @type object;
#L120ff4.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L120ffa.   v0:= v1.[|java:util:TreeMap$MapIterator.this$0|]   @type object;
#L120ffe.   v0:= v0.[|java:util:TreeMap.modCount|] ;
#L121002.   v1.[|java:util:TreeMap$MapIterator.expectedModCount|]  := v0;
#L121006.   v1.[|java:util:TreeMap$MapIterator.next|]  := v3 @type object;
#L12100a.   return @void ;

   }
    procedure [|boolean|] [|java:util:TreeMap$MapIterator.hasNext|] ([|java:util:TreeMap$MapIterator|] v1 @type (this)) @owner [|java:util:TreeMap$MapIterator|] @signature [|Ljava/util/TreeMap$MapIterator;.hasNext:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12101c.   v0:= v1.[|java:util:TreeMap$MapIterator.next|]   @type object;
#L121020.   if v0 == 0 then goto L121028;
#L121024.   v0:= 1  @length 4;
#L121026.   return v0;
#L121028.   v0:= 0  @length 4;
#L12102a.   goto L121026;

   }
    procedure [|void|] [|java:util:TreeMap$MapIterator.remove|] ([|java:util:TreeMap$MapIterator|] v2 @type (this)) @owner [|java:util:TreeMap$MapIterator|] @signature [|Ljava/util/TreeMap$MapIterator;.remove:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12103c.   v0:= v2.[|java:util:TreeMap$MapIterator.last|]   @type object;
#L121040.   if v0 != 0 then goto L121050;
#L121044.   v0:= new [|java:lang:IllegalStateException|];
#L121048.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L12104e.   throw v0;
#L121050.   v0:= v2.[|java:util:TreeMap$MapIterator.this$0|]   @type object;
#L121054.   v1:= v2.[|java:util:TreeMap$MapIterator.last|]   @type object;
#L121058.   call temp:=  [|java:util:TreeMap.removeInternal|](v0, v1) @signature [|Ljava/util/TreeMap;.removeInternal:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12105e.   v0:= v2.[|java:util:TreeMap$MapIterator.this$0|]   @type object;
#L121062.   v0:= v0.[|java:util:TreeMap.modCount|] ;
#L121066.   v2.[|java:util:TreeMap$MapIterator.expectedModCount|]  := v0;
#L12106a.   v0:= 0  @length 4;
#L12106c.   v2.[|java:util:TreeMap$MapIterator.last|]  := v0 @type object;
#L121070.   return @void ;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$MapIterator.stepBackward|] ([|java:util:TreeMap$MapIterator|] v2 @type (this)) @owner [|java:util:TreeMap$MapIterator|] @signature [|Ljava/util/TreeMap$MapIterator;.stepBackward:()Ljava/util/TreeMap$Node;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L121084.   v0:= v2.[|java:util:TreeMap$MapIterator.next|]   @type object;
#L121088.   if v0 != 0 then goto L121098;
#L12108c.   v0:= new [|java:util:NoSuchElementException|];
#L121090.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L121096.   throw v0;
#L121098.   v0:= v2.[|java:util:TreeMap$MapIterator.this$0|]   @type object;
#L12109c.   v0:= v0.[|java:util:TreeMap.modCount|] ;
#L1210a0.   v1:= v2.[|java:util:TreeMap$MapIterator.expectedModCount|] ;
#L1210a4.   if v0 == v1 then goto L1210b4;
#L1210a8.   v0:= new [|java:util:ConcurrentModificationException|];
#L1210ac.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L1210b2.   throw v0;
#L1210b4.   v0:= v2.[|java:util:TreeMap$MapIterator.next|]   @type object;
#L1210b8.   v2.[|java:util:TreeMap$MapIterator.last|]  := v0 @type object;
#L1210bc.   v0:= v2.[|java:util:TreeMap$MapIterator.next|]   @type object;
#L1210c0.   call temp:=  [|java:util:TreeMap$Node.prev|](v0) @signature [|Ljava/util/TreeMap$Node;.prev:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L1210c6.   v0:= temp  @type object;
#L1210c8.   v2.[|java:util:TreeMap$MapIterator.next|]  := v0 @type object;
#L1210cc.   v0:= v2.[|java:util:TreeMap$MapIterator.last|]   @type object;
#L1210d0.   return v0  @type object;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$MapIterator.stepForward|] ([|java:util:TreeMap$MapIterator|] v2 @type (this)) @owner [|java:util:TreeMap$MapIterator|] @signature [|Ljava/util/TreeMap$MapIterator;.stepForward:()Ljava/util/TreeMap$Node;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L1210e4.   v0:= v2.[|java:util:TreeMap$MapIterator.next|]   @type object;
#L1210e8.   if v0 != 0 then goto L1210f8;
#L1210ec.   v0:= new [|java:util:NoSuchElementException|];
#L1210f0.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L1210f6.   throw v0;
#L1210f8.   v0:= v2.[|java:util:TreeMap$MapIterator.this$0|]   @type object;
#L1210fc.   v0:= v0.[|java:util:TreeMap.modCount|] ;
#L121100.   v1:= v2.[|java:util:TreeMap$MapIterator.expectedModCount|] ;
#L121104.   if v0 == v1 then goto L121114;
#L121108.   v0:= new [|java:util:ConcurrentModificationException|];
#L12110c.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L121112.   throw v0;
#L121114.   v0:= v2.[|java:util:TreeMap$MapIterator.next|]   @type object;
#L121118.   v2.[|java:util:TreeMap$MapIterator.last|]  := v0 @type object;
#L12111c.   v0:= v2.[|java:util:TreeMap$MapIterator.next|]   @type object;
#L121120.   call temp:=  [|java:util:TreeMap$Node.next|](v0) @signature [|Ljava/util/TreeMap$Node;.next:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L121126.   v0:= temp  @type object;
#L121128.   v2.[|java:util:TreeMap$MapIterator.next|]  := v0 @type object;
#L12112c.   v0:= v2.[|java:util:TreeMap$MapIterator.last|]   @type object;
#L121130.   return v0  @type object;

   }
record [|java:util:TreeMap$BoundedMap$BoundedIterator|]  @type class @AccessFlag ABSTRACT  extends [|java:util:TreeMap$MapIterator|] {
      [|java:util:TreeMap$BoundedMap|] [|java:util:TreeMap$BoundedMap$BoundedIterator.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$BoundedMap$BoundedIterator.<init>|] ([|java:util:TreeMap$BoundedMap$BoundedIterator|] v1 @type (this), [|java:util:TreeMap$BoundedMap|] v2 @type (object), [|java:util:TreeMap$Node|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedIterator|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedIterator;.<init>:(Ljava/util/TreeMap$BoundedMap;Ljava/util/TreeMap$Node;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        v0;
      
#L121144.   v1.[|java:util:TreeMap$BoundedMap$BoundedIterator.this$1|]  := v2 @type object;
#L121148.   v0:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L12114c.   call temp:=  [|java:util:TreeMap$MapIterator.<init>|](v1, v0, v3) @signature [|Ljava/util/TreeMap$MapIterator;.<init>:(Ljava/util/TreeMap;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$MapIterator|] @type direct;
#L121152.   return @void ;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$BoundedMap$BoundedIterator.stepBackward|] ([|java:util:TreeMap$BoundedMap$BoundedIterator|] v5 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedIterator|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedIterator;.stepBackward:()Ljava/util/TreeMap$Node;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L121164.   call temp:=  [|java:util:TreeMap$MapIterator.stepBackward|](v5) @signature [|Ljava/util/TreeMap$MapIterator;.stepBackward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$MapIterator|] @type super;
#L12116a.   v0:= temp  @type object;
#L12116c.   v1:= v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.next|]   @type object;
#L121170.   if v1 == 0 then goto L1211a2;
#L121174.   v1:= v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.this$1|]   @type object;
#L121178.   v2:= v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.next|]   @type object;
#L12117c.   v2:= v2.[|java:util:TreeMap$Node.key|]   @type object;
#L121180.   v3:= v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.this$1|]   @type object;
#L121184.   call temp:=  [|java:util:TreeMap$BoundedMap.access$600|](v3) @signature [|Ljava/util/TreeMap$BoundedMap;.access$600:(Ljava/util/TreeMap$BoundedMap;)Ljava/util/TreeMap$Bound;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L12118a.   v3:= temp  @type object;
#L12118c.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121190.   call temp:=  [|java:util:TreeMap$BoundedMap.access$500|](v1, v2, v3, v4) @signature [|Ljava/util/TreeMap$BoundedMap;.access$500:(Ljava/util/TreeMap$BoundedMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121196.   v1:= temp;
#L121198.   if v1 != 0 then goto L1211a2;
#L12119c.   v1:= 0  @length 4;
#L12119e.   v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.next|]  := v1 @type object;
#L1211a2.   return v0  @type object;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$BoundedMap$BoundedIterator.stepForward|] ([|java:util:TreeMap$BoundedMap$BoundedIterator|] v5 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedIterator|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedIterator;.stepForward:()Ljava/util/TreeMap$Node;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1211b4.   call temp:=  [|java:util:TreeMap$MapIterator.stepForward|](v5) @signature [|Ljava/util/TreeMap$MapIterator;.stepForward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$MapIterator|] @type super;
#L1211ba.   v0:= temp  @type object;
#L1211bc.   v1:= v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.next|]   @type object;
#L1211c0.   if v1 == 0 then goto L1211f2;
#L1211c4.   v1:= v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.this$1|]   @type object;
#L1211c8.   v2:= v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.next|]   @type object;
#L1211cc.   v2:= v2.[|java:util:TreeMap$Node.key|]   @type object;
#L1211d0.   v3:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L1211d4.   v4:= v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.this$1|]   @type object;
#L1211d8.   call temp:=  [|java:util:TreeMap$BoundedMap.access$400|](v4) @signature [|Ljava/util/TreeMap$BoundedMap;.access$400:(Ljava/util/TreeMap$BoundedMap;)Ljava/util/TreeMap$Bound;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L1211de.   v4:= temp  @type object;
#L1211e0.   call temp:=  [|java:util:TreeMap$BoundedMap.access$500|](v1, v2, v3, v4) @signature [|Ljava/util/TreeMap$BoundedMap;.access$500:(Ljava/util/TreeMap$BoundedMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L1211e6.   v1:= temp;
#L1211e8.   if v1 != 0 then goto L1211f2;
#L1211ec.   v1:= 0  @length 4;
#L1211ee.   v5.[|java:util:TreeMap$BoundedMap$BoundedIterator.next|]  := v1 @type object;
#L1211f2.   return v0  @type object;

   }
record [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|]  @type class @AccessFlag   extends [|java:util:TreeMap$BoundedMap$BoundedIterator|] {
      [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.this$2|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.<init>|] ([|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] v1 @type (this), [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] v2 @type (object), [|java:util:TreeMap$Node|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet$1;.<init>:(Ljava/util/TreeMap$BoundedMap$BoundedEntrySet;Ljava/util/TreeMap$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L121204.   v1.[|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.this$2|]  := v2 @type object;
#L121208.   v0:= v2.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]   @type object;
#L12120c.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedIterator.<init>|](v1, v0, v3) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedIterator;.<init>:(Ljava/util/TreeMap$BoundedMap;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedIterator|] @type direct;
#L121212.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.next|] ([|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet$1;.next:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L121224.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.next|](v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet$1;.next:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] @type virtual;
#L12122a.   v0:= temp  @type object;
#L12122c.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.next|] ([|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet$1;.next:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121240.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.this$2|]   @type object;
#L121244.   v0:= v0.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]   @type object;
#L121248.   call temp:=  [|java:util:TreeMap$BoundedMap.access$800|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.access$800:(Ljava/util/TreeMap$BoundedMap;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L12124e.   v0:= temp;
#L121250.   if v0 == 0 then goto L12125e;
#L121254.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.stepForward|](v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet$1;.stepForward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] @type virtual;
#L12125a.   v0:= temp  @type object;
#L12125c.   return v0  @type object;
#L12125e.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.stepBackward|](v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet$1;.stepBackward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] @type virtual;
#L121264.   v0:= temp  @type object;
#L121266.   goto L12125c;

   }
record [|java:util:TreeMap$BoundedMap$BoundedEntrySet|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractSet|] {
      [|java:util:TreeMap$BoundedMap|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet.<init>|] ([|java:util:TreeMap$BoundedMap$BoundedEntrySet|] v0 @type (this), [|java:util:TreeMap$BoundedMap|] v1 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet;.<init>:(Ljava/util/TreeMap$BoundedMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L121278.   v0.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]  := v1 @type object;
#L12127c.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L121282.   return @void ;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet.contains|] ([|java:util:TreeMap$BoundedMap$BoundedEntrySet|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L121294.   v1:= 0  @length 4;
#L121296.   v2:= instanceof @varname v5 @type [|java:util:Map$Entry|];
#L12129a.   if v2 != 0 then goto L1212a0;
#L12129e.   return v1;
#L1212a0.   v0:= v5  @type object;
#L1212a2.   v0:= ([|java:util:Map$Entry|])v0;
#L1212a6.   v2:= v4.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]   @type object;
#L1212aa.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L1212b0.   v3:= temp  @type object;
#L1212b2.   call temp:=  [|java:util:TreeMap$BoundedMap.access$900|](v2, v3) @signature [|Ljava/util/TreeMap$BoundedMap;.access$900:(Ljava/util/TreeMap$BoundedMap;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L1212b8.   v2:= temp;
#L1212ba.   if v2 == 0 then goto L12129e;
#L1212be.   v2:= v4.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]   @type object;
#L1212c2.   v2:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L1212c6.   call temp:=  [|java:util:TreeMap.findByEntry|](v2, v0) @signature [|Ljava/util/TreeMap;.findByEntry:(Ljava/util/Map$Entry;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1212cc.   v2:= temp  @type object;
#L1212ce.   if v2 == 0 then goto L12129e;
#L1212d2.   v1:= 1  @length 4;
#L1212d4.   goto L12129e;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet.isEmpty|] ([|java:util:TreeMap$BoundedMap$BoundedEntrySet|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1212e8.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]   @type object;
#L1212ec.   call temp:=  [|java:util:TreeMap$BoundedMap.isEmpty|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.isEmpty:()Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1212f2.   v0:= temp;
#L1212f4.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet.iterator|] ([|java:util:TreeMap$BoundedMap$BoundedEntrySet|] v3 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L121308.   v0:= new [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|];
#L12130c.   v1:= v3.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]   @type object;
#L121310.   v2:= 1  @length 4;
#L121312.   call temp:=  [|java:util:TreeMap$BoundedMap.access$700|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.access$700:(Ljava/util/TreeMap$BoundedMap;Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121318.   v1:= temp  @type object;
#L12131a.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1.<init>|](v0, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet$1;.<init>:(Ljava/util/TreeMap$BoundedMap$BoundedEntrySet;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedEntrySet$1|] @type direct;
#L121320.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet.remove|] ([|java:util:TreeMap$BoundedMap$BoundedEntrySet|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L121334.   v1:= 0  @length 4;
#L121336.   v2:= instanceof @varname v5 @type [|java:util:Map$Entry|];
#L12133a.   if v2 != 0 then goto L121340;
#L12133e.   return v1;
#L121340.   v0:= v5  @type object;
#L121342.   v0:= ([|java:util:Map$Entry|])v0;
#L121346.   v2:= v4.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]   @type object;
#L12134a.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L121350.   v3:= temp  @type object;
#L121352.   call temp:=  [|java:util:TreeMap$BoundedMap.access$900|](v2, v3) @signature [|Ljava/util/TreeMap$BoundedMap;.access$900:(Ljava/util/TreeMap$BoundedMap;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121358.   v2:= temp;
#L12135a.   if v2 == 0 then goto L12133e;
#L12135e.   v2:= v4.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]   @type object;
#L121362.   v2:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121366.   call temp:=  [|java:util:TreeMap.entrySet|](v2) @signature [|Ljava/util/TreeMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12136c.   v2:= temp  @type object;
#L12136e.   call temp:=  [|java:util:Set.remove|](v2, v0) @signature [|Ljava/util/Set;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Set|] @type interface;
#L121374.   v2:= temp;
#L121376.   if v2 == 0 then goto L12133e;
#L12137a.   v1:= 1  @length 4;
#L12137c.   goto L12133e;

   }
    procedure [|int|] [|java:util:TreeMap$BoundedMap$BoundedEntrySet.size|] ([|java:util:TreeMap$BoundedMap$BoundedEntrySet|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121390.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedEntrySet.this$1|]   @type object;
#L121394.   call temp:=  [|java:util:TreeMap$BoundedMap.size|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.size:()I|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L12139a.   v0:= temp;
#L12139c.   return v0;

   }
record [|java:util:TreeMap$BoundedMap$BoundedKeySet$1|]  @type class @AccessFlag   extends [|java:util:TreeMap$BoundedMap$BoundedIterator|] {
      [|java:util:TreeMap$BoundedMap$BoundedKeySet|] [|java:util:TreeMap$BoundedMap$BoundedKeySet$1.this$2|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$BoundedMap$BoundedKeySet$1.<init>|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet$1|] v1 @type (this), [|java:util:TreeMap$BoundedMap$BoundedKeySet|] v2 @type (object), [|java:util:TreeMap$Node|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet$1|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$1;.<init>:(Ljava/util/TreeMap$BoundedMap$BoundedKeySet;Ljava/util/TreeMap$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L1213b0.   v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet$1.this$2|]  := v2 @type object;
#L1213b4.   v0:= v2.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1213b8.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedIterator.<init>|](v1, v0, v3) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedIterator;.<init>:(Ljava/util/TreeMap$BoundedMap;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedIterator|] @type direct;
#L1213be.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet$1.next|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet$1|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet$1|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$1;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1213d0.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet$1.this$2|]   @type object;
#L1213d4.   v0:= v0.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1213d8.   call temp:=  [|java:util:TreeMap$BoundedMap.access$800|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.access$800:(Ljava/util/TreeMap$BoundedMap;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L1213de.   v0:= temp;
#L1213e0.   if v0 == 0 then goto L1213f2;
#L1213e4.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedKeySet$1.stepForward|](v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$1;.stepForward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedKeySet$1|] @type virtual;
#L1213ea.   v0:= temp  @type object;
#L1213ec.   v0:= v0.[|java:util:TreeMap$Node.key|]   @type object;
#L1213f0.   return v0  @type object;
#L1213f2.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedKeySet$1.stepBackward|](v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$1;.stepBackward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedKeySet$1|] @type virtual;
#L1213f8.   v0:= temp  @type object;
#L1213fa.   goto L1213ec;

   }
record [|java:util:TreeMap$BoundedMap$BoundedKeySet$2|]  @type class @AccessFlag   extends [|java:util:TreeMap$BoundedMap$BoundedIterator|] {
      [|java:util:TreeMap$BoundedMap$BoundedKeySet|] [|java:util:TreeMap$BoundedMap$BoundedKeySet$2.this$2|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$BoundedMap$BoundedKeySet$2.<init>|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet$2|] v1 @type (this), [|java:util:TreeMap$BoundedMap$BoundedKeySet|] v2 @type (object), [|java:util:TreeMap$Node|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet$2|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$2;.<init>:(Ljava/util/TreeMap$BoundedMap$BoundedKeySet;Ljava/util/TreeMap$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L12140c.   v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet$2.this$2|]  := v2 @type object;
#L121410.   v0:= v2.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121414.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedIterator.<init>|](v1, v0, v3) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedIterator;.<init>:(Ljava/util/TreeMap$BoundedMap;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedIterator|] @type direct;
#L12141a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet$2.next|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet$2|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet$2|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$2;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12142c.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet$2.this$2|]   @type object;
#L121430.   v0:= v0.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121434.   call temp:=  [|java:util:TreeMap$BoundedMap.access$800|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.access$800:(Ljava/util/TreeMap$BoundedMap;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L12143a.   v0:= temp;
#L12143c.   if v0 == 0 then goto L12144e;
#L121440.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedKeySet$2.stepBackward|](v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$2;.stepBackward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedKeySet$2|] @type virtual;
#L121446.   v0:= temp  @type object;
#L121448.   v0:= v0.[|java:util:TreeMap$Node.key|]   @type object;
#L12144c.   return v0  @type object;
#L12144e.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedKeySet$2.stepForward|](v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$2;.stepForward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedKeySet$2|] @type virtual;
#L121454.   v0:= temp  @type object;
#L121456.   goto L121448;

   }
record [|java:util:TreeMap$BoundedMap$BoundedKeySet|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractSet|], [|java:util:NavigableSet|] {
      [|java:util:TreeMap$BoundedMap|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.<init>|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v0 @type (this), [|java:util:TreeMap$BoundedMap|] v1 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.<init>:(Ljava/util/TreeMap$BoundedMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L121468.   v0.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]  := v1 @type object;
#L12146c.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L121472.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.ceiling|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.ceiling:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121484.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121488.   call temp:=  [|java:util:TreeMap$BoundedMap.ceilingKey|](v0, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L12148e.   v0:= temp  @type object;
#L121490.   return v0  @type object;

   }
    procedure [|java:util:Comparator|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.comparator|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1214a4.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1214a8.   call temp:=  [|java:util:TreeMap$BoundedMap.comparator|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1214ae.   v0:= temp  @type object;
#L1214b0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.contains|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1214c4.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1214c8.   call temp:=  [|java:util:TreeMap$BoundedMap.access$900|](v0, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.access$900:(Ljava/util/TreeMap$BoundedMap;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L1214ce.   v0:= temp;
#L1214d0.   if v0 == 0 then goto L1214ec;
#L1214d4.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1214d8.   v0:= v0.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L1214dc.   call temp:=  [|java:util:TreeMap.findByObject|](v0, v2) @signature [|Ljava/util/TreeMap;.findByObject:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1214e2.   v0:= temp  @type object;
#L1214e4.   if v0 == 0 then goto L1214ec;
#L1214e8.   v0:= 1  @length 4;
#L1214ea.   return v0;
#L1214ec.   v0:= 0  @length 4;
#L1214ee.   goto L1214ea;

   }
    procedure [|java:util:Iterator|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.descendingIterator|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v3 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.descendingIterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L121500.   v0:= new [|java:util:TreeMap$BoundedMap$BoundedKeySet$2|];
#L121504.   v1:= v3.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121508.   v2:= 0  @length 4;
#L12150a.   call temp:=  [|java:util:TreeMap$BoundedMap.access$700|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.access$700:(Ljava/util/TreeMap$BoundedMap;Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121510.   v1:= temp  @type object;
#L121512.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedKeySet$2.<init>|](v0, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$2;.<init>:(Ljava/util/TreeMap$BoundedMap$BoundedKeySet;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedKeySet$2|] @type direct;
#L121518.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.descendingSet|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v7 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.descendingSet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12152c.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L121530.   v1:= v7.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121534.   v1:= v1.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121538.   v2:= v7.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L12153c.   call temp:=  [|java:util:TreeMap$BoundedMap.access$800|](v2) @signature [|Ljava/util/TreeMap$BoundedMap;.access$800:(Ljava/util/TreeMap$BoundedMap;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121542.   v2:= temp;
#L121544.   if v2 != 0 then goto L12158a;
#L121548.   v2:= 1  @length 4;
#L12154a.   v3:= v7.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L12154e.   call temp:=  [|java:util:TreeMap$BoundedMap.access$1000|](v3) @signature [|Ljava/util/TreeMap$BoundedMap;.access$1000:(Ljava/util/TreeMap$BoundedMap;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121554.   v3:= temp  @type object;
#L121556.   v4:= v7.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L12155a.   call temp:=  [|java:util:TreeMap$BoundedMap.access$600|](v4) @signature [|Ljava/util/TreeMap$BoundedMap;.access$600:(Ljava/util/TreeMap$BoundedMap;)Ljava/util/TreeMap$Bound;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121560.   v4:= temp  @type object;
#L121562.   v5:= v7.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121566.   call temp:=  [|java:util:TreeMap$BoundedMap.access$1100|](v5) @signature [|Ljava/util/TreeMap$BoundedMap;.access$1100:(Ljava/util/TreeMap$BoundedMap;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L12156c.   v5:= temp  @type object;
#L12156e.   v6:= v7.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121572.   call temp:=  [|java:util:TreeMap$BoundedMap.access$400|](v6) @signature [|Ljava/util/TreeMap$BoundedMap;.access$400:(Ljava/util/TreeMap$BoundedMap;)Ljava/util/TreeMap$Bound;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121578.   v6:= temp  @type object;
#L12157a.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121580.   call temp:=  [|java:util:TreeMap$BoundedMap.navigableKeySet|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L121586.   v0:= temp  @type object;
#L121588.   return v0  @type object;
#L12158a.   v2:= 0  @length 4;
#L12158c.   goto L12154a;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.first|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.first:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1215a0.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1215a4.   call temp:=  [|java:util:TreeMap$BoundedMap.firstKey|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.firstKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1215aa.   v0:= temp  @type object;
#L1215ac.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.floor|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.floor:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1215c0.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1215c4.   call temp:=  [|java:util:TreeMap$BoundedMap.floorKey|](v0, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1215ca.   v0:= temp  @type object;
#L1215cc.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.headSet|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1215e0.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1215e4.   call temp:=  [|java:util:TreeMap$BoundedMap.headMap|](v0, v2, v3) @signature [|Ljava/util/TreeMap$BoundedMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1215ea.   v0:= temp  @type object;
#L1215ec.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1215f2.   v0:= temp  @type object;
#L1215f4.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.headSet|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.headSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121608.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L12160c.   call temp:=  [|java:util:TreeMap$BoundedMap.headMap|](v0, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.headMap:(Ljava/lang/Object;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L121612.   v0:= temp  @type object;
#L121614.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L12161a.   v0:= temp  @type object;
#L12161c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.higher|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.higher:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121630.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121634.   call temp:=  [|java:util:TreeMap$BoundedMap.higherKey|](v0, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L12163a.   v0:= temp  @type object;
#L12163c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.isEmpty|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121650.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121654.   call temp:=  [|java:util:TreeMap$BoundedMap.isEmpty|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.isEmpty:()Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L12165a.   v0:= temp;
#L12165c.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.iterator|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v3 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L121670.   v0:= new [|java:util:TreeMap$BoundedMap$BoundedKeySet$1|];
#L121674.   v1:= v3.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121678.   v2:= 1  @length 4;
#L12167a.   call temp:=  [|java:util:TreeMap$BoundedMap.access$700|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.access$700:(Ljava/util/TreeMap$BoundedMap;Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121680.   v1:= temp  @type object;
#L121682.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedKeySet$1.<init>|](v0, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet$1;.<init>:(Ljava/util/TreeMap$BoundedMap$BoundedKeySet;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedKeySet$1|] @type direct;
#L121688.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.last|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.last:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12169c.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1216a0.   call temp:=  [|java:util:TreeMap$BoundedMap.lastKey|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.lastKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1216a6.   v0:= temp  @type object;
#L1216a8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.lower|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.lower:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1216bc.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1216c0.   call temp:=  [|java:util:TreeMap$BoundedMap.lowerKey|](v0, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1216c6.   v0:= temp  @type object;
#L1216c8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.pollFirst|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.pollFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1216dc.   v1:= v2.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1216e0.   call temp:=  [|java:util:TreeMap$BoundedMap.pollFirstEntry|](v1) @signature [|Ljava/util/TreeMap$BoundedMap;.pollFirstEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1216e6.   v0:= temp  @type object;
#L1216e8.   if v0 == 0 then goto L1216f6;
#L1216ec.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L1216f2.   v1:= temp  @type object;
#L1216f4.   return v1  @type object;
#L1216f6.   v1:= 0  @length 4;
#L1216f8.   goto L1216f4;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.pollLast|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.pollLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12170c.   v1:= v2.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121710.   call temp:=  [|java:util:TreeMap$BoundedMap.pollLastEntry|](v1) @signature [|Ljava/util/TreeMap$BoundedMap;.pollLastEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L121716.   v0:= temp  @type object;
#L121718.   if v0 == 0 then goto L121726;
#L12171c.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L121722.   v1:= temp  @type object;
#L121724.   return v1  @type object;
#L121726.   v1:= 0  @length 4;
#L121728.   goto L121724;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.remove|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12173c.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121740.   call temp:=  [|java:util:TreeMap$BoundedMap.access$900|](v0, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.access$900:(Ljava/util/TreeMap$BoundedMap;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type static;
#L121746.   v0:= temp;
#L121748.   if v0 == 0 then goto L121764;
#L12174c.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121750.   v0:= v0.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121754.   call temp:=  [|java:util:TreeMap.removeInternalByKey|](v0, v2) @signature [|Ljava/util/TreeMap;.removeInternalByKey:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12175a.   v0:= temp  @type object;
#L12175c.   if v0 == 0 then goto L121764;
#L121760.   v0:= 1  @length 4;
#L121762.   return v0;
#L121764.   v0:= 0  @length 4;
#L121766.   goto L121762;

   }
    procedure [|int|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.size|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121778.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L12177c.   call temp:=  [|java:util:TreeMap$BoundedMap.size|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.size:()I|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L121782.   v0:= temp;
#L121784.   return v0;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.subSet|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3, [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121798.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L12179c.   call temp:=  [|java:util:TreeMap$BoundedMap.subMap|](v0, v2, v3, v4, v5) @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1217a2.   v0:= temp  @type object;
#L1217a4.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1217aa.   v0:= temp  @type object;
#L1217ac.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.subSet|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1217c0.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1217c4.   call temp:=  [|java:util:TreeMap$BoundedMap.subMap|](v0, v2, v3) @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1217ca.   v0:= temp  @type object;
#L1217cc.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1217d2.   v0:= temp  @type object;
#L1217d4.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.tailSet|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1217e8.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L1217ec.   call temp:=  [|java:util:TreeMap$BoundedMap.tailMap|](v0, v2, v3) @signature [|Ljava/util/TreeMap$BoundedMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1217f2.   v0:= temp  @type object;
#L1217f4.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1217fa.   v0:= temp  @type object;
#L1217fc.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:TreeMap$BoundedMap$BoundedKeySet.tailSet|] ([|java:util:TreeMap$BoundedMap$BoundedKeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.tailSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121810.   v0:= v1.[|java:util:TreeMap$BoundedMap$BoundedKeySet.this$1|]   @type object;
#L121814.   call temp:=  [|java:util:TreeMap$BoundedMap.tailMap|](v0, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.tailMap:(Ljava/lang/Object;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L12181a.   v0:= temp  @type object;
#L12181c.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L121822.   v0:= temp  @type object;
#L121824.   return v0  @type object;

   }
record [|java:util:TreeMap$BoundedMap|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractMap|], [|java:util:NavigableMap|], [|java:io:Serializable|] {
      [|boolean|] [|java:util:TreeMap$BoundedMap.ascending|]    @AccessFlag PRIVATE_FINAL_TRANSIENT;
      [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] [|java:util:TreeMap$BoundedMap.entrySet|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.from|]    @AccessFlag PRIVATE_FINAL_TRANSIENT;
      [|java:util:TreeMap$Bound|] [|java:util:TreeMap$BoundedMap.fromBound|]    @AccessFlag PRIVATE_FINAL_TRANSIENT;
      [|java:util:TreeMap$BoundedMap$BoundedKeySet|] [|java:util:TreeMap$BoundedMap.keySet|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:TreeMap|] [|java:util:TreeMap$BoundedMap.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.to|]    @AccessFlag PRIVATE_FINAL_TRANSIENT;
      [|java:util:TreeMap$Bound|] [|java:util:TreeMap$BoundedMap.toBound|]    @AccessFlag PRIVATE_FINAL_TRANSIENT;
   }
    procedure [|void|] [|java:util:TreeMap$BoundedMap.<init>|] ([|java:util:TreeMap$BoundedMap|] v3 @type (this), [|java:util:TreeMap|] v4 @type (object), [|boolean|] v5, [|java:lang:Object|] v6 @type (object), [|java:util:TreeMap$Bound|] v7 @type (object), [|java:lang:Object|] v8 @type (object), [|java:util:TreeMap$Bound|] v9 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L121838.   v3.[|java:util:TreeMap$BoundedMap.this$0|]  := v4 @type object;
#L12183c.   call temp:=  [|java:util:AbstractMap.<init>|](v3) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L121842.   v0:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121846.   if v7 == v0 then goto L12189c;
#L12184a.   v0:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L12184e.   if v9 == v0 then goto L12189c;
#L121852.   v0:= v4.[|java:util:TreeMap.comparator|]   @type object;
#L121856.   call temp:=  [|java:util:Comparator.compare|](v0, v6, v8) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L12185c.   v0:= temp;
#L12185e.   if v0 <= 0 then goto L1218ae;
#L121862.   v0:= new [|java:lang:IllegalArgumentException|];
#L121866.   v1:= new [|java:lang:StringBuilder|];
#L12186a.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L121870.   call temp:=  [|java:lang:StringBuilder.append|](v1, v6) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L121876.   v1:= temp  @type object;
#L121878.   v2:= " > " @type (object, string);
#L12187c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L121882.   v1:= temp  @type object;
#L121884.   call temp:=  [|java:lang:StringBuilder.append|](v1, v8) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12188a.   v1:= temp  @type object;
#L12188c.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L121892.   v1:= temp  @type object;
#L121894.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12189a.   throw v0;
#L12189c.   v0:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L1218a0.   if v7 == v0 then goto L1218c4;
#L1218a4.   v0:= v4.[|java:util:TreeMap.comparator|]   @type object;
#L1218a8.   call temp:=  [|java:util:Comparator.compare|](v0, v6, v6) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L1218ae.   v3.[|java:util:TreeMap$BoundedMap.ascending|]  := v5 @boolean;
#L1218b2.   v3.[|java:util:TreeMap$BoundedMap.from|]  := v6 @type object;
#L1218b6.   v3.[|java:util:TreeMap$BoundedMap.fromBound|]  := v7 @type object;
#L1218ba.   v3.[|java:util:TreeMap$BoundedMap.to|]  := v8 @type object;
#L1218be.   v3.[|java:util:TreeMap$BoundedMap.toBound|]  := v9 @type object;
#L1218c2.   return @void ;
#L1218c4.   v0:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L1218c8.   if v9 == v0 then goto L1218ae;
#L1218cc.   v0:= v4.[|java:util:TreeMap.comparator|]   @type object;
#L1218d0.   call temp:=  [|java:util:Comparator.compare|](v0, v8, v8) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L1218d6.   goto L1218ae;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.access$1000|] ([|java:util:TreeMap$BoundedMap|] v1 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.access$1000:(Ljava/util/TreeMap$BoundedMap;)Ljava/lang/Object;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L1218e8.   v0:= v1.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L1218ec.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.access$1100|] ([|java:util:TreeMap$BoundedMap|] v1 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.access$1100:(Ljava/util/TreeMap$BoundedMap;)Ljava/lang/Object;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L121900.   v0:= v1.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121904.   return v0  @type object;

   }
    procedure [|java:util:TreeMap$Bound|] [|java:util:TreeMap$BoundedMap.access$400|] ([|java:util:TreeMap$BoundedMap|] v1 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.access$400:(Ljava/util/TreeMap$BoundedMap;)Ljava/util/TreeMap$Bound;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L121918.   v0:= v1.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L12191c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap.access$500|] ([|java:util:TreeMap$BoundedMap|] v1 @type (object), [|java:lang:Object|] v2 @type (object), [|java:util:TreeMap$Bound|] v3 @type (object), [|java:util:TreeMap$Bound|] v4 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.access$500:(Ljava/util/TreeMap$BoundedMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L121930.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v1, v2, v3, v4) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121936.   v0:= temp;
#L121938.   return v0;

   }
    procedure [|java:util:TreeMap$Bound|] [|java:util:TreeMap$BoundedMap.access$600|] ([|java:util:TreeMap$BoundedMap|] v1 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.access$600:(Ljava/util/TreeMap$BoundedMap;)Ljava/util/TreeMap$Bound;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12194c.   v0:= v1.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121950.   return v0  @type object;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$BoundedMap.access$700|] ([|java:util:TreeMap$BoundedMap|] v1 @type (object), [|boolean|] v2) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.access$700:(Ljava/util/TreeMap$BoundedMap;Z)Ljava/util/TreeMap$Node;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L121964.   call temp:=  [|java:util:TreeMap$BoundedMap.endpoint|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.endpoint:(Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L12196a.   v0:= temp  @type object;
#L12196c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap.access$800|] ([|java:util:TreeMap$BoundedMap|] v1 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.access$800:(Ljava/util/TreeMap$BoundedMap;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L121980.   v0:= v1.[|java:util:TreeMap$BoundedMap.ascending|]   @boolean;
#L121984.   return v0;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap.access$900|] ([|java:util:TreeMap$BoundedMap|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.access$900:(Ljava/util/TreeMap$BoundedMap;Ljava/lang/Object;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L121998.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L12199e.   v0:= temp;
#L1219a0.   return v0;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$BoundedMap.bound|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this), [|java:util:TreeMap$Node|] v2 @type (object), [|java:util:TreeMap$Bound|] v3 @type (object), [|java:util:TreeMap$Bound|] v4 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.bound:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Ljava/util/TreeMap$Node;|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1219b4.   if v2 == 0 then goto L1219ce;
#L1219b8.   call temp:=  [|java:util:TreeMap$Node.getKey|](v2) @signature [|Ljava/util/TreeMap$Node;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L1219be.   v0:= temp  @type object;
#L1219c0.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v1, v0, v3, v4) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L1219c6.   v0:= temp;
#L1219c8.   if v0 == 0 then goto L1219ce;
#L1219cc.   return v2  @type object;
#L1219ce.   v2:= 0  @length 4;
#L1219d0.   goto L1219cc;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$BoundedMap.endpoint|] ([|java:util:TreeMap$BoundedMap|] v4 @type (this), [|boolean|] v5) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.endpoint:(Z)Ljava/util/TreeMap$Node;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1219e4.   v0:= 0  @length 4;
#L1219e6.   v1:= v4.[|java:util:TreeMap$BoundedMap.ascending|]   @boolean;
#L1219ea.   if v1 != v5 then goto L121a70;
#L1219ee.   v1:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Bound|]   @type object;
#L1219f2.   v2:= v4.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L1219f6.   call temp:=  [|java:util:TreeMap$Bound.ordinal|](v2) @signature [|Ljava/util/TreeMap$Bound;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Bound|] @type virtual;
#L1219fc.   v2:= temp;
#L1219fe.   v1:= v1[v2];
#L121a02.   goto L121af4;
#L121a08.   v1:= new [|java:lang:AssertionError|];
#L121a0c.   call temp:=  [|java:lang:AssertionError.<init>|](v1) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L121a12.   throw v1;
#L121a14.   v1:= v4.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121a18.   v1:= v1.[|java:util:TreeMap.root|]   @type object;
#L121a1c.   if v1 != 0 then goto L121a32;
#L121a20.   v1:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121a24.   v2:= v4.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121a28.   call temp:=  [|java:util:TreeMap$BoundedMap.bound|](v4, v0, v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.bound:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121a2e.   v1:= temp  @type object;
#L121a30.   return v1  @type object;
#L121a32.   v1:= v4.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121a36.   v1:= v1.[|java:util:TreeMap.root|]   @type object;
#L121a3a.   call temp:=  [|java:util:TreeMap$Node.first|](v1) @signature [|Ljava/util/TreeMap$Node;.first:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L121a40.   v0:= temp  @type object;
#L121a42.   goto L121a20;
#L121a44.   v1:= v4.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121a48.   v2:= v4.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121a4c.   v3:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L121a50.   call temp:=  [|java:util:TreeMap.find|](v1, v2, v3) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L121a56.   v0:= temp  @type object;
#L121a58.   goto L121a20;
#L121a5a.   v1:= v4.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121a5e.   v2:= v4.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121a62.   v3:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L121a66.   call temp:=  [|java:util:TreeMap.find|](v1, v2, v3) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L121a6c.   v0:= temp  @type object;
#L121a6e.   goto L121a20;
#L121a70.   v1:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Bound|]   @type object;
#L121a74.   v2:= v4.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121a78.   call temp:=  [|java:util:TreeMap$Bound.ordinal|](v2) @signature [|Ljava/util/TreeMap$Bound;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Bound|] @type virtual;
#L121a7e.   v2:= temp;
#L121a80.   v1:= v1[v2];
#L121a84.   goto L121b08;
#L121a8a.   v1:= new [|java:lang:AssertionError|];
#L121a8e.   call temp:=  [|java:lang:AssertionError.<init>|](v1) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L121a94.   throw v1;
#L121a96.   v1:= v4.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121a9a.   v1:= v1.[|java:util:TreeMap.root|]   @type object;
#L121a9e.   if v1 != 0 then goto L121ab4;
#L121aa2.   v1:= v4.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121aa6.   v2:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121aaa.   call temp:=  [|java:util:TreeMap$BoundedMap.bound|](v4, v0, v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.bound:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121ab0.   v1:= temp  @type object;
#L121ab2.   goto L121a30;
#L121ab4.   v1:= v4.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121ab8.   v1:= v1.[|java:util:TreeMap.root|]   @type object;
#L121abc.   call temp:=  [|java:util:TreeMap$Node.last|](v1) @signature [|Ljava/util/TreeMap$Node;.last:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L121ac2.   v0:= temp  @type object;
#L121ac4.   goto L121aa2;
#L121ac6.   v1:= v4.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121aca.   v2:= v4.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121ace.   v3:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L121ad2.   call temp:=  [|java:util:TreeMap.find|](v1, v2, v3) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L121ad8.   v0:= temp  @type object;
#L121ada.   goto L121aa2;
#L121adc.   v1:= v4.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121ae0.   v2:= v4.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121ae4.   v3:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L121ae8.   call temp:=  [|java:util:TreeMap.find|](v1, v2, v3) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L121aee.   v0:= temp  @type object;
#L121af0.   goto L121aa2;
#L121af2.   
#L121af4.   switch  v1
                 | 1 => goto L121a14
                 | 2 => goto L121a44
                 | 3 => goto L121a5a
                 | => goto L121a08;
#L121b08.   switch  v1
                 | 1 => goto L121a96
                 | 2 => goto L121ac6
                 | 3 => goto L121adc
                 | => goto L121a8a;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap.findBounded|] ([|java:util:TreeMap$BoundedMap|] v5 @type (this), [|java:lang:Object|] v6 @type (object), [|java:util:TreeMap$Relation|] v7 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.findBounded:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/Map$Entry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L121b2c.   v3:= v5.[|java:util:TreeMap$BoundedMap.ascending|]   @boolean;
#L121b30.   call temp:=  [|java:util:TreeMap$Relation.forOrder|](v7, v3) @signature [|Ljava/util/TreeMap$Relation;.forOrder:(Z)Ljava/util/TreeMap$Relation;|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L121b36.   v7:= temp  @type object;
#L121b38.   v1:= v5.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121b3c.   v2:= v5.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121b40.   v3:= v5.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121b44.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121b48.   if v3 == v4 then goto L121b8c;
#L121b4c.   v3:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L121b50.   if v7 == v3 then goto L121b5c;
#L121b54.   v3:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L121b58.   if v7 != v3 then goto L121b8c;
#L121b5c.   v3:= v5.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121b60.   v3:= v3.[|java:util:TreeMap.comparator|]   @type object;
#L121b64.   v4:= v5.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121b68.   call temp:=  [|java:util:Comparator.compare|](v3, v4, v6) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L121b6e.   v0:= temp;
#L121b70.   if v0 > 0 then goto L121b88;
#L121b74.   v6:= v5.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121b78.   v3:= v5.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121b7c.   v4:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L121b80.   if v3 != v4 then goto L121bee;
#L121b84.   v7:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L121b88.   v2:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121b8c.   v3:= v5.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121b90.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121b94.   if v3 == v4 then goto L121bd8;
#L121b98.   v3:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L121b9c.   if v7 == v3 then goto L121ba8;
#L121ba0.   v3:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L121ba4.   if v7 != v3 then goto L121bd8;
#L121ba8.   v3:= v5.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121bac.   v3:= v3.[|java:util:TreeMap.comparator|]   @type object;
#L121bb0.   v4:= v5.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121bb4.   call temp:=  [|java:util:Comparator.compare|](v3, v4, v6) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L121bba.   v0:= temp;
#L121bbc.   if v0 < 0 then goto L121bd4;
#L121bc0.   v6:= v5.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121bc4.   v3:= v5.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121bc8.   v4:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L121bcc.   if v3 != v4 then goto L121bf8;
#L121bd0.   v7:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L121bd4.   v1:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121bd8.   v3:= v5.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121bdc.   call temp:=  [|java:util:TreeMap.find|](v3, v6, v7) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L121be2.   v3:= temp  @type object;
#L121be4.   call temp:=  [|java:util:TreeMap$BoundedMap.bound|](v5, v3, v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.bound:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121bea.   v3:= temp  @type object;
#L121bec.   return v3  @type object;
#L121bee.   if v0 >= 0 then goto L121b88;
#L121bf2.   v7:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L121bf6.   goto L121b88;
#L121bf8.   if v0 <= 0 then goto L121bd4;
#L121bfc.   v7:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L121c00.   goto L121bd4;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap.isInBounds|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L121c14.   v0:= v2.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121c18.   v1:= v2.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121c1c.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v2, v3, v0, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121c22.   v0:= temp;
#L121c24.   return v0;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap.isInBounds|] ([|java:util:TreeMap$BoundedMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:util:TreeMap$Bound|] v5 @type (object), [|java:util:TreeMap$Bound|] v6 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L121c38.   v0:= 0  @length 4;
#L121c3a.   v1:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L121c3e.   if v5 != v1 then goto L121c5c;
#L121c42.   v1:= v3.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121c46.   v1:= v1.[|java:util:TreeMap.comparator|]   @type object;
#L121c4a.   v2:= v3.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121c4e.   call temp:=  [|java:util:Comparator.compare|](v1, v4, v2) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L121c54.   v1:= temp;
#L121c56.   if v1 >= 0 then goto L121c7c;
#L121c5a.   return v0;
#L121c5c.   v1:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L121c60.   if v5 != v1 then goto L121c7c;
#L121c64.   v1:= v3.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121c68.   v1:= v1.[|java:util:TreeMap.comparator|]   @type object;
#L121c6c.   v2:= v3.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121c70.   call temp:=  [|java:util:Comparator.compare|](v1, v4, v2) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L121c76.   v1:= temp;
#L121c78.   if v1 <= 0 then goto L121c5a;
#L121c7c.   v1:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L121c80.   if v6 != v1 then goto L121ca0;
#L121c84.   v1:= v3.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121c88.   v1:= v1.[|java:util:TreeMap.comparator|]   @type object;
#L121c8c.   v2:= v3.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121c90.   call temp:=  [|java:util:Comparator.compare|](v1, v4, v2) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L121c96.   v1:= temp;
#L121c98.   if v1 > 0 then goto L121c5a;
#L121c9c.   v0:= 1  @length 4;
#L121c9e.   goto L121c5a;
#L121ca0.   v1:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L121ca4.   if v6 != v1 then goto L121c9c;
#L121ca8.   v1:= v3.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121cac.   v1:= v1.[|java:util:TreeMap.comparator|]   @type object;
#L121cb0.   v2:= v3.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121cb4.   call temp:=  [|java:util:Comparator.compare|](v1, v4, v2) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L121cba.   v1:= temp;
#L121cbc.   if v1 < 0 then goto L121c9c;
#L121cc0.   goto L121c5a;

   }
    procedure [|java:lang:IllegalArgumentException|] [|java:util:TreeMap$BoundedMap.outOfBounds|] ([|java:util:TreeMap$BoundedMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:util:TreeMap$Bound|] v5 @type (object), [|java:util:TreeMap$Bound|] v6 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.outOfBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Ljava/lang/IllegalArgumentException;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L121cd4.   v0:= new [|java:lang:IllegalArgumentException|];
#L121cd8.   v1:= new [|java:lang:StringBuilder|];
#L121cdc.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L121ce2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L121ce8.   v1:= temp  @type object;
#L121cea.   v2:= " not in range " @type (object, string);
#L121cee.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L121cf4.   v1:= temp  @type object;
#L121cf6.   v2:= v3.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121cfa.   call temp:=  [|java:util:TreeMap$Bound.leftCap|](v5, v2) @signature [|Ljava/util/TreeMap$Bound;.leftCap:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:TreeMap$Bound|] @type virtual;
#L121d00.   v2:= temp  @type object;
#L121d02.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L121d08.   v1:= temp  @type object;
#L121d0a.   v2:= ".." @type (object, string);
#L121d0e.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L121d14.   v1:= temp  @type object;
#L121d16.   v2:= v3.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121d1a.   call temp:=  [|java:util:TreeMap$Bound.rightCap|](v6, v2) @signature [|Ljava/util/TreeMap$Bound;.rightCap:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:TreeMap$Bound|] @type virtual;
#L121d20.   v2:= temp  @type object;
#L121d22.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L121d28.   v1:= temp  @type object;
#L121d2a.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L121d30.   v1:= temp  @type object;
#L121d32.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L121d38.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap$BoundedMap.subMap|] ([|java:util:TreeMap$BoundedMap|] v11 @type (this), [|java:lang:Object|] v12 @type (object), [|java:util:TreeMap$Bound|] v13 @type (object), [|java:lang:Object|] v14 @type (object), [|java:util:TreeMap$Bound|] v15 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)Ljava/util/NavigableMap;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L121d4c.   v0:= v11.[|java:util:TreeMap$BoundedMap.ascending|]   @boolean;
#L121d50.   if v0 != 0 then goto L121d60;
#L121d54.   v9:= v12  @type object;
#L121d56.   v7:= v13  @type object;
#L121d58.   v12:= v14  @type object;
#L121d5a.   v13:= v15  @type object;
#L121d5c.   v14:= v9  @type object;
#L121d5e.   v15:= v7  @type object;
#L121d60.   v0:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121d64.   if v13 != v0 then goto L121d9c;
#L121d68.   v12:= v11.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121d6c.   v13:= v11.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121d70.   v0:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L121d74.   if v15 != v0 then goto L121dcc;
#L121d78.   v14:= v11.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121d7c.   v15:= v11.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121d80.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L121d84.   v1:= v11.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121d88.   v2:= v11.[|java:util:TreeMap$BoundedMap.ascending|]   @boolean;
#L121d8c.   v3:= v12  @type object;
#L121d8e.   v4:= v13  @type object;
#L121d90.   v5:= v14  @type object;
#L121d92.   v6:= v15  @type object;
#L121d94.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121d9a.   return v0  @type object;
#L121d9c.   v0:= v11.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121da0.   if v13 != v0 then goto L121dc6;
#L121da4.   v8:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L121da8.   v0:= v11.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121dac.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v11, v12, v8, v0) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121db2.   v0:= temp;
#L121db4.   if v0 != 0 then goto L121d70;
#L121db8.   v0:= v11.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121dbc.   call temp:=  [|java:util:TreeMap$BoundedMap.outOfBounds|](v11, v14, v8, v0) @signature [|Ljava/util/TreeMap$BoundedMap;.outOfBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121dc2.   v0:= temp  @type object;
#L121dc4.   throw v0;
#L121dc6.   v8:= v11.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121dca.   goto L121da8;
#L121dcc.   v0:= v11.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121dd0.   if v15 != v0 then goto L121df6;
#L121dd4.   v10:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L121dd8.   v0:= v11.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121ddc.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v11, v14, v0, v10) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121de2.   v0:= temp;
#L121de4.   if v0 != 0 then goto L121d80;
#L121de8.   v0:= v11.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121dec.   call temp:=  [|java:util:TreeMap$BoundedMap.outOfBounds|](v11, v14, v0, v10) @signature [|Ljava/util/TreeMap$BoundedMap;.outOfBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121df2.   v0:= temp  @type object;
#L121df4.   throw v0;
#L121df6.   v10:= v11.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121dfa.   goto L121dd8;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap.ceilingEntry|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.ceilingEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L121e0c.   v0:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121e10.   v1:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L121e14.   call temp:=  [|java:util:TreeMap$BoundedMap.findBounded|](v2, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.findBounded:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121e1a.   v1:= temp  @type object;
#L121e1c.   call temp:=  [|java:util:TreeMap.access$300|](v0, v1) @signature [|Ljava/util/TreeMap;.access$300:(Ljava/util/TreeMap;Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L121e22.   v0:= temp  @type object;
#L121e24.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.ceilingKey|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L121e38.   v1:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L121e3c.   call temp:=  [|java:util:TreeMap$BoundedMap.findBounded|](v2, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.findBounded:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121e42.   v0:= temp  @type object;
#L121e44.   if v0 == 0 then goto L121e52;
#L121e48.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L121e4e.   v1:= temp  @type object;
#L121e50.   return v1  @type object;
#L121e52.   v1:= 0  @length 4;
#L121e54.   goto L121e50;

   }
    procedure [|java:util:Comparator|] [|java:util:TreeMap$BoundedMap.comparator|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L121e68.   v1:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121e6c.   call temp:=  [|java:util:TreeMap.comparator|](v1) @signature [|Ljava/util/TreeMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L121e72.   v0:= temp  @type object;
#L121e74.   v1:= v2.[|java:util:TreeMap$BoundedMap.ascending|]   @boolean;
#L121e78.   if v1 == 0 then goto L121e7e;
#L121e7c.   return v0  @type object;
#L121e7e.   call temp:=  [|java:util:Collections.reverseOrder|](v0) @signature [|Ljava/util/Collections;.reverseOrder:(Ljava/util/Comparator;)Ljava/util/Comparator;|] @classDescriptor [|java:util:Collections|] @type static;
#L121e84.   v0:= temp  @type object;
#L121e86.   goto L121e7c;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap.containsKey|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121e98.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121e9e.   v0:= temp;
#L121ea0.   if v0 == 0 then goto L121eb8;
#L121ea4.   v0:= v1.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121ea8.   call temp:=  [|java:util:TreeMap.containsKey|](v0, v2) @signature [|Ljava/util/TreeMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L121eae.   v0:= temp;
#L121eb0.   if v0 == 0 then goto L121eb8;
#L121eb4.   v0:= 1  @length 4;
#L121eb6.   return v0;
#L121eb8.   v0:= 0  @length 4;
#L121eba.   goto L121eb6;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$BoundedMap.descendingKeySet|] ([|java:util:TreeMap$BoundedMap|] v7 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.descendingKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L121ecc.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L121ed0.   v1:= v7.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121ed4.   v2:= v7.[|java:util:TreeMap$BoundedMap.ascending|]   @boolean;
#L121ed8.   if v2 != 0 then goto L121efe;
#L121edc.   v2:= 1  @length 4;
#L121ede.   v3:= v7.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121ee2.   v4:= v7.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121ee6.   v5:= v7.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121eea.   v6:= v7.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121eee.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121ef4.   call temp:=  [|java:util:TreeMap$BoundedMap.navigableKeySet|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L121efa.   v0:= temp  @type object;
#L121efc.   return v0  @type object;
#L121efe.   v2:= 0  @length 4;
#L121f00.   goto L121ede;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap$BoundedMap.descendingMap|] ([|java:util:TreeMap$BoundedMap|] v7 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.descendingMap:()Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L121f14.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L121f18.   v1:= v7.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121f1c.   v2:= v7.[|java:util:TreeMap$BoundedMap.ascending|]   @boolean;
#L121f20.   if v2 != 0 then goto L121f3e;
#L121f24.   v2:= 1  @length 4;
#L121f26.   v3:= v7.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L121f2a.   v4:= v7.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L121f2e.   v5:= v7.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L121f32.   v6:= v7.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L121f36.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121f3c.   return v0  @type object;
#L121f3e.   v2:= 0  @length 4;
#L121f40.   goto L121f26;

   }
    procedure [|java:util:Set|] [|java:util:TreeMap$BoundedMap.entrySet|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L121f54.   v0:= v1.[|java:util:TreeMap$BoundedMap.entrySet|]   @type object;
#L121f58.   if v0 == 0 then goto L121f5e;
#L121f5c.   return v0  @type object;
#L121f5e.   v0:= new [|java:util:TreeMap$BoundedMap$BoundedEntrySet|];
#L121f62.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedEntrySet.<init>|](v0, v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedEntrySet;.<init>:(Ljava/util/TreeMap$BoundedMap;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedEntrySet|] @type direct;
#L121f68.   v1.[|java:util:TreeMap$BoundedMap.entrySet|]  := v0 @type object;
#L121f6c.   goto L121f5c;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap.firstEntry|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.firstEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L121f80.   v0:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121f84.   v1:= 1  @length 4;
#L121f86.   call temp:=  [|java:util:TreeMap$BoundedMap.endpoint|](v2, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.endpoint:(Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121f8c.   v1:= temp  @type object;
#L121f8e.   call temp:=  [|java:util:TreeMap.access$300|](v0, v1) @signature [|Ljava/util/TreeMap;.access$300:(Ljava/util/TreeMap;Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L121f94.   v0:= temp  @type object;
#L121f96.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.firstKey|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.firstKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L121fa8.   v1:= 1  @length 4;
#L121faa.   call temp:=  [|java:util:TreeMap$BoundedMap.endpoint|](v2, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.endpoint:(Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121fb0.   v0:= temp  @type object;
#L121fb2.   if v0 != 0 then goto L121fc2;
#L121fb6.   v1:= new [|java:util:NoSuchElementException|];
#L121fba.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L121fc0.   throw v1;
#L121fc2.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L121fc8.   v1:= temp  @type object;
#L121fca.   return v1  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap.floorEntry|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.floorEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L121fdc.   v0:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L121fe0.   v1:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L121fe4.   call temp:=  [|java:util:TreeMap$BoundedMap.findBounded|](v2, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.findBounded:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L121fea.   v1:= temp  @type object;
#L121fec.   call temp:=  [|java:util:TreeMap.access$300|](v0, v1) @signature [|Ljava/util/TreeMap;.access$300:(Ljava/util/TreeMap;Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L121ff2.   v0:= temp  @type object;
#L121ff4.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.floorKey|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122008.   v1:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L12200c.   call temp:=  [|java:util:TreeMap$BoundedMap.findBounded|](v2, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.findBounded:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L122012.   v0:= temp  @type object;
#L122014.   if v0 == 0 then goto L122022;
#L122018.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12201e.   v1:= temp  @type object;
#L122020.   return v1  @type object;
#L122022.   v1:= 0  @length 4;
#L122024.   goto L122020;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.get|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122038.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L12203e.   v0:= temp;
#L122040.   if v0 == 0 then goto L122052;
#L122044.   v0:= v1.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L122048.   call temp:=  [|java:util:TreeMap.get|](v0, v2) @signature [|Ljava/util/TreeMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12204e.   v0:= temp  @type object;
#L122050.   return v0  @type object;
#L122052.   v0:= 0  @length 4;
#L122054.   goto L122050;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap$BoundedMap.headMap|] ([|java:util:TreeMap$BoundedMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.headMap:(Ljava/lang/Object;)Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L122068.   v0:= 0  @length 4;
#L12206a.   v1:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L12206e.   v2:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L122072.   call temp:=  [|java:util:TreeMap$BoundedMap.subMap|](v3, v0, v1, v4, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L122078.   v0:= temp  @type object;
#L12207a.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap$BoundedMap.headMap|] ([|java:util:TreeMap$BoundedMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12208c.   if v5 == 0 then goto L1220a4;
#L122090.   v0:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L122094.   v1:= 0  @length 4;
#L122096.   v2:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L12209a.   call temp:=  [|java:util:TreeMap$BoundedMap.subMap|](v3, v1, v2, v4, v0) @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L1220a0.   v1:= temp  @type object;
#L1220a2.   return v1  @type object;
#L1220a4.   v0:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L1220a8.   goto L122094;

   }
    procedure [|java:util:SortedMap|] [|java:util:TreeMap$BoundedMap.headMap|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.headMap:(Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L1220bc.   call temp:=  [|java:util:TreeMap$BoundedMap.headMap|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.headMap:(Ljava/lang/Object;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1220c2.   v0:= temp  @type object;
#L1220c4.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap.higherEntry|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.higherEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1220d8.   v0:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L1220dc.   v1:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L1220e0.   call temp:=  [|java:util:TreeMap$BoundedMap.findBounded|](v2, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.findBounded:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L1220e6.   v1:= temp  @type object;
#L1220e8.   call temp:=  [|java:util:TreeMap.access$300|](v0, v1) @signature [|Ljava/util/TreeMap;.access$300:(Ljava/util/TreeMap;Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L1220ee.   v0:= temp  @type object;
#L1220f0.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.higherKey|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122104.   v1:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L122108.   call temp:=  [|java:util:TreeMap$BoundedMap.findBounded|](v2, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.findBounded:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L12210e.   v0:= temp  @type object;
#L122110.   if v0 == 0 then goto L12211e;
#L122114.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12211a.   v1:= temp  @type object;
#L12211c.   return v1  @type object;
#L12211e.   v1:= 0  @length 4;
#L122120.   goto L12211c;

   }
    procedure [|boolean|] [|java:util:TreeMap$BoundedMap.isEmpty|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122134.   v0:= 1  @length 4;
#L122136.   call temp:=  [|java:util:TreeMap$BoundedMap.endpoint|](v2, v0) @signature [|Ljava/util/TreeMap$BoundedMap;.endpoint:(Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L12213c.   v1:= temp  @type object;
#L12213e.   if v1 != 0 then goto L122144;
#L122142.   return v0;
#L122144.   v0:= 0  @length 4;
#L122146.   goto L122142;

   }
    procedure [|java:util:Set|] [|java:util:TreeMap$BoundedMap.keySet|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.keySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122158.   call temp:=  [|java:util:TreeMap$BoundedMap.navigableKeySet|](v1) @signature [|Ljava/util/TreeMap$BoundedMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L12215e.   v0:= temp  @type object;
#L122160.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap.lastEntry|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.lastEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122174.   v0:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L122178.   v1:= 0  @length 4;
#L12217a.   call temp:=  [|java:util:TreeMap$BoundedMap.endpoint|](v2, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.endpoint:(Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L122180.   v1:= temp  @type object;
#L122182.   call temp:=  [|java:util:TreeMap.access$300|](v0, v1) @signature [|Ljava/util/TreeMap;.access$300:(Ljava/util/TreeMap;Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L122188.   v0:= temp  @type object;
#L12218a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.lastKey|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.lastKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12219c.   v1:= 0  @length 4;
#L12219e.   call temp:=  [|java:util:TreeMap$BoundedMap.endpoint|](v2, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.endpoint:(Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L1221a4.   v0:= temp  @type object;
#L1221a6.   if v0 != 0 then goto L1221b6;
#L1221aa.   v1:= new [|java:util:NoSuchElementException|];
#L1221ae.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L1221b4.   throw v1;
#L1221b6.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L1221bc.   v1:= temp  @type object;
#L1221be.   return v1  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap.lowerEntry|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.lowerEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1221d0.   v0:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L1221d4.   v1:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L1221d8.   call temp:=  [|java:util:TreeMap$BoundedMap.findBounded|](v2, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.findBounded:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L1221de.   v1:= temp  @type object;
#L1221e0.   call temp:=  [|java:util:TreeMap.access$300|](v0, v1) @signature [|Ljava/util/TreeMap;.access$300:(Ljava/util/TreeMap;Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L1221e6.   v0:= temp  @type object;
#L1221e8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.lowerKey|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1221fc.   v1:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L122200.   call temp:=  [|java:util:TreeMap$BoundedMap.findBounded|](v2, v3, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.findBounded:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L122206.   v0:= temp  @type object;
#L122208.   if v0 == 0 then goto L122216;
#L12220c.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L122212.   v1:= temp  @type object;
#L122214.   return v1  @type object;
#L122216.   v1:= 0  @length 4;
#L122218.   goto L122214;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$BoundedMap.navigableKeySet|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12222c.   v0:= v1.[|java:util:TreeMap$BoundedMap.keySet|]   @type object;
#L122230.   if v0 == 0 then goto L122236;
#L122234.   return v0  @type object;
#L122236.   v0:= new [|java:util:TreeMap$BoundedMap$BoundedKeySet|];
#L12223a.   call temp:=  [|java:util:TreeMap$BoundedMap$BoundedKeySet.<init>|](v0, v1) @signature [|Ljava/util/TreeMap$BoundedMap$BoundedKeySet;.<init>:(Ljava/util/TreeMap$BoundedMap;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap$BoundedKeySet|] @type direct;
#L122240.   v1.[|java:util:TreeMap$BoundedMap.keySet|]  := v0 @type object;
#L122244.   goto L122234;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap.pollFirstEntry|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.pollFirstEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122258.   v1:= 1  @length 4;
#L12225a.   call temp:=  [|java:util:TreeMap$BoundedMap.endpoint|](v2, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.endpoint:(Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L122260.   v0:= temp  @type object;
#L122262.   if v0 == 0 then goto L122270;
#L122266.   v1:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L12226a.   call temp:=  [|java:util:TreeMap.removeInternal|](v1, v0) @signature [|Ljava/util/TreeMap;.removeInternal:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L122270.   v1:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L122274.   call temp:=  [|java:util:TreeMap.access$300|](v1, v0) @signature [|Ljava/util/TreeMap;.access$300:(Ljava/util/TreeMap;Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L12227a.   v1:= temp  @type object;
#L12227c.   return v1  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$BoundedMap.pollLastEntry|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.pollLastEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122290.   v1:= 0  @length 4;
#L122292.   call temp:=  [|java:util:TreeMap$BoundedMap.endpoint|](v2, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.endpoint:(Z)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L122298.   v0:= temp  @type object;
#L12229a.   if v0 == 0 then goto L1222a8;
#L12229e.   v1:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L1222a2.   call temp:=  [|java:util:TreeMap.removeInternal|](v1, v0) @signature [|Ljava/util/TreeMap;.removeInternal:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1222a8.   v1:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L1222ac.   call temp:=  [|java:util:TreeMap.access$300|](v1, v0) @signature [|Ljava/util/TreeMap;.access$300:(Ljava/util/TreeMap;Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L1222b2.   v1:= temp  @type object;
#L1222b4.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.put|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1222c8.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v2, v3) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L1222ce.   v0:= temp;
#L1222d0.   if v0 != 0 then goto L1222e6;
#L1222d4.   v0:= v2.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L1222d8.   v1:= v2.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L1222dc.   call temp:=  [|java:util:TreeMap$BoundedMap.outOfBounds|](v2, v3, v0, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.outOfBounds:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/util/TreeMap$Bound;)Ljava/lang/IllegalArgumentException;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L1222e2.   v0:= temp  @type object;
#L1222e4.   throw v0;
#L1222e6.   v0:= v2.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L1222ea.   call temp:=  [|java:util:TreeMap.putInternal|](v0, v3, v4) @signature [|Ljava/util/TreeMap;.putInternal:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1222f0.   v0:= temp  @type object;
#L1222f2.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.remove|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122304.   call temp:=  [|java:util:TreeMap$BoundedMap.isInBounds|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.isInBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L12230a.   v0:= temp;
#L12230c.   if v0 == 0 then goto L12231e;
#L122310.   v0:= v1.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L122314.   call temp:=  [|java:util:TreeMap.remove|](v0, v2) @signature [|Ljava/util/TreeMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12231a.   v0:= temp  @type object;
#L12231c.   return v0  @type object;
#L12231e.   v0:= 0  @length 4;
#L122320.   goto L12231c;

   }
    procedure [|int|] [|java:util:TreeMap$BoundedMap.size|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122334.   call temp:=  [|java:util:TreeMap$BoundedMap.entrySet|](v1) @signature [|Ljava/util/TreeMap$BoundedMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L12233a.   v0:= temp  @type object;
#L12233c.   call temp:=  [|java:util:Set.iterator|](v0) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L122342.   v0:= temp  @type object;
#L122344.   call temp:=  [|java:util:TreeMap.count|](v0) @signature [|Ljava/util/TreeMap;.count:(Ljava/util/Iterator;)I|] @classDescriptor [|java:util:TreeMap|] @type static;
#L12234a.   v0:= temp;
#L12234c.   return v0;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap$BoundedMap.subMap|] ([|java:util:TreeMap$BoundedMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122360.   v0:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L122364.   v1:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L122368.   call temp:=  [|java:util:TreeMap$BoundedMap.subMap|](v2, v3, v0, v4, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L12236e.   v0:= temp  @type object;
#L122370.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap$BoundedMap.subMap|] ([|java:util:TreeMap$BoundedMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|boolean|] v5, [|java:lang:Object|] v6 @type (object), [|boolean|] v7) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L122384.   if v5 == 0 then goto L12239e;
#L122388.   v0:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L12238c.   if v7 == 0 then goto L1223a4;
#L122390.   v1:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L122394.   call temp:=  [|java:util:TreeMap$BoundedMap.subMap|](v3, v4, v0, v6, v1) @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L12239a.   v2:= temp  @type object;
#L12239c.   return v2  @type object;
#L12239e.   v0:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L1223a2.   goto L12238c;
#L1223a4.   v1:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L1223a8.   goto L122394;

   }
    procedure [|java:util:SortedMap|] [|java:util:TreeMap$BoundedMap.subMap|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L1223bc.   call temp:=  [|java:util:TreeMap$BoundedMap.subMap|](v1, v2, v3) @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L1223c2.   v0:= temp  @type object;
#L1223c4.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap$BoundedMap.tailMap|] ([|java:util:TreeMap$BoundedMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.tailMap:(Ljava/lang/Object;)Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1223d8.   v0:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L1223dc.   v1:= 0  @length 4;
#L1223de.   v2:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L1223e2.   call temp:=  [|java:util:TreeMap$BoundedMap.subMap|](v3, v4, v0, v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L1223e8.   v0:= temp  @type object;
#L1223ea.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap$BoundedMap.tailMap|] ([|java:util:TreeMap$BoundedMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1223fc.   if v5 == 0 then goto L122414;
#L122400.   v0:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L122404.   v1:= 0  @length 4;
#L122406.   v2:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L12240a.   call temp:=  [|java:util:TreeMap$BoundedMap.subMap|](v3, v4, v0, v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.subMap:(Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L122410.   v1:= temp  @type object;
#L122412.   return v1  @type object;
#L122414.   v0:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L122418.   goto L122404;

   }
    procedure [|java:util:SortedMap|] [|java:util:TreeMap$BoundedMap.tailMap|] ([|java:util:TreeMap$BoundedMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.tailMap:(Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12242c.   call temp:=  [|java:util:TreeMap$BoundedMap.tailMap|](v1, v2) @signature [|Ljava/util/TreeMap$BoundedMap;.tailMap:(Ljava/lang/Object;)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L122432.   v0:= temp  @type object;
#L122434.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$BoundedMap.writeReplace|] ([|java:util:TreeMap$BoundedMap|] v6 @type (this)) @owner [|java:util:TreeMap$BoundedMap|] @signature [|Ljava/util/TreeMap$BoundedMap;.writeReplace:()Ljava/lang/Object;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L122448.   v0:= v6.[|java:util:TreeMap$BoundedMap.ascending|]   @boolean;
#L12244c.   if v0 == 0 then goto L122470;
#L122450.   v0:= new [|java:util:TreeMap$AscendingSubMap|];
#L122454.   v1:= v6.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L122458.   v2:= v6.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L12245c.   v3:= v6.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L122460.   v4:= v6.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L122464.   v5:= v6.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L122468.   call temp:=  [|java:util:TreeMap$AscendingSubMap.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/TreeMap$AscendingSubMap;.<init>:(Ljava/util/TreeMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$AscendingSubMap|] @type direct;
#L12246e.   return v0  @type object;
#L122470.   v0:= new [|java:util:TreeMap$DescendingSubMap|];
#L122474.   v1:= v6.[|java:util:TreeMap$BoundedMap.this$0|]   @type object;
#L122478.   v2:= v6.[|java:util:TreeMap$BoundedMap.from|]   @type object;
#L12247c.   v3:= v6.[|java:util:TreeMap$BoundedMap.fromBound|]   @type object;
#L122480.   v4:= v6.[|java:util:TreeMap$BoundedMap.to|]   @type object;
#L122484.   v5:= v6.[|java:util:TreeMap$BoundedMap.toBound|]   @type object;
#L122488.   call temp:=  [|java:util:TreeMap$DescendingSubMap.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/TreeMap$DescendingSubMap;.<init>:(Ljava/util/TreeMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$DescendingSubMap|] @type direct;
#L12248e.   goto L12246e;

   }
record [|java:util:TreeMap$DescendingSubMap|]  @type class @AccessFlag   extends [|java:util:TreeMap$NavigableSubMap|] {
      [|java:util:Comparator|] [|java:util:TreeMap$DescendingSubMap.reverseComparator|]    @AccessFlag ;
   }
      global [|long|] @@[|java:util:TreeMap$DescendingSubMap.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:TreeMap$DescendingSubMap.<init>|] ([|java:util:TreeMap$DescendingSubMap|] v0 @type (this), [|java:util:TreeMap|] v1 @type (object), [|java:lang:Object|] v2 @type (object), [|java:util:TreeMap$Bound|] v3 @type (object), [|java:lang:Object|] v4 @type (object), [|java:util:TreeMap$Bound|] v5 @type (object)) @owner [|java:util:TreeMap$DescendingSubMap|] @signature [|Ljava/util/TreeMap$DescendingSubMap;.<init>:(Ljava/util/TreeMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1224a0.   call temp:=  [|java:util:TreeMap$NavigableSubMap.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/TreeMap$NavigableSubMap;.<init>:(Ljava/util/TreeMap;Ljava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$NavigableSubMap|] @type direct;
#L1224a6.   return @void ;

   }
record [|java:util:TreeMap$EntrySet$1|]  @type class @AccessFlag   extends [|java:util:TreeMap$MapIterator|] {
      [|java:util:TreeMap$EntrySet|] [|java:util:TreeMap$EntrySet$1.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$EntrySet$1.<init>|] ([|java:util:TreeMap$EntrySet$1|] v1 @type (this), [|java:util:TreeMap$EntrySet|] v2 @type (object), [|java:util:TreeMap$Node|] v3 @type (object)) @owner [|java:util:TreeMap$EntrySet$1|] @signature [|Ljava/util/TreeMap$EntrySet$1;.<init>:(Ljava/util/TreeMap$EntrySet;Ljava/util/TreeMap$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L1224b8.   v1.[|java:util:TreeMap$EntrySet$1.this$1|]  := v2 @type object;
#L1224bc.   v0:= v2.[|java:util:TreeMap$EntrySet.this$0|]   @type object;
#L1224c0.   call temp:=  [|java:util:TreeMap$MapIterator.<init>|](v1, v0, v3) @signature [|Ljava/util/TreeMap$MapIterator;.<init>:(Ljava/util/TreeMap;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$MapIterator|] @type direct;
#L1224c6.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$EntrySet$1.next|] ([|java:util:TreeMap$EntrySet$1|] v1 @type (this)) @owner [|java:util:TreeMap$EntrySet$1|] @signature [|Ljava/util/TreeMap$EntrySet$1;.next:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L1224d8.   call temp:=  [|java:util:TreeMap$EntrySet$1.next|](v1) @signature [|Ljava/util/TreeMap$EntrySet$1;.next:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap$EntrySet$1|] @type virtual;
#L1224de.   v0:= temp  @type object;
#L1224e0.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap$EntrySet$1.next|] ([|java:util:TreeMap$EntrySet$1|] v1 @type (this)) @owner [|java:util:TreeMap$EntrySet$1|] @signature [|Ljava/util/TreeMap$EntrySet$1;.next:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1224f4.   call temp:=  [|java:util:TreeMap$EntrySet$1.stepForward|](v1) @signature [|Ljava/util/TreeMap$EntrySet$1;.stepForward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$EntrySet$1|] @type virtual;
#L1224fa.   v0:= temp  @type object;
#L1224fc.   return v0  @type object;

   }
record [|java:util:TreeMap$EntrySet|]  @type class @AccessFlag   extends [|java:util:AbstractSet|] {
      [|java:util:TreeMap|] [|java:util:TreeMap$EntrySet.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$EntrySet.<init>|] ([|java:util:TreeMap$EntrySet|] v0 @type (this), [|java:util:TreeMap|] v1 @type (object)) @owner [|java:util:TreeMap$EntrySet|] @signature [|Ljava/util/TreeMap$EntrySet;.<init>:(Ljava/util/TreeMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L122510.   v0.[|java:util:TreeMap$EntrySet.this$0|]  := v1 @type object;
#L122514.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12251a.   return @void ;

   }
    procedure [|void|] [|java:util:TreeMap$EntrySet.clear|] ([|java:util:TreeMap$EntrySet|] v1 @type (this)) @owner [|java:util:TreeMap$EntrySet|] @signature [|Ljava/util/TreeMap$EntrySet;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12252c.   v0:= v1.[|java:util:TreeMap$EntrySet.this$0|]   @type object;
#L122530.   call temp:=  [|java:util:TreeMap.clear|](v0) @signature [|Ljava/util/TreeMap;.clear:()V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L122536.   return @void ;

   }
    procedure [|boolean|] [|java:util:TreeMap$EntrySet.contains|] ([|java:util:TreeMap$EntrySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$EntrySet|] @signature [|Ljava/util/TreeMap$EntrySet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122548.   v0:= instanceof @varname v2 @type [|java:util:Map$Entry|];
#L12254c.   if v0 == 0 then goto L122568;
#L122550.   v0:= v1.[|java:util:TreeMap$EntrySet.this$0|]   @type object;
#L122554.   v2:= ([|java:util:Map$Entry|])v2;
#L122558.   call temp:=  [|java:util:TreeMap.findByEntry|](v0, v2) @signature [|Ljava/util/TreeMap;.findByEntry:(Ljava/util/Map$Entry;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12255e.   v0:= temp  @type object;
#L122560.   if v0 == 0 then goto L122568;
#L122564.   v0:= 1  @length 4;
#L122566.   return v0;
#L122568.   v0:= 0  @length 4;
#L12256a.   goto L122566;

   }
    procedure [|java:util:Iterator|] [|java:util:TreeMap$EntrySet.iterator|] ([|java:util:TreeMap$EntrySet|] v2 @type (this)) @owner [|java:util:TreeMap$EntrySet|] @signature [|Ljava/util/TreeMap$EntrySet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12257c.   v1:= new [|java:util:TreeMap$EntrySet$1|];
#L122580.   v0:= v2.[|java:util:TreeMap$EntrySet.this$0|]   @type object;
#L122584.   v0:= v0.[|java:util:TreeMap.root|]   @type object;
#L122588.   if v0 != 0 then goto L122596;
#L12258c.   v0:= 0  @length 4;
#L12258e.   call temp:=  [|java:util:TreeMap$EntrySet$1.<init>|](v1, v2, v0) @signature [|Ljava/util/TreeMap$EntrySet$1;.<init>:(Ljava/util/TreeMap$EntrySet;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$EntrySet$1|] @type direct;
#L122594.   return v1  @type object;
#L122596.   v0:= v2.[|java:util:TreeMap$EntrySet.this$0|]   @type object;
#L12259a.   v0:= v0.[|java:util:TreeMap.root|]   @type object;
#L12259e.   call temp:=  [|java:util:TreeMap$Node.first|](v0) @signature [|Ljava/util/TreeMap$Node;.first:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L1225a4.   v0:= temp  @type object;
#L1225a6.   goto L12258e;

   }
    procedure [|boolean|] [|java:util:TreeMap$EntrySet.remove|] ([|java:util:TreeMap$EntrySet|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:TreeMap$EntrySet|] @signature [|Ljava/util/TreeMap$EntrySet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1225b8.   v1:= 0  @length 4;
#L1225ba.   v2:= instanceof @varname v4 @type [|java:util:Map$Entry|];
#L1225be.   if v2 != 0 then goto L1225c4;
#L1225c2.   return v1;
#L1225c4.   v2:= v3.[|java:util:TreeMap$EntrySet.this$0|]   @type object;
#L1225c8.   v4:= ([|java:util:Map$Entry|])v4;
#L1225cc.   call temp:=  [|java:util:TreeMap.findByEntry|](v2, v4) @signature [|Ljava/util/TreeMap;.findByEntry:(Ljava/util/Map$Entry;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1225d2.   v0:= temp  @type object;
#L1225d4.   if v0 == 0 then goto L1225c2;
#L1225d8.   v1:= v3.[|java:util:TreeMap$EntrySet.this$0|]   @type object;
#L1225dc.   call temp:=  [|java:util:TreeMap.removeInternal|](v1, v0) @signature [|Ljava/util/TreeMap;.removeInternal:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1225e2.   v1:= 1  @length 4;
#L1225e4.   goto L1225c2;

   }
    procedure [|int|] [|java:util:TreeMap$EntrySet.size|] ([|java:util:TreeMap$EntrySet|] v1 @type (this)) @owner [|java:util:TreeMap$EntrySet|] @signature [|Ljava/util/TreeMap$EntrySet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1225f8.   v0:= v1.[|java:util:TreeMap$EntrySet.this$0|]   @type object;
#L1225fc.   v0:= v0.[|java:util:TreeMap.size|] ;
#L122600.   return v0;

   }
record [|java:util:TreeMap$KeySet$1|]  @type class @AccessFlag   extends [|java:util:TreeMap$MapIterator|] {
      [|java:util:TreeMap$KeySet|] [|java:util:TreeMap$KeySet$1.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$KeySet$1.<init>|] ([|java:util:TreeMap$KeySet$1|] v1 @type (this), [|java:util:TreeMap$KeySet|] v2 @type (object), [|java:util:TreeMap$Node|] v3 @type (object)) @owner [|java:util:TreeMap$KeySet$1|] @signature [|Ljava/util/TreeMap$KeySet$1;.<init>:(Ljava/util/TreeMap$KeySet;Ljava/util/TreeMap$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L122614.   v1.[|java:util:TreeMap$KeySet$1.this$1|]  := v2 @type object;
#L122618.   v0:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L12261c.   call temp:=  [|java:util:TreeMap$MapIterator.<init>|](v1, v0, v3) @signature [|Ljava/util/TreeMap$MapIterator;.<init>:(Ljava/util/TreeMap;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$MapIterator|] @type direct;
#L122622.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet$1.next|] ([|java:util:TreeMap$KeySet$1|] v1 @type (this)) @owner [|java:util:TreeMap$KeySet$1|] @signature [|Ljava/util/TreeMap$KeySet$1;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122634.   call temp:=  [|java:util:TreeMap$KeySet$1.stepForward|](v1) @signature [|Ljava/util/TreeMap$KeySet$1;.stepForward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$KeySet$1|] @type virtual;
#L12263a.   v0:= temp  @type object;
#L12263c.   v0:= v0.[|java:util:TreeMap$Node.key|]   @type object;
#L122640.   return v0  @type object;

   }
record [|java:util:TreeMap$KeySet$2|]  @type class @AccessFlag   extends [|java:util:TreeMap$MapIterator|] {
      [|java:util:TreeMap$KeySet|] [|java:util:TreeMap$KeySet$2.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$KeySet$2.<init>|] ([|java:util:TreeMap$KeySet$2|] v1 @type (this), [|java:util:TreeMap$KeySet|] v2 @type (object), [|java:util:TreeMap$Node|] v3 @type (object)) @owner [|java:util:TreeMap$KeySet$2|] @signature [|Ljava/util/TreeMap$KeySet$2;.<init>:(Ljava/util/TreeMap$KeySet;Ljava/util/TreeMap$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L122654.   v1.[|java:util:TreeMap$KeySet$2.this$1|]  := v2 @type object;
#L122658.   v0:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L12265c.   call temp:=  [|java:util:TreeMap$MapIterator.<init>|](v1, v0, v3) @signature [|Ljava/util/TreeMap$MapIterator;.<init>:(Ljava/util/TreeMap;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$MapIterator|] @type direct;
#L122662.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet$2.next|] ([|java:util:TreeMap$KeySet$2|] v1 @type (this)) @owner [|java:util:TreeMap$KeySet$2|] @signature [|Ljava/util/TreeMap$KeySet$2;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122674.   call temp:=  [|java:util:TreeMap$KeySet$2.stepBackward|](v1) @signature [|Ljava/util/TreeMap$KeySet$2;.stepBackward:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$KeySet$2|] @type virtual;
#L12267a.   v0:= temp  @type object;
#L12267c.   v0:= v0.[|java:util:TreeMap$Node.key|]   @type object;
#L122680.   return v0  @type object;

   }
record [|java:util:TreeMap$KeySet|]  @type class @AccessFlag   extends [|java:util:AbstractSet|], [|java:util:NavigableSet|] {
      [|java:util:TreeMap|] [|java:util:TreeMap$KeySet.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:TreeMap$KeySet.<init>|] ([|java:util:TreeMap$KeySet|] v0 @type (this), [|java:util:TreeMap|] v1 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.<init>:(Ljava/util/TreeMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L122694.   v0.[|java:util:TreeMap$KeySet.this$0|]  := v1 @type object;
#L122698.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12269e.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet.ceiling|] ([|java:util:TreeMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.ceiling:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1226b0.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1226b4.   call temp:=  [|java:util:TreeMap.ceilingKey|](v0, v2) @signature [|Ljava/util/TreeMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1226ba.   v0:= temp  @type object;
#L1226bc.   return v0  @type object;

   }
    procedure [|void|] [|java:util:TreeMap$KeySet.clear|] ([|java:util:TreeMap$KeySet|] v1 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1226d0.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1226d4.   call temp:=  [|java:util:TreeMap.clear|](v0) @signature [|Ljava/util/TreeMap;.clear:()V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1226da.   return @void ;

   }
    procedure [|java:util:Comparator|] [|java:util:TreeMap$KeySet.comparator|] ([|java:util:TreeMap$KeySet|] v1 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1226ec.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1226f0.   call temp:=  [|java:util:TreeMap.comparator|](v0) @signature [|Ljava/util/TreeMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1226f6.   v0:= temp  @type object;
#L1226f8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:TreeMap$KeySet.contains|] ([|java:util:TreeMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12270c.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122710.   call temp:=  [|java:util:TreeMap.containsKey|](v0, v2) @signature [|Ljava/util/TreeMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L122716.   v0:= temp;
#L122718.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:TreeMap$KeySet.descendingIterator|] ([|java:util:TreeMap$KeySet|] v2 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.descendingIterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12272c.   v1:= new [|java:util:TreeMap$KeySet$2|];
#L122730.   v0:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122734.   v0:= v0.[|java:util:TreeMap.root|]   @type object;
#L122738.   if v0 != 0 then goto L122746;
#L12273c.   v0:= 0  @length 4;
#L12273e.   call temp:=  [|java:util:TreeMap$KeySet$2.<init>|](v1, v2, v0) @signature [|Ljava/util/TreeMap$KeySet$2;.<init>:(Ljava/util/TreeMap$KeySet;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$KeySet$2|] @type direct;
#L122744.   return v1  @type object;
#L122746.   v0:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L12274a.   v0:= v0.[|java:util:TreeMap.root|]   @type object;
#L12274e.   call temp:=  [|java:util:TreeMap$Node.last|](v0) @signature [|Ljava/util/TreeMap$Node;.last:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L122754.   v0:= temp  @type object;
#L122756.   goto L12273e;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$KeySet.descendingSet|] ([|java:util:TreeMap$KeySet|] v7 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.descendingSet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L122768.   v3:= 0  @length 4;
#L12276a.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L12276e.   v1:= v7.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122772.   v2:= 0  @length 4;
#L122774.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L122778.   v6:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L12277c.   v5:= v3  @type object;
#L12277e.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L122784.   call temp:=  [|java:util:TreeMap$BoundedMap.navigableKeySet|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L12278a.   v0:= temp  @type object;
#L12278c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet.first|] ([|java:util:TreeMap$KeySet|] v1 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.first:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1227a0.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1227a4.   call temp:=  [|java:util:TreeMap.firstKey|](v0) @signature [|Ljava/util/TreeMap;.firstKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1227aa.   v0:= temp  @type object;
#L1227ac.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet.floor|] ([|java:util:TreeMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.floor:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1227c0.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1227c4.   call temp:=  [|java:util:TreeMap.floorKey|](v0, v2) @signature [|Ljava/util/TreeMap;.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1227ca.   v0:= temp  @type object;
#L1227cc.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$KeySet.headSet|] ([|java:util:TreeMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1227e0.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1227e4.   call temp:=  [|java:util:TreeMap.headMap|](v0, v2, v3) @signature [|Ljava/util/TreeMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1227ea.   v0:= temp  @type object;
#L1227ec.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1227f2.   v0:= temp  @type object;
#L1227f4.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:TreeMap$KeySet.headSet|] ([|java:util:TreeMap$KeySet|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.headSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122808.   v0:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L12280c.   v1:= 0  @length 4;
#L12280e.   call temp:=  [|java:util:TreeMap.headMap|](v0, v3, v1) @signature [|Ljava/util/TreeMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L122814.   v0:= temp  @type object;
#L122816.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L12281c.   v0:= temp  @type object;
#L12281e.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet.higher|] ([|java:util:TreeMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.higher:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122830.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122834.   call temp:=  [|java:util:TreeMap.higherKey|](v0, v2) @signature [|Ljava/util/TreeMap;.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12283a.   v0:= temp  @type object;
#L12283c.   return v0  @type object;

   }
    procedure [|java:util:Iterator|] [|java:util:TreeMap$KeySet.iterator|] ([|java:util:TreeMap$KeySet|] v2 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122850.   v1:= new [|java:util:TreeMap$KeySet$1|];
#L122854.   v0:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122858.   v0:= v0.[|java:util:TreeMap.root|]   @type object;
#L12285c.   if v0 != 0 then goto L12286a;
#L122860.   v0:= 0  @length 4;
#L122862.   call temp:=  [|java:util:TreeMap$KeySet$1.<init>|](v1, v2, v0) @signature [|Ljava/util/TreeMap$KeySet$1;.<init>:(Ljava/util/TreeMap$KeySet;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap$KeySet$1|] @type direct;
#L122868.   return v1  @type object;
#L12286a.   v0:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L12286e.   v0:= v0.[|java:util:TreeMap.root|]   @type object;
#L122872.   call temp:=  [|java:util:TreeMap$Node.first|](v0) @signature [|Ljava/util/TreeMap$Node;.first:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L122878.   v0:= temp  @type object;
#L12287a.   goto L122862;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet.last|] ([|java:util:TreeMap$KeySet|] v1 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.last:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12288c.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122890.   call temp:=  [|java:util:TreeMap.lastKey|](v0) @signature [|Ljava/util/TreeMap;.lastKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L122896.   v0:= temp  @type object;
#L122898.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet.lower|] ([|java:util:TreeMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.lower:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1228ac.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1228b0.   call temp:=  [|java:util:TreeMap.lowerKey|](v0, v2) @signature [|Ljava/util/TreeMap;.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1228b6.   v0:= temp  @type object;
#L1228b8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet.pollFirst|] ([|java:util:TreeMap$KeySet|] v2 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.pollFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1228cc.   v1:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1228d0.   call temp:=  [|java:util:TreeMap.access$000|](v1) @signature [|Ljava/util/TreeMap;.access$000:(Ljava/util/TreeMap;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L1228d6.   v0:= temp  @type object;
#L1228d8.   if v0 == 0 then goto L1228e6;
#L1228dc.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L1228e2.   v1:= temp  @type object;
#L1228e4.   return v1  @type object;
#L1228e6.   v1:= 0  @length 4;
#L1228e8.   goto L1228e4;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$KeySet.pollLast|] ([|java:util:TreeMap$KeySet|] v2 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.pollLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1228fc.   v1:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122900.   call temp:=  [|java:util:TreeMap.access$100|](v1) @signature [|Ljava/util/TreeMap;.access$100:(Ljava/util/TreeMap;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap|] @type static;
#L122906.   v0:= temp  @type object;
#L122908.   if v0 == 0 then goto L122916;
#L12290c.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L122912.   v1:= temp  @type object;
#L122914.   return v1  @type object;
#L122916.   v1:= 0  @length 4;
#L122918.   goto L122914;

   }
    procedure [|boolean|] [|java:util:TreeMap$KeySet.remove|] ([|java:util:TreeMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12292c.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122930.   call temp:=  [|java:util:TreeMap.removeInternalByKey|](v0, v2) @signature [|Ljava/util/TreeMap;.removeInternalByKey:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L122936.   v0:= temp  @type object;
#L122938.   if v0 == 0 then goto L122940;
#L12293c.   v0:= 1  @length 4;
#L12293e.   return v0;
#L122940.   v0:= 0  @length 4;
#L122942.   goto L12293e;

   }
    procedure [|int|] [|java:util:TreeMap$KeySet.size|] ([|java:util:TreeMap$KeySet|] v1 @type (this)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122954.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122958.   v0:= v0.[|java:util:TreeMap.size|] ;
#L12295c.   return v0;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$KeySet.subSet|] ([|java:util:TreeMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3, [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122970.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L122974.   call temp:=  [|java:util:TreeMap.subMap|](v0, v2, v3, v4, v5) @signature [|Ljava/util/TreeMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12297a.   v0:= temp  @type object;
#L12297c.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L122982.   v0:= temp  @type object;
#L122984.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:TreeMap$KeySet.subSet|] ([|java:util:TreeMap$KeySet|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L122998.   v0:= v3.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L12299c.   v1:= 1  @length 4;
#L12299e.   v2:= 0  @length 4;
#L1229a0.   call temp:=  [|java:util:TreeMap.subMap|](v0, v4, v1, v5, v2) @signature [|Ljava/util/TreeMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1229a6.   v0:= temp  @type object;
#L1229a8.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1229ae.   v0:= temp  @type object;
#L1229b0.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap$KeySet.tailSet|] ([|java:util:TreeMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1229c4.   v0:= v1.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1229c8.   call temp:=  [|java:util:TreeMap.tailMap|](v0, v2, v3) @signature [|Ljava/util/TreeMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1229ce.   v0:= temp  @type object;
#L1229d0.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1229d6.   v0:= temp  @type object;
#L1229d8.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:TreeMap$KeySet.tailSet|] ([|java:util:TreeMap$KeySet|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$KeySet|] @signature [|Ljava/util/TreeMap$KeySet;.tailSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1229ec.   v0:= v2.[|java:util:TreeMap$KeySet.this$0|]   @type object;
#L1229f0.   v1:= 1  @length 4;
#L1229f2.   call temp:=  [|java:util:TreeMap.tailMap|](v0, v3, v1) @signature [|Ljava/util/TreeMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1229f8.   v0:= temp  @type object;
#L1229fa.   call temp:=  [|java:util:NavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/NavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L122a00.   v0:= temp  @type object;
#L122a02.   return v0  @type object;

   }
record [|java:util:TreeMap$Node|]  @type class @AccessFlag  extends  [|java:util:Map$Entry|] {
      [|int|] [|java:util:TreeMap$Node.height|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:TreeMap$Node.key|]    @AccessFlag FINAL;
      [|java:util:TreeMap$Node|] [|java:util:TreeMap$Node.left|]    @AccessFlag ;
      [|java:util:TreeMap$Node|] [|java:util:TreeMap$Node.parent|]    @AccessFlag ;
      [|java:util:TreeMap$Node|] [|java:util:TreeMap$Node.right|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:TreeMap$Node.value|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:TreeMap$Node.<init>|] ([|java:util:TreeMap$Node|] v1 @type (this), [|java:util:TreeMap$Node|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.<init>:(Ljava/util/TreeMap$Node;Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L122a14.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L122a1a.   v1.[|java:util:TreeMap$Node.parent|]  := v2 @type object;
#L122a1e.   v1.[|java:util:TreeMap$Node.key|]  := v3 @type object;
#L122a22.   v0:= 1  @length 4;
#L122a24.   v1.[|java:util:TreeMap$Node.height|]  := v0;
#L122a28.   return @void ;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$Node.copy|] ([|java:util:TreeMap$Node|] v2 @type (this), [|java:util:TreeMap$Node|] v3 @type (object)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.copy:(Ljava/util/TreeMap$Node;)Ljava/util/TreeMap$Node;|] @Access  {
      local temp ;
        v0;
        v1;
      
#L122a3c.   v0:= new [|java:util:TreeMap$Node|];
#L122a40.   v1:= v2.[|java:util:TreeMap$Node.key|]   @type object;
#L122a44.   call temp:=  [|java:util:TreeMap$Node.<init>|](v0, v3, v1) @signature [|Ljava/util/TreeMap$Node;.<init>:(Ljava/util/TreeMap$Node;Ljava/lang/Object;)V|] @classDescriptor [|java:util:TreeMap$Node|] @type direct;
#L122a4a.   v1:= v2.[|java:util:TreeMap$Node.left|]   @type object;
#L122a4e.   if v1 == 0 then goto L122a62;
#L122a52.   v1:= v2.[|java:util:TreeMap$Node.left|]   @type object;
#L122a56.   call temp:=  [|java:util:TreeMap$Node.copy|](v1, v0) @signature [|Ljava/util/TreeMap$Node;.copy:(Ljava/util/TreeMap$Node;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L122a5c.   v1:= temp  @type object;
#L122a5e.   v0.[|java:util:TreeMap$Node.left|]  := v1 @type object;
#L122a62.   v1:= v2.[|java:util:TreeMap$Node.right|]   @type object;
#L122a66.   if v1 == 0 then goto L122a7a;
#L122a6a.   v1:= v2.[|java:util:TreeMap$Node.right|]   @type object;
#L122a6e.   call temp:=  [|java:util:TreeMap$Node.copy|](v1, v0) @signature [|Ljava/util/TreeMap$Node;.copy:(Ljava/util/TreeMap$Node;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L122a74.   v1:= temp  @type object;
#L122a76.   v0.[|java:util:TreeMap$Node.right|]  := v1 @type object;
#L122a7a.   v1:= v2.[|java:util:TreeMap$Node.value|]   @type object;
#L122a7e.   v0.[|java:util:TreeMap$Node.value|]  := v1 @type object;
#L122a82.   v1:= v2.[|java:util:TreeMap$Node.height|] ;
#L122a86.   v0.[|java:util:TreeMap$Node.height|]  := v1;
#L122a8a.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:TreeMap$Node.equals|] ([|java:util:TreeMap$Node|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L122a9c.   v1:= 0  @length 4;
#L122a9e.   v2:= instanceof @varname v5 @type [|java:util:Map$Entry|];
#L122aa2.   if v2 == 0 then goto L122ad6;
#L122aa6.   v0:= v5  @type object;
#L122aa8.   v0:= ([|java:util:Map$Entry|])v0;
#L122aac.   v2:= v4.[|java:util:TreeMap$Node.key|]   @type object;
#L122ab0.   if v2 != 0 then goto L122ad8;
#L122ab4.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L122aba.   v2:= temp  @type object;
#L122abc.   if v2 != 0 then goto L122ad6;
#L122ac0.   v2:= v4.[|java:util:TreeMap$Node.value|]   @type object;
#L122ac4.   if v2 != 0 then goto L122af2;
#L122ac8.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L122ace.   v2:= temp  @type object;
#L122ad0.   if v2 != 0 then goto L122ad6;
#L122ad4.   v1:= 1  @length 4;
#L122ad6.   return v1;
#L122ad8.   v2:= v4.[|java:util:TreeMap$Node.key|]   @type object;
#L122adc.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L122ae2.   v3:= temp  @type object;
#L122ae4.   call temp:=  [|java:lang:Object.equals|](v2, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L122aea.   v2:= temp;
#L122aec.   if v2 == 0 then goto L122ad6;
#L122af0.   goto L122ac0;
#L122af2.   v2:= v4.[|java:util:TreeMap$Node.value|]   @type object;
#L122af6.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L122afc.   v3:= temp  @type object;
#L122afe.   call temp:=  [|java:lang:Object.equals|](v2, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L122b04.   v2:= temp;
#L122b06.   if v2 == 0 then goto L122ad6;
#L122b0a.   goto L122ad4;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$Node.first|] ([|java:util:TreeMap$Node|] v2 @type (this)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.first:()Ljava/util/TreeMap$Node;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122b1c.   v1:= v2  @type object;
#L122b1e.   v0:= v1.[|java:util:TreeMap$Node.left|]   @type object;
#L122b22.   if v0 == 0 then goto L122b2e;
#L122b26.   v1:= v0  @type object;
#L122b28.   v0:= v1.[|java:util:TreeMap$Node.left|]   @type object;
#L122b2c.   goto L122b22;
#L122b2e.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$Node.getKey|] ([|java:util:TreeMap$Node|] v1 @type (this)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.getKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122b40.   v0:= v1.[|java:util:TreeMap$Node.key|]   @type object;
#L122b44.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$Node.getValue|] ([|java:util:TreeMap$Node|] v1 @type (this)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.getValue:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122b58.   v0:= v1.[|java:util:TreeMap$Node.value|]   @type object;
#L122b5c.   return v0  @type object;

   }
    procedure [|int|] [|java:util:TreeMap$Node.hashCode|] ([|java:util:TreeMap$Node|] v3 @type (this)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L122b70.   v1:= 0  @length 4;
#L122b72.   v0:= v3.[|java:util:TreeMap$Node.key|]   @type object;
#L122b76.   if v0 != 0 then goto L122b88;
#L122b7a.   v0:= v1;
#L122b7c.   v2:= v3.[|java:util:TreeMap$Node.value|]   @type object;
#L122b80.   if v2 != 0 then goto L122b96;
#L122b84.   v0:= v0 ^~ v1  @type int;
#L122b86.   return v0;
#L122b88.   v0:= v3.[|java:util:TreeMap$Node.key|]   @type object;
#L122b8c.   call temp:=  [|java:lang:Object.hashCode|](v0) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L122b92.   v0:= temp;
#L122b94.   goto L122b7c;
#L122b96.   v1:= v3.[|java:util:TreeMap$Node.value|]   @type object;
#L122b9a.   call temp:=  [|java:lang:Object.hashCode|](v1) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L122ba0.   v1:= temp;
#L122ba2.   goto L122b84;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$Node.last|] ([|java:util:TreeMap$Node|] v2 @type (this)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.last:()Ljava/util/TreeMap$Node;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122bb4.   v1:= v2  @type object;
#L122bb6.   v0:= v1.[|java:util:TreeMap$Node.right|]   @type object;
#L122bba.   if v0 == 0 then goto L122bc6;
#L122bbe.   v1:= v0  @type object;
#L122bc0.   v0:= v1.[|java:util:TreeMap$Node.right|]   @type object;
#L122bc4.   goto L122bba;
#L122bc6.   return v1  @type object;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$Node.next|] ([|java:util:TreeMap$Node|] v3 @type (this)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.next:()Ljava/util/TreeMap$Node;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L122bd8.   v2:= v3.[|java:util:TreeMap$Node.right|]   @type object;
#L122bdc.   if v2 == 0 then goto L122bee;
#L122be0.   v2:= v3.[|java:util:TreeMap$Node.right|]   @type object;
#L122be4.   call temp:=  [|java:util:TreeMap$Node.first|](v2) @signature [|Ljava/util/TreeMap$Node;.first:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L122bea.   v1:= temp  @type object;
#L122bec.   return v1  @type object;
#L122bee.   v0:= v3  @type object;
#L122bf0.   v1:= v0.[|java:util:TreeMap$Node.parent|]   @type object;
#L122bf4.   if v1 == 0 then goto L122c08;
#L122bf8.   v2:= v1.[|java:util:TreeMap$Node.left|]   @type object;
#L122bfc.   if v2 == v0 then goto L122bec;
#L122c00.   v0:= v1  @type object;
#L122c02.   v1:= v0.[|java:util:TreeMap$Node.parent|]   @type object;
#L122c06.   goto L122bf4;
#L122c08.   v1:= 0  @length 4;
#L122c0a.   goto L122bec;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap$Node.prev|] ([|java:util:TreeMap$Node|] v3 @type (this)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.prev:()Ljava/util/TreeMap$Node;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L122c1c.   v2:= v3.[|java:util:TreeMap$Node.left|]   @type object;
#L122c20.   if v2 == 0 then goto L122c32;
#L122c24.   v2:= v3.[|java:util:TreeMap$Node.left|]   @type object;
#L122c28.   call temp:=  [|java:util:TreeMap$Node.last|](v2) @signature [|Ljava/util/TreeMap$Node;.last:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L122c2e.   v1:= temp  @type object;
#L122c30.   return v1  @type object;
#L122c32.   v0:= v3  @type object;
#L122c34.   v1:= v0.[|java:util:TreeMap$Node.parent|]   @type object;
#L122c38.   if v1 == 0 then goto L122c4c;
#L122c3c.   v2:= v1.[|java:util:TreeMap$Node.right|]   @type object;
#L122c40.   if v2 == v0 then goto L122c30;
#L122c44.   v0:= v1  @type object;
#L122c46.   v1:= v0.[|java:util:TreeMap$Node.parent|]   @type object;
#L122c4a.   goto L122c38;
#L122c4c.   v1:= 0  @length 4;
#L122c4e.   goto L122c30;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$Node.setValue|] ([|java:util:TreeMap$Node|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122c60.   v0:= v1.[|java:util:TreeMap$Node.value|]   @type object;
#L122c64.   v1.[|java:util:TreeMap$Node.value|]  := v2 @type object;
#L122c68.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:TreeMap$Node.toString|] ([|java:util:TreeMap$Node|] v2 @type (this)) @owner [|java:util:TreeMap$Node|] @signature [|Ljava/util/TreeMap$Node;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L122c7c.   v0:= new [|java:lang:StringBuilder|];
#L122c80.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L122c86.   v1:= v2.[|java:util:TreeMap$Node.key|]   @type object;
#L122c8a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L122c90.   v0:= temp  @type object;
#L122c92.   v1:= "=" @type (object, string);
#L122c96.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L122c9c.   v0:= temp  @type object;
#L122c9e.   v1:= v2.[|java:util:TreeMap$Node.value|]   @type object;
#L122ca2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L122ca8.   v0:= temp  @type object;
#L122caa.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L122cb0.   v0:= temp  @type object;
#L122cb2.   return v0  @type object;

   }
record [|java:util:TreeMap$Relation|]  @type class @AccessFlag FINAL_ENUM  extends [|java:lang:Enum|] {
   }
      global [|java:util:TreeMap$Relation|][] @@[|java:util:TreeMap$Relation.$VALUES|]    @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
      global [|java:util:TreeMap$Relation|] @@[|java:util:TreeMap$Relation.CEILING|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:TreeMap$Relation|] @@[|java:util:TreeMap$Relation.CREATE|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:TreeMap$Relation|] @@[|java:util:TreeMap$Relation.EQUAL|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:TreeMap$Relation|] @@[|java:util:TreeMap$Relation.FLOOR|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:TreeMap$Relation|] @@[|java:util:TreeMap$Relation.HIGHER|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
      global [|java:util:TreeMap$Relation|] @@[|java:util:TreeMap$Relation.LOWER|]    @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
    procedure [|void|] [|java:util:TreeMap$Relation.<clinit>|] () @owner [|java:util:TreeMap$Relation|] @signature [|Ljava/util/TreeMap$Relation;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L122cc4.   v7:= 4  @length 4;
#L122cc6.   v6:= 3  @length 4;
#L122cc8.   v5:= 2  @length 4;
#L122cca.   v4:= 1  @length 4;
#L122ccc.   v3:= 0  @length 4;
#L122cce.   v0:= new [|java:util:TreeMap$Relation|];
#L122cd2.   v1:= "LOWER" @type (object, string);
#L122cd6.   call temp:=  [|java:util:TreeMap$Relation.<init>|](v0, v1, v3) @signature [|Ljava/util/TreeMap$Relation;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Relation|] @type direct;
#L122cdc.   @@[|java:util:TreeMap$Relation.LOWER|] := v0  @type object;
#L122ce0.   v0:= new [|java:util:TreeMap$Relation|];
#L122ce4.   v1:= "FLOOR" @type (object, string);
#L122ce8.   call temp:=  [|java:util:TreeMap$Relation.<init>|](v0, v1, v4) @signature [|Ljava/util/TreeMap$Relation;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Relation|] @type direct;
#L122cee.   @@[|java:util:TreeMap$Relation.FLOOR|] := v0  @type object;
#L122cf2.   v0:= new [|java:util:TreeMap$Relation|];
#L122cf6.   v1:= "EQUAL" @type (object, string);
#L122cfa.   call temp:=  [|java:util:TreeMap$Relation.<init>|](v0, v1, v5) @signature [|Ljava/util/TreeMap$Relation;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Relation|] @type direct;
#L122d00.   @@[|java:util:TreeMap$Relation.EQUAL|] := v0  @type object;
#L122d04.   v0:= new [|java:util:TreeMap$Relation|];
#L122d08.   v1:= "CREATE" @type (object, string);
#L122d0c.   call temp:=  [|java:util:TreeMap$Relation.<init>|](v0, v1, v6) @signature [|Ljava/util/TreeMap$Relation;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Relation|] @type direct;
#L122d12.   @@[|java:util:TreeMap$Relation.CREATE|] := v0  @type object;
#L122d16.   v0:= new [|java:util:TreeMap$Relation|];
#L122d1a.   v1:= "CEILING" @type (object, string);
#L122d1e.   call temp:=  [|java:util:TreeMap$Relation.<init>|](v0, v1, v7) @signature [|Ljava/util/TreeMap$Relation;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Relation|] @type direct;
#L122d24.   @@[|java:util:TreeMap$Relation.CEILING|] := v0  @type object;
#L122d28.   v0:= new [|java:util:TreeMap$Relation|];
#L122d2c.   v1:= "HIGHER" @type (object, string);
#L122d30.   v2:= 5  @length 4;
#L122d32.   call temp:=  [|java:util:TreeMap$Relation.<init>|](v0, v1, v2) @signature [|Ljava/util/TreeMap$Relation;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:util:TreeMap$Relation|] @type direct;
#L122d38.   @@[|java:util:TreeMap$Relation.HIGHER|] := v0  @type object;
#L122d3c.   v0:= 6  @length 4;
#L122d3e.   v0:= new [|java:util:TreeMap$Relation|][v0];
#L122d42.   v1:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L122d46.   v0[v3]:= v1  @type object;
#L122d4a.   v1:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L122d4e.   v0[v4]:= v1  @type object;
#L122d52.   v1:= @@[|java:util:TreeMap$Relation.EQUAL|]   @type object;
#L122d56.   v0[v5]:= v1  @type object;
#L122d5a.   v1:= @@[|java:util:TreeMap$Relation.CREATE|]   @type object;
#L122d5e.   v0[v6]:= v1  @type object;
#L122d62.   v1:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L122d66.   v0[v7]:= v1  @type object;
#L122d6a.   v1:= 5  @length 4;
#L122d6c.   v2:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L122d70.   v0[v1]:= v2  @type object;
#L122d74.   @@[|java:util:TreeMap$Relation.$VALUES|] := v0  @type object;
#L122d78.   return @void ;

   }
    procedure [|void|] [|java:util:TreeMap$Relation.<init>|] ([|java:util:TreeMap$Relation|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|int|] v2) @owner [|java:util:TreeMap$Relation|] @signature [|Ljava/util/TreeMap$Relation;.<init>:(Ljava/lang/String;I)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L122d8c.   call temp:=  [|java:lang:Enum.<init>|](v0, v1, v2) @signature [|Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V|] @classDescriptor [|java:lang:Enum|] @type direct;
#L122d92.   return @void ;

   }
    procedure [|java:util:TreeMap$Relation|] [|java:util:TreeMap$Relation.valueOf|] ([|java:lang:String|] v1 @type (object)) @owner [|java:util:TreeMap$Relation|] @signature [|Ljava/util/TreeMap$Relation;.valueOf:(Ljava/lang/String;)Ljava/util/TreeMap$Relation;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L122da4.   v0:= new [|java:util:TreeMap$Relation|];
#L122da8.   call temp:=  [|java:lang:Enum.valueOf|](v0, v1) @signature [|Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;|] @classDescriptor [|java:lang:Enum|] @type static;
#L122dae.   v0:= temp  @type object;
#L122db0.   v0:= ([|java:util:TreeMap$Relation|])v0;
#L122db4.   return v0  @type object;

   }
    procedure [|java:util:TreeMap$Relation|][] [|java:util:TreeMap$Relation.values|] () @owner [|java:util:TreeMap$Relation|] @signature [|Ljava/util/TreeMap$Relation;.values:()[Ljava/util/TreeMap$Relation;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L122dc8.   v0:= @@[|java:util:TreeMap$Relation.$VALUES|]   @type object;
#L122dcc.   call temp:=  [|java:util:TreeMap$Relation[].clone|](v0) @signature [|[Ljava/util/TreeMap$Relation;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$Relation[]|] @type virtual;
#L122dd2.   v0:= temp  @type object;
#L122dd4.   v0:= ([|java:util:TreeMap$Relation|][])v0;
#L122dd8.   return v0  @type object;

   }
    procedure [|java:util:TreeMap$Relation|] [|java:util:TreeMap$Relation.forOrder|] ([|java:util:TreeMap$Relation|] v2 @type (this), [|boolean|] v3) @owner [|java:util:TreeMap$Relation|] @signature [|Ljava/util/TreeMap$Relation;.forOrder:(Z)Ljava/util/TreeMap$Relation;|] @Access  {
      local temp ;
        v0;
        v1;
      
#L122dec.   if v3 == 0 then goto L122df2;
#L122df0.   return v2  @type object;
#L122df2.   v0:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L122df6.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v2) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L122dfc.   v1:= temp;
#L122dfe.   v0:= v0[v1];
#L122e02.   goto L122e34;
#L122e08.   v0:= new [|java:lang:IllegalStateException|];
#L122e0c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L122e12.   throw v0;
#L122e14.   v2:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L122e18.   goto L122df0;
#L122e1a.   v2:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L122e1e.   goto L122df0;
#L122e20.   v2:= @@[|java:util:TreeMap$Relation.EQUAL|]   @type object;
#L122e24.   goto L122df0;
#L122e26.   v2:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L122e2a.   goto L122df0;
#L122e2c.   v2:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L122e30.   goto L122df0;
#L122e32.   
#L122e34.   switch  v0
                 | 1 => goto L122e14
                 | 2 => goto L122e1a
                 | 3 => goto L122e20
                 | 4 => goto L122e26
                 | 5 => goto L122e2c
                 | => goto L122e08;

   }
record [|java:util:TreeMap$SubMap|]  @type class @AccessFlag   extends [|java:util:AbstractMap|], [|java:io:Serializable|] {
      [|java:lang:Object|] [|java:util:TreeMap$SubMap.fromKey|]    @AccessFlag ;
      [|boolean|] [|java:util:TreeMap$SubMap.fromStart|]    @AccessFlag ;
      [|java:util:TreeMap|] [|java:util:TreeMap$SubMap.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|boolean|] [|java:util:TreeMap$SubMap.toEnd|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:TreeMap$SubMap.toKey|]    @AccessFlag ;
   }
      global [|long|] @@[|java:util:TreeMap$SubMap.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:TreeMap$SubMap.<init>|] ([|java:util:TreeMap$SubMap|] v0 @type (this), [|java:util:TreeMap|] v1 @type (object)) @owner [|java:util:TreeMap$SubMap|] @signature [|Ljava/util/TreeMap$SubMap;.<init>:(Ljava/util/TreeMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L122e60.   v0.[|java:util:TreeMap$SubMap.this$0|]  := v1 @type object;
#L122e64.   call temp:=  [|java:util:AbstractMap.<init>|](v0) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L122e6a.   return @void ;

   }
    procedure [|java:util:Set|] [|java:util:TreeMap$SubMap.entrySet|] ([|java:util:TreeMap$SubMap|] v1 @type (this)) @owner [|java:util:TreeMap$SubMap|] @signature [|Ljava/util/TreeMap$SubMap;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L122e7c.   v0:= new [|java:lang:UnsupportedOperationException|];
#L122e80.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L122e86.   throw v0;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap$SubMap.readResolve|] ([|java:util:TreeMap$SubMap|] v7 @type (this)) @owner [|java:util:TreeMap$SubMap|] @signature [|Ljava/util/TreeMap$SubMap;.readResolve:()Ljava/lang/Object;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L122e98.   v0:= v7.[|java:util:TreeMap$SubMap.fromStart|]   @boolean;
#L122e9c.   if v0 == 0 then goto L122eca;
#L122ea0.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L122ea4.   v0:= v7.[|java:util:TreeMap$SubMap.toEnd|]   @boolean;
#L122ea8.   if v0 == 0 then goto L122ed0;
#L122eac.   v6:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L122eb0.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L122eb4.   v1:= v7.[|java:util:TreeMap$SubMap.this$0|]   @type object;
#L122eb8.   v2:= 1  @length 4;
#L122eba.   v3:= v7.[|java:util:TreeMap$SubMap.fromKey|]   @type object;
#L122ebe.   v5:= v7.[|java:util:TreeMap$SubMap.toKey|]   @type object;
#L122ec2.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L122ec8.   return v0  @type object;
#L122eca.   v4:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L122ece.   goto L122ea4;
#L122ed0.   v6:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L122ed4.   goto L122eb0;

   }
record [|java:util:TreeMap|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractMap|], [|java:util:SortedMap|], [|java:util:NavigableMap|], [|java:lang:Cloneable|], [|java:io:Serializable|] {
      [|java:util:Comparator|] [|java:util:TreeMap.comparator|]    @AccessFlag ;
      [|java:util:TreeMap$EntrySet|] [|java:util:TreeMap.entrySet|]    @AccessFlag PRIVATE;
      [|java:util:TreeMap$KeySet|] [|java:util:TreeMap.keySet|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:TreeMap.modCount|]    @AccessFlag ;
      [|java:util:TreeMap$Node|] [|java:util:TreeMap.root|]    @AccessFlag ;
      [|int|] [|java:util:TreeMap.size|]    @AccessFlag ;
   }
      global [|java:util:Comparator|] @@[|java:util:TreeMap.NATURAL_ORDER|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:TreeMap.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:TreeMap.<clinit>|] () @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L122ee8.   v0:= new [|java:util:TreeMap$1|];
#L122eec.   call temp:=  [|java:util:TreeMap$1.<init>|](v0) @signature [|Ljava/util/TreeMap$1;.<init>:()V|] @classDescriptor [|java:util:TreeMap$1|] @type direct;
#L122ef2.   @@[|java:util:TreeMap.NATURAL_ORDER|] := v0  @type object;
#L122ef6.   return @void ;

   }
    procedure [|void|] [|java:util:TreeMap.<init>|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L122f08.   v0:= 0  @length 4;
#L122f0a.   call temp:=  [|java:util:AbstractMap.<init>|](v1) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L122f10.   v1.[|java:util:TreeMap.size|]  := v0;
#L122f14.   v1.[|java:util:TreeMap.modCount|]  := v0;
#L122f18.   v0:= @@[|java:util:TreeMap.NATURAL_ORDER|]   @type object;
#L122f1c.   v1.[|java:util:TreeMap.comparator|]  := v0 @type object;
#L122f20.   return @void ;

   }
    procedure [|void|] [|java:util:TreeMap.<init>|] ([|java:util:TreeMap|] v1 @type (this), [|java:util:Comparator|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L122f34.   v0:= 0  @length 4;
#L122f36.   call temp:=  [|java:util:AbstractMap.<init>|](v1) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L122f3c.   v1.[|java:util:TreeMap.size|]  := v0;
#L122f40.   v1.[|java:util:TreeMap.modCount|]  := v0;
#L122f44.   if v2 == 0 then goto L122f4e;
#L122f48.   v1.[|java:util:TreeMap.comparator|]  := v2 @type object;
#L122f4c.   return @void ;
#L122f4e.   v0:= @@[|java:util:TreeMap.NATURAL_ORDER|]   @type object;
#L122f52.   v1.[|java:util:TreeMap.comparator|]  := v0 @type object;
#L122f56.   goto L122f4c;

   }
    procedure [|void|] [|java:util:TreeMap.<init>|] ([|java:util:TreeMap|] v4 @type (this), [|java:util:Map|] v5 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.<init>:(Ljava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L122f68.   call temp:=  [|java:util:TreeMap.<init>|](v4) @signature [|Ljava/util/TreeMap;.<init>:()V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L122f6e.   call temp:=  [|java:util:Map.entrySet|](v5) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L122f74.   v2:= temp  @type object;
#L122f76.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L122f7c.   v1:= temp  @type object;
#L122f7e.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L122f84.   v2:= temp;
#L122f86.   if v2 == 0 then goto L122fae;
#L122f8a.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L122f90.   v0:= temp  @type object;
#L122f92.   v0:= ([|java:util:Map$Entry|])v0;
#L122f96.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L122f9c.   v2:= temp  @type object;
#L122f9e.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L122fa4.   v3:= temp  @type object;
#L122fa6.   call temp:=  [|java:util:TreeMap.putInternal|](v4, v2, v3) @signature [|Ljava/util/TreeMap;.putInternal:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L122fac.   goto L122f7e;
#L122fae.   return @void ;

   }
    procedure [|void|] [|java:util:TreeMap.<init>|] ([|java:util:TreeMap|] v5 @type (this), [|java:util:SortedMap|] v6 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.<init>:(Ljava/util/SortedMap;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L122fc0.   v3:= 0  @length 4;
#L122fc2.   call temp:=  [|java:util:AbstractMap.<init>|](v5) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L122fc8.   v5.[|java:util:TreeMap.size|]  := v3;
#L122fcc.   v5.[|java:util:TreeMap.modCount|]  := v3;
#L122fd0.   call temp:=  [|java:util:SortedMap.comparator|](v6) @signature [|Ljava/util/SortedMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:SortedMap|] @type interface;
#L122fd6.   v2:= temp  @type object;
#L122fd8.   if v2 == 0 then goto L123020;
#L122fdc.   v5.[|java:util:TreeMap.comparator|]  := v2 @type object;
#L122fe0.   call temp:=  [|java:util:SortedMap.entrySet|](v6) @signature [|Ljava/util/SortedMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:SortedMap|] @type interface;
#L122fe6.   v3:= temp  @type object;
#L122fe8.   call temp:=  [|java:util:Set.iterator|](v3) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L122fee.   v1:= temp  @type object;
#L122ff0.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L122ff6.   v3:= temp;
#L122ff8.   if v3 == 0 then goto L12302a;
#L122ffc.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L123002.   v0:= temp  @type object;
#L123004.   v0:= ([|java:util:Map$Entry|])v0;
#L123008.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12300e.   v3:= temp  @type object;
#L123010.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L123016.   v4:= temp  @type object;
#L123018.   call temp:=  [|java:util:TreeMap.putInternal|](v5, v3, v4) @signature [|Ljava/util/TreeMap;.putInternal:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12301e.   goto L122ff0;
#L123020.   v3:= @@[|java:util:TreeMap.NATURAL_ORDER|]   @type object;
#L123024.   v5.[|java:util:TreeMap.comparator|]  := v3 @type object;
#L123028.   goto L122fe0;
#L12302a.   return @void ;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.access$000|] ([|java:util:TreeMap|] v1 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.access$000:(Ljava/util/TreeMap;)Ljava/util/Map$Entry;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12303c.   call temp:=  [|java:util:TreeMap.internalPollFirstEntry|](v1) @signature [|Ljava/util/TreeMap;.internalPollFirstEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123042.   v0:= temp  @type object;
#L123044.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.access$100|] ([|java:util:TreeMap|] v1 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.access$100:(Ljava/util/TreeMap;)Ljava/util/Map$Entry;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L123058.   call temp:=  [|java:util:TreeMap.internalPollLastEntry|](v1) @signature [|Ljava/util/TreeMap;.internalPollLastEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L12305e.   v0:= temp  @type object;
#L123060.   return v0  @type object;

   }
    procedure [|java:util:AbstractMap$SimpleImmutableEntry|] [|java:util:TreeMap.access$300|] ([|java:util:TreeMap|] v1 @type (object), [|java:util:Map$Entry|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.access$300:(Ljava/util/TreeMap;Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L123074.   call temp:=  [|java:util:TreeMap.immutableCopy|](v1, v2) @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L12307a.   v0:= temp  @type object;
#L12307c.   return v0  @type object;

   }
    procedure [|int|] [|java:util:TreeMap.count|] ([|java:util:Iterator|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.count:(Ljava/util/Iterator;)I|] @Access STATIC {
      local temp ;
        v0;
        v1;
      
#L123090.   v0:= 0  @length 4;
#L123092.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L123098.   v1:= temp;
#L12309a.   if v1 == 0 then goto L1230aa;
#L12309e.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1230a4.   v0:= v0 + 1;
#L1230a8.   goto L123092;
#L1230aa.   return v0;

   }
    procedure [|java:util:AbstractMap$SimpleImmutableEntry|] [|java:util:TreeMap.immutableCopy|] ([|java:util:TreeMap|] v1 @type (this), [|java:util:Map$Entry|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1230bc.   if v2 != 0 then goto L1230c4;
#L1230c0.   v0:= 0  @length 4;
#L1230c2.   return v0  @type object;
#L1230c4.   v0:= new [|java:util:AbstractMap$SimpleImmutableEntry|];
#L1230c8.   call temp:=  [|java:util:AbstractMap$SimpleImmutableEntry.<init>|](v0, v2) @signature [|Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/util/Map$Entry;)V|] @classDescriptor [|java:util:AbstractMap$SimpleImmutableEntry|] @type direct;
#L1230ce.   goto L1230c2;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.internalPollFirstEntry|] ([|java:util:TreeMap|] v2 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.internalPollFirstEntry:()Ljava/util/Map$Entry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1230e0.   v1:= v2.[|java:util:TreeMap.root|]   @type object;
#L1230e4.   if v1 != 0 then goto L1230ec;
#L1230e8.   v0:= 0  @length 4;
#L1230ea.   return v0  @type object;
#L1230ec.   v1:= v2.[|java:util:TreeMap.root|]   @type object;
#L1230f0.   call temp:=  [|java:util:TreeMap$Node.first|](v1) @signature [|Ljava/util/TreeMap$Node;.first:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L1230f6.   v0:= temp  @type object;
#L1230f8.   call temp:=  [|java:util:TreeMap.removeInternal|](v2, v0) @signature [|Ljava/util/TreeMap;.removeInternal:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1230fe.   goto L1230ea;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.internalPollLastEntry|] ([|java:util:TreeMap|] v2 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.internalPollLastEntry:()Ljava/util/Map$Entry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L123110.   v1:= v2.[|java:util:TreeMap.root|]   @type object;
#L123114.   if v1 != 0 then goto L12311c;
#L123118.   v0:= 0  @length 4;
#L12311a.   return v0  @type object;
#L12311c.   v1:= v2.[|java:util:TreeMap.root|]   @type object;
#L123120.   call temp:=  [|java:util:TreeMap$Node.last|](v1) @signature [|Ljava/util/TreeMap$Node;.last:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123126.   v0:= temp  @type object;
#L123128.   call temp:=  [|java:util:TreeMap.removeInternal|](v2, v0) @signature [|Ljava/util/TreeMap;.removeInternal:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L12312e.   goto L12311a;

   }
    procedure [|void|] [|java:util:TreeMap.readObject|] ([|java:util:TreeMap|] v5 @type (this), [|java:io:ObjectInputStream|] v6 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L123140.   call temp:=  [|java:io:ObjectInputStream.readFields|](v6) @signature [|Ljava/io/ObjectInputStream;.readFields:()Ljava/io/ObjectInputStream$GetField;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L123146.   v0:= temp  @type object;
#L123148.   v3:= "comparator" @type (object, string);
#L12314c.   v4:= 0  @length 4;
#L12314e.   call temp:=  [|java:io:ObjectInputStream$GetField.get|](v0, v3, v4) @signature [|Ljava/io/ObjectInputStream$GetField;.get:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream$GetField|] @type virtual;
#L123154.   v3:= temp  @type object;
#L123156.   v3:= ([|java:util:Comparator|])v3;
#L12315a.   v5.[|java:util:TreeMap.comparator|]  := v3 @type object;
#L12315e.   v3:= v5.[|java:util:TreeMap.comparator|]   @type object;
#L123162.   if v3 != 0 then goto L12316e;
#L123166.   v3:= @@[|java:util:TreeMap.NATURAL_ORDER|]   @type object;
#L12316a.   v5.[|java:util:TreeMap.comparator|]  := v3 @type object;
#L12316e.   call temp:=  [|java:io:ObjectInputStream.readInt|](v6) @signature [|Ljava/io/ObjectInputStream;.readInt:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L123174.   v2:= temp;
#L123176.   v1:= 0  @length 4;
#L123178.   if v1 >= v2 then goto L123198;
#L12317c.   call temp:=  [|java:io:ObjectInputStream.readObject|](v6) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L123182.   v3:= temp  @type object;
#L123184.   call temp:=  [|java:io:ObjectInputStream.readObject|](v6) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12318a.   v4:= temp  @type object;
#L12318c.   call temp:=  [|java:util:TreeMap.putInternal|](v5, v3, v4) @signature [|Ljava/util/TreeMap;.putInternal:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123192.   v1:= v1 + 1;
#L123196.   goto L123178;
#L123198.   return @void ;

   }
    procedure [|void|] [|java:util:TreeMap.rebalance|] ([|java:util:TreeMap|] v18 @type (this), [|java:util:TreeMap$Node|] v19 @type (object), [|boolean|] v20) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.rebalance:(Ljava/util/TreeMap$Node;Z)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
      
#L1231ac.   v9:= v19  @type object;
#L1231b0.   if v9 == 0 then goto L12321e;
#L1231b4.   v2:= v9.[|java:util:TreeMap$Node.left|]   @type object;
#L1231b8.   v10:= v9.[|java:util:TreeMap$Node.right|]   @type object;
#L1231bc.   if v2 == 0 then goto L123220;
#L1231c0.   v4:= v2.[|java:util:TreeMap$Node.height|] ;
#L1231c4.   if v10 == 0 then goto L123224;
#L1231c8.   v12:= v10.[|java:util:TreeMap$Node.height|] ;
#L1231cc.   v1:= v4 - v12  @type int;
#L1231d0.   v17:= -2  @length 16;
#L1231d4.   v0:= v17;
#L1231d8.   if v1 != v0 then goto L123248;
#L1231dc.   v13:= v10.[|java:util:TreeMap$Node.left|]   @type object;
#L1231e0.   v15:= v10.[|java:util:TreeMap$Node.right|]   @type object;
#L1231e4.   if v15 == 0 then goto L123228;
#L1231e8.   v0:= v15.[|java:util:TreeMap$Node.height|] ;
#L1231ec.   v16:= v0;
#L1231f0.   if v13 == 0 then goto L12322e;
#L1231f4.   v14:= v13.[|java:util:TreeMap$Node.height|] ;
#L1231f8.   v11:= v14 - v16  @type int;
#L1231fc.   v17:= -1  @length 16;
#L123200.   v0:= v17;
#L123204.   if v11 == v0 then goto L123210;
#L123208.   if v11 != 0 then goto L123232;
#L12320c.   if v20 != 0 then goto L123232;
#L123210.   v0:= v18  @type object;
#L123214.   call temp:=  [|java:util:TreeMap.rotateLeft|](v0, v9) @signature [|Ljava/util/TreeMap;.rotateLeft:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L12321a.   if v20 == 0 then goto L123292;
#L12321e.   return @void ;
#L123220.   v4:= 0  @length 4;
#L123222.   goto L1231c4;
#L123224.   v12:= 0  @length 4;
#L123226.   goto L1231cc;
#L123228.   v16:= 0  @length 16;
#L12322c.   goto L1231f0;
#L12322e.   v14:= 0  @length 4;
#L123230.   goto L1231f8;
#L123232.   v0:= v18  @type object;
#L123236.   call temp:=  [|java:util:TreeMap.rotateRight|](v0, v10) @signature [|Ljava/util/TreeMap;.rotateRight:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L12323c.   v0:= v18  @type object;
#L123240.   call temp:=  [|java:util:TreeMap.rotateLeft|](v0, v9) @signature [|Ljava/util/TreeMap;.rotateLeft:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123246.   goto L12321a;
#L123248.   v17:= 2  @length 16;
#L12324c.   v0:= v17;
#L123250.   if v1 != v0 then goto L1232b6;
#L123254.   v5:= v2.[|java:util:TreeMap$Node.left|]   @type object;
#L123258.   v7:= v2.[|java:util:TreeMap$Node.right|]   @type object;
#L12325c.   if v7 == 0 then goto L123298;
#L123260.   v8:= v7.[|java:util:TreeMap$Node.height|] ;
#L123264.   if v5 == 0 then goto L12329c;
#L123268.   v6:= v5.[|java:util:TreeMap$Node.height|] ;
#L12326c.   v3:= v6 - v8  @type int;
#L123270.   v17:= 1  @length 16;
#L123274.   v0:= v17;
#L123278.   if v3 == v0 then goto L123284;
#L12327c.   if v3 != 0 then goto L1232a0;
#L123280.   if v20 != 0 then goto L1232a0;
#L123284.   v0:= v18  @type object;
#L123288.   call temp:=  [|java:util:TreeMap.rotateRight|](v0, v9) @signature [|Ljava/util/TreeMap;.rotateRight:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L12328e.   if v20 != 0 then goto L12321e;
#L123292.   v9:= v9.[|java:util:TreeMap$Node.parent|]   @type object;
#L123296.   goto L1231b0;
#L123298.   v8:= 0  @length 4;
#L12329a.   goto L123264;
#L12329c.   v6:= 0  @length 4;
#L12329e.   goto L12326c;
#L1232a0.   v0:= v18  @type object;
#L1232a4.   call temp:=  [|java:util:TreeMap.rotateLeft|](v0, v2) @signature [|Ljava/util/TreeMap;.rotateLeft:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L1232aa.   v0:= v18  @type object;
#L1232ae.   call temp:=  [|java:util:TreeMap.rotateRight|](v0, v9) @signature [|Ljava/util/TreeMap;.rotateRight:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L1232b4.   goto L12328e;
#L1232b6.   if v1 != 0 then goto L1232cc;
#L1232ba.   v17:= v4 + 1;
#L1232be.   v0:= v17;
#L1232c2.   v9.[|java:util:TreeMap$Node.height|]  := v0;
#L1232c6.   if v20 == 0 then goto L123292;
#L1232ca.   goto L12321e;
#L1232cc.   call temp:=  [|java:lang:Math.max|](v4, v12) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L1232d2.   v17:= temp;
#L1232d4.   v17:= v17 + 1;
#L1232d8.   v0:= v17;
#L1232dc.   v9.[|java:util:TreeMap$Node.height|]  := v0;
#L1232e0.   if v20 != 0 then goto L123292;
#L1232e4.   goto L12321e;

   }
    procedure [|void|] [|java:util:TreeMap.replaceInParent|] ([|java:util:TreeMap|] v2 @type (this), [|java:util:TreeMap$Node|] v3 @type (object), [|java:util:TreeMap$Node|] v4 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.replaceInParent:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L1232f8.   v0:= v3.[|java:util:TreeMap$Node.parent|]   @type object;
#L1232fc.   v1:= 0  @length 4;
#L1232fe.   v3.[|java:util:TreeMap$Node.parent|]  := v1 @type object;
#L123302.   if v4 == 0 then goto L12330a;
#L123306.   v4.[|java:util:TreeMap$Node.parent|]  := v0 @type object;
#L12330a.   if v0 == 0 then goto L123322;
#L12330e.   v1:= v0.[|java:util:TreeMap$Node.left|]   @type object;
#L123312.   if v1 != v3 then goto L12331c;
#L123316.   v0.[|java:util:TreeMap$Node.left|]  := v4 @type object;
#L12331a.   return @void ;
#L12331c.   v0.[|java:util:TreeMap$Node.right|]  := v4 @type object;
#L123320.   goto L12331a;
#L123322.   v2.[|java:util:TreeMap.root|]  := v4 @type object;
#L123326.   goto L12331a;

   }
    procedure [|void|] [|java:util:TreeMap.rotateLeft|] ([|java:util:TreeMap|] v7 @type (this), [|java:util:TreeMap$Node|] v8 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.rotateLeft:(Ljava/util/TreeMap$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L123338.   v5:= 0  @length 4;
#L12333a.   v0:= v8.[|java:util:TreeMap$Node.left|]   @type object;
#L12333e.   v1:= v8.[|java:util:TreeMap$Node.right|]   @type object;
#L123342.   v2:= v1.[|java:util:TreeMap$Node.left|]   @type object;
#L123346.   v3:= v1.[|java:util:TreeMap$Node.right|]   @type object;
#L12334a.   v8.[|java:util:TreeMap$Node.right|]  := v2 @type object;
#L12334e.   if v2 == 0 then goto L123356;
#L123352.   v2.[|java:util:TreeMap$Node.parent|]  := v8 @type object;
#L123356.   call temp:=  [|java:util:TreeMap.replaceInParent|](v7, v8, v1) @signature [|Ljava/util/TreeMap;.replaceInParent:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L12335c.   v1.[|java:util:TreeMap$Node.left|]  := v8 @type object;
#L123360.   v8.[|java:util:TreeMap$Node.parent|]  := v1 @type object;
#L123364.   if v0 == 0 then goto L1233a4;
#L123368.   v4:= v0.[|java:util:TreeMap$Node.height|] ;
#L12336c.   v6:= v4;
#L12336e.   if v2 == 0 then goto L1233a8;
#L123372.   v4:= v2.[|java:util:TreeMap$Node.height|] ;
#L123376.   call temp:=  [|java:lang:Math.max|](v6, v4) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L12337c.   v4:= temp;
#L12337e.   v4:= v4 + 1;
#L123382.   v8.[|java:util:TreeMap$Node.height|]  := v4;
#L123386.   v4:= v8.[|java:util:TreeMap$Node.height|] ;
#L12338a.   if v3 == 0 then goto L123392;
#L12338e.   v5:= v3.[|java:util:TreeMap$Node.height|] ;
#L123392.   call temp:=  [|java:lang:Math.max|](v4, v5) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L123398.   v4:= temp;
#L12339a.   v4:= v4 + 1;
#L12339e.   v1.[|java:util:TreeMap$Node.height|]  := v4;
#L1233a2.   return @void ;
#L1233a4.   v6:= v5;
#L1233a6.   goto L12336e;
#L1233a8.   v4:= v5;
#L1233aa.   goto L123376;

   }
    procedure [|void|] [|java:util:TreeMap.rotateRight|] ([|java:util:TreeMap|] v7 @type (this), [|java:util:TreeMap$Node|] v8 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.rotateRight:(Ljava/util/TreeMap$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1233bc.   v5:= 0  @length 4;
#L1233be.   v0:= v8.[|java:util:TreeMap$Node.left|]   @type object;
#L1233c2.   v3:= v8.[|java:util:TreeMap$Node.right|]   @type object;
#L1233c6.   v1:= v0.[|java:util:TreeMap$Node.left|]   @type object;
#L1233ca.   v2:= v0.[|java:util:TreeMap$Node.right|]   @type object;
#L1233ce.   v8.[|java:util:TreeMap$Node.left|]  := v2 @type object;
#L1233d2.   if v2 == 0 then goto L1233da;
#L1233d6.   v2.[|java:util:TreeMap$Node.parent|]  := v8 @type object;
#L1233da.   call temp:=  [|java:util:TreeMap.replaceInParent|](v7, v8, v0) @signature [|Ljava/util/TreeMap;.replaceInParent:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L1233e0.   v0.[|java:util:TreeMap$Node.right|]  := v8 @type object;
#L1233e4.   v8.[|java:util:TreeMap$Node.parent|]  := v0 @type object;
#L1233e8.   if v3 == 0 then goto L123428;
#L1233ec.   v4:= v3.[|java:util:TreeMap$Node.height|] ;
#L1233f0.   v6:= v4;
#L1233f2.   if v2 == 0 then goto L12342c;
#L1233f6.   v4:= v2.[|java:util:TreeMap$Node.height|] ;
#L1233fa.   call temp:=  [|java:lang:Math.max|](v6, v4) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L123400.   v4:= temp;
#L123402.   v4:= v4 + 1;
#L123406.   v8.[|java:util:TreeMap$Node.height|]  := v4;
#L12340a.   v4:= v8.[|java:util:TreeMap$Node.height|] ;
#L12340e.   if v1 == 0 then goto L123416;
#L123412.   v5:= v1.[|java:util:TreeMap$Node.height|] ;
#L123416.   call temp:=  [|java:lang:Math.max|](v4, v5) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L12341c.   v4:= temp;
#L12341e.   v4:= v4 + 1;
#L123422.   v0.[|java:util:TreeMap$Node.height|]  := v4;
#L123426.   return @void ;
#L123428.   v6:= v5;
#L12342a.   goto L1233f2;
#L12342c.   v4:= v5;
#L12342e.   goto L1233fa;

   }
    procedure [|void|] [|java:util:TreeMap.writeObject|] ([|java:util:TreeMap|] v5 @type (this), [|java:io:ObjectOutputStream|] v6 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L123440.   call temp:=  [|java:io:ObjectOutputStream.putFields|](v6) @signature [|Ljava/io/ObjectOutputStream;.putFields:()Ljava/io/ObjectOutputStream$PutField;|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L123446.   v2:= temp  @type object;
#L123448.   v3:= "comparator" @type (object, string);
#L12344c.   call temp:=  [|java:util:TreeMap.comparator|](v5) @signature [|Ljava/util/TreeMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123452.   v4:= temp  @type object;
#L123454.   call temp:=  [|java:io:ObjectOutputStream$PutField.put|](v2, v3, v4) @signature [|Ljava/io/ObjectOutputStream$PutField;.put:(Ljava/lang/String;Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream$PutField|] @type virtual;
#L12345a.   call temp:=  [|java:io:ObjectOutputStream.writeFields|](v6) @signature [|Ljava/io/ObjectOutputStream;.writeFields:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L123460.   v2:= v5.[|java:util:TreeMap.size|] ;
#L123464.   call temp:=  [|java:io:ObjectOutputStream.writeInt|](v6, v2) @signature [|Ljava/io/ObjectOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12346a.   call temp:=  [|java:util:TreeMap.entrySet|](v5) @signature [|Ljava/util/TreeMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123470.   v2:= temp  @type object;
#L123472.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L123478.   v1:= temp  @type object;
#L12347a.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L123480.   v2:= temp;
#L123482.   if v2 == 0 then goto L1234b0;
#L123486.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12348c.   v0:= temp  @type object;
#L12348e.   v0:= ([|java:util:Map$Entry|])v0;
#L123492.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L123498.   v2:= temp  @type object;
#L12349a.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v6, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1234a0.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L1234a6.   v2:= temp  @type object;
#L1234a8.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v6, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1234ae.   goto L12347a;
#L1234b0.   return @void ;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.ceilingEntry|] ([|java:util:TreeMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.ceilingEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1234c4.   v0:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L1234c8.   call temp:=  [|java:util:TreeMap.find|](v1, v2, v0) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1234ce.   v0:= temp  @type object;
#L1234d0.   call temp:=  [|java:util:TreeMap.immutableCopy|](v1, v0) @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L1234d6.   v0:= temp  @type object;
#L1234d8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.ceilingKey|] ([|java:util:TreeMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1234ec.   v1:= @@[|java:util:TreeMap$Relation.CEILING|]   @type object;
#L1234f0.   call temp:=  [|java:util:TreeMap.find|](v2, v3, v1) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1234f6.   v0:= temp  @type object;
#L1234f8.   if v0 == 0 then goto L123506;
#L1234fc.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L123502.   v1:= temp  @type object;
#L123504.   return v1  @type object;
#L123506.   v1:= 0  @length 4;
#L123508.   goto L123504;

   }
    procedure [|void|] [|java:util:TreeMap.clear|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12351c.   v0:= 0  @length 4;
#L12351e.   v1.[|java:util:TreeMap.root|]  := v0 @type object;
#L123522.   v0:= 0  @length 4;
#L123524.   v1.[|java:util:TreeMap.size|]  := v0;
#L123528.   v0:= v1.[|java:util:TreeMap.modCount|] ;
#L12352c.   v0:= v0 + 1;
#L123530.   v1.[|java:util:TreeMap.modCount|]  := v0;
#L123534.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.clone|] ([|java:util:TreeMap|] v4 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L123548.   v2:= 0  @length 4;
#L12354a.   call temp:=  [|java:util:AbstractMap.clone|](v4) @signature [|Ljava/util/AbstractMap;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractMap|] @type super;
#L123550.   v1:= temp  @type object;
#L123552.   v1:= ([|java:util:TreeMap|])v1;
#L123556.   v3:= v4.[|java:util:TreeMap.root|]   @type object;
#L12355a.   if v3 == 0 then goto L12356c;
#L12355e.   v2:= v4.[|java:util:TreeMap.root|]   @type object;
#L123562.   v3:= 0  @length 4;
#L123564.   call temp:=  [|java:util:TreeMap$Node.copy|](v2, v3) @signature [|Ljava/util/TreeMap$Node;.copy:(Ljava/util/TreeMap$Node;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L12356a.   v2:= temp  @type object;
#L12356c.   v1.[|java:util:TreeMap.root|]  := v2 @type object;
#L123570.   v2:= 0  @length 4;
#L123572.   v1.[|java:util:TreeMap.entrySet|]  := v2 @type object;
#L123576.   v2:= 0  @length 4;
#L123578.   v1.[|java:util:TreeMap.keySet|]  := v2 @type object;
#L12357c.   return v1  @type object;
#L12357e.   v0:= Exception  @type object;
#L123580.   v2:= new [|java:lang:AssertionError|];
#L123584.   call temp:=  [|java:lang:AssertionError.<init>|](v2) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L12358a.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L12354a..L12357c] goto L12357e;

   }
    procedure [|java:util:Comparator|] [|java:util:TreeMap.comparator|] ([|java:util:TreeMap|] v2 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1235ac.   v0:= v2.[|java:util:TreeMap.comparator|]   @type object;
#L1235b0.   v1:= @@[|java:util:TreeMap.NATURAL_ORDER|]   @type object;
#L1235b4.   if v0 == v1 then goto L1235be;
#L1235b8.   v0:= v2.[|java:util:TreeMap.comparator|]   @type object;
#L1235bc.   return v0  @type object;
#L1235be.   v0:= 0  @length 4;
#L1235c0.   goto L1235bc;

   }
    procedure [|boolean|] [|java:util:TreeMap.containsKey|] ([|java:util:TreeMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1235d4.   call temp:=  [|java:util:TreeMap.findByObject|](v1, v2) @signature [|Ljava/util/TreeMap;.findByObject:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1235da.   v0:= temp  @type object;
#L1235dc.   if v0 == 0 then goto L1235e4;
#L1235e0.   v0:= 1  @length 4;
#L1235e2.   return v0;
#L1235e4.   v0:= 0  @length 4;
#L1235e6.   goto L1235e2;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap.descendingKeySet|] ([|java:util:TreeMap|] v7 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.descendingKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1235f8.   v3:= 0  @length 4;
#L1235fa.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L1235fe.   v2:= 0  @length 4;
#L123600.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L123604.   v6:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L123608.   v1:= v7  @type object;
#L12360a.   v5:= v3  @type object;
#L12360c.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L123612.   call temp:=  [|java:util:TreeMap$BoundedMap.navigableKeySet|](v0) @signature [|Ljava/util/TreeMap$BoundedMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type virtual;
#L123618.   v0:= temp  @type object;
#L12361a.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap.descendingMap|] ([|java:util:TreeMap|] v7 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.descendingMap:()Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12362c.   v3:= 0  @length 4;
#L12362e.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L123632.   v2:= 0  @length 4;
#L123634.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L123638.   v6:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L12363c.   v1:= v7  @type object;
#L12363e.   v5:= v3  @type object;
#L123640.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L123646.   return v0  @type object;

   }
    procedure [|java:util:Set|] [|java:util:TreeMap.entrySet|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123658.   v0:= v1.[|java:util:TreeMap.entrySet|]   @type object;
#L12365c.   if v0 == 0 then goto L123662;
#L123660.   return v0  @type object;
#L123662.   v0:= new [|java:util:TreeMap$EntrySet|];
#L123666.   call temp:=  [|java:util:TreeMap$EntrySet.<init>|](v0, v1) @signature [|Ljava/util/TreeMap$EntrySet;.<init>:(Ljava/util/TreeMap;)V|] @classDescriptor [|java:util:TreeMap$EntrySet|] @type direct;
#L12366c.   v1.[|java:util:TreeMap.entrySet|]  := v0 @type object;
#L123670.   goto L123660;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap.find|] ([|java:util:TreeMap|] v9 @type (this), [|java:lang:Object|] v10 @type (object), [|java:util:TreeMap$Relation|] v11 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L123684.   v8:= 1  @length 4;
#L123686.   v6:= 0  @length 4;
#L123688.   v5:= v9.[|java:util:TreeMap.root|]   @type object;
#L12368c.   if v5 != 0 then goto L123712;
#L123690.   v5:= v9.[|java:util:TreeMap.comparator|]   @type object;
#L123694.   v7:= @@[|java:util:TreeMap.NATURAL_ORDER|]   @type object;
#L123698.   if v5 != v7 then goto L1236e6;
#L12369c.   v5:= instanceof @varname v10 @type [|java:lang:Comparable|];
#L1236a0.   if v5 != 0 then goto L1236e6;
#L1236a4.   v5:= new [|java:lang:ClassCastException|];
#L1236a8.   v6:= new [|java:lang:StringBuilder|];
#L1236ac.   call temp:=  [|java:lang:StringBuilder.<init>|](v6) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1236b2.   call temp:=  [|java:lang:Object.getClass|](v10) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1236b8.   v7:= temp  @type object;
#L1236ba.   call temp:=  [|java:lang:Class.getName|](v7) @signature [|Ljava/lang/Class;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1236c0.   v7:= temp  @type object;
#L1236c2.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1236c8.   v6:= temp  @type object;
#L1236ca.   v7:= " is not Comparable" @type (object, string);
#L1236ce.   call temp:=  [|java:lang:StringBuilder.append|](v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1236d4.   v6:= temp  @type object;
#L1236d6.   call temp:=  [|java:lang:StringBuilder.toString|](v6) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1236dc.   v6:= temp  @type object;
#L1236de.   call temp:=  [|java:lang:ClassCastException.<init>|](v5, v6) @signature [|Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:ClassCastException|] @type direct;
#L1236e4.   throw v5;
#L1236e6.   v5:= @@[|java:util:TreeMap$Relation.CREATE|]   @type object;
#L1236ea.   if v11 != v5 then goto L123710;
#L1236ee.   v5:= new [|java:util:TreeMap$Node|];
#L1236f2.   call temp:=  [|java:util:TreeMap$Node.<init>|](v5, v6, v10) @signature [|Ljava/util/TreeMap$Node;.<init>:(Ljava/util/TreeMap$Node;Ljava/lang/Object;)V|] @classDescriptor [|java:util:TreeMap$Node|] @type direct;
#L1236f8.   v9.[|java:util:TreeMap.root|]  := v5 @type object;
#L1236fc.   v9.[|java:util:TreeMap.size|]  := v8;
#L123700.   v5:= v9.[|java:util:TreeMap.modCount|] ;
#L123704.   v5:= v5 + 1;
#L123708.   v9.[|java:util:TreeMap.modCount|]  := v5;
#L12370c.   v6:= v9.[|java:util:TreeMap.root|]   @type object;
#L123710.   return v6  @type object;
#L123712.   v5:= v9.[|java:util:TreeMap.comparator|]   @type object;
#L123716.   v7:= @@[|java:util:TreeMap.NATURAL_ORDER|]   @type object;
#L12371a.   if v5 != v7 then goto L123764;
#L12371e.   v5:= v10  @type object;
#L123720.   v5:= ([|java:lang:Comparable|])v5;
#L123724.   v1:= v5  @type object;
#L123726.   v4:= v9.[|java:util:TreeMap.root|]   @type object;
#L12372a.   if v1 == 0 then goto L123768;
#L12372e.   v5:= v4.[|java:util:TreeMap$Node.key|]   @type object;
#L123732.   call temp:=  [|java:lang:Comparable.compareTo|](v1, v5) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L123738.   v2:= temp;
#L12373a.   if v2 != 0 then goto L123754;
#L12373e.   v5:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L123742.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v11) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L123748.   v7:= temp;
#L12374a.   v5:= v5[v7];
#L12374e.   goto L12384c;
#L123754.   if v2 >= 0 then goto L123792;
#L123758.   v0:= v4.[|java:util:TreeMap$Node.left|]   @type object;
#L12375c.   if v0 == 0 then goto L123798;
#L123760.   v4:= v0  @type object;
#L123762.   goto L12372a;
#L123764.   v1:= v6  @type object;
#L123766.   goto L123726;
#L123768.   v5:= v9.[|java:util:TreeMap.comparator|]   @type object;
#L12376c.   v7:= v4.[|java:util:TreeMap$Node.key|]   @type object;
#L123770.   call temp:=  [|java:util:Comparator.compare|](v5, v10, v7) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L123776.   v2:= temp;
#L123778.   goto L12373a;
#L12377a.   call temp:=  [|java:util:TreeMap$Node.prev|](v4) @signature [|Ljava/util/TreeMap$Node;.prev:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123780.   v6:= temp  @type object;
#L123782.   goto L123710;
#L123784.   v6:= v4  @type object;
#L123786.   goto L123710;
#L123788.   call temp:=  [|java:util:TreeMap$Node.next|](v4) @signature [|Ljava/util/TreeMap$Node;.next:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L12378e.   v6:= temp  @type object;
#L123790.   goto L123710;
#L123792.   v0:= v4.[|java:util:TreeMap$Node.right|]   @type object;
#L123796.   goto L12375c;
#L123798.   if v2 >= 0 then goto L1237f2;
#L12379c.   v5:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L1237a0.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v11) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L1237a6.   v7:= temp;
#L1237a8.   v5:= v5[v7];
#L1237ac.   goto L12386c;
#L1237b2.   goto L12372a;
#L1237b4.   call temp:=  [|java:util:TreeMap$Node.prev|](v4) @signature [|Ljava/util/TreeMap$Node;.prev:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L1237ba.   v6:= temp  @type object;
#L1237bc.   goto L123710;
#L1237be.   v6:= v4  @type object;
#L1237c0.   goto L123710;
#L1237c2.   v3:= new [|java:util:TreeMap$Node|];
#L1237c6.   call temp:=  [|java:util:TreeMap$Node.<init>|](v3, v4, v10) @signature [|Ljava/util/TreeMap$Node;.<init>:(Ljava/util/TreeMap$Node;Ljava/lang/Object;)V|] @classDescriptor [|java:util:TreeMap$Node|] @type direct;
#L1237cc.   v4.[|java:util:TreeMap$Node.left|]  := v3 @type object;
#L1237d0.   v5:= v9.[|java:util:TreeMap.size|] ;
#L1237d4.   v5:= v5 + 1;
#L1237d8.   v9.[|java:util:TreeMap.size|]  := v5;
#L1237dc.   v5:= v9.[|java:util:TreeMap.modCount|] ;
#L1237e0.   v5:= v5 + 1;
#L1237e4.   v9.[|java:util:TreeMap.modCount|]  := v5;
#L1237e8.   call temp:=  [|java:util:TreeMap.rebalance|](v9, v4, v8) @signature [|Ljava/util/TreeMap;.rebalance:(Ljava/util/TreeMap$Node;Z)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L1237ee.   v6:= v3  @type object;
#L1237f0.   goto L123710;
#L1237f2.   v5:= @@[|java:util:TreeMap$2.$SwitchMap$java$util$TreeMap$Relation|]   @type object;
#L1237f6.   call temp:=  [|java:util:TreeMap$Relation.ordinal|](v11) @signature [|Ljava/util/TreeMap$Relation;.ordinal:()I|] @classDescriptor [|java:util:TreeMap$Relation|] @type virtual;
#L1237fc.   v7:= temp;
#L1237fe.   v5:= v5[v7];
#L123802.   goto L12388c;
#L123808.   goto L12372a;
#L12380a.   v6:= v4  @type object;
#L12380c.   goto L123710;
#L12380e.   call temp:=  [|java:util:TreeMap$Node.next|](v4) @signature [|Ljava/util/TreeMap$Node;.next:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123814.   v6:= temp  @type object;
#L123816.   goto L123710;
#L12381a.   v3:= new [|java:util:TreeMap$Node|];
#L12381e.   call temp:=  [|java:util:TreeMap$Node.<init>|](v3, v4, v10) @signature [|Ljava/util/TreeMap$Node;.<init>:(Ljava/util/TreeMap$Node;Ljava/lang/Object;)V|] @classDescriptor [|java:util:TreeMap$Node|] @type direct;
#L123824.   v4.[|java:util:TreeMap$Node.right|]  := v3 @type object;
#L123828.   v5:= v9.[|java:util:TreeMap.size|] ;
#L12382c.   v5:= v5 + 1;
#L123830.   v9.[|java:util:TreeMap.size|]  := v5;
#L123834.   v5:= v9.[|java:util:TreeMap.modCount|] ;
#L123838.   v5:= v5 + 1;
#L12383c.   v9.[|java:util:TreeMap.modCount|]  := v5;
#L123840.   call temp:=  [|java:util:TreeMap.rebalance|](v9, v4, v8) @signature [|Ljava/util/TreeMap;.rebalance:(Ljava/util/TreeMap$Node;Z)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123846.   v6:= v3  @type object;
#L123848.   goto L123710;
#L12384c.   switch  v5
                 | 1 => goto L12377a
                 | 2 => goto L123784
                 | 3 => goto L123784
                 | 4 => goto L123784
                 | 5 => goto L123788
                 | 6 => goto L123784
                 | => goto L123754;
#L12386c.   switch  v5
                 | 1 => goto L1237b4
                 | 2 => goto L1237b4
                 | 3 => goto L123710
                 | 4 => goto L1237be
                 | 5 => goto L1237be
                 | 6 => goto L1237c2
                 | => goto L1237b2;
#L12388c.   switch  v5
                 | 1 => goto L12380a
                 | 2 => goto L12380a
                 | 3 => goto L123710
                 | 4 => goto L12380e
                 | 5 => goto L12380e
                 | 6 => goto L12381a
                 | => goto L123808;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap.findByEntry|] ([|java:util:TreeMap|] v4 @type (this), [|java:util:Map$Entry|] v5 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.findByEntry:(Ljava/util/Map$Entry;)Ljava/util/TreeMap$Node;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1238bc.   call temp:=  [|java:util:Map$Entry.getKey|](v5) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L1238c2.   v2:= temp  @type object;
#L1238c4.   call temp:=  [|java:util:TreeMap.findByObject|](v4, v2) @signature [|Ljava/util/TreeMap;.findByObject:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1238ca.   v0:= temp  @type object;
#L1238cc.   if v0 == 0 then goto L1238f0;
#L1238d0.   v2:= v0.[|java:util:TreeMap$Node.value|]   @type object;
#L1238d4.   call temp:=  [|java:util:Map$Entry.getValue|](v5) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L1238da.   v3:= temp  @type object;
#L1238dc.   call temp:=  [|libcore:util:Objects.equal|](v2, v3) @signature [|Llibcore/util/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|libcore:util:Objects|] @type static;
#L1238e2.   v2:= temp;
#L1238e4.   if v2 == 0 then goto L1238f0;
#L1238e8.   v1:= 1  @length 4;
#L1238ea.   if v1 == 0 then goto L1238f4;
#L1238ee.   return v0  @type object;
#L1238f0.   v1:= 0  @length 4;
#L1238f2.   goto L1238ea;
#L1238f4.   v0:= 0  @length 4;
#L1238f6.   goto L1238ee;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap.findByObject|] ([|java:util:TreeMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.findByObject:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @Access  {
      local temp ;
        v0;
      
#L123908.   v0:= @@[|java:util:TreeMap$Relation.EQUAL|]   @type object;
#L12390c.   call temp:=  [|java:util:TreeMap.find|](v1, v2, v0) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123912.   v0:= temp  @type object;
#L123914.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.firstEntry|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.firstEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123928.   v0:= v1.[|java:util:TreeMap.root|]   @type object;
#L12392c.   if v0 != 0 then goto L12393c;
#L123930.   v0:= 0  @length 4;
#L123932.   call temp:=  [|java:util:TreeMap.immutableCopy|](v1, v0) @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123938.   v0:= temp  @type object;
#L12393a.   return v0  @type object;
#L12393c.   v0:= v1.[|java:util:TreeMap.root|]   @type object;
#L123940.   call temp:=  [|java:util:TreeMap$Node.first|](v0) @signature [|Ljava/util/TreeMap$Node;.first:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123946.   v0:= temp  @type object;
#L123948.   goto L123932;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.firstKey|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.firstKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12395c.   v0:= v1.[|java:util:TreeMap.root|]   @type object;
#L123960.   if v0 != 0 then goto L123970;
#L123964.   v0:= new [|java:util:NoSuchElementException|];
#L123968.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12396e.   throw v0;
#L123970.   v0:= v1.[|java:util:TreeMap.root|]   @type object;
#L123974.   call temp:=  [|java:util:TreeMap$Node.first|](v0) @signature [|Ljava/util/TreeMap$Node;.first:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L12397a.   v0:= temp  @type object;
#L12397c.   call temp:=  [|java:util:TreeMap$Node.getKey|](v0) @signature [|Ljava/util/TreeMap$Node;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123982.   v0:= temp  @type object;
#L123984.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.floorEntry|] ([|java:util:TreeMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.floorEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123998.   v0:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L12399c.   call temp:=  [|java:util:TreeMap.find|](v1, v2, v0) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1239a2.   v0:= temp  @type object;
#L1239a4.   call temp:=  [|java:util:TreeMap.immutableCopy|](v1, v0) @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L1239aa.   v0:= temp  @type object;
#L1239ac.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.floorKey|] ([|java:util:TreeMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1239c0.   v1:= @@[|java:util:TreeMap$Relation.FLOOR|]   @type object;
#L1239c4.   call temp:=  [|java:util:TreeMap.find|](v2, v3, v1) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1239ca.   v0:= temp  @type object;
#L1239cc.   if v0 == 0 then goto L1239da;
#L1239d0.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L1239d6.   v1:= temp  @type object;
#L1239d8.   return v1  @type object;
#L1239da.   v1:= 0  @length 4;
#L1239dc.   goto L1239d8;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.get|] ([|java:util:TreeMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1239f0.   call temp:=  [|java:util:TreeMap.findByObject|](v2, v3) @signature [|Ljava/util/TreeMap;.findByObject:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1239f6.   v0:= temp  @type object;
#L1239f8.   if v0 == 0 then goto L123a06;
#L1239fc.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L123a02.   v1:= temp  @type object;
#L123a04.   return v1  @type object;
#L123a06.   v1:= 0  @length 4;
#L123a08.   goto L123a04;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap.headMap|] ([|java:util:TreeMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|boolean|] v9) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L123a1c.   if v9 == 0 then goto L123a3c;
#L123a20.   v6:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L123a24.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L123a28.   v2:= 1  @length 4;
#L123a2a.   v3:= 0  @length 4;
#L123a2c.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L123a30.   v1:= v7  @type object;
#L123a32.   v5:= v8  @type object;
#L123a34.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L123a3a.   return v0  @type object;
#L123a3c.   v6:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L123a40.   goto L123a24;

   }
    procedure [|java:util:SortedMap|] [|java:util:TreeMap.headMap|] ([|java:util:TreeMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.headMap:(Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L123a54.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L123a58.   v2:= 1  @length 4;
#L123a5a.   v3:= 0  @length 4;
#L123a5c.   v4:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L123a60.   v6:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L123a64.   v1:= v7  @type object;
#L123a66.   v5:= v8  @type object;
#L123a68.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L123a6e.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.higherEntry|] ([|java:util:TreeMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.higherEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123a80.   v0:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L123a84.   call temp:=  [|java:util:TreeMap.find|](v1, v2, v0) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123a8a.   v0:= temp  @type object;
#L123a8c.   call temp:=  [|java:util:TreeMap.immutableCopy|](v1, v0) @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123a92.   v0:= temp  @type object;
#L123a94.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.higherKey|] ([|java:util:TreeMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L123aa8.   v1:= @@[|java:util:TreeMap$Relation.HIGHER|]   @type object;
#L123aac.   call temp:=  [|java:util:TreeMap.find|](v2, v3, v1) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123ab2.   v0:= temp  @type object;
#L123ab4.   if v0 == 0 then goto L123ac2;
#L123ab8.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L123abe.   v1:= temp  @type object;
#L123ac0.   return v1  @type object;
#L123ac2.   v1:= 0  @length 4;
#L123ac4.   goto L123ac0;

   }
    procedure [|boolean|] [|java:util:TreeMap.isEmpty|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123ad8.   v0:= v1.[|java:util:TreeMap.size|] ;
#L123adc.   if v0 != 0 then goto L123ae4;
#L123ae0.   v0:= 1  @length 4;
#L123ae2.   return v0;
#L123ae4.   v0:= 0  @length 4;
#L123ae6.   goto L123ae2;

   }
    procedure [|java:util:Set|] [|java:util:TreeMap.keySet|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.keySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123af8.   v0:= v1.[|java:util:TreeMap.keySet|]   @type object;
#L123afc.   if v0 == 0 then goto L123b02;
#L123b00.   return v0  @type object;
#L123b02.   v0:= new [|java:util:TreeMap$KeySet|];
#L123b06.   call temp:=  [|java:util:TreeMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/TreeMap$KeySet;.<init>:(Ljava/util/TreeMap;)V|] @classDescriptor [|java:util:TreeMap$KeySet|] @type direct;
#L123b0c.   v1.[|java:util:TreeMap.keySet|]  := v0 @type object;
#L123b10.   goto L123b00;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.lastEntry|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.lastEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123b24.   v0:= v1.[|java:util:TreeMap.root|]   @type object;
#L123b28.   if v0 != 0 then goto L123b38;
#L123b2c.   v0:= 0  @length 4;
#L123b2e.   call temp:=  [|java:util:TreeMap.immutableCopy|](v1, v0) @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123b34.   v0:= temp  @type object;
#L123b36.   return v0  @type object;
#L123b38.   v0:= v1.[|java:util:TreeMap.root|]   @type object;
#L123b3c.   call temp:=  [|java:util:TreeMap$Node.last|](v0) @signature [|Ljava/util/TreeMap$Node;.last:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123b42.   v0:= temp  @type object;
#L123b44.   goto L123b2e;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.lastKey|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.lastKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123b58.   v0:= v1.[|java:util:TreeMap.root|]   @type object;
#L123b5c.   if v0 != 0 then goto L123b6c;
#L123b60.   v0:= new [|java:util:NoSuchElementException|];
#L123b64.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L123b6a.   throw v0;
#L123b6c.   v0:= v1.[|java:util:TreeMap.root|]   @type object;
#L123b70.   call temp:=  [|java:util:TreeMap$Node.last|](v0) @signature [|Ljava/util/TreeMap$Node;.last:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123b76.   v0:= temp  @type object;
#L123b78.   call temp:=  [|java:util:TreeMap$Node.getKey|](v0) @signature [|Ljava/util/TreeMap$Node;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123b7e.   v0:= temp  @type object;
#L123b80.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.lowerEntry|] ([|java:util:TreeMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.lowerEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123b94.   v0:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L123b98.   call temp:=  [|java:util:TreeMap.find|](v1, v2, v0) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123b9e.   v0:= temp  @type object;
#L123ba0.   call temp:=  [|java:util:TreeMap.immutableCopy|](v1, v0) @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123ba6.   v0:= temp  @type object;
#L123ba8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.lowerKey|] ([|java:util:TreeMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L123bbc.   v1:= @@[|java:util:TreeMap$Relation.LOWER|]   @type object;
#L123bc0.   call temp:=  [|java:util:TreeMap.find|](v2, v3, v1) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123bc6.   v0:= temp  @type object;
#L123bc8.   if v0 == 0 then goto L123bd6;
#L123bcc.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L123bd2.   v1:= temp  @type object;
#L123bd4.   return v1  @type object;
#L123bd6.   v1:= 0  @length 4;
#L123bd8.   goto L123bd4;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeMap.navigableKeySet|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123bec.   v0:= v1.[|java:util:TreeMap.keySet|]   @type object;
#L123bf0.   if v0 == 0 then goto L123bf6;
#L123bf4.   return v0  @type object;
#L123bf6.   v0:= new [|java:util:TreeMap$KeySet|];
#L123bfa.   call temp:=  [|java:util:TreeMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/TreeMap$KeySet;.<init>:(Ljava/util/TreeMap;)V|] @classDescriptor [|java:util:TreeMap$KeySet|] @type direct;
#L123c00.   v1.[|java:util:TreeMap.keySet|]  := v0 @type object;
#L123c04.   goto L123bf4;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.pollFirstEntry|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.pollFirstEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123c18.   call temp:=  [|java:util:TreeMap.internalPollFirstEntry|](v1) @signature [|Ljava/util/TreeMap;.internalPollFirstEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123c1e.   v0:= temp  @type object;
#L123c20.   call temp:=  [|java:util:TreeMap.immutableCopy|](v1, v0) @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123c26.   v0:= temp  @type object;
#L123c28.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:TreeMap.pollLastEntry|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.pollLastEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123c3c.   call temp:=  [|java:util:TreeMap.internalPollLastEntry|](v1) @signature [|Ljava/util/TreeMap;.internalPollLastEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123c42.   v0:= temp  @type object;
#L123c44.   call temp:=  [|java:util:TreeMap.immutableCopy|](v1, v0) @signature [|Ljava/util/TreeMap;.immutableCopy:(Ljava/util/Map$Entry;)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123c4a.   v0:= temp  @type object;
#L123c4c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.put|] ([|java:util:TreeMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123c60.   call temp:=  [|java:util:TreeMap.putInternal|](v1, v2, v3) @signature [|Ljava/util/TreeMap;.putInternal:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123c66.   v0:= temp  @type object;
#L123c68.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.putInternal|] ([|java:util:TreeMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.putInternal:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L123c7c.   v2:= @@[|java:util:TreeMap$Relation.CREATE|]   @type object;
#L123c80.   call temp:=  [|java:util:TreeMap.find|](v3, v4, v2) @signature [|Ljava/util/TreeMap;.find:(Ljava/lang/Object;Ljava/util/TreeMap$Relation;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123c86.   v0:= temp  @type object;
#L123c88.   v1:= v0.[|java:util:TreeMap$Node.value|]   @type object;
#L123c8c.   v0.[|java:util:TreeMap$Node.value|]  := v5 @type object;
#L123c90.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeMap.remove|] ([|java:util:TreeMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L123ca4.   call temp:=  [|java:util:TreeMap.removeInternalByKey|](v2, v3) @signature [|Ljava/util/TreeMap;.removeInternalByKey:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123caa.   v0:= temp  @type object;
#L123cac.   if v0 == 0 then goto L123cb6;
#L123cb0.   v1:= v0.[|java:util:TreeMap$Node.value|]   @type object;
#L123cb4.   return v1  @type object;
#L123cb6.   v1:= 0  @length 4;
#L123cb8.   goto L123cb4;

   }
    procedure [|void|] [|java:util:TreeMap.removeInternal|] ([|java:util:TreeMap|] v9 @type (this), [|java:util:TreeMap$Node|] v10 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.removeInternal:(Ljava/util/TreeMap$Node;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L123ccc.   v8:= 0  @length 4;
#L123cce.   v1:= v10.[|java:util:TreeMap$Node.left|]   @type object;
#L123cd2.   v4:= v10.[|java:util:TreeMap$Node.right|]   @type object;
#L123cd6.   v3:= v10.[|java:util:TreeMap$Node.parent|]   @type object;
#L123cda.   if v1 == 0 then goto L123d52;
#L123cde.   if v4 == 0 then goto L123d52;
#L123ce2.   v6:= v1.[|java:util:TreeMap$Node.height|] ;
#L123ce6.   v7:= v4.[|java:util:TreeMap$Node.height|] ;
#L123cea.   if v6 <= v7 then goto L123d48;
#L123cee.   call temp:=  [|java:util:TreeMap$Node.last|](v1) @signature [|Ljava/util/TreeMap$Node;.last:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123cf4.   v0:= temp  @type object;
#L123cf6.   call temp:=  [|java:util:TreeMap.removeInternal|](v9, v0) @signature [|Ljava/util/TreeMap;.removeInternal:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123cfc.   v2:= 0  @length 4;
#L123cfe.   v1:= v10.[|java:util:TreeMap$Node.left|]   @type object;
#L123d02.   if v1 == 0 then goto L123d16;
#L123d06.   v2:= v1.[|java:util:TreeMap$Node.height|] ;
#L123d0a.   v0.[|java:util:TreeMap$Node.left|]  := v1 @type object;
#L123d0e.   v1.[|java:util:TreeMap$Node.parent|]  := v0 @type object;
#L123d12.   v10.[|java:util:TreeMap$Node.left|]  := v8 @type object;
#L123d16.   v5:= 0  @length 4;
#L123d18.   v4:= v10.[|java:util:TreeMap$Node.right|]   @type object;
#L123d1c.   if v4 == 0 then goto L123d30;
#L123d20.   v5:= v4.[|java:util:TreeMap$Node.height|] ;
#L123d24.   v0.[|java:util:TreeMap$Node.right|]  := v4 @type object;
#L123d28.   v4.[|java:util:TreeMap$Node.parent|]  := v0 @type object;
#L123d2c.   v10.[|java:util:TreeMap$Node.right|]  := v8 @type object;
#L123d30.   call temp:=  [|java:lang:Math.max|](v2, v5) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L123d36.   v6:= temp;
#L123d38.   v6:= v6 + 1;
#L123d3c.   v0.[|java:util:TreeMap$Node.height|]  := v6;
#L123d40.   call temp:=  [|java:util:TreeMap.replaceInParent|](v9, v10, v0) @signature [|Ljava/util/TreeMap;.replaceInParent:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123d46.   return @void ;
#L123d48.   call temp:=  [|java:util:TreeMap$Node.first|](v4) @signature [|Ljava/util/TreeMap$Node;.first:()Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap$Node|] @type virtual;
#L123d4e.   v0:= temp  @type object;
#L123d50.   goto L123cf6;
#L123d52.   if v1 == 0 then goto L123d82;
#L123d56.   call temp:=  [|java:util:TreeMap.replaceInParent|](v9, v10, v1) @signature [|Ljava/util/TreeMap;.replaceInParent:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123d5c.   v10.[|java:util:TreeMap$Node.left|]  := v8 @type object;
#L123d60.   v6:= 0  @length 4;
#L123d62.   call temp:=  [|java:util:TreeMap.rebalance|](v9, v3, v6) @signature [|Ljava/util/TreeMap;.rebalance:(Ljava/util/TreeMap$Node;Z)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123d68.   v6:= v9.[|java:util:TreeMap.size|] ;
#L123d6c.   v6:= v6 + -1;
#L123d70.   v9.[|java:util:TreeMap.size|]  := v6;
#L123d74.   v6:= v9.[|java:util:TreeMap.modCount|] ;
#L123d78.   v6:= v6 + 1;
#L123d7c.   v9.[|java:util:TreeMap.modCount|]  := v6;
#L123d80.   goto L123d46;
#L123d82.   if v4 == 0 then goto L123d92;
#L123d86.   call temp:=  [|java:util:TreeMap.replaceInParent|](v9, v10, v4) @signature [|Ljava/util/TreeMap;.replaceInParent:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123d8c.   v10.[|java:util:TreeMap$Node.right|]  := v8 @type object;
#L123d90.   goto L123d60;
#L123d92.   call temp:=  [|java:util:TreeMap.replaceInParent|](v9, v10, v8) @signature [|Ljava/util/TreeMap;.replaceInParent:(Ljava/util/TreeMap$Node;Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123d98.   goto L123d60;

   }
    procedure [|java:util:TreeMap$Node|] [|java:util:TreeMap.removeInternalByKey|] ([|java:util:TreeMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.removeInternalByKey:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @Access  {
      local temp ;
        v0;
      
#L123dac.   call temp:=  [|java:util:TreeMap.findByObject|](v1, v2) @signature [|Ljava/util/TreeMap;.findByObject:(Ljava/lang/Object;)Ljava/util/TreeMap$Node;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123db2.   v0:= temp  @type object;
#L123db4.   if v0 == 0 then goto L123dbe;
#L123db8.   call temp:=  [|java:util:TreeMap.removeInternal|](v1, v0) @signature [|Ljava/util/TreeMap;.removeInternal:(Ljava/util/TreeMap$Node;)V|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123dbe.   return v0  @type object;

   }
    procedure [|int|] [|java:util:TreeMap.size|] ([|java:util:TreeMap|] v1 @type (this)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L123dd0.   v0:= v1.[|java:util:TreeMap.size|] ;
#L123dd4.   return v0;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap.subMap|] ([|java:util:TreeMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|boolean|] v9, [|java:lang:Object|] v10 @type (object), [|boolean|] v11) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L123de8.   if v9 == 0 then goto L123e0c;
#L123dec.   v4:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L123df0.   if v11 == 0 then goto L123e12;
#L123df4.   v6:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L123df8.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L123dfc.   v2:= 1  @length 4;
#L123dfe.   v1:= v7  @type object;
#L123e00.   v3:= v8  @type object;
#L123e02.   v5:= v10  @type object;
#L123e04.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L123e0a.   return v0  @type object;
#L123e0c.   v4:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L123e10.   goto L123df0;
#L123e12.   v6:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L123e16.   goto L123df8;

   }
    procedure [|java:util:SortedMap|] [|java:util:TreeMap.subMap|] ([|java:util:TreeMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|java:lang:Object|] v9 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L123e28.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L123e2c.   v2:= 1  @length 4;
#L123e2e.   v4:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L123e32.   v6:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L123e36.   v1:= v7  @type object;
#L123e38.   v3:= v8  @type object;
#L123e3a.   v5:= v9  @type object;
#L123e3c.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L123e42.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:TreeMap.tailMap|] ([|java:util:TreeMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|boolean|] v9) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L123e54.   if v9 == 0 then goto L123e74;
#L123e58.   v4:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L123e5c.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L123e60.   v2:= 1  @length 4;
#L123e62.   v5:= 0  @length 4;
#L123e64.   v6:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L123e68.   v1:= v7  @type object;
#L123e6a.   v3:= v8  @type object;
#L123e6c.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L123e72.   return v0  @type object;
#L123e74.   v4:= @@[|java:util:TreeMap$Bound.EXCLUSIVE|]   @type object;
#L123e78.   goto L123e5c;

   }
    procedure [|java:util:SortedMap|] [|java:util:TreeMap.tailMap|] ([|java:util:TreeMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:TreeMap|] @signature [|Ljava/util/TreeMap;.tailMap:(Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L123e8c.   v0:= new [|java:util:TreeMap$BoundedMap|];
#L123e90.   v2:= 1  @length 4;
#L123e92.   v4:= @@[|java:util:TreeMap$Bound.INCLUSIVE|]   @type object;
#L123e96.   v5:= 0  @length 4;
#L123e98.   v6:= @@[|java:util:TreeMap$Bound.NO_BOUND|]   @type object;
#L123e9c.   v1:= v7  @type object;
#L123e9e.   v3:= v8  @type object;
#L123ea0.   call temp:=  [|java:util:TreeMap$BoundedMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/TreeMap$BoundedMap;.<init>:(Ljava/util/TreeMap;ZLjava/lang/Object;Ljava/util/TreeMap$Bound;Ljava/lang/Object;Ljava/util/TreeMap$Bound;)V|] @classDescriptor [|java:util:TreeMap$BoundedMap|] @type direct;
#L123ea6.   return v0  @type object;

   }
record [|java:util:TreeSet|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractSet|], [|java:util:NavigableSet|], [|java:lang:Cloneable|], [|java:io:Serializable|] {
      [|java:util:NavigableMap|] [|java:util:TreeSet.backingMap|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:NavigableSet|] [|java:util:TreeSet.descendingSet|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|long|] @@[|java:util:TreeSet.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:TreeSet.<init>|] ([|java:util:TreeSet|] v1 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L123eb8.   call temp:=  [|java:util:AbstractSet.<init>|](v1) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L123ebe.   v0:= new [|java:util:TreeMap|];
#L123ec2.   call temp:=  [|java:util:TreeMap.<init>|](v0) @signature [|Ljava/util/TreeMap;.<init>:()V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123ec8.   v1.[|java:util:TreeSet.backingMap|]  := v0 @type object;
#L123ecc.   return @void ;

   }
    procedure [|void|] [|java:util:TreeSet.<init>|] ([|java:util:TreeSet|] v0 @type (this), [|java:util:Collection|] v1 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L123ee0.   call temp:=  [|java:util:TreeSet.<init>|](v0) @signature [|Ljava/util/TreeSet;.<init>:()V|] @classDescriptor [|java:util:TreeSet|] @type direct;
#L123ee6.   call temp:=  [|java:util:TreeSet.addAll|](v0, v1) @signature [|Ljava/util/TreeSet;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:TreeSet|] @type virtual;
#L123eec.   return @void ;

   }
    procedure [|void|] [|java:util:TreeSet.<init>|] ([|java:util:TreeSet|] v1 @type (this), [|java:util:Comparator|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L123f00.   call temp:=  [|java:util:AbstractSet.<init>|](v1) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L123f06.   v0:= new [|java:util:TreeMap|];
#L123f0a.   call temp:=  [|java:util:TreeMap.<init>|](v0, v2) @signature [|Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123f10.   v1.[|java:util:TreeSet.backingMap|]  := v0 @type object;
#L123f14.   return @void ;

   }
    procedure [|void|] [|java:util:TreeSet.<init>|] ([|java:util:TreeSet|] v0 @type (this), [|java:util:NavigableMap|] v1 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/NavigableMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L123f28.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L123f2e.   v0.[|java:util:TreeSet.backingMap|]  := v1 @type object;
#L123f32.   return @void ;

   }
    procedure [|void|] [|java:util:TreeSet.<init>|] ([|java:util:TreeSet|] v2 @type (this), [|java:util:SortedSet|] v3 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/SortedSet;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L123f44.   call temp:=  [|java:util:SortedSet.comparator|](v3) @signature [|Ljava/util/SortedSet;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:SortedSet|] @type interface;
#L123f4a.   v1:= temp  @type object;
#L123f4c.   call temp:=  [|java:util:TreeSet.<init>|](v2, v1) @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V|] @classDescriptor [|java:util:TreeSet|] @type direct;
#L123f52.   call temp:=  [|java:util:SortedSet.iterator|](v3) @signature [|Ljava/util/SortedSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:SortedSet|] @type interface;
#L123f58.   v0:= temp  @type object;
#L123f5a.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L123f60.   v1:= temp;
#L123f62.   if v1 == 0 then goto L123f76;
#L123f66.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L123f6c.   v1:= temp  @type object;
#L123f6e.   call temp:=  [|java:util:TreeSet.add|](v2, v1) @signature [|Ljava/util/TreeSet;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:TreeSet|] @type virtual;
#L123f74.   goto L123f5a;
#L123f76.   return @void ;

   }
    procedure [|void|] [|java:util:TreeSet.readObject|] ([|java:util:TreeSet|] v5 @type (this), [|java:io:ObjectInputStream|] v6 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L123f88.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v6) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L123f8e.   v2:= new [|java:util:TreeMap|];
#L123f92.   call temp:=  [|java:io:ObjectInputStream.readObject|](v6) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L123f98.   v4:= temp  @type object;
#L123f9a.   v4:= ([|java:util:Comparator|])v4;
#L123f9e.   call temp:=  [|java:util:TreeMap.<init>|](v2, v4) @signature [|Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L123fa4.   call temp:=  [|java:io:ObjectInputStream.readInt|](v6) @signature [|Ljava/io/ObjectInputStream;.readInt:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L123faa.   v3:= temp;
#L123fac.   if v3 <= 0 then goto L123fce;
#L123fb0.   v1:= 0  @length 4;
#L123fb2.   if v1 >= v3 then goto L123fce;
#L123fb6.   call temp:=  [|java:io:ObjectInputStream.readObject|](v6) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L123fbc.   v0:= temp  @type object;
#L123fbe.   v4:= @@[|java:lang:Boolean.TRUE|]   @type object;
#L123fc2.   call temp:=  [|java:util:TreeMap.put|](v2, v0, v4) @signature [|Ljava/util/TreeMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L123fc8.   v1:= v1 + 1;
#L123fcc.   goto L123fb2;
#L123fce.   v5.[|java:util:TreeSet.backingMap|]  := v2 @type object;
#L123fd2.   return @void ;

   }
    procedure [|void|] [|java:util:TreeSet.writeObject|] ([|java:util:TreeSet|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L123fe4.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v4) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L123fea.   v2:= v3.[|java:util:TreeSet.backingMap|]   @type object;
#L123fee.   call temp:=  [|java:util:NavigableMap.comparator|](v2) @signature [|Ljava/util/NavigableMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L123ff4.   v2:= temp  @type object;
#L123ff6.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L123ffc.   v2:= v3.[|java:util:TreeSet.backingMap|]   @type object;
#L124000.   call temp:=  [|java:util:NavigableMap.size|](v2) @signature [|Ljava/util/NavigableMap;.size:()I|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124006.   v1:= temp;
#L124008.   call temp:=  [|java:io:ObjectOutputStream.writeInt|](v4, v1) @signature [|Ljava/io/ObjectOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12400e.   if v1 <= 0 then goto L124042;
#L124012.   v2:= v3.[|java:util:TreeSet.backingMap|]   @type object;
#L124016.   call temp:=  [|java:util:NavigableMap.keySet|](v2) @signature [|Ljava/util/NavigableMap;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L12401c.   v2:= temp  @type object;
#L12401e.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L124024.   v0:= temp  @type object;
#L124026.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12402c.   v2:= temp;
#L12402e.   if v2 == 0 then goto L124042;
#L124032.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L124038.   v2:= temp  @type object;
#L12403a.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L124040.   goto L124026;
#L124042.   return @void ;

   }
    procedure [|boolean|] [|java:util:TreeSet.add|] ([|java:util:TreeSet|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124054.   v0:= v2.[|java:util:TreeSet.backingMap|]   @type object;
#L124058.   v1:= @@[|java:lang:Boolean.TRUE|]   @type object;
#L12405c.   call temp:=  [|java:util:NavigableMap.put|](v0, v3, v1) @signature [|Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124062.   v0:= temp  @type object;
#L124064.   if v0 != 0 then goto L12406c;
#L124068.   v0:= 1  @length 4;
#L12406a.   return v0;
#L12406c.   v0:= 0  @length 4;
#L12406e.   goto L12406a;

   }
    procedure [|boolean|] [|java:util:TreeSet.addAll|] ([|java:util:TreeSet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124080.   call temp:=  [|java:util:AbstractSet.addAll|](v1, v2) @signature [|Ljava/util/AbstractSet;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:AbstractSet|] @type super;
#L124086.   v0:= temp;
#L124088.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:TreeSet.ceiling|] ([|java:util:TreeSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.ceiling:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12409c.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L1240a0.   call temp:=  [|java:util:NavigableMap.ceilingKey|](v0, v2) @signature [|Ljava/util/NavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1240a6.   v0:= temp  @type object;
#L1240a8.   return v0  @type object;

   }
    procedure [|void|] [|java:util:TreeSet.clear|] ([|java:util:TreeSet|] v1 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1240bc.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L1240c0.   call temp:=  [|java:util:NavigableMap.clear|](v0) @signature [|Ljava/util/NavigableMap;.clear:()V|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1240c6.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:TreeSet.clone|] ([|java:util:TreeSet|] v4 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1240d8.   call temp:=  [|java:lang:Object.clone|](v4) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L1240de.   v0:= temp  @type object;
#L1240e0.   v0:= ([|java:util:TreeSet|])v0;
#L1240e4.   v2:= v4.[|java:util:TreeSet.backingMap|]   @type object;
#L1240e8.   v2:= instanceof @varname v2 @type [|java:util:TreeMap|];
#L1240ec.   if v2 == 0 then goto L12410a;
#L1240f0.   v2:= v4.[|java:util:TreeSet.backingMap|]   @type object;
#L1240f4.   v2:= ([|java:util:TreeMap|])v2;
#L1240f8.   call temp:=  [|java:util:TreeMap.clone|](v2) @signature [|Ljava/util/TreeMap;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:TreeMap|] @type virtual;
#L1240fe.   v2:= temp  @type object;
#L124100.   v2:= ([|java:util:NavigableMap|])v2;
#L124104.   v0.[|java:util:TreeSet.backingMap|]  := v2 @type object;
#L124108.   return v0  @type object;
#L12410a.   v2:= new [|java:util:TreeMap|];
#L12410e.   v3:= v4.[|java:util:TreeSet.backingMap|]   @type object;
#L124112.   call temp:=  [|java:util:TreeMap.<init>|](v2, v3) @signature [|Ljava/util/TreeMap;.<init>:(Ljava/util/SortedMap;)V|] @classDescriptor [|java:util:TreeMap|] @type direct;
#L124118.   v0.[|java:util:TreeSet.backingMap|]  := v2 @type object;
#L12411c.   goto L124108;
#L12411e.   v1:= Exception  @type object;
#L124120.   v2:= new [|java:lang:AssertionError|];
#L124124.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v1) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L12412a.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L1240d8..L12411c] goto L12411e;

   }
    procedure [|java:util:Comparator|] [|java:util:TreeSet.comparator|] ([|java:util:TreeSet|] v1 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12414c.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L124150.   call temp:=  [|java:util:NavigableMap.comparator|](v0) @signature [|Ljava/util/NavigableMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124156.   v0:= temp  @type object;
#L124158.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:TreeSet.contains|] ([|java:util:TreeSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12416c.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L124170.   call temp:=  [|java:util:NavigableMap.containsKey|](v0, v2) @signature [|Ljava/util/NavigableMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124176.   v0:= temp;
#L124178.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:TreeSet.descendingIterator|] ([|java:util:TreeSet|] v1 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.descendingIterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12418c.   call temp:=  [|java:util:TreeSet.descendingSet|](v1) @signature [|Ljava/util/TreeSet;.descendingSet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:TreeSet|] @type virtual;
#L124192.   v0:= temp  @type object;
#L124194.   call temp:=  [|java:util:NavigableSet.iterator|](v0) @signature [|Ljava/util/NavigableSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:NavigableSet|] @type interface;
#L12419a.   v0:= temp  @type object;
#L12419c.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeSet.descendingSet|] ([|java:util:TreeSet|] v2 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.descendingSet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1241b0.   v0:= v2.[|java:util:TreeSet.descendingSet|]   @type object;
#L1241b4.   if v0 == 0 then goto L1241be;
#L1241b8.   v0:= v2.[|java:util:TreeSet.descendingSet|]   @type object;
#L1241bc.   return v0  @type object;
#L1241be.   v0:= new [|java:util:TreeSet|];
#L1241c2.   v1:= v2.[|java:util:TreeSet.backingMap|]   @type object;
#L1241c6.   call temp:=  [|java:util:NavigableMap.descendingMap|](v1) @signature [|Ljava/util/NavigableMap;.descendingMap:()Ljava/util/NavigableMap;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1241cc.   v1:= temp  @type object;
#L1241ce.   call temp:=  [|java:util:TreeSet.<init>|](v0, v1) @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/NavigableMap;)V|] @classDescriptor [|java:util:TreeSet|] @type direct;
#L1241d4.   v2.[|java:util:TreeSet.descendingSet|]  := v0 @type object;
#L1241d8.   goto L1241bc;

   }
    procedure [|java:lang:Object|] [|java:util:TreeSet.first|] ([|java:util:TreeSet|] v1 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.first:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1241ec.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L1241f0.   call temp:=  [|java:util:NavigableMap.firstKey|](v0) @signature [|Ljava/util/NavigableMap;.firstKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1241f6.   v0:= temp  @type object;
#L1241f8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeSet.floor|] ([|java:util:TreeSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.floor:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12420c.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L124210.   call temp:=  [|java:util:NavigableMap.floorKey|](v0, v2) @signature [|Ljava/util/NavigableMap;.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124216.   v0:= temp  @type object;
#L124218.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeSet.headSet|] ([|java:util:TreeSet|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12422c.   v1:= v3.[|java:util:TreeSet.backingMap|]   @type object;
#L124230.   call temp:=  [|java:util:NavigableMap.comparator|](v1) @signature [|Ljava/util/NavigableMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124236.   v0:= temp  @type object;
#L124238.   if v0 != 0 then goto L124260;
#L12423c.   v1:= v4  @type object;
#L12423e.   v1:= ([|java:lang:Comparable|])v1;
#L124242.   call temp:=  [|java:lang:Comparable.compareTo|](v1, v4) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L124248.   v1:= new [|java:util:TreeSet|];
#L12424c.   v2:= v3.[|java:util:TreeSet.backingMap|]   @type object;
#L124250.   call temp:=  [|java:util:NavigableMap.headMap|](v2, v4, v5) @signature [|Ljava/util/NavigableMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124256.   v2:= temp  @type object;
#L124258.   call temp:=  [|java:util:TreeSet.<init>|](v1, v2) @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/NavigableMap;)V|] @classDescriptor [|java:util:TreeSet|] @type direct;
#L12425e.   return v1  @type object;
#L124260.   call temp:=  [|java:util:Comparator.compare|](v0, v4, v4) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L124266.   goto L124248;

   }
    procedure [|java:util:SortedSet|] [|java:util:TreeSet.headSet|] ([|java:util:TreeSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.headSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124278.   v0:= 0  @length 4;
#L12427a.   call temp:=  [|java:util:TreeSet.headSet|](v1, v2, v0) @signature [|Ljava/util/TreeSet;.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:TreeSet|] @type virtual;
#L124280.   v0:= temp  @type object;
#L124282.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeSet.higher|] ([|java:util:TreeSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.higher:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124294.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L124298.   call temp:=  [|java:util:NavigableMap.higherKey|](v0, v2) @signature [|Ljava/util/NavigableMap;.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L12429e.   v0:= temp  @type object;
#L1242a0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:TreeSet.isEmpty|] ([|java:util:TreeSet|] v1 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1242b4.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L1242b8.   call temp:=  [|java:util:NavigableMap.isEmpty|](v0) @signature [|Ljava/util/NavigableMap;.isEmpty:()Z|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1242be.   v0:= temp;
#L1242c0.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:TreeSet.iterator|] ([|java:util:TreeSet|] v1 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1242d4.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L1242d8.   call temp:=  [|java:util:NavigableMap.keySet|](v0) @signature [|Ljava/util/NavigableMap;.keySet:()Ljava/util/Set;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1242de.   v0:= temp  @type object;
#L1242e0.   call temp:=  [|java:util:Set.iterator|](v0) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L1242e6.   v0:= temp  @type object;
#L1242e8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeSet.last|] ([|java:util:TreeSet|] v1 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.last:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1242fc.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L124300.   call temp:=  [|java:util:NavigableMap.lastKey|](v0) @signature [|Ljava/util/NavigableMap;.lastKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124306.   v0:= temp  @type object;
#L124308.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeSet.lower|] ([|java:util:TreeSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.lower:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12431c.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L124320.   call temp:=  [|java:util:NavigableMap.lowerKey|](v0, v2) @signature [|Ljava/util/NavigableMap;.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124326.   v0:= temp  @type object;
#L124328.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:TreeSet.pollFirst|] ([|java:util:TreeSet|] v2 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.pollFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12433c.   v1:= v2.[|java:util:TreeSet.backingMap|]   @type object;
#L124340.   call temp:=  [|java:util:NavigableMap.pollFirstEntry|](v1) @signature [|Ljava/util/NavigableMap;.pollFirstEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124346.   v0:= temp  @type object;
#L124348.   if v0 != 0 then goto L124350;
#L12434c.   v1:= 0  @length 4;
#L12434e.   return v1  @type object;
#L124350.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L124356.   v1:= temp  @type object;
#L124358.   goto L12434e;

   }
    procedure [|java:lang:Object|] [|java:util:TreeSet.pollLast|] ([|java:util:TreeSet|] v2 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.pollLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12436c.   v1:= v2.[|java:util:TreeSet.backingMap|]   @type object;
#L124370.   call temp:=  [|java:util:NavigableMap.pollLastEntry|](v1) @signature [|Ljava/util/NavigableMap;.pollLastEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124376.   v0:= temp  @type object;
#L124378.   if v0 != 0 then goto L124380;
#L12437c.   v1:= 0  @length 4;
#L12437e.   return v1  @type object;
#L124380.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L124386.   v1:= temp  @type object;
#L124388.   goto L12437e;

   }
    procedure [|boolean|] [|java:util:TreeSet.remove|] ([|java:util:TreeSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12439c.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L1243a0.   call temp:=  [|java:util:NavigableMap.remove|](v0, v2) @signature [|Ljava/util/NavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1243a6.   v0:= temp  @type object;
#L1243a8.   if v0 == 0 then goto L1243b0;
#L1243ac.   v0:= 1  @length 4;
#L1243ae.   return v0;
#L1243b0.   v0:= 0  @length 4;
#L1243b2.   goto L1243ae;

   }
    procedure [|int|] [|java:util:TreeSet.size|] ([|java:util:TreeSet|] v1 @type (this)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1243c4.   v0:= v1.[|java:util:TreeSet.backingMap|]   @type object;
#L1243c8.   call temp:=  [|java:util:NavigableMap.size|](v0) @signature [|Ljava/util/NavigableMap;.size:()I|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1243ce.   v0:= temp;
#L1243d0.   return v0;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeSet.subSet|] ([|java:util:TreeSet|] v4 @type (this), [|java:lang:Object|] v5 @type (object), [|boolean|] v6, [|java:lang:Object|] v7 @type (object), [|boolean|] v8) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1243e4.   v2:= v4.[|java:util:TreeSet.backingMap|]   @type object;
#L1243e8.   call temp:=  [|java:util:NavigableMap.comparator|](v2) @signature [|Ljava/util/NavigableMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L1243ee.   v0:= temp  @type object;
#L1243f0.   if v0 != 0 then goto L12441e;
#L1243f4.   v2:= v5  @type object;
#L1243f6.   v2:= ([|java:lang:Comparable|])v2;
#L1243fa.   call temp:=  [|java:lang:Comparable.compareTo|](v2, v7) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L124400.   v1:= temp;
#L124402.   if v1 > 0 then goto L124428;
#L124406.   v2:= new [|java:util:TreeSet|];
#L12440a.   v3:= v4.[|java:util:TreeSet.backingMap|]   @type object;
#L12440e.   call temp:=  [|java:util:NavigableMap.subMap|](v3, v5, v6, v7, v8) @signature [|Ljava/util/NavigableMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L124414.   v3:= temp  @type object;
#L124416.   call temp:=  [|java:util:TreeSet.<init>|](v2, v3) @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/NavigableMap;)V|] @classDescriptor [|java:util:TreeSet|] @type direct;
#L12441c.   return v2  @type object;
#L12441e.   call temp:=  [|java:util:Comparator.compare|](v0, v5, v7) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L124424.   v1:= temp;
#L124426.   goto L124402;
#L124428.   v2:= new [|java:lang:IllegalArgumentException|];
#L12442c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L124432.   throw v2;

   }
    procedure [|java:util:SortedSet|] [|java:util:TreeSet.subSet|] ([|java:util:TreeSet|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124444.   v0:= 1  @length 4;
#L124446.   v1:= 0  @length 4;
#L124448.   call temp:=  [|java:util:TreeSet.subSet|](v2, v3, v0, v4, v1) @signature [|Ljava/util/TreeSet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:TreeSet|] @type virtual;
#L12444e.   v0:= temp  @type object;
#L124450.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:TreeSet.tailSet|] ([|java:util:TreeSet|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L124464.   v1:= v3.[|java:util:TreeSet.backingMap|]   @type object;
#L124468.   call temp:=  [|java:util:NavigableMap.comparator|](v1) @signature [|Ljava/util/NavigableMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L12446e.   v0:= temp  @type object;
#L124470.   if v0 != 0 then goto L124498;
#L124474.   v1:= v4  @type object;
#L124476.   v1:= ([|java:lang:Comparable|])v1;
#L12447a.   call temp:=  [|java:lang:Comparable.compareTo|](v1, v4) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L124480.   v1:= new [|java:util:TreeSet|];
#L124484.   v2:= v3.[|java:util:TreeSet.backingMap|]   @type object;
#L124488.   call temp:=  [|java:util:NavigableMap.tailMap|](v2, v4, v5) @signature [|Ljava/util/NavigableMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @classDescriptor [|java:util:NavigableMap|] @type interface;
#L12448e.   v2:= temp  @type object;
#L124490.   call temp:=  [|java:util:TreeSet.<init>|](v1, v2) @signature [|Ljava/util/TreeSet;.<init>:(Ljava/util/NavigableMap;)V|] @classDescriptor [|java:util:TreeSet|] @type direct;
#L124496.   return v1  @type object;
#L124498.   call temp:=  [|java:util:Comparator.compare|](v0, v4, v4) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L12449e.   goto L124480;

   }
    procedure [|java:util:SortedSet|] [|java:util:TreeSet.tailSet|] ([|java:util:TreeSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:TreeSet|] @signature [|Ljava/util/TreeSet;.tailSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1244b0.   v0:= 1  @length 4;
#L1244b2.   call temp:=  [|java:util:TreeSet.tailSet|](v1, v2, v0) @signature [|Ljava/util/TreeSet;.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:TreeSet|] @type virtual;
#L1244b8.   v0:= temp  @type object;
#L1244ba.   return v0  @type object;

   }
record [|java:util:UUID|]  @type class @AccessFlag PUBLIC_FINAL extends  [|java:io:Serializable|], [|java:lang:Comparable|] {
      [|int|] [|java:util:UUID.clockSequence|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:util:UUID.hash|]    @AccessFlag PRIVATE_TRANSIENT;
      [|long|] [|java:util:UUID.leastSigBits|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:UUID.mostSigBits|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:UUID.node|]    @AccessFlag PRIVATE_TRANSIENT;
      [|long|] [|java:util:UUID.timestamp|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:util:UUID.variant|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:util:UUID.version|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|java:security:SecureRandom|] @@[|java:util:UUID.rng|]    @AccessFlag PRIVATE_STATIC;
      global [|long|] @@[|java:util:UUID.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:UUID.<init>|] ([|java:util:UUID|] v0 @type (this), [|long|] v1, [|long|] v3) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.<init>:(JJ)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1244cc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1244d2.   v0.[|java:util:UUID.mostSigBits|]  := v1 @wide;
#L1244d6.   v0.[|java:util:UUID.leastSigBits|]  := v3 @wide;
#L1244da.   call temp:=  [|java:util:UUID.init|](v0) @signature [|Ljava/util/UUID;.init:()V|] @classDescriptor [|java:util:UUID|] @type direct;
#L1244e0.   return @void ;

   }
    procedure [|java:util:UUID|] [|java:util:UUID.fromString|] ([|java:lang:String|] v25 @type (object)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.fromString:(Ljava/lang/String;)Ljava/util/UUID;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
      
#L1244f4.   if v25 != 0 then goto L124508;
#L1244f8.   v21:= new [|java:lang:NullPointerException|];
#L1244fc.   v22:= "uuid == null" @type (object, string);
#L124500.   call temp:=  [|java:lang:NullPointerException.<init>|](v21, v22) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L124506.   throw v21;
#L124508.   v21:= 5  @length 16;
#L12450c.   v0:= v21;
#L124510.   v0:= new [|int|][v0];
#L124514.   v19:= v0  @type object;
#L124518.   v4:= 1  @length 4;
#L12451a.   v20:= 0  @length 16;
#L12451e.   v3:= 0  @length 4;
#L124520.   v0:= v19  @type object;
#L124524.   v0:= v0.length;
#L124526.   v21:= v0;
#L12452a.   v0:= v21;
#L12452e.   if v3 >= v0 then goto L124564;
#L124532.   if v4 <= 0 then goto L124564;
#L124536.   v21:= "-" @type (object, string);
#L12453a.   v0:= v25  @type object;
#L12453e.   v1:= v21  @type object;
#L124542.   v2:= v20;
#L124546.   call temp:=  [|java:lang:String.indexOf|](v0, v1, v2) @signature [|Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I|] @classDescriptor [|java:lang:String|] @type virtual;
#L12454c.   v21:= temp;
#L12454e.   v19[v3]:= v21;
#L124552.   v4:= v19[v3];
#L124556.   v21:= v19[v3];
#L12455a.   v20:= v21 + 1;
#L12455e.   v3:= v3 + 1;
#L124562.   goto L124520;
#L124564.   v0:= v19  @type object;
#L124568.   v0:= v0.length;
#L12456a.   v21:= v0;
#L12456e.   v0:= v21;
#L124572.   if v3 != v0 then goto L124582;
#L124576.   v21:= -1  @length 16;
#L12457a.   v0:= v21;
#L12457e.   if v4 == v0 then goto L1245bc;
#L124582.   v21:= new [|java:lang:IllegalArgumentException|];
#L124586.   v22:= new [|java:lang:StringBuilder|];
#L12458a.   call temp:=  [|java:lang:StringBuilder.<init>|](v22) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L124590.   v23:= "Invalid UUID: " @type (object, string);
#L124594.   call temp:=  [|java:lang:StringBuilder.append|](v22, v23) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12459a.   v22:= temp  @type object;
#L12459c.   v0:= v22  @type object;
#L1245a0.   v1:= v25  @type object;
#L1245a4.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1245aa.   v22:= temp  @type object;
#L1245ac.   call temp:=  [|java:lang:StringBuilder.toString|](v22) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1245b2.   v22:= temp  @type object;
#L1245b4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v21, v22) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1245ba.   throw v21;
#L1245bc.   v21:= 0  @length 16;
#L1245c0.   v22:= 0  @length 16;
#L1245c4.   v22:= v19[v22];
#L1245c8.   v0:= v25  @type object;
#L1245cc.   v1:= v21;
#L1245d0.   v2:= v22;
#L1245d4.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L1245da.   v21:= temp  @type object;
#L1245dc.   v22:= 16  @length 16;
#L1245e0.   call temp:=  [|java:lang:Long.parseLong|](v21, v22) @signature [|Ljava/lang/Long;.parseLong:(Ljava/lang/String;I)J|] @classDescriptor [|java:lang:Long|] @type static;
#L1245e6.   v11:= temp  @type wide;
#L1245e8.   v21:= 0  @length 16;
#L1245ec.   v21:= v19[v21];
#L1245f0.   v21:= v21 + 1;
#L1245f4.   v22:= 1  @length 16;
#L1245f8.   v22:= v19[v22];
#L1245fc.   v0:= v25  @type object;
#L124600.   v1:= v21;
#L124604.   v2:= v22;
#L124608.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L12460e.   v21:= temp  @type object;
#L124610.   v22:= 16  @length 16;
#L124614.   call temp:=  [|java:lang:Long.parseLong|](v21, v22) @signature [|Ljava/lang/Long;.parseLong:(Ljava/lang/String;I)J|] @classDescriptor [|java:lang:Long|] @type static;
#L12461a.   v13:= temp  @type wide;
#L12461c.   v21:= 1  @length 16;
#L124620.   v21:= v19[v21];
#L124624.   v21:= v21 + 1;
#L124628.   v22:= 2  @length 16;
#L12462c.   v22:= v19[v22];
#L124630.   v0:= v25  @type object;
#L124634.   v1:= v21;
#L124638.   v2:= v22;
#L12463c.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L124642.   v21:= temp  @type object;
#L124644.   v22:= 16  @length 16;
#L124648.   call temp:=  [|java:lang:Long.parseLong|](v21, v22) @signature [|Ljava/lang/Long;.parseLong:(Ljava/lang/String;I)J|] @classDescriptor [|java:lang:Long|] @type static;
#L12464e.   v15:= temp  @type wide;
#L124650.   v21:= 2  @length 16;
#L124654.   v21:= v19[v21];
#L124658.   v21:= v21 + 1;
#L12465c.   v22:= 3  @length 16;
#L124660.   v22:= v19[v22];
#L124664.   v0:= v25  @type object;
#L124668.   v1:= v21;
#L12466c.   v2:= v22;
#L124670.   call temp:=  [|java:lang:String.substring|](v0, v1, v2) @signature [|Ljava/lang/String;.substring:(II)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L124676.   v21:= temp  @type object;
#L124678.   v22:= 16  @length 16;
#L12467c.   call temp:=  [|java:lang:Long.parseLong|](v21, v22) @signature [|Ljava/lang/Long;.parseLong:(Ljava/lang/String;I)J|] @classDescriptor [|java:lang:Long|] @type static;
#L124682.   v7:= temp  @type wide;
#L124684.   v21:= 3  @length 16;
#L124688.   v21:= v19[v21];
#L12468c.   v21:= v21 + 1;
#L124690.   v0:= v25  @type object;
#L124694.   v1:= v21;
#L124698.   call temp:=  [|java:lang:String.substring|](v0, v1) @signature [|Ljava/lang/String;.substring:(I)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type virtual;
#L12469e.   v21:= temp  @type object;
#L1246a0.   v22:= 16  @length 16;
#L1246a4.   call temp:=  [|java:lang:Long.parseLong|](v21, v22) @signature [|Ljava/lang/Long;.parseLong:(Ljava/lang/String;I)J|] @classDescriptor [|java:lang:Long|] @type static;
#L1246aa.   v9:= temp  @type wide;
#L1246ac.   v21:= 32  @length 16;
#L1246b0.   v21:= v11 ^< v21  @type long;
#L1246b4.   v23:= 16  @length 16;
#L1246b8.   v23:= v13 ^< v23  @type long;
#L1246bc.   v21:= v21 ^| v23  @type long;
#L1246c0.   v17:= v21 ^| v15  @type long;
#L1246c4.   v21:= 48  @length 16;
#L1246c8.   v21:= v7 ^< v21  @type long;
#L1246cc.   v5:= v21 ^| v9  @type long;
#L1246d0.   v21:= new [|java:util:UUID|];
#L1246d4.   v0:= v21  @type object;
#L1246d8.   v1:= v17  @type wide;
#L1246dc.   call temp:=  [|java:util:UUID.<init>|](v0, v1, v2, v5, v6) @signature [|Ljava/util/UUID;.<init>:(JJ)V|] @classDescriptor [|java:util:UUID|] @type direct;
#L1246e2.   return v21  @type object;

   }
    procedure [|void|] [|java:util:UUID.init|] ([|java:util:UUID|] v13 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.init:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
      
#L1246f4.   v8:= v13.[|java:util:UUID.mostSigBits|]   @wide;
#L1246f8.   v10:= v13.[|java:util:UUID.mostSigBits|]   @wide;
#L1246fc.   v12:= 32  @length 16;
#L124700.   v10:= v10 ^>> v12  @type long;
#L124702.   v8:= v8 ^~ v10  @type long;
#L124704.   v1:= (int)v8  @type l2i;
#L124706.   v8:= v13.[|java:util:UUID.leastSigBits|]   @wide;
#L12470a.   v10:= v13.[|java:util:UUID.leastSigBits|]   @wide;
#L12470e.   v12:= 32  @length 16;
#L124712.   v10:= v10 ^>> v12  @type long;
#L124714.   v8:= v8 ^~ v10  @type long;
#L124716.   v0:= (int)v8  @type l2i;
#L124718.   v8:= v1 ^~ v0  @type int;
#L12471c.   v13.[|java:util:UUID.hash|]  := v8;
#L124720.   v8:= v13.[|java:util:UUID.leastSigBits|]   @wide;
#L124724.   v10:= -9223372036854775808L  @length wide_high16;
#L124728.   v8:= v8 ^& v10  @type long;
#L12472a.   v10:= 0  @length wide16;
#L12472e.   v8:= cmp(v8,v10);
#L124732.   if v8 != 0 then goto L12476a;
#L124736.   v8:= 0  @length 4;
#L124738.   v13.[|java:util:UUID.variant|]  := v8;
#L12473c.   v8:= v13.[|java:util:UUID.mostSigBits|]   @wide;
#L124740.    v10:= 0.000000  @length wide32;
#L124746.   v8:= v8 ^& v10  @type long;
#L124748.   v10:= 12  @length 16;
#L12474c.   v8:= v8 ^>> v10  @type long;
#L12474e.   v8:= (int)v8  @type l2i;
#L124750.   v13.[|java:util:UUID.version|]  := v8;
#L124754.   v8:= v13.[|java:util:UUID.variant|] ;
#L124758.   v9:= 2  @length 4;
#L12475a.   if v8 == v9 then goto L1247a0;
#L12475e.   v8:= v13.[|java:util:UUID.version|] ;
#L124762.   v9:= 1  @length 4;
#L124764.   if v8 == v9 then goto L1247a0;
#L124768.   return @void ;
#L12476a.   v8:= v13.[|java:util:UUID.leastSigBits|]   @wide;
#L12476e.   v10:= 4611686018427387904L  @length wide_high16;
#L124772.   v8:= v8 ^& v10  @type long;
#L124774.   v10:= 0  @length wide16;
#L124778.   v8:= cmp(v8,v10);
#L12477c.   if v8 == 0 then goto L124798;
#L124780.   v8:= v13.[|java:util:UUID.leastSigBits|]   @wide;
#L124784.   v10:= -2305843009213693952L  @length wide_high16;
#L124788.   v8:= v8 ^& v10  @type long;
#L12478a.   v10:= 61  @length 16;
#L12478e.   v8:= v8 ^>> v10  @type long;
#L124790.   v8:= (int)v8  @type l2i;
#L124792.   v13.[|java:util:UUID.variant|]  := v8;
#L124796.   goto L12473c;
#L124798.   v8:= 2  @length 4;
#L12479a.   v13.[|java:util:UUID.variant|]  := v8;
#L12479e.   goto L12473c;
#L1247a0.   v8:= v13.[|java:util:UUID.mostSigBits|]   @wide;
#L1247a4.   v10:= nanL  @length wide;
#L1247ae.   v8:= v8 ^& v10  @type long;
#L1247b0.   v10:= 32  @length 16;
#L1247b4.   v4:= v8 ^>> v10  @type long;
#L1247b8.   v8:= v13.[|java:util:UUID.mostSigBits|]   @wide;
#L1247bc.   v10:= 0.000000L  @length wide;
#L1247c6.   v8:= v8 ^& v10  @type long;
#L1247c8.   v10:= 16  @length 16;
#L1247cc.   v6:= v8 ^< v10  @type long;
#L1247d0.   v8:= v13.[|java:util:UUID.mostSigBits|]   @wide;
#L1247d4.   v10:= 4095  @length wide16;
#L1247d8.   v8:= v8 ^& v10  @type long;
#L1247da.   v10:= 48  @length 16;
#L1247de.   v2:= v8 ^< v10  @type long;
#L1247e2.   v8:= v4 ^| v6  @type long;
#L1247e6.   v8:= v8 ^| v2  @type long;
#L1247e8.   v13.[|java:util:UUID.timestamp|]  := v8 @wide;
#L1247ec.   v8:= v13.[|java:util:UUID.leastSigBits|]   @wide;
#L1247f0.   v10:= 4611404543450677248L  @length wide_high16;
#L1247f4.   v8:= v8 ^& v10  @type long;
#L1247f6.   v10:= 48  @length 16;
#L1247fa.   v8:= v8 ^>> v10  @type long;
#L1247fc.   v8:= (int)v8  @type l2i;
#L1247fe.   v13.[|java:util:UUID.clockSequence|]  := v8;
#L124802.   v8:= v13.[|java:util:UUID.leastSigBits|]   @wide;
#L124806.   v10:= 0.000000L  @length wide;
#L124810.   v8:= v8 ^& v10  @type long;
#L124812.   v13.[|java:util:UUID.node|]  := v8 @wide;
#L124816.   goto L124768;

   }
    procedure [|java:util:UUID|] [|java:util:UUID.makeUuid|] ([|byte|][] v7, [|int|] v8) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.makeUuid:([BI)Ljava/util/UUID;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L124828.   v4:= 0  @length 4;
#L12482a.   v5:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L12482e.   call temp:=  [|libcore:io:Memory.peekLong|](v7, v4, v5) @signature [|Llibcore/io/Memory;.peekLong:([BILjava/nio/ByteOrder;)J|] @classDescriptor [|libcore:io:Memory|] @type static;
#L124834.   v2:= temp  @type wide;
#L124836.   v4:= 8  @length 16;
#L12483a.   v5:= @@[|java:nio:ByteOrder.BIG_ENDIAN|]   @type object;
#L12483e.   call temp:=  [|libcore:io:Memory.peekLong|](v7, v4, v5) @signature [|Llibcore/io/Memory;.peekLong:([BILjava/nio/ByteOrder;)J|] @classDescriptor [|libcore:io:Memory|] @type static;
#L124844.   v0:= temp  @type wide;
#L124846.    v4:= nan  @length wide32;
#L12484c.   v2:= v2 ^& v4  @type long;
#L12484e.   v4:= (long)v8  @type i2l;
#L124850.   v6:= 12  @length 16;
#L124854.   v4:= v4 ^< v6  @type long;
#L124856.   v2:= v2 ^| v4  @type long;
#L124858.   v4:= 2.000000L  @length wide;
#L124862.   v0:= v0 ^& v4  @type long;
#L124864.   v4:= -9223372036854775808L  @length wide_high16;
#L124868.   v0:= v0 ^| v4  @type long;
#L12486a.   v4:= new [|java:util:UUID|];
#L12486e.   call temp:=  [|java:util:UUID.<init>|](v4, v2, v3, v0, v1) @signature [|Ljava/util/UUID;.<init>:(JJ)V|] @classDescriptor [|java:util:UUID|] @type direct;
#L124874.   return v4  @type object;

   }
    procedure [|java:util:UUID|] [|java:util:UUID.nameUUIDFromBytes|] ([|byte|][] v4) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.nameUUIDFromBytes:([B)Ljava/util/UUID;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L124888.   if v4 != 0 then goto L12489c;
#L12488c.   v2:= new [|java:lang:NullPointerException|];
#L124890.   v3:= "name == null" @type (object, string);
#L124894.   call temp:=  [|java:lang:NullPointerException.<init>|](v2, v3) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12489a.   throw v2;
#L12489c.   v2:= "MD5" @type (object, string);
#L1248a0.   call temp:=  [|java:security:MessageDigest.getInstance|](v2) @signature [|Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;|] @classDescriptor [|java:security:MessageDigest|] @type static;
#L1248a6.   v1:= temp  @type object;
#L1248a8.   call temp:=  [|java:security:MessageDigest.digest|](v1, v4) @signature [|Ljava/security/MessageDigest;.digest:([B)[B|] @classDescriptor [|java:security:MessageDigest|] @type virtual;
#L1248ae.   v2:= temp  @type object;
#L1248b0.   v3:= 3  @length 4;
#L1248b2.   call temp:=  [|java:util:UUID.makeUuid|](v2, v3) @signature [|Ljava/util/UUID;.makeUuid:([BI)Ljava/util/UUID;|] @classDescriptor [|java:util:UUID|] @type static;
#L1248b8.   v2:= temp  @type object;
#L1248ba.   return v2  @type object;
#L1248bc.   v0:= Exception  @type object;
#L1248be.   v2:= new [|java:lang:AssertionError|];
#L1248c2.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L1248c8.   throw v2;
  catch  [|java:security:NoSuchAlgorithmException|] @[L12489c..L1248b8] goto L1248bc;

   }
    procedure [|java:util:UUID|] [|java:util:UUID.randomUUID|] () @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1248ec.   v1:= 16  @length 16;
#L1248f0.   v0:= new [|byte|][v1];
#L1248f4.   v2:= new [|java:util:UUID|];
#L1248f8.   (@monitorenter v2)
#L1248fa.   v1:= @@[|java:util:UUID.rng|]   @type object;
#L1248fe.   if v1 != 0 then goto L124910;
#L124902.   v1:= new [|java:security:SecureRandom|];
#L124906.   call temp:=  [|java:security:SecureRandom.<init>|](v1) @signature [|Ljava/security/SecureRandom;.<init>:()V|] @classDescriptor [|java:security:SecureRandom|] @type direct;
#L12490c.   @@[|java:util:UUID.rng|] := v1  @type object;
#L124910.   (@monitorexit v2)
#L124912.   v1:= @@[|java:util:UUID.rng|]   @type object;
#L124916.   call temp:=  [|java:security:SecureRandom.nextBytes|](v1, v0) @signature [|Ljava/security/SecureRandom;.nextBytes:([B)V|] @classDescriptor [|java:security:SecureRandom|] @type virtual;
#L12491c.   v1:= 4  @length 4;
#L12491e.   call temp:=  [|java:util:UUID.makeUuid|](v0, v1) @signature [|Ljava/util/UUID;.makeUuid:([BI)Ljava/util/UUID;|] @classDescriptor [|java:util:UUID|] @type static;
#L124924.   v1:= temp  @type object;
#L124926.   return v1  @type object;
#L124928.   v1:= Exception  @type object;
#L12492a.   (@monitorexit v2)
#L12492c.   throw v1;
  catch  [|any|] @[L1248fa..L124912] goto L124928;
  catch  [|any|] @[L12492a..L12492c] goto L124928;

   }
    procedure [|void|] [|java:util:UUID.readObject|] ([|java:util:UUID|] v0 @type (this), [|java:io:ObjectInputStream|] v1 @type (object)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
      
#L124954.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v1) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12495a.   call temp:=  [|java:util:UUID.init|](v0) @signature [|Ljava/util/UUID;.init:()V|] @classDescriptor [|java:util:UUID|] @type direct;
#L124960.   return @void ;

   }
    procedure [|int|] [|java:util:UUID.clockSequence|] ([|java:util:UUID|] v2 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.clockSequence:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124974.   v0:= v2.[|java:util:UUID.version|] ;
#L124978.   v1:= 1  @length 4;
#L12497a.   if v0 == v1 then goto L12498a;
#L12497e.   v0:= new [|java:lang:UnsupportedOperationException|];
#L124982.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L124988.   throw v0;
#L12498a.   v0:= v2.[|java:util:UUID.clockSequence|] ;
#L12498e.   return v0;

   }
    procedure [|int|] [|java:util:UUID.compareTo|] ([|java:util:UUID|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L1249a0.   v2:= ([|java:util:UUID|])v2;
#L1249a4.   call temp:=  [|java:util:UUID.compareTo|](v1, v2) @signature [|Ljava/util/UUID;.compareTo:(Ljava/util/UUID;)I|] @classDescriptor [|java:util:UUID|] @type virtual;
#L1249aa.   v0:= temp;
#L1249ac.   return v0;

   }
    procedure [|int|] [|java:util:UUID.compareTo|] ([|java:util:UUID|] v7 @type (this), [|java:util:UUID|] v8 @type (object)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.compareTo:(Ljava/util/UUID;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1249c0.   v1:= 1  @length 4;
#L1249c2.   v2:= 0  @length 4;
#L1249c4.   v0:= -1  @length 4;
#L1249c6.   if v8 != v7 then goto L1249ce;
#L1249ca.   v0:= v2;
#L1249cc.   return v0;
#L1249ce.   v3:= v7.[|java:util:UUID.mostSigBits|]   @wide;
#L1249d2.   v5:= v8.[|java:util:UUID.mostSigBits|]   @wide;
#L1249d6.   v3:= cmp(v3,v5);
#L1249da.   if v3 == 0 then goto L1249f2;
#L1249de.   v2:= v7.[|java:util:UUID.mostSigBits|]   @wide;
#L1249e2.   v4:= v8.[|java:util:UUID.mostSigBits|]   @wide;
#L1249e6.   v2:= cmp(v2,v4);
#L1249ea.   if v2 < 0 then goto L1249cc;
#L1249ee.   v0:= v1;
#L1249f0.   goto L1249cc;
#L1249f2.   v3:= v7.[|java:util:UUID.leastSigBits|]   @wide;
#L1249f6.   v5:= v8.[|java:util:UUID.leastSigBits|]   @wide;
#L1249fa.   v3:= cmp(v3,v5);
#L1249fe.   if v3 == 0 then goto L124a16;
#L124a02.   v2:= v7.[|java:util:UUID.leastSigBits|]   @wide;
#L124a06.   v4:= v8.[|java:util:UUID.leastSigBits|]   @wide;
#L124a0a.   v2:= cmp(v2,v4);
#L124a0e.   if v2 < 0 then goto L1249cc;
#L124a12.   v0:= v1;
#L124a14.   goto L1249cc;
#L124a16.   v0:= v2;
#L124a18.   goto L1249cc;

   }
    procedure [|boolean|] [|java:util:UUID.equals|] ([|java:util:UUID|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L124a2c.   v1:= 1  @length 4;
#L124a2e.   v2:= 0  @length 4;
#L124a30.   if v8 != 0 then goto L124a36;
#L124a34.   return v2;
#L124a36.   if v7 != v8 then goto L124a3e;
#L124a3a.   v2:= v1;
#L124a3c.   goto L124a34;
#L124a3e.   v3:= instanceof @varname v8 @type [|java:util:UUID|];
#L124a42.   if v3 == 0 then goto L124a34;
#L124a46.   v0:= v8  @type object;
#L124a48.   v0:= ([|java:util:UUID|])v0;
#L124a4c.   v3:= v7.[|java:util:UUID.leastSigBits|]   @wide;
#L124a50.   v5:= v0.[|java:util:UUID.leastSigBits|]   @wide;
#L124a54.   v3:= cmp(v3,v5);
#L124a58.   if v3 != 0 then goto L124a70;
#L124a5c.   v3:= v7.[|java:util:UUID.mostSigBits|]   @wide;
#L124a60.   v5:= v0.[|java:util:UUID.mostSigBits|]   @wide;
#L124a64.   v3:= cmp(v3,v5);
#L124a68.   if v3 != 0 then goto L124a70;
#L124a6c.   v2:= v1;
#L124a6e.   goto L124a34;
#L124a70.   v1:= v2;
#L124a72.   goto L124a6c;

   }
    procedure [|long|] [|java:util:UUID.getLeastSignificantBits|] ([|java:util:UUID|] v2 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.getLeastSignificantBits:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124a84.   v0:= v2.[|java:util:UUID.leastSigBits|]   @wide;
#L124a88.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:UUID.getMostSignificantBits|] ([|java:util:UUID|] v2 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.getMostSignificantBits:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124a9c.   v0:= v2.[|java:util:UUID.mostSigBits|]   @wide;
#L124aa0.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:UUID.hashCode|] ([|java:util:UUID|] v1 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124ab4.   v0:= v1.[|java:util:UUID.hash|] ;
#L124ab8.   return v0;

   }
    procedure [|long|] [|java:util:UUID.node|] ([|java:util:UUID|] v2 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.node:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124acc.   v0:= v2.[|java:util:UUID.version|] ;
#L124ad0.   v1:= 1  @length 4;
#L124ad2.   if v0 == v1 then goto L124ae2;
#L124ad6.   v0:= new [|java:lang:UnsupportedOperationException|];
#L124ada.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L124ae0.   throw v0;
#L124ae2.   v0:= v2.[|java:util:UUID.node|]   @wide;
#L124ae6.   return v0  @type wide;

   }
    procedure [|long|] [|java:util:UUID.timestamp|] ([|java:util:UUID|] v2 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.timestamp:()J|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124af8.   v0:= v2.[|java:util:UUID.version|] ;
#L124afc.   v1:= 1  @length 4;
#L124afe.   if v0 == v1 then goto L124b0e;
#L124b02.   v0:= new [|java:lang:UnsupportedOperationException|];
#L124b06.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L124b0c.   throw v0;
#L124b0e.   v0:= v2.[|java:util:UUID.timestamp|]   @wide;
#L124b12.   return v0  @type wide;

   }
    procedure [|java:lang:String|] [|java:util:UUID.toString|] ([|java:util:UUID|] v10 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L124b24.   v9:= 48  @length 16;
#L124b28.   v8:= 16  @length 16;
#L124b2c.   v7:= 45  @length 16;
#L124b30.   v0:= new [|java:lang:StringBuilder|];
#L124b34.   v5:= 36  @length 16;
#L124b38.   call temp:=  [|java:lang:StringBuilder.<init>|](v0, v5) @signature [|Ljava/lang/StringBuilder;.<init>:(I)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L124b3e.   v5:= v10.[|java:util:UUID.mostSigBits|]   @wide;
#L124b42.   call temp:=  [|java:lang:Long.toHexString|](v5, v6) @signature [|Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L124b48.   v4:= temp  @type object;
#L124b4a.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L124b50.   v5:= temp;
#L124b52.   if v5 >= v8 then goto L124b74;
#L124b56.   call temp:=  [|java:lang:String.length|](v4) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L124b5c.   v5:= temp;
#L124b5e.   v1:= v5 - 16;
#L124b62.   v2:= 0  @length 4;
#L124b64.   if v2 >= v1 then goto L124b74;
#L124b68.   call temp:=  [|java:lang:StringBuilder.append|](v0, v9) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124b6e.   v2:= v2 + 1;
#L124b72.   goto L124b64;
#L124b74.   call temp:=  [|java:lang:StringBuilder.append|](v0, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124b7a.   v5:= 8  @length 16;
#L124b7e.   call temp:=  [|java:lang:StringBuilder.insert|](v0, v5, v7) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124b84.   v5:= 13  @length 16;
#L124b88.   call temp:=  [|java:lang:StringBuilder.insert|](v0, v5, v7) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124b8e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v7) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124b94.   v5:= v10.[|java:util:UUID.leastSigBits|]   @wide;
#L124b98.   call temp:=  [|java:lang:Long.toHexString|](v5, v6) @signature [|Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;|] @classDescriptor [|java:lang:Long|] @type static;
#L124b9e.   v3:= temp  @type object;
#L124ba0.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L124ba6.   v5:= temp;
#L124ba8.   if v5 >= v8 then goto L124bca;
#L124bac.   call temp:=  [|java:lang:String.length|](v3) @signature [|Ljava/lang/String;.length:()I|] @classDescriptor [|java:lang:String|] @type virtual;
#L124bb2.   v5:= temp;
#L124bb4.   v1:= v5 - 16;
#L124bb8.   v2:= 0  @length 4;
#L124bba.   if v2 >= v1 then goto L124bca;
#L124bbe.   call temp:=  [|java:lang:StringBuilder.append|](v0, v9) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124bc4.   v2:= v2 + 1;
#L124bc8.   goto L124bba;
#L124bca.   call temp:=  [|java:lang:StringBuilder.append|](v0, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124bd0.   v5:= 23  @length 16;
#L124bd4.   call temp:=  [|java:lang:StringBuilder.insert|](v0, v5, v7) @signature [|Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124bda.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124be0.   v5:= temp  @type object;
#L124be2.   return v5  @type object;

   }
    procedure [|int|] [|java:util:UUID.variant|] ([|java:util:UUID|] v1 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.variant:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124bf4.   v0:= v1.[|java:util:UUID.variant|] ;
#L124bf8.   return v0;

   }
    procedure [|int|] [|java:util:UUID.version|] ([|java:util:UUID|] v1 @type (this)) @owner [|java:util:UUID|] @signature [|Ljava/util/UUID;.version:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124c0c.   v0:= v1.[|java:util:UUID.version|] ;
#L124c10.   return v0;

   }
record [|java:util:UnknownFormatConversionException|]  @type class @AccessFlag PUBLIC  extends [|java:util:IllegalFormatException|] {
      [|java:lang:String|] [|java:util:UnknownFormatConversionException.s|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:UnknownFormatConversionException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:UnknownFormatConversionException.<init>|] ([|java:util:UnknownFormatConversionException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:UnknownFormatConversionException|] @signature [|Ljava/util/UnknownFormatConversionException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L124c24.   call temp:=  [|java:util:IllegalFormatException.<init>|](v2) @signature [|Ljava/util/IllegalFormatException;.<init>:()V|] @classDescriptor [|java:util:IllegalFormatException|] @type direct;
#L124c2a.   if v3 != 0 then goto L124c3e;
#L124c2e.   v0:= new [|java:lang:NullPointerException|];
#L124c32.   v1:= "s == null" @type (object, string);
#L124c36.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L124c3c.   throw v0;
#L124c3e.   v2.[|java:util:UnknownFormatConversionException.s|]  := v3 @type object;
#L124c42.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:UnknownFormatConversionException.getConversion|] ([|java:util:UnknownFormatConversionException|] v1 @type (this)) @owner [|java:util:UnknownFormatConversionException|] @signature [|Ljava/util/UnknownFormatConversionException;.getConversion:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124c54.   v0:= v1.[|java:util:UnknownFormatConversionException.s|]   @type object;
#L124c58.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:UnknownFormatConversionException.getMessage|] ([|java:util:UnknownFormatConversionException|] v2 @type (this)) @owner [|java:util:UnknownFormatConversionException|] @signature [|Ljava/util/UnknownFormatConversionException;.getMessage:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124c6c.   v0:= new [|java:lang:StringBuilder|];
#L124c70.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L124c76.   v1:= "Conversion: " @type (object, string);
#L124c7a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124c80.   v0:= temp  @type object;
#L124c82.   v1:= v2.[|java:util:UnknownFormatConversionException.s|]   @type object;
#L124c86.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124c8c.   v0:= temp  @type object;
#L124c8e.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124c94.   v0:= temp  @type object;
#L124c96.   return v0  @type object;

   }
record [|java:util:UnknownFormatFlagsException|]  @type class @AccessFlag PUBLIC  extends [|java:util:IllegalFormatException|] {
      [|java:lang:String|] [|java:util:UnknownFormatFlagsException.flags|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:UnknownFormatFlagsException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:UnknownFormatFlagsException.<init>|] ([|java:util:UnknownFormatFlagsException|] v2 @type (this), [|java:lang:String|] v3 @type (object)) @owner [|java:util:UnknownFormatFlagsException|] @signature [|Ljava/util/UnknownFormatFlagsException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L124ca8.   call temp:=  [|java:util:IllegalFormatException.<init>|](v2) @signature [|Ljava/util/IllegalFormatException;.<init>:()V|] @classDescriptor [|java:util:IllegalFormatException|] @type direct;
#L124cae.   if v3 != 0 then goto L124cc2;
#L124cb2.   v0:= new [|java:lang:NullPointerException|];
#L124cb6.   v1:= "f == null" @type (object, string);
#L124cba.   call temp:=  [|java:lang:NullPointerException.<init>|](v0, v1) @signature [|Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L124cc0.   throw v0;
#L124cc2.   v2.[|java:util:UnknownFormatFlagsException.flags|]  := v3 @type object;
#L124cc6.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:UnknownFormatFlagsException.getFlags|] ([|java:util:UnknownFormatFlagsException|] v1 @type (this)) @owner [|java:util:UnknownFormatFlagsException|] @signature [|Ljava/util/UnknownFormatFlagsException;.getFlags:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124cd8.   v0:= v1.[|java:util:UnknownFormatFlagsException.flags|]   @type object;
#L124cdc.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:UnknownFormatFlagsException.getMessage|] ([|java:util:UnknownFormatFlagsException|] v2 @type (this)) @owner [|java:util:UnknownFormatFlagsException|] @signature [|Ljava/util/UnknownFormatFlagsException;.getMessage:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124cf0.   v0:= new [|java:lang:StringBuilder|];
#L124cf4.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L124cfa.   v1:= "Flags: " @type (object, string);
#L124cfe.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124d04.   v0:= temp  @type object;
#L124d06.   v1:= v2.[|java:util:UnknownFormatFlagsException.flags|]   @type object;
#L124d0a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124d10.   v0:= temp  @type object;
#L124d12.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L124d18.   v0:= temp  @type object;
#L124d1a.   return v0  @type object;

   }
record [|java:util:UnsafeArrayList|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractList|] {
      [|java:lang:Object|][] [|java:util:UnsafeArrayList.array|]    @AccessFlag PRIVATE;
      [|java:lang:Class|] [|java:util:UnsafeArrayList.elementType|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:UnsafeArrayList.size|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:UnsafeArrayList.<init>|] ([|java:util:UnsafeArrayList|] v1 @type (this), [|java:lang:Class|] v2 @type (object), [|int|] v3) @owner [|java:util:UnsafeArrayList|] @signature [|Ljava/util/UnsafeArrayList;.<init>:(Ljava/lang/Class;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L124d2c.   call temp:=  [|java:util:AbstractList.<init>|](v1) @signature [|Ljava/util/AbstractList;.<init>:()V|] @classDescriptor [|java:util:AbstractList|] @type direct;
#L124d32.   call temp:=  [|java:lang:reflect:Array.newInstance|](v2, v3) @signature [|Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L124d38.   v0:= temp  @type object;
#L124d3a.   v0:= ([|java:lang:Object|][])v0;
#L124d3e.   v0:= ([|java:lang:Object|][])v0;
#L124d42.   v1.[|java:util:UnsafeArrayList.array|]  := v0 @type object;
#L124d46.   v1.[|java:util:UnsafeArrayList.elementType|]  := v2 @type object;
#L124d4a.   return @void ;

   }
    procedure [|boolean|] [|java:util:UnsafeArrayList.add|] ([|java:util:UnsafeArrayList|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:UnsafeArrayList|] @signature [|Ljava/util/UnsafeArrayList;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L124d5c.   v3:= 0  @length 4;
#L124d5e.   v1:= v4.[|java:util:UnsafeArrayList.size|] ;
#L124d62.   v2:= v4.[|java:util:UnsafeArrayList.array|]   @type object;
#L124d66.   v2:= v2.length;
#L124d68.   if v1 != v2 then goto L124d9c;
#L124d6c.   v1:= v4.[|java:util:UnsafeArrayList.elementType|]   @type object;
#L124d70.   v2:= v4.[|java:util:UnsafeArrayList.size|] ;
#L124d74.   v2:= v2 * 2;
#L124d78.   call temp:=  [|java:lang:reflect:Array.newInstance|](v1, v2) @signature [|Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L124d7e.   v1:= temp  @type object;
#L124d80.   v1:= ([|java:lang:Object|][])v1;
#L124d84.   v0:= v1  @type object;
#L124d86.   v0:= ([|java:lang:Object|][])v0;
#L124d8a.   v1:= v4.[|java:util:UnsafeArrayList.array|]   @type object;
#L124d8e.   v2:= v4.[|java:util:UnsafeArrayList.size|] ;
#L124d92.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L124d98.   v4.[|java:util:UnsafeArrayList.array|]  := v0 @type object;
#L124d9c.   v1:= v4.[|java:util:UnsafeArrayList.array|]   @type object;
#L124da0.   v2:= v4.[|java:util:UnsafeArrayList.size|] ;
#L124da4.   v3:= v2 + 1;
#L124da8.   v4.[|java:util:UnsafeArrayList.size|]  := v3;
#L124dac.   v1[v2]:= v5  @type object;
#L124db0.   v1:= v4.[|java:util:UnsafeArrayList.modCount|] ;
#L124db4.   v1:= v1 + 1;
#L124db8.   v4.[|java:util:UnsafeArrayList.modCount|]  := v1;
#L124dbc.   v1:= 1  @length 4;
#L124dbe.   return v1;

   }
    procedure [|java:lang:Object|][] [|java:util:UnsafeArrayList.array|] ([|java:util:UnsafeArrayList|] v1 @type (this)) @owner [|java:util:UnsafeArrayList|] @signature [|Ljava/util/UnsafeArrayList;.array:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124dd0.   v0:= v1.[|java:util:UnsafeArrayList.array|]   @type object;
#L124dd4.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:UnsafeArrayList.get|] ([|java:util:UnsafeArrayList|] v1 @type (this), [|int|] v2) @owner [|java:util:UnsafeArrayList|] @signature [|Ljava/util/UnsafeArrayList;.get:(I)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124de8.   v0:= v1.[|java:util:UnsafeArrayList.array|]   @type object;
#L124dec.   v0:= v0[v2]  @type object;
#L124df0.   return v0  @type object;

   }
    procedure [|int|] [|java:util:UnsafeArrayList.size|] ([|java:util:UnsafeArrayList|] v1 @type (this)) @owner [|java:util:UnsafeArrayList|] @signature [|Ljava/util/UnsafeArrayList;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124e04.   v0:= v1.[|java:util:UnsafeArrayList.size|] ;
#L124e08.   return v0;

   }
record [|java:util:Vector$1|]  @type class @AccessFlag  extends  [|java:util:Enumeration|] {
      [|int|] [|java:util:Vector$1.pos|]    @AccessFlag ;
      [|java:util:Vector|] [|java:util:Vector$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:Vector$1.<init>|] ([|java:util:Vector$1|] v1 @type (this), [|java:util:Vector|] v2 @type (object)) @owner [|java:util:Vector$1|] @signature [|Ljava/util/Vector$1;.<init>:(Ljava/util/Vector;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L124e1c.   v1.[|java:util:Vector$1.this$0|]  := v2 @type object;
#L124e20.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L124e26.   v0:= 0  @length 4;
#L124e28.   v1.[|java:util:Vector$1.pos|]  := v0;
#L124e2c.   return @void ;

   }
    procedure [|boolean|] [|java:util:Vector$1.hasMoreElements|] ([|java:util:Vector$1|] v2 @type (this)) @owner [|java:util:Vector$1|] @signature [|Ljava/util/Vector$1;.hasMoreElements:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124e40.   v0:= v2.[|java:util:Vector$1.pos|] ;
#L124e44.   v1:= v2.[|java:util:Vector$1.this$0|]   @type object;
#L124e48.   v1:= v1.[|java:util:Vector.elementCount|] ;
#L124e4c.   if v0 >= v1 then goto L124e54;
#L124e50.   v0:= 1  @length 4;
#L124e52.   return v0;
#L124e54.   v0:= 0  @length 4;
#L124e56.   goto L124e52;

   }
    procedure [|java:lang:Object|] [|java:util:Vector$1.nextElement|] ([|java:util:Vector$1|] v4 @type (this)) @owner [|java:util:Vector$1|] @signature [|Ljava/util/Vector$1;.nextElement:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L124e68.   v1:= v4.[|java:util:Vector$1.this$0|]   @type object;
#L124e6c.   (@monitorenter v1)
#L124e6e.   v0:= v4.[|java:util:Vector$1.pos|] ;
#L124e72.   v2:= v4.[|java:util:Vector$1.this$0|]   @type object;
#L124e76.   v2:= v2.[|java:util:Vector.elementCount|] ;
#L124e7a.   if v0 >= v2 then goto L124e9a;
#L124e7e.   v0:= v4.[|java:util:Vector$1.this$0|]   @type object;
#L124e82.   v0:= v0.[|java:util:Vector.elementData|]   @type object;
#L124e86.   v2:= v4.[|java:util:Vector$1.pos|] ;
#L124e8a.   v3:= v2 + 1;
#L124e8e.   v4.[|java:util:Vector$1.pos|]  := v3;
#L124e92.   v0:= v0[v2]  @type object;
#L124e96.   (@monitorexit v1)
#L124e98.   return v0  @type object;
#L124e9a.   (@monitorexit v1)
#L124e9c.   v0:= new [|java:util:NoSuchElementException|];
#L124ea0.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L124ea6.   throw v0;
#L124ea8.   v0:= Exception  @type object;
#L124eaa.   (@monitorexit v1)
#L124eac.   throw v0;
  catch  [|any|] @[L124e6e..L124e9c] goto L124ea8;
  catch  [|any|] @[L124eaa..L124eac] goto L124ea8;

   }
record [|java:util:WeakHashMap$Entry$Type|]  @type interface @AccessFlag INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap$Entry$Type.get|] ([|java:util:Map$Entry|] v0 @type (object)) @owner [|java:util:WeakHashMap$Entry$Type|] @signature [|Ljava/util/WeakHashMap$Entry$Type;.get:(Ljava/util/Map$Entry;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:WeakHashMap$1$1|]  @type class @AccessFlag  extends  [|java:util:WeakHashMap$Entry$Type|] {
      [|java:util:WeakHashMap$1|] [|java:util:WeakHashMap$1$1.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:WeakHashMap$1$1.<init>|] ([|java:util:WeakHashMap$1$1|] v0 @type (this), [|java:util:WeakHashMap$1|] v1 @type (object)) @owner [|java:util:WeakHashMap$1$1|] @signature [|Ljava/util/WeakHashMap$1$1;.<init>:(Ljava/util/WeakHashMap$1;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L124ed4.   v0.[|java:util:WeakHashMap$1$1.this$1|]  := v1 @type object;
#L124ed8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L124ede.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap$1$1.get|] ([|java:util:WeakHashMap$1$1|] v1 @type (this), [|java:util:Map$Entry|] v2 @type (object)) @owner [|java:util:WeakHashMap$1$1|] @signature [|Ljava/util/WeakHashMap$1$1;.get:(Ljava/util/Map$Entry;)Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L124ef0.   call temp:=  [|java:util:WeakHashMap$1$1.get|](v1, v2) @signature [|Ljava/util/WeakHashMap$1$1;.get:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:WeakHashMap$1$1|] @type virtual;
#L124ef6.   v0:= temp  @type object;
#L124ef8.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:WeakHashMap$1$1.get|] ([|java:util:WeakHashMap$1$1|] v0 @type (this), [|java:util:Map$Entry|] v1 @type (object)) @owner [|java:util:WeakHashMap$1$1|] @signature [|Ljava/util/WeakHashMap$1$1;.get:(Ljava/util/Map$Entry;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
      
#L124f0c.   return v1  @type object;

   }
record [|java:util:WeakHashMap$1|]  @type class @AccessFlag   extends [|java:util:AbstractSet|] {
      [|java:util:WeakHashMap|] [|java:util:WeakHashMap$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:WeakHashMap$1.<init>|] ([|java:util:WeakHashMap$1|] v0 @type (this), [|java:util:WeakHashMap|] v1 @type (object)) @owner [|java:util:WeakHashMap$1|] @signature [|Ljava/util/WeakHashMap$1;.<init>:(Ljava/util/WeakHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L124f20.   v0.[|java:util:WeakHashMap$1.this$0|]  := v1 @type object;
#L124f24.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L124f2a.   return @void ;

   }
    procedure [|void|] [|java:util:WeakHashMap$1.clear|] ([|java:util:WeakHashMap$1|] v1 @type (this)) @owner [|java:util:WeakHashMap$1|] @signature [|Ljava/util/WeakHashMap$1;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L124f3c.   v0:= v1.[|java:util:WeakHashMap$1.this$0|]   @type object;
#L124f40.   call temp:=  [|java:util:WeakHashMap.clear|](v0) @signature [|Ljava/util/WeakHashMap;.clear:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L124f46.   return @void ;

   }
    procedure [|boolean|] [|java:util:WeakHashMap$1.contains|] ([|java:util:WeakHashMap$1|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:WeakHashMap$1|] @signature [|Ljava/util/WeakHashMap$1;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L124f58.   v2:= instanceof @varname v5 @type [|java:util:Map$Entry|];
#L124f5c.   if v2 == 0 then goto L124f9c;
#L124f60.   v3:= v4.[|java:util:WeakHashMap$1.this$0|]   @type object;
#L124f64.   v2:= v5  @type object;
#L124f66.   v2:= ([|java:util:Map$Entry|])v2;
#L124f6a.   call temp:=  [|java:util:Map$Entry.getKey|](v2) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L124f70.   v2:= temp  @type object;
#L124f72.   call temp:=  [|java:util:WeakHashMap.getEntry|](v3, v2) @signature [|Ljava/util/WeakHashMap;.getEntry:(Ljava/lang/Object;)Ljava/util/WeakHashMap$Entry;|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L124f78.   v0:= temp  @type object;
#L124f7a.   if v0 == 0 then goto L124f9c;
#L124f7e.   call temp:=  [|java:util:WeakHashMap$Entry.get|](v0) @signature [|Ljava/util/WeakHashMap$Entry;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap$Entry|] @type virtual;
#L124f84.   v1:= temp  @type object;
#L124f86.   if v1 != 0 then goto L124f92;
#L124f8a.   v2:= v0.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L124f8e.   if v2 == 0 then goto L124f9c;
#L124f92.   call temp:=  [|java:lang:Object.equals|](v5, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L124f98.   v2:= temp;
#L124f9a.   return v2;
#L124f9c.   v2:= 0  @length 4;
#L124f9e.   goto L124f9a;

   }
    procedure [|java:util:Iterator|] [|java:util:WeakHashMap$1.iterator|] ([|java:util:WeakHashMap$1|] v3 @type (this)) @owner [|java:util:WeakHashMap$1|] @signature [|Ljava/util/WeakHashMap$1;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L124fb0.   v0:= new [|java:util:WeakHashMap$HashIterator|];
#L124fb4.   v1:= v3.[|java:util:WeakHashMap$1.this$0|]   @type object;
#L124fb8.   v2:= new [|java:util:WeakHashMap$1$1|];
#L124fbc.   call temp:=  [|java:util:WeakHashMap$1$1.<init>|](v2, v3) @signature [|Ljava/util/WeakHashMap$1$1;.<init>:(Ljava/util/WeakHashMap$1;)V|] @classDescriptor [|java:util:WeakHashMap$1$1|] @type direct;
#L124fc2.   call temp:=  [|java:util:WeakHashMap$HashIterator.<init>|](v0, v1, v2) @signature [|Ljava/util/WeakHashMap$HashIterator;.<init>:(Ljava/util/WeakHashMap;Ljava/util/WeakHashMap$Entry$Type;)V|] @classDescriptor [|java:util:WeakHashMap$HashIterator|] @type direct;
#L124fc8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:WeakHashMap$1.remove|] ([|java:util:WeakHashMap$1|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:WeakHashMap$1|] @signature [|Ljava/util/WeakHashMap$1;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L124fdc.   call temp:=  [|java:util:WeakHashMap$1.contains|](v2, v3) @signature [|Ljava/util/WeakHashMap$1;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:WeakHashMap$1|] @type virtual;
#L124fe2.   v0:= temp;
#L124fe4.   if v0 == 0 then goto L125002;
#L124fe8.   v0:= v2.[|java:util:WeakHashMap$1.this$0|]   @type object;
#L124fec.   v3:= ([|java:util:Map$Entry|])v3;
#L124ff0.   call temp:=  [|java:util:Map$Entry.getKey|](v3) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L124ff6.   v1:= temp  @type object;
#L124ff8.   call temp:=  [|java:util:WeakHashMap.remove|](v0, v1) @signature [|Ljava/util/WeakHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L124ffe.   v0:= 1  @length 4;
#L125000.   return v0;
#L125002.   v0:= 0  @length 4;
#L125004.   goto L125000;

   }
    procedure [|int|] [|java:util:WeakHashMap$1.size|] ([|java:util:WeakHashMap$1|] v1 @type (this)) @owner [|java:util:WeakHashMap$1|] @signature [|Ljava/util/WeakHashMap$1;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125018.   v0:= v1.[|java:util:WeakHashMap$1.this$0|]   @type object;
#L12501c.   call temp:=  [|java:util:WeakHashMap.size|](v0) @signature [|Ljava/util/WeakHashMap;.size:()I|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125022.   v0:= temp;
#L125024.   return v0;

   }
record [|java:util:WeakHashMap$2$1|]  @type class @AccessFlag  extends  [|java:util:WeakHashMap$Entry$Type|] {
      [|java:util:WeakHashMap$2|] [|java:util:WeakHashMap$2$1.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:WeakHashMap$2$1.<init>|] ([|java:util:WeakHashMap$2$1|] v0 @type (this), [|java:util:WeakHashMap$2|] v1 @type (object)) @owner [|java:util:WeakHashMap$2$1|] @signature [|Ljava/util/WeakHashMap$2$1;.<init>:(Ljava/util/WeakHashMap$2;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L125038.   v0.[|java:util:WeakHashMap$2$1.this$1|]  := v1 @type object;
#L12503c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L125042.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap$2$1.get|] ([|java:util:WeakHashMap$2$1|] v1 @type (this), [|java:util:Map$Entry|] v2 @type (object)) @owner [|java:util:WeakHashMap$2$1|] @signature [|Ljava/util/WeakHashMap$2$1;.get:(Ljava/util/Map$Entry;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125054.   call temp:=  [|java:util:Map$Entry.getKey|](v2) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12505a.   v0:= temp  @type object;
#L12505c.   return v0  @type object;

   }
record [|java:util:WeakHashMap$2|]  @type class @AccessFlag   extends [|java:util:AbstractSet|] {
      [|java:util:WeakHashMap|] [|java:util:WeakHashMap$2.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:WeakHashMap$2.<init>|] ([|java:util:WeakHashMap$2|] v0 @type (this), [|java:util:WeakHashMap|] v1 @type (object)) @owner [|java:util:WeakHashMap$2|] @signature [|Ljava/util/WeakHashMap$2;.<init>:(Ljava/util/WeakHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L125070.   v0.[|java:util:WeakHashMap$2.this$0|]  := v1 @type object;
#L125074.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12507a.   return @void ;

   }
    procedure [|void|] [|java:util:WeakHashMap$2.clear|] ([|java:util:WeakHashMap$2|] v1 @type (this)) @owner [|java:util:WeakHashMap$2|] @signature [|Ljava/util/WeakHashMap$2;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12508c.   v0:= v1.[|java:util:WeakHashMap$2.this$0|]   @type object;
#L125090.   call temp:=  [|java:util:WeakHashMap.clear|](v0) @signature [|Ljava/util/WeakHashMap;.clear:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125096.   return @void ;

   }
    procedure [|boolean|] [|java:util:WeakHashMap$2.contains|] ([|java:util:WeakHashMap$2|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:WeakHashMap$2|] @signature [|Ljava/util/WeakHashMap$2;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1250a8.   v0:= v1.[|java:util:WeakHashMap$2.this$0|]   @type object;
#L1250ac.   call temp:=  [|java:util:WeakHashMap.containsKey|](v0, v2) @signature [|Ljava/util/WeakHashMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L1250b2.   v0:= temp;
#L1250b4.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:WeakHashMap$2.iterator|] ([|java:util:WeakHashMap$2|] v3 @type (this)) @owner [|java:util:WeakHashMap$2|] @signature [|Ljava/util/WeakHashMap$2;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1250c8.   v0:= new [|java:util:WeakHashMap$HashIterator|];
#L1250cc.   v1:= v3.[|java:util:WeakHashMap$2.this$0|]   @type object;
#L1250d0.   v2:= new [|java:util:WeakHashMap$2$1|];
#L1250d4.   call temp:=  [|java:util:WeakHashMap$2$1.<init>|](v2, v3) @signature [|Ljava/util/WeakHashMap$2$1;.<init>:(Ljava/util/WeakHashMap$2;)V|] @classDescriptor [|java:util:WeakHashMap$2$1|] @type direct;
#L1250da.   call temp:=  [|java:util:WeakHashMap$HashIterator.<init>|](v0, v1, v2) @signature [|Ljava/util/WeakHashMap$HashIterator;.<init>:(Ljava/util/WeakHashMap;Ljava/util/WeakHashMap$Entry$Type;)V|] @classDescriptor [|java:util:WeakHashMap$HashIterator|] @type direct;
#L1250e0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:WeakHashMap$2.remove|] ([|java:util:WeakHashMap$2|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:WeakHashMap$2|] @signature [|Ljava/util/WeakHashMap$2;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1250f4.   v0:= v1.[|java:util:WeakHashMap$2.this$0|]   @type object;
#L1250f8.   call temp:=  [|java:util:WeakHashMap.containsKey|](v0, v2) @signature [|Ljava/util/WeakHashMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L1250fe.   v0:= temp;
#L125100.   if v0 == 0 then goto L125112;
#L125104.   v0:= v1.[|java:util:WeakHashMap$2.this$0|]   @type object;
#L125108.   call temp:=  [|java:util:WeakHashMap.remove|](v0, v2) @signature [|Ljava/util/WeakHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L12510e.   v0:= 1  @length 4;
#L125110.   return v0;
#L125112.   v0:= 0  @length 4;
#L125114.   goto L125110;

   }
    procedure [|int|] [|java:util:WeakHashMap$2.size|] ([|java:util:WeakHashMap$2|] v1 @type (this)) @owner [|java:util:WeakHashMap$2|] @signature [|Ljava/util/WeakHashMap$2;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125128.   v0:= v1.[|java:util:WeakHashMap$2.this$0|]   @type object;
#L12512c.   call temp:=  [|java:util:WeakHashMap.size|](v0) @signature [|Ljava/util/WeakHashMap;.size:()I|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125132.   v0:= temp;
#L125134.   return v0;

   }
    procedure [|java:lang:Object|][] [|java:util:WeakHashMap$2.toArray|] ([|java:util:WeakHashMap$2|] v3 @type (this)) @owner [|java:util:WeakHashMap$2|] @signature [|Ljava/util/WeakHashMap$2;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L125148.   v0:= new [|java:util:ArrayList|];
#L12514c.   call temp:=  [|java:util:WeakHashMap$2.size|](v3) @signature [|Ljava/util/WeakHashMap$2;.size:()I|] @classDescriptor [|java:util:WeakHashMap$2|] @type virtual;
#L125152.   v2:= temp;
#L125154.   call temp:=  [|java:util:ArrayList.<init>|](v0, v2) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L12515a.   call temp:=  [|java:util:WeakHashMap$2.iterator|](v3) @signature [|Ljava/util/WeakHashMap$2;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:WeakHashMap$2|] @type virtual;
#L125160.   v1:= temp  @type object;
#L125162.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L125168.   v2:= temp;
#L12516a.   if v2 == 0 then goto L12517e;
#L12516e.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L125174.   v2:= temp  @type object;
#L125176.   call temp:=  [|java:util:Collection.add|](v0, v2) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L12517c.   goto L125162;
#L12517e.   call temp:=  [|java:util:Collection.toArray|](v0) @signature [|Ljava/util/Collection;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:Collection|] @type interface;
#L125184.   v2:= temp  @type object;
#L125186.   return v2  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:WeakHashMap$2.toArray|] ([|java:util:WeakHashMap$2|] v3 @type (this), [|java:lang:Object|][] v4 @type (object)) @owner [|java:util:WeakHashMap$2|] @signature [|Ljava/util/WeakHashMap$2;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L125198.   v0:= new [|java:util:ArrayList|];
#L12519c.   call temp:=  [|java:util:WeakHashMap$2.size|](v3) @signature [|Ljava/util/WeakHashMap$2;.size:()I|] @classDescriptor [|java:util:WeakHashMap$2|] @type virtual;
#L1251a2.   v2:= temp;
#L1251a4.   call temp:=  [|java:util:ArrayList.<init>|](v0, v2) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L1251aa.   call temp:=  [|java:util:WeakHashMap$2.iterator|](v3) @signature [|Ljava/util/WeakHashMap$2;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:WeakHashMap$2|] @type virtual;
#L1251b0.   v1:= temp  @type object;
#L1251b2.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1251b8.   v2:= temp;
#L1251ba.   if v2 == 0 then goto L1251ce;
#L1251be.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1251c4.   v2:= temp  @type object;
#L1251c6.   call temp:=  [|java:util:Collection.add|](v0, v2) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L1251cc.   goto L1251b2;
#L1251ce.   call temp:=  [|java:util:Collection.toArray|](v0, v4) @signature [|Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Collection|] @type interface;
#L1251d4.   v2:= temp  @type object;
#L1251d6.   return v2  @type object;

   }
record [|java:util:WeakHashMap$3$1|]  @type class @AccessFlag  extends  [|java:util:WeakHashMap$Entry$Type|] {
      [|java:util:WeakHashMap$3|] [|java:util:WeakHashMap$3$1.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:WeakHashMap$3$1.<init>|] ([|java:util:WeakHashMap$3$1|] v0 @type (this), [|java:util:WeakHashMap$3|] v1 @type (object)) @owner [|java:util:WeakHashMap$3$1|] @signature [|Ljava/util/WeakHashMap$3$1;.<init>:(Ljava/util/WeakHashMap$3;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1251e8.   v0.[|java:util:WeakHashMap$3$1.this$1|]  := v1 @type object;
#L1251ec.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1251f2.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap$3$1.get|] ([|java:util:WeakHashMap$3$1|] v1 @type (this), [|java:util:Map$Entry|] v2 @type (object)) @owner [|java:util:WeakHashMap$3$1|] @signature [|Ljava/util/WeakHashMap$3$1;.get:(Ljava/util/Map$Entry;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125204.   call temp:=  [|java:util:Map$Entry.getValue|](v2) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12520a.   v0:= temp  @type object;
#L12520c.   return v0  @type object;

   }
record [|java:util:WeakHashMap$3|]  @type class @AccessFlag   extends [|java:util:AbstractCollection|] {
      [|java:util:WeakHashMap|] [|java:util:WeakHashMap$3.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:WeakHashMap$3.<init>|] ([|java:util:WeakHashMap$3|] v0 @type (this), [|java:util:WeakHashMap|] v1 @type (object)) @owner [|java:util:WeakHashMap$3|] @signature [|Ljava/util/WeakHashMap$3;.<init>:(Ljava/util/WeakHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L125220.   v0.[|java:util:WeakHashMap$3.this$0|]  := v1 @type object;
#L125224.   call temp:=  [|java:util:AbstractCollection.<init>|](v0) @signature [|Ljava/util/AbstractCollection;.<init>:()V|] @classDescriptor [|java:util:AbstractCollection|] @type direct;
#L12522a.   return @void ;

   }
    procedure [|void|] [|java:util:WeakHashMap$3.clear|] ([|java:util:WeakHashMap$3|] v1 @type (this)) @owner [|java:util:WeakHashMap$3|] @signature [|Ljava/util/WeakHashMap$3;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12523c.   v0:= v1.[|java:util:WeakHashMap$3.this$0|]   @type object;
#L125240.   call temp:=  [|java:util:WeakHashMap.clear|](v0) @signature [|Ljava/util/WeakHashMap;.clear:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125246.   return @void ;

   }
    procedure [|boolean|] [|java:util:WeakHashMap$3.contains|] ([|java:util:WeakHashMap$3|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:WeakHashMap$3|] @signature [|Ljava/util/WeakHashMap$3;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125258.   v0:= v1.[|java:util:WeakHashMap$3.this$0|]   @type object;
#L12525c.   call temp:=  [|java:util:WeakHashMap.containsValue|](v0, v2) @signature [|Ljava/util/WeakHashMap;.containsValue:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125262.   v0:= temp;
#L125264.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:WeakHashMap$3.iterator|] ([|java:util:WeakHashMap$3|] v3 @type (this)) @owner [|java:util:WeakHashMap$3|] @signature [|Ljava/util/WeakHashMap$3;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L125278.   v0:= new [|java:util:WeakHashMap$HashIterator|];
#L12527c.   v1:= v3.[|java:util:WeakHashMap$3.this$0|]   @type object;
#L125280.   v2:= new [|java:util:WeakHashMap$3$1|];
#L125284.   call temp:=  [|java:util:WeakHashMap$3$1.<init>|](v2, v3) @signature [|Ljava/util/WeakHashMap$3$1;.<init>:(Ljava/util/WeakHashMap$3;)V|] @classDescriptor [|java:util:WeakHashMap$3$1|] @type direct;
#L12528a.   call temp:=  [|java:util:WeakHashMap$HashIterator.<init>|](v0, v1, v2) @signature [|Ljava/util/WeakHashMap$HashIterator;.<init>:(Ljava/util/WeakHashMap;Ljava/util/WeakHashMap$Entry$Type;)V|] @classDescriptor [|java:util:WeakHashMap$HashIterator|] @type direct;
#L125290.   return v0  @type object;

   }
    procedure [|int|] [|java:util:WeakHashMap$3.size|] ([|java:util:WeakHashMap$3|] v1 @type (this)) @owner [|java:util:WeakHashMap$3|] @signature [|Ljava/util/WeakHashMap$3;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1252a4.   v0:= v1.[|java:util:WeakHashMap$3.this$0|]   @type object;
#L1252a8.   call temp:=  [|java:util:WeakHashMap.size|](v0) @signature [|Ljava/util/WeakHashMap;.size:()I|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L1252ae.   v0:= temp;
#L1252b0.   return v0;

   }
record [|java:util:WeakHashMap$Entry|]  @type class @AccessFlag FINAL  extends [|java:lang:ref:WeakReference|], [|java:util:Map$Entry|] {
      [|int|] [|java:util:WeakHashMap$Entry.hash|]    @AccessFlag ;
      [|boolean|] [|java:util:WeakHashMap$Entry.isNull|]    @AccessFlag ;
      [|java:util:WeakHashMap$Entry|] [|java:util:WeakHashMap$Entry.next|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:WeakHashMap$Entry.value|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:WeakHashMap$Entry.<init>|] ([|java:util:WeakHashMap$Entry|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object), [|java:lang:ref:ReferenceQueue|] v5 @type (object)) @owner [|java:util:WeakHashMap$Entry|] @signature [|Ljava/util/WeakHashMap$Entry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1252c4.   v1:= 0  @length 4;
#L1252c6.   call temp:=  [|java:lang:ref:WeakReference.<init>|](v2, v3, v5) @signature [|Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|java:lang:ref:WeakReference|] @type direct;
#L1252cc.   if v3 != 0 then goto L1252e8;
#L1252d0.   v0:= 1  @length 4;
#L1252d2.   v2.[|java:util:WeakHashMap$Entry.isNull|]  := v0 @boolean;
#L1252d6.   v0:= v2.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L1252da.   if v0 == 0 then goto L1252ec;
#L1252de.   v2.[|java:util:WeakHashMap$Entry.hash|]  := v1;
#L1252e2.   v2.[|java:util:WeakHashMap$Entry.value|]  := v4 @type object;
#L1252e6.   return @void ;
#L1252e8.   v0:= v1;
#L1252ea.   goto L1252d2;
#L1252ec.   call temp:=  [|java:lang:Object.hashCode|](v3) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1252f2.   v1:= temp;
#L1252f4.   goto L1252de;

   }
    procedure [|boolean|] [|java:util:WeakHashMap$Entry.equals|] ([|java:util:WeakHashMap$Entry|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:WeakHashMap$Entry|] @signature [|Ljava/util/WeakHashMap$Entry;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L125308.   v2:= 0  @length 4;
#L12530a.   v3:= instanceof @varname v6 @type [|java:util:Map$Entry|];
#L12530e.   if v3 != 0 then goto L125314;
#L125312.   return v2;
#L125314.   v0:= v6  @type object;
#L125316.   v0:= ([|java:util:Map$Entry|])v0;
#L12531a.   call temp:=  [|java:lang:ref:WeakReference.get|](v5) @signature [|Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:WeakReference|] @type super;
#L125320.   v1:= temp  @type object;
#L125322.   if v1 != 0 then goto L12534e;
#L125326.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12532c.   v3:= temp  @type object;
#L12532e.   if v1 != v3 then goto L125312;
#L125332.   v3:= v5.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L125336.   if v3 != 0 then goto L125364;
#L12533a.   v3:= v5.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L12533e.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L125344.   v4:= temp  @type object;
#L125346.   if v3 != v4 then goto L125312;
#L12534a.   v2:= 1  @length 4;
#L12534c.   goto L125312;
#L12534e.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L125354.   v3:= temp  @type object;
#L125356.   call temp:=  [|java:lang:Object.equals|](v1, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12535c.   v3:= temp;
#L12535e.   if v3 == 0 then goto L125312;
#L125362.   goto L125332;
#L125364.   v3:= v5.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L125368.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12536e.   v4:= temp  @type object;
#L125370.   call temp:=  [|java:lang:Object.equals|](v3, v4) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L125376.   v3:= temp;
#L125378.   if v3 == 0 then goto L125312;
#L12537c.   goto L12534a;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap$Entry.getKey|] ([|java:util:WeakHashMap$Entry|] v1 @type (this)) @owner [|java:util:WeakHashMap$Entry|] @signature [|Ljava/util/WeakHashMap$Entry;.getKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125390.   call temp:=  [|java:lang:ref:WeakReference.get|](v1) @signature [|Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:WeakReference|] @type super;
#L125396.   v0:= temp  @type object;
#L125398.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap$Entry.getValue|] ([|java:util:WeakHashMap$Entry|] v1 @type (this)) @owner [|java:util:WeakHashMap$Entry|] @signature [|Ljava/util/WeakHashMap$Entry;.getValue:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1253ac.   v0:= v1.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L1253b0.   return v0  @type object;

   }
    procedure [|int|] [|java:util:WeakHashMap$Entry.hashCode|] ([|java:util:WeakHashMap$Entry|] v2 @type (this)) @owner [|java:util:WeakHashMap$Entry|] @signature [|Ljava/util/WeakHashMap$Entry;.hashCode:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1253c4.   v1:= v2.[|java:util:WeakHashMap$Entry.hash|] ;
#L1253c8.   v0:= v2.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L1253cc.   if v0 != 0 then goto L1253d6;
#L1253d0.   v0:= 0  @length 4;
#L1253d2.   v0:= v0 + v1  @type int;
#L1253d4.   return v0;
#L1253d6.   v0:= v2.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L1253da.   call temp:=  [|java:lang:Object.hashCode|](v0) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1253e0.   v0:= temp;
#L1253e2.   goto L1253d2;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap$Entry.setValue|] ([|java:util:WeakHashMap$Entry|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:WeakHashMap$Entry|] @signature [|Ljava/util/WeakHashMap$Entry;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1253f4.   v0:= v1.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L1253f8.   v1.[|java:util:WeakHashMap$Entry.value|]  := v2 @type object;
#L1253fc.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:WeakHashMap$Entry.toString|] ([|java:util:WeakHashMap$Entry|] v2 @type (this)) @owner [|java:util:WeakHashMap$Entry|] @signature [|Ljava/util/WeakHashMap$Entry;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L125410.   v0:= new [|java:lang:StringBuilder|];
#L125414.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L12541a.   call temp:=  [|java:lang:ref:WeakReference.get|](v2) @signature [|Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ref:WeakReference|] @type super;
#L125420.   v1:= temp  @type object;
#L125422.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L125428.   v0:= temp  @type object;
#L12542a.   v1:= "=" @type (object, string);
#L12542e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L125434.   v0:= temp  @type object;
#L125436.   v1:= v2.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L12543a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L125440.   v0:= temp  @type object;
#L125442.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L125448.   v0:= temp  @type object;
#L12544a.   return v0  @type object;

   }
record [|java:util:WeakHashMap$HashIterator|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
      [|java:util:WeakHashMap$Entry|] [|java:util:WeakHashMap$HashIterator.currentEntry|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:WeakHashMap$HashIterator.expectedModCount|]    @AccessFlag PRIVATE;
      [|java:util:WeakHashMap$Entry|] [|java:util:WeakHashMap$HashIterator.nextEntry|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:util:WeakHashMap$HashIterator.nextKey|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:WeakHashMap$HashIterator.position|]    @AccessFlag PRIVATE;
      [|java:util:WeakHashMap|] [|java:util:WeakHashMap$HashIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|java:util:WeakHashMap$Entry$Type|] [|java:util:WeakHashMap$HashIterator.type|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:util:WeakHashMap$HashIterator.<init>|] ([|java:util:WeakHashMap$HashIterator|] v1 @type (this), [|java:util:WeakHashMap|] v2 @type (object), [|java:util:WeakHashMap$Entry$Type|] v3 @type (object)) @owner [|java:util:WeakHashMap$HashIterator|] @signature [|Ljava/util/WeakHashMap$HashIterator;.<init>:(Ljava/util/WeakHashMap;Ljava/util/WeakHashMap$Entry$Type;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L12545c.   v1.[|java:util:WeakHashMap$HashIterator.this$0|]  := v2 @type object;
#L125460.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L125466.   v0:= 0  @length 4;
#L125468.   v1.[|java:util:WeakHashMap$HashIterator.position|]  := v0;
#L12546c.   v1.[|java:util:WeakHashMap$HashIterator.type|]  := v3 @type object;
#L125470.   v0:= v2.[|java:util:WeakHashMap.modCount|] ;
#L125474.   v1.[|java:util:WeakHashMap$HashIterator.expectedModCount|]  := v0;
#L125478.   return @void ;

   }
    procedure [|boolean|] [|java:util:WeakHashMap$HashIterator.hasNext|] ([|java:util:WeakHashMap$HashIterator|] v4 @type (this)) @owner [|java:util:WeakHashMap$HashIterator|] @signature [|Ljava/util/WeakHashMap$HashIterator;.hasNext:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12548c.   v0:= 1  @length 4;
#L12548e.   v1:= v4.[|java:util:WeakHashMap$HashIterator.nextEntry|]   @type object;
#L125492.   if v1 == 0 then goto L1254b8;
#L125496.   v1:= v4.[|java:util:WeakHashMap$HashIterator.nextKey|]   @type object;
#L12549a.   if v1 != 0 then goto L1254aa;
#L12549e.   v1:= v4.[|java:util:WeakHashMap$HashIterator.nextEntry|]   @type object;
#L1254a2.   v1:= v1.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L1254a6.   if v1 == 0 then goto L1254b8;
#L1254aa.   return v0;
#L1254ac.   v1:= v4.[|java:util:WeakHashMap$HashIterator.nextEntry|]   @type object;
#L1254b0.   v1:= v1.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L1254b4.   v4.[|java:util:WeakHashMap$HashIterator.nextEntry|]  := v1 @type object;
#L1254b8.   v1:= v4.[|java:util:WeakHashMap$HashIterator.nextEntry|]   @type object;
#L1254bc.   if v1 != 0 then goto L1254fe;
#L1254c0.   v1:= v4.[|java:util:WeakHashMap$HashIterator.position|] ;
#L1254c4.   v2:= v4.[|java:util:WeakHashMap$HashIterator.this$0|]   @type object;
#L1254c8.   v2:= v2.[|java:util:WeakHashMap.elementData|]   @type object;
#L1254cc.   v2:= v2.length;
#L1254ce.   if v1 >= v2 then goto L1254f2;
#L1254d2.   v1:= v4.[|java:util:WeakHashMap$HashIterator.this$0|]   @type object;
#L1254d6.   v1:= v1.[|java:util:WeakHashMap.elementData|]   @type object;
#L1254da.   v2:= v4.[|java:util:WeakHashMap$HashIterator.position|] ;
#L1254de.   v3:= v2 + 1;
#L1254e2.   v4.[|java:util:WeakHashMap$HashIterator.position|]  := v3;
#L1254e6.   v1:= v1[v2]  @type object;
#L1254ea.   v4.[|java:util:WeakHashMap$HashIterator.nextEntry|]  := v1 @type object;
#L1254ee.   if v1 == 0 then goto L1254c0;
#L1254f2.   v1:= v4.[|java:util:WeakHashMap$HashIterator.nextEntry|]   @type object;
#L1254f6.   if v1 != 0 then goto L1254fe;
#L1254fa.   v0:= 0  @length 4;
#L1254fc.   goto L1254aa;
#L1254fe.   v1:= v4.[|java:util:WeakHashMap$HashIterator.nextEntry|]   @type object;
#L125502.   call temp:=  [|java:util:WeakHashMap$Entry.get|](v1) @signature [|Ljava/util/WeakHashMap$Entry;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap$Entry|] @type virtual;
#L125508.   v1:= temp  @type object;
#L12550a.   v4.[|java:util:WeakHashMap$HashIterator.nextKey|]  := v1 @type object;
#L12550e.   v1:= v4.[|java:util:WeakHashMap$HashIterator.nextKey|]   @type object;
#L125512.   if v1 != 0 then goto L1254aa;
#L125516.   v1:= v4.[|java:util:WeakHashMap$HashIterator.nextEntry|]   @type object;
#L12551a.   v1:= v1.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L12551e.   if v1 == 0 then goto L1254ac;
#L125522.   goto L1254aa;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap$HashIterator.next|] ([|java:util:WeakHashMap$HashIterator|] v3 @type (this)) @owner [|java:util:WeakHashMap$HashIterator|] @signature [|Ljava/util/WeakHashMap$HashIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L125534.   v1:= v3.[|java:util:WeakHashMap$HashIterator.expectedModCount|] ;
#L125538.   v2:= v3.[|java:util:WeakHashMap$HashIterator.this$0|]   @type object;
#L12553c.   v2:= v2.[|java:util:WeakHashMap.modCount|] ;
#L125540.   if v1 != v2 then goto L125588;
#L125544.   call temp:=  [|java:util:WeakHashMap$HashIterator.hasNext|](v3) @signature [|Ljava/util/WeakHashMap$HashIterator;.hasNext:()Z|] @classDescriptor [|java:util:WeakHashMap$HashIterator|] @type virtual;
#L12554a.   v1:= temp;
#L12554c.   if v1 == 0 then goto L12557c;
#L125550.   v1:= v3.[|java:util:WeakHashMap$HashIterator.nextEntry|]   @type object;
#L125554.   v3.[|java:util:WeakHashMap$HashIterator.currentEntry|]  := v1 @type object;
#L125558.   v1:= v3.[|java:util:WeakHashMap$HashIterator.currentEntry|]   @type object;
#L12555c.   v1:= v1.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125560.   v3.[|java:util:WeakHashMap$HashIterator.nextEntry|]  := v1 @type object;
#L125564.   v1:= v3.[|java:util:WeakHashMap$HashIterator.type|]   @type object;
#L125568.   v2:= v3.[|java:util:WeakHashMap$HashIterator.currentEntry|]   @type object;
#L12556c.   call temp:=  [|java:util:WeakHashMap$Entry$Type.get|](v1, v2) @signature [|Ljava/util/WeakHashMap$Entry$Type;.get:(Ljava/util/Map$Entry;)Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap$Entry$Type|] @type interface;
#L125572.   v0:= temp  @type object;
#L125574.   v1:= 0  @length 4;
#L125576.   v3.[|java:util:WeakHashMap$HashIterator.nextKey|]  := v1 @type object;
#L12557a.   return v0  @type object;
#L12557c.   v1:= new [|java:util:NoSuchElementException|];
#L125580.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L125586.   throw v1;
#L125588.   v1:= new [|java:util:ConcurrentModificationException|];
#L12558c.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v1) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L125592.   throw v1;

   }
    procedure [|void|] [|java:util:WeakHashMap$HashIterator.remove|] ([|java:util:WeakHashMap$HashIterator|] v2 @type (this)) @owner [|java:util:WeakHashMap$HashIterator|] @signature [|Ljava/util/WeakHashMap$HashIterator;.remove:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1255a4.   v0:= v2.[|java:util:WeakHashMap$HashIterator.expectedModCount|] ;
#L1255a8.   v1:= v2.[|java:util:WeakHashMap$HashIterator.this$0|]   @type object;
#L1255ac.   v1:= v1.[|java:util:WeakHashMap.modCount|] ;
#L1255b0.   if v0 != v1 then goto L1255ea;
#L1255b4.   v0:= v2.[|java:util:WeakHashMap$HashIterator.currentEntry|]   @type object;
#L1255b8.   if v0 == 0 then goto L1255de;
#L1255bc.   v0:= v2.[|java:util:WeakHashMap$HashIterator.this$0|]   @type object;
#L1255c0.   v1:= v2.[|java:util:WeakHashMap$HashIterator.currentEntry|]   @type object;
#L1255c4.   call temp:=  [|java:util:WeakHashMap.removeEntry|](v0, v1) @signature [|Ljava/util/WeakHashMap;.removeEntry:(Ljava/util/WeakHashMap$Entry;)V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L1255ca.   v0:= 0  @length 4;
#L1255cc.   v2.[|java:util:WeakHashMap$HashIterator.currentEntry|]  := v0 @type object;
#L1255d0.   v0:= v2.[|java:util:WeakHashMap$HashIterator.expectedModCount|] ;
#L1255d4.   v0:= v0 + 1;
#L1255d8.   v2.[|java:util:WeakHashMap$HashIterator.expectedModCount|]  := v0;
#L1255dc.   return @void ;
#L1255de.   v0:= new [|java:lang:IllegalStateException|];
#L1255e2.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1255e8.   throw v0;
#L1255ea.   v0:= new [|java:util:ConcurrentModificationException|];
#L1255ee.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L1255f4.   throw v0;

   }
record [|java:util:WeakHashMap|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractMap|], [|java:util:Map|] {
      [|int|] [|java:util:WeakHashMap.elementCount|]    @AccessFlag ;
      [|java:util:WeakHashMap$Entry|][] [|java:util:WeakHashMap.elementData|]    @AccessFlag ;
      [|int|] [|java:util:WeakHashMap.loadFactor|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:WeakHashMap.modCount|]    @AccessFlag VOLATILE;
      [|java:lang:ref:ReferenceQueue|] [|java:util:WeakHashMap.referenceQueue|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:WeakHashMap.threshold|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:WeakHashMap.DEFAULT_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:WeakHashMap.<init>|] ([|java:util:WeakHashMap|] v1 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L125608.   v0:= 16  @length 16;
#L12560c.   call temp:=  [|java:util:WeakHashMap.<init>|](v1, v0) @signature [|Ljava/util/WeakHashMap;.<init>:(I)V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L125612.   return @void ;

   }
    procedure [|void|] [|java:util:WeakHashMap.<init>|] ([|java:util:WeakHashMap|] v1 @type (this), [|int|] v2) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L125624.   call temp:=  [|java:util:AbstractMap.<init>|](v1) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L12562a.   if v2 < 0 then goto L125664;
#L12562e.   v0:= 0  @length 4;
#L125630.   v1.[|java:util:WeakHashMap.elementCount|]  := v0;
#L125634.   if v2 != 0 then goto L12563a;
#L125638.   v2:= 1  @length 4;
#L12563a.   call temp:=  [|java:util:WeakHashMap.newEntryArray|](v2) @signature [|Ljava/util/WeakHashMap;.newEntryArray:(I)[Ljava/util/WeakHashMap$Entry;|] @classDescriptor [|java:util:WeakHashMap|] @type static;
#L125640.   v0:= temp  @type object;
#L125642.   v1.[|java:util:WeakHashMap.elementData|]  := v0 @type object;
#L125646.   v0:= 7500  @length 16;
#L12564a.   v1.[|java:util:WeakHashMap.loadFactor|]  := v0;
#L12564e.   call temp:=  [|java:util:WeakHashMap.computeMaxSize|](v1) @signature [|Ljava/util/WeakHashMap;.computeMaxSize:()V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L125654.   v0:= new [|java:lang:ref:ReferenceQueue|];
#L125658.   call temp:=  [|java:lang:ref:ReferenceQueue.<init>|](v0) @signature [|Ljava/lang/ref/ReferenceQueue;.<init>:()V|] @classDescriptor [|java:lang:ref:ReferenceQueue|] @type direct;
#L12565e.   v1.[|java:util:WeakHashMap.referenceQueue|]  := v0 @type object;
#L125662.   return @void ;
#L125664.   v0:= new [|java:lang:IllegalArgumentException|];
#L125668.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12566e.   throw v0;

   }
    procedure [|void|] [|java:util:WeakHashMap.<init>|] ([|java:util:WeakHashMap|] v1 @type (this), [|int|] v2, [|float|] v3) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.<init>:(IF)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L125680.   call temp:=  [|java:util:AbstractMap.<init>|](v1) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L125686.   if v2 < 0 then goto L1256d0;
#L12568a.   v0:= 0  @length 4;
#L12568c.   v0:= cmpl(v3,v0);
#L125690.   if v0 <= 0 then goto L1256d0;
#L125694.   v0:= 0  @length 4;
#L125696.   v1.[|java:util:WeakHashMap.elementCount|]  := v0;
#L12569a.   if v2 != 0 then goto L1256a0;
#L12569e.   v2:= 1  @length 4;
#L1256a0.   call temp:=  [|java:util:WeakHashMap.newEntryArray|](v2) @signature [|Ljava/util/WeakHashMap;.newEntryArray:(I)[Ljava/util/WeakHashMap$Entry;|] @classDescriptor [|java:util:WeakHashMap|] @type static;
#L1256a6.   v0:= temp  @type object;
#L1256a8.   v1.[|java:util:WeakHashMap.elementData|]  := v0 @type object;
#L1256ac.    v0:= 10000.000000;
#L1256b2.   v0:= v0 * v3  @type float;
#L1256b4.   v0:= (int)v0  @type f2i;
#L1256b6.   v1.[|java:util:WeakHashMap.loadFactor|]  := v0;
#L1256ba.   call temp:=  [|java:util:WeakHashMap.computeMaxSize|](v1) @signature [|Ljava/util/WeakHashMap;.computeMaxSize:()V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L1256c0.   v0:= new [|java:lang:ref:ReferenceQueue|];
#L1256c4.   call temp:=  [|java:lang:ref:ReferenceQueue.<init>|](v0) @signature [|Ljava/lang/ref/ReferenceQueue;.<init>:()V|] @classDescriptor [|java:lang:ref:ReferenceQueue|] @type direct;
#L1256ca.   v1.[|java:util:WeakHashMap.referenceQueue|]  := v0 @type object;
#L1256ce.   return @void ;
#L1256d0.   v0:= new [|java:lang:IllegalArgumentException|];
#L1256d4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1256da.   throw v0;

   }
    procedure [|void|] [|java:util:WeakHashMap.<init>|] ([|java:util:WeakHashMap|] v2 @type (this), [|java:util:Map|] v3 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.<init>:(Ljava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1256ec.   call temp:=  [|java:util:Map.size|](v3) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L1256f2.   v0:= temp;
#L1256f4.   v1:= 6  @length 4;
#L1256f6.   if v0 >= v1 then goto L12570c;
#L1256fa.   v0:= 11  @length 16;
#L1256fe.   call temp:=  [|java:util:WeakHashMap.<init>|](v2, v0) @signature [|Ljava/util/WeakHashMap;.<init>:(I)V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L125704.   call temp:=  [|java:util:WeakHashMap.putAllImpl|](v2, v3) @signature [|Ljava/util/WeakHashMap;.putAllImpl:(Ljava/util/Map;)V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L12570a.   return @void ;
#L12570c.   call temp:=  [|java:util:Map.size|](v3) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L125712.   v0:= temp;
#L125714.   v0:= v0 * 2;
#L125718.   goto L1256fe;

   }
    procedure [|void|] [|java:util:WeakHashMap.computeMaxSize|] ([|java:util:WeakHashMap|] v4 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.computeMaxSize:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12572c.   v0:= v4.[|java:util:WeakHashMap.elementData|]   @type object;
#L125730.   v0:= v0.length;
#L125732.   v0:= (long)v0  @type i2l;
#L125734.   v2:= v4.[|java:util:WeakHashMap.loadFactor|] ;
#L125738.   v2:= (long)v2  @type i2l;
#L12573a.   v0:= v0 * v2  @type long;
#L12573c.   v2:= 10000  @length wide16;
#L125740.   v0:= v0 / v2  @type long;
#L125742.   v0:= (int)v0  @type l2i;
#L125744.   v4.[|java:util:WeakHashMap.threshold|]  := v0;
#L125748.   return @void ;

   }
    procedure [|java:util:WeakHashMap$Entry|][] [|java:util:WeakHashMap.newEntryArray|] ([|int|] v1) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.newEntryArray:(I)[Ljava/util/WeakHashMap$Entry;|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L12575c.   v0:= new [|java:util:WeakHashMap$Entry|][v1];
#L125760.   return v0  @type object;

   }
    procedure [|void|] [|java:util:WeakHashMap.putAllImpl|] ([|java:util:WeakHashMap|] v1 @type (this), [|java:util:Map|] v2 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.putAllImpl:(Ljava/util/Map;)V|] @Access PRIVATE {
      local temp ;
        v0;
      
#L125774.   call temp:=  [|java:util:Map.entrySet|](v2) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L12577a.   v0:= temp  @type object;
#L12577c.   if v0 == 0 then goto L125786;
#L125780.   call temp:=  [|java:util:AbstractMap.putAll|](v1, v2) @signature [|Ljava/util/AbstractMap;.putAll:(Ljava/util/Map;)V|] @classDescriptor [|java:util:AbstractMap|] @type super;
#L125786.   return @void ;

   }
    procedure [|void|] [|java:util:WeakHashMap.rehash|] ([|java:util:WeakHashMap|] v8 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.rehash:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L125798.   v6:= v8.[|java:util:WeakHashMap.elementData|]   @type object;
#L12579c.   v6:= v6.length;
#L12579e.   v3:= v6 * 2;
#L1257a2.   if v3 != 0 then goto L1257a8;
#L1257a6.   v3:= 1  @length 4;
#L1257a8.   call temp:=  [|java:util:WeakHashMap.newEntryArray|](v3) @signature [|Ljava/util/WeakHashMap;.newEntryArray:(I)[Ljava/util/WeakHashMap$Entry;|] @classDescriptor [|java:util:WeakHashMap|] @type static;
#L1257ae.   v4:= temp  @type object;
#L1257b0.   v1:= 0  @length 4;
#L1257b2.   v6:= v8.[|java:util:WeakHashMap.elementData|]   @type object;
#L1257b6.   v6:= v6.length;
#L1257b8.   if v1 >= v6 then goto L1257fe;
#L1257bc.   v6:= v8.[|java:util:WeakHashMap.elementData|]   @type object;
#L1257c0.   v0:= v6[v1]  @type object;
#L1257c4.   if v0 == 0 then goto L1257f8;
#L1257c8.   v6:= v0.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L1257cc.   if v6 == 0 then goto L1257e6;
#L1257d0.   v2:= 0  @length 4;
#L1257d2.   v5:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L1257d6.   v6:= v4[v2]  @type object;
#L1257da.   v0.[|java:util:WeakHashMap$Entry.next|]  := v6 @type object;
#L1257de.   v4[v2]:= v0  @type object;
#L1257e2.   v0:= v5  @type object;
#L1257e4.   goto L1257c4;
#L1257e6.   v6:= v0.[|java:util:WeakHashMap$Entry.hash|] ;
#L1257ea.    v7:= nan;
#L1257f0.   v6:= v6 ^& v7  @type int;
#L1257f2.   v2:= v6 % v3  @type int;
#L1257f6.   goto L1257d2;
#L1257f8.   v1:= v1 + 1;
#L1257fc.   goto L1257b2;
#L1257fe.   v8.[|java:util:WeakHashMap.elementData|]  := v4 @type object;
#L125802.   call temp:=  [|java:util:WeakHashMap.computeMaxSize|](v8) @signature [|Ljava/util/WeakHashMap;.computeMaxSize:()V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L125808.   return @void ;

   }
    procedure [|void|] [|java:util:WeakHashMap.clear|] ([|java:util:WeakHashMap|] v2 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12581c.   v0:= v2.[|java:util:WeakHashMap.elementCount|] ;
#L125820.   if v0 <= 0 then goto L125852;
#L125824.   v0:= 0  @length 4;
#L125826.   v2.[|java:util:WeakHashMap.elementCount|]  := v0;
#L12582a.   v0:= v2.[|java:util:WeakHashMap.elementData|]   @type object;
#L12582e.   v1:= 0  @length 4;
#L125830.   call temp:=  [|java:util:Arrays.fill|](v0, v1) @signature [|Ljava/util/Arrays;.fill:([Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:Arrays|] @type static;
#L125836.   v0:= v2.[|java:util:WeakHashMap.modCount|] ;
#L12583a.   v0:= v0 + 1;
#L12583e.   v2.[|java:util:WeakHashMap.modCount|]  := v0;
#L125842.   v0:= v2.[|java:util:WeakHashMap.referenceQueue|]   @type object;
#L125846.   call temp:=  [|java:lang:ref:ReferenceQueue.poll|](v0) @signature [|Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ref:ReferenceQueue|] @type virtual;
#L12584c.   v0:= temp  @type object;
#L12584e.   if v0 != 0 then goto L125842;
#L125852.   return @void ;

   }
    procedure [|boolean|] [|java:util:WeakHashMap.containsKey|] ([|java:util:WeakHashMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125864.   call temp:=  [|java:util:WeakHashMap.getEntry|](v1, v2) @signature [|Ljava/util/WeakHashMap;.getEntry:(Ljava/lang/Object;)Ljava/util/WeakHashMap$Entry;|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L12586a.   v0:= temp  @type object;
#L12586c.   if v0 == 0 then goto L125874;
#L125870.   v0:= 1  @length 4;
#L125872.   return v0;
#L125874.   v0:= 0  @length 4;
#L125876.   goto L125872;

   }
    procedure [|boolean|] [|java:util:WeakHashMap.containsValue|] ([|java:util:WeakHashMap|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.containsValue:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L125888.   v3:= 1  @length 4;
#L12588a.   call temp:=  [|java:util:WeakHashMap.poll|](v5) @signature [|Ljava/util/WeakHashMap;.poll:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125890.   if v6 == 0 then goto L1258da;
#L125894.   v4:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125898.   v1:= v4.length;
#L12589a.   v1:= v1 + -1;
#L12589e.   if v1 < 0 then goto L125916;
#L1258a2.   v4:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L1258a6.   v0:= v4[v1]  @type object;
#L1258aa.   if v0 == 0 then goto L12589a;
#L1258ae.   call temp:=  [|java:util:WeakHashMap$Entry.get|](v0) @signature [|Ljava/util/WeakHashMap$Entry;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap$Entry|] @type virtual;
#L1258b4.   v2:= temp  @type object;
#L1258b6.   if v2 != 0 then goto L1258c2;
#L1258ba.   v4:= v0.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L1258be.   if v4 == 0 then goto L1258d4;
#L1258c2.   v4:= v0.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L1258c6.   call temp:=  [|java:lang:Object.equals|](v6, v4) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1258cc.   v4:= temp;
#L1258ce.   if v4 == 0 then goto L1258d4;
#L1258d2.   return v3;
#L1258d4.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L1258d8.   goto L1258aa;
#L1258da.   v4:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L1258de.   v1:= v4.length;
#L1258e0.   v1:= v1 + -1;
#L1258e4.   if v1 < 0 then goto L125916;
#L1258e8.   v4:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L1258ec.   v0:= v4[v1]  @type object;
#L1258f0.   if v0 == 0 then goto L1258e0;
#L1258f4.   call temp:=  [|java:util:WeakHashMap$Entry.get|](v0) @signature [|Ljava/util/WeakHashMap$Entry;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap$Entry|] @type virtual;
#L1258fa.   v2:= temp  @type object;
#L1258fc.   if v2 != 0 then goto L125908;
#L125900.   v4:= v0.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L125904.   if v4 == 0 then goto L125910;
#L125908.   v4:= v0.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L12590c.   if v4 == 0 then goto L1258d2;
#L125910.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125914.   goto L1258f0;
#L125916.   v3:= 0  @length 4;
#L125918.   goto L1258d2;

   }
    procedure [|java:util:Set|] [|java:util:WeakHashMap.entrySet|] ([|java:util:WeakHashMap|] v1 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12592c.   call temp:=  [|java:util:WeakHashMap.poll|](v1) @signature [|Ljava/util/WeakHashMap;.poll:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125932.   v0:= new [|java:util:WeakHashMap$1|];
#L125936.   call temp:=  [|java:util:WeakHashMap$1.<init>|](v0, v1) @signature [|Ljava/util/WeakHashMap$1;.<init>:(Ljava/util/WeakHashMap;)V|] @classDescriptor [|java:util:WeakHashMap$1|] @type direct;
#L12593c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap.get|] ([|java:util:WeakHashMap|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L125950.   v2:= 0  @length 4;
#L125952.   call temp:=  [|java:util:WeakHashMap.poll|](v5) @signature [|Ljava/util/WeakHashMap;.poll:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125958.   if v6 == 0 then goto L1259a2;
#L12595c.   call temp:=  [|java:lang:Object.hashCode|](v6) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L125962.   v3:= temp;
#L125964.    v4:= nan;
#L12596a.   v3:= v3 ^& v4  @type int;
#L12596c.   v4:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125970.   v4:= v4.length;
#L125972.   v1:= v3 % v4  @type int;
#L125976.   v3:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L12597a.   v0:= v3[v1]  @type object;
#L12597e.   if v0 == 0 then goto L12599a;
#L125982.   call temp:=  [|java:util:WeakHashMap$Entry.get|](v0) @signature [|Ljava/util/WeakHashMap$Entry;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap$Entry|] @type virtual;
#L125988.   v3:= temp  @type object;
#L12598a.   call temp:=  [|java:lang:Object.equals|](v6, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L125990.   v3:= temp;
#L125992.   if v3 == 0 then goto L12599c;
#L125996.   v2:= v0.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L12599a.   return v2  @type object;
#L12599c.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L1259a0.   goto L12597e;
#L1259a2.   v3:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L1259a6.   v4:= 0  @length 4;
#L1259a8.   v0:= v3[v4]  @type object;
#L1259ac.   if v0 == 0 then goto L12599a;
#L1259b0.   v3:= v0.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L1259b4.   if v3 == 0 then goto L1259be;
#L1259b8.   v2:= v0.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L1259bc.   goto L12599a;
#L1259be.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L1259c2.   goto L1259ac;

   }
    procedure [|java:util:WeakHashMap$Entry|] [|java:util:WeakHashMap.getEntry|] ([|java:util:WeakHashMap|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.getEntry:(Ljava/lang/Object;)Ljava/util/WeakHashMap$Entry;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1259d4.   v2:= 0  @length 4;
#L1259d6.   call temp:=  [|java:util:WeakHashMap.poll|](v5) @signature [|Ljava/util/WeakHashMap;.poll:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L1259dc.   if v6 == 0 then goto L125a26;
#L1259e0.   call temp:=  [|java:lang:Object.hashCode|](v6) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1259e6.   v3:= temp;
#L1259e8.    v4:= nan;
#L1259ee.   v3:= v3 ^& v4  @type int;
#L1259f0.   v4:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L1259f4.   v4:= v4.length;
#L1259f6.   v1:= v3 % v4  @type int;
#L1259fa.   v3:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L1259fe.   v0:= v3[v1]  @type object;
#L125a02.   if v0 == 0 then goto L125a22;
#L125a06.   call temp:=  [|java:util:WeakHashMap$Entry.get|](v0) @signature [|Ljava/util/WeakHashMap$Entry;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap$Entry|] @type virtual;
#L125a0c.   v3:= temp  @type object;
#L125a0e.   call temp:=  [|java:lang:Object.equals|](v6, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L125a14.   v3:= temp;
#L125a16.   if v3 == 0 then goto L125a1c;
#L125a1a.   return v0  @type object;
#L125a1c.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125a20.   goto L125a02;
#L125a22.   v0:= v2  @type object;
#L125a24.   goto L125a1a;
#L125a26.   v3:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125a2a.   v4:= 0  @length 4;
#L125a2c.   v0:= v3[v4]  @type object;
#L125a30.   if v0 == 0 then goto L125a42;
#L125a34.   v3:= v0.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L125a38.   if v3 != 0 then goto L125a1a;
#L125a3c.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125a40.   goto L125a30;
#L125a42.   v0:= v2  @type object;
#L125a44.   goto L125a1a;

   }
    procedure [|boolean|] [|java:util:WeakHashMap.isEmpty|] ([|java:util:WeakHashMap|] v1 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125a58.   call temp:=  [|java:util:WeakHashMap.size|](v1) @signature [|Ljava/util/WeakHashMap;.size:()I|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125a5e.   v0:= temp;
#L125a60.   if v0 != 0 then goto L125a68;
#L125a64.   v0:= 1  @length 4;
#L125a66.   return v0;
#L125a68.   v0:= 0  @length 4;
#L125a6a.   goto L125a66;

   }
    procedure [|java:util:Set|] [|java:util:WeakHashMap.keySet|] ([|java:util:WeakHashMap|] v1 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.keySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125a7c.   call temp:=  [|java:util:WeakHashMap.poll|](v1) @signature [|Ljava/util/WeakHashMap;.poll:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125a82.   v0:= v1.[|java:util:WeakHashMap.keySet|]   @type object;
#L125a86.   if v0 != 0 then goto L125a98;
#L125a8a.   v0:= new [|java:util:WeakHashMap$2|];
#L125a8e.   call temp:=  [|java:util:WeakHashMap$2.<init>|](v0, v1) @signature [|Ljava/util/WeakHashMap$2;.<init>:(Ljava/util/WeakHashMap;)V|] @classDescriptor [|java:util:WeakHashMap$2|] @type direct;
#L125a94.   v1.[|java:util:WeakHashMap.keySet|]  := v0 @type object;
#L125a98.   v0:= v1.[|java:util:WeakHashMap.keySet|]   @type object;
#L125a9c.   return v0  @type object;

   }
    procedure [|void|] [|java:util:WeakHashMap.poll|] ([|java:util:WeakHashMap|] v2 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.poll:()V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L125ab0.   v1:= v2.[|java:util:WeakHashMap.referenceQueue|]   @type object;
#L125ab4.   call temp:=  [|java:lang:ref:ReferenceQueue.poll|](v1) @signature [|Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ref:ReferenceQueue|] @type virtual;
#L125aba.   v0:= temp  @type object;
#L125abc.   v0:= ([|java:util:WeakHashMap$Entry|])v0;
#L125ac0.   if v0 == 0 then goto L125acc;
#L125ac4.   call temp:=  [|java:util:WeakHashMap.removeEntry|](v2, v0) @signature [|Ljava/util/WeakHashMap;.removeEntry:(Ljava/util/WeakHashMap$Entry;)V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125aca.   goto L125ab0;
#L125acc.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap.put|] ([|java:util:WeakHashMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|java:lang:Object|] v9 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L125ae0.    v6:= nan;
#L125ae6.   v3:= 0  @length 4;
#L125ae8.   call temp:=  [|java:util:WeakHashMap.poll|](v7) @signature [|Ljava/util/WeakHashMap;.poll:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125aee.   v1:= 0  @length 4;
#L125af0.   if v8 == 0 then goto L125b2e;
#L125af4.   call temp:=  [|java:lang:Object.hashCode|](v8) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L125afa.   v4:= temp;
#L125afc.   v4:= v4 ^& v6  @type int;
#L125afe.   v5:= v7.[|java:util:WeakHashMap.elementData|]   @type object;
#L125b02.   v5:= v5.length;
#L125b04.   v1:= v4 % v5  @type int;
#L125b08.   v4:= v7.[|java:util:WeakHashMap.elementData|]   @type object;
#L125b0c.   v0:= v4[v1]  @type object;
#L125b10.   if v0 == 0 then goto L125b48;
#L125b14.   call temp:=  [|java:util:WeakHashMap$Entry.get|](v0) @signature [|Ljava/util/WeakHashMap$Entry;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap$Entry|] @type virtual;
#L125b1a.   v4:= temp  @type object;
#L125b1c.   call temp:=  [|java:lang:Object.equals|](v8, v4) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L125b22.   v4:= temp;
#L125b24.   if v4 != 0 then goto L125b48;
#L125b28.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125b2c.   goto L125b10;
#L125b2e.   v4:= v7.[|java:util:WeakHashMap.elementData|]   @type object;
#L125b32.   v0:= v4[v3]  @type object;
#L125b36.   if v0 == 0 then goto L125b48;
#L125b3a.   v4:= v0.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L125b3e.   if v4 != 0 then goto L125b48;
#L125b42.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125b46.   goto L125b36;
#L125b48.   if v0 != 0 then goto L125bb4;
#L125b4c.   v4:= v7.[|java:util:WeakHashMap.modCount|] ;
#L125b50.   v4:= v4 + 1;
#L125b54.   v7.[|java:util:WeakHashMap.modCount|]  := v4;
#L125b58.   v4:= v7.[|java:util:WeakHashMap.elementCount|] ;
#L125b5c.   v4:= v4 + 1;
#L125b60.   v7.[|java:util:WeakHashMap.elementCount|]  := v4;
#L125b64.   v5:= v7.[|java:util:WeakHashMap.threshold|] ;
#L125b68.   if v4 <= v5 then goto L125b78;
#L125b6c.   call temp:=  [|java:util:WeakHashMap.rehash|](v7) @signature [|Ljava/util/WeakHashMap;.rehash:()V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L125b72.   if v8 != 0 then goto L125b9e;
#L125b76.   v1:= v3;
#L125b78.   v0:= new [|java:util:WeakHashMap$Entry|];
#L125b7c.   v3:= v7.[|java:util:WeakHashMap.referenceQueue|]   @type object;
#L125b80.   call temp:=  [|java:util:WeakHashMap$Entry.<init>|](v0, v8, v9, v3) @signature [|Ljava/util/WeakHashMap$Entry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|java:util:WeakHashMap$Entry|] @type direct;
#L125b86.   v3:= v7.[|java:util:WeakHashMap.elementData|]   @type object;
#L125b8a.   v3:= v3[v1]  @type object;
#L125b8e.   v0.[|java:util:WeakHashMap$Entry.next|]  := v3 @type object;
#L125b92.   v3:= v7.[|java:util:WeakHashMap.elementData|]   @type object;
#L125b96.   v3[v1]:= v0  @type object;
#L125b9a.   v2:= 0  @length 4;
#L125b9c.   return v2  @type object;
#L125b9e.   call temp:=  [|java:lang:Object.hashCode|](v8) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L125ba4.   v3:= temp;
#L125ba6.   v3:= v3 ^& v6  @type int;
#L125ba8.   v4:= v7.[|java:util:WeakHashMap.elementData|]   @type object;
#L125bac.   v4:= v4.length;
#L125bae.   v1:= v3 % v4  @type int;
#L125bb2.   goto L125b78;
#L125bb4.   v2:= v0.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L125bb8.   v0.[|java:util:WeakHashMap$Entry.value|]  := v9 @type object;
#L125bbc.   goto L125b9c;

   }
    procedure [|void|] [|java:util:WeakHashMap.putAll|] ([|java:util:WeakHashMap|] v0 @type (this), [|java:util:Map|] v1 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.putAll:(Ljava/util/Map;)V|] @Access PUBLIC {
      local temp ;
      
#L125bd0.   call temp:=  [|java:util:WeakHashMap.putAllImpl|](v0, v1) @signature [|Ljava/util/WeakHashMap;.putAllImpl:(Ljava/util/Map;)V|] @classDescriptor [|java:util:WeakHashMap|] @type direct;
#L125bd6.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:WeakHashMap.remove|] ([|java:util:WeakHashMap|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L125be8.   call temp:=  [|java:util:WeakHashMap.poll|](v5) @signature [|Ljava/util/WeakHashMap;.poll:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125bee.   v1:= 0  @length 4;
#L125bf0.   v2:= 0  @length 4;
#L125bf2.   if v6 == 0 then goto L125c38;
#L125bf6.   call temp:=  [|java:lang:Object.hashCode|](v6) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L125bfc.   v3:= temp;
#L125bfe.    v4:= nan;
#L125c04.   v3:= v3 ^& v4  @type int;
#L125c06.   v4:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125c0a.   v4:= v4.length;
#L125c0c.   v1:= v3 % v4  @type int;
#L125c10.   v3:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125c14.   v0:= v3[v1]  @type object;
#L125c18.   if v0 == 0 then goto L125c56;
#L125c1c.   call temp:=  [|java:util:WeakHashMap$Entry.get|](v0) @signature [|Ljava/util/WeakHashMap$Entry;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:WeakHashMap$Entry|] @type virtual;
#L125c22.   v3:= temp  @type object;
#L125c24.   call temp:=  [|java:lang:Object.equals|](v6, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L125c2a.   v3:= temp;
#L125c2c.   if v3 != 0 then goto L125c56;
#L125c30.   v2:= v0  @type object;
#L125c32.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125c36.   goto L125c18;
#L125c38.   v3:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125c3c.   v4:= 0  @length 4;
#L125c3e.   v0:= v3[v4]  @type object;
#L125c42.   if v0 == 0 then goto L125c56;
#L125c46.   v3:= v0.[|java:util:WeakHashMap$Entry.isNull|]   @boolean;
#L125c4a.   if v3 != 0 then goto L125c56;
#L125c4e.   v2:= v0  @type object;
#L125c50.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125c54.   goto L125c42;
#L125c56.   if v0 == 0 then goto L125c92;
#L125c5a.   v3:= v5.[|java:util:WeakHashMap.modCount|] ;
#L125c5e.   v3:= v3 + 1;
#L125c62.   v5.[|java:util:WeakHashMap.modCount|]  := v3;
#L125c66.   if v2 != 0 then goto L125c88;
#L125c6a.   v3:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125c6e.   v4:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125c72.   v3[v1]:= v4  @type object;
#L125c76.   v3:= v5.[|java:util:WeakHashMap.elementCount|] ;
#L125c7a.   v3:= v3 + -1;
#L125c7e.   v5.[|java:util:WeakHashMap.elementCount|]  := v3;
#L125c82.   v3:= v0.[|java:util:WeakHashMap$Entry.value|]   @type object;
#L125c86.   return v3  @type object;
#L125c88.   v3:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125c8c.   v2.[|java:util:WeakHashMap$Entry.next|]  := v3 @type object;
#L125c90.   goto L125c76;
#L125c92.   v3:= 0  @length 4;
#L125c94.   goto L125c86;

   }
    procedure [|void|] [|java:util:WeakHashMap.removeEntry|] ([|java:util:WeakHashMap|] v5 @type (this), [|java:util:WeakHashMap$Entry|] v6 @type (object)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.removeEntry:(Ljava/util/WeakHashMap$Entry;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L125ca8.   v2:= 0  @length 4;
#L125caa.   v3:= v6.[|java:util:WeakHashMap$Entry.hash|] ;
#L125cae.    v4:= nan;
#L125cb4.   v3:= v3 ^& v4  @type int;
#L125cb6.   v4:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125cba.   v4:= v4.length;
#L125cbc.   v1:= v3 % v4  @type int;
#L125cc0.   v3:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125cc4.   v0:= v3[v1]  @type object;
#L125cc8.   if v0 == 0 then goto L125cf8;
#L125ccc.   if v6 != v0 then goto L125d04;
#L125cd0.   v3:= v5.[|java:util:WeakHashMap.modCount|] ;
#L125cd4.   v3:= v3 + 1;
#L125cd8.   v5.[|java:util:WeakHashMap.modCount|]  := v3;
#L125cdc.   if v2 != 0 then goto L125cfa;
#L125ce0.   v3:= v5.[|java:util:WeakHashMap.elementData|]   @type object;
#L125ce4.   v4:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125ce8.   v3[v1]:= v4  @type object;
#L125cec.   v3:= v5.[|java:util:WeakHashMap.elementCount|] ;
#L125cf0.   v3:= v3 + -1;
#L125cf4.   v5.[|java:util:WeakHashMap.elementCount|]  := v3;
#L125cf8.   return @void ;
#L125cfa.   v3:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125cfe.   v2.[|java:util:WeakHashMap$Entry.next|]  := v3 @type object;
#L125d02.   goto L125cec;
#L125d04.   v2:= v0  @type object;
#L125d06.   v0:= v0.[|java:util:WeakHashMap$Entry.next|]   @type object;
#L125d0a.   goto L125cc8;

   }
    procedure [|int|] [|java:util:WeakHashMap.size|] ([|java:util:WeakHashMap|] v1 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125d1c.   call temp:=  [|java:util:WeakHashMap.poll|](v1) @signature [|Ljava/util/WeakHashMap;.poll:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125d22.   v0:= v1.[|java:util:WeakHashMap.elementCount|] ;
#L125d26.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:WeakHashMap.values|] ([|java:util:WeakHashMap|] v1 @type (this)) @owner [|java:util:WeakHashMap|] @signature [|Ljava/util/WeakHashMap;.values:()Ljava/util/Collection;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L125d38.   call temp:=  [|java:util:WeakHashMap.poll|](v1) @signature [|Ljava/util/WeakHashMap;.poll:()V|] @classDescriptor [|java:util:WeakHashMap|] @type virtual;
#L125d3e.   v0:= v1.[|java:util:WeakHashMap.valuesCollection|]   @type object;
#L125d42.   if v0 != 0 then goto L125d54;
#L125d46.   v0:= new [|java:util:WeakHashMap$3|];
#L125d4a.   call temp:=  [|java:util:WeakHashMap$3.<init>|](v0, v1) @signature [|Ljava/util/WeakHashMap$3;.<init>:(Ljava/util/WeakHashMap;)V|] @classDescriptor [|java:util:WeakHashMap$3|] @type direct;
#L125d50.   v1.[|java:util:WeakHashMap.valuesCollection|]  := v0 @type object;
#L125d54.   v0:= v1.[|java:util:WeakHashMap.valuesCollection|]   @type object;
#L125d58.   return v0  @type object;

   }
record [|java:util:concurrent:Executor|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:util:concurrent:Executor.execute|] ([|java:lang:Runnable|] v0 @type (object)) @owner [|java:util:concurrent:Executor|] @signature [|Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ExecutorService|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:concurrent:Executor|] {
   }
    procedure [|boolean|] [|java:util:concurrent:ExecutorService.awaitTermination|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:List|] [|java:util:concurrent:ExecutorService.invokeAll|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.invokeAll:(Ljava/util/Collection;)Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:List|] [|java:util:concurrent:ExecutorService.invokeAll|] ([|java:util:Collection|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ExecutorService.invokeAny|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ExecutorService.invokeAny|] ([|java:util:Collection|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:ExecutorService.isShutdown|] () @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.isShutdown:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:ExecutorService.isTerminated|] () @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.isTerminated:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:ExecutorService.shutdown|] () @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.shutdown:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:List|] [|java:util:concurrent:ExecutorService.shutdownNow|] () @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.shutdownNow:()Ljava/util/List;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ExecutorService.submit|] ([|java:lang:Runnable|] v0 @type (object)) @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ExecutorService.submit|] ([|java:lang:Runnable|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ExecutorService.submit|] ([|java:util:concurrent:Callable|] v0 @type (object)) @owner [|java:util:concurrent:ExecutorService|] @signature [|Ljava/util/concurrent/ExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:AbstractExecutorService|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:util:concurrent:ExecutorService|] {
   }
      global [|boolean|] @@[|java:util:concurrent:AbstractExecutorService.$assertionsDisabled|]    @AccessFlag STATIC_FINAL_SYNTHETIC;
    procedure [|void|] [|java:util:concurrent:AbstractExecutorService.<clinit>|] () @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L125d6c.   v0:= new [|java:util:concurrent:AbstractExecutorService|];
#L125d70.   call temp:=  [|java:lang:Class.desiredAssertionStatus|](v0) @signature [|Ljava/lang/Class;.desiredAssertionStatus:()Z|] @classDescriptor [|java:lang:Class|] @type virtual;
#L125d76.   v0:= temp;
#L125d78.   if v0 != 0 then goto L125d84;
#L125d7c.   v0:= 1  @length 4;
#L125d7e.   @@[|java:util:concurrent:AbstractExecutorService.$assertionsDisabled|] := v0  @boolean;
#L125d82.   return @void ;
#L125d84.   v0:= 0  @length 4;
#L125d86.   goto L125d7e;

   }
    procedure [|void|] [|java:util:concurrent:AbstractExecutorService.<init>|] ([|java:util:concurrent:AbstractExecutorService|] v0 @type (this)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L125d98.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L125d9e.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:AbstractExecutorService.doInvokeAny|] ([|java:util:concurrent:AbstractExecutorService|] v20 @type (this), [|java:util:Collection|] v21 @type (object), [|boolean|] v22, [|long|] v23) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.doInvokeAny:(Ljava/util/Collection;ZJ)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
      
#L125db0.   if v21 != 0 then goto L125dc0;
#L125db4.   v18:= new [|java:lang:NullPointerException|];
#L125db8.   call temp:=  [|java:lang:NullPointerException.<init>|](v18) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L125dbe.   throw v18;
#L125dc0.   call temp:=  [|java:util:Collection.size|](v21) @signature [|Ljava/util/Collection;.size:()I|] @classDescriptor [|java:util:Collection|] @type interface;
#L125dc6.   v16:= temp;
#L125dc8.   if v16 != 0 then goto L125dd8;
#L125dcc.   v18:= new [|java:lang:IllegalArgumentException|];
#L125dd0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v18) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L125dd6.   throw v18;
#L125dd8.   v9:= new [|java:util:ArrayList|];
#L125ddc.   v0:= v16;
#L125de0.   call temp:=  [|java:util:ArrayList.<init>|](v9, v0) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L125de6.   v4:= new [|java:util:concurrent:ExecutorCompletionService|];
#L125dea.   v0:= v20  @type object;
#L125dee.   call temp:=  [|java:util:concurrent:ExecutorCompletionService.<init>|](v4, v0) @signature [|Ljava/util/concurrent/ExecutorCompletionService;.<init>:(Ljava/util/concurrent/Executor;)V|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService|] @type direct;
#L125df4.   v5:= 0  @length 4;
#L125df6.   if v22 == 0 then goto L125eae;
#L125dfa.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L125e00.   v12:= temp  @type wide;
#L125e02.   call temp:=  [|java:util:Collection.iterator|](v21) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L125e08.   v11:= temp  @type object;
#L125e0a.   call temp:=  [|java:util:Iterator.next|](v11) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L125e10.   v18:= temp  @type object;
#L125e12.   v18:= ([|java:util:concurrent:Callable|])v18;
#L125e16.   v0:= v18  @type object;
#L125e1a.   call temp:=  [|java:util:concurrent:ExecutorCompletionService.submit|](v4, v0) @signature [|Ljava/util/concurrent/ExecutorCompletionService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService|] @type virtual;
#L125e20.   v18:= temp  @type object;
#L125e22.   v0:= v18  @type object;
#L125e26.   call temp:=  [|java:util:List.add|](v9, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L125e2c.   v16:= v16 + -1;
#L125e30.   v3:= 1  @length 4;
#L125e32.   v6:= v5  @type object;
#L125e34.   call temp:=  [|java:util:concurrent:ExecutorCompletionService.poll|](v4) @signature [|Ljava/util/concurrent/ExecutorCompletionService;.poll:()Ljava/util/concurrent/Future;|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService|] @type virtual;
#L125e3a.   v8:= temp  @type object;
#L125e3c.   if v8 != 0 then goto L125e6e;
#L125e40.   if v16 <= 0 then goto L125eb4;
#L125e44.   v16:= v16 + -1;
#L125e48.   call temp:=  [|java:util:Iterator.next|](v11) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L125e4e.   v18:= temp  @type object;
#L125e50.   v18:= ([|java:util:concurrent:Callable|])v18;
#L125e54.   v0:= v18  @type object;
#L125e58.   call temp:=  [|java:util:concurrent:ExecutorCompletionService.submit|](v4, v0) @signature [|Ljava/util/concurrent/ExecutorCompletionService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService|] @type virtual;
#L125e5e.   v18:= temp  @type object;
#L125e60.   v0:= v18  @type object;
#L125e64.   call temp:=  [|java:util:List.add|](v9, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L125e6a.   v3:= v3 + 1;
#L125e6e.   if v8 == 0 then goto L125f6a;
#L125e72.   v3:= v3 + -1;
#L125e76.   call temp:=  [|java:util:concurrent:Future.get|](v8) @signature [|Ljava/util/concurrent/Future;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L125e7c.   v18:= temp  @type object;
#L125e7e.   call temp:=  [|java:util:List.iterator|](v9) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L125e84.   v10:= temp  @type object;
#L125e86.   call temp:=  [|java:util:Iterator.hasNext|](v10) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L125e8c.   v19:= temp;
#L125e8e.   if v19 == 0 then goto L125f64;
#L125e92.   call temp:=  [|java:util:Iterator.next|](v10) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L125e98.   v8:= temp  @type object;
#L125e9a.   v8:= ([|java:util:concurrent:Future|])v8;
#L125e9e.   v19:= 1  @length 16;
#L125ea2.   v0:= v19;
#L125ea6.   call temp:=  [|java:util:concurrent:Future.cancel|](v8, v0) @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L125eac.   goto L125e86;
#L125eae.   v12:= 0  @length wide16;
#L125eb2.   goto L125e02;
#L125eb4.   if v3 != 0 then goto L125efa;
#L125eb8.   if v6 != 0 then goto L125f66;
#L125ebc.   v5:= new [|java:util:concurrent:ExecutionException|];
#L125ec0.   call temp:=  [|java:util:concurrent:ExecutionException.<init>|](v5) @signature [|Ljava/util/concurrent/ExecutionException;.<init>:()V|] @classDescriptor [|java:util:concurrent:ExecutionException|] @type direct;
#L125ec6.   throw v5;
#L125ec8.   v18:= Exception  @type object;
#L125eca.   call temp:=  [|java:util:List.iterator|](v9) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L125ed0.   v10:= temp  @type object;
#L125ed2.   call temp:=  [|java:util:Iterator.hasNext|](v10) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L125ed8.   v19:= temp;
#L125eda.   if v19 == 0 then goto L125f62;
#L125ede.   call temp:=  [|java:util:Iterator.next|](v10) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L125ee4.   v8:= temp  @type object;
#L125ee6.   v8:= ([|java:util:concurrent:Future|])v8;
#L125eea.   v19:= 1  @length 16;
#L125eee.   v0:= v19;
#L125ef2.   call temp:=  [|java:util:concurrent:Future.cancel|](v8, v0) @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L125ef8.   goto L125ed2;
#L125efa.   if v22 == 0 then goto L125f3c;
#L125efe.   v18:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L125f02.   v0:= v23  @type wide;
#L125f06.   v2:= v18  @type object;
#L125f0a.   call temp:=  [|java:util:concurrent:ExecutorCompletionService.poll|](v4, v0, v1, v2) @signature [|Ljava/util/concurrent/ExecutorCompletionService;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService|] @type virtual;
#L125f10.   v8:= temp  @type object;
#L125f12.   if v8 != 0 then goto L125f28;
#L125f16.   v18:= new [|java:util:concurrent:TimeoutException|];
#L125f1a.   call temp:=  [|java:util:concurrent:TimeoutException.<init>|](v18) @signature [|Ljava/util/concurrent/TimeoutException;.<init>:()V|] @classDescriptor [|java:util:concurrent:TimeoutException|] @type direct;
#L125f20.   throw v18;
#L125f22.   v18:= Exception  @type object;
#L125f24.   v5:= v6  @type object;
#L125f26.   goto L125eca;
#L125f28.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L125f2e.   v14:= temp  @type wide;
#L125f30.   v18:= v14 - v12  @type long;
#L125f34.   v23:= v23 - v18  @type long;
#L125f38.   v12:= v14  @type wide;
#L125f3a.   goto L125e6e;
#L125f3c.   call temp:=  [|java:util:concurrent:ExecutorCompletionService.take|](v4) @signature [|Ljava/util/concurrent/ExecutorCompletionService;.take:()Ljava/util/concurrent/Future;|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService|] @type virtual;
#L125f42.   v8:= temp  @type object;
#L125f44.   goto L125e6e;
#L125f46.   v7:= Exception  @type object;
#L125f48.   v5:= v7  @type object;
#L125f4a.   v6:= v5  @type object;
#L125f4c.   goto L125e34;
#L125f50.   v17:= Exception  @type object;
#L125f52.   v5:= new [|java:util:concurrent:ExecutionException|];
#L125f56.   v0:= v17  @type object;
#L125f5a.   call temp:=  [|java:util:concurrent:ExecutionException.<init>|](v5, v0) @signature [|Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:ExecutionException|] @type direct;
#L125f60.   goto L125f4a;
#L125f62.   throw v18;
#L125f64.   return v18  @type object;
#L125f66.   v5:= v6  @type object;
#L125f68.   goto L125ec6;
#L125f6a.   v5:= v6  @type object;
#L125f6c.   goto L125f4a;
  catch  [|any|] @[L125dfa..L125e2c] goto L125ec8;
  catch  [|any|] @[L125e34..L125e6a] goto L125f22;
  catch  [|java:util:concurrent:ExecutionException|] @[L125e76..L125e7c] goto L125f46;
  catch  [|java:lang:RuntimeException|] @[L125e76..L125e7c] goto L125f50;
  catch  [|any|] @[L125e76..L125e7c] goto L125f22;
  catch  [|any|] @[L125ebc..L125ec6] goto L125f22;
  catch  [|any|] @[L125ec6..L125ec8] goto L125ec8;
  catch  [|any|] @[L125efe..L125f60] goto L125f22;

   }
    procedure [|java:util:List|] [|java:util:concurrent:AbstractExecutorService.invokeAll|] ([|java:util:concurrent:AbstractExecutorService|] v9 @type (this), [|java:util:Collection|] v10 @type (object)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.invokeAll:(Ljava/util/Collection;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L125fc4.   v8:= 1  @length 4;
#L125fc6.   if v10 != 0 then goto L125fd6;
#L125fca.   v6:= new [|java:lang:NullPointerException|];
#L125fce.   call temp:=  [|java:lang:NullPointerException.<init>|](v6) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L125fd4.   throw v6;
#L125fd6.   v3:= new [|java:util:ArrayList|];
#L125fda.   call temp:=  [|java:util:Collection.size|](v10) @signature [|Ljava/util/Collection;.size:()I|] @classDescriptor [|java:util:Collection|] @type interface;
#L125fe0.   v6:= temp;
#L125fe2.   call temp:=  [|java:util:ArrayList.<init>|](v3, v6) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L125fe8.   v0:= 0  @length 4;
#L125fea.   call temp:=  [|java:util:Collection.iterator|](v10) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L125ff0.   v4:= temp  @type object;
#L125ff2.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L125ff8.   v6:= temp;
#L125ffa.   if v6 == 0 then goto L12604e;
#L125ffe.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126004.   v5:= temp  @type object;
#L126006.   v5:= ([|java:util:concurrent:Callable|])v5;
#L12600a.   call temp:=  [|java:util:concurrent:AbstractExecutorService.newTaskFor|](v9, v5) @signature [|Ljava/util/concurrent/AbstractExecutorService;.newTaskFor:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L126010.   v2:= temp  @type object;
#L126012.   call temp:=  [|java:util:List.add|](v3, v2) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L126018.   call temp:=  [|java:util:concurrent:AbstractExecutorService.execute|](v9, v2) @signature [|Ljava/util/concurrent/AbstractExecutorService;.execute:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L12601e.   goto L125ff2;
#L126020.   v6:= Exception  @type object;
#L126022.   if v0 != 0 then goto L1260b4;
#L126026.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L12602c.   v4:= temp  @type object;
#L12602e.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126034.   v7:= temp;
#L126036.   if v7 == 0 then goto L1260b4;
#L12603a.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126040.   v1:= temp  @type object;
#L126042.   v1:= ([|java:util:concurrent:Future|])v1;
#L126046.   call temp:=  [|java:util:concurrent:Future.cancel|](v1, v8) @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L12604c.   goto L12602e;
#L12604e.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L126054.   v4:= temp  @type object;
#L126056.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12605c.   v6:= temp;
#L12605e.   if v6 == 0 then goto L126086;
#L126062.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126068.   v1:= temp  @type object;
#L12606a.   v1:= ([|java:util:concurrent:Future|])v1;
#L12606e.   call temp:=  [|java:util:concurrent:Future.isDone|](v1) @signature [|Ljava/util/concurrent/Future;.isDone:()Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L126074.   v6:= temp;
#L126076.   if v6 != 0 then goto L126056;
#L12607a.   call temp:=  [|java:util:concurrent:Future.get|](v1) @signature [|Ljava/util/concurrent/Future;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L126080.   goto L126056;
#L126082.   v6:= Exception  @type object;
#L126084.   goto L126056;
#L126086.   v0:= 1  @length 4;
#L126088.   if v0 != 0 then goto L1260ba;
#L12608c.   call temp:=  [|java:util:List.iterator|](v3) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L126092.   v4:= temp  @type object;
#L126094.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12609a.   v6:= temp;
#L12609c.   if v6 == 0 then goto L1260ba;
#L1260a0.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1260a6.   v1:= temp  @type object;
#L1260a8.   v1:= ([|java:util:concurrent:Future|])v1;
#L1260ac.   call temp:=  [|java:util:concurrent:Future.cancel|](v1, v8) @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L1260b2.   goto L126094;
#L1260b4.   throw v6;
#L1260b6.   v6:= Exception  @type object;
#L1260b8.   goto L126056;
#L1260ba.   return v3  @type object;
  catch  [|any|] @[L125fea..L12601e] goto L126020;
  catch  [|any|] @[L12604e..L126074] goto L126020;
  catch  [|java:util:concurrent:CancellationException|] @[L12607a..L126080] goto L126082;
  catch  [|java:util:concurrent:ExecutionException|] @[L12607a..L126080] goto L1260b6;
  catch  [|any|] @[L12607a..L126080] goto L126020;

   }
    procedure [|java:util:List|] [|java:util:concurrent:AbstractExecutorService.invokeAll|] ([|java:util:concurrent:AbstractExecutorService|] v18 @type (this), [|java:util:Collection|] v19 @type (object), [|long|] v20, [|java:util:concurrent:TimeUnit|] v22 @type (object)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
      
#L1260f0.   if v19 == 0 then goto L1260f8;
#L1260f4.   if v22 != 0 then goto L126104;
#L1260f8.   v16:= new [|java:lang:NullPointerException|];
#L1260fc.   call temp:=  [|java:lang:NullPointerException.<init>|](v16) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L126102.   throw v16;
#L126104.   v0:= v22  @type object;
#L126108.   v1:= v20  @type wide;
#L12610c.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v0, v1, v2) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L126112.   v10:= temp  @type wide;
#L126114.   v5:= new [|java:util:ArrayList|];
#L126118.   call temp:=  [|java:util:Collection.size|](v19) @signature [|Ljava/util/Collection;.size:()I|] @classDescriptor [|java:util:Collection|] @type interface;
#L12611e.   v16:= temp;
#L126120.   v0:= v16;
#L126124.   call temp:=  [|java:util:ArrayList.<init>|](v5, v0) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L12612a.   v3:= 0  @length 4;
#L12612c.   call temp:=  [|java:util:Collection.iterator|](v19) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L126132.   v6:= temp  @type object;
#L126134.   call temp:=  [|java:util:Iterator.hasNext|](v6) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12613a.   v16:= temp;
#L12613c.   if v16 == 0 then goto L12619a;
#L126140.   call temp:=  [|java:util:Iterator.next|](v6) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126146.   v14:= temp  @type object;
#L126148.   v14:= ([|java:util:concurrent:Callable|])v14;
#L12614c.   v0:= v18  @type object;
#L126150.   call temp:=  [|java:util:concurrent:AbstractExecutorService.newTaskFor|](v0, v14) @signature [|Ljava/util/concurrent/AbstractExecutorService;.newTaskFor:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L126156.   v16:= temp  @type object;
#L126158.   v0:= v16  @type object;
#L12615c.   call temp:=  [|java:util:List.add|](v5, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L126162.   goto L126134;
#L126164.   v16:= Exception  @type object;
#L126166.   if v3 != 0 then goto L126320;
#L12616a.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L126170.   v6:= temp  @type object;
#L126172.   call temp:=  [|java:util:Iterator.hasNext|](v6) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126178.   v17:= temp;
#L12617a.   if v17 == 0 then goto L126320;
#L12617e.   call temp:=  [|java:util:Iterator.next|](v6) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126184.   v4:= temp  @type object;
#L126186.   v4:= ([|java:util:concurrent:Future|])v4;
#L12618a.   v17:= 1  @length 16;
#L12618e.   v0:= v17;
#L126192.   call temp:=  [|java:util:concurrent:Future.cancel|](v4, v0) @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L126198.   goto L126172;
#L12619a.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1261a0.   v8:= temp  @type wide;
#L1261a2.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L1261a8.   v7:= temp  @type object;
#L1261aa.   call temp:=  [|java:util:Iterator.hasNext|](v7) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1261b0.   v16:= temp;
#L1261b2.   if v16 == 0 then goto L126226;
#L1261b6.   call temp:=  [|java:util:Iterator.next|](v7) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1261bc.   v16:= temp  @type object;
#L1261be.   v16:= ([|java:lang:Runnable|])v16;
#L1261c2.   v16:= ([|java:lang:Runnable|])v16;
#L1261c6.   v0:= v18  @type object;
#L1261ca.   v1:= v16  @type object;
#L1261ce.   call temp:=  [|java:util:concurrent:AbstractExecutorService.execute|](v0, v1) @signature [|Ljava/util/concurrent/AbstractExecutorService;.execute:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L1261d4.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1261da.   v12:= temp  @type wide;
#L1261dc.   v16:= v12 - v8  @type long;
#L1261e0.   v10:= v10 - v16  @type long;
#L1261e4.   v8:= v12  @type wide;
#L1261e6.   v16:= 0  @length wide16;
#L1261ea.   v16:= cmp(v10,v16);
#L1261ee.   if v16 > 0 then goto L1261aa;
#L1261f2.   if v3 != 0 then goto L126322;
#L1261f6.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L1261fc.   v6:= temp  @type object;
#L1261fe.   call temp:=  [|java:util:Iterator.hasNext|](v6) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126204.   v16:= temp;
#L126206.   if v16 == 0 then goto L126322;
#L12620a.   call temp:=  [|java:util:Iterator.next|](v6) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126210.   v4:= temp  @type object;
#L126212.   v4:= ([|java:util:concurrent:Future|])v4;
#L126216.   v16:= 1  @length 16;
#L12621a.   v0:= v16;
#L12621e.   call temp:=  [|java:util:concurrent:Future.cancel|](v4, v0) @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L126224.   goto L1261fe;
#L126226.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L12622c.   v6:= temp  @type object;
#L12622e.   call temp:=  [|java:util:Iterator.hasNext|](v6) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126234.   v16:= temp;
#L126236.   if v16 == 0 then goto L1262ea;
#L12623a.   call temp:=  [|java:util:Iterator.next|](v6) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126240.   v4:= temp  @type object;
#L126242.   v4:= ([|java:util:concurrent:Future|])v4;
#L126246.   call temp:=  [|java:util:concurrent:Future.isDone|](v4) @signature [|Ljava/util/concurrent/Future;.isDone:()Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L12624c.   v16:= temp;
#L12624e.   if v16 != 0 then goto L12622e;
#L126252.   v16:= 0  @length wide16;
#L126256.   v16:= cmp(v10,v16);
#L12625a.   if v16 > 0 then goto L126292;
#L12625e.   if v3 != 0 then goto L126322;
#L126262.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L126268.   v6:= temp  @type object;
#L12626a.   call temp:=  [|java:util:Iterator.hasNext|](v6) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126270.   v16:= temp;
#L126272.   if v16 == 0 then goto L126322;
#L126276.   call temp:=  [|java:util:Iterator.next|](v6) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12627c.   v4:= temp  @type object;
#L12627e.   v4:= ([|java:util:concurrent:Future|])v4;
#L126282.   v16:= 1  @length 16;
#L126286.   v0:= v16;
#L12628a.   call temp:=  [|java:util:concurrent:Future.cancel|](v4, v0) @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L126290.   goto L12626a;
#L126292.   v16:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L126296.   v0:= v16  @type object;
#L12629a.   call temp:=  [|java:util:concurrent:Future.get|](v4, v10, v11, v0) @signature [|Ljava/util/concurrent/Future;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L1262a0.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1262a6.   v12:= temp  @type wide;
#L1262a8.   v16:= v12 - v8  @type long;
#L1262ac.   v10:= v10 - v16  @type long;
#L1262b0.   v8:= v12  @type wide;
#L1262b2.   goto L12622e;
#L1262b4.   v15:= Exception  @type object;
#L1262b6.   if v3 != 0 then goto L126322;
#L1262ba.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L1262c0.   v6:= temp  @type object;
#L1262c2.   call temp:=  [|java:util:Iterator.hasNext|](v6) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1262c8.   v16:= temp;
#L1262ca.   if v16 == 0 then goto L126322;
#L1262ce.   call temp:=  [|java:util:Iterator.next|](v6) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1262d4.   v4:= temp  @type object;
#L1262d6.   v4:= ([|java:util:concurrent:Future|])v4;
#L1262da.   v16:= 1  @length 16;
#L1262de.   v0:= v16;
#L1262e2.   call temp:=  [|java:util:concurrent:Future.cancel|](v4, v0) @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L1262e8.   goto L1262c2;
#L1262ea.   v3:= 1  @length 4;
#L1262ec.   if v3 != 0 then goto L126322;
#L1262f0.   call temp:=  [|java:util:List.iterator|](v5) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L1262f6.   v6:= temp  @type object;
#L1262f8.   call temp:=  [|java:util:Iterator.hasNext|](v6) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1262fe.   v16:= temp;
#L126300.   if v16 == 0 then goto L126322;
#L126304.   call temp:=  [|java:util:Iterator.next|](v6) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12630a.   v4:= temp  @type object;
#L12630c.   v4:= ([|java:util:concurrent:Future|])v4;
#L126310.   v16:= 1  @length 16;
#L126314.   v0:= v16;
#L126318.   call temp:=  [|java:util:concurrent:Future.cancel|](v4, v0) @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L12631e.   goto L1262f8;
#L126320.   throw v16;
#L126322.   return v5  @type object;
#L126324.   v16:= Exception  @type object;
#L126326.   goto L1262a0;
#L126328.   v16:= Exception  @type object;
#L12632a.   goto L1262a0;
  catch  [|any|] @[L12612c..L126162] goto L126164;
  catch  [|any|] @[L12619a..L1261da] goto L126164;
  catch  [|any|] @[L126226..L12624c] goto L126164;
  catch  [|java:util:concurrent:CancellationException|] @[L126292..L1262a0] goto L126328;
  catch  [|java:util:concurrent:ExecutionException|] @[L126292..L1262a0] goto L126324;
  catch  [|java:util:concurrent:TimeoutException|] @[L126292..L1262a0] goto L1262b4;
  catch  [|any|] @[L126292..L1262a0] goto L126164;
  catch  [|any|] @[L1262a0..L1262a6] goto L126164;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:AbstractExecutorService.invokeAny|] ([|java:util:concurrent:AbstractExecutorService|] v4 @type (this), [|java:util:Collection|] v5 @type (object)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L126378.   v1:= 0  @length 4;
#L12637a.   v2:= 0  @length wide16;
#L12637e.   call temp:=  [|java:util:concurrent:AbstractExecutorService.doInvokeAny|](v4, v5, v1, v2, v3) @signature [|Ljava/util/concurrent/AbstractExecutorService;.doInvokeAny:(Ljava/util/Collection;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type direct;
#L126384.   v1:= temp  @type object;
#L126386.   return v1  @type object;
#L126388.   v0:= Exception  @type object;
#L12638a.   v1:= @@[|java:util:concurrent:AbstractExecutorService.$assertionsDisabled|]   @boolean;
#L12638e.   if v1 != 0 then goto L12639e;
#L126392.   v1:= new [|java:lang:AssertionError|];
#L126396.   call temp:=  [|java:lang:AssertionError.<init>|](v1) @signature [|Ljava/lang/AssertionError;.<init>:()V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L12639c.   throw v1;
#L12639e.   v1:= 0  @length 4;
#L1263a0.   goto L126386;
  catch  [|java:util:concurrent:TimeoutException|] @[L12637e..L126384] goto L126388;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:AbstractExecutorService.invokeAny|] ([|java:util:concurrent:AbstractExecutorService|] v3 @type (this), [|java:util:Collection|] v4 @type (object), [|long|] v5, [|java:util:concurrent:TimeUnit|] v7 @type (object)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1263c4.   v0:= 1  @length 4;
#L1263c6.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v7, v5, v6) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L1263cc.   v1:= temp  @type wide;
#L1263ce.   call temp:=  [|java:util:concurrent:AbstractExecutorService.doInvokeAny|](v3, v4, v0, v1, v2) @signature [|Ljava/util/concurrent/AbstractExecutorService;.doInvokeAny:(Ljava/util/Collection;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type direct;
#L1263d4.   v0:= temp  @type object;
#L1263d6.   return v0  @type object;

   }
    procedure [|java:util:concurrent:RunnableFuture|] [|java:util:concurrent:AbstractExecutorService.newTaskFor|] ([|java:util:concurrent:AbstractExecutorService|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.newTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L1263e8.   v0:= new [|java:util:concurrent:FutureTask|];
#L1263ec.   call temp:=  [|java:util:concurrent:FutureTask.<init>|](v0, v2, v3) @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L1263f2.   return v0  @type object;

   }
    procedure [|java:util:concurrent:RunnableFuture|] [|java:util:concurrent:AbstractExecutorService.newTaskFor|] ([|java:util:concurrent:AbstractExecutorService|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.newTaskFor:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L126404.   v0:= new [|java:util:concurrent:FutureTask|];
#L126408.   call temp:=  [|java:util:concurrent:FutureTask.<init>|](v0, v2) @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/util/concurrent/Callable;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L12640e.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:AbstractExecutorService.submit|] ([|java:util:concurrent:AbstractExecutorService|] v2 @type (this), [|java:lang:Runnable|] v3 @type (object)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L126420.   if v3 != 0 then goto L126430;
#L126424.   v1:= new [|java:lang:NullPointerException|];
#L126428.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12642e.   throw v1;
#L126430.   v1:= 0  @length 4;
#L126432.   call temp:=  [|java:util:concurrent:AbstractExecutorService.newTaskFor|](v2, v3, v1) @signature [|Ljava/util/concurrent/AbstractExecutorService;.newTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L126438.   v0:= temp  @type object;
#L12643a.   call temp:=  [|java:util:concurrent:AbstractExecutorService.execute|](v2, v0) @signature [|Ljava/util/concurrent/AbstractExecutorService;.execute:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L126440.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:AbstractExecutorService.submit|] ([|java:util:concurrent:AbstractExecutorService|] v2 @type (this), [|java:lang:Runnable|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L126454.   if v3 != 0 then goto L126464;
#L126458.   v1:= new [|java:lang:NullPointerException|];
#L12645c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L126462.   throw v1;
#L126464.   call temp:=  [|java:util:concurrent:AbstractExecutorService.newTaskFor|](v2, v3, v4) @signature [|Ljava/util/concurrent/AbstractExecutorService;.newTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L12646a.   v0:= temp  @type object;
#L12646c.   call temp:=  [|java:util:concurrent:AbstractExecutorService.execute|](v2, v0) @signature [|Ljava/util/concurrent/AbstractExecutorService;.execute:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L126472.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:AbstractExecutorService.submit|] ([|java:util:concurrent:AbstractExecutorService|] v2 @type (this), [|java:util:concurrent:Callable|] v3 @type (object)) @owner [|java:util:concurrent:AbstractExecutorService|] @signature [|Ljava/util/concurrent/AbstractExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L126484.   if v3 != 0 then goto L126494;
#L126488.   v1:= new [|java:lang:NullPointerException|];
#L12648c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L126492.   throw v1;
#L126494.   call temp:=  [|java:util:concurrent:AbstractExecutorService.newTaskFor|](v2, v3) @signature [|Ljava/util/concurrent/AbstractExecutorService;.newTaskFor:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L12649a.   v0:= temp  @type object;
#L12649c.   call temp:=  [|java:util:concurrent:AbstractExecutorService.execute|](v2, v0) @signature [|Ljava/util/concurrent/AbstractExecutorService;.execute:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L1264a2.   return v0  @type object;

   }
record [|java:util:concurrent:ArrayBlockingQueue$Itr|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
      [|int|] [|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:util:concurrent:ArrayBlockingQueue$Itr.lastItem|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:util:concurrent:ArrayBlockingQueue$Itr.nextItem|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:concurrent:ArrayBlockingQueue$Itr.prevCycles|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:ArrayBlockingQueue|] [|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
      global [|int|] @@[|java:util:concurrent:ArrayBlockingQueue$Itr.DETACHED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ArrayBlockingQueue$Itr.NONE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ArrayBlockingQueue$Itr.REMOVED|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itr.<init>|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v4 @type (this), [|java:util:concurrent:ArrayBlockingQueue|] v5 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.<init>:(Ljava/util/concurrent/ArrayBlockingQueue;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1264b4.   v2:= -1  @length 4;
#L1264b6.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]  := v5 @type object;
#L1264ba.   call temp:=  [|java:lang:Object.<init>|](v4) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1264c0.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|]  := v2;
#L1264c4.   v0:= v5.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L1264c8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1264ce.   v2:= v5.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1264d2.   if v2 != 0 then goto L1264f0;
#L1264d6.   v2:= -1  @length 4;
#L1264d8.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|]  := v2;
#L1264dc.   v2:= -1  @length 4;
#L1264de.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|]  := v2;
#L1264e2.   v2:= -3  @length 4;
#L1264e4.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|]  := v2;
#L1264e8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1264ee.   return @void ;
#L1264f0.   v1:= v5.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L1264f4.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|]  := v1;
#L1264f8.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|]  := v1;
#L1264fc.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.itemAt|](v5, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.itemAt:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L126502.   v2:= temp  @type object;
#L126504.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextItem|]  := v2 @type object;
#L126508.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.incCursor|](v4, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.incCursor:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L12650e.   v2:= temp;
#L126510.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|]  := v2;
#L126514.   v2:= v5.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L126518.   if v2 != 0 then goto L126542;
#L12651c.   v2:= new [|java:util:concurrent:ArrayBlockingQueue$Itrs|];
#L126520.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.<init>|](v2, v5, v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.<init>:(Ljava/util/concurrent/ArrayBlockingQueue;Ljava/util/concurrent/ArrayBlockingQueue$Itr;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type direct;
#L126526.   v5.[|java:util:concurrent:ArrayBlockingQueue.itrs|]  := v2 @type object;
#L12652a.   v2:= v5.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L12652e.   v2:= v2.[|java:util:concurrent:ArrayBlockingQueue$Itrs.cycles|] ;
#L126532.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevCycles|]  := v2;
#L126536.   goto L1264e8;
#L126538.   v2:= Exception  @type object;
#L12653a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126540.   throw v2;
#L126542.   v2:= v5.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L126546.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.register|](v2, v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.register:(Ljava/util/concurrent/ArrayBlockingQueue$Itr;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L12654c.   v2:= v5.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L126550.   v3:= 0  @length 4;
#L126552.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.doSomeSweeping|](v2, v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.doSomeSweeping:(Z)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L126558.   goto L12652a;
  catch  [|any|] @[L1264ce..L1264e8] goto L126538;
  catch  [|any|] @[L1264f0..L126536] goto L126538;
  catch  [|any|] @[L126542..L126558] goto L126538;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itr.detach|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v2 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.detach:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L126588.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|] ;
#L12658c.   if v0 < 0 then goto L1265a6;
#L126590.   v0:= -3  @length 4;
#L126592.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|]  := v0;
#L126596.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L12659a.   v0:= v0.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L12659e.   v1:= 1  @length 4;
#L1265a0.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.doSomeSweeping|](v0, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.doSomeSweeping:(Z)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L1265a6.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:ArrayBlockingQueue$Itr.distance|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v1 @type (this), [|int|] v2, [|int|] v3, [|int|] v4) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.distance:(III)I|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1265b8.   v0:= v2 - v3  @type int;
#L1265bc.   if v0 >= 0 then goto L1265c2;
#L1265c0.   v0:= v0 + v4  @type int;
#L1265c2.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ArrayBlockingQueue$Itr.incCursor|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.incCursor:(I)I|] @Access PRIVATE {
      local temp ;
        v0;
      
#L1265d4.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1265d8.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v0, v2) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1265de.   v2:= temp;
#L1265e0.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1265e4.   v0:= v0.[|java:util:concurrent:ArrayBlockingQueue.putIndex|] ;
#L1265e8.   if v2 != v0 then goto L1265ee;
#L1265ec.   v2:= -1  @length 4;
#L1265ee.   return v2;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itr.incorporateDequeues|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v10 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.incorporateDequeues:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L126600.   v9:= -2  @length 4;
#L126602.   v0:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L126606.   v0:= v0.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L12660a.   v6:= v0.[|java:util:concurrent:ArrayBlockingQueue$Itrs.cycles|] ;
#L12660e.   v0:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L126612.   v8:= v0.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L126616.   v7:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevCycles|] ;
#L12661a.   v2:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|] ;
#L12661e.   if v6 != v7 then goto L126626;
#L126622.   if v8 == v2 then goto L12669e;
#L126626.   v0:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L12662a.   v0:= v0.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L12662e.   v5:= v0.length;
#L126630.   v0:= v6 - v7  @type int;
#L126634.   v0:= v0 * v5  @type int;
#L126636.   v1:= v8 - v2  @type int;
#L12663a.   v0:= v0 + v1  @type int;
#L12663c.   v3:= (long)v0  @type i2l;
#L12663e.   v1:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|] ;
#L126642.   v0:= v10  @type object;
#L126644.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.invalidated|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.invalidated:(IIJI)Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L12664a.   v0:= temp;
#L12664c.   if v0 == 0 then goto L126654;
#L126650.   v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|]  := v9;
#L126654.   v1:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|] ;
#L126658.   v0:= v10  @type object;
#L12665a.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.invalidated|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.invalidated:(IIJI)Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L126660.   v0:= temp;
#L126662.   if v0 == 0 then goto L12666a;
#L126666.   v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|]  := v9;
#L12666a.   v1:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|] ;
#L12666e.   v0:= v10  @type object;
#L126670.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.invalidated|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.invalidated:(IIJI)Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L126676.   v0:= temp;
#L126678.   if v0 == 0 then goto L126680;
#L12667c.   v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|]  := v8;
#L126680.   v0:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|] ;
#L126684.   if v0 >= 0 then goto L1266a0;
#L126688.   v0:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|] ;
#L12668c.   if v0 >= 0 then goto L1266a0;
#L126690.   v0:= v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|] ;
#L126694.   if v0 >= 0 then goto L1266a0;
#L126698.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.detach|](v10) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.detach:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L12669e.   return @void ;
#L1266a0.   v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevCycles|]  := v6;
#L1266a4.   v10.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|]  := v8;
#L1266a8.   goto L12669e;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue$Itr.invalidated|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v4 @type (this), [|int|] v5, [|int|] v6, [|long|] v7, [|int|] v9) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.invalidated:(IIJI)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1266bc.   v1:= 0  @length 4;
#L1266be.   if v5 >= 0 then goto L1266c4;
#L1266c2.   return v1;
#L1266c4.   v0:= v5 - v6  @type int;
#L1266c8.   if v0 >= 0 then goto L1266ce;
#L1266cc.   v0:= v0 + v9  @type int;
#L1266ce.   v2:= (long)v0  @type i2l;
#L1266d0.   v2:= cmp(v7,v2);
#L1266d4.   if v2 <= 0 then goto L1266c2;
#L1266d8.   v1:= 1  @length 4;
#L1266da.   goto L1266c2;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itr.noNext|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.noNext:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L1266ec.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1266f0.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L1266f4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1266fa.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.isDetached|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.isDetached:()Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126700.   v1:= temp;
#L126702.   if v1 != 0 then goto L12672e;
#L126706.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.incorporateDequeues|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.incorporateDequeues:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L12670c.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|] ;
#L126710.   if v1 < 0 then goto L12672e;
#L126714.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L126718.   v2:= v3.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|] ;
#L12671c.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.itemAt|](v1, v2) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.itemAt:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L126722.   v1:= temp  @type object;
#L126724.   v3.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastItem|]  := v1 @type object;
#L126728.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.detach|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.detach:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L12672e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126734.   return @void ;
#L126736.   v1:= Exception  @type object;
#L126738.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12673e.   throw v1;
  catch  [|any|] @[L1266fa..L12672e] goto L126736;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue$Itr.hasNext|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v1 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.hasNext:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12675c.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextItem|]   @type object;
#L126760.   if v0 == 0 then goto L126768;
#L126764.   v0:= 1  @length 4;
#L126766.   return v0;
#L126768.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.noNext|](v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.noNext:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L12676e.   v0:= 0  @length 4;
#L126770.   goto L126766;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue$Itr.isDetached|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v1 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.isDetached:()Z|] @Access  {
      local temp ;
        v0;
      
#L126784.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|] ;
#L126788.   if v0 >= 0 then goto L126790;
#L12678c.   v0:= 1  @length 4;
#L12678e.   return v0;
#L126790.   v0:= 0  @length 4;
#L126792.   goto L12678e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ArrayBlockingQueue$Itr.next|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v4 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1267a4.   v2:= v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextItem|]   @type object;
#L1267a8.   if v2 != 0 then goto L1267b8;
#L1267ac.   v3:= new [|java:util:NoSuchElementException|];
#L1267b0.   call temp:=  [|java:util:NoSuchElementException.<init>|](v3) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L1267b6.   throw v3;
#L1267b8.   v3:= v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1267bc.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L1267c0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1267c6.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.isDetached|](v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.isDetached:()Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L1267cc.   v3:= temp;
#L1267ce.   if v3 != 0 then goto L1267d8;
#L1267d2.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.incorporateDequeues|](v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.incorporateDequeues:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L1267d8.   v3:= v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|] ;
#L1267dc.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|]  := v3;
#L1267e0.   v0:= v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|] ;
#L1267e4.   if v0 < 0 then goto L126810;
#L1267e8.   v3:= v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1267ec.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|]  := v0;
#L1267f0.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.itemAt|](v3, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.itemAt:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1267f6.   v3:= temp  @type object;
#L1267f8.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextItem|]  := v3 @type object;
#L1267fc.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.incCursor|](v4, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.incCursor:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L126802.   v3:= temp;
#L126804.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|]  := v3;
#L126808.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12680e.   return v2  @type object;
#L126810.   v3:= -1  @length 4;
#L126812.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|]  := v3;
#L126816.   v3:= 0  @length 4;
#L126818.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextItem|]  := v3 @type object;
#L12681c.   goto L126808;
#L12681e.   v3:= Exception  @type object;
#L126820.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126826.   throw v3;
  catch  [|any|] @[L1267c6..L126808] goto L12681e;
  catch  [|any|] @[L126812..L12681c] goto L12681e;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itr.remove|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v5 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.remove:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12684c.   v4:= -1  @length 4;
#L12684e.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L126852.   v2:= v3.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L126856.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12685c.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.isDetached|](v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.isDetached:()Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126862.   v3:= temp;
#L126864.   if v3 != 0 then goto L12686e;
#L126868.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.incorporateDequeues|](v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.incorporateDequeues:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L12686e.   v1:= v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|] ;
#L126872.   v3:= -1  @length 4;
#L126874.   v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|]  := v3;
#L126878.   if v1 < 0 then goto L1268e0;
#L12687c.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.isDetached|](v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.isDetached:()Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126882.   v3:= temp;
#L126884.   if v3 != 0 then goto L1268b0;
#L126888.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L12688c.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.removeAt|](v3, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.removeAt:(I)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L126892.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|] ;
#L126896.   if v3 >= 0 then goto L1268a8;
#L12689a.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|] ;
#L12689e.   if v3 >= 0 then goto L1268a8;
#L1268a2.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.detach|](v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.detach:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L1268a8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1268ae.   return @void ;
#L1268b0.   v0:= v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastItem|]   @type object;
#L1268b4.   v3:= 0  @length 4;
#L1268b6.   v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastItem|]  := v3 @type object;
#L1268ba.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1268be.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.itemAt|](v3, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.itemAt:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1268c4.   v3:= temp  @type object;
#L1268c6.   if v3 != v0 then goto L126892;
#L1268ca.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1268ce.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.removeAt|](v3, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.removeAt:(I)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1268d4.   goto L126892;
#L1268d6.   v3:= Exception  @type object;
#L1268d8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1268de.   throw v3;
#L1268e0.   if v1 != v4 then goto L126892;
#L1268e4.   v3:= new [|java:lang:IllegalStateException|];
#L1268e8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v3) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1268ee.   throw v3;
  catch  [|any|] @[L12685c..L1268a8] goto L1268d6;
  catch  [|any|] @[L1268b0..L1268d4] goto L1268d6;
  catch  [|any|] @[L1268e4..L1268ee] goto L1268d6;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue$Itr.removedAt|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v14 @type (this), [|int|] v15) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.removedAt:(I)Z|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
      
#L12691c.   v11:= 1  @length 4;
#L12691e.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.isDetached|](v14) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.isDetached:()Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126924.   v12:= temp;
#L126926.   if v12 == 0 then goto L12692c;
#L12692a.   return v11;
#L12692c.   v12:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L126930.   v12:= v12.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L126934.   v2:= v12.[|java:util:concurrent:ArrayBlockingQueue$Itrs.cycles|] ;
#L126938.   v12:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L12693c.   v9:= v12.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L126940.   v6:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevCycles|] ;
#L126944.   v7:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|] ;
#L126948.   v12:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L12694c.   v12:= v12.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L126950.   v4:= v12.length;
#L126952.   v1:= v2 - v6  @type int;
#L126956.   if v15 >= v9 then goto L12695e;
#L12695a.   v1:= v1 + 1;
#L12695e.   v12:= v1 * v4  @type int;
#L126962.   v13:= v15 - v7  @type int;
#L126966.   v8:= v12 + v13  @type int;
#L12696a.   v0:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|] ;
#L12696e.   if v0 < 0 then goto L126990;
#L126972.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.distance|](v14, v0, v7, v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.distance:(III)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L126978.   v10:= temp;
#L12697a.   if v10 != v8 then goto L1269c8;
#L12697e.   v12:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L126982.   v12:= v12.[|java:util:concurrent:ArrayBlockingQueue.putIndex|] ;
#L126986.   if v0 != v12 then goto L126990;
#L12698a.   v0:= -1  @length 4;
#L12698c.   v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|]  := v0;
#L126990.   v3:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|] ;
#L126994.   if v3 < 0 then goto L1269aa;
#L126998.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.distance|](v14, v3, v7, v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.distance:(III)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L12699e.   v10:= temp;
#L1269a0.   if v10 != v8 then goto L1269de;
#L1269a4.   v3:= -2  @length 4;
#L1269a6.   v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|]  := v3;
#L1269aa.   v5:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|] ;
#L1269ae.   if v5 < 0 then goto L126a0a;
#L1269b2.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.distance|](v14, v5, v7, v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.distance:(III)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L1269b8.   v10:= temp;
#L1269ba.   if v10 != v8 then goto L1269f4;
#L1269be.   v5:= -2  @length 4;
#L1269c0.   v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|]  := v5;
#L1269c4.   v11:= 0  @length 4;
#L1269c6.   goto L12692a;
#L1269c8.   if v10 <= v8 then goto L126990;
#L1269cc.   v12:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1269d0.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.dec|](v12, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.dec:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1269d6.   v0:= temp;
#L1269d8.   v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|]  := v0;
#L1269dc.   goto L126990;
#L1269de.   if v10 <= v8 then goto L1269aa;
#L1269e2.   v12:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1269e6.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.dec|](v12, v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.dec:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1269ec.   v3:= temp;
#L1269ee.   v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|]  := v3;
#L1269f2.   goto L1269aa;
#L1269f4.   if v10 <= v8 then goto L1269c4;
#L1269f8.   v11:= v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L1269fc.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.dec|](v11, v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.dec:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L126a02.   v5:= temp;
#L126a04.   v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|]  := v5;
#L126a08.   goto L1269c4;
#L126a0a.   if v0 >= 0 then goto L1269c4;
#L126a0e.   if v5 >= 0 then goto L1269c4;
#L126a12.   if v3 >= 0 then goto L1269c4;
#L126a16.   v12:= -3  @length 4;
#L126a18.   v14.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|]  := v12;
#L126a1c.   goto L12692a;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itr.shutdown|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v2 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.shutdown:()V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L126a30.   v1:= -2  @length 4;
#L126a32.   v0:= -1  @length 4;
#L126a34.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.cursor|]  := v0;
#L126a38.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|] ;
#L126a3c.   if v0 < 0 then goto L126a44;
#L126a40.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.nextIndex|]  := v1;
#L126a44.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|] ;
#L126a48.   if v0 < 0 then goto L126a56;
#L126a4c.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastRet|]  := v1;
#L126a50.   v0:= 0  @length 4;
#L126a52.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.lastItem|]  := v0 @type object;
#L126a56.   v0:= -3  @length 4;
#L126a58.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevTakeIndex|]  := v0;
#L126a5c.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue$Itr.takeIndexWrapped|] ([|java:util:concurrent:ArrayBlockingQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.takeIndexWrapped:()Z|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L126a70.   v0:= 1  @length 4;
#L126a72.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.isDetached|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.isDetached:()Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126a78.   v1:= temp;
#L126a7a.   if v1 == 0 then goto L126a80;
#L126a7e.   return v0;
#L126a80.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue$Itr.this$0|]   @type object;
#L126a84.   v1:= v1.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L126a88.   v1:= v1.[|java:util:concurrent:ArrayBlockingQueue$Itrs.cycles|] ;
#L126a8c.   v2:= v3.[|java:util:concurrent:ArrayBlockingQueue$Itr.prevCycles|] ;
#L126a90.   v1:= v1 - v2  @type int;
#L126a92.   if v1 <= v0 then goto L126a9e;
#L126a96.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.shutdown|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.shutdown:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126a9c.   goto L126a7e;
#L126a9e.   v0:= 0  @length 4;
#L126aa0.   goto L126a7e;

   }
record [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|]  @type class @AccessFlag   extends [|java:lang:ref:WeakReference|] {
      [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]    @AccessFlag ;
      [|java:util:concurrent:ArrayBlockingQueue$Itrs|] [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.<init>|] ([|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] v0 @type (this), [|java:util:concurrent:ArrayBlockingQueue$Itrs|] v1 @type (object), [|java:util:concurrent:ArrayBlockingQueue$Itr|] v2 @type (object), [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] v3 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.<init>:(Ljava/util/concurrent/ArrayBlockingQueue$Itrs;Ljava/util/concurrent/ArrayBlockingQueue$Itr;Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L126ab4.   v0.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.this$1|]  := v1 @type object;
#L126ab8.   call temp:=  [|java:lang:ref:WeakReference.<init>|](v0, v2) @signature [|Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:ref:WeakReference|] @type direct;
#L126abe.   v0.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]  := v3 @type object;
#L126ac2.   return @void ;

   }
record [|java:util:concurrent:ArrayBlockingQueue$Itrs|]  @type class @AccessFlag   {
      [|int|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.cycles|]    @AccessFlag ;
      [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.sweeper|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:ArrayBlockingQueue|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
      global [|int|] @@[|java:util:concurrent:ArrayBlockingQueue$Itrs.LONG_SWEEP_PROBES|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ArrayBlockingQueue$Itrs.SHORT_SWEEP_PROBES|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.<init>|] ([|java:util:concurrent:ArrayBlockingQueue$Itrs|] v1 @type (this), [|java:util:concurrent:ArrayBlockingQueue|] v2 @type (object), [|java:util:concurrent:ArrayBlockingQueue$Itr|] v3 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.<init>:(Ljava/util/concurrent/ArrayBlockingQueue;Ljava/util/concurrent/ArrayBlockingQueue$Itr;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L126ad4.   v1.[|java:util:concurrent:ArrayBlockingQueue$Itrs.this$0|]  := v2 @type object;
#L126ad8.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L126ade.   v0:= 0  @length 4;
#L126ae0.   v1.[|java:util:concurrent:ArrayBlockingQueue$Itrs.cycles|]  := v0;
#L126ae4.   v0:= 0  @length 4;
#L126ae6.   v1.[|java:util:concurrent:ArrayBlockingQueue$Itrs.sweeper|]  := v0 @type object;
#L126aea.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.register|](v1, v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.register:(Ljava/util/concurrent/ArrayBlockingQueue$Itr;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L126af0.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.doSomeSweeping|] ([|java:util:concurrent:ArrayBlockingQueue$Itrs|] v9 @type (this), [|boolean|] v10) @owner [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.doSomeSweeping:(Z)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L126b04.   v7:= 0  @length 4;
#L126b06.   if v10 == 0 then goto L126b34;
#L126b0a.   v5:= 16  @length 16;
#L126b0e.   v6:= v9.[|java:util:concurrent:ArrayBlockingQueue$Itrs.sweeper|]   @type object;
#L126b12.   if v6 != 0 then goto L126b38;
#L126b16.   v2:= 0  @length 4;
#L126b18.   v3:= v9.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]   @type object;
#L126b1c.   v4:= 1  @length 4;
#L126b1e.   if v5 <= 0 then goto L126b2a;
#L126b22.   if v3 != 0 then goto L126b4a;
#L126b26.   if v4 == 0 then goto L126b42;
#L126b2a.   if v3 != 0 then goto L126b9e;
#L126b2e.   v9.[|java:util:concurrent:ArrayBlockingQueue$Itrs.sweeper|]  := v7 @type object;
#L126b32.   return @void ;
#L126b34.   v5:= 4  @length 4;
#L126b36.   goto L126b0e;
#L126b38.   v2:= v6  @type object;
#L126b3a.   v3:= v2.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]   @type object;
#L126b3e.   v4:= 0  @length 4;
#L126b40.   goto L126b1e;
#L126b42.   v2:= 0  @length 4;
#L126b44.   v3:= v9.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]   @type object;
#L126b48.   v4:= 1  @length 4;
#L126b4a.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.get|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @type virtual;
#L126b50.   v0:= temp  @type object;
#L126b52.   v0:= ([|java:util:concurrent:ArrayBlockingQueue$Itr|])v0;
#L126b56.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]   @type object;
#L126b5a.   if v0 == 0 then goto L126b6a;
#L126b5e.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.isDetached|](v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.isDetached:()Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126b64.   v8:= temp;
#L126b66.   if v8 == 0 then goto L126b9a;
#L126b6a.   v5:= 16  @length 16;
#L126b6e.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.clear|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.clear:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @type virtual;
#L126b74.   v3.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]  := v7 @type object;
#L126b78.   if v2 != 0 then goto L126b8e;
#L126b7c.   v9.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]  := v1 @type object;
#L126b80.   if v1 != 0 then goto L126b92;
#L126b84.   v8:= v9.[|java:util:concurrent:ArrayBlockingQueue$Itrs.this$0|]   @type object;
#L126b88.   v8.[|java:util:concurrent:ArrayBlockingQueue.itrs|]  := v7 @type object;
#L126b8c.   goto L126b32;
#L126b8e.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]  := v1 @type object;
#L126b92.   v3:= v1  @type object;
#L126b94.   v5:= v5 + -1;
#L126b98.   goto L126b1e;
#L126b9a.   v2:= v3  @type object;
#L126b9c.   goto L126b92;
#L126b9e.   v7:= v2  @type object;
#L126ba0.   goto L126b2e;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.elementDequeued|] ([|java:util:concurrent:ArrayBlockingQueue$Itrs|] v1 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.elementDequeued:()V|] @Access  {
      local temp ;
        v0;
      
#L126bb4.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue$Itrs.this$0|]   @type object;
#L126bb8.   v0:= v0.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L126bbc.   if v0 != 0 then goto L126bc8;
#L126bc0.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.queueIsEmpty|](v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.queueIsEmpty:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L126bc6.   return @void ;
#L126bc8.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue$Itrs.this$0|]   @type object;
#L126bcc.   v0:= v0.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L126bd0.   if v0 != 0 then goto L126bc6;
#L126bd4.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.takeIndexWrapped|](v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.takeIndexWrapped:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L126bda.   goto L126bc6;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.queueIsEmpty|] ([|java:util:concurrent:ArrayBlockingQueue$Itrs|] v4 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.queueIsEmpty:()V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L126bec.   v3:= 0  @length 4;
#L126bee.   v1:= v4.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]   @type object;
#L126bf2.   if v1 == 0 then goto L126c18;
#L126bf6.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.get|](v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @type virtual;
#L126bfc.   v0:= temp  @type object;
#L126bfe.   v0:= ([|java:util:concurrent:ArrayBlockingQueue$Itr|])v0;
#L126c02.   if v0 == 0 then goto L126c12;
#L126c06.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.clear|](v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.clear:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @type virtual;
#L126c0c.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.shutdown|](v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.shutdown:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126c12.   v1:= v1.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]   @type object;
#L126c16.   goto L126bf2;
#L126c18.   v4.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]  := v3 @type object;
#L126c1c.   v2:= v4.[|java:util:concurrent:ArrayBlockingQueue$Itrs.this$0|]   @type object;
#L126c20.   v2.[|java:util:concurrent:ArrayBlockingQueue.itrs|]  := v3 @type object;
#L126c24.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.register|] ([|java:util:concurrent:ArrayBlockingQueue$Itrs|] v2 @type (this), [|java:util:concurrent:ArrayBlockingQueue$Itr|] v3 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.register:(Ljava/util/concurrent/ArrayBlockingQueue$Itr;)V|] @Access  {
      local temp ;
        v0;
        v1;
      
#L126c38.   v0:= new [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|];
#L126c3c.   v1:= v2.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]   @type object;
#L126c40.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.<init>|](v0, v2, v3, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.<init>:(Ljava/util/concurrent/ArrayBlockingQueue$Itrs;Ljava/util/concurrent/ArrayBlockingQueue$Itr;Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @type direct;
#L126c46.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]  := v0 @type object;
#L126c4a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.removedAt|] ([|java:util:concurrent:ArrayBlockingQueue$Itrs|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.removedAt:(I)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L126c5c.   v5:= 0  @length 4;
#L126c5e.   v2:= 0  @length 4;
#L126c60.   v3:= v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]   @type object;
#L126c64.   if v3 == 0 then goto L126ca8;
#L126c68.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.get|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @type virtual;
#L126c6e.   v0:= temp  @type object;
#L126c70.   v0:= ([|java:util:concurrent:ArrayBlockingQueue$Itr|])v0;
#L126c74.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]   @type object;
#L126c78.   if v0 == 0 then goto L126c88;
#L126c7c.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.removedAt|](v0, v7) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.removedAt:(I)Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126c82.   v4:= temp;
#L126c84.   if v4 == 0 then goto L126ca4;
#L126c88.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.clear|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.clear:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @type virtual;
#L126c8e.   v3.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]  := v5 @type object;
#L126c92.   if v2 != 0 then goto L126c9e;
#L126c96.   v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]  := v1 @type object;
#L126c9a.   v3:= v1  @type object;
#L126c9c.   goto L126c64;
#L126c9e.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]  := v1 @type object;
#L126ca2.   goto L126c9a;
#L126ca4.   v2:= v3  @type object;
#L126ca6.   goto L126c9a;
#L126ca8.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]   @type object;
#L126cac.   if v4 != 0 then goto L126cb8;
#L126cb0.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.this$0|]   @type object;
#L126cb4.   v4.[|java:util:concurrent:ArrayBlockingQueue.itrs|]  := v5 @type object;
#L126cb8.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue$Itrs.takeIndexWrapped|] ([|java:util:concurrent:ArrayBlockingQueue$Itrs|] v6 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.takeIndexWrapped:()V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L126ccc.   v5:= 0  @length 4;
#L126cce.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.cycles|] ;
#L126cd2.   v4:= v4 + 1;
#L126cd6.   v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.cycles|]  := v4;
#L126cda.   v2:= 0  @length 4;
#L126cdc.   v3:= v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]   @type object;
#L126ce0.   if v3 == 0 then goto L126d24;
#L126ce4.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.get|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @type virtual;
#L126cea.   v0:= temp  @type object;
#L126cec.   v0:= ([|java:util:concurrent:ArrayBlockingQueue$Itr|])v0;
#L126cf0.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]   @type object;
#L126cf4.   if v0 == 0 then goto L126d04;
#L126cf8.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.takeIndexWrapped|](v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.takeIndexWrapped:()Z|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type virtual;
#L126cfe.   v4:= temp;
#L126d00.   if v4 == 0 then goto L126d20;
#L126d04.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.clear|](v3) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs$Node;.clear:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs$Node|] @type virtual;
#L126d0a.   v3.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]  := v5 @type object;
#L126d0e.   if v2 != 0 then goto L126d1a;
#L126d12.   v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]  := v1 @type object;
#L126d16.   v3:= v1  @type object;
#L126d18.   goto L126ce0;
#L126d1a.   v2.[|java:util:concurrent:ArrayBlockingQueue$Itrs$Node.next|]  := v1 @type object;
#L126d1e.   goto L126d16;
#L126d20.   v2:= v3  @type object;
#L126d22.   goto L126d16;
#L126d24.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.head|]   @type object;
#L126d28.   if v4 != 0 then goto L126d34;
#L126d2c.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue$Itrs.this$0|]   @type object;
#L126d30.   v4.[|java:util:concurrent:ArrayBlockingQueue.itrs|]  := v5 @type object;
#L126d34.   return @void ;

   }
record [|java:util:concurrent:BlockingQueue|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:Queue|] {
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingQueue.add|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingQueue.contains|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:concurrent:BlockingQueue.drainTo|] ([|java:util:Collection|] v0 @type (object)) @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.drainTo:(Ljava/util/Collection;)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:concurrent:BlockingQueue.drainTo|] ([|java:util:Collection|] v0 @type (object), [|int|] v1) @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.drainTo:(Ljava/util/Collection;I)I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingQueue.offer|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingQueue.offer|] ([|java:lang:Object|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingQueue.poll|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:BlockingQueue.put|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.put:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:concurrent:BlockingQueue.remainingCapacity|] () @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.remainingCapacity:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingQueue.remove|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingQueue.take|] () @owner [|java:util:concurrent:BlockingQueue|] @signature [|Ljava/util/concurrent/BlockingQueue;.take:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ArrayBlockingQueue|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractQueue|], [|java:util:concurrent:BlockingQueue|], [|java:io:Serializable|] {
      [|int|] [|java:util:concurrent:ArrayBlockingQueue.count|]    @AccessFlag ;
      [|java:lang:Object|][] [|java:util:concurrent:ArrayBlockingQueue.items|]    @AccessFlag FINAL;
      [|java:util:concurrent:ArrayBlockingQueue$Itrs|] [|java:util:concurrent:ArrayBlockingQueue.itrs|]    @AccessFlag TRANSIENT;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:ArrayBlockingQueue.lock|]    @AccessFlag FINAL;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:ArrayBlockingQueue.notEmpty|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:ArrayBlockingQueue.notFull|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:concurrent:ArrayBlockingQueue.putIndex|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ArrayBlockingQueue.takeIndex|]    @AccessFlag ;
   }
      global [|long|] @@[|java:util:concurrent:ArrayBlockingQueue.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue.<init>|] ([|java:util:concurrent:ArrayBlockingQueue|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L126d48.   v0:= 0  @length 4;
#L126d4a.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.<init>|](v1, v2, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.<init>:(IZ)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type direct;
#L126d50.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue.<init>|] ([|java:util:concurrent:ArrayBlockingQueue|] v1 @type (this), [|int|] v2, [|boolean|] v3) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.<init>:(IZ)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L126d64.   call temp:=  [|java:util:AbstractQueue.<init>|](v1) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L126d6a.   v0:= 0  @length 4;
#L126d6c.   v1.[|java:util:concurrent:ArrayBlockingQueue.itrs|]  := v0 @type object;
#L126d70.   if v2 > 0 then goto L126d80;
#L126d74.   v0:= new [|java:lang:IllegalArgumentException|];
#L126d78.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L126d7e.   throw v0;
#L126d80.   v0:= new [|java:lang:Object|][v2];
#L126d84.   v1.[|java:util:concurrent:ArrayBlockingQueue.items|]  := v0 @type object;
#L126d88.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L126d8c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0, v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:(Z)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L126d92.   v1.[|java:util:concurrent:ArrayBlockingQueue.lock|]  := v0 @type object;
#L126d96.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L126d9a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126da0.   v0:= temp  @type object;
#L126da2.   v1.[|java:util:concurrent:ArrayBlockingQueue.notEmpty|]  := v0 @type object;
#L126da6.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L126daa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126db0.   v0:= temp  @type object;
#L126db2.   v1.[|java:util:concurrent:ArrayBlockingQueue.notFull|]  := v0 @type object;
#L126db6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue.<init>|] ([|java:util:concurrent:ArrayBlockingQueue|] v7 @type (this), [|int|] v8, [|boolean|] v9, [|java:util:Collection|] v10 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.<init>:(IZLjava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L126dc8.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.<init>|](v7, v8, v9) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.<init>:(IZ)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type direct;
#L126dce.   v5:= v7.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L126dd2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126dd8.   v2:= 0  @length 4;
#L126dda.   call temp:=  [|java:util:Collection.iterator|](v10) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L126de0.   v4:= temp  @type object;
#L126de2.   v3:= v2;
#L126de4.   call temp:=  [|java:util:Iterator.hasNext|](v4) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126dea.   v6:= temp;
#L126dec.   if v6 == 0 then goto L126e26;
#L126df0.   call temp:=  [|java:util:Iterator.next|](v4) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L126df6.   v0:= temp  @type object;
#L126df8.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.checkNotNull|](v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type static;
#L126dfe.   v6:= v7.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L126e02.   v2:= v3 + 1;
#L126e06.   v6[v3]:= v0  @type object;
#L126e0a.   v3:= v2;
#L126e0c.   goto L126de4;
#L126e0e.   v1:= Exception  @type object;
#L126e10.   v6:= new [|java:lang:IllegalArgumentException|];
#L126e14.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L126e1a.   throw v6;
#L126e1c.   v6:= Exception  @type object;
#L126e1e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126e24.   throw v6;
#L126e26.   v7.[|java:util:concurrent:ArrayBlockingQueue.count|]  := v3;
#L126e2a.   if v3 != v8 then goto L126e3c;
#L126e2e.   v6:= 0  @length 4;
#L126e30.   v7.[|java:util:concurrent:ArrayBlockingQueue.putIndex|]  := v6;
#L126e34.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126e3a.   return @void ;
#L126e3c.   v6:= v3;
#L126e3e.   goto L126e30;
#L126e40.   v6:= Exception  @type object;
#L126e42.   v2:= v3;
#L126e44.   goto L126e1e;
#L126e46.   v1:= Exception  @type object;
#L126e48.   v2:= v3;
#L126e4a.   goto L126e10;
  catch  [|java:lang:ArrayIndexOutOfBoundsException|] @[L126dda..L126de0] goto L126e0e;
  catch  [|any|] @[L126dda..L126de0] goto L126e1c;
  catch  [|java:lang:ArrayIndexOutOfBoundsException|] @[L126de4..L126e02] goto L126e46;
  catch  [|any|] @[L126de4..L126e02] goto L126e40;
  catch  [|java:lang:ArrayIndexOutOfBoundsException|] @[L126e06..L126e0a] goto L126e0e;
  catch  [|any|] @[L126e06..L126e0a] goto L126e1c;
  catch  [|any|] @[L126e10..L126e1c] goto L126e1c;
  catch  [|any|] @[L126e26..L126e34] goto L126e40;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue.checkNotNull|] ([|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.checkNotNull:(Ljava/lang/Object;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L126e94.   if v1 != 0 then goto L126ea4;
#L126e98.   v0:= new [|java:lang:NullPointerException|];
#L126e9c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L126ea2.   throw v0;
#L126ea4.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ArrayBlockingQueue.dequeue|] ([|java:util:concurrent:ArrayBlockingQueue|] v4 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.dequeue:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L126eb8.   v0:= v4.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L126ebc.   v2:= v4.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L126ec0.   v1:= v0[v2]  @type object;
#L126ec4.   v2:= v4.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L126ec8.   v3:= 0  @length 4;
#L126eca.   v0[v2]:= v3  @type object;
#L126ece.   v2:= v4.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L126ed2.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v4, v2) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L126ed8.   v2:= temp;
#L126eda.   v4.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|]  := v2;
#L126ede.   v2:= v4.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L126ee2.   v2:= v2 + -1;
#L126ee6.   v4.[|java:util:concurrent:ArrayBlockingQueue.count|]  := v2;
#L126eea.   v2:= v4.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L126eee.   if v2 == 0 then goto L126efc;
#L126ef2.   v2:= v4.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L126ef6.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.elementDequeued|](v2) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.elementDequeued:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L126efc.   v2:= v4.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L126f00.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v2) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L126f06.   return v1  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue.enqueue|] ([|java:util:concurrent:ArrayBlockingQueue|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.enqueue:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L126f18.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L126f1c.   v1:= v2.[|java:util:concurrent:ArrayBlockingQueue.putIndex|] ;
#L126f20.   v0[v1]:= v3  @type object;
#L126f24.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue.putIndex|] ;
#L126f28.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v2, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L126f2e.   v0:= temp;
#L126f30.   v2.[|java:util:concurrent:ArrayBlockingQueue.putIndex|]  := v0;
#L126f34.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L126f38.   v0:= v0 + 1;
#L126f3c.   v2.[|java:util:concurrent:ArrayBlockingQueue.count|]  := v0;
#L126f40.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue.notEmpty|]   @type object;
#L126f44.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v0) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L126f4a.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue.add|] ([|java:util:concurrent:ArrayBlockingQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L126f5c.   call temp:=  [|java:util:AbstractQueue.add|](v1, v2) @signature [|Ljava/util/AbstractQueue;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:AbstractQueue|] @type super;
#L126f62.   v0:= temp;
#L126f64.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue.clear|] ([|java:util:concurrent:ArrayBlockingQueue|] v6 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L126f78.   v1:= v6.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L126f7c.   v3:= v6.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L126f80.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126f86.   v2:= v6.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L126f8a.   if v2 <= 0 then goto L126fe8;
#L126f8e.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.putIndex|] ;
#L126f92.   v0:= v6.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L126f96.   v5:= 0  @length 4;
#L126f98.   v1[v0]:= v5  @type object;
#L126f9c.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v6, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L126fa2.   v0:= temp;
#L126fa4.   if v0 != v4 then goto L126f96;
#L126fa8.   v6.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|]  := v4;
#L126fac.   v5:= 0  @length 4;
#L126fae.   v6.[|java:util:concurrent:ArrayBlockingQueue.count|]  := v5;
#L126fb2.   v5:= v6.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L126fb6.   if v5 == 0 then goto L126fc4;
#L126fba.   v5:= v6.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L126fbe.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.queueIsEmpty|](v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.queueIsEmpty:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L126fc4.   if v2 <= 0 then goto L126fe8;
#L126fc8.   v5:= v6.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L126fcc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.hasWaiters|](v3, v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.hasWaiters:(Ljava/util/concurrent/locks/Condition;)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126fd2.   v5:= temp;
#L126fd4.   if v5 == 0 then goto L126fe8;
#L126fd8.   v5:= v6.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L126fdc.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v5) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L126fe2.   v2:= v2 + -1;
#L126fe6.   goto L126fc4;
#L126fe8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126fee.   return @void ;
#L126ff0.   v5:= Exception  @type object;
#L126ff2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L126ff8.   throw v5;
  catch  [|any|] @[L126f86..L126fe2] goto L126ff0;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue.contains|] ([|java:util:concurrent:ArrayBlockingQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L127018.   v4:= 0  @length 4;
#L12701a.   if v7 != 0 then goto L127020;
#L12701e.   return v4;
#L127020.   v1:= v6.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L127024.   v2:= v6.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L127028.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12702e.   v5:= v6.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L127032.   if v5 <= 0 then goto L127064;
#L127036.   v3:= v6.[|java:util:concurrent:ArrayBlockingQueue.putIndex|] ;
#L12703a.   v0:= v6.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L12703e.   v5:= v1[v0]  @type object;
#L127042.   call temp:=  [|java:lang:Object.equals|](v7, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L127048.   v5:= temp;
#L12704a.   if v5 == 0 then goto L127058;
#L12704e.   v4:= 1  @length 4;
#L127050.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127056.   goto L12701e;
#L127058.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v6, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L12705e.   v0:= temp;
#L127060.   if v0 != v3 then goto L12703e;
#L127064.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12706a.   goto L12701e;
#L12706c.   v4:= Exception  @type object;
#L12706e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127074.   throw v4;
  catch  [|any|] @[L12702e..L127048] goto L12706c;
  catch  [|any|] @[L127058..L12705e] goto L12706c;

   }
    procedure [|int|] [|java:util:concurrent:ArrayBlockingQueue.dec|] ([|java:util:concurrent:ArrayBlockingQueue|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.dec:(I)I|] @Access FINAL {
      local temp ;
        v0;
      
#L12709c.   if v2 != 0 then goto L1270a6;
#L1270a0.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L1270a4.   v2:= v0.length;
#L1270a6.   v0:= v2 + -1;
#L1270aa.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ArrayBlockingQueue.drainTo|] ([|java:util:concurrent:ArrayBlockingQueue|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.drainTo:(Ljava/util/Collection;)I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1270bc.    v0:= nan;
#L1270c2.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.drainTo|](v1, v2, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.drainTo:(Ljava/util/Collection;I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1270c8.   v0:= temp;
#L1270ca.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ArrayBlockingQueue.drainTo|] ([|java:util:concurrent:ArrayBlockingQueue|] v8 @type (this), [|java:util:Collection|] v9 @type (object), [|int|] v10) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.drainTo:(Ljava/util/Collection;I)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1270dc.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.checkNotNull|](v9) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type static;
#L1270e2.   if v9 != v8 then goto L1270f2;
#L1270e6.   v6:= new [|java:lang:IllegalArgumentException|];
#L1270ea.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1270f0.   throw v6;
#L1270f2.   if v10 > 0 then goto L1270fa;
#L1270f6.   v3:= 0  @length 4;
#L1270f8.   return v3;
#L1270fa.   v1:= v8.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L1270fe.   v2:= v8.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L127102.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127108.   v6:= v8.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L12710c.   call temp:=  [|java:lang:Math.min|](v10, v6) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L127112.   v3:= temp;
#L127114.   v4:= v8.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L127118.   v0:= 0  @length 4;
#L12711a.   if v0 >= v3 then goto L1271aa;
#L12711e.   v5:= v1[v4]  @type object;
#L127122.   call temp:=  [|java:util:Collection.add|](v9, v5) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L127128.   v6:= 0  @length 4;
#L12712a.   v1[v4]:= v6  @type object;
#L12712e.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v8, v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L127134.   v4:= temp;
#L127136.   v0:= v0 + 1;
#L12713a.   goto L12711a;
#L12713c.   throw v6;
#L12713e.   v6:= Exception  @type object;
#L127140.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127146.   throw v6;
#L127148.   v6:= Exception  @type object;
#L12714a.   if v0 <= 0 then goto L12713c;
#L12714e.   v7:= v8.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L127152.   v7:= v7 - v0  @type int;
#L127154.   v8.[|java:util:concurrent:ArrayBlockingQueue.count|]  := v7;
#L127158.   v8.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|]  := v4;
#L12715c.   v7:= v8.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L127160.   if v7 == 0 then goto L127176;
#L127164.   v7:= v8.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L127168.   if v7 != 0 then goto L12719a;
#L12716c.   v7:= v8.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L127170.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.queueIsEmpty|](v7) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.queueIsEmpty:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L127176.   if v0 <= 0 then goto L12713c;
#L12717a.   v7:= v8.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L12717e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.hasWaiters|](v2, v7) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.hasWaiters:(Ljava/util/concurrent/locks/Condition;)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127184.   v7:= temp;
#L127186.   if v7 == 0 then goto L12713c;
#L12718a.   v7:= v8.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L12718e.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v7) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L127194.   v0:= v0 + -1;
#L127198.   goto L127176;
#L12719a.   if v0 <= v4 then goto L127176;
#L12719e.   v7:= v8.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L1271a2.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.takeIndexWrapped|](v7) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.takeIndexWrapped:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L1271a8.   goto L127176;
#L1271aa.   if v0 <= 0 then goto L12720a;
#L1271ae.   v6:= v8.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1271b2.   v6:= v6 - v0  @type int;
#L1271b4.   v8.[|java:util:concurrent:ArrayBlockingQueue.count|]  := v6;
#L1271b8.   v8.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|]  := v4;
#L1271bc.   v6:= v8.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L1271c0.   if v6 == 0 then goto L1271d6;
#L1271c4.   v6:= v8.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1271c8.   if v6 != 0 then goto L1271fa;
#L1271cc.   v6:= v8.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L1271d0.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.queueIsEmpty|](v6) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.queueIsEmpty:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L1271d6.   if v0 <= 0 then goto L12720a;
#L1271da.   v6:= v8.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L1271de.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.hasWaiters|](v2, v6) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.hasWaiters:(Ljava/util/concurrent/locks/Condition;)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1271e4.   v6:= temp;
#L1271e6.   if v6 == 0 then goto L12720a;
#L1271ea.   v6:= v8.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L1271ee.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v6) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1271f4.   v0:= v0 + -1;
#L1271f8.   goto L1271d6;
#L1271fa.   if v0 <= v4 then goto L1271d6;
#L1271fe.   v6:= v8.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L127202.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.takeIndexWrapped|](v6) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.takeIndexWrapped:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L127208.   goto L1271d6;
#L12720a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127210.   goto L1270f8;
  catch  [|any|] @[L127108..L127118] goto L12713e;
  catch  [|any|] @[L12711e..L127134] goto L127148;
  catch  [|any|] @[L12713c..L12713e] goto L12713e;
  catch  [|any|] @[L12714e..L127208] goto L12713e;

   }
    procedure [|int|] [|java:util:concurrent:ArrayBlockingQueue.inc|] ([|java:util:concurrent:ArrayBlockingQueue|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @Access FINAL {
      local temp ;
        v0;
      
#L12724c.   v2:= v2 + 1;
#L127250.   v0:= v1.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L127254.   v0:= v0.length;
#L127256.   if v2 != v0 then goto L12725c;
#L12725a.   v2:= 0  @length 4;
#L12725c.   return v2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ArrayBlockingQueue.itemAt|] ([|java:util:concurrent:ArrayBlockingQueue|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.itemAt:(I)Ljava/lang/Object;|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L127270.   v1:= v2.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L127274.   v0:= v1[v3]  @type object;
#L127278.   return v0  @type object;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ArrayBlockingQueue.iterator|] ([|java:util:concurrent:ArrayBlockingQueue|] v1 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12728c.   v0:= new [|java:util:concurrent:ArrayBlockingQueue$Itr|];
#L127290.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itr;.<init>:(Ljava/util/concurrent/ArrayBlockingQueue;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itr|] @type direct;
#L127296.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue.offer|] ([|java:util:concurrent:ArrayBlockingQueue|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1272a8.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.checkNotNull|](v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type static;
#L1272ae.   v0:= v3.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L1272b2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1272b8.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1272bc.   v2:= v3.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L1272c0.   v2:= v2.length;
#L1272c2.   if v1 != v2 then goto L1272d0;
#L1272c6.   v1:= 0  @length 4;
#L1272c8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1272ce.   return v1;
#L1272d0.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.enqueue|](v3, v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.enqueue:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type direct;
#L1272d6.   v1:= 1  @length 4;
#L1272d8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1272de.   goto L1272ce;
#L1272e0.   v1:= Exception  @type object;
#L1272e2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1272e8.   throw v1;
  catch  [|any|] @[L1272b8..L1272c2] goto L1272e0;
  catch  [|any|] @[L1272d0..L1272d6] goto L1272e0;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue.offer|] ([|java:util:concurrent:ArrayBlockingQueue|] v5 @type (this), [|java:lang:Object|] v6 @type (object), [|long|] v7, [|java:util:concurrent:TimeUnit|] v9 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L127310.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.checkNotNull|](v6) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type static;
#L127316.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v9, v7, v8) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L12731c.   v1:= temp  @type wide;
#L12731e.   v0:= v5.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L127322.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127328.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L12732c.   v4:= v5.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L127330.   v4:= v4.length;
#L127332.   if v3 != v4 then goto L12735a;
#L127336.   v3:= 0  @length wide16;
#L12733a.   v3:= cmp(v1,v3);
#L12733e.   if v3 > 0 then goto L12734c;
#L127342.   v3:= 0  @length 4;
#L127344.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12734a.   return v3;
#L12734c.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L127350.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v3, v1, v2) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L127356.   v1:= temp  @type wide;
#L127358.   goto L127328;
#L12735a.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.enqueue|](v5, v6) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.enqueue:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type direct;
#L127360.   v3:= 1  @length 4;
#L127362.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127368.   goto L12734a;
#L12736a.   v3:= Exception  @type object;
#L12736c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127372.   throw v3;
  catch  [|any|] @[L127328..L127332] goto L12736a;
  catch  [|any|] @[L12734c..L127360] goto L12736a;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ArrayBlockingQueue.peek|] ([|java:util:concurrent:ArrayBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.peek:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L127398.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L12739c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1273a2.   v1:= v2.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1273a6.   if v1 != 0 then goto L1273b4;
#L1273aa.   v1:= 0  @length 4;
#L1273ac.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1273b2.   return v1  @type object;
#L1273b4.   v1:= v2.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L1273b8.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.itemAt|](v2, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.itemAt:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1273be.   v1:= temp  @type object;
#L1273c0.   goto L1273ac;
#L1273c2.   v1:= Exception  @type object;
#L1273c4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1273ca.   throw v1;
  catch  [|any|] @[L1273a2..L1273a6] goto L1273c2;
  catch  [|any|] @[L1273b4..L1273be] goto L1273c2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ArrayBlockingQueue.poll|] ([|java:util:concurrent:ArrayBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.poll:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1273f0.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L1273f4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1273fa.   v1:= v2.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1273fe.   if v1 != 0 then goto L12740c;
#L127402.   v1:= 0  @length 4;
#L127404.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12740a.   return v1  @type object;
#L12740c.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.dequeue|](v2) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type direct;
#L127412.   v1:= temp  @type object;
#L127414.   goto L127404;
#L127416.   v1:= Exception  @type object;
#L127418.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12741e.   throw v1;
  catch  [|any|] @[L1273fa..L1273fe] goto L127416;
  catch  [|any|] @[L12740c..L127412] goto L127416;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ArrayBlockingQueue.poll|] ([|java:util:concurrent:ArrayBlockingQueue|] v5 @type (this), [|long|] v6, [|java:util:concurrent:TimeUnit|] v8 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L127444.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v8, v6, v7) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L12744a.   v1:= temp  @type wide;
#L12744c.   v0:= v5.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L127450.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127456.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L12745a.   if v3 != 0 then goto L127482;
#L12745e.   v3:= 0  @length wide16;
#L127462.   v3:= cmp(v1,v3);
#L127466.   if v3 > 0 then goto L127474;
#L12746a.   v3:= 0  @length 4;
#L12746c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127472.   return v3  @type object;
#L127474.   v3:= v5.[|java:util:concurrent:ArrayBlockingQueue.notEmpty|]   @type object;
#L127478.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v3, v1, v2) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L12747e.   v1:= temp  @type wide;
#L127480.   goto L127456;
#L127482.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.dequeue|](v5) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type direct;
#L127488.   v3:= temp  @type object;
#L12748a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127490.   goto L127472;
#L127492.   v3:= Exception  @type object;
#L127494.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12749a.   throw v3;
  catch  [|any|] @[L127456..L12745a] goto L127492;
  catch  [|any|] @[L127474..L127488] goto L127492;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue.put|] ([|java:util:concurrent:ArrayBlockingQueue|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.put:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1274c0.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.checkNotNull|](v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type static;
#L1274c6.   v0:= v3.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L1274ca.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1274d0.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1274d4.   v2:= v3.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L1274d8.   v2:= v2.length;
#L1274da.   if v1 != v2 then goto L1274f4;
#L1274de.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L1274e2.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v1) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1274e8.   goto L1274d0;
#L1274ea.   v1:= Exception  @type object;
#L1274ec.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1274f2.   throw v1;
#L1274f4.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.enqueue|](v3, v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.enqueue:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type direct;
#L1274fa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127500.   return @void ;
  catch  [|any|] @[L1274d0..L1274e8] goto L1274ea;
  catch  [|any|] @[L1274f4..L1274fa] goto L1274ea;

   }
    procedure [|int|] [|java:util:concurrent:ArrayBlockingQueue.remainingCapacity|] ([|java:util:concurrent:ArrayBlockingQueue|] v3 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.remainingCapacity:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L127528.   v0:= v3.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L12752c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127532.   v1:= v3.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L127536.   v1:= v1.length;
#L127538.   v2:= v3.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L12753c.   v1:= v1 - v2  @type int;
#L12753e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127544.   return v1;
#L127546.   v1:= Exception  @type object;
#L127548.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12754e.   throw v1;
  catch  [|any|] @[L127532..L12753c] goto L127546;

   }
    procedure [|boolean|] [|java:util:concurrent:ArrayBlockingQueue.remove|] ([|java:util:concurrent:ArrayBlockingQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12756c.   v4:= 0  @length 4;
#L12756e.   if v7 != 0 then goto L127574;
#L127572.   return v4;
#L127574.   v1:= v6.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L127578.   v2:= v6.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L12757c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127582.   v5:= v6.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L127586.   if v5 <= 0 then goto L1275be;
#L12758a.   v3:= v6.[|java:util:concurrent:ArrayBlockingQueue.putIndex|] ;
#L12758e.   v0:= v6.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L127592.   v5:= v1[v0]  @type object;
#L127596.   call temp:=  [|java:lang:Object.equals|](v7, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12759c.   v5:= temp;
#L12759e.   if v5 == 0 then goto L1275b2;
#L1275a2.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.removeAt|](v6, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.removeAt:(I)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1275a8.   v4:= 1  @length 4;
#L1275aa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1275b0.   goto L127572;
#L1275b2.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v6, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1275b8.   v0:= temp;
#L1275ba.   if v0 != v3 then goto L127592;
#L1275be.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1275c4.   goto L127572;
#L1275c6.   v4:= Exception  @type object;
#L1275c8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1275ce.   throw v4;
  catch  [|any|] @[L127582..L1275a8] goto L1275c6;
  catch  [|any|] @[L1275b2..L1275b8] goto L1275c6;

   }
    procedure [|void|] [|java:util:concurrent:ArrayBlockingQueue.removeAt|] ([|java:util:concurrent:ArrayBlockingQueue|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.removeAt:(I)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1275f4.   v5:= 0  @length 4;
#L1275f6.   v1:= v6.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L1275fa.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L1275fe.   if v7 != v4 then goto L127644;
#L127602.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L127606.   v1[v4]:= v5  @type object;
#L12760a.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L12760e.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v6, v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L127614.   v4:= temp;
#L127616.   v6.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|]  := v4;
#L12761a.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L12761e.   v4:= v4 + -1;
#L127622.   v6.[|java:util:concurrent:ArrayBlockingQueue.count|]  := v4;
#L127626.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L12762a.   if v4 == 0 then goto L127638;
#L12762e.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L127632.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.elementDequeued|](v4) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.elementDequeued:()V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L127638.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.notFull|]   @type object;
#L12763c.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v4) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L127642.   return @void ;
#L127644.   v3:= v6.[|java:util:concurrent:ArrayBlockingQueue.putIndex|] ;
#L127648.   v0:= v7;
#L12764a.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v6, v0) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L127650.   v2:= temp;
#L127652.   if v2 == v3 then goto L127662;
#L127656.   v4:= v1[v2]  @type object;
#L12765a.   v1[v0]:= v4  @type object;
#L12765e.   v0:= v2;
#L127660.   goto L12764a;
#L127662.   v1[v0]:= v5  @type object;
#L127666.   v6.[|java:util:concurrent:ArrayBlockingQueue.putIndex|]  := v0;
#L12766a.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L12766e.   v4:= v4 + -1;
#L127672.   v6.[|java:util:concurrent:ArrayBlockingQueue.count|]  := v4;
#L127676.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L12767a.   if v4 == 0 then goto L127638;
#L12767e.   v4:= v6.[|java:util:concurrent:ArrayBlockingQueue.itrs|]   @type object;
#L127682.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue$Itrs.removedAt|](v4, v7) @signature [|Ljava/util/concurrent/ArrayBlockingQueue$Itrs;.removedAt:(I)V|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue$Itrs|] @type virtual;
#L127688.   goto L127638;

   }
    procedure [|int|] [|java:util:concurrent:ArrayBlockingQueue.size|] ([|java:util:concurrent:ArrayBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12769c.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L1276a0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1276a6.   v1:= v2.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1276aa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1276b0.   return v1;
#L1276b2.   v1:= Exception  @type object;
#L1276b4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1276ba.   throw v1;
  catch  [|any|] @[L1276a6..L1276aa] goto L1276b2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ArrayBlockingQueue.take|] ([|java:util:concurrent:ArrayBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.take:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1276d8.   v0:= v2.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L1276dc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1276e2.   v1:= v2.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1276e6.   if v1 != 0 then goto L127700;
#L1276ea.   v1:= v2.[|java:util:concurrent:ArrayBlockingQueue.notEmpty|]   @type object;
#L1276ee.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v1) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1276f4.   goto L1276e2;
#L1276f6.   v1:= Exception  @type object;
#L1276f8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1276fe.   throw v1;
#L127700.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.dequeue|](v2) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type direct;
#L127706.   v1:= temp  @type object;
#L127708.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12770e.   return v1  @type object;
  catch  [|any|] @[L1276e2..L1276f4] goto L1276f6;
  catch  [|any|] @[L127700..L127706] goto L1276f6;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ArrayBlockingQueue.toArray|] ([|java:util:concurrent:ArrayBlockingQueue|] v7 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L127734.   v3:= v7.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L127738.   v5:= v7.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L12773c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127742.   v1:= v7.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L127746.   v0:= new [|java:lang:Object|][v1];
#L12774a.   v2:= v7.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L12774e.   v4:= 0  @length 4;
#L127750.   if v4 >= v1 then goto L12776a;
#L127754.   v6:= v3[v2]  @type object;
#L127758.   v0[v4]:= v6  @type object;
#L12775c.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v7, v2) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L127762.   v2:= temp;
#L127764.   v4:= v4 + 1;
#L127768.   goto L127750;
#L12776a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127770.   return v0  @type object;
#L127772.   v6:= Exception  @type object;
#L127774.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12777a.   throw v6;
  catch  [|any|] @[L127742..L127762] goto L127772;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ArrayBlockingQueue.toArray|] ([|java:util:concurrent:ArrayBlockingQueue|] v8 @type (this), [|java:lang:Object|][] v9 @type (object)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L127798.   v3:= v8.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L12779c.   v6:= v8.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L1277a0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1277a6.   v1:= v8.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L1277aa.   v5:= v9.length;
#L1277ac.   if v5 >= v1 then goto L1277d4;
#L1277b0.   call temp:=  [|java:lang:Object.getClass|](v9) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1277b6.   v7:= temp  @type object;
#L1277b8.   call temp:=  [|java:lang:Class.getComponentType|](v7) @signature [|Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1277be.   v7:= temp  @type object;
#L1277c0.   call temp:=  [|java:lang:reflect:Array.newInstance|](v7, v1) @signature [|Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L1277c6.   v7:= temp  @type object;
#L1277c8.   v7:= ([|java:lang:Object|][])v7;
#L1277cc.   v0:= v7  @type object;
#L1277ce.   v0:= ([|java:lang:Object|][])v0;
#L1277d2.   v9:= v0  @type object;
#L1277d4.   v2:= v8.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L1277d8.   v4:= 0  @length 4;
#L1277da.   if v4 >= v1 then goto L1277f4;
#L1277de.   v7:= v3[v2]  @type object;
#L1277e2.   v9[v4]:= v7  @type object;
#L1277e6.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v8, v2) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1277ec.   v2:= temp;
#L1277ee.   v4:= v4 + 1;
#L1277f2.   goto L1277da;
#L1277f4.   if v5 <= v1 then goto L1277fe;
#L1277f8.   v7:= 0  @length 4;
#L1277fa.   v9[v1]:= v7  @type object;
#L1277fe.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127804.   return v9  @type object;
#L127806.   v7:= Exception  @type object;
#L127808.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v6) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12780e.   throw v7;
  catch  [|any|] @[L1277a6..L1277fe] goto L127806;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:ArrayBlockingQueue.toString|] ([|java:util:concurrent:ArrayBlockingQueue|] v7 @type (this)) @owner [|java:util:concurrent:ArrayBlockingQueue|] @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12782c.   v3:= v7.[|java:util:concurrent:ArrayBlockingQueue.lock|]   @type object;
#L127830.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127836.   v2:= v7.[|java:util:concurrent:ArrayBlockingQueue.count|] ;
#L12783a.   if v2 != 0 then goto L12784a;
#L12783e.   v5:= "[]" @type (object, string);
#L127842.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L127848.   return v5  @type object;
#L12784a.   v4:= new [|java:lang:StringBuilder|];
#L12784e.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L127854.   v5:= 91  @length 16;
#L127858.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12785e.   v1:= v7.[|java:util:concurrent:ArrayBlockingQueue.takeIndex|] ;
#L127862.   v5:= v7.[|java:util:concurrent:ArrayBlockingQueue.items|]   @type object;
#L127866.   v0:= v5[v1]  @type object;
#L12786a.   if v0 != v7 then goto L127872;
#L12786e.   v0:= "(this Collection)" @type (object, string);
#L127872.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L127878.   v2:= v2 + -1;
#L12787c.   if v2 != 0 then goto L12789c;
#L127880.   v5:= 93  @length 16;
#L127884.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12788a.   v5:= temp  @type object;
#L12788c.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L127892.   v5:= temp  @type object;
#L127894.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L12789a.   goto L127848;
#L12789c.   v5:= 44  @length 16;
#L1278a0.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1278a6.   v5:= temp  @type object;
#L1278a8.   v6:= 32  @length 16;
#L1278ac.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1278b2.   call temp:=  [|java:util:concurrent:ArrayBlockingQueue.inc|](v7, v1) @signature [|Ljava/util/concurrent/ArrayBlockingQueue;.inc:(I)I|] @classDescriptor [|java:util:concurrent:ArrayBlockingQueue|] @type virtual;
#L1278b8.   v1:= temp;
#L1278ba.   goto L127862;
#L1278bc.   v5:= Exception  @type object;
#L1278be.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1278c4.   throw v5;
  catch  [|any|] @[L127836..L127842] goto L1278bc;
  catch  [|any|] @[L12784a..L127892] goto L1278bc;
  catch  [|any|] @[L1278a0..L1278b8] goto L1278bc;

   }
record [|java:util:concurrent:BlockingDeque|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:concurrent:BlockingQueue|], [|java:util:Deque|] {
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.add|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:BlockingDeque.addFirst|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.addFirst:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:BlockingDeque.addLast|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.addLast:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.contains|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.element|] () @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.element:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:BlockingDeque.iterator|] () @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.offer|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.offer|] ([|java:lang:Object|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.offerFirst|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.offerFirst:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.offerFirst|] ([|java:lang:Object|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.offerFirst:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.offerLast|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.offerLast:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.offerLast|] ([|java:lang:Object|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.offerLast:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.peek|] () @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.peek:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.poll|] () @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.poll:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.poll|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.pollFirst|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.pollFirst:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.pollLast|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.pollLast:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:BlockingDeque.push|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.push:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:BlockingDeque.put|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.put:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:BlockingDeque.putFirst|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.putFirst:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:BlockingDeque.putLast|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.putLast:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.remove|] () @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.remove:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.remove|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.removeFirstOccurrence|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.removeFirstOccurrence:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:BlockingDeque.removeLastOccurrence|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.removeLastOccurrence:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|int|] [|java:util:concurrent:BlockingDeque.size|] () @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.size:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.take|] () @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.take:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.takeFirst|] () @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.takeFirst:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:BlockingDeque.takeLast|] () @owner [|java:util:concurrent:BlockingDeque|] @signature [|Ljava/util/concurrent/BlockingDeque;.takeLast:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:BrokenBarrierException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
   }
      global [|long|] @@[|java:util:concurrent:BrokenBarrierException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:BrokenBarrierException.<init>|] ([|java:util:concurrent:BrokenBarrierException|] v0 @type (this)) @owner [|java:util:concurrent:BrokenBarrierException|] @signature [|Ljava/util/concurrent/BrokenBarrierException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L1278f4.   call temp:=  [|java:lang:Exception.<init>|](v0) @signature [|Ljava/lang/Exception;.<init>:()V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L1278fa.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:BrokenBarrierException.<init>|] ([|java:util:concurrent:BrokenBarrierException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:concurrent:BrokenBarrierException|] @signature [|Ljava/util/concurrent/BrokenBarrierException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L12790c.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L127912.   return @void ;

   }
record [|java:util:concurrent:Callable|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Callable.call|] () @owner [|java:util:concurrent:Callable|] @signature [|Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:CancellationException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:IllegalStateException|] {
   }
      global [|long|] @@[|java:util:concurrent:CancellationException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:CancellationException.<init>|] ([|java:util:concurrent:CancellationException|] v0 @type (this)) @owner [|java:util:concurrent:CancellationException|] @signature [|Ljava/util/concurrent/CancellationException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L127924.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L12792a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CancellationException.<init>|] ([|java:util:concurrent:CancellationException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:concurrent:CancellationException|] @signature [|Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
      
#L12793c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L127942.   return @void ;

   }
record [|java:util:concurrent:CompletionService|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:CompletionService.poll|] () @owner [|java:util:concurrent:CompletionService|] @signature [|Ljava/util/concurrent/CompletionService;.poll:()Ljava/util/concurrent/Future;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:CompletionService.poll|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|java:util:concurrent:CompletionService|] @signature [|Ljava/util/concurrent/CompletionService;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:CompletionService.submit|] ([|java:lang:Runnable|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:CompletionService|] @signature [|Ljava/util/concurrent/CompletionService;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:CompletionService.submit|] ([|java:util:concurrent:Callable|] v0 @type (object)) @owner [|java:util:concurrent:CompletionService|] @signature [|Ljava/util/concurrent/CompletionService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:CompletionService.take|] () @owner [|java:util:concurrent:CompletionService|] @signature [|Ljava/util/concurrent/CompletionService;.take:()Ljava/util/concurrent/Future;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ConcurrentHashMap$HashIterator|]  @type class @AccessFlag ABSTRACT  {
      [|java:util:concurrent:ConcurrentHashMap$HashEntry|][] [|java:util:concurrent:ConcurrentHashMap$HashIterator.currentTable|]    @AccessFlag ;
      [|java:util:concurrent:ConcurrentHashMap$HashEntry|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.lastReturned|]    @AccessFlag ;
      [|java:util:concurrent:ConcurrentHashMap$HashEntry|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.nextSegmentIndex|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.nextTableIndex|]    @AccessFlag ;
      [|java:util:concurrent:ConcurrentHashMap|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.<init>|] ([|java:util:concurrent:ConcurrentHashMap$HashIterator|] v1 @type (this), [|java:util:concurrent:ConcurrentHashMap|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L127954.   v1.[|java:util:concurrent:ConcurrentHashMap$HashIterator.this$0|]  := v2 @type object;
#L127958.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12795e.   v0:= v2.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L127962.   v0:= v0.length;
#L127964.   v0:= v0 + -1;
#L127968.   v1.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextSegmentIndex|]  := v0;
#L12796c.   v0:= -1  @length 4;
#L12796e.   v1.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextTableIndex|]  := v0;
#L127972.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.advance|](v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type virtual;
#L127978.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.advance|] ([|java:util:concurrent:ConcurrentHashMap$HashIterator|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.advance:()V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12798c.   v1:= v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextTableIndex|] ;
#L127990.   if v1 < 0 then goto L1279b6;
#L127994.   v1:= v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.currentTable|]   @type object;
#L127998.   v2:= v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextTableIndex|] ;
#L12799c.   v3:= v2 + -1;
#L1279a0.   v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextTableIndex|]  := v3;
#L1279a4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryAt|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1279aa.   v1:= temp  @type object;
#L1279ac.   v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|]  := v1 @type object;
#L1279b0.   if v1 == 0 then goto L12798c;
#L1279b4.   return @void ;
#L1279b6.   v1:= v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextSegmentIndex|] ;
#L1279ba.   if v1 < 0 then goto L1279b4;
#L1279be.   v1:= v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.this$0|]   @type object;
#L1279c2.   v1:= v1.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L1279c6.   v2:= v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextSegmentIndex|] ;
#L1279ca.   v3:= v2 + -1;
#L1279ce.   v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextSegmentIndex|]  := v3;
#L1279d2.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentAt|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentAt:([Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1279d8.   v0:= temp  @type object;
#L1279da.   if v0 == 0 then goto L12798c;
#L1279de.   v1:= v0.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L1279e2.   v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.currentTable|]  := v1 @type object;
#L1279e6.   if v1 == 0 then goto L12798c;
#L1279ea.   v1:= v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.currentTable|]   @type object;
#L1279ee.   v1:= v1.length;
#L1279f0.   v1:= v1 + -1;
#L1279f4.   v4.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextTableIndex|]  := v1;
#L1279f8.   goto L12798c;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.hasMoreElements|] ([|java:util:concurrent:ConcurrentHashMap$HashIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.hasMoreElements:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L127a0c.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|]   @type object;
#L127a10.   if v0 == 0 then goto L127a18;
#L127a14.   v0:= 1  @length 4;
#L127a16.   return v0;
#L127a18.   v0:= 0  @length 4;
#L127a1a.   goto L127a16;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.hasNext|] ([|java:util:concurrent:ConcurrentHashMap$HashIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.hasNext:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L127a2c.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|]   @type object;
#L127a30.   if v0 == 0 then goto L127a38;
#L127a34.   v0:= 1  @length 4;
#L127a36.   return v0;
#L127a38.   v0:= 0  @length 4;
#L127a3a.   goto L127a36;

   }
    procedure [|java:util:concurrent:ConcurrentHashMap$HashEntry|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|] ([|java:util:concurrent:ConcurrentHashMap$HashIterator|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.nextEntry:()Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L127a4c.   v0:= v2.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|]   @type object;
#L127a50.   if v0 != 0 then goto L127a60;
#L127a54.   v1:= new [|java:util:NoSuchElementException|];
#L127a58.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L127a5e.   throw v1;
#L127a60.   v2.[|java:util:concurrent:ConcurrentHashMap$HashIterator.lastReturned|]  := v0 @type object;
#L127a64.   v1:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L127a68.   v2.[|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|]  := v1 @type object;
#L127a6c.   if v1 != 0 then goto L127a76;
#L127a70.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.advance|](v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type virtual;
#L127a76.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$HashIterator.remove|] ([|java:util:concurrent:ConcurrentHashMap$HashIterator|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.remove:()V|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
        v1;
      
#L127a88.   v0:= v2.[|java:util:concurrent:ConcurrentHashMap$HashIterator.lastReturned|]   @type object;
#L127a8c.   if v0 != 0 then goto L127a9c;
#L127a90.   v0:= new [|java:lang:IllegalStateException|];
#L127a94.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L127a9a.   throw v0;
#L127a9c.   v0:= v2.[|java:util:concurrent:ConcurrentHashMap$HashIterator.this$0|]   @type object;
#L127aa0.   v1:= v2.[|java:util:concurrent:ConcurrentHashMap$HashIterator.lastReturned|]   @type object;
#L127aa4.   v1:= v1.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L127aa8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.remove|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127aae.   v0:= 0  @length 4;
#L127ab0.   v2.[|java:util:concurrent:ConcurrentHashMap$HashIterator.lastReturned|]  := v0 @type object;
#L127ab4.   return @void ;

   }
record [|java:util:concurrent:ConcurrentHashMap$EntryIterator|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentHashMap$HashIterator|], [|java:util:Iterator|] {
      [|java:util:concurrent:ConcurrentHashMap|] [|java:util:concurrent:ConcurrentHashMap$EntryIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$EntryIterator.<init>|] ([|java:util:concurrent:ConcurrentHashMap$EntryIterator|] v0 @type (this), [|java:util:concurrent:ConcurrentHashMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$EntryIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntryIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L127ac8.   v0.[|java:util:concurrent:ConcurrentHashMap$EntryIterator.this$0|]  := v1 @type object;
#L127acc.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type direct;
#L127ad2.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$EntryIterator.next|] ([|java:util:concurrent:ConcurrentHashMap$EntryIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$EntryIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntryIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L127ae4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$EntryIterator.next|](v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntryIterator;.next:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$EntryIterator|] @type virtual;
#L127aea.   v0:= temp  @type object;
#L127aec.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentHashMap$EntryIterator.next|] ([|java:util:concurrent:ConcurrentHashMap$EntryIterator|] v5 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$EntryIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntryIterator;.next:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L127b00.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|](v5) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.nextEntry:()Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type super;
#L127b06.   v0:= temp  @type object;
#L127b08.   v1:= new [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry|];
#L127b0c.   v2:= v5.[|java:util:concurrent:ConcurrentHashMap$EntryIterator.this$0|]   @type object;
#L127b10.   v3:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L127b14.   v4:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L127b18.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry.<init>|](v1, v2, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap$WriteThroughEntry;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry|] @type direct;
#L127b1e.   return v1  @type object;

   }
record [|java:util:concurrent:ConcurrentHashMap$EntrySet|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractSet|] {
      [|java:util:concurrent:ConcurrentHashMap|] [|java:util:concurrent:ConcurrentHashMap$EntrySet.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$EntrySet.<init>|] ([|java:util:concurrent:ConcurrentHashMap$EntrySet|] v0 @type (this), [|java:util:concurrent:ConcurrentHashMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntrySet;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L127b30.   v0.[|java:util:concurrent:ConcurrentHashMap$EntrySet.this$0|]  := v1 @type object;
#L127b34.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L127b3a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$EntrySet.clear|] ([|java:util:concurrent:ConcurrentHashMap$EntrySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntrySet;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L127b4c.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$EntrySet.this$0|]   @type object;
#L127b50.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.clear|](v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.clear:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127b56.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$EntrySet.contains|] ([|java:util:concurrent:ConcurrentHashMap$EntrySet|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntrySet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L127b68.   v2:= 0  @length 4;
#L127b6a.   v3:= instanceof @varname v6 @type [|java:util:Map$Entry|];
#L127b6e.   if v3 != 0 then goto L127b74;
#L127b72.   return v2;
#L127b74.   v0:= v6  @type object;
#L127b76.   v0:= ([|java:util:Map$Entry|])v0;
#L127b7a.   v3:= v5.[|java:util:concurrent:ConcurrentHashMap$EntrySet.this$0|]   @type object;
#L127b7e.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L127b84.   v4:= temp  @type object;
#L127b86.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.get|](v3, v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127b8c.   v1:= temp  @type object;
#L127b8e.   if v1 == 0 then goto L127b72;
#L127b92.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L127b98.   v3:= temp  @type object;
#L127b9a.   call temp:=  [|java:lang:Object.equals|](v1, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L127ba0.   v3:= temp;
#L127ba2.   if v3 == 0 then goto L127b72;
#L127ba6.   v2:= 1  @length 4;
#L127ba8.   goto L127b72;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$EntrySet.isEmpty|] ([|java:util:concurrent:ConcurrentHashMap$EntrySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntrySet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L127bbc.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$EntrySet.this$0|]   @type object;
#L127bc0.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.isEmpty|](v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127bc6.   v0:= temp;
#L127bc8.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentHashMap$EntrySet.iterator|] ([|java:util:concurrent:ConcurrentHashMap$EntrySet|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntrySet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L127bdc.   v0:= new [|java:util:concurrent:ConcurrentHashMap$EntryIterator|];
#L127be0.   v1:= v2.[|java:util:concurrent:ConcurrentHashMap$EntrySet.this$0|]   @type object;
#L127be4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$EntryIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntryIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$EntryIterator|] @type direct;
#L127bea.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$EntrySet.remove|] ([|java:util:concurrent:ConcurrentHashMap$EntrySet|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntrySet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L127bfc.   v1:= instanceof @varname v5 @type [|java:util:Map$Entry|];
#L127c00.   if v1 != 0 then goto L127c08;
#L127c04.   v1:= 0  @length 4;
#L127c06.   return v1;
#L127c08.   v0:= v5  @type object;
#L127c0a.   v0:= ([|java:util:Map$Entry|])v0;
#L127c0e.   v1:= v4.[|java:util:concurrent:ConcurrentHashMap$EntrySet.this$0|]   @type object;
#L127c12.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L127c18.   v2:= temp  @type object;
#L127c1a.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L127c20.   v3:= temp  @type object;
#L127c22.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.remove|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127c28.   v1:= temp;
#L127c2a.   goto L127c06;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentHashMap$EntrySet.size|] ([|java:util:concurrent:ConcurrentHashMap$EntrySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntrySet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L127c3c.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$EntrySet.this$0|]   @type object;
#L127c40.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.size|](v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.size:()I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127c46.   v0:= temp;
#L127c48.   return v0;

   }
record [|java:util:concurrent:ConcurrentHashMap$HashEntry|]  @type class @AccessFlag FINAL  {
      [|int|] [|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|]    @AccessFlag FINAL;
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]    @AccessFlag FINAL;
      [|java:util:concurrent:ConcurrentHashMap$HashEntry|] [|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]    @AccessFlag VOLATILE;
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]    @AccessFlag VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentHashMap$HashEntry.UNSAFE|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentHashMap$HashEntry.nextOffset|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$HashEntry.<clinit>|] () @owner [|java:util:concurrent:ConcurrentHashMap$HashEntry|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashEntry;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L127c5c.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L127c62.   v2:= temp  @type object;
#L127c64.   @@[|java:util:concurrent:ConcurrentHashMap$HashEntry.UNSAFE|] := v2  @type object;
#L127c68.   v1:= new [|java:util:concurrent:ConcurrentHashMap$HashEntry|];
#L127c6c.   v2:= @@[|java:util:concurrent:ConcurrentHashMap$HashEntry.UNSAFE|]   @type object;
#L127c70.   v3:= "next" @type (object, string);
#L127c74.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L127c7a.   v3:= temp  @type object;
#L127c7c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L127c82.   v2:= temp  @type wide;
#L127c84.   @@[|java:util:concurrent:ConcurrentHashMap$HashEntry.nextOffset|] := v2  @wide;
#L127c88.   return @void ;
#L127c8a.   v0:= Exception  @type object;
#L127c8c.   v2:= new [|java:lang:Error|];
#L127c90.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L127c96.   throw v2;
  catch  [|java:lang:Exception|] @[L127c5c..L127c88] goto L127c8a;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$HashEntry.<init>|] ([|java:util:concurrent:ConcurrentHashMap$HashEntry|] v0 @type (this), [|int|] v1, [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object), [|java:util:concurrent:ConcurrentHashMap$HashEntry|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$HashEntry|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashEntry;.<init>:(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L127cb8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L127cbe.   v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|]  := v1;
#L127cc2.   v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]  := v2 @type object;
#L127cc6.   v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]  := v3 @type object;
#L127cca.   v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]  := v4 @type object;
#L127cce.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$HashEntry.setNext|] ([|java:util:concurrent:ConcurrentHashMap$HashEntry|] v3 @type (this), [|java:util:concurrent:ConcurrentHashMap$HashEntry|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$HashEntry|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashEntry;.setNext:(Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L127ce0.   v0:= @@[|java:util:concurrent:ConcurrentHashMap$HashEntry.UNSAFE|]   @type object;
#L127ce4.   v1:= @@[|java:util:concurrent:ConcurrentHashMap$HashEntry.nextOffset|]   @wide;
#L127ce8.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L127cee.   return @void ;

   }
record [|java:util:concurrent:ConcurrentHashMap$KeyIterator|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentHashMap$HashIterator|], [|java:util:Iterator|], [|java:util:Enumeration|] {
      [|java:util:concurrent:ConcurrentHashMap|] [|java:util:concurrent:ConcurrentHashMap$KeyIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$KeyIterator.<init>|] ([|java:util:concurrent:ConcurrentHashMap$KeyIterator|] v0 @type (this), [|java:util:concurrent:ConcurrentHashMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$KeyIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeyIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L127d00.   v0.[|java:util:concurrent:ConcurrentHashMap$KeyIterator.this$0|]  := v1 @type object;
#L127d04.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type direct;
#L127d0a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$KeyIterator.next|] ([|java:util:concurrent:ConcurrentHashMap$KeyIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$KeyIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeyIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L127d1c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.nextEntry:()Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type super;
#L127d22.   v0:= temp  @type object;
#L127d24.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L127d28.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$KeyIterator.nextElement|] ([|java:util:concurrent:ConcurrentHashMap$KeyIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$KeyIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeyIterator;.nextElement:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L127d3c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.nextEntry:()Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type super;
#L127d42.   v0:= temp  @type object;
#L127d44.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L127d48.   return v0  @type object;

   }
record [|java:util:concurrent:ConcurrentHashMap$KeySet|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractSet|] {
      [|java:util:concurrent:ConcurrentHashMap|] [|java:util:concurrent:ConcurrentHashMap$KeySet.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$KeySet.<init>|] ([|java:util:concurrent:ConcurrentHashMap$KeySet|] v0 @type (this), [|java:util:concurrent:ConcurrentHashMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L127d5c.   v0.[|java:util:concurrent:ConcurrentHashMap$KeySet.this$0|]  := v1 @type object;
#L127d60.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L127d66.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$KeySet.clear|] ([|java:util:concurrent:ConcurrentHashMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeySet;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L127d78.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$KeySet.this$0|]   @type object;
#L127d7c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.clear|](v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.clear:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127d82.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$KeySet.contains|] ([|java:util:concurrent:ConcurrentHashMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeySet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L127d94.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$KeySet.this$0|]   @type object;
#L127d98.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.containsKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127d9e.   v0:= temp;
#L127da0.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$KeySet.isEmpty|] ([|java:util:concurrent:ConcurrentHashMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeySet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L127db4.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$KeySet.this$0|]   @type object;
#L127db8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.isEmpty|](v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127dbe.   v0:= temp;
#L127dc0.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentHashMap$KeySet.iterator|] ([|java:util:concurrent:ConcurrentHashMap$KeySet|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeySet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L127dd4.   v0:= new [|java:util:concurrent:ConcurrentHashMap$KeyIterator|];
#L127dd8.   v1:= v2.[|java:util:concurrent:ConcurrentHashMap$KeySet.this$0|]   @type object;
#L127ddc.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$KeyIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeyIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$KeyIterator|] @type direct;
#L127de2.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$KeySet.remove|] ([|java:util:concurrent:ConcurrentHashMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeySet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L127df4.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$KeySet.this$0|]   @type object;
#L127df8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.remove|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127dfe.   v0:= temp  @type object;
#L127e00.   if v0 == 0 then goto L127e08;
#L127e04.   v0:= 1  @length 4;
#L127e06.   return v0;
#L127e08.   v0:= 0  @length 4;
#L127e0a.   goto L127e06;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentHashMap$KeySet.size|] ([|java:util:concurrent:ConcurrentHashMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeySet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L127e1c.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$KeySet.this$0|]   @type object;
#L127e20.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.size|](v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.size:()I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L127e26.   v0:= temp;
#L127e28.   return v0;

   }
record [|java:util:concurrent:locks:Lock|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:util:concurrent:locks:Lock.lock|] () @owner [|java:util:concurrent:locks:Lock|] @signature [|Ljava/util/concurrent/locks/Lock;.lock:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:locks:Lock.lockInterruptibly|] () @owner [|java:util:concurrent:locks:Lock|] @signature [|Ljava/util/concurrent/locks/Lock;.lockInterruptibly:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:locks:Lock.newCondition|] () @owner [|java:util:concurrent:locks:Lock|] @signature [|Ljava/util/concurrent/locks/Lock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:locks:Lock.tryLock|] () @owner [|java:util:concurrent:locks:Lock|] @signature [|Ljava/util/concurrent/locks/Lock;.tryLock:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:locks:Lock.tryLock|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|java:util:concurrent:locks:Lock|] @signature [|Ljava/util/concurrent/locks/Lock;.tryLock:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:locks:Lock.unlock|] () @owner [|java:util:concurrent:locks:Lock|] @signature [|Ljava/util/concurrent/locks/Lock;.unlock:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:locks:ReentrantLock|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:locks:Lock|], [|java:io:Serializable|] {
      [|java:util:concurrent:locks:ReentrantLock$Sync|] [|java:util:concurrent:locks:ReentrantLock.sync|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:concurrent:locks:ReentrantLock.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock.<init>|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L127e3c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L127e42.   v0:= new [|java:util:concurrent:locks:ReentrantLock$NonfairSync|];
#L127e46.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$NonfairSync.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$NonfairSync|] @type direct;
#L127e4c.   v1.[|java:util:concurrent:locks:ReentrantLock.sync|]  := v0 @type object;
#L127e50.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock.<init>|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this), [|boolean|] v2) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:(Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L127e64.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L127e6a.   if v2 == 0 then goto L127e7e;
#L127e6e.   v0:= new [|java:util:concurrent:locks:ReentrantLock$FairSync|];
#L127e72.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$FairSync.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$FairSync;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$FairSync|] @type direct;
#L127e78.   v1.[|java:util:concurrent:locks:ReentrantLock.sync|]  := v0 @type object;
#L127e7c.   return @void ;
#L127e7e.   v0:= new [|java:util:concurrent:locks:ReentrantLock$NonfairSync|];
#L127e82.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$NonfairSync.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$NonfairSync;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$NonfairSync|] @type direct;
#L127e88.   goto L127e78;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantLock.getHoldCount|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.getHoldCount:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L127e9c.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L127ea0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getHoldCount|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getHoldCount:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L127ea6.   v0:= temp;
#L127ea8.   return v0;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:locks:ReentrantLock.getOwner|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.getOwner:()Ljava/lang/Thread;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L127ebc.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L127ec0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getOwner|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getOwner:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L127ec6.   v0:= temp  @type object;
#L127ec8.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantLock.getQueueLength|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.getQueueLength:()I|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L127edc.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L127ee0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getQueueLength|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getQueueLength:()I|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L127ee6.   v0:= temp;
#L127ee8.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:ReentrantLock.getQueuedThreads|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.getQueuedThreads:()Ljava/util/Collection;|] @Access PROTECTED {
      local temp ;
        v0;
      
#L127efc.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L127f00.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getQueuedThreads|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getQueuedThreads:()Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L127f06.   v0:= temp  @type object;
#L127f08.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:locks:ReentrantLock.getWaitQueueLength|] ([|java:util:concurrent:locks:ReentrantLock|] v2 @type (this), [|java:util:concurrent:locks:Condition|] v3 @type (object)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.getWaitQueueLength:(Ljava/util/concurrent/locks/Condition;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L127f1c.   if v3 != 0 then goto L127f2c;
#L127f20.   v0:= new [|java:lang:NullPointerException|];
#L127f24.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L127f2a.   throw v0;
#L127f2c.   v0:= instanceof @varname v3 @type [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|];
#L127f30.   if v0 != 0 then goto L127f44;
#L127f34.   v0:= new [|java:lang:IllegalArgumentException|];
#L127f38.   v1:= "not owner" @type (object, string);
#L127f3c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L127f42.   throw v0;
#L127f44.   v0:= v2.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L127f48.   v3:= ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|])v3;
#L127f4c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getWaitQueueLength|](v0, v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getWaitQueueLength:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)I|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L127f52.   v0:= temp;
#L127f54.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:ReentrantLock.getWaitingThreads|] ([|java:util:concurrent:locks:ReentrantLock|] v2 @type (this), [|java:util:concurrent:locks:Condition|] v3 @type (object)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.getWaitingThreads:(Ljava/util/concurrent/locks/Condition;)Ljava/util/Collection;|] @Access PROTECTED {
      local temp ;
        v0;
        v1;
      
#L127f68.   if v3 != 0 then goto L127f78;
#L127f6c.   v0:= new [|java:lang:NullPointerException|];
#L127f70.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L127f76.   throw v0;
#L127f78.   v0:= instanceof @varname v3 @type [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|];
#L127f7c.   if v0 != 0 then goto L127f90;
#L127f80.   v0:= new [|java:lang:IllegalArgumentException|];
#L127f84.   v1:= "not owner" @type (object, string);
#L127f88.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L127f8e.   throw v0;
#L127f90.   v0:= v2.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L127f94.   v3:= ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|])v3;
#L127f98.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getWaitingThreads|](v0, v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getWaitingThreads:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L127f9e.   v0:= temp  @type object;
#L127fa0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock.hasQueuedThread|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this), [|java:lang:Thread|] v2 @type (object)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.hasQueuedThread:(Ljava/lang/Thread;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L127fb4.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L127fb8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.isQueued|](v0, v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.isQueued:(Ljava/lang/Thread;)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L127fbe.   v0:= temp;
#L127fc0.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock.hasQueuedThreads|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.hasQueuedThreads:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L127fd4.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L127fd8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.hasQueuedThreads|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.hasQueuedThreads:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L127fde.   v0:= temp;
#L127fe0.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock.hasWaiters|] ([|java:util:concurrent:locks:ReentrantLock|] v2 @type (this), [|java:util:concurrent:locks:Condition|] v3 @type (object)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.hasWaiters:(Ljava/util/concurrent/locks/Condition;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L127ff4.   if v3 != 0 then goto L128004;
#L127ff8.   v0:= new [|java:lang:NullPointerException|];
#L127ffc.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L128002.   throw v0;
#L128004.   v0:= instanceof @varname v3 @type [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|];
#L128008.   if v0 != 0 then goto L12801c;
#L12800c.   v0:= new [|java:lang:IllegalArgumentException|];
#L128010.   v1:= "not owner" @type (object, string);
#L128014.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12801a.   throw v0;
#L12801c.   v0:= v2.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L128020.   v3:= ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|])v3;
#L128024.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.hasWaiters|](v0, v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.hasWaiters:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L12802a.   v0:= temp;
#L12802c.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock.isFair|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.isFair:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L128040.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L128044.   v0:= instanceof @varname v0 @type [|java:util:concurrent:locks:ReentrantLock$FairSync|];
#L128048.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock.isHeldByCurrentThread|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.isHeldByCurrentThread:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12805c.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L128060.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.isHeldExclusively|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.isHeldExclusively:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L128066.   v0:= temp;
#L128068.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock.isLocked|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.isLocked:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12807c.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L128080.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.isLocked|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.isLocked:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L128086.   v0:= temp;
#L128088.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock.lock|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12809c.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L1280a0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L1280a6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|] ([|java:util:concurrent:locks:ReentrantLock|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1280b8.   v0:= v2.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L1280bc.   v1:= 1  @length 4;
#L1280be.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.acquireInterruptibly|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.acquireInterruptibly:(I)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L1280c4.   return @void ;

   }
    procedure [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:locks:ReentrantLock.newCondition|] ([|java:util:concurrent:locks:ReentrantLock|] v1 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1280d8.   v0:= v1.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L1280dc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.newCondition:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L1280e2.   v0:= temp  @type object;
#L1280e4.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:locks:ReentrantLock.toString|] ([|java:util:concurrent:locks:ReentrantLock|] v4 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1280f8.   v1:= v4.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L1280fc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.getOwner|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.getOwner:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L128102.   v0:= temp  @type object;
#L128104.   v1:= new [|java:lang:StringBuilder|];
#L128108.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L12810e.   call temp:=  [|java:lang:Object.toString|](v4) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L128114.   v2:= temp  @type object;
#L128116.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12811c.   v2:= temp  @type object;
#L12811e.   if v0 != 0 then goto L128138;
#L128122.   v1:= "[Unlocked]" @type (object, string);
#L128126.   call temp:=  [|java:lang:StringBuilder.append|](v2, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12812c.   v1:= temp  @type object;
#L12812e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L128134.   v1:= temp  @type object;
#L128136.   return v1  @type object;
#L128138.   v1:= new [|java:lang:StringBuilder|];
#L12813c.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L128142.   v3:= "[Locked by thread " @type (object, string);
#L128146.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12814c.   v1:= temp  @type object;
#L12814e.   call temp:=  [|java:lang:Thread.getName|](v0) @signature [|Ljava/lang/Thread;.getName:()Ljava/lang/String;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L128154.   v3:= temp  @type object;
#L128156.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12815c.   v1:= temp  @type object;
#L12815e.   v3:= "]" @type (object, string);
#L128162.   call temp:=  [|java:lang:StringBuilder.append|](v1, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L128168.   v1:= temp  @type object;
#L12816a.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L128170.   v1:= temp  @type object;
#L128172.   goto L128126;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock.tryLock|] ([|java:util:concurrent:locks:ReentrantLock|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.tryLock:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L128184.   v0:= v2.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L128188.   v1:= 1  @length 4;
#L12818a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.nonfairTryAcquire|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.nonfairTryAcquire:(I)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L128190.   v0:= temp;
#L128192.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:ReentrantLock.tryLock|] ([|java:util:concurrent:locks:ReentrantLock|] v4 @type (this), [|long|] v5, [|java:util:concurrent:TimeUnit|] v7 @type (object)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.tryLock:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1281a4.   v0:= v4.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L1281a8.   v1:= 1  @length 4;
#L1281aa.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v7, v5, v6) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L1281b0.   v2:= temp  @type wide;
#L1281b2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.tryAcquireNanos|](v0, v1, v2, v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.tryAcquireNanos:(IJ)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L1281b8.   v0:= temp;
#L1281ba.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:ReentrantLock.unlock|] ([|java:util:concurrent:locks:ReentrantLock|] v2 @type (this)) @owner [|java:util:concurrent:locks:ReentrantLock|] @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1281cc.   v0:= v2.[|java:util:concurrent:locks:ReentrantLock.sync|]   @type object;
#L1281d0.   v1:= 1  @length 4;
#L1281d2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock$Sync.release|](v0, v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock$Sync;.release:(I)Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock$Sync|] @type virtual;
#L1281d8.   return @void ;

   }
record [|java:util:concurrent:ConcurrentHashMap$Segment|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:locks:ReentrantLock|], [|java:io:Serializable|] {
      [|int|] [|java:util:concurrent:ConcurrentHashMap$Segment.count|]    @AccessFlag TRANSIENT;
      [|float|] [|java:util:concurrent:ConcurrentHashMap$Segment.loadFactor|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:ConcurrentHashMap$Segment.modCount|]    @AccessFlag TRANSIENT;
      [|java:util:concurrent:ConcurrentHashMap$HashEntry|][] [|java:util:concurrent:ConcurrentHashMap$Segment.table|]    @AccessFlag VOLATILE_TRANSIENT;
      [|int|] [|java:util:concurrent:ConcurrentHashMap$Segment.threshold|]    @AccessFlag TRANSIENT;
   }
      global [|int|] @@[|java:util:concurrent:ConcurrentHashMap$Segment.MAX_SCAN_RETRIES|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentHashMap$Segment.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$Segment.<clinit>|] () @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L1281ec.   v0:= 1  @length 4;
#L1281ee.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L1281f4.   v1:= temp  @type object;
#L1281f6.   call temp:=  [|java:lang:Runtime.availableProcessors|](v1) @signature [|Ljava/lang/Runtime;.availableProcessors:()I|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L1281fc.   v1:= temp;
#L1281fe.   if v1 <= v0 then goto L128206;
#L128202.   v0:= 64  @length 16;
#L128206.   @@[|java:util:concurrent:ConcurrentHashMap$Segment.MAX_SCAN_RETRIES|] := v0;
#L12820a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$Segment.<init>|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v0 @type (this), [|float|] v1, [|int|] v2, [|java:util:concurrent:ConcurrentHashMap$HashEntry|][] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.<init>:(FI[Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12821c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L128222.   v0.[|java:util:concurrent:ConcurrentHashMap$Segment.loadFactor|]  := v1;
#L128226.   v0.[|java:util:concurrent:ConcurrentHashMap$Segment.threshold|]  := v2;
#L12822a.   v0.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]  := v3 @type object;
#L12822e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$Segment.rehash|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v23 @type (this), [|java:util:concurrent:ConcurrentHashMap$HashEntry|] v24 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.rehash:(Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
        v19;
        v20;
        v21;
        v22;
      
#L128240.   v0:= v23  @type object;
#L128244.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L128248.   v17:= v0  @type object;
#L12824c.   v0:= v17  @type object;
#L128250.   v0:= v0.length;
#L128252.   v16:= v0;
#L128256.   v12:= v16 ^< 1;
#L12825a.   v0:= (float)v12  @type i2f;
#L12825c.   v21:= v0;
#L128260.   v0:= v23  @type object;
#L128264.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$Segment.loadFactor|] ;
#L128268.   v22:= v0;
#L12826c.   v21:= v21 * v22  @type float;
#L128270.   v0:= v21;
#L128274.   v0:= (int)v0  @type f2i;
#L128276.   v21:= v0;
#L12827a.   v0:= v21;
#L12827e.   v1:= v23  @type object;
#L128282.   v1.[|java:util:concurrent:ConcurrentHashMap$Segment.threshold|]  := v0;
#L128286.   v13:= new [|java:util:concurrent:ConcurrentHashMap$HashEntry|][v12];
#L12828a.   v13:= ([|java:util:concurrent:ConcurrentHashMap$HashEntry|][])v13;
#L12828e.   v19:= v12 + -1;
#L128292.   v5:= 0  @length 4;
#L128294.   v0:= v16;
#L128298.   if v5 >= v0 then goto L128346;
#L12829c.   v3:= v17[v5]  @type object;
#L1282a0.   if v3 == 0 then goto L1282bc;
#L1282a4.   v14:= v3.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L1282a8.   v0:= v3.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L1282ac.   v21:= v0;
#L1282b0.   v6:= v21 ^& v19  @type int;
#L1282b4.   if v14 != 0 then goto L1282c2;
#L1282b8.   v13[v6]:= v3  @type object;
#L1282bc.   v5:= v5 + 1;
#L1282c0.   goto L128294;
#L1282c2.   v10:= v3  @type object;
#L1282c4.   v9:= v6;
#L1282c6.   v8:= v14  @type object;
#L1282c8.   if v8 == 0 then goto L1282e6;
#L1282cc.   v0:= v8.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L1282d0.   v21:= v0;
#L1282d4.   v7:= v21 ^& v19  @type int;
#L1282d8.   if v7 == v9 then goto L1282e0;
#L1282dc.   v9:= v7;
#L1282de.   v10:= v8  @type object;
#L1282e0.   v8:= v8.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L1282e4.   goto L1282c8;
#L1282e6.   v13[v9]:= v10  @type object;
#L1282ea.   v18:= v3  @type object;
#L1282ee.   v0:= v18  @type object;
#L1282f2.   if v0 == v10 then goto L1282bc;
#L1282f6.   v0:= v18  @type object;
#L1282fa.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L1282fe.   v20:= v0  @type object;
#L128302.   v0:= v18  @type object;
#L128306.   v4:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L12830a.   v7:= v4 ^& v19  @type int;
#L12830e.   v11:= v13[v7]  @type object;
#L128312.   v21:= new [|java:util:concurrent:ConcurrentHashMap$HashEntry|];
#L128316.   v0:= v18  @type object;
#L12831a.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L12831e.   v22:= v0  @type object;
#L128322.   v0:= v21  @type object;
#L128326.   v1:= v22  @type object;
#L12832a.   v2:= v20  @type object;
#L12832e.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashEntry.<init>|](v0, v4, v1, v2, v11) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashEntry;.<init>:(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashEntry|] @type direct;
#L128334.   v13[v7]:= v21  @type object;
#L128338.   v0:= v18  @type object;
#L12833c.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L128340.   v18:= v0  @type object;
#L128344.   goto L1282ee;
#L128346.   v0:= v24  @type object;
#L12834a.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L12834e.   v21:= v0;
#L128352.   v15:= v21 ^& v19  @type int;
#L128356.   v21:= v13[v15]  @type object;
#L12835a.   v0:= v24  @type object;
#L12835e.   v1:= v21  @type object;
#L128362.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashEntry.setNext|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashEntry;.setNext:(Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashEntry|] @type virtual;
#L128368.   v13[v15]:= v24  @type object;
#L12836c.   v0:= v23  @type object;
#L128370.   v0.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]  := v13 @type object;
#L128374.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$Segment.scanAndLock|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v5 @type (this), [|java:lang:Object|] v6 @type (object), [|int|] v7) @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.scanAndLock:(Ljava/lang/Object;I)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L128388.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryForHash|](v5, v7) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryForHash:(Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L12838e.   v2:= temp  @type object;
#L128390.   v0:= v2  @type object;
#L128392.   v3:= -1  @length 4;
#L128394.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.tryLock|](v5) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.tryLock:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L12839a.   v4:= temp;
#L12839c.   if v4 != 0 then goto L1283d4;
#L1283a0.   if v3 >= 0 then goto L1283c2;
#L1283a4.   if v0 == 0 then goto L1283b8;
#L1283a8.   v4:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L1283ac.   call temp:=  [|java:lang:Object.equals|](v6, v4) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1283b2.   v4:= temp;
#L1283b4.   if v4 == 0 then goto L1283bc;
#L1283b8.   v3:= 0  @length 4;
#L1283ba.   goto L128394;
#L1283bc.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L1283c0.   goto L128394;
#L1283c2.   v3:= v3 + 1;
#L1283c6.   v4:= @@[|java:util:concurrent:ConcurrentHashMap$Segment.MAX_SCAN_RETRIES|] ;
#L1283ca.   if v3 <= v4 then goto L1283d6;
#L1283ce.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.lock|](v5) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.lock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1283d4.   return @void ;
#L1283d6.   v4:= v3 ^& 1;
#L1283da.   if v4 != 0 then goto L128394;
#L1283de.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryForHash|](v5, v7) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryForHash:(Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1283e4.   v1:= temp  @type object;
#L1283e6.   if v1 == v2 then goto L128394;
#L1283ea.   v2:= v1  @type object;
#L1283ec.   v0:= v1  @type object;
#L1283ee.   v3:= -1  @length 4;
#L1283f0.   goto L128394;

   }
    procedure [|java:util:concurrent:ConcurrentHashMap$HashEntry|] [|java:util:concurrent:ConcurrentHashMap$Segment.scanAndLockForPut|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|int|] v8, [|java:lang:Object|] v9 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.scanAndLockForPut:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L128404.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryForHash|](v6, v8) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryForHash:(Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L12840a.   v2:= temp  @type object;
#L12840c.   v0:= v2  @type object;
#L12840e.   v3:= 0  @length 4;
#L128410.   v4:= -1  @length 4;
#L128412.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.tryLock|](v6) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.tryLock:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128418.   v5:= temp;
#L12841a.   if v5 != 0 then goto L128466;
#L12841e.   if v4 >= 0 then goto L128454;
#L128422.   if v0 != 0 then goto L12843a;
#L128426.   if v3 != 0 then goto L128436;
#L12842a.   v3:= new [|java:util:concurrent:ConcurrentHashMap$HashEntry|];
#L12842e.   v5:= 0  @length 4;
#L128430.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashEntry.<init>|](v3, v8, v7, v9, v5) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashEntry;.<init>:(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashEntry|] @type direct;
#L128436.   v4:= 0  @length 4;
#L128438.   goto L128412;
#L12843a.   v5:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L12843e.   call temp:=  [|java:lang:Object.equals|](v7, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L128444.   v5:= temp;
#L128446.   if v5 == 0 then goto L12844e;
#L12844a.   v4:= 0  @length 4;
#L12844c.   goto L128412;
#L12844e.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L128452.   goto L128412;
#L128454.   v4:= v4 + 1;
#L128458.   v5:= @@[|java:util:concurrent:ConcurrentHashMap$Segment.MAX_SCAN_RETRIES|] ;
#L12845c.   if v4 <= v5 then goto L128468;
#L128460.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.lock|](v6) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.lock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128466.   return v3  @type object;
#L128468.   v5:= v4 ^& 1;
#L12846c.   if v5 != 0 then goto L128412;
#L128470.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryForHash|](v6, v8) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryForHash:(Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L128476.   v1:= temp  @type object;
#L128478.   if v1 == v2 then goto L128412;
#L12847c.   v2:= v1  @type object;
#L12847e.   v0:= v1  @type object;
#L128480.   v4:= -1  @length 4;
#L128482.   goto L128412;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$Segment.clear|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.clear:()V|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
      
#L128494.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.lock|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.lock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L12849a.   v1:= v3.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L12849e.   v0:= 0  @length 4;
#L1284a0.   v2:= v1.length;
#L1284a2.   if v0 >= v2 then goto L1284b4;
#L1284a6.   v2:= 0  @length 4;
#L1284a8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.setEntryAt|](v1, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.setEntryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;ILjava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1284ae.   v0:= v0 + 1;
#L1284b2.   goto L1284a0;
#L1284b4.   v2:= v3.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L1284b8.   v2:= v2 + 1;
#L1284bc.   v3.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|]  := v2;
#L1284c0.   v2:= 0  @length 4;
#L1284c2.   v3.[|java:util:concurrent:ConcurrentHashMap$Segment.count|]  := v2;
#L1284c6.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1284cc.   return @void ;
#L1284ce.   v2:= Exception  @type object;
#L1284d0.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1284d6.   throw v2;
  catch  [|any|] @[L12849a..L1284c6] goto L1284ce;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$Segment.put|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v11 @type (this), [|java:lang:Object|] v12 @type (object), [|int|] v13, [|java:lang:Object|] v14 @type (object), [|boolean|] v15) @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.put:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L1284f4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.tryLock|](v11) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.tryLock:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1284fa.   v9:= temp;
#L1284fc.   if v9 == 0 then goto L12855a;
#L128500.   v5:= 0  @length 4;
#L128502.   v8:= v11.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L128506.   v9:= v8.length;
#L128508.   v9:= v9 + -1;
#L12850c.   v3:= v9 ^& v13  @type int;
#L128510.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryAt|](v8, v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L128516.   v2:= temp  @type object;
#L128518.   v1:= v2  @type object;
#L12851a.   if v1 == 0 then goto L12856a;
#L12851e.   v4:= v1.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L128522.   if v4 == v12 then goto L12853a;
#L128526.   v9:= v1.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L12852a.   if v9 != v13 then goto L128564;
#L12852e.   call temp:=  [|java:lang:Object.equals|](v12, v4) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L128534.   v9:= temp;
#L128536.   if v9 == 0 then goto L128564;
#L12853a.   v7:= v1.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L12853e.   if v15 != 0 then goto L128552;
#L128542.   v1.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]  := v14 @type object;
#L128546.   v9:= v11.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L12854a.   v9:= v9 + 1;
#L12854e.   v11.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|]  := v9;
#L128552.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v11) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128558.   return v7  @type object;
#L12855a.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.scanAndLockForPut|](v11, v12, v13, v14) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.scanAndLockForPut:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type direct;
#L128560.   v5:= temp  @type object;
#L128562.   goto L128502;
#L128564.   v1:= v1.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L128568.   goto L12851a;
#L12856a.   if v5 == 0 then goto L1285a8;
#L12856e.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashEntry.setNext|](v5, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashEntry;.setNext:(Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashEntry|] @type virtual;
#L128574.   v9:= v11.[|java:util:concurrent:ConcurrentHashMap$Segment.count|] ;
#L128578.   v0:= v9 + 1;
#L12857c.   v9:= v11.[|java:util:concurrent:ConcurrentHashMap$Segment.threshold|] ;
#L128580.   if v0 <= v9 then goto L1285b6;
#L128584.   v9:= v8.length;
#L128586.   v10:= 1073741824  @length high16;
#L12858a.   if v9 >= v10 then goto L1285b6;
#L12858e.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.rehash|](v11, v5) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.rehash:(Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type direct;
#L128594.   v9:= v11.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L128598.   v9:= v9 + 1;
#L12859c.   v11.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|]  := v9;
#L1285a0.   v11.[|java:util:concurrent:ConcurrentHashMap$Segment.count|]  := v0;
#L1285a4.   v7:= 0  @length 4;
#L1285a6.   goto L128552;
#L1285a8.   v6:= new [|java:util:concurrent:ConcurrentHashMap$HashEntry|];
#L1285ac.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashEntry.<init>|](v6, v13, v12, v14, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashEntry;.<init>:(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashEntry|] @type direct;
#L1285b2.   v5:= v6  @type object;
#L1285b4.   goto L128574;
#L1285b6.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.setEntryAt|](v8, v3, v5) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.setEntryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;ILjava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1285bc.   goto L128594;
#L1285be.   v9:= Exception  @type object;
#L1285c0.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v11) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1285c6.   throw v9;
  catch  [|any|] @[L128502..L128552] goto L1285be;
  catch  [|any|] @[L128564..L1285bc] goto L1285be;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$Segment.remove|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v9 @type (this), [|java:lang:Object|] v10 @type (object), [|int|] v11, [|java:lang:Object|] v12 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.remove:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1285ec.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.tryLock|](v9) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.tryLock:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1285f2.   v8:= temp;
#L1285f4.   if v8 != 0 then goto L1285fe;
#L1285f8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.scanAndLock|](v9, v10, v11) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.scanAndLock:(Ljava/lang/Object;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type direct;
#L1285fe.   v4:= 0  @length 4;
#L128600.   v6:= v9.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L128604.   v8:= v6.length;
#L128606.   v8:= v8 + -1;
#L12860a.   v1:= v8 ^& v11  @type int;
#L12860e.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryAt|](v6, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L128614.   v0:= temp  @type object;
#L128616.   v5:= 0  @length 4;
#L128618.   if v0 == 0 then goto L128678;
#L12861c.   v3:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L128620.   v2:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L128624.   if v2 == v10 then goto L12863c;
#L128628.   v8:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L12862c.   if v8 != v11 then goto L128692;
#L128630.   call temp:=  [|java:lang:Object.equals|](v10, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L128636.   v8:= temp;
#L128638.   if v8 == 0 then goto L128692;
#L12863c.   v7:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L128640.   if v12 == 0 then goto L128654;
#L128644.   if v12 == v7 then goto L128654;
#L128648.   call temp:=  [|java:lang:Object.equals|](v12, v7) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12864e.   v8:= temp;
#L128650.   if v8 == 0 then goto L128678;
#L128654.   if v5 != 0 then goto L128680;
#L128658.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.setEntryAt|](v6, v1, v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.setEntryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;ILjava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L12865e.   v8:= v9.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L128662.   v8:= v8 + 1;
#L128666.   v9.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|]  := v8;
#L12866a.   v8:= v9.[|java:util:concurrent:ConcurrentHashMap$Segment.count|] ;
#L12866e.   v8:= v8 + -1;
#L128672.   v9.[|java:util:concurrent:ConcurrentHashMap$Segment.count|]  := v8;
#L128676.   v4:= v7  @type object;
#L128678.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v9) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L12867e.   return v4  @type object;
#L128680.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashEntry.setNext|](v5, v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashEntry;.setNext:(Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashEntry|] @type virtual;
#L128686.   goto L12865e;
#L128688.   v8:= Exception  @type object;
#L12868a.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v9) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128690.   throw v8;
#L128692.   v5:= v0  @type object;
#L128694.   v0:= v3  @type object;
#L128696.   goto L128618;
  catch  [|any|] @[L128600..L128676] goto L128688;
  catch  [|any|] @[L128680..L128686] goto L128688;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$Segment.replace|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v4 @type (this), [|java:lang:Object|] v5 @type (object), [|int|] v6, [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.replace:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1286bc.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.tryLock|](v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.tryLock:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1286c2.   v3:= temp;
#L1286c4.   if v3 != 0 then goto L1286ce;
#L1286c8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.scanAndLock|](v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.scanAndLock:(Ljava/lang/Object;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type direct;
#L1286ce.   v2:= 0  @length 4;
#L1286d0.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryForHash|](v4, v6) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryForHash:(Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1286d6.   v0:= temp  @type object;
#L1286d8.   if v0 == 0 then goto L12870c;
#L1286dc.   v1:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L1286e0.   if v1 == v5 then goto L1286f8;
#L1286e4.   v3:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L1286e8.   if v3 != v6 then goto L128714;
#L1286ec.   call temp:=  [|java:lang:Object.equals|](v5, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1286f2.   v3:= temp;
#L1286f4.   if v3 == 0 then goto L128714;
#L1286f8.   v2:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L1286fc.   v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]  := v7 @type object;
#L128700.   v3:= v4.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L128704.   v3:= v3 + 1;
#L128708.   v4.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|]  := v3;
#L12870c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128712.   return v2  @type object;
#L128714.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L128718.   goto L1286d8;
#L12871a.   v3:= Exception  @type object;
#L12871c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128722.   throw v3;
  catch  [|any|] @[L1286d0..L12870c] goto L12871a;
  catch  [|any|] @[L128714..L128718] goto L12871a;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$Segment.replace|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v4 @type (this), [|java:lang:Object|] v5 @type (object), [|int|] v6, [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$Segment|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.replace:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L128748.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.tryLock|](v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.tryLock:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L12874e.   v3:= temp;
#L128750.   if v3 != 0 then goto L12875a;
#L128754.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.scanAndLock|](v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.scanAndLock:(Ljava/lang/Object;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type direct;
#L12875a.   v2:= 0  @length 4;
#L12875c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryForHash|](v4, v6) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryForHash:(Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L128762.   v0:= temp  @type object;
#L128764.   if v0 == 0 then goto L1287a6;
#L128768.   v1:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L12876c.   if v1 == v5 then goto L128784;
#L128770.   v3:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L128774.   if v3 != v6 then goto L1287ae;
#L128778.   call temp:=  [|java:lang:Object.equals|](v5, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12877e.   v3:= temp;
#L128780.   if v3 == 0 then goto L1287ae;
#L128784.   v3:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L128788.   call temp:=  [|java:lang:Object.equals|](v7, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12878e.   v3:= temp;
#L128790.   if v3 == 0 then goto L1287a6;
#L128794.   v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]  := v8 @type object;
#L128798.   v3:= v4.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L12879c.   v3:= v3 + 1;
#L1287a0.   v4.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|]  := v3;
#L1287a4.   v2:= 1  @length 4;
#L1287a6.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1287ac.   return v2;
#L1287ae.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L1287b2.   goto L128764;
#L1287b4.   v3:= Exception  @type object;
#L1287b6.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1287bc.   throw v3;
  catch  [|any|] @[L12875c..L1287a4] goto L1287b4;
  catch  [|any|] @[L1287ae..L1287b2] goto L1287b4;

   }
record [|java:util:concurrent:ConcurrentHashMap$ValueIterator|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentHashMap$HashIterator|], [|java:util:Iterator|], [|java:util:Enumeration|] {
      [|java:util:concurrent:ConcurrentHashMap|] [|java:util:concurrent:ConcurrentHashMap$ValueIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$ValueIterator.<init>|] ([|java:util:concurrent:ConcurrentHashMap$ValueIterator|] v0 @type (this), [|java:util:concurrent:ConcurrentHashMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$ValueIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$ValueIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1287e4.   v0.[|java:util:concurrent:ConcurrentHashMap$ValueIterator.this$0|]  := v1 @type object;
#L1287e8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type direct;
#L1287ee.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$ValueIterator.next|] ([|java:util:concurrent:ConcurrentHashMap$ValueIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$ValueIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$ValueIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L128800.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.nextEntry:()Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type super;
#L128806.   v0:= temp  @type object;
#L128808.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L12880c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$ValueIterator.nextElement|] ([|java:util:concurrent:ConcurrentHashMap$ValueIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$ValueIterator|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$ValueIterator;.nextElement:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L128820.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$HashIterator.nextEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$HashIterator;.nextEntry:()Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$HashIterator|] @type super;
#L128826.   v0:= temp  @type object;
#L128828.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L12882c.   return v0  @type object;

   }
record [|java:util:concurrent:ConcurrentHashMap$Values|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractCollection|] {
      [|java:util:concurrent:ConcurrentHashMap|] [|java:util:concurrent:ConcurrentHashMap$Values.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$Values.<init>|] ([|java:util:concurrent:ConcurrentHashMap$Values|] v0 @type (this), [|java:util:concurrent:ConcurrentHashMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Values;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L128840.   v0.[|java:util:concurrent:ConcurrentHashMap$Values.this$0|]  := v1 @type object;
#L128844.   call temp:=  [|java:util:AbstractCollection.<init>|](v0) @signature [|Ljava/util/AbstractCollection;.<init>:()V|] @classDescriptor [|java:util:AbstractCollection|] @type direct;
#L12884a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$Values.clear|] ([|java:util:concurrent:ConcurrentHashMap$Values|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Values;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12885c.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$Values.this$0|]   @type object;
#L128860.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.clear|](v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.clear:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L128866.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$Values.contains|] ([|java:util:concurrent:ConcurrentHashMap$Values|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Values;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L128878.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$Values.this$0|]   @type object;
#L12887c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.containsValue|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.containsValue:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L128882.   v0:= temp;
#L128884.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap$Values.isEmpty|] ([|java:util:concurrent:ConcurrentHashMap$Values|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Values;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L128898.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$Values.this$0|]   @type object;
#L12889c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.isEmpty|](v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L1288a2.   v0:= temp;
#L1288a4.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentHashMap$Values.iterator|] ([|java:util:concurrent:ConcurrentHashMap$Values|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Values;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1288b8.   v0:= new [|java:util:concurrent:ConcurrentHashMap$ValueIterator|];
#L1288bc.   v1:= v2.[|java:util:concurrent:ConcurrentHashMap$Values.this$0|]   @type object;
#L1288c0.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$ValueIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$ValueIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$ValueIterator|] @type direct;
#L1288c6.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentHashMap$Values.size|] ([|java:util:concurrent:ConcurrentHashMap$Values|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$Values;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1288d8.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap$Values.this$0|]   @type object;
#L1288dc.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.size|](v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.size:()I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L1288e2.   v0:= temp;
#L1288e4.   return v0;

   }
record [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractMap$SimpleEntry|] {
      [|java:util:concurrent:ConcurrentHashMap|] [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry.<init>|] ([|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry|] v0 @type (this), [|java:util:concurrent:ConcurrentHashMap|] v1 @type (object), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$WriteThroughEntry;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;Ljava/lang/Object;Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1288f8.   v0.[|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry.this$0|]  := v1 @type object;
#L1288fc.   call temp:=  [|java:util:AbstractMap$SimpleEntry.<init>|](v0, v2, v3) @signature [|Ljava/util/AbstractMap$SimpleEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:AbstractMap$SimpleEntry|] @type direct;
#L128902.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry.setValue|] ([|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry|] @signature [|Ljava/util/concurrent/ConcurrentHashMap$WriteThroughEntry;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L128914.   if v4 != 0 then goto L128924;
#L128918.   v1:= new [|java:lang:NullPointerException|];
#L12891c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L128922.   throw v1;
#L128924.   call temp:=  [|java:util:AbstractMap$SimpleEntry.setValue|](v3, v4) @signature [|Ljava/util/AbstractMap$SimpleEntry;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractMap$SimpleEntry|] @type super;
#L12892a.   v0:= temp  @type object;
#L12892c.   v1:= v3.[|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry.this$0|]   @type object;
#L128930.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry.getKey|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$WriteThroughEntry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$WriteThroughEntry|] @type virtual;
#L128936.   v2:= temp  @type object;
#L128938.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.put|](v1, v2, v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L12893e.   return v0  @type object;

   }
record [|java:util:concurrent:ConcurrentMap|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:Map|] {
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentMap.putIfAbsent|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentMap|] @signature [|Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentMap.remove|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentMap|] @signature [|Ljava/util/concurrent/ConcurrentMap;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentMap.replace|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentMap|] @signature [|Ljava/util/concurrent/ConcurrentMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentMap.replace|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentMap|] @signature [|Ljava/util/concurrent/ConcurrentMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ConcurrentHashMap|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractMap|], [|java:util:concurrent:ConcurrentMap|], [|java:io:Serializable|] {
      [|java:util:Set|] [|java:util:concurrent:ConcurrentHashMap.entrySet|]    @AccessFlag TRANSIENT;
      [|java:util:Set|] [|java:util:concurrent:ConcurrentHashMap.keySet|]    @AccessFlag TRANSIENT;
      [|int|] [|java:util:concurrent:ConcurrentHashMap.segmentMask|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:ConcurrentHashMap.segmentShift|]    @AccessFlag FINAL;
      [|java:util:concurrent:ConcurrentHashMap$Segment|][] [|java:util:concurrent:ConcurrentHashMap.segments|]    @AccessFlag FINAL;
      [|java:util:Collection|] [|java:util:concurrent:ConcurrentHashMap.values|]    @AccessFlag TRANSIENT;
   }
      global [|int|] @@[|java:util:concurrent:ConcurrentHashMap.DEFAULT_CONCURRENCY_LEVEL|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentHashMap.DEFAULT_INITIAL_CAPACITY|]    @AccessFlag STATIC_FINAL;
      global [|float|] @@[|java:util:concurrent:ConcurrentHashMap.DEFAULT_LOAD_FACTOR|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentHashMap.MAXIMUM_CAPACITY|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentHashMap.MAX_SEGMENTS|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentHashMap.MIN_SEGMENT_TABLE_CAPACITY|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentHashMap.RETRIES_BEFORE_LOCK|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentHashMap.SBASE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentHashMap.SSHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentHashMap.TBASE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentHashMap.TSHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentHashMap.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.<clinit>|] () @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L128950.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L128956.   v5:= temp  @type object;
#L128958.   @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|] := v5  @type object;
#L12895c.   v3:= new [|java:util:concurrent:ConcurrentHashMap$HashEntry|][];
#L128960.   v1:= new [|java:util:concurrent:ConcurrentHashMap$Segment|][];
#L128964.   v5:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128968.   call temp:=  [|sun:misc:Unsafe.arrayBaseOffset|](v5, v3) @signature [|Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12896e.   v5:= temp;
#L128970.   v5:= (long)v5  @type i2l;
#L128972.   @@[|java:util:concurrent:ConcurrentHashMap.TBASE|] := v5  @wide;
#L128976.   v5:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L12897a.   call temp:=  [|sun:misc:Unsafe.arrayBaseOffset|](v5, v1) @signature [|Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128980.   v5:= temp;
#L128982.   v5:= (long)v5  @type i2l;
#L128984.   @@[|java:util:concurrent:ConcurrentHashMap.SBASE|] := v5  @wide;
#L128988.   v5:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L12898c.   call temp:=  [|sun:misc:Unsafe.arrayIndexScale|](v5, v3) @signature [|Lsun/misc/Unsafe;.arrayIndexScale:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128992.   v4:= temp;
#L128994.   v5:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128998.   call temp:=  [|sun:misc:Unsafe.arrayIndexScale|](v5, v1) @signature [|Lsun/misc/Unsafe;.arrayIndexScale:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12899e.   v2:= temp;
#L1289a0.   v5:= v2 + -1;
#L1289a4.   v5:= v5 ^& v2  @type int;
#L1289a6.   if v5 != 0 then goto L1289b4;
#L1289aa.   v5:= v4 + -1;
#L1289ae.   v5:= v5 ^& v4  @type int;
#L1289b0.   if v5 == 0 then goto L1289d2;
#L1289b4.   v5:= new [|java:lang:Error|];
#L1289b8.   v6:= "data type scale not a power of two" @type (object, string);
#L1289bc.   call temp:=  [|java:lang:Error.<init>|](v5, v6) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1289c2.   throw v5;
#L1289c4.   v0:= Exception  @type object;
#L1289c6.   v5:= new [|java:lang:Error|];
#L1289ca.   call temp:=  [|java:lang:Error.<init>|](v5, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1289d0.   throw v5;
#L1289d2.   call temp:=  [|java:lang:Integer.numberOfLeadingZeros|](v2) @signature [|Ljava/lang/Integer;.numberOfLeadingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L1289d8.   v5:= temp;
#L1289da.   v5:= v5 - 31;
#L1289de.   @@[|java:util:concurrent:ConcurrentHashMap.SSHIFT|] := v5;
#L1289e2.   call temp:=  [|java:lang:Integer.numberOfLeadingZeros|](v4) @signature [|Ljava/lang/Integer;.numberOfLeadingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L1289e8.   v5:= temp;
#L1289ea.   v5:= v5 - 31;
#L1289ee.   @@[|java:util:concurrent:ConcurrentHashMap.TSHIFT|] := v5;
#L1289f2.   return @void ;
  catch  [|java:lang:Exception|] @[L128950..L12899e] goto L1289c4;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.<init>|] ([|java:util:concurrent:ConcurrentHashMap|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L128a14.   v1:= 16  @length 16;
#L128a18.   v0:= 1061158912  @length high16;
#L128a1c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.<init>|](v2, v1, v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L128a22.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.<init>|] ([|java:util:concurrent:ConcurrentHashMap|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L128a34.   v0:= 1061158912  @length high16;
#L128a38.   v1:= 16  @length 16;
#L128a3c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.<init>|](v2, v3, v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L128a42.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.<init>|] ([|java:util:concurrent:ConcurrentHashMap|] v1 @type (this), [|int|] v2, [|float|] v3) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IF)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L128a54.   v0:= 16  @length 16;
#L128a58.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.<init>|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L128a5e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.<init>|] ([|java:util:concurrent:ConcurrentHashMap|] v9 @type (this), [|int|] v10, [|float|] v11, [|int|] v12) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L128a70.   call temp:=  [|java:util:AbstractMap.<init>|](v9) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L128a76.   v6:= 0  @length 4;
#L128a78.   v6:= cmpl(v11,v6);
#L128a7c.   if v6 <= 0 then goto L128a88;
#L128a80.   if v10 < 0 then goto L128a88;
#L128a84.   if v12 > 0 then goto L128a94;
#L128a88.   v6:= new [|java:lang:IllegalArgumentException|];
#L128a8c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L128a92.   throw v6;
#L128a94.   v6:= 65536  @length high16;
#L128a98.   if v12 <= v6 then goto L128aa0;
#L128a9c.   v12:= 65536  @length high16;
#L128aa0.   v4:= 0  @length 4;
#L128aa2.   v5:= 1  @length 4;
#L128aa4.   if v5 >= v12 then goto L128ab2;
#L128aa8.   v4:= v4 + 1;
#L128aac.   v5:= v5 ^< 1;
#L128ab0.   goto L128aa4;
#L128ab2.   v6:= v4 - 32;
#L128ab6.   v9.[|java:util:concurrent:ConcurrentHashMap.segmentShift|]  := v6;
#L128aba.   v6:= v5 + -1;
#L128abe.   v9.[|java:util:concurrent:ConcurrentHashMap.segmentMask|]  := v6;
#L128ac2.   v6:= 1073741824  @length high16;
#L128ac6.   if v10 <= v6 then goto L128ace;
#L128aca.   v10:= 1073741824  @length high16;
#L128ace.   v0:= v10 / v5  @type int;
#L128ad2.   v6:= v0 * v5  @type int;
#L128ad6.   if v6 >= v10 then goto L128ade;
#L128ada.   v0:= v0 + 1;
#L128ade.   v1:= 2  @length 4;
#L128ae0.   if v1 >= v0 then goto L128aea;
#L128ae4.   v1:= v1 ^< 1;
#L128ae8.   goto L128ae0;
#L128aea.   v2:= new [|java:util:concurrent:ConcurrentHashMap$Segment|];
#L128aee.   v6:= (float)v1  @type i2f;
#L128af0.   v6:= v6 * v11  @type float;
#L128af2.   v7:= (int)v6  @type f2i;
#L128af4.   v6:= new [|java:util:concurrent:ConcurrentHashMap$HashEntry|][v1];
#L128af8.   v6:= ([|java:util:concurrent:ConcurrentHashMap$HashEntry|][])v6;
#L128afc.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.<init>|](v2, v11, v7, v6) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.<init>:(FI[Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type direct;
#L128b02.   v3:= new [|java:util:concurrent:ConcurrentHashMap$Segment|][v5];
#L128b06.   v3:= ([|java:util:concurrent:ConcurrentHashMap$Segment|][])v3;
#L128b0a.   v6:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128b0e.   v7:= @@[|java:util:concurrent:ConcurrentHashMap.SBASE|]   @wide;
#L128b12.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v6, v3, v7, v8, v2) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128b18.   v9.[|java:util:concurrent:ConcurrentHashMap.segments|]  := v3 @type object;
#L128b1c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.<init>|] ([|java:util:concurrent:ConcurrentHashMap|] v3 @type (this), [|java:util:Map|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<init>:(Ljava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L128b30.   v2:= 16  @length 16;
#L128b34.   v1:= 1061158912  @length high16;
#L128b38.   call temp:=  [|java:util:Map.size|](v4) @signature [|Ljava/util/Map;.size:()I|] @classDescriptor [|java:util:Map|] @type interface;
#L128b3e.   v0:= temp;
#L128b40.   v0:= (float)v0  @type i2f;
#L128b42.   v0:= v0 / v1  @type float;
#L128b44.   v0:= (int)v0  @type f2i;
#L128b46.   v0:= v0 + 1;
#L128b4a.   call temp:=  [|java:lang:Math.max|](v0, v2) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L128b50.   v0:= temp;
#L128b52.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.<init>|](v3, v0, v1, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L128b58.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.putAll|](v3, v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.putAll:(Ljava/util/Map;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L128b5e.   return @void ;

   }
    procedure [|java:util:concurrent:ConcurrentHashMap$Segment|] [|java:util:concurrent:ConcurrentHashMap.ensureSegment|] ([|java:util:concurrent:ConcurrentHashMap|] v17 @type (this), [|int|] v18) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.ensureSegment:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
      
#L128b70.   v0:= v17  @type object;
#L128b74.   v2:= v0.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L128b78.   v1:= @@[|java:util:concurrent:ConcurrentHashMap.SSHIFT|] ;
#L128b7c.   v1:= v18 ^< v1  @type int;
#L128b80.   v13:= (long)v1  @type i2l;
#L128b82.   v15:= @@[|java:util:concurrent:ConcurrentHashMap.SBASE|]   @wide;
#L128b86.   v3:= v13 + v15  @type long;
#L128b8a.   v1:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128b8e.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v1, v2, v3, v4) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128b94.   v10:= temp  @type object;
#L128b96.   v10:= ([|java:util:concurrent:ConcurrentHashMap$Segment|])v10;
#L128b9a.   if v10 != 0 then goto L128c02;
#L128b9e.   v1:= 0  @length 4;
#L128ba0.   v9:= v2[v1]  @type object;
#L128ba4.   v1:= v9.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L128ba8.   v7:= v1.length;
#L128baa.   v8:= v9.[|java:util:concurrent:ConcurrentHashMap$Segment.loadFactor|] ;
#L128bae.   v1:= (float)v7  @type i2f;
#L128bb0.   v1:= v1 * v8  @type float;
#L128bb2.   v12:= (int)v1  @type f2i;
#L128bb4.   v11:= new [|java:util:concurrent:ConcurrentHashMap$HashEntry|][v7];
#L128bb8.   v11:= ([|java:util:concurrent:ConcurrentHashMap$HashEntry|][])v11;
#L128bbc.   v1:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128bc0.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v1, v2, v3, v4) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128bc6.   v10:= temp  @type object;
#L128bc8.   v10:= ([|java:util:concurrent:ConcurrentHashMap$Segment|])v10;
#L128bcc.   if v10 != 0 then goto L128c02;
#L128bd0.   v6:= new [|java:util:concurrent:ConcurrentHashMap$Segment|];
#L128bd4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.<init>|](v6, v8, v12, v11) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.<init>:(FI[Ljava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type direct;
#L128bda.   v1:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128bde.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v1, v2, v3, v4) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128be4.   v10:= temp  @type object;
#L128be6.   v10:= ([|java:util:concurrent:ConcurrentHashMap$Segment|])v10;
#L128bea.   if v10 != 0 then goto L128c02;
#L128bee.   v1:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128bf2.   v5:= 0  @length 4;
#L128bf4.   v10:= v6  @type object;
#L128bf6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v1, v2, v3, v4, v5, v6) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128bfc.   v1:= temp;
#L128bfe.   if v1 == 0 then goto L128bda;
#L128c02.   return v10  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentHashMap$HashEntry|] [|java:util:concurrent:ConcurrentHashMap.entryAt|] ([|java:util:concurrent:ConcurrentHashMap$HashEntry|][] v5 @type (object), [|int|] v6) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @Access STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L128c14.   if v5 != 0 then goto L128c1c;
#L128c18.   v0:= 0  @length 4;
#L128c1a.   return v0  @type object;
#L128c1c.   v0:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128c20.   v1:= (long)v6  @type i2l;
#L128c22.   v3:= @@[|java:util:concurrent:ConcurrentHashMap.TSHIFT|] ;
#L128c26.   v1:= v1 ^< v3  @type long;
#L128c28.   v3:= @@[|java:util:concurrent:ConcurrentHashMap.TBASE|]   @wide;
#L128c2c.   v1:= v1 + v3  @type long;
#L128c2e.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v0, v5, v1, v2) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128c34.   v0:= temp  @type object;
#L128c36.   v0:= ([|java:util:concurrent:ConcurrentHashMap$HashEntry|])v0;
#L128c3a.   goto L128c1a;

   }
    procedure [|java:util:concurrent:ConcurrentHashMap$HashEntry|] [|java:util:concurrent:ConcurrentHashMap.entryForHash|] ([|java:util:concurrent:ConcurrentHashMap$Segment|] v6 @type (object), [|int|] v7) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryForHash:(Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @Access STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L128c4c.   if v6 == 0 then goto L128c58;
#L128c50.   v0:= v6.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L128c54.   if v0 != 0 then goto L128c5c;
#L128c58.   v1:= 0  @length 4;
#L128c5a.   return v1  @type object;
#L128c5c.   v1:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128c60.   v2:= v0.length;
#L128c62.   v2:= v2 + -1;
#L128c66.   v2:= v2 ^& v7  @type int;
#L128c68.   v2:= (long)v2  @type i2l;
#L128c6a.   v4:= @@[|java:util:concurrent:ConcurrentHashMap.TSHIFT|] ;
#L128c6e.   v2:= v2 ^< v4  @type long;
#L128c70.   v4:= @@[|java:util:concurrent:ConcurrentHashMap.TBASE|]   @wide;
#L128c74.   v2:= v2 + v4  @type long;
#L128c76.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v1, v0, v2, v3) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128c7c.   v1:= temp  @type object;
#L128c7e.   v1:= ([|java:util:concurrent:ConcurrentHashMap$HashEntry|])v1;
#L128c82.   goto L128c5a;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentHashMap.hash|] ([|int|] v2) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.hash:(I)I|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
        v1;
      
#L128c94.   v0:= v2 ^< 15;
#L128c98.   v0:= v0 ^~ -12931;
#L128c9c.   v2:= v2 + v0  @type int;
#L128c9e.   v0:= v2 ^>> 10;
#L128ca2.   v2:= v2 ^~ v0  @type int;
#L128ca4.   v0:= v2 ^< 3;
#L128ca8.   v2:= v2 + v0  @type int;
#L128caa.   v0:= v2 ^>> 6;
#L128cae.   v2:= v2 ^~ v0  @type int;
#L128cb0.   v0:= v2 ^< 2;
#L128cb4.   v1:= v2 ^< 14;
#L128cb8.   v0:= v0 + v1  @type int;
#L128cba.   v2:= v2 + v0  @type int;
#L128cbc.   v0:= v2 ^>> 16;
#L128cc0.   v0:= v0 ^~ v2  @type int;
#L128cc2.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.readObject|] ([|java:util:concurrent:ConcurrentHashMap|] v8 @type (this), [|java:io:ObjectInputStream|] v9 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L128cd4.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v9) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L128cda.   v0:= 2  @length 4;
#L128cdc.   v4:= v8.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L128ce0.   v1:= 0  @length 4;
#L128ce2.   v6:= v4.length;
#L128ce4.   if v1 >= v6 then goto L128d16;
#L128ce8.   v3:= v4[v1]  @type object;
#L128cec.   if v3 == 0 then goto L128d0a;
#L128cf0.   v6:= (float)v0  @type i2f;
#L128cf2.   v7:= v3.[|java:util:concurrent:ConcurrentHashMap$Segment.loadFactor|] ;
#L128cf6.   v6:= v6 * v7  @type float;
#L128cf8.   v6:= (int)v6  @type f2i;
#L128cfa.   v3.[|java:util:concurrent:ConcurrentHashMap$Segment.threshold|]  := v6;
#L128cfe.   v6:= new [|java:util:concurrent:ConcurrentHashMap$HashEntry|][v0];
#L128d02.   v6:= ([|java:util:concurrent:ConcurrentHashMap$HashEntry|][])v6;
#L128d06.   v3.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]  := v6 @type object;
#L128d0a.   v1:= v1 + 1;
#L128d0e.   goto L128ce2;
#L128d10.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.put|](v8, v2, v5) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L128d16.   call temp:=  [|java:io:ObjectInputStream.readObject|](v9) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L128d1c.   v2:= temp  @type object;
#L128d1e.   call temp:=  [|java:io:ObjectInputStream.readObject|](v9) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L128d24.   v5:= temp  @type object;
#L128d26.   if v2 != 0 then goto L128d10;
#L128d2a.   return @void ;

   }
    procedure [|java:util:concurrent:ConcurrentHashMap$Segment|] [|java:util:concurrent:ConcurrentHashMap.segmentAt|] ([|java:util:concurrent:ConcurrentHashMap$Segment|][] v6 @type (object), [|int|] v7) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentAt:([Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @Access STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L128d3c.   v2:= @@[|java:util:concurrent:ConcurrentHashMap.SSHIFT|] ;
#L128d40.   v2:= v7 ^< v2  @type int;
#L128d44.   v2:= (long)v2  @type i2l;
#L128d46.   v4:= @@[|java:util:concurrent:ConcurrentHashMap.SBASE|]   @wide;
#L128d4a.   v0:= v2 + v4  @type long;
#L128d4e.   if v6 != 0 then goto L128d56;
#L128d52.   v2:= 0  @length 4;
#L128d54.   return v2  @type object;
#L128d56.   v2:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128d5a.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v2, v6, v0, v1) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128d60.   v2:= temp  @type object;
#L128d62.   v2:= ([|java:util:concurrent:ConcurrentHashMap$Segment|])v2;
#L128d66.   goto L128d54;

   }
    procedure [|java:util:concurrent:ConcurrentHashMap$Segment|] [|java:util:concurrent:ConcurrentHashMap.segmentForHash|] ([|java:util:concurrent:ConcurrentHashMap|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentForHash:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L128d78.   v2:= v6.[|java:util:concurrent:ConcurrentHashMap.segmentShift|] ;
#L128d7c.   v2:= v7 ^>> v2  @type int;
#L128d80.   v3:= v6.[|java:util:concurrent:ConcurrentHashMap.segmentMask|] ;
#L128d84.   v2:= v2 ^& v3  @type int;
#L128d86.   v3:= @@[|java:util:concurrent:ConcurrentHashMap.SSHIFT|] ;
#L128d8a.   v2:= v2 ^< v3  @type int;
#L128d8c.   v2:= (long)v2  @type i2l;
#L128d8e.   v4:= @@[|java:util:concurrent:ConcurrentHashMap.SBASE|]   @wide;
#L128d92.   v0:= v2 + v4  @type long;
#L128d96.   v2:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128d9a.   v3:= v6.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L128d9e.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v2, v3, v0, v1) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128da4.   v2:= temp  @type object;
#L128da6.   v2:= ([|java:util:concurrent:ConcurrentHashMap$Segment|])v2;
#L128daa.   return v2  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.setEntryAt|] ([|java:util:concurrent:ConcurrentHashMap$HashEntry|][] v5 @type (object), [|int|] v6, [|java:util:concurrent:ConcurrentHashMap$HashEntry|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.setEntryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;ILjava/util/concurrent/ConcurrentHashMap$HashEntry;)V|] @Access STATIC_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L128dbc.   v0:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128dc0.   v1:= (long)v6  @type i2l;
#L128dc2.   v3:= @@[|java:util:concurrent:ConcurrentHashMap.TSHIFT|] ;
#L128dc6.   v1:= v1 ^< v3  @type long;
#L128dc8.   v3:= @@[|java:util:concurrent:ConcurrentHashMap.TBASE|]   @wide;
#L128dcc.   v1:= v1 + v3  @type long;
#L128dce.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v0, v5, v1, v2, v7) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128dd4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.writeObject|] ([|java:util:concurrent:ConcurrentHashMap|] v8 @type (this), [|java:io:ObjectOutputStream|] v9 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L128de8.   v7:= 0  @length 4;
#L128dea.   v2:= 0  @length 4;
#L128dec.   v6:= v8.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L128df0.   v6:= v6.length;
#L128df2.   if v2 >= v6 then goto L128e02;
#L128df6.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.ensureSegment|](v8, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.ensureSegment:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L128dfc.   v2:= v2 + 1;
#L128e00.   goto L128dec;
#L128e02.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v9) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L128e08.   v4:= v8.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L128e0c.   v2:= 0  @length 4;
#L128e0e.   v6:= v4.length;
#L128e10.   if v2 >= v6 then goto L128e70;
#L128e14.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentAt|](v4, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentAt:([Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L128e1a.   v3:= temp  @type object;
#L128e1c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.lock|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.lock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128e22.   v5:= v3.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L128e26.   v1:= 0  @length 4;
#L128e28.   v6:= v5.length;
#L128e2a.   if v1 >= v6 then goto L128e64;
#L128e2e.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryAt|](v5, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L128e34.   v0:= temp  @type object;
#L128e36.   if v0 == 0 then goto L128e54;
#L128e3a.   v6:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L128e3e.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v9, v6) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L128e44.   v6:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L128e48.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v9, v6) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L128e4e.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L128e52.   goto L128e36;
#L128e54.   v1:= v1 + 1;
#L128e58.   goto L128e28;
#L128e5a.   v6:= Exception  @type object;
#L128e5c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128e62.   throw v6;
#L128e64.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128e6a.   v2:= v2 + 1;
#L128e6e.   goto L128e0e;
#L128e70.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v9, v7) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L128e76.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v9, v7) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L128e7c.   return @void ;
  catch  [|any|] @[L128e22..L128e52] goto L128e5a;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.clear|] ([|java:util:concurrent:ConcurrentHashMap|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L128e9c.   v2:= v4.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L128ea0.   v0:= 0  @length 4;
#L128ea2.   v3:= v2.length;
#L128ea4.   if v0 >= v3 then goto L128ec0;
#L128ea8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentAt|](v2, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentAt:([Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L128eae.   v1:= temp  @type object;
#L128eb0.   if v1 == 0 then goto L128eba;
#L128eb4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.clear|](v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.clear:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128eba.   v0:= v0 + 1;
#L128ebe.   goto L128ea2;
#L128ec0.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap.contains|] ([|java:util:concurrent:ConcurrentHashMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L128ed4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.containsValue|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.containsValue:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L128eda.   v0:= temp;
#L128edc.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap.containsKey|] ([|java:util:concurrent:ConcurrentHashMap|] v12 @type (this), [|java:lang:Object|] v13 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L128ef0.   call temp:=  [|java:lang:Object.hashCode|](v13) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L128ef6.   v7:= temp;
#L128ef8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.hash|](v7) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.hash:(I)I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L128efe.   v1:= temp;
#L128f00.   v7:= v12.[|java:util:concurrent:ConcurrentHashMap.segmentShift|] ;
#L128f04.   v7:= v1 ^>> v7  @type int;
#L128f08.   v8:= v12.[|java:util:concurrent:ConcurrentHashMap.segmentMask|] ;
#L128f0c.   v7:= v7 ^& v8  @type int;
#L128f0e.   v8:= @@[|java:util:concurrent:ConcurrentHashMap.SSHIFT|] ;
#L128f12.   v7:= v7 ^< v8  @type int;
#L128f14.   v7:= (long)v7  @type i2l;
#L128f16.   v9:= @@[|java:util:concurrent:ConcurrentHashMap.SBASE|]   @wide;
#L128f1a.   v5:= v7 + v9  @type long;
#L128f1e.   v7:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128f22.   v8:= v12.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L128f26.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v7, v8, v5, v6) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128f2c.   v3:= temp  @type object;
#L128f2e.   v3:= ([|java:util:concurrent:ConcurrentHashMap$Segment|])v3;
#L128f32.   if v3 == 0 then goto L128f8e;
#L128f36.   v4:= v3.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L128f3a.   if v4 == 0 then goto L128f8e;
#L128f3e.   v7:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L128f42.   v8:= v4.length;
#L128f44.   v8:= v8 + -1;
#L128f48.   v8:= v8 ^& v1  @type int;
#L128f4a.   v8:= (long)v8  @type i2l;
#L128f4c.   v10:= @@[|java:util:concurrent:ConcurrentHashMap.TSHIFT|] ;
#L128f50.   v8:= v8 ^< v10  @type long;
#L128f52.   v10:= @@[|java:util:concurrent:ConcurrentHashMap.TBASE|]   @wide;
#L128f56.   v8:= v8 + v10  @type long;
#L128f58.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v7, v4, v8, v9) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L128f5e.   v0:= temp  @type object;
#L128f60.   v0:= ([|java:util:concurrent:ConcurrentHashMap$HashEntry|])v0;
#L128f64.   if v0 == 0 then goto L128f8e;
#L128f68.   v2:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L128f6c.   if v2 == v13 then goto L128f84;
#L128f70.   v7:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L128f74.   if v7 != v1 then goto L128f88;
#L128f78.   call temp:=  [|java:lang:Object.equals|](v13, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L128f7e.   v7:= temp;
#L128f80.   if v7 == 0 then goto L128f88;
#L128f84.   v7:= 1  @length 4;
#L128f86.   return v7;
#L128f88.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L128f8c.   goto L128f64;
#L128f8e.   v7:= 0  @length 4;
#L128f90.   goto L128f86;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap.containsValue|] ([|java:util:concurrent:ConcurrentHashMap|] v16 @type (this), [|java:lang:Object|] v17 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.containsValue:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
      
#L128fa4.   if v17 != 0 then goto L128fb4;
#L128fa8.   v14:= new [|java:lang:NullPointerException|];
#L128fac.   call temp:=  [|java:lang:NullPointerException.<init>|](v14) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L128fb2.   throw v14;
#L128fb4.   v0:= v16  @type object;
#L128fb8.   v9:= v0.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L128fbc.   v5:= 0  @length wide16;
#L128fc0.   v4:= 0  @length 4;
#L128fc2.   v7:= -1  @length 4;
#L128fc4.   v10:= 0  @length wide16;
#L128fc8.   v3:= 0  @length 4;
#L128fca.   v14:= v9.length;
#L128fcc.   if v3 >= v14 then goto L129060;
#L128fd0.   v14:= 2  @length 4;
#L128fd2.   if v7 != v14 then goto L129038;
#L128fd6.   v0:= v16  @type object;
#L128fda.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.ensureSegment|](v0, v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.ensureSegment:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L128fe0.   v8:= temp  @type object;
#L128fe2.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.lock|](v8) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.lock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L128fe8.   v4:= v4 + 1;
#L128fec.   v12:= v8.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L128ff0.   if v12 == 0 then goto L129044;
#L128ff4.   v2:= 0  @length 4;
#L128ff6.   v14:= v12.length;
#L128ff8.   if v2 >= v14 then goto L129056;
#L128ffc.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.entryAt|](v12, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entryAt:([Ljava/util/concurrent/ConcurrentHashMap$HashEntry;I)Ljava/util/concurrent/ConcurrentHashMap$HashEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L129002.   v1:= temp  @type object;
#L129004.   if v1 == 0 then goto L129050;
#L129008.   v13:= v1.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L12900c.   if v13 == 0 then goto L12904a;
#L129010.   v0:= v17  @type object;
#L129014.   call temp:=  [|java:lang:Object.equals|](v0, v13) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12901a.   v14:= temp;
#L12901c.   if v14 == 0 then goto L12904a;
#L129020.   v14:= 1  @length 4;
#L129022.   v3:= 0  @length 4;
#L129024.   if v3 >= v4 then goto L129092;
#L129028.   v15:= v9[v3]  @type object;
#L12902c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v15) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L129032.   v3:= v3 + 1;
#L129036.   goto L129024;
#L129038.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentAt|](v9, v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentAt:([Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L12903e.   v8:= temp  @type object;
#L129040.   if v8 != 0 then goto L128fec;
#L129044.   v3:= v3 + 1;
#L129048.   goto L128fca;
#L12904a.   v1:= v1.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L12904e.   goto L129004;
#L129050.   v2:= v2 + 1;
#L129054.   goto L128ff6;
#L129056.   v14:= v8.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L12905a.   v14:= (long)v14  @type i2l;
#L12905c.   v10:= v10 + v14  @type long;
#L12905e.   goto L129044;
#L129060.   if v7 < 0 then goto L12906c;
#L129064.   v14:= cmp(v10,v5);
#L129068.   if v14 == 0 then goto L129070;
#L12906c.   if v4 <= 0 then goto L129088;
#L129070.   v14:= 0  @length 4;
#L129072.   v3:= 0  @length 4;
#L129074.   if v3 >= v4 then goto L129092;
#L129078.   v15:= v9[v3]  @type object;
#L12907c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v15) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L129082.   v3:= v3 + 1;
#L129086.   goto L129074;
#L129088.   v5:= v10  @type wide;
#L12908a.   v7:= v7 + 1;
#L12908e.   goto L128fc4;
#L129090.   throw v14;
#L129092.   return v14;
#L129094.   v14:= Exception  @type object;
#L129096.   v3:= 0  @length 4;
#L129098.   if v3 >= v4 then goto L129090;
#L12909c.   v15:= v9[v3]  @type object;
#L1290a0.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v15) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1290a6.   v3:= v3 + 1;
#L1290aa.   goto L129098;
  catch  [|any|] @[L128fca..L12901a] goto L129094;
  catch  [|any|] @[L129038..L12905a] goto L129094;

   }
    procedure [|java:util:Enumeration|] [|java:util:concurrent:ConcurrentHashMap.elements|] ([|java:util:concurrent:ConcurrentHashMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.elements:()Ljava/util/Enumeration;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1290d0.   v0:= new [|java:util:concurrent:ConcurrentHashMap$ValueIterator|];
#L1290d4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$ValueIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$ValueIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$ValueIterator|] @type direct;
#L1290da.   return v0  @type object;

   }
    procedure [|java:util:Set|] [|java:util:concurrent:ConcurrentHashMap.entrySet|] ([|java:util:concurrent:ConcurrentHashMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1290ec.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap.entrySet|]   @type object;
#L1290f0.   if v0 == 0 then goto L1290f6;
#L1290f4.   return v0  @type object;
#L1290f6.   v0:= new [|java:util:concurrent:ConcurrentHashMap$EntrySet|];
#L1290fa.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$EntrySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$EntrySet;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$EntrySet|] @type direct;
#L129100.   v1.[|java:util:concurrent:ConcurrentHashMap.entrySet|]  := v0 @type object;
#L129104.   goto L1290f4;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap.get|] ([|java:util:concurrent:ConcurrentHashMap|] v12 @type (this), [|java:lang:Object|] v13 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L129118.   call temp:=  [|java:lang:Object.hashCode|](v13) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12911e.   v7:= temp;
#L129120.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.hash|](v7) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.hash:(I)I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L129126.   v1:= temp;
#L129128.   v7:= v12.[|java:util:concurrent:ConcurrentHashMap.segmentShift|] ;
#L12912c.   v7:= v1 ^>> v7  @type int;
#L129130.   v8:= v12.[|java:util:concurrent:ConcurrentHashMap.segmentMask|] ;
#L129134.   v7:= v7 ^& v8  @type int;
#L129136.   v8:= @@[|java:util:concurrent:ConcurrentHashMap.SSHIFT|] ;
#L12913a.   v7:= v7 ^< v8  @type int;
#L12913c.   v7:= (long)v7  @type i2l;
#L12913e.   v9:= @@[|java:util:concurrent:ConcurrentHashMap.SBASE|]   @wide;
#L129142.   v5:= v7 + v9  @type long;
#L129146.   v7:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L12914a.   v8:= v12.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L12914e.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v7, v8, v5, v6) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L129154.   v3:= temp  @type object;
#L129156.   v3:= ([|java:util:concurrent:ConcurrentHashMap$Segment|])v3;
#L12915a.   if v3 == 0 then goto L1291b8;
#L12915e.   v4:= v3.[|java:util:concurrent:ConcurrentHashMap$Segment.table|]   @type object;
#L129162.   if v4 == 0 then goto L1291b8;
#L129166.   v7:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L12916a.   v8:= v4.length;
#L12916c.   v8:= v8 + -1;
#L129170.   v8:= v8 ^& v1  @type int;
#L129172.   v8:= (long)v8  @type i2l;
#L129174.   v10:= @@[|java:util:concurrent:ConcurrentHashMap.TSHIFT|] ;
#L129178.   v8:= v8 ^< v10  @type long;
#L12917a.   v10:= @@[|java:util:concurrent:ConcurrentHashMap.TBASE|]   @wide;
#L12917e.   v8:= v8 + v10  @type long;
#L129180.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v7, v4, v8, v9) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L129186.   v0:= temp  @type object;
#L129188.   v0:= ([|java:util:concurrent:ConcurrentHashMap$HashEntry|])v0;
#L12918c.   if v0 == 0 then goto L1291b8;
#L129190.   v2:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.key|]   @type object;
#L129194.   if v2 == v13 then goto L1291ac;
#L129198.   v7:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.hash|] ;
#L12919c.   if v7 != v1 then goto L1291b2;
#L1291a0.   call temp:=  [|java:lang:Object.equals|](v13, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1291a6.   v7:= temp;
#L1291a8.   if v7 == 0 then goto L1291b2;
#L1291ac.   v7:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.value|]   @type object;
#L1291b0.   return v7  @type object;
#L1291b2.   v0:= v0.[|java:util:concurrent:ConcurrentHashMap$HashEntry.next|]   @type object;
#L1291b6.   goto L12918c;
#L1291b8.   v7:= 0  @length 4;
#L1291ba.   goto L1291b0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap.isEmpty|] ([|java:util:concurrent:ConcurrentHashMap|] v10 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1291cc.   v8:= 0  @length wide16;
#L1291d0.   v5:= 0  @length 4;
#L1291d2.   v3:= 0  @length wide16;
#L1291d6.   v2:= v10.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L1291da.   v0:= 0  @length 4;
#L1291dc.   v6:= v2.length;
#L1291de.   if v0 >= v6 then goto L129206;
#L1291e2.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentAt|](v2, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentAt:([Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1291e8.   v1:= temp  @type object;
#L1291ea.   if v1 == 0 then goto L129200;
#L1291ee.   v6:= v1.[|java:util:concurrent:ConcurrentHashMap$Segment.count|] ;
#L1291f2.   if v6 == 0 then goto L1291f8;
#L1291f6.   return v5;
#L1291f8.   v6:= v1.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L1291fc.   v6:= (long)v6  @type i2l;
#L1291fe.   v3:= v3 + v6  @type long;
#L129200.   v0:= v0 + 1;
#L129204.   goto L1291dc;
#L129206.   v6:= cmp(v3,v8);
#L12920a.   if v6 == 0 then goto L129240;
#L12920e.   v0:= 0  @length 4;
#L129210.   v6:= v2.length;
#L129212.   if v0 >= v6 then goto L129238;
#L129216.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentAt|](v2, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentAt:([Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L12921c.   v1:= temp  @type object;
#L12921e.   if v1 == 0 then goto L129232;
#L129222.   v6:= v1.[|java:util:concurrent:ConcurrentHashMap$Segment.count|] ;
#L129226.   if v6 != 0 then goto L1291f6;
#L12922a.   v6:= v1.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L12922e.   v6:= (long)v6  @type i2l;
#L129230.   v3:= v3 - v6  @type long;
#L129232.   v0:= v0 + 1;
#L129236.   goto L129210;
#L129238.   v6:= cmp(v3,v8);
#L12923c.   if v6 != 0 then goto L1291f6;
#L129240.   v5:= 1  @length 4;
#L129242.   goto L1291f6;

   }
    procedure [|java:util:Set|] [|java:util:concurrent:ConcurrentHashMap.keySet|] ([|java:util:concurrent:ConcurrentHashMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.keySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L129254.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap.keySet|]   @type object;
#L129258.   if v0 == 0 then goto L12925e;
#L12925c.   return v0  @type object;
#L12925e.   v0:= new [|java:util:concurrent:ConcurrentHashMap$KeySet|];
#L129262.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$KeySet|] @type direct;
#L129268.   v1.[|java:util:concurrent:ConcurrentHashMap.keySet|]  := v0 @type object;
#L12926c.   goto L12925c;

   }
    procedure [|java:util:Enumeration|] [|java:util:concurrent:ConcurrentHashMap.keys|] ([|java:util:concurrent:ConcurrentHashMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.keys:()Ljava/util/Enumeration;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L129280.   v0:= new [|java:util:concurrent:ConcurrentHashMap$KeyIterator|];
#L129284.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$KeyIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$KeyIterator;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$KeyIterator|] @type direct;
#L12928a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap.put|] ([|java:util:concurrent:ConcurrentHashMap|] v9 @type (this), [|java:lang:Object|] v10 @type (object), [|java:lang:Object|] v11 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L12929c.   if v11 != 0 then goto L1292ac;
#L1292a0.   v3:= new [|java:lang:NullPointerException|];
#L1292a4.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1292aa.   throw v3;
#L1292ac.   call temp:=  [|java:lang:Object.hashCode|](v10) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1292b2.   v3:= temp;
#L1292b4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.hash|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.hash:(I)I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1292ba.   v0:= temp;
#L1292bc.   v3:= v9.[|java:util:concurrent:ConcurrentHashMap.segmentShift|] ;
#L1292c0.   v3:= v0 ^>> v3  @type int;
#L1292c4.   v4:= v9.[|java:util:concurrent:ConcurrentHashMap.segmentMask|] ;
#L1292c8.   v1:= v3 ^& v4  @type int;
#L1292cc.   v3:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L1292d0.   v4:= v9.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L1292d4.   v5:= @@[|java:util:concurrent:ConcurrentHashMap.SSHIFT|] ;
#L1292d8.   v5:= v1 ^< v5  @type int;
#L1292dc.   v5:= (long)v5  @type i2l;
#L1292de.   v7:= @@[|java:util:concurrent:ConcurrentHashMap.SBASE|]   @wide;
#L1292e2.   v5:= v5 + v7  @type long;
#L1292e4.   call temp:=  [|sun:misc:Unsafe.getObject|](v3, v4, v5, v6) @signature [|Lsun/misc/Unsafe;.getObject:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1292ea.   v2:= temp  @type object;
#L1292ec.   v2:= ([|java:util:concurrent:ConcurrentHashMap$Segment|])v2;
#L1292f0.   if v2 != 0 then goto L1292fc;
#L1292f4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.ensureSegment|](v9, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.ensureSegment:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L1292fa.   v2:= temp  @type object;
#L1292fc.   v3:= 0  @length 4;
#L1292fe.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.put|](v2, v10, v0, v11, v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.put:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L129304.   v3:= temp  @type object;
#L129306.   return v3  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentHashMap.putAll|] ([|java:util:concurrent:ConcurrentHashMap|] v4 @type (this), [|java:util:Map|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.putAll:(Ljava/util/Map;)V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129318.   call temp:=  [|java:util:Map.entrySet|](v5) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L12931e.   v2:= temp  @type object;
#L129320.   call temp:=  [|java:util:Set.iterator|](v2) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L129326.   v1:= temp  @type object;
#L129328.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12932e.   v2:= temp;
#L129330.   if v2 == 0 then goto L129358;
#L129334.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12933a.   v0:= temp  @type object;
#L12933c.   v0:= ([|java:util:Map$Entry|])v0;
#L129340.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L129346.   v2:= temp  @type object;
#L129348.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12934e.   v3:= temp  @type object;
#L129350.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.put|](v4, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type virtual;
#L129356.   goto L129328;
#L129358.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap.putIfAbsent|] ([|java:util:concurrent:ConcurrentHashMap|] v9 @type (this), [|java:lang:Object|] v10 @type (object), [|java:lang:Object|] v11 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L12936c.   if v11 != 0 then goto L12937c;
#L129370.   v3:= new [|java:lang:NullPointerException|];
#L129374.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12937a.   throw v3;
#L12937c.   call temp:=  [|java:lang:Object.hashCode|](v10) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L129382.   v3:= temp;
#L129384.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.hash|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.hash:(I)I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L12938a.   v0:= temp;
#L12938c.   v3:= v9.[|java:util:concurrent:ConcurrentHashMap.segmentShift|] ;
#L129390.   v3:= v0 ^>> v3  @type int;
#L129394.   v4:= v9.[|java:util:concurrent:ConcurrentHashMap.segmentMask|] ;
#L129398.   v1:= v3 ^& v4  @type int;
#L12939c.   v3:= @@[|java:util:concurrent:ConcurrentHashMap.UNSAFE|]   @type object;
#L1293a0.   v4:= v9.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L1293a4.   v5:= @@[|java:util:concurrent:ConcurrentHashMap.SSHIFT|] ;
#L1293a8.   v5:= v1 ^< v5  @type int;
#L1293ac.   v5:= (long)v5  @type i2l;
#L1293ae.   v7:= @@[|java:util:concurrent:ConcurrentHashMap.SBASE|]   @wide;
#L1293b2.   v5:= v5 + v7  @type long;
#L1293b4.   call temp:=  [|sun:misc:Unsafe.getObject|](v3, v4, v5, v6) @signature [|Lsun/misc/Unsafe;.getObject:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1293ba.   v2:= temp  @type object;
#L1293bc.   v2:= ([|java:util:concurrent:ConcurrentHashMap$Segment|])v2;
#L1293c0.   if v2 != 0 then goto L1293cc;
#L1293c4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.ensureSegment|](v9, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.ensureSegment:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L1293ca.   v2:= temp  @type object;
#L1293cc.   v3:= 1  @length 4;
#L1293ce.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.put|](v2, v10, v0, v11, v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.put:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1293d4.   v3:= temp  @type object;
#L1293d6.   return v3  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap.remove|] ([|java:util:concurrent:ConcurrentHashMap|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L1293e8.   v2:= 0  @length 4;
#L1293ea.   call temp:=  [|java:lang:Object.hashCode|](v5) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1293f0.   v3:= temp;
#L1293f2.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.hash|](v3) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.hash:(I)I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1293f8.   v0:= temp;
#L1293fa.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentForHash|](v4, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentForHash:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L129400.   v1:= temp  @type object;
#L129402.   if v1 != 0 then goto L129408;
#L129406.   return v2  @type object;
#L129408.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.remove|](v1, v5, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.remove:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L12940e.   v2:= temp  @type object;
#L129410.   goto L129406;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap.remove|] ([|java:util:concurrent:ConcurrentHashMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L129424.   call temp:=  [|java:lang:Object.hashCode|](v4) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12942a.   v2:= temp;
#L12942c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.hash|](v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.hash:(I)I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L129432.   v0:= temp;
#L129434.   if v5 == 0 then goto L129454;
#L129438.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentForHash|](v3, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentForHash:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L12943e.   v1:= temp  @type object;
#L129440.   if v1 == 0 then goto L129454;
#L129444.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.remove|](v1, v4, v0, v5) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.remove:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L12944a.   v2:= temp  @type object;
#L12944c.   if v2 == 0 then goto L129454;
#L129450.   v2:= 1  @length 4;
#L129452.   return v2;
#L129454.   v2:= 0  @length 4;
#L129456.   goto L129452;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentHashMap.replace|] ([|java:util:concurrent:ConcurrentHashMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L129468.   call temp:=  [|java:lang:Object.hashCode|](v4) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12946e.   v2:= temp;
#L129470.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.hash|](v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.hash:(I)I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L129476.   v0:= temp;
#L129478.   if v5 != 0 then goto L129488;
#L12947c.   v2:= new [|java:lang:NullPointerException|];
#L129480.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L129486.   throw v2;
#L129488.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentForHash|](v3, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentForHash:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L12948e.   v1:= temp  @type object;
#L129490.   if v1 != 0 then goto L129498;
#L129494.   v2:= 0  @length 4;
#L129496.   return v2  @type object;
#L129498.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.replace|](v1, v4, v0, v5) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.replace:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L12949e.   v2:= temp  @type object;
#L1294a0.   goto L129496;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentHashMap.replace|] ([|java:util:concurrent:ConcurrentHashMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|java:lang:Object|] v5 @type (object), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1294b4.   call temp:=  [|java:lang:Object.hashCode|](v4) @signature [|Ljava/lang/Object;.hashCode:()I|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1294ba.   v2:= temp;
#L1294bc.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.hash|](v2) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.hash:(I)I|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L1294c2.   v0:= temp;
#L1294c4.   if v5 == 0 then goto L1294cc;
#L1294c8.   if v6 != 0 then goto L1294d8;
#L1294cc.   v2:= new [|java:lang:NullPointerException|];
#L1294d0.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1294d6.   throw v2;
#L1294d8.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentForHash|](v3, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentForHash:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L1294de.   v1:= temp  @type object;
#L1294e0.   if v1 == 0 then goto L1294f4;
#L1294e4.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.replace|](v1, v4, v0, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.replace:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1294ea.   v2:= temp;
#L1294ec.   if v2 == 0 then goto L1294f4;
#L1294f0.   v2:= 1  @length 4;
#L1294f2.   return v2;
#L1294f4.   v2:= 0  @length 4;
#L1294f6.   goto L1294f2;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentHashMap.size|] ([|java:util:concurrent:ConcurrentHashMap|] v15 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
      
#L129508.   v6:= v15.[|java:util:concurrent:ConcurrentHashMap.segments|]   @type object;
#L12950c.   v5:= v6.length;
#L12950e.   v1:= 0  @length wide16;
#L129512.   v3:= -1  @length 4;
#L129514.   v11:= 2  @length 4;
#L129516.   if v3 >= v11 then goto L12957a;
#L12951a.   v9:= 0  @length wide16;
#L12951e.   v7:= 0  @length wide16;
#L129522.   v0:= 0  @length 4;
#L129524.   if v0 >= v5 then goto L12954a;
#L129528.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.segmentAt|](v6, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.segmentAt:([Ljava/util/concurrent/ConcurrentHashMap$Segment;I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type static;
#L12952e.   v4:= temp  @type object;
#L129530.   if v4 == 0 then goto L129544;
#L129534.   v11:= v4.[|java:util:concurrent:ConcurrentHashMap$Segment.modCount|] ;
#L129538.   v11:= (long)v11  @type i2l;
#L12953a.   v9:= v9 + v11  @type long;
#L12953c.   v11:= v4.[|java:util:concurrent:ConcurrentHashMap$Segment.count|] ;
#L129540.   v11:= (long)v11  @type i2l;
#L129542.   v7:= v7 + v11  @type long;
#L129544.   v0:= v0 + 1;
#L129548.   goto L129524;
#L12954a.   v11:= cmp(v9,v1);
#L12954e.   if v11 != 0 then goto L129572;
#L129552.   v11:= 31  @length 16;
#L129556.   v11:= v7 ^>> v11  @type long;
#L12955a.   v13:= 0  @length wide16;
#L12955e.   v11:= cmp(v11,v13);
#L129562.   if v11 != 0 then goto L12956a;
#L129566.   v11:= (int)v7  @type l2i;
#L129568.   return v11;
#L12956a.    v11:= nan;
#L129570.   goto L129568;
#L129572.   v1:= v9  @type wide;
#L129574.   v3:= v3 + 1;
#L129578.   goto L129514;
#L12957a.   v7:= 0  @length wide16;
#L12957e.   v0:= 0  @length 4;
#L129580.   if v0 >= v5 then goto L1295a0;
#L129584.   call temp:=  [|java:util:concurrent:ConcurrentHashMap.ensureSegment|](v15, v0) @signature [|Ljava/util/concurrent/ConcurrentHashMap;.ensureSegment:(I)Ljava/util/concurrent/ConcurrentHashMap$Segment;|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap|] @type direct;
#L12958a.   v4:= temp  @type object;
#L12958c.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.lock|](v4) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.lock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L129592.   v11:= v4.[|java:util:concurrent:ConcurrentHashMap$Segment.count|] ;
#L129596.   v11:= (long)v11  @type i2l;
#L129598.   v7:= v7 + v11  @type long;
#L12959a.   v0:= v0 + 1;
#L12959e.   goto L129580;
#L1295a0.   v0:= 0  @length 4;
#L1295a2.   if v0 >= v5 then goto L1295b6;
#L1295a6.   v11:= v6[v0]  @type object;
#L1295aa.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Segment.unlock|](v11) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Segment;.unlock:()V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Segment|] @type virtual;
#L1295b0.   v0:= v0 + 1;
#L1295b4.   goto L1295a2;
#L1295b6.   v11:= 31  @length 16;
#L1295ba.   v11:= v7 ^>> v11  @type long;
#L1295be.   v13:= 0  @length wide16;
#L1295c2.   v11:= cmp(v11,v13);
#L1295c6.   if v11 != 0 then goto L1295ce;
#L1295ca.   v11:= (int)v7  @type l2i;
#L1295cc.   goto L129568;
#L1295ce.    v11:= nan;
#L1295d4.   goto L129568;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:ConcurrentHashMap.values|] ([|java:util:concurrent:ConcurrentHashMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentHashMap|] @signature [|Ljava/util/concurrent/ConcurrentHashMap;.values:()Ljava/util/Collection;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L1295e8.   v0:= v1.[|java:util:concurrent:ConcurrentHashMap.values|]   @type object;
#L1295ec.   if v0 == 0 then goto L1295f2;
#L1295f0.   return v0  @type object;
#L1295f2.   v0:= new [|java:util:concurrent:ConcurrentHashMap$Values|];
#L1295f6.   call temp:=  [|java:util:concurrent:ConcurrentHashMap$Values.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentHashMap$Values;.<init>:(Ljava/util/concurrent/ConcurrentHashMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentHashMap$Values|] @type direct;
#L1295fc.   v1.[|java:util:concurrent:ConcurrentHashMap.values|]  := v0 @type object;
#L129600.   goto L1295f0;

   }
record [|java:util:concurrent:ConcurrentLinkedDeque$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|]  @type class @AccessFlag ABSTRACT extends  [|java:util:Iterator|] {
      [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.lastRet|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextItem|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextNode|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:ConcurrentLinkedDeque|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.<init>|] ([|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] v0 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L129614.   v0.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.this$0|]  := v1 @type object;
#L129618.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12961e.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.advance|](v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @type direct;
#L129624.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.advance|] ([|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.advance:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129638.   v3:= 0  @length 4;
#L12963a.   v2:= v4.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextNode|]   @type object;
#L12963e.   v4.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.lastRet|]  := v2 @type object;
#L129642.   v2:= v4.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextNode|]   @type object;
#L129646.   if v2 != 0 then goto L129660;
#L12964a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.startNode|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.startNode:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @type virtual;
#L129650.   v1:= temp  @type object;
#L129652.   if v1 != 0 then goto L12966e;
#L129656.   v4.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextNode|]  := v3 @type object;
#L12965a.   v4.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextItem|]  := v3 @type object;
#L12965e.   return @void ;
#L129660.   v2:= v4.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextNode|]   @type object;
#L129664.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextNode|](v4, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.nextNode:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @type virtual;
#L12966a.   v1:= temp  @type object;
#L12966c.   goto L129652;
#L12966e.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129672.   if v0 == 0 then goto L129680;
#L129676.   v4.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextNode|]  := v1 @type object;
#L12967a.   v4.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextItem|]  := v0 @type object;
#L12967e.   goto L12965e;
#L129680.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextNode|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.nextNode:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @type virtual;
#L129686.   v1:= temp  @type object;
#L129688.   goto L129652;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.hasNext|] ([|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.hasNext:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12969c.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextItem|]   @type object;
#L1296a0.   if v0 == 0 then goto L1296a8;
#L1296a4.   v0:= 1  @length 4;
#L1296a6.   return v0;
#L1296a8.   v0:= 0  @length 4;
#L1296aa.   goto L1296a6;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.next|] ([|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L1296bc.   v0:= v2.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextItem|]   @type object;
#L1296c0.   if v0 != 0 then goto L1296d0;
#L1296c4.   v1:= new [|java:util:NoSuchElementException|];
#L1296c8.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L1296ce.   throw v1;
#L1296d0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.advance|](v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @type direct;
#L1296d6.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.nextNode|] ([|java:util:concurrent:ConcurrentLinkedDeque$Node|] v0 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.nextNode:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.remove|] ([|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.remove:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L1296e8.   v2:= 0  @length 4;
#L1296ea.   v0:= v3.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.lastRet|]   @type object;
#L1296ee.   if v0 != 0 then goto L1296fe;
#L1296f2.   v1:= new [|java:lang:IllegalStateException|];
#L1296f6.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1296fc.   throw v1;
#L1296fe.   v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]  := v2 @type object;
#L129702.   v1:= v3.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.this$0|]   @type object;
#L129706.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.unlink|](v1, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlink:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12970c.   v3.[|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.lastRet|]  := v2 @type object;
#L129710.   return @void ;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.startNode|] () @owner [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.startNode:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|]  @type class @AccessFlag   extends [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] {
      [|java:util:concurrent:ConcurrentLinkedDeque|] [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.<init>|] ([|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] v0 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$DescendingItr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L129724.   v0.[|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.this$0|]  := v1 @type object;
#L129728.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @type direct;
#L12972e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.<init>|] ([|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] v0 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (object), [|java:util:concurrent:ConcurrentLinkedDeque$1|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$DescendingItr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;Ljava/util/concurrent/ConcurrentLinkedDeque$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L129740.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$DescendingItr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] @type direct;
#L129746.   return @void ;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.nextNode|] ([|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] v1 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$DescendingItr;.nextNode:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access  {
      local temp ;
        v0;
      
#L129758.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.this$0|]   @type object;
#L12975c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.pred|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pred:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L129762.   v0:= temp  @type object;
#L129764.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.startNode|] ([|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$DescendingItr;.startNode:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access  {
      local temp ;
        v0;
      
#L129778.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.this$0|]   @type object;
#L12977c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.last|](v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.last:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L129782.   v0:= temp  @type object;
#L129784.   return v0  @type object;

   }
record [|java:util:concurrent:ConcurrentLinkedDeque$Itr|]  @type class @AccessFlag   extends [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] {
      [|java:util:concurrent:ConcurrentLinkedDeque|] [|java:util:concurrent:ConcurrentLinkedDeque$Itr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$Itr.<init>|] ([|java:util:concurrent:ConcurrentLinkedDeque$Itr|] v0 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Itr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Itr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;
      
#L129798.   v0.[|java:util:concurrent:ConcurrentLinkedDeque$Itr.this$0|]  := v1 @type object;
#L12979c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$AbstractItr|] @type direct;
#L1297a2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$Itr.<init>|] ([|java:util:concurrent:ConcurrentLinkedDeque$Itr|] v0 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (object), [|java:util:concurrent:ConcurrentLinkedDeque$1|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Itr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Itr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;Ljava/util/concurrent/ConcurrentLinkedDeque$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;
      
#L1297b4.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Itr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Itr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Itr|] @type direct;
#L1297ba.   return @void ;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$Itr.nextNode|] ([|java:util:concurrent:ConcurrentLinkedDeque$Itr|] v1 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Itr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Itr;.nextNode:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access  {
      local temp ;
        v0;
      
#L1297cc.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Itr.this$0|]   @type object;
#L1297d0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.succ|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.succ:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L1297d6.   v0:= temp  @type object;
#L1297d8.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$Itr.startNode|] ([|java:util:concurrent:ConcurrentLinkedDeque$Itr|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Itr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Itr;.startNode:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access  {
      local temp ;
        v0;
      
#L1297ec.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Itr.this$0|]   @type object;
#L1297f0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.first|](v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L1297f6.   v0:= temp  @type object;
#L1297f8.   return v0  @type object;

   }
record [|java:util:concurrent:ConcurrentLinkedDeque$Node|]  @type class @AccessFlag FINAL  {
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]    @AccessFlag VOLATILE;
      [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]    @AccessFlag VOLATILE;
      [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]    @AccessFlag VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.itemOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.nextOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.prevOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.<clinit>|] () @owner [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12980c.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L129812.   v2:= temp  @type object;
#L129814.   @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|] := v2  @type object;
#L129818.   v1:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L12981c.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]   @type object;
#L129820.   v3:= "prev" @type (object, string);
#L129824.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12982a.   v3:= temp  @type object;
#L12982c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L129832.   v2:= temp  @type wide;
#L129834.   @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.prevOffset|] := v2  @wide;
#L129838.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]   @type object;
#L12983c.   v3:= "item" @type (object, string);
#L129840.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L129846.   v3:= temp  @type object;
#L129848.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12984e.   v2:= temp  @type wide;
#L129850.   @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.itemOffset|] := v2  @wide;
#L129854.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]   @type object;
#L129858.   v3:= "next" @type (object, string);
#L12985c.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L129862.   v3:= temp  @type object;
#L129864.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12986a.   v2:= temp  @type wide;
#L12986c.   @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.nextOffset|] := v2  @wide;
#L129870.   return @void ;
#L129872.   v0:= Exception  @type object;
#L129874.   v2:= new [|java:lang:Error|];
#L129878.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L12987e.   throw v2;
  catch  [|java:lang:Exception|] @[L12980c..L129870] goto L129872;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|] ([|java:util:concurrent:ConcurrentLinkedDeque$Node|] v0 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
      
#L1298a0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1298a6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|] ([|java:util:concurrent:ConcurrentLinkedDeque$Node|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:(Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L1298b8.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1298be.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]   @type object;
#L1298c2.   v1:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.itemOffset|]   @wide;
#L1298c6.   call temp:=  [|sun:misc:Unsafe.putObject|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1298cc.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.casItem|] ([|java:util:concurrent:ConcurrentLinkedDeque$Node|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1298e0.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]   @type object;
#L1298e4.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.itemOffset|]   @wide;
#L1298e8.   v1:= v6  @type object;
#L1298ea.   v4:= v7  @type object;
#L1298ec.   v5:= v8  @type object;
#L1298ee.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1298f4.   v0:= temp;
#L1298f6.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.casNext|] ([|java:util:concurrent:ConcurrentLinkedDeque$Node|] v6 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v7 @type (object), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L129908.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]   @type object;
#L12990c.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.nextOffset|]   @wide;
#L129910.   v1:= v6  @type object;
#L129912.   v4:= v7  @type object;
#L129914.   v5:= v8  @type object;
#L129916.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12991c.   v0:= temp;
#L12991e.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.casPrev|] ([|java:util:concurrent:ConcurrentLinkedDeque$Node|] v6 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v7 @type (object), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L129930.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]   @type object;
#L129934.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.prevOffset|]   @wide;
#L129938.   v1:= v6  @type object;
#L12993a.   v4:= v7  @type object;
#L12993c.   v5:= v8  @type object;
#L12993e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L129944.   v0:= temp;
#L129946.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetNext|] ([|java:util:concurrent:ConcurrentLinkedDeque$Node|] v3 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L129958.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]   @type object;
#L12995c.   v1:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.nextOffset|]   @wide;
#L129960.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L129966.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|] ([|java:util:concurrent:ConcurrentLinkedDeque$Node|] v3 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L129978.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.UNSAFE|]   @type object;
#L12997c.   v1:= @@[|java:util:concurrent:ConcurrentLinkedDeque$Node.prevOffset|]   @wide;
#L129980.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L129986.   return @void ;

   }
record [|java:util:concurrent:ConcurrentLinkedDeque|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractCollection|], [|java:util:Deque|], [|java:io:Serializable|] {
      [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque.head|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
      [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque.tail|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
   }
      global [|int|] @@[|java:util:concurrent:ConcurrentLinkedDeque.HOPS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @@[|java:util:concurrent:ConcurrentLinkedDeque.NEXT_TERMINATOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @@[|java:util:concurrent:ConcurrentLinkedDeque.PREV_TERMINATOR|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentLinkedDeque.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedDeque.headOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedDeque.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedDeque.tailOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.<clinit>|] () @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129998.   v2:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L12999c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L1299a2.   @@[|java:util:concurrent:ConcurrentLinkedDeque.PREV_TERMINATOR|] := v2  @type object;
#L1299a6.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque.PREV_TERMINATOR|]   @type object;
#L1299aa.   v3:= @@[|java:util:concurrent:ConcurrentLinkedDeque.PREV_TERMINATOR|]   @type object;
#L1299ae.   v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]  := v3 @type object;
#L1299b2.   v2:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L1299b6.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L1299bc.   @@[|java:util:concurrent:ConcurrentLinkedDeque.NEXT_TERMINATOR|] := v2  @type object;
#L1299c0.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque.NEXT_TERMINATOR|]   @type object;
#L1299c4.   v3:= @@[|java:util:concurrent:ConcurrentLinkedDeque.NEXT_TERMINATOR|]   @type object;
#L1299c8.   v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]  := v3 @type object;
#L1299cc.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L1299d2.   v2:= temp  @type object;
#L1299d4.   @@[|java:util:concurrent:ConcurrentLinkedDeque.UNSAFE|] := v2  @type object;
#L1299d8.   v1:= new [|java:util:concurrent:ConcurrentLinkedDeque|];
#L1299dc.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque.UNSAFE|]   @type object;
#L1299e0.   v3:= "head" @type (object, string);
#L1299e4.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1299ea.   v3:= temp  @type object;
#L1299ec.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1299f2.   v2:= temp  @type wide;
#L1299f4.   @@[|java:util:concurrent:ConcurrentLinkedDeque.headOffset|] := v2  @wide;
#L1299f8.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque.UNSAFE|]   @type object;
#L1299fc.   v3:= "tail" @type (object, string);
#L129a00.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L129a06.   v3:= temp  @type object;
#L129a08.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L129a0e.   v2:= temp  @type wide;
#L129a10.   @@[|java:util:concurrent:ConcurrentLinkedDeque.tailOffset|] := v2  @wide;
#L129a14.   return @void ;
#L129a16.   v0:= Exception  @type object;
#L129a18.   v2:= new [|java:lang:Error|];
#L129a1c.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L129a22.   throw v2;
  catch  [|java:lang:Exception|] @[L1299cc..L129a14] goto L129a16;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.<init>|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L129a44.   call temp:=  [|java:util:AbstractCollection.<init>|](v2) @signature [|Ljava/util/AbstractCollection;.<init>:()V|] @classDescriptor [|java:util:AbstractCollection|] @type direct;
#L129a4a.   v0:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L129a4e.   v1:= 0  @length 4;
#L129a50.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L129a56.   v2.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]  := v0 @type object;
#L129a5a.   v2.[|java:util:concurrent:ConcurrentLinkedDeque.head|]  := v0 @type object;
#L129a5e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.<init>|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v6 @type (this), [|java:util:Collection|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L129a70.   call temp:=  [|java:util:AbstractCollection.<init>|](v6) @signature [|Ljava/util/AbstractCollection;.<init>:()V|] @classDescriptor [|java:util:AbstractCollection|] @type direct;
#L129a76.   v1:= 0  @length 4;
#L129a78.   v4:= 0  @length 4;
#L129a7a.   call temp:=  [|java:util:Collection.iterator|](v7) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L129a80.   v2:= temp  @type object;
#L129a82.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L129a88.   v5:= temp;
#L129a8a.   if v5 == 0 then goto L129ac0;
#L129a8e.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L129a94.   v0:= temp  @type object;
#L129a96.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.checkNotNull|](v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type static;
#L129a9c.   v3:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L129aa0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v3, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L129aa6.   if v1 != 0 then goto L129ab0;
#L129aaa.   v4:= v3  @type object;
#L129aac.   v1:= v3  @type object;
#L129aae.   goto L129a82;
#L129ab0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetNext|](v4, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129ab6.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|](v3, v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129abc.   v4:= v3  @type object;
#L129abe.   goto L129a82;
#L129ac0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.initHeadTail|](v6, v1, v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.initHeadTail:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129ac6.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.casHead|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v6 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v7 @type (object), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casHead:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L129ad8.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque.UNSAFE|]   @type object;
#L129adc.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque.headOffset|]   @wide;
#L129ae0.   v1:= v6  @type object;
#L129ae2.   v4:= v7  @type object;
#L129ae4.   v5:= v8  @type object;
#L129ae6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L129aec.   v0:= temp;
#L129aee.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.casTail|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v6 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v7 @type (object), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casTail:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L129b00.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque.UNSAFE|]   @type object;
#L129b04.   v2:= @@[|java:util:concurrent:ConcurrentLinkedDeque.tailOffset|]   @wide;
#L129b08.   v1:= v6  @type object;
#L129b0a.   v4:= v7  @type object;
#L129b0c.   v5:= v8  @type object;
#L129b0e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L129b14.   v0:= temp;
#L129b16.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.checkNotNull|] ([|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.checkNotNull:(Ljava/lang/Object;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L129b28.   if v1 != 0 then goto L129b38;
#L129b2c.   v0:= new [|java:lang:NullPointerException|];
#L129b30.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L129b36.   throw v0;
#L129b38.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.initHeadTail|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v2 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v3 @type (object), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.initHeadTail:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L129b4c.   v1:= 0  @length 4;
#L129b4e.   if v3 != v4 then goto L129b62;
#L129b52.   if v3 != 0 then goto L129b6c;
#L129b56.   v4:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L129b5a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L129b60.   v3:= v4  @type object;
#L129b62.   v2.[|java:util:concurrent:ConcurrentLinkedDeque.head|]  := v3 @type object;
#L129b66.   v2.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]  := v4 @type object;
#L129b6a.   return @void ;
#L129b6c.   v0:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L129b70.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L129b76.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetNext|](v4, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129b7c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|](v0, v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129b82.   v4:= v0  @type object;
#L129b84.   goto L129b62;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.linkFirst|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.linkFirst:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L129b98.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.checkNotNull|](v7) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type static;
#L129b9e.   v2:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L129ba2.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v2, v7) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L129ba8.   v0:= v6.[|java:util:concurrent:ConcurrentLinkedDeque.head|]   @type object;
#L129bac.   v3:= v0  @type object;
#L129bae.   v4:= v3.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129bb2.   if v4 == 0 then goto L129bd2;
#L129bb6.   v3:= v4  @type object;
#L129bb8.   v4:= v4.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129bbc.   if v4 == 0 then goto L129bd2;
#L129bc0.   v1:= v6.[|java:util:concurrent:ConcurrentLinkedDeque.head|]   @type object;
#L129bc4.   if v0 == v1 then goto L129bce;
#L129bc8.   v3:= v1  @type object;
#L129bca.   v0:= v1  @type object;
#L129bcc.   goto L129bae;
#L129bce.   v3:= v4  @type object;
#L129bd0.   goto L129bca;
#L129bd2.   v5:= v3.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129bd6.   if v5 == v3 then goto L129ba8;
#L129bda.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetNext|](v2, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129be0.   v5:= 0  @length 4;
#L129be2.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casPrev|](v3, v5, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129be8.   v5:= temp;
#L129bea.   if v5 == 0 then goto L129bae;
#L129bee.   if v3 == v0 then goto L129bf8;
#L129bf2.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.casHead|](v6, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casHead:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129bf8.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.linkLast|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.linkLast:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L129c0c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.checkNotNull|](v7) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type static;
#L129c12.   v0:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L129c16.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v0, v7) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L129c1c.   v3:= v6.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]   @type object;
#L129c20.   v1:= v3  @type object;
#L129c22.   v2:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129c26.   if v2 == 0 then goto L129c46;
#L129c2a.   v1:= v2  @type object;
#L129c2c.   v2:= v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129c30.   if v2 == 0 then goto L129c46;
#L129c34.   v4:= v6.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]   @type object;
#L129c38.   if v3 == v4 then goto L129c42;
#L129c3c.   v1:= v4  @type object;
#L129c3e.   v3:= v4  @type object;
#L129c40.   goto L129c22;
#L129c42.   v1:= v2  @type object;
#L129c44.   goto L129c3e;
#L129c46.   v5:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129c4a.   if v5 == v1 then goto L129c1c;
#L129c4e.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129c54.   v5:= 0  @length 4;
#L129c56.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casNext|](v1, v5, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129c5c.   v5:= temp;
#L129c5e.   if v5 == 0 then goto L129c22;
#L129c62.   if v1 == v3 then goto L129c6c;
#L129c66.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.casTail|](v6, v3, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casTail:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129c6c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.readObject|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this), [|java:io:ObjectInputStream|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129c80.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v5) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L129c86.   v0:= 0  @length 4;
#L129c88.   v3:= 0  @length 4;
#L129c8a.   call temp:=  [|java:io:ObjectInputStream.readObject|](v5) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L129c90.   v1:= temp  @type object;
#L129c92.   if v1 == 0 then goto L129cba;
#L129c96.   v2:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L129c9a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v2, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L129ca0.   if v0 != 0 then goto L129caa;
#L129ca4.   v3:= v2  @type object;
#L129ca6.   v0:= v2  @type object;
#L129ca8.   goto L129c8a;
#L129caa.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetNext|](v3, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129cb0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|](v2, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129cb6.   v3:= v2  @type object;
#L129cb8.   goto L129c8a;
#L129cba.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.initHeadTail|](v4, v0, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.initHeadTail:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129cc0.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.screenNullResult|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
      
#L129cd4.   if v2 != 0 then goto L129ce4;
#L129cd8.   v0:= new [|java:util:NoSuchElementException|];
#L129cdc.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L129ce2.   throw v0;
#L129ce4.   return v2  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.skipDeletedPredecessors|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.skipDeletedPredecessors:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129cf8.   v1:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129cfc.   v0:= v1  @type object;
#L129cfe.   v3:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129d02.   if v3 == 0 then goto L129d18;
#L129d06.   if v1 == v0 then goto L129d16;
#L129d0a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casPrev|](v5, v1, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129d10.   v3:= temp;
#L129d12.   if v3 == 0 then goto L129d28;
#L129d16.   return @void ;
#L129d18.   v2:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129d1c.   if v2 != 0 then goto L129d3a;
#L129d20.   v3:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129d24.   if v3 != v0 then goto L129d06;
#L129d28.   v3:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129d2c.   if v3 != 0 then goto L129cf8;
#L129d30.   v3:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129d34.   if v3 == 0 then goto L129cf8;
#L129d38.   goto L129d16;
#L129d3a.   if v0 == v2 then goto L129d28;
#L129d3e.   v0:= v2  @type object;
#L129d40.   goto L129cfe;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.skipDeletedSuccessors|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.skipDeletedSuccessors:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129d54.   v0:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129d58.   v1:= v0  @type object;
#L129d5a.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129d5e.   if v3 == 0 then goto L129d74;
#L129d62.   if v0 == v1 then goto L129d72;
#L129d66.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casNext|](v5, v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129d6c.   v3:= temp;
#L129d6e.   if v3 == 0 then goto L129d84;
#L129d72.   return @void ;
#L129d74.   v2:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129d78.   if v2 != 0 then goto L129d96;
#L129d7c.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129d80.   if v3 != v1 then goto L129d62;
#L129d84.   v3:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129d88.   if v3 != 0 then goto L129d54;
#L129d8c.   v3:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129d90.   if v3 == 0 then goto L129d54;
#L129d94.   goto L129d72;
#L129d96.   if v1 == v2 then goto L129d84;
#L129d9a.   v1:= v2  @type object;
#L129d9c.   goto L129d5a;

   }
    procedure [|java:util:ArrayList|] [|java:util:concurrent:ConcurrentLinkedDeque.toArrayList|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.toArrayList:()Ljava/util/ArrayList;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L129db0.   v1:= new [|java:util:ArrayList|];
#L129db4.   call temp:=  [|java:util:ArrayList.<init>|](v1) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L129dba.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.first|](v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L129dc0.   v2:= temp  @type object;
#L129dc2.   if v2 == 0 then goto L129dde;
#L129dc6.   v0:= v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129dca.   if v0 == 0 then goto L129dd4;
#L129dce.   call temp:=  [|java:util:ArrayList.add|](v1, v0) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L129dd4.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.succ|](v3, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.succ:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L129dda.   v2:= temp  @type object;
#L129ddc.   goto L129dc2;
#L129dde.   return v1  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.unlinkFirst|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v5 @type (object), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlinkFirst:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129df0.   v0:= 0  @length 4;
#L129df2.   v1:= v6  @type object;
#L129df4.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129df8.   if v3 != 0 then goto L129e04;
#L129dfc.   v2:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129e00.   if v2 != 0 then goto L129e64;
#L129e04.   if v0 == 0 then goto L129e62;
#L129e08.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129e0c.   if v3 == v1 then goto L129e62;
#L129e10.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casNext|](v5, v6, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129e16.   v3:= temp;
#L129e18.   if v3 == 0 then goto L129e62;
#L129e1c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.skipDeletedPredecessors|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.skipDeletedPredecessors:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129e22.   v3:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129e26.   if v3 != 0 then goto L129e62;
#L129e2a.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129e2e.   if v3 == 0 then goto L129e3a;
#L129e32.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129e36.   if v3 == 0 then goto L129e62;
#L129e3a.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129e3e.   if v3 != v5 then goto L129e62;
#L129e42.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.updateHead|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.updateHead:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129e48.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.updateTail|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.updateTail:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129e4e.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetNext|](v0, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129e54.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.prevTerminator|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.prevTerminator:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L129e5a.   v3:= temp  @type object;
#L129e5c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|](v0, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129e62.   return @void ;
#L129e64.   if v1 == v2 then goto L129e62;
#L129e68.   v0:= v1  @type object;
#L129e6a.   v1:= v2  @type object;
#L129e6c.   goto L129df4;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.unlinkLast|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v5 @type (object), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlinkLast:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129e80.   v0:= 0  @length 4;
#L129e82.   v1:= v6  @type object;
#L129e84.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129e88.   if v3 != 0 then goto L129e94;
#L129e8c.   v2:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129e90.   if v2 != 0 then goto L129ef4;
#L129e94.   if v0 == 0 then goto L129ef2;
#L129e98.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129e9c.   if v3 == v1 then goto L129ef2;
#L129ea0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casPrev|](v5, v6, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129ea6.   v3:= temp;
#L129ea8.   if v3 == 0 then goto L129ef2;
#L129eac.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.skipDeletedSuccessors|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.skipDeletedSuccessors:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129eb2.   v3:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129eb6.   if v3 != 0 then goto L129ef2;
#L129eba.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129ebe.   if v3 == 0 then goto L129eca;
#L129ec2.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129ec6.   if v3 == 0 then goto L129ef2;
#L129eca.   v3:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129ece.   if v3 != v5 then goto L129ef2;
#L129ed2.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.updateHead|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.updateHead:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129ed8.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.updateTail|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.updateTail:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129ede.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|](v0, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129ee4.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.nextTerminator|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.nextTerminator:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L129eea.   v3:= temp  @type object;
#L129eec.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetNext|](v0, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L129ef2.   return @void ;
#L129ef4.   if v1 == v2 then goto L129ef2;
#L129ef8.   v0:= v1  @type object;
#L129efa.   v1:= v2  @type object;
#L129efc.   goto L129e84;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.updateHead|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.updateHead:()V|] @Access PRIVATE_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129f10.   v0:= v4.[|java:util:concurrent:ConcurrentLinkedDeque.head|]   @type object;
#L129f14.   v3:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129f18.   if v3 != 0 then goto L129f42;
#L129f1c.   v1:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129f20.   if v1 == 0 then goto L129f42;
#L129f24.   v2:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129f28.   if v2 == 0 then goto L129f36;
#L129f2c.   v1:= v2  @type object;
#L129f2e.   v2:= v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L129f32.   if v2 != 0 then goto L129f44;
#L129f36.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.casHead|](v4, v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casHead:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129f3c.   v3:= temp;
#L129f3e.   if v3 == 0 then goto L129f10;
#L129f42.   return @void ;
#L129f44.   v3:= v4.[|java:util:concurrent:ConcurrentLinkedDeque.head|]   @type object;
#L129f48.   if v0 != v3 then goto L129f10;
#L129f4c.   v1:= v2  @type object;
#L129f4e.   goto L129f24;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.updateTail|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.updateTail:()V|] @Access PRIVATE_FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L129f60.   v2:= v4.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]   @type object;
#L129f64.   v3:= v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129f68.   if v3 != 0 then goto L129f92;
#L129f6c.   v0:= v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129f70.   if v0 == 0 then goto L129f92;
#L129f74.   v1:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129f78.   if v1 == 0 then goto L129f86;
#L129f7c.   v0:= v1  @type object;
#L129f7e.   v1:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L129f82.   if v1 != 0 then goto L129f94;
#L129f86.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.casTail|](v4, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casTail:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L129f8c.   v3:= temp;
#L129f8e.   if v3 == 0 then goto L129f60;
#L129f92.   return @void ;
#L129f94.   v3:= v4.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]   @type object;
#L129f98.   if v2 != v3 then goto L129f60;
#L129f9c.   v0:= v1  @type object;
#L129f9e.   goto L129f74;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.writeObject|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L129fb0.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v4) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L129fb6.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.first|](v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L129fbc.   v1:= temp  @type object;
#L129fbe.   if v1 == 0 then goto L129fda;
#L129fc2.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L129fc6.   if v0 == 0 then goto L129fd0;
#L129fca.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L129fd0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.succ|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.succ:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L129fd6.   v1:= temp  @type object;
#L129fd8.   goto L129fbe;
#L129fda.   v2:= 0  @length 4;
#L129fdc.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L129fe2.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.add|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L129ff4.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.offerLast|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.offerLast:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L129ffa.   v0:= temp;
#L129ffc.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.addAll|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v10 @type (this), [|java:util:Collection|] v11 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L12a010.   if v11 != v10 then goto L12a020;
#L12a014.   v9:= new [|java:lang:IllegalArgumentException|];
#L12a018.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v9) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12a01e.   throw v9;
#L12a020.   v0:= 0  @length 4;
#L12a022.   v3:= 0  @length 4;
#L12a024.   call temp:=  [|java:util:Collection.iterator|](v11) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L12a02a.   v2:= temp  @type object;
#L12a02c.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12a032.   v9:= temp;
#L12a034.   if v9 == 0 then goto L12a06a;
#L12a038.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12a03e.   v1:= temp  @type object;
#L12a040.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.checkNotNull|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type static;
#L12a046.   v4:= new [|java:util:concurrent:ConcurrentLinkedDeque$Node|];
#L12a04a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.<init>|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type direct;
#L12a050.   if v0 != 0 then goto L12a05a;
#L12a054.   v3:= v4  @type object;
#L12a056.   v0:= v4  @type object;
#L12a058.   goto L12a02c;
#L12a05a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetNext|](v3, v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a060.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|](v4, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a066.   v3:= v4  @type object;
#L12a068.   goto L12a02c;
#L12a06a.   if v0 != 0 then goto L12a07a;
#L12a06e.   v9:= 0  @length 4;
#L12a070.   return v9;
#L12a072.   v9:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L12a076.   if v9 != v5 then goto L12a0a4;
#L12a07a.   v7:= v10.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]   @type object;
#L12a07e.   v5:= v7  @type object;
#L12a080.   v6:= v5.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a084.   if v6 == 0 then goto L12a072;
#L12a088.   v5:= v6  @type object;
#L12a08a.   v6:= v6.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a08e.   if v6 == 0 then goto L12a072;
#L12a092.   v8:= v10.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]   @type object;
#L12a096.   if v7 == v8 then goto L12a0a0;
#L12a09a.   v5:= v8  @type object;
#L12a09c.   v7:= v8  @type object;
#L12a09e.   goto L12a080;
#L12a0a0.   v5:= v6  @type object;
#L12a0a2.   goto L12a09c;
#L12a0a4.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|](v0, v5) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a0aa.   v9:= 0  @length 4;
#L12a0ac.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casNext|](v5, v9, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a0b2.   v9:= temp;
#L12a0b4.   if v9 == 0 then goto L12a080;
#L12a0b8.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.casTail|](v10, v7, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casTail:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a0be.   v9:= temp;
#L12a0c0.   if v9 != 0 then goto L12a0d6;
#L12a0c4.   v7:= v10.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]   @type object;
#L12a0c8.   v9:= v3.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a0cc.   if v9 != 0 then goto L12a0d6;
#L12a0d0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.casTail|](v10, v7, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casTail:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a0d6.   v9:= 1  @length 4;
#L12a0d8.   goto L12a070;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.addFirst|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.addFirst:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
      
#L12a0ec.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.linkFirst|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.linkFirst:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a0f2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.addLast|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.addLast:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
      
#L12a104.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.linkLast|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.linkLast:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a10a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.clear|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a11c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.pollFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pollFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a122.   v0:= temp  @type object;
#L12a124.   if v0 != 0 then goto L12a11c;
#L12a128.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.contains|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12a13c.   v2:= 0  @length 4;
#L12a13e.   if v5 != 0 then goto L12a144;
#L12a142.   return v2;
#L12a144.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.first|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a14a.   v1:= temp  @type object;
#L12a14c.   if v1 == 0 then goto L12a142;
#L12a150.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a154.   if v0 == 0 then goto L12a168;
#L12a158.   call temp:=  [|java:lang:Object.equals|](v5, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12a15e.   v3:= temp;
#L12a160.   if v3 == 0 then goto L12a168;
#L12a164.   v2:= 1  @length 4;
#L12a166.   goto L12a142;
#L12a168.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.succ|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.succ:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a16e.   v1:= temp  @type object;
#L12a170.   goto L12a14c;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentLinkedDeque.descendingIterator|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.descendingIterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12a184.   v0:= new [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|];
#L12a188.   v1:= 0  @length 4;
#L12a18a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr.<init>|](v0, v2, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$DescendingItr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;Ljava/util/concurrent/ConcurrentLinkedDeque$1;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$DescendingItr|] @type direct;
#L12a190.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.element|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.element:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a1a4.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.getFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.getFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a1aa.   v0:= temp  @type object;
#L12a1ac.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque.first|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v5 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12a1c0.   v0:= v5.[|java:util:concurrent:ConcurrentLinkedDeque.head|]   @type object;
#L12a1c4.   v2:= v0  @type object;
#L12a1c6.   v3:= v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L12a1ca.   if v3 == 0 then goto L12a1ea;
#L12a1ce.   v2:= v3  @type object;
#L12a1d0.   v3:= v3.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L12a1d4.   if v3 == 0 then goto L12a1ea;
#L12a1d8.   v1:= v5.[|java:util:concurrent:ConcurrentLinkedDeque.head|]   @type object;
#L12a1dc.   if v0 == v1 then goto L12a1e6;
#L12a1e0.   v2:= v1  @type object;
#L12a1e2.   v0:= v1  @type object;
#L12a1e4.   goto L12a1c6;
#L12a1e6.   v2:= v3  @type object;
#L12a1e8.   goto L12a1e2;
#L12a1ea.   if v2 == v0 then goto L12a1fa;
#L12a1ee.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.casHead|](v5, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casHead:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a1f4.   v4:= temp;
#L12a1f6.   if v4 == 0 then goto L12a1c0;
#L12a1fa.   return v2  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.getFirst|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.getFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a20c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.peekFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.peekFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a212.   v0:= temp  @type object;
#L12a214.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.screenNullResult|](v1, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a21a.   v0:= temp  @type object;
#L12a21c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.getLast|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.getLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a230.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.peekLast|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.peekLast:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a236.   v0:= temp  @type object;
#L12a238.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.screenNullResult|](v1, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a23e.   v0:= temp  @type object;
#L12a240.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.isEmpty|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a254.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.peekFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.peekFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a25a.   v0:= temp  @type object;
#L12a25c.   if v0 != 0 then goto L12a264;
#L12a260.   v0:= 1  @length 4;
#L12a262.   return v0;
#L12a264.   v0:= 0  @length 4;
#L12a266.   goto L12a262;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentLinkedDeque.iterator|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12a278.   v0:= new [|java:util:concurrent:ConcurrentLinkedDeque$Itr|];
#L12a27c.   v1:= 0  @length 4;
#L12a27e.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Itr.<init>|](v0, v2, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Itr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedDeque;Ljava/util/concurrent/ConcurrentLinkedDeque$1;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Itr|] @type direct;
#L12a284.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque.last|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v5 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.last:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12a298.   v2:= v5.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]   @type object;
#L12a29c.   v0:= v2  @type object;
#L12a29e.   v1:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a2a2.   if v1 == 0 then goto L12a2c2;
#L12a2a6.   v0:= v1  @type object;
#L12a2a8.   v1:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a2ac.   if v1 == 0 then goto L12a2c2;
#L12a2b0.   v3:= v5.[|java:util:concurrent:ConcurrentLinkedDeque.tail|]   @type object;
#L12a2b4.   if v2 == v3 then goto L12a2be;
#L12a2b8.   v0:= v3  @type object;
#L12a2ba.   v2:= v3  @type object;
#L12a2bc.   goto L12a29e;
#L12a2be.   v0:= v1  @type object;
#L12a2c0.   goto L12a2ba;
#L12a2c2.   if v0 == v2 then goto L12a2d2;
#L12a2c6.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.casTail|](v5, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.casTail:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a2cc.   v4:= temp;
#L12a2ce.   if v4 == 0 then goto L12a298;
#L12a2d2.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque.nextTerminator|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.nextTerminator:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access  {
      local temp ;
        v0;
      
#L12a2e4.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque.NEXT_TERMINATOR|]   @type object;
#L12a2e8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.offer|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a2fc.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.offerLast|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.offerLast:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a302.   v0:= temp;
#L12a304.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.offerFirst|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.offerFirst:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a318.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.linkFirst|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.linkFirst:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a31e.   v0:= 1  @length 4;
#L12a320.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.offerLast|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.offerLast:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a334.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.linkLast|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.linkLast:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a33a.   v0:= 1  @length 4;
#L12a33c.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.peek|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.peek:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a350.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.peekFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.peekFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a356.   v0:= temp  @type object;
#L12a358.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.peekFirst|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.peekFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12a36c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.first|](v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a372.   v1:= temp  @type object;
#L12a374.   if v1 == 0 then goto L12a38c;
#L12a378.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a37c.   if v0 == 0 then goto L12a382;
#L12a380.   return v0  @type object;
#L12a382.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.succ|](v2, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.succ:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a388.   v1:= temp  @type object;
#L12a38a.   goto L12a374;
#L12a38c.   v0:= 0  @length 4;
#L12a38e.   goto L12a380;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.peekLast|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.peekLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12a3a0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.last|](v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.last:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a3a6.   v1:= temp  @type object;
#L12a3a8.   if v1 == 0 then goto L12a3c0;
#L12a3ac.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a3b0.   if v0 == 0 then goto L12a3b6;
#L12a3b4.   return v0  @type object;
#L12a3b6.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.pred|](v2, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pred:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a3bc.   v1:= temp  @type object;
#L12a3be.   goto L12a3a8;
#L12a3c0.   v0:= 0  @length 4;
#L12a3c2.   goto L12a3b4;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.poll|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.poll:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a3d4.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.pollFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pollFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a3da.   v0:= temp  @type object;
#L12a3dc.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.pollFirst|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pollFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12a3f0.   v2:= 0  @length 4;
#L12a3f2.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.first|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a3f8.   v1:= temp  @type object;
#L12a3fa.   if v1 == 0 then goto L12a424;
#L12a3fe.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a402.   if v0 == 0 then goto L12a41a;
#L12a406.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casItem|](v1, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a40c.   v3:= temp;
#L12a40e.   if v3 == 0 then goto L12a41a;
#L12a412.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.unlink|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlink:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a418.   return v0  @type object;
#L12a41a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.succ|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.succ:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a420.   v1:= temp  @type object;
#L12a422.   goto L12a3fa;
#L12a424.   v0:= v2  @type object;
#L12a426.   goto L12a418;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.pollLast|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pollLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12a438.   v2:= 0  @length 4;
#L12a43a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.last|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.last:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a440.   v1:= temp  @type object;
#L12a442.   if v1 == 0 then goto L12a46c;
#L12a446.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a44a.   if v0 == 0 then goto L12a462;
#L12a44e.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casItem|](v1, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a454.   v3:= temp;
#L12a456.   if v3 == 0 then goto L12a462;
#L12a45a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.unlink|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlink:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a460.   return v0  @type object;
#L12a462.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.pred|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pred:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a468.   v1:= temp  @type object;
#L12a46a.   goto L12a442;
#L12a46c.   v0:= v2  @type object;
#L12a46e.   goto L12a460;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.pop|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pop:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a480.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.removeFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.removeFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a486.   v0:= temp  @type object;
#L12a488.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque.pred|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pred:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access FINAL {
      local temp ;
        v0;
      
#L12a49c.   v0:= v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L12a4a0.   if v2 != v0 then goto L12a4ac;
#L12a4a4.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.last|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.last:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a4aa.   v0:= temp  @type object;
#L12a4ac.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque.prevTerminator|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.prevTerminator:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access  {
      local temp ;
        v0;
      
#L12a4c0.   v0:= @@[|java:util:concurrent:ConcurrentLinkedDeque.PREV_TERMINATOR|]   @type object;
#L12a4c4.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.push|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.push:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;
      
#L12a4d8.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.addFirst|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.addFirst:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a4de.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.remove|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.remove:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a4f0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.removeFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.removeFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a4f6.   v0:= temp  @type object;
#L12a4f8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.remove|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a50c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.removeFirstOccurrence|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.removeFirstOccurrence:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a512.   v0:= temp;
#L12a514.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.removeFirst|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.removeFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a528.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.pollFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pollFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a52e.   v0:= temp  @type object;
#L12a530.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.screenNullResult|](v1, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a536.   v0:= temp  @type object;
#L12a538.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.removeFirstOccurrence|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.removeFirstOccurrence:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12a54c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.checkNotNull|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type static;
#L12a552.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.first|](v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a558.   v1:= temp  @type object;
#L12a55a.   if v1 == 0 then goto L12a594;
#L12a55e.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a562.   if v0 == 0 then goto L12a58a;
#L12a566.   call temp:=  [|java:lang:Object.equals|](v4, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12a56c.   v2:= temp;
#L12a56e.   if v2 == 0 then goto L12a58a;
#L12a572.   v2:= 0  @length 4;
#L12a574.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casItem|](v1, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a57a.   v2:= temp;
#L12a57c.   if v2 == 0 then goto L12a58a;
#L12a580.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.unlink|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlink:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a586.   v2:= 1  @length 4;
#L12a588.   return v2;
#L12a58a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.succ|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.succ:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a590.   v1:= temp  @type object;
#L12a592.   goto L12a55a;
#L12a594.   v2:= 0  @length 4;
#L12a596.   goto L12a588;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedDeque.removeLast|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.removeLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a5a8.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.pollLast|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pollLast:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a5ae.   v0:= temp  @type object;
#L12a5b0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.screenNullResult|](v1, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.screenNullResult:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a5b6.   v0:= temp  @type object;
#L12a5b8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedDeque.removeLastOccurrence|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.removeLastOccurrence:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12a5cc.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.checkNotNull|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type static;
#L12a5d2.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.last|](v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.last:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a5d8.   v1:= temp  @type object;
#L12a5da.   if v1 == 0 then goto L12a614;
#L12a5de.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a5e2.   if v0 == 0 then goto L12a60a;
#L12a5e6.   call temp:=  [|java:lang:Object.equals|](v4, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12a5ec.   v2:= temp;
#L12a5ee.   if v2 == 0 then goto L12a60a;
#L12a5f2.   v2:= 0  @length 4;
#L12a5f4.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.casItem|](v1, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a5fa.   v2:= temp;
#L12a5fc.   if v2 == 0 then goto L12a60a;
#L12a600.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.unlink|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlink:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a606.   v2:= 1  @length 4;
#L12a608.   return v2;
#L12a60a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.pred|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.pred:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a610.   v1:= temp  @type object;
#L12a612.   goto L12a5da;
#L12a614.   v2:= 0  @length 4;
#L12a616.   goto L12a608;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentLinkedDeque.size|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12a628.   v0:= 0  @length 4;
#L12a62a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.first|](v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a630.   v1:= temp  @type object;
#L12a632.   if v1 == 0 then goto L12a64c;
#L12a636.   v2:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a63a.   if v2 == 0 then goto L12a64e;
#L12a63e.   v0:= v0 + 1;
#L12a642.    v2:= nan;
#L12a648.   if v0 != v2 then goto L12a64e;
#L12a64c.   return v0;
#L12a64e.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.succ|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.succ:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a654.   v1:= temp  @type object;
#L12a656.   goto L12a632;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedDeque$Node|] [|java:util:concurrent:ConcurrentLinkedDeque.succ|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.succ:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @Access FINAL {
      local temp ;
        v0;
      
#L12a668.   v0:= v2.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a66c.   if v2 != v0 then goto L12a678;
#L12a670.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.first|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.first:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a676.   v0:= temp  @type object;
#L12a678.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentLinkedDeque.toArray|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a68c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.toArrayList|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.toArrayList:()Ljava/util/ArrayList;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a692.   v0:= temp  @type object;
#L12a694.   call temp:=  [|java:util:ArrayList.toArray|](v0) @signature [|Ljava/util/ArrayList;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12a69a.   v0:= temp  @type object;
#L12a69c.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentLinkedDeque.toArray|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v1 @type (this), [|java:lang:Object|][] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a6b0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.toArrayList|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.toArrayList:()Ljava/util/ArrayList;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a6b6.   v0:= temp  @type object;
#L12a6b8.   call temp:=  [|java:util:ArrayList.toArray|](v0, v2) @signature [|Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12a6be.   v0:= temp  @type object;
#L12a6c0.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedDeque.unlink|] ([|java:util:concurrent:ConcurrentLinkedDeque|] v10 @type (this), [|java:util:concurrent:ConcurrentLinkedDeque$Node|] v11 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedDeque|] @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlink:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L12a6d4.   v7:= v11.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L12a6d8.   v5:= v11.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a6dc.   if v7 != 0 then goto L12a6e8;
#L12a6e0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.unlinkFirst|](v10, v11, v5) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlinkFirst:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a6e6.   return @void ;
#L12a6e8.   if v5 != 0 then goto L12a6f4;
#L12a6ec.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.unlinkLast|](v10, v11, v7) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.unlinkLast:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a6f2.   goto L12a6e6;
#L12a6f4.   v2:= 1  @length 4;
#L12a6f6.   v6:= v7  @type object;
#L12a6f8.   v9:= v6.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a6fc.   if v9 == 0 then goto L12a78e;
#L12a700.   v0:= v6  @type object;
#L12a702.   v3:= 0  @length 4;
#L12a704.   v6:= v5  @type object;
#L12a706.   v9:= v6.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a70a.   if v9 == 0 then goto L12a7b0;
#L12a70e.   v1:= v6  @type object;
#L12a710.   v4:= 0  @length 4;
#L12a712.   v9:= 2  @length 4;
#L12a714.   if v2 >= v9 then goto L12a720;
#L12a718.   v9:= v3 ^| v4  @type int;
#L12a71c.   if v9 != 0 then goto L12a6e6;
#L12a720.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.skipDeletedSuccessors|](v10, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.skipDeletedSuccessors:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a726.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.skipDeletedPredecessors|](v10, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.skipDeletedPredecessors:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a72c.   v9:= v3 ^| v4  @type int;
#L12a730.   if v9 == 0 then goto L12a6e6;
#L12a734.   v9:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a738.   if v9 != v1 then goto L12a6e6;
#L12a73c.   v9:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L12a740.   if v9 != v0 then goto L12a6e6;
#L12a744.   if v3 == 0 then goto L12a7d2;
#L12a748.   v9:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L12a74c.   if v9 != 0 then goto L12a6e6;
#L12a750.   if v4 == 0 then goto L12a7dc;
#L12a754.   v9:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a758.   if v9 != 0 then goto L12a6e6;
#L12a75c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.updateHead|](v10) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.updateHead:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a762.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.updateTail|](v10) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.updateTail:()V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type direct;
#L12a768.   if v3 == 0 then goto L12a7e6;
#L12a76c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.prevTerminator|](v10) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.prevTerminator:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a772.   v9:= temp  @type object;
#L12a774.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetPrev|](v11, v9) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a77a.   if v4 == 0 then goto L12a7ea;
#L12a77e.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque.nextTerminator|](v10) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque;.nextTerminator:()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque|] @type virtual;
#L12a784.   v9:= temp  @type object;
#L12a786.   call temp:=  [|java:util:concurrent:ConcurrentLinkedDeque$Node.lazySetNext|](v11, v9) @signature [|Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedDeque$Node|] @type virtual;
#L12a78c.   goto L12a6e6;
#L12a78e.   v8:= v6.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L12a792.   if v8 != 0 then goto L12a7a4;
#L12a796.   v9:= v6.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a79a.   if v9 == v6 then goto L12a6e6;
#L12a79e.   v0:= v6  @type object;
#L12a7a0.   v3:= 1  @length 4;
#L12a7a2.   goto L12a704;
#L12a7a4.   if v6 == v8 then goto L12a6e6;
#L12a7a8.   v6:= v8  @type object;
#L12a7aa.   v2:= v2 + 1;
#L12a7ae.   goto L12a6f8;
#L12a7b0.   v8:= v6.[|java:util:concurrent:ConcurrentLinkedDeque$Node.next|]   @type object;
#L12a7b4.   if v8 != 0 then goto L12a7c6;
#L12a7b8.   v9:= v6.[|java:util:concurrent:ConcurrentLinkedDeque$Node.prev|]   @type object;
#L12a7bc.   if v9 == v6 then goto L12a6e6;
#L12a7c0.   v1:= v6  @type object;
#L12a7c2.   v4:= 1  @length 4;
#L12a7c4.   goto L12a712;
#L12a7c6.   if v6 == v8 then goto L12a6e6;
#L12a7ca.   v6:= v8  @type object;
#L12a7cc.   v2:= v2 + 1;
#L12a7d0.   goto L12a706;
#L12a7d2.   v9:= v0.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a7d6.   if v9 == 0 then goto L12a6e6;
#L12a7da.   goto L12a750;
#L12a7dc.   v9:= v1.[|java:util:concurrent:ConcurrentLinkedDeque$Node.item|]   @type object;
#L12a7e0.   if v9 == 0 then goto L12a6e6;
#L12a7e4.   goto L12a75c;
#L12a7e6.   v9:= v11  @type object;
#L12a7e8.   goto L12a774;
#L12a7ea.   v9:= v11  @type object;
#L12a7ec.   goto L12a786;

   }
record [|java:util:concurrent:ConcurrentLinkedQueue$Itr|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
      [|java:util:concurrent:ConcurrentLinkedQueue$Node|] [|java:util:concurrent:ConcurrentLinkedQueue$Itr.lastRet|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextItem|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:ConcurrentLinkedQueue$Node|] [|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextNode|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:ConcurrentLinkedQueue|] [|java:util:concurrent:ConcurrentLinkedQueue$Itr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue$Itr.<init>|] ([|java:util:concurrent:ConcurrentLinkedQueue$Itr|] v0 @type (this), [|java:util:concurrent:ConcurrentLinkedQueue|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue$Itr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Itr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedQueue;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12a800.   v0.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.this$0|]  := v1 @type object;
#L12a804.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12a80a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Itr.advance|](v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Itr;.advance:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Itr|] @type direct;
#L12a810.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedQueue$Itr.advance|] ([|java:util:concurrent:ConcurrentLinkedQueue$Itr|] v8 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue$Itr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Itr;.advance:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L12a824.   v7:= 0  @length 4;
#L12a826.   v5:= v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextNode|]   @type object;
#L12a82a.   v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.lastRet|]  := v5 @type object;
#L12a82e.   v4:= v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextItem|]   @type object;
#L12a832.   v5:= v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextNode|]   @type object;
#L12a836.   if v5 != 0 then goto L12a856;
#L12a83a.   v5:= v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.this$0|]   @type object;
#L12a83e.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.first|](v5) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12a844.   v2:= temp  @type object;
#L12a846.   v3:= 0  @length 4;
#L12a848.   if v2 != 0 then goto L12a86c;
#L12a84c.   v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextNode|]  := v7 @type object;
#L12a850.   v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextItem|]  := v7 @type object;
#L12a854.   return v4  @type object;
#L12a856.   v3:= v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextNode|]   @type object;
#L12a85a.   v5:= v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.this$0|]   @type object;
#L12a85e.   v6:= v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextNode|]   @type object;
#L12a862.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v5, v6) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12a868.   v2:= temp  @type object;
#L12a86a.   goto L12a848;
#L12a86c.   v0:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12a870.   if v0 == 0 then goto L12a87e;
#L12a874.   v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextNode|]  := v2 @type object;
#L12a878.   v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextItem|]  := v0 @type object;
#L12a87c.   goto L12a854;
#L12a87e.   v5:= v8.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.this$0|]   @type object;
#L12a882.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v5, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12a888.   v1:= temp  @type object;
#L12a88a.   if v3 == 0 then goto L12a898;
#L12a88e.   if v1 == 0 then goto L12a898;
#L12a892.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.casNext|](v3, v2, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12a898.   v2:= v1  @type object;
#L12a89a.   goto L12a848;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue$Itr.hasNext|] ([|java:util:concurrent:ConcurrentLinkedQueue$Itr|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue$Itr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Itr;.hasNext:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a8ac.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextNode|]   @type object;
#L12a8b0.   if v0 == 0 then goto L12a8b8;
#L12a8b4.   v0:= 1  @length 4;
#L12a8b6.   return v0;
#L12a8b8.   v0:= 0  @length 4;
#L12a8ba.   goto L12a8b6;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedQueue$Itr.next|] ([|java:util:concurrent:ConcurrentLinkedQueue$Itr|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue$Itr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Itr;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12a8cc.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.nextNode|]   @type object;
#L12a8d0.   if v0 != 0 then goto L12a8e0;
#L12a8d4.   v0:= new [|java:util:NoSuchElementException|];
#L12a8d8.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12a8de.   throw v0;
#L12a8e0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Itr.advance|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Itr;.advance:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Itr|] @type direct;
#L12a8e6.   v0:= temp  @type object;
#L12a8e8.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue$Itr.remove|] ([|java:util:concurrent:ConcurrentLinkedQueue$Itr|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue$Itr|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Itr;.remove:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12a8fc.   v1:= 0  @length 4;
#L12a8fe.   v0:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.lastRet|]   @type object;
#L12a902.   if v0 != 0 then goto L12a912;
#L12a906.   v1:= new [|java:lang:IllegalStateException|];
#L12a90a.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L12a910.   throw v1;
#L12a912.   v0.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]  := v1 @type object;
#L12a916.   v2.[|java:util:concurrent:ConcurrentLinkedQueue$Itr.lastRet|]  := v1 @type object;
#L12a91a.   return @void ;

   }
record [|java:util:concurrent:ConcurrentLinkedQueue$Node|]  @type class @AccessFlag   {
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]    @AccessFlag VOLATILE;
      [|java:util:concurrent:ConcurrentLinkedQueue$Node|] [|java:util:concurrent:ConcurrentLinkedQueue$Node.next|]    @AccessFlag VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.itemOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.nextOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue$Node.<clinit>|] () @owner [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12a92c.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L12a932.   v2:= temp  @type object;
#L12a934.   @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.UNSAFE|] := v2  @type object;
#L12a938.   v1:= new [|java:util:concurrent:ConcurrentLinkedQueue$Node|];
#L12a93c.   v2:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.UNSAFE|]   @type object;
#L12a940.   v3:= "item" @type (object, string);
#L12a944.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12a94a.   v3:= temp  @type object;
#L12a94c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12a952.   v2:= temp  @type wide;
#L12a954.   @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.itemOffset|] := v2  @wide;
#L12a958.   v2:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.UNSAFE|]   @type object;
#L12a95c.   v3:= "next" @type (object, string);
#L12a960.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12a966.   v3:= temp  @type object;
#L12a968.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12a96e.   v2:= temp  @type wide;
#L12a970.   @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.nextOffset|] := v2  @wide;
#L12a974.   return @void ;
#L12a976.   v0:= Exception  @type object;
#L12a978.   v2:= new [|java:lang:Error|];
#L12a97c.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L12a982.   throw v2;
  catch  [|java:lang:Exception|] @[L12a92c..L12a974] goto L12a976;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue$Node.<init>|] ([|java:util:concurrent:ConcurrentLinkedQueue$Node|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.<init>:(Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L12a9a4.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12a9aa.   v0:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.UNSAFE|]   @type object;
#L12a9ae.   v1:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.itemOffset|]   @wide;
#L12a9b2.   call temp:=  [|sun:misc:Unsafe.putObject|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12a9b8.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue$Node.casItem|] ([|java:util:concurrent:ConcurrentLinkedQueue$Node|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12a9cc.   v0:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.UNSAFE|]   @type object;
#L12a9d0.   v2:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.itemOffset|]   @wide;
#L12a9d4.   v1:= v6  @type object;
#L12a9d6.   v4:= v7  @type object;
#L12a9d8.   v5:= v8  @type object;
#L12a9da.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12a9e0.   v0:= temp;
#L12a9e2.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue$Node.casNext|] ([|java:util:concurrent:ConcurrentLinkedQueue$Node|] v6 @type (this), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v7 @type (object), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12a9f4.   v0:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.UNSAFE|]   @type object;
#L12a9f8.   v2:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.nextOffset|]   @wide;
#L12a9fc.   v1:= v6  @type object;
#L12a9fe.   v4:= v7  @type object;
#L12aa00.   v5:= v8  @type object;
#L12aa02.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12aa08.   v0:= temp;
#L12aa0a.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue$Node.lazySetNext|] ([|java:util:concurrent:ConcurrentLinkedQueue$Node|] v3 @type (this), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L12aa1c.   v0:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.UNSAFE|]   @type object;
#L12aa20.   v1:= @@[|java:util:concurrent:ConcurrentLinkedQueue$Node.nextOffset|]   @wide;
#L12aa24.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12aa2a.   return @void ;

   }
record [|java:util:concurrent:ConcurrentLinkedQueue|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractQueue|], [|java:util:Queue|], [|java:io:Serializable|] {
      [|java:util:concurrent:ConcurrentLinkedQueue$Node|] [|java:util:concurrent:ConcurrentLinkedQueue.head|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
      [|java:util:concurrent:ConcurrentLinkedQueue$Node|] [|java:util:concurrent:ConcurrentLinkedQueue.tail|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentLinkedQueue.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedQueue.headOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedQueue.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentLinkedQueue.tailOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue.<clinit>|] () @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12aa3c.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L12aa42.   v2:= temp  @type object;
#L12aa44.   @@[|java:util:concurrent:ConcurrentLinkedQueue.UNSAFE|] := v2  @type object;
#L12aa48.   v1:= new [|java:util:concurrent:ConcurrentLinkedQueue|];
#L12aa4c.   v2:= @@[|java:util:concurrent:ConcurrentLinkedQueue.UNSAFE|]   @type object;
#L12aa50.   v3:= "head" @type (object, string);
#L12aa54.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12aa5a.   v3:= temp  @type object;
#L12aa5c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12aa62.   v2:= temp  @type wide;
#L12aa64.   @@[|java:util:concurrent:ConcurrentLinkedQueue.headOffset|] := v2  @wide;
#L12aa68.   v2:= @@[|java:util:concurrent:ConcurrentLinkedQueue.UNSAFE|]   @type object;
#L12aa6c.   v3:= "tail" @type (object, string);
#L12aa70.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12aa76.   v3:= temp  @type object;
#L12aa78.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12aa7e.   v2:= temp  @type wide;
#L12aa80.   @@[|java:util:concurrent:ConcurrentLinkedQueue.tailOffset|] := v2  @wide;
#L12aa84.   return @void ;
#L12aa86.   v0:= Exception  @type object;
#L12aa88.   v2:= new [|java:lang:Error|];
#L12aa8c.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L12aa92.   throw v2;
  catch  [|java:lang:Exception|] @[L12aa3c..L12aa84] goto L12aa86;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue.<init>|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L12aab4.   call temp:=  [|java:util:AbstractQueue.<init>|](v2) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L12aaba.   v0:= new [|java:util:concurrent:ConcurrentLinkedQueue$Node|];
#L12aabe.   v1:= 0  @length 4;
#L12aac0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type direct;
#L12aac6.   v2.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]  := v0 @type object;
#L12aaca.   v2.[|java:util:concurrent:ConcurrentLinkedQueue.head|]  := v0 @type object;
#L12aace.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue.<init>|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v6 @type (this), [|java:util:Collection|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12aae0.   call temp:=  [|java:util:AbstractQueue.<init>|](v6) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L12aae6.   v1:= 0  @length 4;
#L12aae8.   v4:= 0  @length 4;
#L12aaea.   call temp:=  [|java:util:Collection.iterator|](v7) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L12aaf0.   v2:= temp  @type object;
#L12aaf2.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12aaf8.   v5:= temp;
#L12aafa.   if v5 == 0 then goto L12ab2a;
#L12aafe.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12ab04.   v0:= temp  @type object;
#L12ab06.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.checkNotNull|](v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type static;
#L12ab0c.   v3:= new [|java:util:concurrent:ConcurrentLinkedQueue$Node|];
#L12ab10.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.<init>|](v3, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type direct;
#L12ab16.   if v1 != 0 then goto L12ab20;
#L12ab1a.   v4:= v3  @type object;
#L12ab1c.   v1:= v3  @type object;
#L12ab1e.   goto L12aaf2;
#L12ab20.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.lazySetNext|](v4, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12ab26.   v4:= v3  @type object;
#L12ab28.   goto L12aaf2;
#L12ab2a.   if v1 != 0 then goto L12ab3c;
#L12ab2e.   v4:= new [|java:util:concurrent:ConcurrentLinkedQueue$Node|];
#L12ab32.   v5:= 0  @length 4;
#L12ab34.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.<init>|](v4, v5) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type direct;
#L12ab3a.   v1:= v4  @type object;
#L12ab3c.   v6.[|java:util:concurrent:ConcurrentLinkedQueue.head|]  := v1 @type object;
#L12ab40.   v6.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]  := v4 @type object;
#L12ab44.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue.casHead|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v6 @type (this), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v7 @type (object), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.casHead:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12ab58.   v0:= @@[|java:util:concurrent:ConcurrentLinkedQueue.UNSAFE|]   @type object;
#L12ab5c.   v2:= @@[|java:util:concurrent:ConcurrentLinkedQueue.headOffset|]   @wide;
#L12ab60.   v1:= v6  @type object;
#L12ab62.   v4:= v7  @type object;
#L12ab64.   v5:= v8  @type object;
#L12ab66.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12ab6c.   v0:= temp;
#L12ab6e.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue.casTail|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v6 @type (this), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v7 @type (object), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.casTail:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12ab80.   v0:= @@[|java:util:concurrent:ConcurrentLinkedQueue.UNSAFE|]   @type object;
#L12ab84.   v2:= @@[|java:util:concurrent:ConcurrentLinkedQueue.tailOffset|]   @wide;
#L12ab88.   v1:= v6  @type object;
#L12ab8a.   v4:= v7  @type object;
#L12ab8c.   v5:= v8  @type object;
#L12ab8e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12ab94.   v0:= temp;
#L12ab96.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue.checkNotNull|] ([|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.checkNotNull:(Ljava/lang/Object;)V|] @Access PRIVATE_STATIC {
      local temp ;
        v0;
      
#L12aba8.   if v1 != 0 then goto L12abb8;
#L12abac.   v0:= new [|java:lang:NullPointerException|];
#L12abb0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12abb6.   throw v0;
#L12abb8.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue.readObject|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v5 @type (this), [|java:io:ObjectInputStream|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12abcc.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v6) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12abd2.   v0:= 0  @length 4;
#L12abd4.   v3:= 0  @length 4;
#L12abd6.   call temp:=  [|java:io:ObjectInputStream.readObject|](v6) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12abdc.   v1:= temp  @type object;
#L12abde.   if v1 == 0 then goto L12ac00;
#L12abe2.   v2:= new [|java:util:concurrent:ConcurrentLinkedQueue$Node|];
#L12abe6.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.<init>|](v2, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type direct;
#L12abec.   if v0 != 0 then goto L12abf6;
#L12abf0.   v3:= v2  @type object;
#L12abf2.   v0:= v2  @type object;
#L12abf4.   goto L12abd6;
#L12abf6.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.lazySetNext|](v3, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12abfc.   v3:= v2  @type object;
#L12abfe.   goto L12abd6;
#L12ac00.   if v0 != 0 then goto L12ac12;
#L12ac04.   v3:= new [|java:util:concurrent:ConcurrentLinkedQueue$Node|];
#L12ac08.   v4:= 0  @length 4;
#L12ac0a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.<init>|](v3, v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type direct;
#L12ac10.   v0:= v3  @type object;
#L12ac12.   v5.[|java:util:concurrent:ConcurrentLinkedQueue.head|]  := v0 @type object;
#L12ac16.   v5.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]  := v3 @type object;
#L12ac1a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue.writeObject|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L12ac2c.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v4) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12ac32.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.first|](v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12ac38.   v1:= temp  @type object;
#L12ac3a.   if v1 == 0 then goto L12ac56;
#L12ac3e.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12ac42.   if v0 == 0 then goto L12ac4c;
#L12ac46.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12ac4c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12ac52.   v1:= temp  @type object;
#L12ac54.   goto L12ac3a;
#L12ac56.   v2:= 0  @length 4;
#L12ac58.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12ac5e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue.add|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ac70.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.offer|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.offer:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12ac76.   v0:= temp;
#L12ac78.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue.addAll|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v10 @type (this), [|java:util:Collection|] v11 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L12ac8c.   if v11 != v10 then goto L12ac9c;
#L12ac90.   v9:= new [|java:lang:IllegalArgumentException|];
#L12ac94.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v9) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12ac9a.   throw v9;
#L12ac9c.   v0:= 0  @length 4;
#L12ac9e.   v3:= 0  @length 4;
#L12aca0.   call temp:=  [|java:util:Collection.iterator|](v11) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L12aca6.   v2:= temp  @type object;
#L12aca8.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12acae.   v9:= temp;
#L12acb0.   if v9 == 0 then goto L12ace0;
#L12acb4.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12acba.   v1:= temp  @type object;
#L12acbc.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.checkNotNull|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type static;
#L12acc2.   v4:= new [|java:util:concurrent:ConcurrentLinkedQueue$Node|];
#L12acc6.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.<init>|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type direct;
#L12accc.   if v0 != 0 then goto L12acd6;
#L12acd0.   v3:= v4  @type object;
#L12acd2.   v0:= v4  @type object;
#L12acd4.   goto L12aca8;
#L12acd6.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.lazySetNext|](v3, v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12acdc.   v3:= v4  @type object;
#L12acde.   goto L12aca8;
#L12ace0.   if v0 != 0 then goto L12ace8;
#L12ace4.   v9:= 0  @length 4;
#L12ace6.   return v9;
#L12ace8.   v7:= v10.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]   @type object;
#L12acec.   v5:= v7  @type object;
#L12acee.   v6:= v5.[|java:util:concurrent:ConcurrentLinkedQueue$Node.next|]   @type object;
#L12acf2.   if v6 != 0 then goto L12ad26;
#L12acf6.   v9:= 0  @length 4;
#L12acf8.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.casNext|](v5, v9, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12acfe.   v9:= temp;
#L12ad00.   if v9 == 0 then goto L12acee;
#L12ad04.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.casTail|](v10, v7, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.casTail:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type direct;
#L12ad0a.   v9:= temp;
#L12ad0c.   if v9 != 0 then goto L12ad22;
#L12ad10.   v7:= v10.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]   @type object;
#L12ad14.   v9:= v3.[|java:util:concurrent:ConcurrentLinkedQueue$Node.next|]   @type object;
#L12ad18.   if v9 != 0 then goto L12ad22;
#L12ad1c.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.casTail|](v10, v7, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.casTail:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type direct;
#L12ad22.   v9:= 1  @length 4;
#L12ad24.   goto L12ace6;
#L12ad26.   if v5 != v6 then goto L12ad3e;
#L12ad2a.   v8:= v10.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]   @type object;
#L12ad2e.   if v7 == v8 then goto L12ad38;
#L12ad32.   v5:= v8  @type object;
#L12ad34.   v7:= v8  @type object;
#L12ad36.   goto L12acee;
#L12ad38.   v5:= v10.[|java:util:concurrent:ConcurrentLinkedQueue.head|]   @type object;
#L12ad3c.   goto L12ad34;
#L12ad3e.   if v5 == v7 then goto L12ad52;
#L12ad42.   v8:= v10.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]   @type object;
#L12ad46.   if v7 == v8 then goto L12ad50;
#L12ad4a.   v5:= v8  @type object;
#L12ad4c.   v7:= v8  @type object;
#L12ad4e.   goto L12acee;
#L12ad50.   v7:= v8  @type object;
#L12ad52.   v5:= v6  @type object;
#L12ad54.   goto L12ad4e;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue.contains|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12ad68.   v2:= 0  @length 4;
#L12ad6a.   if v5 != 0 then goto L12ad70;
#L12ad6e.   return v2;
#L12ad70.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.first|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12ad76.   v1:= temp  @type object;
#L12ad78.   if v1 == 0 then goto L12ad6e;
#L12ad7c.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12ad80.   if v0 == 0 then goto L12ad94;
#L12ad84.   call temp:=  [|java:lang:Object.equals|](v5, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12ad8a.   v3:= temp;
#L12ad8c.   if v3 == 0 then goto L12ad94;
#L12ad90.   v2:= 1  @length 4;
#L12ad92.   goto L12ad6e;
#L12ad94.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v4, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12ad9a.   v1:= temp  @type object;
#L12ad9c.   goto L12ad78;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedQueue$Node|] [|java:util:concurrent:ConcurrentLinkedQueue.first|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v5 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12adb0.   v0:= v5.[|java:util:concurrent:ConcurrentLinkedQueue.head|]   @type object;
#L12adb4.   v2:= v0  @type object;
#L12adb6.   v4:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12adba.   if v4 == 0 then goto L12add8;
#L12adbe.   v1:= 1  @length 4;
#L12adc0.   if v1 != 0 then goto L12adcc;
#L12adc4.   v3:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.next|]   @type object;
#L12adc8.   if v3 != 0 then goto L12ade0;
#L12adcc.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.updateHead|](v5, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.updateHead:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12add2.   if v1 == 0 then goto L12addc;
#L12add6.   return v2  @type object;
#L12add8.   v1:= 0  @length 4;
#L12adda.   goto L12adc0;
#L12addc.   v2:= 0  @length 4;
#L12adde.   goto L12add6;
#L12ade0.   if v2 == v3 then goto L12adb0;
#L12ade4.   v2:= v3  @type object;
#L12ade6.   goto L12adb6;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue.isEmpty|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12adf8.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.first|](v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12adfe.   v0:= temp  @type object;
#L12ae00.   if v0 != 0 then goto L12ae08;
#L12ae04.   v0:= 1  @length 4;
#L12ae06.   return v0;
#L12ae08.   v0:= 0  @length 4;
#L12ae0a.   goto L12ae06;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentLinkedQueue.iterator|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ae1c.   v0:= new [|java:util:concurrent:ConcurrentLinkedQueue$Itr|];
#L12ae20.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Itr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Itr;.<init>:(Ljava/util/concurrent/ConcurrentLinkedQueue;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Itr|] @type direct;
#L12ae26.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue.offer|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12ae38.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.checkNotNull|](v7) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.checkNotNull:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type static;
#L12ae3e.   v0:= new [|java:util:concurrent:ConcurrentLinkedQueue$Node|];
#L12ae42.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.<init>|](v0, v7) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type direct;
#L12ae48.   v3:= v6.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]   @type object;
#L12ae4c.   v1:= v3  @type object;
#L12ae4e.   v2:= v1.[|java:util:concurrent:ConcurrentLinkedQueue$Node.next|]   @type object;
#L12ae52.   if v2 != 0 then goto L12ae72;
#L12ae56.   v5:= 0  @length 4;
#L12ae58.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.casNext|](v1, v5, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12ae5e.   v5:= temp;
#L12ae60.   if v5 == 0 then goto L12ae4e;
#L12ae64.   if v1 == v3 then goto L12ae6e;
#L12ae68.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.casTail|](v6, v3, v0) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.casTail:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type direct;
#L12ae6e.   v5:= 1  @length 4;
#L12ae70.   return v5;
#L12ae72.   if v1 != v2 then goto L12ae8a;
#L12ae76.   v4:= v6.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]   @type object;
#L12ae7a.   if v3 == v4 then goto L12ae84;
#L12ae7e.   v1:= v4  @type object;
#L12ae80.   v3:= v4  @type object;
#L12ae82.   goto L12ae4e;
#L12ae84.   v1:= v6.[|java:util:concurrent:ConcurrentLinkedQueue.head|]   @type object;
#L12ae88.   goto L12ae80;
#L12ae8a.   if v1 == v3 then goto L12ae9e;
#L12ae8e.   v4:= v6.[|java:util:concurrent:ConcurrentLinkedQueue.tail|]   @type object;
#L12ae92.   if v3 == v4 then goto L12ae9c;
#L12ae96.   v1:= v4  @type object;
#L12ae98.   v3:= v4  @type object;
#L12ae9a.   goto L12ae4e;
#L12ae9c.   v3:= v4  @type object;
#L12ae9e.   v1:= v2  @type object;
#L12aea0.   goto L12ae9a;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedQueue.peek|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.peek:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12aeb4.   v0:= v4.[|java:util:concurrent:ConcurrentLinkedQueue.head|]   @type object;
#L12aeb8.   v2:= v0  @type object;
#L12aeba.   v1:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12aebe.   if v1 != 0 then goto L12aeca;
#L12aec2.   v3:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.next|]   @type object;
#L12aec6.   if v3 != 0 then goto L12aed2;
#L12aeca.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.updateHead|](v4, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.updateHead:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12aed0.   return v1  @type object;
#L12aed2.   if v2 == v3 then goto L12aeb4;
#L12aed6.   v2:= v3  @type object;
#L12aed8.   goto L12aeba;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentLinkedQueue.poll|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v6 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.poll:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12aeec.   v4:= 0  @length 4;
#L12aeee.   v0:= v6.[|java:util:concurrent:ConcurrentLinkedQueue.head|]   @type object;
#L12aef2.   v2:= v0  @type object;
#L12aef4.   v1:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12aef8.   if v1 == 0 then goto L12af20;
#L12aefc.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.casItem|](v2, v1, v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12af02.   v5:= temp;
#L12af04.   if v5 == 0 then goto L12af20;
#L12af08.   if v2 == v0 then goto L12af1a;
#L12af0c.   v3:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.next|]   @type object;
#L12af10.   if v3 == 0 then goto L12af1c;
#L12af14.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.updateHead|](v6, v0, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.updateHead:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12af1a.   return v1  @type object;
#L12af1c.   v3:= v2  @type object;
#L12af1e.   goto L12af14;
#L12af20.   v3:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.next|]   @type object;
#L12af24.   if v3 != 0 then goto L12af32;
#L12af28.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.updateHead|](v6, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.updateHead:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12af2e.   v1:= v4  @type object;
#L12af30.   goto L12af1a;
#L12af32.   if v2 == v3 then goto L12aeee;
#L12af36.   v2:= v3  @type object;
#L12af38.   goto L12aef4;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentLinkedQueue.remove|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12af4c.   v4:= 0  @length 4;
#L12af4e.   if v7 != 0 then goto L12af54;
#L12af52.   return v4;
#L12af54.   v3:= 0  @length 4;
#L12af56.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.first|](v6) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12af5c.   v2:= temp  @type object;
#L12af5e.   if v2 == 0 then goto L12af52;
#L12af62.   v0:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12af66.   if v0 == 0 then goto L12af9e;
#L12af6a.   call temp:=  [|java:lang:Object.equals|](v7, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12af70.   v5:= temp;
#L12af72.   if v5 == 0 then goto L12af9e;
#L12af76.   v5:= 0  @length 4;
#L12af78.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.casItem|](v2, v0, v5) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12af7e.   v5:= temp;
#L12af80.   if v5 == 0 then goto L12af9e;
#L12af84.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v6, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12af8a.   v1:= temp  @type object;
#L12af8c.   if v3 == 0 then goto L12af9a;
#L12af90.   if v1 == 0 then goto L12af9a;
#L12af94.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.casNext|](v3, v2, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.casNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12af9a.   v4:= 1  @length 4;
#L12af9c.   goto L12af52;
#L12af9e.   v3:= v2  @type object;
#L12afa0.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v6, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12afa6.   v2:= temp  @type object;
#L12afa8.   goto L12af5e;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentLinkedQueue.size|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12afbc.   v0:= 0  @length 4;
#L12afbe.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.first|](v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12afc4.   v1:= temp  @type object;
#L12afc6.   if v1 == 0 then goto L12afe0;
#L12afca.   v2:= v1.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12afce.   if v2 == 0 then goto L12afe2;
#L12afd2.   v0:= v0 + 1;
#L12afd6.    v2:= nan;
#L12afdc.   if v0 != v2 then goto L12afe2;
#L12afe0.   return v0;
#L12afe2.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12afe8.   v1:= temp  @type object;
#L12afea.   goto L12afc6;

   }
    procedure [|java:util:concurrent:ConcurrentLinkedQueue$Node|] [|java:util:concurrent:ConcurrentLinkedQueue.succ|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v1 @type (this), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @Access FINAL {
      local temp ;
        v0;
      
#L12affc.   v0:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.next|]   @type object;
#L12b000.   if v2 != v0 then goto L12b008;
#L12b004.   v0:= v1.[|java:util:concurrent:ConcurrentLinkedQueue.head|]   @type object;
#L12b008.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentLinkedQueue.toArray|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12b01c.   v0:= new [|java:util:ArrayList|];
#L12b020.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L12b026.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.first|](v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12b02c.   v2:= temp  @type object;
#L12b02e.   if v2 == 0 then goto L12b04a;
#L12b032.   v1:= v2.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12b036.   if v1 == 0 then goto L12b040;
#L12b03a.   call temp:=  [|java:util:ArrayList.add|](v0, v1) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12b040.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v4, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12b046.   v2:= temp  @type object;
#L12b048.   goto L12b02e;
#L12b04a.   call temp:=  [|java:util:ArrayList.toArray|](v0) @signature [|Ljava/util/ArrayList;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12b050.   v3:= temp  @type object;
#L12b052.   return v3  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentLinkedQueue.toArray|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v7 @type (this), [|java:lang:Object|][] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12b064.   v2:= 0  @length 4;
#L12b066.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.first|](v7) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12b06c.   v4:= temp  @type object;
#L12b06e.   v3:= v2;
#L12b070.   if v4 == 0 then goto L12b096;
#L12b074.   v6:= v8.length;
#L12b076.   if v3 >= v6 then goto L12b096;
#L12b07a.   v1:= v4.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12b07e.   if v1 == 0 then goto L12b0e0;
#L12b082.   v2:= v3 + 1;
#L12b086.   v8[v3]:= v1  @type object;
#L12b08a.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v7, v4) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12b090.   v4:= temp  @type object;
#L12b092.   v3:= v2;
#L12b094.   goto L12b070;
#L12b096.   if v4 != 0 then goto L12b0a8;
#L12b09a.   v6:= v8.length;
#L12b09c.   if v3 >= v6 then goto L12b0a6;
#L12b0a0.   v6:= 0  @length 4;
#L12b0a2.   v8[v3]:= v6  @type object;
#L12b0a6.   return v8  @type object;
#L12b0a8.   v0:= new [|java:util:ArrayList|];
#L12b0ac.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L12b0b2.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.first|](v7) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.first:()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12b0b8.   v5:= temp  @type object;
#L12b0ba.   if v5 == 0 then goto L12b0d6;
#L12b0be.   v1:= v5.[|java:util:concurrent:ConcurrentLinkedQueue$Node.item|]   @type object;
#L12b0c2.   if v1 == 0 then goto L12b0cc;
#L12b0c6.   call temp:=  [|java:util:ArrayList.add|](v0, v1) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12b0cc.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.succ|](v7, v5) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.succ:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type virtual;
#L12b0d2.   v5:= temp  @type object;
#L12b0d4.   goto L12b0ba;
#L12b0d6.   call temp:=  [|java:util:ArrayList.toArray|](v0, v8) @signature [|Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12b0dc.   v8:= temp  @type object;
#L12b0de.   goto L12b0a6;
#L12b0e0.   v2:= v3;
#L12b0e2.   goto L12b08a;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentLinkedQueue.updateHead|] ([|java:util:concurrent:ConcurrentLinkedQueue|] v1 @type (this), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v2 @type (object), [|java:util:concurrent:ConcurrentLinkedQueue$Node|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentLinkedQueue|] @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.updateHead:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @Access FINAL {
      local temp ;
        v0;
      
#L12b0f4.   if v2 == v3 then goto L12b10a;
#L12b0f8.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue.casHead|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue;.casHead:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue|] @type direct;
#L12b0fe.   v0:= temp;
#L12b100.   if v0 == 0 then goto L12b10a;
#L12b104.   call temp:=  [|java:util:concurrent:ConcurrentLinkedQueue$Node.lazySetNext|](v2, v2) @signature [|Ljava/util/concurrent/ConcurrentLinkedQueue$Node;.lazySetNext:(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentLinkedQueue$Node|] @type virtual;
#L12b10a.   return @void ;

   }
record [|java:util:concurrent:ConcurrentNavigableMap|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:concurrent:ConcurrentMap|], [|java:util:NavigableMap|] {
   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentNavigableMap.descendingKeySet|] () @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.descendingKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentNavigableMap.descendingMap|] () @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.descendingMap:()Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentNavigableMap.headMap|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.headMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentNavigableMap.headMap|] ([|java:lang:Object|] v0 @type (object), [|boolean|] v1) @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentNavigableMap.keySet|] () @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.keySet:()Ljava/util/NavigableSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentNavigableMap.navigableKeySet|] () @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentNavigableMap.subMap|] ([|java:lang:Object|] v0 @type (object), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentNavigableMap.subMap|] ([|java:lang:Object|] v0 @type (object), [|boolean|] v1, [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentNavigableMap.tailMap|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.tailMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentNavigableMap.tailMap|] ([|java:lang:Object|] v0 @type (object), [|boolean|] v1) @owner [|java:util:concurrent:ConcurrentNavigableMap|] @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator|]  @type class @AccessFlag FINAL extends  [|java:lang:Comparable|] {
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator.actualKey|]    @AccessFlag FINAL;
      [|java:util:Comparator|] [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator.cmp|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator|] v0 @type (this), [|java:lang:Object|] v1 @type (object), [|java:util:Comparator|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$ComparableUsingComparator;.<init>:(Ljava/lang/Object;Ljava/util/Comparator;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12b11c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12b122.   v0.[|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator.actualKey|]  := v1 @type object;
#L12b126.   v0.[|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator.cmp|]  := v2 @type object;
#L12b12a.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator.compareTo|] ([|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$ComparableUsingComparator;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12b13c.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator.cmp|]   @type object;
#L12b140.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator.actualKey|]   @type object;
#L12b144.   call temp:=  [|java:util:Comparator.compare|](v0, v1, v3) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L12b14a.   v0:= temp;
#L12b14c.   return v0;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$Iter|]  @type class @AccessFlag ABSTRACT extends  [|java:util:Iterator|] {
      [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$Iter.lastReturned|]    @AccessFlag ;
      [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$Iter.nextValue|]    @AccessFlag ;
      [|java:util:concurrent:ConcurrentSkipListMap|] [|java:util:concurrent:ConcurrentSkipListMap$Iter.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Iter.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$Iter|] v2 @type (this), [|java:util:concurrent:ConcurrentSkipListMap|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Iter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Iter;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L12b160.   v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.this$0|]  := v3 @type object;
#L12b164.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12b16a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findFirst|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12b170.   v1:= temp  @type object;
#L12b172.   v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]  := v1 @type object;
#L12b176.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b17a.   if v1 != 0 then goto L12b180;
#L12b17e.   return @void ;
#L12b180.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b184.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12b188.   if v0 == 0 then goto L12b16a;
#L12b18c.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b190.   if v0 == v1 then goto L12b16a;
#L12b194.   v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.nextValue|]  := v0 @type object;
#L12b198.   goto L12b17e;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Iter.advance|] ([|java:util:concurrent:ConcurrentSkipListMap$Iter|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Iter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Iter;.advance:()V|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L12b1ac.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b1b0.   if v1 != 0 then goto L12b1c0;
#L12b1b4.   v1:= new [|java:util:NoSuchElementException|];
#L12b1b8.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12b1be.   throw v1;
#L12b1c0.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b1c4.   v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.lastReturned|]  := v1 @type object;
#L12b1c8.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b1cc.   v1:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12b1d0.   v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]  := v1 @type object;
#L12b1d4.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b1d8.   if v1 != 0 then goto L12b1de;
#L12b1dc.   return @void ;
#L12b1de.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b1e2.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12b1e6.   if v0 == 0 then goto L12b1c8;
#L12b1ea.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b1ee.   if v0 == v1 then goto L12b1c8;
#L12b1f2.   v2.[|java:util:concurrent:ConcurrentSkipListMap$Iter.nextValue|]  := v0 @type object;
#L12b1f6.   goto L12b1dc;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Iter.hasNext|] ([|java:util:concurrent:ConcurrentSkipListMap$Iter|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Iter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Iter;.hasNext:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L12b208.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Iter.next|]   @type object;
#L12b20c.   if v0 == 0 then goto L12b214;
#L12b210.   v0:= 1  @length 4;
#L12b212.   return v0;
#L12b214.   v0:= 0  @length 4;
#L12b216.   goto L12b212;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Iter.remove|] ([|java:util:concurrent:ConcurrentSkipListMap$Iter|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Iter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Iter;.remove:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12b228.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Iter.lastReturned|]   @type object;
#L12b22c.   if v0 != 0 then goto L12b23c;
#L12b230.   v1:= new [|java:lang:IllegalStateException|];
#L12b234.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L12b23a.   throw v1;
#L12b23c.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Iter.this$0|]   @type object;
#L12b240.   v2:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12b244.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.remove|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12b24a.   v1:= 0  @length 4;
#L12b24c.   v3.[|java:util:concurrent:ConcurrentSkipListMap$Iter.lastReturned|]  := v1 @type object;
#L12b250.   return @void ;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentSkipListMap$Iter|] {
      [|java:util:concurrent:ConcurrentSkipListMap|] [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|] v0 @type (this), [|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntryIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12b264.   v0.[|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.this$0|]  := v1 @type object;
#L12b268.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Iter.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Iter;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Iter|] @type direct;
#L12b26e.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.next|] ([|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntryIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12b280.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.next|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntryIterator;.next:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|] @type virtual;
#L12b286.   v0:= temp  @type object;
#L12b288.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.next|] ([|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntryIterator;.next:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12b29c.   v0:= v4.[|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.next|]   @type object;
#L12b2a0.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.nextValue|]   @type object;
#L12b2a4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.advance|](v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntryIterator;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|] @type virtual;
#L12b2aa.   v2:= new [|java:util:AbstractMap$SimpleImmutableEntry|];
#L12b2ae.   v3:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12b2b2.   call temp:=  [|java:util:AbstractMap$SimpleImmutableEntry.<init>|](v2, v3, v1) @signature [|Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:AbstractMap$SimpleImmutableEntry|] @type direct;
#L12b2b8.   return v2  @type object;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractSet|] {
      [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v0 @type (this), [|java:util:concurrent:ConcurrentNavigableMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12b2cc.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12b2d2.   v0.[|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]  := v1 @type object;
#L12b2d6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.clear|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b2e8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]   @type object;
#L12b2ec.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.clear|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.clear:()V|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b2f2.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.contains|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12b304.   v2:= 0  @length 4;
#L12b306.   v3:= instanceof @varname v6 @type [|java:util:Map$Entry|];
#L12b30a.   if v3 != 0 then goto L12b310;
#L12b30e.   return v2;
#L12b310.   v0:= v6  @type object;
#L12b312.   v0:= ([|java:util:Map$Entry|])v0;
#L12b316.   v3:= v5.[|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]   @type object;
#L12b31a.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12b320.   v4:= temp  @type object;
#L12b322.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.get|](v3, v4) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b328.   v1:= temp  @type object;
#L12b32a.   if v1 == 0 then goto L12b30e;
#L12b32e.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12b334.   v3:= temp  @type object;
#L12b336.   call temp:=  [|java:lang:Object.equals|](v1, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12b33c.   v3:= temp;
#L12b33e.   if v3 == 0 then goto L12b30e;
#L12b342.   v2:= 1  @length 4;
#L12b344.   goto L12b30e;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.equals|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12b358.   v2:= 1  @length 4;
#L12b35a.   v3:= 0  @length 4;
#L12b35c.   if v6 != v5 then goto L12b364;
#L12b360.   v3:= v2;
#L12b362.   return v3;
#L12b364.   v4:= instanceof @varname v6 @type [|java:util:Set|];
#L12b368.   if v4 == 0 then goto L12b362;
#L12b36c.   v0:= v6  @type object;
#L12b36e.   v0:= ([|java:util:Collection|])v0;
#L12b372.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.containsAll|](v5, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.containsAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @type virtual;
#L12b378.   v4:= temp;
#L12b37a.   if v4 == 0 then goto L12b38e;
#L12b37e.   call temp:=  [|java:util:Collection.containsAll|](v0, v5) @signature [|Ljava/util/Collection;.containsAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L12b384.   v4:= temp;
#L12b386.   if v4 == 0 then goto L12b38e;
#L12b38a.   v3:= v2;
#L12b38c.   goto L12b362;
#L12b38e.   v2:= v3;
#L12b390.   goto L12b38a;
#L12b392.   v1:= Exception  @type object;
#L12b394.   goto L12b362;
#L12b396.   v1:= Exception  @type object;
#L12b398.   goto L12b362;
  catch  [|java:lang:ClassCastException|] @[L12b372..L12b384] goto L12b392;
  catch  [|java:lang:NullPointerException|] @[L12b372..L12b384] goto L12b396;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.isEmpty|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b3bc.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]   @type object;
#L12b3c0.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.isEmpty|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b3c6.   v0:= temp;
#L12b3c8.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.iterator|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b3dc.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]   @type object;
#L12b3e0.   v0:= instanceof @varname v0 @type [|java:util:concurrent:ConcurrentSkipListMap|];
#L12b3e4.   if v0 == 0 then goto L12b3fa;
#L12b3e8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]   @type object;
#L12b3ec.   v0:= ([|java:util:concurrent:ConcurrentSkipListMap|])v0;
#L12b3f0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.entryIterator|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.entryIterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12b3f6.   v0:= temp  @type object;
#L12b3f8.   return v0  @type object;
#L12b3fa.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]   @type object;
#L12b3fe.   v0:= ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|])v0;
#L12b402.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.entryIterator|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.entryIterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12b408.   v0:= temp  @type object;
#L12b40a.   goto L12b3f8;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.remove|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12b41c.   v1:= instanceof @varname v5 @type [|java:util:Map$Entry|];
#L12b420.   if v1 != 0 then goto L12b428;
#L12b424.   v1:= 0  @length 4;
#L12b426.   return v1;
#L12b428.   v0:= v5  @type object;
#L12b42a.   v0:= ([|java:util:Map$Entry|])v0;
#L12b42e.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]   @type object;
#L12b432.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12b438.   v2:= temp  @type object;
#L12b43a.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12b440.   v3:= temp  @type object;
#L12b442.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.remove|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b448.   v1:= temp;
#L12b44a.   goto L12b426;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.size|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b45c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$EntrySet.m|]   @type object;
#L12b460.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.size|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.size:()I|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b466.   v0:= temp;
#L12b468.   return v0;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.toArray|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b47c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.toList|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.toList:(Ljava/util/Collection;)Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type static;
#L12b482.   v0:= temp  @type object;
#L12b484.   call temp:=  [|java:util:List.toArray|](v0) @signature [|Ljava/util/List;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L12b48a.   v0:= temp  @type object;
#L12b48c.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.toArray|] ([|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v1 @type (this), [|java:lang:Object|][] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b4a0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.toList|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.toList:(Ljava/util/Collection;)Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type static;
#L12b4a6.   v0:= temp  @type object;
#L12b4a8.   call temp:=  [|java:util:List.toArray|](v0, v2) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L12b4ae.   v0:= temp  @type object;
#L12b4b0.   return v0  @type object;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$Index|]  @type class @AccessFlag   {
      [|java:util:concurrent:ConcurrentSkipListMap$Index|] [|java:util:concurrent:ConcurrentSkipListMap$Index.down|]    @AccessFlag FINAL;
      [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$Index.node|]    @AccessFlag FINAL;
      [|java:util:concurrent:ConcurrentSkipListMap$Index|] [|java:util:concurrent:ConcurrentSkipListMap$Index.right|]    @AccessFlag VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentSkipListMap$Index.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentSkipListMap$Index.rightOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Index.<clinit>|] () @owner [|java:util:concurrent:ConcurrentSkipListMap$Index|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12b4c4.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L12b4ca.   v2:= temp  @type object;
#L12b4cc.   @@[|java:util:concurrent:ConcurrentSkipListMap$Index.UNSAFE|] := v2  @type object;
#L12b4d0.   v1:= new [|java:util:concurrent:ConcurrentSkipListMap$Index|];
#L12b4d4.   v2:= @@[|java:util:concurrent:ConcurrentSkipListMap$Index.UNSAFE|]   @type object;
#L12b4d8.   v3:= "right" @type (object, string);
#L12b4dc.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12b4e2.   v3:= temp  @type object;
#L12b4e4.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12b4ea.   v2:= temp  @type wide;
#L12b4ec.   @@[|java:util:concurrent:ConcurrentSkipListMap$Index.rightOffset|] := v2  @wide;
#L12b4f0.   return @void ;
#L12b4f2.   v0:= Exception  @type object;
#L12b4f4.   v2:= new [|java:lang:Error|];
#L12b4f8.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L12b4fe.   throw v2;
  catch  [|java:lang:Exception|] @[L12b4c4..L12b4f0] goto L12b4f2;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Index.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$Index|] v0 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v2 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Index|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12b520.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12b526.   v0.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]  := v1 @type object;
#L12b52a.   v0.[|java:util:concurrent:ConcurrentSkipListMap$Index.down|]  := v2 @type object;
#L12b52e.   v0.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]  := v3 @type object;
#L12b532.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Index.casRight|] ([|java:util:concurrent:ConcurrentSkipListMap$Index|] v6 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v7 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Index|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.casRight:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12b544.   v0:= @@[|java:util:concurrent:ConcurrentSkipListMap$Index.UNSAFE|]   @type object;
#L12b548.   v2:= @@[|java:util:concurrent:ConcurrentSkipListMap$Index.rightOffset|]   @wide;
#L12b54c.   v1:= v6  @type object;
#L12b54e.   v4:= v7  @type object;
#L12b550.   v5:= v8  @type object;
#L12b552.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12b558.   v0:= temp;
#L12b55a.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Index.indexesDeletedNode|] ([|java:util:concurrent:ConcurrentSkipListMap$Index|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Index|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.indexesDeletedNode:()Z|] @Access FINAL {
      local temp ;
        v0;
      
#L12b56c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]   @type object;
#L12b570.   v0:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12b574.   if v0 != 0 then goto L12b57c;
#L12b578.   v0:= 1  @length 4;
#L12b57a.   return v0;
#L12b57c.   v0:= 0  @length 4;
#L12b57e.   goto L12b57a;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Index.link|] ([|java:util:concurrent:ConcurrentSkipListMap$Index|] v2 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v3 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Index|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.link:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @Access FINAL {
      local temp ;
        v0;
        v1;
      
#L12b590.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]   @type object;
#L12b594.   v4.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]  := v3 @type object;
#L12b598.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12b59c.   if v1 == 0 then goto L12b5b0;
#L12b5a0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.casRight|](v2, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.casRight:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12b5a6.   v1:= temp;
#L12b5a8.   if v1 == 0 then goto L12b5b0;
#L12b5ac.   v1:= 1  @length 4;
#L12b5ae.   return v1;
#L12b5b0.   v1:= 0  @length 4;
#L12b5b2.   goto L12b5ae;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Index.unlink|] ([|java:util:concurrent:ConcurrentSkipListMap$Index|] v1 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Index|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.unlink:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @Access FINAL {
      local temp ;
        v0;
      
#L12b5c4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.indexesDeletedNode|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.indexesDeletedNode:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12b5ca.   v0:= temp;
#L12b5cc.   if v0 != 0 then goto L12b5e4;
#L12b5d0.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12b5d4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.casRight|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.casRight:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12b5da.   v0:= temp;
#L12b5dc.   if v0 == 0 then goto L12b5e4;
#L12b5e0.   v0:= 1  @length 4;
#L12b5e2.   return v0;
#L12b5e4.   v0:= 0  @length 4;
#L12b5e6.   goto L12b5e2;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentSkipListMap$Index|] {
      [|int|] [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v0 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v2 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v3 @type (object), [|int|] v4) @owner [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;I)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12b5f8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.<init>|](v0, v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type direct;
#L12b5fe.   v0.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|]  := v4;
#L12b602.   return @void ;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentSkipListMap$Iter|] {
      [|java:util:concurrent:ConcurrentSkipListMap|] [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$KeyIterator|] v0 @type (this), [|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeyIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12b614.   v0.[|java:util:concurrent:ConcurrentSkipListMap$KeyIterator.this$0|]  := v1 @type object;
#L12b618.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Iter.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Iter;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Iter|] @type direct;
#L12b61e.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator.next|] ([|java:util:concurrent:ConcurrentSkipListMap$KeyIterator|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeyIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12b630.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$KeyIterator.next|]   @type object;
#L12b634.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator.advance|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeyIterator;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator|] @type virtual;
#L12b63a.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12b63e.   return v1  @type object;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$KeySet|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractSet|], [|java:util:NavigableSet|] {
      [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v0 @type (this), [|java:util:concurrent:ConcurrentNavigableMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12b650.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12b656.   v0.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]  := v1 @type object;
#L12b65a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.ceiling|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.ceiling:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b66c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b670.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.ceilingKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b676.   v0:= temp  @type object;
#L12b678.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.clear|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b68c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b690.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.clear|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.clear:()V|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b696.   return @void ;

   }
    procedure [|java:util:Comparator|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.comparator|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b6a8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b6ac.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.comparator|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b6b2.   v0:= temp  @type object;
#L12b6b4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.contains|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b6c8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b6cc.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.containsKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b6d2.   v0:= temp;
#L12b6d4.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.descendingIterator|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.descendingIterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b6e8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.descendingSet|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.descendingSet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type virtual;
#L12b6ee.   v0:= temp  @type object;
#L12b6f0.   call temp:=  [|java:util:NavigableSet.iterator|](v0) @signature [|Ljava/util/NavigableSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:NavigableSet|] @type interface;
#L12b6f6.   v0:= temp  @type object;
#L12b6f8.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.descendingSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.descendingSet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12b70c.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$KeySet|];
#L12b710.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b714.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.descendingMap|](v1) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.descendingMap:()Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b71a.   v1:= temp  @type object;
#L12b71c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type direct;
#L12b722.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.equals|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12b734.   v2:= 1  @length 4;
#L12b736.   v3:= 0  @length 4;
#L12b738.   if v6 != v5 then goto L12b740;
#L12b73c.   v3:= v2;
#L12b73e.   return v3;
#L12b740.   v4:= instanceof @varname v6 @type [|java:util:Set|];
#L12b744.   if v4 == 0 then goto L12b73e;
#L12b748.   v0:= v6  @type object;
#L12b74a.   v0:= ([|java:util:Collection|])v0;
#L12b74e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.containsAll|](v5, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.containsAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type virtual;
#L12b754.   v4:= temp;
#L12b756.   if v4 == 0 then goto L12b76a;
#L12b75a.   call temp:=  [|java:util:Collection.containsAll|](v0, v5) @signature [|Ljava/util/Collection;.containsAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L12b760.   v4:= temp;
#L12b762.   if v4 == 0 then goto L12b76a;
#L12b766.   v3:= v2;
#L12b768.   goto L12b73e;
#L12b76a.   v2:= v3;
#L12b76c.   goto L12b766;
#L12b76e.   v1:= Exception  @type object;
#L12b770.   goto L12b73e;
#L12b772.   v1:= Exception  @type object;
#L12b774.   goto L12b73e;
  catch  [|java:lang:ClassCastException|] @[L12b74e..L12b760] goto L12b76e;
  catch  [|java:lang:NullPointerException|] @[L12b74e..L12b760] goto L12b772;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.first|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.first:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b798.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b79c.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.firstKey|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.firstKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b7a2.   v0:= temp  @type object;
#L12b7a4.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.floor|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.floor:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b7b8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b7bc.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.floorKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b7c2.   v0:= temp  @type object;
#L12b7c4.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.headSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.headSet:(Ljava/lang/Object;)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b7d8.   v0:= 0  @length 4;
#L12b7da.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.headSet|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type virtual;
#L12b7e0.   v0:= temp  @type object;
#L12b7e2.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.headSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12b7f4.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$KeySet|];
#L12b7f8.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b7fc.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.headMap|](v1, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b802.   v1:= temp  @type object;
#L12b804.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type direct;
#L12b80a.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.headSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.headSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12b81c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.headSet|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.headSet:(Ljava/lang/Object;)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type virtual;
#L12b822.   v0:= temp  @type object;
#L12b824.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.higher|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.higher:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b838.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b83c.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.higherKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b842.   v0:= temp  @type object;
#L12b844.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.isEmpty|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b858.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b85c.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.isEmpty|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b862.   v0:= temp;
#L12b864.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.iterator|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b878.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b87c.   v0:= instanceof @varname v0 @type [|java:util:concurrent:ConcurrentSkipListMap|];
#L12b880.   if v0 == 0 then goto L12b896;
#L12b884.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b888.   v0:= ([|java:util:concurrent:ConcurrentSkipListMap|])v0;
#L12b88c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.keyIterator|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.keyIterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12b892.   v0:= temp  @type object;
#L12b894.   return v0  @type object;
#L12b896.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b89a.   v0:= ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|])v0;
#L12b89e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.keyIterator|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.keyIterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12b8a4.   v0:= temp  @type object;
#L12b8a6.   goto L12b894;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.last|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.last:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b8b8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b8bc.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.lastKey|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.lastKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b8c2.   v0:= temp  @type object;
#L12b8c4.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.lower|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.lower:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b8d8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b8dc.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.lowerKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b8e2.   v0:= temp  @type object;
#L12b8e4.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.pollFirst|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.pollFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12b8f8.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b8fc.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.pollFirstEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.pollFirstEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b902.   v0:= temp  @type object;
#L12b904.   if v0 != 0 then goto L12b90c;
#L12b908.   v1:= 0  @length 4;
#L12b90a.   return v1  @type object;
#L12b90c.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12b912.   v1:= temp  @type object;
#L12b914.   goto L12b90a;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.pollLast|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.pollLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12b928.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b92c.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.pollLastEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.pollLastEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b932.   v0:= temp  @type object;
#L12b934.   if v0 != 0 then goto L12b93c;
#L12b938.   v1:= 0  @length 4;
#L12b93a.   return v1  @type object;
#L12b93c.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12b942.   v1:= temp  @type object;
#L12b944.   goto L12b93a;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.remove|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b958.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b95c.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.remove|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b962.   v0:= temp  @type object;
#L12b964.   if v0 == 0 then goto L12b96c;
#L12b968.   v0:= 1  @length 4;
#L12b96a.   return v0;
#L12b96c.   v0:= 0  @length 4;
#L12b96e.   goto L12b96a;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.size|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12b980.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b984.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.size|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.size:()I|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b98a.   v0:= temp;
#L12b98c.   return v0;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.subSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12b9a0.   v0:= 1  @length 4;
#L12b9a2.   v1:= 0  @length 4;
#L12b9a4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.subSet|](v2, v3, v0, v4, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type virtual;
#L12b9aa.   v0:= temp  @type object;
#L12b9ac.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.subSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4, [|java:lang:Object|] v5 @type (object), [|boolean|] v6) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12b9c0.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$KeySet|];
#L12b9c4.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12b9c8.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.subMap|](v1, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12b9ce.   v1:= temp  @type object;
#L12b9d0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type direct;
#L12b9d6.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.subSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12b9e8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.subSet|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type virtual;
#L12b9ee.   v0:= temp  @type object;
#L12b9f0.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.tailSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.tailSet:(Ljava/lang/Object;)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ba04.   v0:= 1  @length 4;
#L12ba06.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.tailSet|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type virtual;
#L12ba0c.   v0:= temp  @type object;
#L12ba0e.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.tailSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12ba20.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$KeySet|];
#L12ba24.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$KeySet.m|]   @type object;
#L12ba28.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.tailMap|](v1, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ba2e.   v1:= temp  @type object;
#L12ba30.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type direct;
#L12ba36.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.tailSet|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.tailSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12ba48.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.tailSet|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.tailSet:(Ljava/lang/Object;)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type virtual;
#L12ba4e.   v0:= temp  @type object;
#L12ba50.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.toArray|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ba64.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.toList|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.toList:(Ljava/util/Collection;)Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type static;
#L12ba6a.   v0:= temp  @type object;
#L12ba6c.   call temp:=  [|java:util:List.toArray|](v0) @signature [|Ljava/util/List;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L12ba72.   v0:= temp  @type object;
#L12ba74.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentSkipListMap$KeySet.toArray|] ([|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v1 @type (this), [|java:lang:Object|][] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ba88.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.toList|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.toList:(Ljava/util/Collection;)Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type static;
#L12ba8e.   v0:= temp  @type object;
#L12ba90.   call temp:=  [|java:util:List.toArray|](v0, v2) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L12ba96.   v0:= temp  @type object;
#L12ba98.   return v0  @type object;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$Node|]  @type class @AccessFlag FINAL  {
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$Node.key|]    @AccessFlag FINAL;
      [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$Node.next|]    @AccessFlag VOLATILE;
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$Node.value|]    @AccessFlag VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentSkipListMap$Node.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentSkipListMap$Node.nextOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentSkipListMap$Node.valueOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Node.<clinit>|] () @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12baac.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L12bab2.   v2:= temp  @type object;
#L12bab4.   @@[|java:util:concurrent:ConcurrentSkipListMap$Node.UNSAFE|] := v2  @type object;
#L12bab8.   v1:= new [|java:util:concurrent:ConcurrentSkipListMap$Node|];
#L12babc.   v2:= @@[|java:util:concurrent:ConcurrentSkipListMap$Node.UNSAFE|]   @type object;
#L12bac0.   v3:= "value" @type (object, string);
#L12bac4.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12baca.   v3:= temp  @type object;
#L12bacc.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12bad2.   v2:= temp  @type wide;
#L12bad4.   @@[|java:util:concurrent:ConcurrentSkipListMap$Node.valueOffset|] := v2  @wide;
#L12bad8.   v2:= @@[|java:util:concurrent:ConcurrentSkipListMap$Node.UNSAFE|]   @type object;
#L12badc.   v3:= "next" @type (object, string);
#L12bae0.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12bae6.   v3:= temp  @type object;
#L12bae8.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12baee.   v2:= temp  @type wide;
#L12baf0.   @@[|java:util:concurrent:ConcurrentSkipListMap$Node.nextOffset|] := v2  @wide;
#L12baf4.   return @void ;
#L12baf6.   v0:= Exception  @type object;
#L12baf8.   v2:= new [|java:lang:Error|];
#L12bafc.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L12bb02.   throw v2;
  catch  [|java:lang:Exception|] @[L12baac..L12baf4] goto L12baf6;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Node.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @type (this), [|java:lang:Object|] v1 @type (object), [|java:lang:Object|] v2 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12bb24.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12bb2a.   v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]  := v1 @type object;
#L12bb2e.   v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]  := v2 @type object;
#L12bb32.   v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]  := v3 @type object;
#L12bb36.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Node.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
      
#L12bb48.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12bb4e.   v0:= 0  @length 4;
#L12bb50.   v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]  := v0 @type object;
#L12bb54.   v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]  := v1 @type object;
#L12bb58.   v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]  := v2 @type object;
#L12bb5c.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Node.appendMarker|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.appendMarker:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @Access  {
      local temp ;
        v0;
      
#L12bb70.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$Node|];
#L12bb74.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.<init>|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type direct;
#L12bb7a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casNext|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casNext:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12bb80.   v0:= temp;
#L12bb82.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Node.casNext|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v6 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v7 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casNext:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12bb94.   v0:= @@[|java:util:concurrent:ConcurrentSkipListMap$Node.UNSAFE|]   @type object;
#L12bb98.   v2:= @@[|java:util:concurrent:ConcurrentSkipListMap$Node.nextOffset|]   @wide;
#L12bb9c.   v1:= v6  @type object;
#L12bb9e.   v4:= v7  @type object;
#L12bba0.   v5:= v8  @type object;
#L12bba2.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12bba8.   v0:= temp;
#L12bbaa.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Node.casValue|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casValue:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12bbbc.   v0:= @@[|java:util:concurrent:ConcurrentSkipListMap$Node.UNSAFE|]   @type object;
#L12bbc0.   v2:= @@[|java:util:concurrent:ConcurrentSkipListMap$Node.valueOffset|]   @wide;
#L12bbc4.   v1:= v6  @type object;
#L12bbc6.   v4:= v7  @type object;
#L12bbc8.   v5:= v8  @type object;
#L12bbca.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12bbd0.   v0:= temp;
#L12bbd2.   return v0;

   }
    procedure [|java:util:AbstractMap$SimpleImmutableEntry|] [|java:util:concurrent:ConcurrentSkipListMap$Node.createSnapshot|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.createSnapshot:()Ljava/util/AbstractMap$SimpleImmutableEntry;|] @Access  {
      local temp ;
        v0;
        v1;
        v2;
      
#L12bbe4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12bbea.   v0:= temp  @type object;
#L12bbec.   if v0 != 0 then goto L12bbf4;
#L12bbf0.   v1:= 0  @length 4;
#L12bbf2.   return v1  @type object;
#L12bbf4.   v1:= new [|java:util:AbstractMap$SimpleImmutableEntry|];
#L12bbf8.   v2:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12bbfc.   call temp:=  [|java:util:AbstractMap$SimpleImmutableEntry.<init>|](v1, v2, v0) @signature [|Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:AbstractMap$SimpleImmutableEntry|] @type direct;
#L12bc02.   goto L12bbf2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @Access  {
      local temp ;
        v0;
        v1;
      
#L12bc14.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12bc18.   if v0 == v2 then goto L12bc28;
#L12bc1c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.access$000|]() @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.access$000:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type static;
#L12bc22.   v1:= temp  @type object;
#L12bc24.   if v0 != v1 then goto L12bc2a;
#L12bc28.   v0:= 0  @length 4;
#L12bc2a.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Node.helpDelete|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.helpDelete:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @Access  {
      local temp ;
        v0;
      
#L12bc3c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12bc40.   if v3 != v0 then goto L12bc5e;
#L12bc44.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12bc48.   if v1 != v0 then goto L12bc5e;
#L12bc4c.   if v3 == 0 then goto L12bc58;
#L12bc50.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12bc54.   if v0 == v3 then goto L12bc60;
#L12bc58.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.appendMarker|](v1, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.appendMarker:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12bc5e.   return @void ;
#L12bc60.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12bc64.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casNext|](v2, v1, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casNext:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12bc6a.   goto L12bc5e;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Node.isBaseHeader|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.isBaseHeader:()Z|] @Access  {
      local temp ;
        v0;
        v1;
      
#L12bc7c.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12bc80.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.access$000|]() @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.access$000:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type static;
#L12bc86.   v1:= temp  @type object;
#L12bc88.   if v0 != v1 then goto L12bc90;
#L12bc8c.   v0:= 1  @length 4;
#L12bc8e.   return v0;
#L12bc90.   v0:= 0  @length 4;
#L12bc92.   goto L12bc8e;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Node.isMarker|] ([|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Node|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.isMarker:()Z|] @Access  {
      local temp ;
        v0;
      
#L12bca4.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12bca8.   if v0 != v1 then goto L12bcb0;
#L12bcac.   v0:= 1  @length 4;
#L12bcae.   return v0;
#L12bcb0.   v0:= 0  @length 4;
#L12bcb2.   goto L12bcae;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|]  @type class @AccessFlag ABSTRACT extends  [|java:util:Iterator|] {
      [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.lastReturned|]    @AccessFlag ;
      [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.nextValue|]    @AccessFlag ;
      [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] v2 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L12bcc4.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.this$0|]  := v3 @type object;
#L12bcc8.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12bcce.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$100|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$100:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type static;
#L12bcd4.   v1:= temp;
#L12bcd6.   if v1 == 0 then goto L12bcf0;
#L12bcda.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$200|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$200:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type static;
#L12bce0.   v1:= temp  @type object;
#L12bce2.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]  := v1 @type object;
#L12bce6.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bcea.   if v1 != 0 then goto L12bcfa;
#L12bcee.   return @void ;
#L12bcf0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$300|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$300:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type static;
#L12bcf6.   v1:= temp  @type object;
#L12bcf8.   goto L12bce2;
#L12bcfa.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bcfe.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12bd02.   if v0 == 0 then goto L12bcce;
#L12bd06.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bd0a.   if v0 == v1 then goto L12bcce;
#L12bd0e.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bd12.   v1:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12bd16.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$400|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$400:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type static;
#L12bd1c.   v1:= temp;
#L12bd1e.   if v1 != 0 then goto L12bd2a;
#L12bd22.   v1:= 0  @length 4;
#L12bd24.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]  := v1 @type object;
#L12bd28.   goto L12bcee;
#L12bd2a.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.nextValue|]  := v0 @type object;
#L12bd2e.   goto L12bcee;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.ascend|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.ascend:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L12bd40.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bd44.   v1:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12bd48.   v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]  := v1 @type object;
#L12bd4c.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bd50.   if v1 != 0 then goto L12bd56;
#L12bd54.   return @void ;
#L12bd56.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bd5a.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12bd5e.   if v0 == 0 then goto L12bd40;
#L12bd62.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bd66.   if v0 == v1 then goto L12bd40;
#L12bd6a.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.this$0|]   @type object;
#L12bd6e.   v2:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bd72.   v2:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12bd76.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$500|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$500:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type static;
#L12bd7c.   v1:= temp;
#L12bd7e.   if v1 == 0 then goto L12bd8a;
#L12bd82.   v1:= 0  @length 4;
#L12bd84.   v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]  := v1 @type object;
#L12bd88.   goto L12bd54;
#L12bd8a.   v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.nextValue|]  := v0 @type object;
#L12bd8e.   goto L12bd54;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.descend|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.descend:()V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12bda0.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.this$0|]   @type object;
#L12bda4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$600|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$600:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Ljava/util/concurrent/ConcurrentSkipListMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type static;
#L12bdaa.   v1:= temp  @type object;
#L12bdac.   v2:= v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.lastReturned|]   @type object;
#L12bdb0.   v2:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12bdb4.   v3:= 2  @length 4;
#L12bdb6.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12bdbc.   v1:= temp  @type object;
#L12bdbe.   v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]  := v1 @type object;
#L12bdc2.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bdc6.   if v1 != 0 then goto L12bdcc;
#L12bdca.   return @void ;
#L12bdcc.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bdd0.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12bdd4.   if v0 == 0 then goto L12bda0;
#L12bdd8.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bddc.   if v0 == v1 then goto L12bda0;
#L12bde0.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.this$0|]   @type object;
#L12bde4.   v2:= v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12bde8.   v2:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12bdec.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$700|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$700:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type static;
#L12bdf2.   v1:= temp;
#L12bdf4.   if v1 == 0 then goto L12be00;
#L12bdf8.   v1:= 0  @length 4;
#L12bdfa.   v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]  := v1 @type object;
#L12bdfe.   goto L12bdca;
#L12be00.   v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.nextValue|]  := v0 @type object;
#L12be04.   goto L12bdca;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.advance|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.advance:()V|] @Access FINAL {
      local temp ;
        v0;
      
#L12be18.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12be1c.   if v0 != 0 then goto L12be2c;
#L12be20.   v0:= new [|java:util:NoSuchElementException|];
#L12be24.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12be2a.   throw v0;
#L12be2c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12be30.   v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.lastReturned|]  := v0 @type object;
#L12be34.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.this$0|]   @type object;
#L12be38.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$100|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$100:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type static;
#L12be3e.   v0:= temp;
#L12be40.   if v0 == 0 then goto L12be4c;
#L12be44.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.descend|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.descend:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @type direct;
#L12be4a.   return @void ;
#L12be4c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.ascend|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.ascend:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @type direct;
#L12be52.   goto L12be4a;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.hasNext|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.hasNext:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        v0;
      
#L12be64.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.next|]   @type object;
#L12be68.   if v0 == 0 then goto L12be70;
#L12be6c.   v0:= 1  @length 4;
#L12be6e.   return v0;
#L12be70.   v0:= 0  @length 4;
#L12be72.   goto L12be6e;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.remove|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.remove:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12be84.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.lastReturned|]   @type object;
#L12be88.   if v0 != 0 then goto L12be98;
#L12be8c.   v1:= new [|java:lang:IllegalStateException|];
#L12be90.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L12be96.   throw v1;
#L12be98.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.this$0|]   @type object;
#L12be9c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$600|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$600:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Ljava/util/concurrent/ConcurrentSkipListMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type static;
#L12bea2.   v1:= temp  @type object;
#L12bea4.   v2:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12bea8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.remove|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12beae.   v1:= 0  @length 4;
#L12beb0.   v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.lastReturned|]  := v1 @type object;
#L12beb4.   return @void ;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] {
      [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|] v0 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12bec8.   v0.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.this$0|]  := v1 @type object;
#L12becc.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @type direct;
#L12bed2.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12bee4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator;.next:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|] @type virtual;
#L12beea.   v0:= temp  @type object;
#L12beec.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator;.next:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
      
#L12bf00.   v0:= v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next|]   @type object;
#L12bf04.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.nextValue|]   @type object;
#L12bf08.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.advance|](v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|] @type virtual;
#L12bf0e.   v2:= new [|java:util:AbstractMap$SimpleImmutableEntry|];
#L12bf12.   v3:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12bf16.   call temp:=  [|java:util:AbstractMap$SimpleImmutableEntry.<init>|](v2, v3, v1) @signature [|Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:AbstractMap$SimpleImmutableEntry|] @type direct;
#L12bf1c.   return v2  @type object;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] {
      [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator|] v0 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapKeyIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12bf30.   v0.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator.this$0|]  := v1 @type object;
#L12bf34.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @type direct;
#L12bf3a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator.next|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapKeyIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12bf4c.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator.next|]   @type object;
#L12bf50.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator.advance|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapKeyIterator;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator|] @type virtual;
#L12bf56.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12bf5a.   return v1  @type object;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] {
      [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator|] v0 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12bf6c.   v0.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator.this$0|]  := v1 @type object;
#L12bf70.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapIter|] @type direct;
#L12bf76.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator.next|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12bf88.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator.nextValue|]   @type object;
#L12bf8c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator.advance|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator|] @type virtual;
#L12bf92.   return v0  @type object;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$SubMap|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractMap|], [|java:util:concurrent:ConcurrentNavigableMap|], [|java:lang:Cloneable|], [|java:io:Serializable|] {
      [|java:util:Set|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.entrySetView|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiInclusive|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.keySetView|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loInclusive|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:ConcurrentSkipListMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:Collection|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.valuesView|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|long|] @@[|java:util:concurrent:ConcurrentSkipListMap$SubMap.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this), [|java:util:concurrent:ConcurrentSkipListMap|] v3 @type (object), [|java:lang:Object|] v4 @type (object), [|boolean|] v5, [|java:lang:Object|] v6 @type (object), [|boolean|] v7, [|boolean|] v8) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;Ljava/lang/Object;ZLjava/lang/Object;ZZ)V|] @Access CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L12bfa4.   call temp:=  [|java:util:AbstractMap.<init>|](v2) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L12bfaa.   if v4 == 0 then goto L12bfce;
#L12bfae.   if v6 == 0 then goto L12bfce;
#L12bfb2.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v3, v4, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12bfb8.   v0:= temp;
#L12bfba.   if v0 <= 0 then goto L12bfce;
#L12bfbe.   v0:= new [|java:lang:IllegalArgumentException|];
#L12bfc2.   v1:= "inconsistent range" @type (object, string);
#L12bfc6.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12bfcc.   throw v0;
#L12bfce.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]  := v3 @type object;
#L12bfd2.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]  := v4 @type object;
#L12bfd6.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]  := v6 @type object;
#L12bfda.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.loInclusive|]  := v5 @boolean;
#L12bfde.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiInclusive|]  := v7 @boolean;
#L12bfe2.   v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]  := v8 @boolean;
#L12bfe6.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$100|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$100:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12bff8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12bffc.   return v0;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$200|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$200:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12c010.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiNode|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.hiNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c016.   v0:= temp  @type object;
#L12c018.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$300|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$300:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12c02c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c032.   v0:= temp  @type object;
#L12c034.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$400|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$400:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;Ljava/lang/Object;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12c048.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c04e.   v0:= temp;
#L12c050.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$500|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$500:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;Ljava/lang/Object;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12c064.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooHigh|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooHigh:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c06a.   v0:= temp;
#L12c06c.   return v0;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$600|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$600:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)Ljava/util/concurrent/ConcurrentSkipListMap;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12c080.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c084.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.access$700|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.access$700:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;Ljava/lang/Object;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12c098.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooLow|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooLow:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c09e.   v0:= temp;
#L12c0a0.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.checkKeyBounds|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.checkKeyBounds:(Ljava/lang/Object;)V|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L12c0b4.   if v3 != 0 then goto L12c0c4;
#L12c0b8.   v0:= new [|java:lang:NullPointerException|];
#L12c0bc.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12c0c2.   throw v0;
#L12c0c4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c0ca.   v0:= temp;
#L12c0cc.   if v0 != 0 then goto L12c0e0;
#L12c0d0.   v0:= new [|java:lang:IllegalArgumentException|];
#L12c0d4.   v1:= "key out of range" @type (object, string);
#L12c0d8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12c0de.   throw v0;
#L12c0e0.   return @void ;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v5 @type (this), [|java:lang:Object|] v6 @type (object), [|int|] v7) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearEntry:(Ljava/lang/Object;I)Ljava/util/Map$Entry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12c0f4.   v3:= 0  @length 4;
#L12c0f6.   v4:= v5.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12c0fa.   if v4 == 0 then goto L12c10a;
#L12c0fe.   v4:= v7 ^& 2;
#L12c102.   if v4 != 0 then goto L12c120;
#L12c106.   v7:= v7 ^| 2;
#L12c10a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooLow|](v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooLow:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c110.   v4:= temp;
#L12c112.   if v4 == 0 then goto L12c130;
#L12c116.   v4:= v7 ^& 2;
#L12c11a.   if v4 == 0 then goto L12c126;
#L12c11e.   return v3  @type object;
#L12c120.   v7:= v7 ^& -3;
#L12c124.   goto L12c10a;
#L12c126.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lowestEntry|](v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lowestEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c12c.   v3:= temp  @type object;
#L12c12e.   goto L12c11e;
#L12c130.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooHigh|](v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooHigh:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c136.   v4:= temp;
#L12c138.   if v4 == 0 then goto L12c14e;
#L12c13c.   v4:= v7 ^& 2;
#L12c140.   if v4 == 0 then goto L12c11e;
#L12c144.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.highestEntry|](v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.highestEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c14a.   v3:= temp  @type object;
#L12c14c.   goto L12c11e;
#L12c14e.   v4:= v5.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c152.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v4, v6, v7) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c158.   v1:= temp  @type object;
#L12c15a.   if v1 == 0 then goto L12c11e;
#L12c15e.   v4:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c162.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v5, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c168.   v4:= temp;
#L12c16a.   if v4 == 0 then goto L12c11e;
#L12c16e.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c172.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12c178.   v2:= temp  @type object;
#L12c17a.   if v2 == 0 then goto L12c14e;
#L12c17e.   v3:= new [|java:util:AbstractMap$SimpleImmutableEntry|];
#L12c182.   call temp:=  [|java:util:AbstractMap$SimpleImmutableEntry.<init>|](v3, v0, v2) @signature [|Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:AbstractMap$SimpleImmutableEntry|] @type direct;
#L12c188.   goto L12c11e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|int|] v8) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearKey:(Ljava/lang/Object;I)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12c19c.   v4:= 0  @length 4;
#L12c19e.   v5:= v6.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12c1a2.   if v5 == 0 then goto L12c1b2;
#L12c1a6.   v5:= v8 ^& 2;
#L12c1aa.   if v5 != 0 then goto L12c1e0;
#L12c1ae.   v8:= v8 ^| 2;
#L12c1b2.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooLow|](v6, v7) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooLow:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c1b8.   v5:= temp;
#L12c1ba.   if v5 == 0 then goto L12c1ea;
#L12c1be.   v5:= v8 ^& 2;
#L12c1c2.   if v5 != 0 then goto L12c1e6;
#L12c1c6.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|](v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c1cc.   v2:= temp  @type object;
#L12c1ce.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isBeforeEnd|](v6, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.isBeforeEnd:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c1d4.   v5:= temp;
#L12c1d6.   if v5 == 0 then goto L12c1e6;
#L12c1da.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c1de.   return v1  @type object;
#L12c1e0.   v8:= v8 ^& -3;
#L12c1e4.   goto L12c1b2;
#L12c1e6.   v1:= v4  @type object;
#L12c1e8.   goto L12c1de;
#L12c1ea.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooHigh|](v6, v7) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooHigh:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c1f0.   v5:= temp;
#L12c1f2.   if v5 == 0 then goto L12c21e;
#L12c1f6.   v5:= v8 ^& 2;
#L12c1fa.   if v5 == 0 then goto L12c21a;
#L12c1fe.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiNode|](v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.hiNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c204.   v2:= temp  @type object;
#L12c206.   if v2 == 0 then goto L12c21a;
#L12c20a.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c20e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v6, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c214.   v5:= temp;
#L12c216.   if v5 != 0 then goto L12c1de;
#L12c21a.   v1:= v4  @type object;
#L12c21c.   goto L12c1de;
#L12c21e.   v5:= v6.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c222.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v5, v7, v8) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c228.   v2:= temp  @type object;
#L12c22a.   if v2 == 0 then goto L12c23e;
#L12c22e.   v5:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c232.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v6, v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c238.   v5:= temp;
#L12c23a.   if v5 != 0 then goto L12c242;
#L12c23e.   v1:= v4  @type object;
#L12c240.   goto L12c1de;
#L12c242.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c246.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12c24c.   v3:= temp  @type object;
#L12c24e.   if v3 == 0 then goto L12c21e;
#L12c252.   v1:= v0  @type object;
#L12c254.   goto L12c1de;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiNode|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.hiNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L12c268.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c26c.   if v0 != 0 then goto L12c27e;
#L12c270.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c274.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findLast|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findLast:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c27a.   v0:= temp  @type object;
#L12c27c.   return v0  @type object;
#L12c27e.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiInclusive|]   @boolean;
#L12c282.   if v0 == 0 then goto L12c29a;
#L12c286.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c28a.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c28e.   v2:= 3  @length 4;
#L12c290.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v0, v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c296.   v0:= temp  @type object;
#L12c298.   goto L12c27c;
#L12c29a.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c29e.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c2a2.   v2:= 2  @length 4;
#L12c2a4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v0, v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c2aa.   v0:= temp  @type object;
#L12c2ac.   goto L12c27c;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.highestEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.highestEntry:()Ljava/util/Map$Entry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L12c2c0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiNode|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.hiNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c2c6.   v1:= temp  @type object;
#L12c2c8.   if v1 == 0 then goto L12c2dc;
#L12c2cc.   v2:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c2d0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v3, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c2d6.   v2:= temp;
#L12c2d8.   if v2 != 0 then goto L12c2e0;
#L12c2dc.   v0:= 0  @length 4;
#L12c2de.   return v0  @type object;
#L12c2e0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.createSnapshot|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.createSnapshot:()Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12c2e6.   v0:= temp  @type object;
#L12c2e8.   if v0 == 0 then goto L12c2c0;
#L12c2ec.   goto L12c2de;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.highestKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.highestKey:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L12c300.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiNode|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.hiNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c306.   v1:= temp  @type object;
#L12c308.   if v1 == 0 then goto L12c31e;
#L12c30c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c310.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v3, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c316.   v2:= temp;
#L12c318.   if v2 == 0 then goto L12c31e;
#L12c31c.   return v0  @type object;
#L12c31e.   v2:= new [|java:util:NoSuchElementException|];
#L12c322.   call temp:=  [|java:util:NoSuchElementException.<init>|](v2) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12c328.   throw v2;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @Access PRIVATE {
      local temp ;
        v0;
      
#L12c33c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooLow|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooLow:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c342.   v0:= temp;
#L12c344.   if v0 != 0 then goto L12c358;
#L12c348.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooHigh|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooHigh:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c34e.   v0:= temp;
#L12c350.   if v0 != 0 then goto L12c358;
#L12c354.   v0:= 1  @length 4;
#L12c356.   return v0;
#L12c358.   v0:= 0  @length 4;
#L12c35a.   goto L12c356;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isBeforeEnd|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v6 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.isBeforeEnd:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12c36c.   v2:= 0  @length 4;
#L12c36e.   v3:= 1  @length 4;
#L12c370.   if v7 != 0 then goto L12c376;
#L12c374.   return v2;
#L12c376.   v4:= v6.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c37a.   if v4 != 0 then goto L12c382;
#L12c37e.   v2:= v3;
#L12c380.   goto L12c374;
#L12c382.   v1:= v7.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c386.   if v1 != 0 then goto L12c38e;
#L12c38a.   v2:= v3;
#L12c38c.   goto L12c374;
#L12c38e.   v4:= v6.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c392.   v5:= v6.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c396.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v4, v1, v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c39c.   v0:= temp;
#L12c39e.   if v0 > 0 then goto L12c374;
#L12c3a2.   if v0 != 0 then goto L12c3ae;
#L12c3a6.   v4:= v6.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiInclusive|]   @boolean;
#L12c3aa.   if v4 == 0 then goto L12c374;
#L12c3ae.   v2:= v3;
#L12c3b0.   goto L12c374;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L12c3c4.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]   @type object;
#L12c3c8.   if v0 != 0 then goto L12c3da;
#L12c3cc.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c3d0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findFirst|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c3d6.   v0:= temp  @type object;
#L12c3d8.   return v0  @type object;
#L12c3da.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.loInclusive|]   @boolean;
#L12c3de.   if v0 == 0 then goto L12c3f6;
#L12c3e2.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c3e6.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]   @type object;
#L12c3ea.   v2:= 1  @length 4;
#L12c3ec.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v0, v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c3f2.   v0:= temp  @type object;
#L12c3f4.   goto L12c3d8;
#L12c3f6.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c3fa.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]   @type object;
#L12c3fe.   v2:= 0  @length 4;
#L12c400.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v0, v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c406.   v0:= temp  @type object;
#L12c408.   goto L12c3d8;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lowestEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lowestEntry:()Ljava/util/Map$Entry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L12c41c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c422.   v1:= temp  @type object;
#L12c424.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isBeforeEnd|](v3, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.isBeforeEnd:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c42a.   v2:= temp;
#L12c42c.   if v2 != 0 then goto L12c434;
#L12c430.   v0:= 0  @length 4;
#L12c432.   return v0  @type object;
#L12c434.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.createSnapshot|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.createSnapshot:()Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12c43a.   v0:= temp  @type object;
#L12c43c.   if v0 == 0 then goto L12c41c;
#L12c440.   goto L12c432;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lowestKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lowestKey:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
      
#L12c454.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c45a.   v0:= temp  @type object;
#L12c45c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isBeforeEnd|](v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.isBeforeEnd:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c462.   v1:= temp;
#L12c464.   if v1 == 0 then goto L12c46e;
#L12c468.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c46c.   return v1  @type object;
#L12c46e.   v1:= new [|java:util:NoSuchElementException|];
#L12c472.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12c478.   throw v1;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.newSubMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v10 @type (this), [|java:lang:Object|] v11 @type (object), [|boolean|] v12, [|java:lang:Object|] v13 @type (object), [|boolean|] v14) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.newSubMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L12c48c.   v0:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12c490.   if v0 == 0 then goto L12c4a0;
#L12c494.   v9:= v11  @type object;
#L12c496.   v11:= v13  @type object;
#L12c498.   v13:= v9  @type object;
#L12c49a.   v8:= v12;
#L12c49c.   v12:= v14;
#L12c49e.   v14:= v8;
#L12c4a0.   v0:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]   @type object;
#L12c4a4.   if v0 == 0 then goto L12c4b4;
#L12c4a8.   if v11 != 0 then goto L12c4e4;
#L12c4ac.   v11:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]   @type object;
#L12c4b0.   v12:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.loInclusive|]   @boolean;
#L12c4b4.   v0:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c4b8.   if v0 == 0 then goto L12c4c8;
#L12c4bc.   if v13 != 0 then goto L12c518;
#L12c4c0.   v13:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c4c4.   v14:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiInclusive|]   @boolean;
#L12c4c8.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$SubMap|];
#L12c4cc.   v1:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c4d0.   v6:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12c4d4.   v2:= v11  @type object;
#L12c4d6.   v3:= v12;
#L12c4d8.   v4:= v13  @type object;
#L12c4da.   v5:= v14;
#L12c4dc.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;Ljava/lang/Object;ZLjava/lang/Object;ZZ)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c4e2.   return v0  @type object;
#L12c4e4.   v0:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c4e8.   v1:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]   @type object;
#L12c4ec.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v0, v11, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c4f2.   v7:= temp;
#L12c4f4.   if v7 < 0 then goto L12c508;
#L12c4f8.   if v7 != 0 then goto L12c4b4;
#L12c4fc.   v0:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.loInclusive|]   @boolean;
#L12c500.   if v0 != 0 then goto L12c4b4;
#L12c504.   if v12 == 0 then goto L12c4b4;
#L12c508.   v0:= new [|java:lang:IllegalArgumentException|];
#L12c50c.   v1:= "key out of range" @type (object, string);
#L12c510.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12c516.   throw v0;
#L12c518.   v0:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c51c.   v1:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c520.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v0, v13, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c526.   v7:= temp;
#L12c528.   if v7 > 0 then goto L12c53c;
#L12c52c.   if v7 != 0 then goto L12c4c8;
#L12c530.   v0:= v10.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiInclusive|]   @boolean;
#L12c534.   if v0 != 0 then goto L12c4c8;
#L12c538.   if v14 == 0 then goto L12c4c8;
#L12c53c.   v0:= new [|java:lang:IllegalArgumentException|];
#L12c540.   v1:= "key out of range" @type (object, string);
#L12c544.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L12c54a.   throw v0;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.removeHighest|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v5 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.removeHighest:()Ljava/util/Map$Entry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12c55c.   v3:= 0  @length 4;
#L12c55e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiNode|](v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.hiNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c564.   v1:= temp  @type object;
#L12c566.   if v1 != 0 then goto L12c56c;
#L12c56a.   return v3  @type object;
#L12c56c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c570.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v5, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c576.   v4:= temp;
#L12c578.   if v4 == 0 then goto L12c56a;
#L12c57c.   v4:= v5.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c580.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doRemove|](v4, v0, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doRemove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c586.   v2:= temp  @type object;
#L12c588.   if v2 == 0 then goto L12c55e;
#L12c58c.   v3:= new [|java:util:AbstractMap$SimpleImmutableEntry|];
#L12c590.   call temp:=  [|java:util:AbstractMap$SimpleImmutableEntry.<init>|](v3, v0, v2) @signature [|Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:AbstractMap$SimpleImmutableEntry|] @type direct;
#L12c596.   goto L12c56a;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.removeLowest|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v5 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.removeLowest:()Ljava/util/Map$Entry;|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12c5a8.   v3:= 0  @length 4;
#L12c5aa.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|](v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c5b0.   v1:= temp  @type object;
#L12c5b2.   if v1 != 0 then goto L12c5b8;
#L12c5b6.   return v3  @type object;
#L12c5b8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c5bc.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v5, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c5c2.   v4:= temp;
#L12c5c4.   if v4 == 0 then goto L12c5b6;
#L12c5c8.   v4:= v5.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c5cc.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doRemove|](v4, v0, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doRemove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c5d2.   v2:= temp  @type object;
#L12c5d4.   if v2 == 0 then goto L12c5aa;
#L12c5d8.   v3:= new [|java:util:AbstractMap$SimpleImmutableEntry|];
#L12c5dc.   call temp:=  [|java:util:AbstractMap$SimpleImmutableEntry.<init>|](v3, v0, v2) @signature [|Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:AbstractMap$SimpleImmutableEntry|] @type direct;
#L12c5e2.   goto L12c5b6;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooHigh|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooHigh:(Ljava/lang/Object;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L12c5f4.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c5f8.   if v1 == 0 then goto L12c620;
#L12c5fc.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c600.   v2:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c604.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v1, v4, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c60a.   v0:= temp;
#L12c60c.   if v0 > 0 then goto L12c61c;
#L12c610.   if v0 != 0 then goto L12c620;
#L12c614.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiInclusive|]   @boolean;
#L12c618.   if v1 != 0 then goto L12c620;
#L12c61c.   v1:= 1  @length 4;
#L12c61e.   return v1;
#L12c620.   v1:= 0  @length 4;
#L12c622.   goto L12c61e;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tooLow|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tooLow:(Ljava/lang/Object;)Z|] @Access PRIVATE {
      local temp ;
        v0;
        v1;
        v2;
      
#L12c634.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]   @type object;
#L12c638.   if v1 == 0 then goto L12c660;
#L12c63c.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c640.   v2:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]   @type object;
#L12c644.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v1, v4, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c64a.   v0:= temp;
#L12c64c.   if v0 < 0 then goto L12c65c;
#L12c650.   if v0 != 0 then goto L12c660;
#L12c654.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.loInclusive|]   @boolean;
#L12c658.   if v1 != 0 then goto L12c660;
#L12c65c.   v1:= 1  @length 4;
#L12c65e.   return v1;
#L12c660.   v1:= 0  @length 4;
#L12c662.   goto L12c65e;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.ceilingEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.ceilingEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12c674.   v0:= 1  @length 4;
#L12c676.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearEntry|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearEntry:(Ljava/lang/Object;I)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c67c.   v0:= temp  @type object;
#L12c67e.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.ceilingKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12c690.   v0:= 1  @length 4;
#L12c692.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearKey|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearKey:(Ljava/lang/Object;I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c698.   v0:= temp  @type object;
#L12c69a.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.clear|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12c6ac.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c6b2.   v0:= temp  @type object;
#L12c6b4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isBeforeEnd|](v3, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.isBeforeEnd:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c6ba.   v1:= temp;
#L12c6bc.   if v1 == 0 then goto L12c6e0;
#L12c6c0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12c6c6.   v1:= temp  @type object;
#L12c6c8.   if v1 == 0 then goto L12c6da;
#L12c6cc.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c6d0.   v2:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12c6d4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.remove|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c6da.   v0:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12c6de.   goto L12c6b4;
#L12c6e0.   return @void ;

   }
    procedure [|java:util:Comparator|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.comparator|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12c6f4.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c6f8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.comparator|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c6fe.   v0:= temp  @type object;
#L12c700.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12c704.   if v1 == 0 then goto L12c710;
#L12c708.   call temp:=  [|java:util:Collections.reverseOrder|](v0) @signature [|Ljava/util/Collections;.reverseOrder:(Ljava/util/Comparator;)Ljava/util/Comparator;|] @classDescriptor [|java:util:Collections|] @type static;
#L12c70e.   v0:= temp  @type object;
#L12c710.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.containsKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12c724.   if v3 != 0 then goto L12c734;
#L12c728.   v1:= new [|java:lang:NullPointerException|];
#L12c72c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12c732.   throw v1;
#L12c734.   v0:= v3  @type object;
#L12c736.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c73c.   v1:= temp;
#L12c73e.   if v1 == 0 then goto L12c756;
#L12c742.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c746.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.containsKey|](v1, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c74c.   v1:= temp;
#L12c74e.   if v1 == 0 then goto L12c756;
#L12c752.   v1:= 1  @length 4;
#L12c754.   return v1;
#L12c756.   v1:= 0  @length 4;
#L12c758.   goto L12c754;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.containsValue|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.containsValue:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L12c76c.   if v4 != 0 then goto L12c77c;
#L12c770.   v2:= new [|java:lang:NullPointerException|];
#L12c774.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12c77a.   throw v2;
#L12c77c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c782.   v0:= temp  @type object;
#L12c784.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isBeforeEnd|](v3, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.isBeforeEnd:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c78a.   v2:= temp;
#L12c78c.   if v2 == 0 then goto L12c7b2;
#L12c790.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12c796.   v1:= temp  @type object;
#L12c798.   if v1 == 0 then goto L12c7ac;
#L12c79c.   call temp:=  [|java:lang:Object.equals|](v4, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12c7a2.   v2:= temp;
#L12c7a4.   if v2 == 0 then goto L12c7ac;
#L12c7a8.   v2:= 1  @length 4;
#L12c7aa.   return v2;
#L12c7ac.   v0:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12c7b0.   goto L12c784;
#L12c7b2.   v2:= 0  @length 4;
#L12c7b4.   goto L12c7aa;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.descendingKeySet|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.descendingKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12c7c8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.descendingMap|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.descendingMap:()Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12c7ce.   v0:= temp  @type object;
#L12c7d0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.navigableKeySet|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12c7d6.   v0:= temp  @type object;
#L12c7d8.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.descendingMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.descendingMap:()Ljava/util/NavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12c7ec.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.descendingMap|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.descendingMap:()Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12c7f2.   v0:= temp  @type object;
#L12c7f4.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.descendingMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.descendingMap:()Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12c808.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.descendingMap|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.descendingMap:()Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12c80e.   v0:= temp  @type object;
#L12c810.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.descendingMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v7 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.descendingMap:()Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12c824.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$SubMap|];
#L12c828.   v1:= v7.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c82c.   v2:= v7.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.lo|]   @type object;
#L12c830.   v3:= v7.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.loInclusive|]   @boolean;
#L12c834.   v4:= v7.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hi|]   @type object;
#L12c838.   v5:= v7.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.hiInclusive|]   @boolean;
#L12c83c.   v6:= v7.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12c840.   if v6 != 0 then goto L12c84e;
#L12c844.   v6:= 1  @length 4;
#L12c846.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;Ljava/lang/Object;ZLjava/lang/Object;ZZ)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c84c.   return v0  @type object;
#L12c84e.   v6:= 0  @length 4;
#L12c850.   goto L12c846;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.entryIterator|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.entryIterator:()Ljava/util/Iterator;|] @Access  {
      local temp ;
        v0;
      
#L12c864.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|];
#L12c868.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapEntryIterator|] @type direct;
#L12c86e.   return v0  @type object;

   }
    procedure [|java:util:Set|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.entrySet|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12c880.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.entrySetView|]   @type object;
#L12c884.   if v0 == 0 then goto L12c88a;
#L12c888.   return v0  @type object;
#L12c88a.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|];
#L12c88e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @type direct;
#L12c894.   v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.entrySetView|]  := v0 @type object;
#L12c898.   goto L12c888;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.firstEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.firstEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12c8ac.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12c8b0.   if v0 == 0 then goto L12c8be;
#L12c8b4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.highestEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.highestEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c8ba.   v0:= temp  @type object;
#L12c8bc.   return v0  @type object;
#L12c8be.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lowestEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lowestEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c8c4.   v0:= temp  @type object;
#L12c8c6.   goto L12c8bc;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.firstKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.firstKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12c8d8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12c8dc.   if v0 == 0 then goto L12c8ea;
#L12c8e0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.highestKey|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.highestKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c8e6.   v0:= temp  @type object;
#L12c8e8.   return v0  @type object;
#L12c8ea.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lowestKey|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lowestKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c8f0.   v0:= temp  @type object;
#L12c8f2.   goto L12c8e8;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.floorEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.floorEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12c904.   v0:= 3  @length 4;
#L12c906.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearEntry|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearEntry:(Ljava/lang/Object;I)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c90c.   v0:= temp  @type object;
#L12c90e.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.floorKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12c920.   v0:= 3  @length 4;
#L12c922.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearKey|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearKey:(Ljava/lang/Object;I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c928.   v0:= temp  @type object;
#L12c92a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.get|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12c93c.   if v3 != 0 then goto L12c94c;
#L12c940.   v1:= new [|java:lang:NullPointerException|];
#L12c944.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12c94a.   throw v1;
#L12c94c.   v0:= v3  @type object;
#L12c94e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12c954.   v1:= temp;
#L12c956.   if v1 != 0 then goto L12c95e;
#L12c95a.   v1:= 0  @length 4;
#L12c95c.   return v1  @type object;
#L12c95e.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12c962.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.get|](v1, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12c968.   v1:= temp  @type object;
#L12c96a.   goto L12c95c;

   }
    procedure [|java:util:NavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12c97c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12c982.   v0:= temp  @type object;
#L12c984.   return v0  @type object;

   }
    procedure [|java:util:SortedMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12c998.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12c99e.   v0:= temp  @type object;
#L12c9a0.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12c9b4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12c9ba.   v0:= temp  @type object;
#L12c9bc.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12c9d0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12c9d6.   v0:= temp  @type object;
#L12c9d8.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12c9ec.   v0:= 0  @length 4;
#L12c9ee.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12c9f4.   v0:= temp  @type object;
#L12c9f6.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12ca08.   if v3 != 0 then goto L12ca18;
#L12ca0c.   v0:= new [|java:lang:NullPointerException|];
#L12ca10.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12ca16.   throw v0;
#L12ca18.   v0:= 0  @length 4;
#L12ca1a.   v1:= 0  @length 4;
#L12ca1c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.newSubMap|](v2, v0, v1, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.newSubMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12ca22.   v0:= temp  @type object;
#L12ca24.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.higherEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.higherEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ca38.   v0:= 0  @length 4;
#L12ca3a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearEntry|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearEntry:(Ljava/lang/Object;I)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12ca40.   v0:= temp  @type object;
#L12ca42.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.higherKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ca54.   v0:= 0  @length 4;
#L12ca56.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearKey|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearKey:(Ljava/lang/Object;I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12ca5c.   v0:= temp  @type object;
#L12ca5e.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isEmpty|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ca70.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12ca76.   v0:= temp  @type object;
#L12ca78.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isBeforeEnd|](v1, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.isBeforeEnd:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12ca7e.   v0:= temp;
#L12ca80.   if v0 != 0 then goto L12ca88;
#L12ca84.   v0:= 1  @length 4;
#L12ca86.   return v0;
#L12ca88.   v0:= 0  @length 4;
#L12ca8a.   goto L12ca86;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.keyIterator|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.keyIterator:()Ljava/util/Iterator;|] @Access  {
      local temp ;
        v0;
      
#L12ca9c.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator|];
#L12caa0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapKeyIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapKeyIterator|] @type direct;
#L12caa6.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.keySet|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.keySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cab8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.keySetView|]   @type object;
#L12cabc.   if v0 == 0 then goto L12cac2;
#L12cac0.   return v0  @type object;
#L12cac2.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$KeySet|];
#L12cac6.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type direct;
#L12cacc.   v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.keySetView|]  := v0 @type object;
#L12cad0.   goto L12cac0;

   }
    procedure [|java:util:Set|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.keySet|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.keySet:()Ljava/util/Set;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12cae4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.keySet|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.keySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12caea.   v0:= temp  @type object;
#L12caec.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lastEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lastEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cb00.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12cb04.   if v0 == 0 then goto L12cb12;
#L12cb08.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lowestEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lowestEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cb0e.   v0:= temp  @type object;
#L12cb10.   return v0  @type object;
#L12cb12.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.highestEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.highestEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cb18.   v0:= temp  @type object;
#L12cb1a.   goto L12cb10;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lastKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lastKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cb2c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12cb30.   if v0 == 0 then goto L12cb3e;
#L12cb34.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lowestKey|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lowestKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cb3a.   v0:= temp  @type object;
#L12cb3c.   return v0  @type object;
#L12cb3e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.highestKey|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.highestKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cb44.   v0:= temp  @type object;
#L12cb46.   goto L12cb3c;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lowerEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lowerEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cb58.   v0:= 2  @length 4;
#L12cb5a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearEntry|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearEntry:(Ljava/lang/Object;I)Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cb60.   v0:= temp  @type object;
#L12cb62.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.lowerKey|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cb74.   v0:= 2  @length 4;
#L12cb76.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.getNearKey|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.getNearKey:(Ljava/lang/Object;I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cb7c.   v0:= temp  @type object;
#L12cb7e.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.navigableKeySet|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cb90.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.keySetView|]   @type object;
#L12cb94.   if v0 == 0 then goto L12cb9a;
#L12cb98.   return v0  @type object;
#L12cb9a.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$KeySet|];
#L12cb9e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type direct;
#L12cba4.   v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.keySetView|]  := v0 @type object;
#L12cba8.   goto L12cb98;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.pollFirstEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.pollFirstEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cbbc.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12cbc0.   if v0 == 0 then goto L12cbce;
#L12cbc4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.removeHighest|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.removeHighest:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cbca.   v0:= temp  @type object;
#L12cbcc.   return v0  @type object;
#L12cbce.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.removeLowest|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.removeLowest:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cbd4.   v0:= temp  @type object;
#L12cbd6.   goto L12cbcc;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.pollLastEntry|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.pollLastEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cbe8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.isDescending|]   @boolean;
#L12cbec.   if v0 == 0 then goto L12cbfa;
#L12cbf0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.removeLowest|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.removeLowest:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cbf6.   v0:= temp  @type object;
#L12cbf8.   return v0  @type object;
#L12cbfa.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.removeHighest|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.removeHighest:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cc00.   v0:= temp  @type object;
#L12cc02.   goto L12cbf8;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.put|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cc14.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.checkKeyBounds|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.checkKeyBounds:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cc1a.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12cc1e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.put|](v0, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12cc24.   v0:= temp  @type object;
#L12cc26.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.putIfAbsent|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cc38.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.checkKeyBounds|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.checkKeyBounds:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cc3e.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12cc42.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.putIfAbsent|](v0, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12cc48.   v0:= temp  @type object;
#L12cc4a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.remove|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12cc5c.   v0:= v3  @type object;
#L12cc5e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cc64.   v1:= temp;
#L12cc66.   if v1 != 0 then goto L12cc6e;
#L12cc6a.   v1:= 0  @length 4;
#L12cc6c.   return v1  @type object;
#L12cc6e.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12cc72.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.remove|](v1, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12cc78.   v1:= temp  @type object;
#L12cc7a.   goto L12cc6c;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.remove|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12cc8c.   v0:= v3  @type object;
#L12cc8e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.inBounds|](v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.inBounds:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cc94.   v1:= temp;
#L12cc96.   if v1 == 0 then goto L12ccae;
#L12cc9a.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12cc9e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.remove|](v1, v0, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12cca4.   v1:= temp;
#L12cca6.   if v1 == 0 then goto L12ccae;
#L12ccaa.   v1:= 1  @length 4;
#L12ccac.   return v1;
#L12ccae.   v1:= 0  @length 4;
#L12ccb0.   goto L12ccac;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.replace|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ccc4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.checkKeyBounds|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.checkKeyBounds:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12ccca.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12ccce.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.replace|](v0, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12ccd4.   v0:= temp  @type object;
#L12ccd6.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.replace|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cce8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.checkKeyBounds|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.checkKeyBounds:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12ccee.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.m|]   @type object;
#L12ccf2.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.replace|](v0, v2, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12ccf8.   v0:= temp;
#L12ccfa.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.size|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v5 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12cd0c.   v0:= 0  @length wide16;
#L12cd10.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.loNode|](v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.loNode:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cd16.   v2:= temp  @type object;
#L12cd18.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.isBeforeEnd|](v5, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.isBeforeEnd:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cd1e.   v3:= temp;
#L12cd20.   if v3 == 0 then goto L12cd3c;
#L12cd24.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12cd2a.   v3:= temp  @type object;
#L12cd2c.   if v3 == 0 then goto L12cd36;
#L12cd30.   v3:= 1  @length wide16;
#L12cd34.   v0:= v0 + v3  @type long;
#L12cd36.   v2:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12cd3a.   goto L12cd18;
#L12cd3c.    v3:= nan  @length wide32;
#L12cd42.   v3:= cmp(v0,v3);
#L12cd46.   if v3 < 0 then goto L12cd52;
#L12cd4a.    v3:= nan;
#L12cd50.   return v3;
#L12cd52.   v3:= (int)v0  @type l2i;
#L12cd54.   goto L12cd50;

   }
    procedure [|java:util:NavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3, [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12cd68.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12cd6e.   v0:= temp  @type object;
#L12cd70.   return v0  @type object;

   }
    procedure [|java:util:SortedMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12cd84.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12cd8a.   v0:= temp  @type object;
#L12cd8c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12cda0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12cda6.   v0:= temp  @type object;
#L12cda8.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3, [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12cdbc.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12cdc2.   v0:= temp  @type object;
#L12cdc4.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12cdd8.   v0:= 1  @length 4;
#L12cdda.   v1:= 0  @length 4;
#L12cddc.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|](v2, v3, v0, v4, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12cde2.   v0:= temp  @type object;
#L12cde4.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3, [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cdf8.   if v2 == 0 then goto L12ce00;
#L12cdfc.   if v4 != 0 then goto L12ce0c;
#L12ce00.   v0:= new [|java:lang:NullPointerException|];
#L12ce04.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12ce0a.   throw v0;
#L12ce0c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.newSubMap|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.newSubMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12ce12.   v0:= temp  @type object;
#L12ce14.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12ce28.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12ce2e.   v0:= temp  @type object;
#L12ce30.   return v0  @type object;

   }
    procedure [|java:util:SortedMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12ce44.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12ce4a.   v0:= temp  @type object;
#L12ce4c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12ce60.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12ce66.   v0:= temp  @type object;
#L12ce68.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;
        v0;
      
#L12ce7c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12ce82.   v0:= temp  @type object;
#L12ce84.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12ce98.   v0:= 1  @length 4;
#L12ce9a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12cea0.   v0:= temp  @type object;
#L12cea2.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @Access PUBLIC {
      local temp ;
        v0;
        v1;
      
#L12ceb4.   if v3 != 0 then goto L12cec4;
#L12ceb8.   v0:= new [|java:lang:NullPointerException|];
#L12cebc.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12cec2.   throw v0;
#L12cec4.   v0:= 0  @length 4;
#L12cec6.   v1:= 0  @length 4;
#L12cec8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.newSubMap|](v2, v3, v4, v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.newSubMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12cece.   v0:= temp  @type object;
#L12ced0.   return v0  @type object;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.valueIterator|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.valueIterator:()Ljava/util/Iterator;|] @Access  {
      local temp ;
        v0;
      
#L12cee4.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator|];
#L12cee8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap$SubMapValueIterator|] @type direct;
#L12ceee.   return v0  @type object;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:ConcurrentSkipListMap$SubMap.values|] ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.values:()Ljava/util/Collection;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cf00.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.valuesView|]   @type object;
#L12cf04.   if v0 == 0 then goto L12cf0a;
#L12cf08.   return v0  @type object;
#L12cf0a.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$Values|];
#L12cf0e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Values.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Values|] @type direct;
#L12cf14.   v1.[|java:util:concurrent:ConcurrentSkipListMap$SubMap.valuesView|]  := v0 @type object;
#L12cf18.   goto L12cf08;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ConcurrentSkipListMap$Iter|] {
      [|java:util:concurrent:ConcurrentSkipListMap|] [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$ValueIterator|] v0 @type (this), [|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$ValueIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12cf2c.   v0.[|java:util:concurrent:ConcurrentSkipListMap$ValueIterator.this$0|]  := v1 @type object;
#L12cf30.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Iter.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Iter;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Iter|] @type direct;
#L12cf36.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator.next|] ([|java:util:concurrent:ConcurrentSkipListMap$ValueIterator|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$ValueIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cf48.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$ValueIterator.nextValue|]   @type object;
#L12cf4c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator.advance|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$ValueIterator;.advance:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator|] @type virtual;
#L12cf52.   return v0  @type object;

   }
record [|java:util:concurrent:ConcurrentSkipListMap$Values|]  @type class @AccessFlag FINAL  extends [|java:util:AbstractCollection|] {
      [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap$Values.m|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Values.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap$Values|] v0 @type (this), [|java:util:concurrent:ConcurrentNavigableMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @Access CONSTRUCTOR {
      local temp ;
      
#L12cf64.   call temp:=  [|java:util:AbstractCollection.<init>|](v0) @signature [|Ljava/util/AbstractCollection;.<init>:()V|] @classDescriptor [|java:util:AbstractCollection|] @type direct;
#L12cf6a.   v0.[|java:util:concurrent:ConcurrentSkipListMap$Values.m|]  := v1 @type object;
#L12cf6e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap$Values.clear|] ([|java:util:concurrent:ConcurrentSkipListMap$Values|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.clear:()V|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cf80.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Values.m|]   @type object;
#L12cf84.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.clear|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.clear:()V|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12cf8a.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Values.contains|] ([|java:util:concurrent:ConcurrentSkipListMap$Values|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cf9c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Values.m|]   @type object;
#L12cfa0.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.containsValue|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.containsValue:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12cfa6.   v0:= temp;
#L12cfa8.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap$Values.isEmpty|] ([|java:util:concurrent:ConcurrentSkipListMap$Values|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cfbc.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Values.m|]   @type object;
#L12cfc0.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.isEmpty|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12cfc6.   v0:= temp;
#L12cfc8.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap$Values.iterator|] ([|java:util:concurrent:ConcurrentSkipListMap$Values|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12cfdc.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Values.m|]   @type object;
#L12cfe0.   v0:= instanceof @varname v0 @type [|java:util:concurrent:ConcurrentSkipListMap|];
#L12cfe4.   if v0 == 0 then goto L12cffa;
#L12cfe8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Values.m|]   @type object;
#L12cfec.   v0:= ([|java:util:concurrent:ConcurrentSkipListMap|])v0;
#L12cff0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.valueIterator|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.valueIterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12cff6.   v0:= temp  @type object;
#L12cff8.   return v0  @type object;
#L12cffa.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Values.m|]   @type object;
#L12cffe.   v0:= ([|java:util:concurrent:ConcurrentSkipListMap$SubMap|])v0;
#L12d002.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.valueIterator|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.valueIterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type virtual;
#L12d008.   v0:= temp  @type object;
#L12d00a.   goto L12cff8;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentSkipListMap$Values.size|] ([|java:util:concurrent:ConcurrentSkipListMap$Values|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.size:()I|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12d01c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Values.m|]   @type object;
#L12d020.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.size|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.size:()I|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12d026.   v0:= temp;
#L12d028.   return v0;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentSkipListMap$Values.toArray|] ([|java:util:concurrent:ConcurrentSkipListMap$Values|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12d03c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.toList|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.toList:(Ljava/util/Collection;)Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type static;
#L12d042.   v0:= temp  @type object;
#L12d044.   call temp:=  [|java:util:List.toArray|](v0) @signature [|Ljava/util/List;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L12d04a.   v0:= temp  @type object;
#L12d04c.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ConcurrentSkipListMap$Values.toArray|] ([|java:util:concurrent:ConcurrentSkipListMap$Values|] v1 @type (this), [|java:lang:Object|][] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap$Values|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        v0;
      
#L12d060.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.toList|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.toList:(Ljava/util/Collection;)Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type static;
#L12d066.   v0:= temp  @type object;
#L12d068.   call temp:=  [|java:util:List.toArray|](v0, v2) @signature [|Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L12d06e.   v0:= temp  @type object;
#L12d070.   return v0  @type object;

   }
