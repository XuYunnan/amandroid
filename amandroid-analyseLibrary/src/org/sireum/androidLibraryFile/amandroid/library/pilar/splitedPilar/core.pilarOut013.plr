record [|java:util:concurrent:ConcurrentSkipListMap|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractMap|], [|java:util:concurrent:ConcurrentNavigableMap|], [|java:lang:Cloneable|], [|java:io:Serializable|] {
      [|java:util:Comparator|] [|java:util:concurrent:ConcurrentSkipListMap.comparator|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.descendingMap|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] [|java:util:concurrent:ConcurrentSkipListMap.entrySet|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] [|java:util:concurrent:ConcurrentSkipListMap.head|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
      [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] [|java:util:concurrent:ConcurrentSkipListMap.keySet|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:util:concurrent:ConcurrentSkipListMap.randomSeed|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:ConcurrentSkipListMap$Values|] [|java:util:concurrent:ConcurrentSkipListMap.values|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|java:lang:Object|] @@[|java:util:concurrent:ConcurrentSkipListMap.BASE_HEADER|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentSkipListMap.EQ|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentSkipListMap.GT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ConcurrentSkipListMap.LT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentSkipListMap.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentSkipListMap.headOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:Random|] @@[|java:util:concurrent:ConcurrentSkipListMap.seedGenerator|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentSkipListMap.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.<clinit>|] () @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0026,L002c));
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0016,L002c));
        v2;
        v3;
      
#L12d084.   v2:= new [|java:util:Random|];
#L12d088.   call temp:=  [|java:util:Random.<init>|](v2) @signature [|Ljava/util/Random;.<init>:()V|] @classDescriptor [|java:util:Random|] @type direct;
#L12d08e.   @@[|java:util:concurrent:ConcurrentSkipListMap.seedGenerator|] := v2  @type object;
#L12d092.   v2:= new [|java:lang:Object|];
#L12d096.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12d09c.   @@[|java:util:concurrent:ConcurrentSkipListMap.BASE_HEADER|] := v2  @type object;
#L12d0a0.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L12d0a6.   v2:= temp  @type object;
#L12d0a8.   @@[|java:util:concurrent:ConcurrentSkipListMap.UNSAFE|] := v2  @type object;
#L12d0ac.   v1:= new [|java:util:concurrent:ConcurrentSkipListMap|];
#L12d0b0.   v2:= @@[|java:util:concurrent:ConcurrentSkipListMap.UNSAFE|]   @type object;
#L12d0b4.   v3:= "head" @type (object, string);
#L12d0b8.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12d0be.   v3:= temp  @type object;
#L12d0c0.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12d0c6.   v2:= temp  @type wide;
#L12d0c8.   @@[|java:util:concurrent:ConcurrentSkipListMap.headOffset|] := v2  @wide;
#L12d0cc.   return @void ;
#L12d0ce.   v0:= Exception  @type object;
#L12d0d0.   v2:= new [|java:lang:Error|];
#L12d0d4.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L12d0da.   throw v2;
  catch  [|java:lang:Exception|] @[L12d0a0..L12d0cc] goto L12d0ce;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L12d0fc.   call temp:=  [|java:util:AbstractMap.<init>|](v1) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L12d102.   v0:= 0  @length 4;
#L12d104.   v1.[|java:util:concurrent:ConcurrentSkipListMap.comparator|]  := v0 @type object;
#L12d108.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.initialize|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.initialize:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12d10e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap|] v0 @type (this), [|java:util:Comparator|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:(Ljava/util/Comparator;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L12d120.   call temp:=  [|java:util:AbstractMap.<init>|](v0) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L12d126.   v0.[|java:util:concurrent:ConcurrentSkipListMap.comparator|]  := v1 @type object;
#L12d12a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.initialize|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.initialize:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12d130.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:util:Map|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:(Ljava/util/Map;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L12d144.   call temp:=  [|java:util:AbstractMap.<init>|](v1) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L12d14a.   v0:= 0  @length 4;
#L12d14c.   v1.[|java:util:concurrent:ConcurrentSkipListMap.comparator|]  := v0 @type object;
#L12d150.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.initialize|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.initialize:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12d156.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.putAll|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.putAll:(Ljava/util/Map;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12d15c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.<init>|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:util:SortedMap|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:(Ljava/util/SortedMap;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L12d170.   call temp:=  [|java:util:AbstractMap.<init>|](v1) @signature [|Ljava/util/AbstractMap;.<init>:()V|] @classDescriptor [|java:util:AbstractMap|] @type direct;
#L12d176.   call temp:=  [|java:util:SortedMap.comparator|](v2) @signature [|Ljava/util/SortedMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:SortedMap|] @type interface;
#L12d17c.   v0:= temp  @type object;
#L12d17e.   v1.[|java:util:concurrent:ConcurrentSkipListMap.comparator|]  := v0 @type object;
#L12d182.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.initialize|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.initialize:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12d188.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.buildFromSorted|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.buildFromSorted:(Ljava/util/SortedMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d18e.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.access$000|] () @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.access$000:()Ljava/lang/Object;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L12d1a0.   v0:= @@[|java:util:concurrent:ConcurrentSkipListMap.BASE_HEADER|]   @type object;
#L12d1a4.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.addIndex|] ([|java:util:concurrent:ConcurrentSkipListMap|] v9 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Index|] v10 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v11 @type (object), [|int|] v12) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.addIndex:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;I)V|] @Access PRIVATE {
      local temp ;

        [|int|] v0 @varname [|c|] @scope ((L0021,L0034));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v4 @varname [|n|] @scope ((L001b,L0034));
        [|int|] v1 @varname [|insertionLevel|] @scope ((L0001,L0061));
        [|int|] v2 @varname [|j|] @scope ((L0013,L0061));
        [|java:lang:Comparable|] v3 @varname [|key|] @scope ((L0009,L0061));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v5 @varname [|q|] @scope ((L0014,L0061));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v6 @varname [|r|] @scope ((L0016,L0061));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v7 @varname [|t|] @scope ((L0017,L0061));




        v8;
      
#L12d1b8.   v1:= v12;
#L12d1ba.   v8:= v10.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]   @type object;
#L12d1be.   v8:= v8.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12d1c2.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.comparable|](v9, v8) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparable:(Ljava/lang/Object;)Ljava/lang/Comparable;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d1c8.   v3:= temp  @type object;
#L12d1ca.   if v3 != 0 then goto L12d1da;
#L12d1ce.   v8:= new [|java:lang:NullPointerException|];
#L12d1d2.   call temp:=  [|java:lang:NullPointerException.<init>|](v8) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12d1d8.   throw v8;
#L12d1da.   v2:= v11.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d1de.   v5:= v11  @type object;
#L12d1e0.   v6:= v5.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d1e4.   v7:= v10  @type object;
#L12d1e6.   if v6 == 0 then goto L12d220;
#L12d1ea.   v4:= v6.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]   @type object;
#L12d1ee.   v8:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12d1f2.   call temp:=  [|java:lang:Comparable.compareTo|](v3, v8) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L12d1f8.   v0:= temp;
#L12d1fa.   v8:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12d1fe.   if v8 != 0 then goto L12d214;
#L12d202.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.unlink|](v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.unlink:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12d208.   v8:= temp;
#L12d20a.   if v8 == 0 then goto L12d1da;
#L12d20e.   v6:= v5.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d212.   goto L12d1e6;
#L12d214.   if v0 <= 0 then goto L12d220;
#L12d218.   v5:= v6  @type object;
#L12d21a.   v6:= v6.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d21e.   goto L12d1e6;
#L12d220.   if v2 != v1 then goto L12d260;
#L12d224.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.indexesDeletedNode|](v7) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.indexesDeletedNode:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12d22a.   v8:= temp;
#L12d22c.   if v8 == 0 then goto L12d238;
#L12d230.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNode|](v9, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNode:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d236.   return @void ;
#L12d238.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.link|](v5, v6, v7) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.link:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12d23e.   v8:= temp;
#L12d240.   if v8 == 0 then goto L12d1da;
#L12d244.   v1:= v1 + -1;
#L12d248.   if v1 != 0 then goto L12d260;
#L12d24c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.indexesDeletedNode|](v7) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.indexesDeletedNode:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12d252.   v8:= temp;
#L12d254.   if v8 == 0 then goto L12d236;
#L12d258.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNode|](v9, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNode:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d25e.   goto L12d236;
#L12d260.   v2:= v2 + -1;
#L12d264.   if v2 < v1 then goto L12d270;
#L12d268.   if v2 >= v12 then goto L12d270;
#L12d26c.   v7:= v7.[|java:util:concurrent:ConcurrentSkipListMap$Index.down|]   @type object;
#L12d270.   v5:= v5.[|java:util:concurrent:ConcurrentSkipListMap$Index.down|]   @type object;
#L12d274.   v6:= v5.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d278.   goto L12d1e6;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.buildFromSorted|] ([|java:util:concurrent:ConcurrentSkipListMap|] v15 @type (this), [|java:util:SortedMap|] v16 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.buildFromSorted:(Ljava/util/SortedMap;)V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v5 @varname [|idx|] @scope ((L0068,L006a), (L006a,L0073), (L0073,L0092), (L0092,L0094), (L0094,L0098), (L009b,L009d), (L009d,L009f));
        [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v2 @varname [|h|] @scope ((L000a,L006b), (L006b,L007e), (L007e,L0093), (L0093,L0094), (L0094,L009b), (L009b,L009c), (L009c,L009d), (L009d,L009e), (L009e,L009f));
        [|java:util:Map$Entry|] v1 @varname [|e|] @scope ((L003e,L0098), (L009b,L009f));
        [|int|] v8 @varname [|j|] @scope ((L0042,L0098), (L009b,L009f));
        [|java:lang:Object|] v9 @varname [|k|] @scope ((L004e,L0098), (L009b,L009f));
        [|java:lang:Object|] v12 @varname [|v|] @scope ((L0052,L0098), (L009b,L009f));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v13 @varname [|z|] @scope ((L0062,L0098), (L009b,L009f));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|basepred|] @scope ((L000c,L009f));
        [|int|] v4 @varname [|i|] @scope ((L0012,L009f));
        [|java:util:Iterator|] v7 @varname [|it|] @scope ((L0032,L009f));
        [|java:util:ArrayList|] v10 @varname [|preds|] @scope ((L0011,L009f));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v11 @varname [|q|] @scope ((L001e,L009f));


        v3;
        v6;
        v14;
      
#L12d28c.   if v16 != 0 then goto L12d29c;
#L12d290.   v14:= new [|java:lang:NullPointerException|];
#L12d294.   call temp:=  [|java:lang:NullPointerException.<init>|](v14) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12d29a.   throw v14;
#L12d29c.   v2:= v15.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12d2a0.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.node|]   @type object;
#L12d2a4.   v10:= new [|java:util:ArrayList|];
#L12d2a8.   call temp:=  [|java:util:ArrayList.<init>|](v10) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L12d2ae.   v4:= 0  @length 4;
#L12d2b0.   v14:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d2b4.   if v4 > v14 then goto L12d2c6;
#L12d2b8.   v14:= 0  @length 4;
#L12d2ba.   call temp:=  [|java:util:ArrayList.add|](v10, v14) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d2c0.   v4:= v4 + 1;
#L12d2c4.   goto L12d2b0;
#L12d2c6.   v11:= v2  @type object;
#L12d2c8.   v4:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d2cc.   if v4 <= 0 then goto L12d2e0;
#L12d2d0.   call temp:=  [|java:util:ArrayList.set|](v10, v4, v11) @signature [|Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d2d6.   v11:= v11.[|java:util:concurrent:ConcurrentSkipListMap$Index.down|]   @type object;
#L12d2da.   v4:= v4 + -1;
#L12d2de.   goto L12d2cc;
#L12d2e0.   call temp:=  [|java:util:SortedMap.entrySet|](v16) @signature [|Ljava/util/SortedMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:SortedMap|] @type interface;
#L12d2e6.   v14:= temp  @type object;
#L12d2e8.   call temp:=  [|java:util:Set.iterator|](v14) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L12d2ee.   v7:= temp  @type object;
#L12d2f0.   call temp:=  [|java:util:Iterator.hasNext|](v7) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12d2f6.   v14:= temp;
#L12d2f8.   if v14 == 0 then goto L12d3bc;
#L12d2fc.   call temp:=  [|java:util:Iterator.next|](v7) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12d302.   v1:= temp  @type object;
#L12d304.   v1:= ([|java:util:Map$Entry|])v1;
#L12d308.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.randomLevel|](v15) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.randomLevel:()I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d30e.   v8:= temp;
#L12d310.   v14:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d314.   if v8 <= v14 then goto L12d320;
#L12d318.   v14:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d31c.   v8:= v14 + 1;
#L12d320.   call temp:=  [|java:util:Map$Entry.getKey|](v1) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12d326.   v9:= temp  @type object;
#L12d328.   call temp:=  [|java:util:Map$Entry.getValue|](v1) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12d32e.   v12:= temp  @type object;
#L12d330.   if v9 == 0 then goto L12d338;
#L12d334.   if v12 != 0 then goto L12d344;
#L12d338.   v14:= new [|java:lang:NullPointerException|];
#L12d33c.   call temp:=  [|java:lang:NullPointerException.<init>|](v14) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12d342.   throw v14;
#L12d344.   v13:= new [|java:util:concurrent:ConcurrentSkipListMap$Node|];
#L12d348.   v14:= 0  @length 4;
#L12d34a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.<init>|](v13, v9, v12, v14) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type direct;
#L12d350.   v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]  := v13 @type object;
#L12d354.   v0:= v13  @type object;
#L12d356.   if v8 <= 0 then goto L12d2f0;
#L12d35a.   v5:= 0  @length 4;
#L12d35c.   v4:= 1  @length 4;
#L12d35e.   v6:= v5  @type object;
#L12d360.   v3:= v2  @type object;
#L12d362.   if v4 > v8 then goto L12d3c6;
#L12d366.   v5:= new [|java:util:concurrent:ConcurrentSkipListMap$Index|];
#L12d36a.   v14:= 0  @length 4;
#L12d36c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.<init>|](v5, v13, v6, v14) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type direct;
#L12d372.   v14:= v3.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d376.   if v4 <= v14 then goto L12d3c2;
#L12d37a.   v2:= new [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|];
#L12d37e.   v14:= v3.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.node|]   @type object;
#L12d382.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.<init>|](v2, v14, v3, v5, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] @type direct;
#L12d388.   call temp:=  [|java:util:ArrayList.size|](v10) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d38e.   v14:= temp;
#L12d390.   if v4 >= v14 then goto L12d3b4;
#L12d394.   call temp:=  [|java:util:ArrayList.get|](v10, v4) @signature [|Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d39a.   v14:= temp  @type object;
#L12d39c.   v14:= ([|java:util:concurrent:ConcurrentSkipListMap$Index|])v14;
#L12d3a0.   v14.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]  := v5 @type object;
#L12d3a4.   call temp:=  [|java:util:ArrayList.set|](v10, v4, v5) @signature [|Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d3aa.   v4:= v4 + 1;
#L12d3ae.   v6:= v5  @type object;
#L12d3b0.   v3:= v2  @type object;
#L12d3b2.   goto L12d362;
#L12d3b4.   call temp:=  [|java:util:ArrayList.add|](v10, v5) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d3ba.   goto L12d3aa;
#L12d3bc.   v15.[|java:util:concurrent:ConcurrentSkipListMap.head|]  := v2 @type object;
#L12d3c0.   return @void ;
#L12d3c2.   v2:= v3  @type object;
#L12d3c4.   goto L12d388;
#L12d3c6.   v2:= v3  @type object;
#L12d3c8.   goto L12d2f0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap.casHead|] ([|java:util:concurrent:ConcurrentSkipListMap|] v6 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v7 @type (object), [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.casHead:(Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;)Z|] @Access PRIVATE {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12d3dc.   v0:= @@[|java:util:concurrent:ConcurrentSkipListMap.UNSAFE|]   @type object;
#L12d3e0.   v2:= @@[|java:util:concurrent:ConcurrentSkipListMap.headOffset|]   @wide;
#L12d3e4.   v1:= v6  @type object;
#L12d3e6.   v4:= v7  @type object;
#L12d3e8.   v5:= v8  @type object;
#L12d3ea.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12d3f0.   v0:= temp;
#L12d3f2.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.clearIndexToFirst|] ([|java:util:concurrent:ConcurrentSkipListMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.clearIndexToFirst:()V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v0 @varname [|q|] @scope ((L0002,L0020));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v1 @varname [|r|] @scope ((L0004,L0020));

        v2;
      
#L12d404.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12d408.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d40c.   if v1 == 0 then goto L12d428;
#L12d410.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.indexesDeletedNode|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.indexesDeletedNode:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12d416.   v2:= temp;
#L12d418.   if v2 == 0 then goto L12d428;
#L12d41c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.unlink|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.unlink:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12d422.   v2:= temp;
#L12d424.   if v2 == 0 then goto L12d404;
#L12d428.   v0:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Index.down|]   @type object;
#L12d42c.   if v0 != 0 then goto L12d408;
#L12d430.   v2:= v3.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12d434.   v2:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.right|]   @type object;
#L12d438.   if v2 != 0 then goto L12d442;
#L12d43c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.tryReduceLevel|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tryReduceLevel:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d442.   return @void ;

   }
    procedure [|java:lang:Comparable|] [|java:util:concurrent:ConcurrentSkipListMap.comparable|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparable:(Ljava/lang/Object;)Ljava/lang/Comparable;|] @Access PRIVATE {
      local temp ;




        v0;
        v1;
      
#L12d454.   if v3 != 0 then goto L12d464;
#L12d458.   v0:= new [|java:lang:NullPointerException|];
#L12d45c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12d462.   throw v0;
#L12d464.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap.comparator|]   @type object;
#L12d468.   if v0 == 0 then goto L12d47e;
#L12d46c.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator|];
#L12d470.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap.comparator|]   @type object;
#L12d474.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator.<init>|](v0, v3, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$ComparableUsingComparator;.<init>:(Ljava/lang/Object;Ljava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$ComparableUsingComparator|] @type direct;
#L12d47a.   v3:= v0  @type object;
#L12d47c.   return v3  @type object;
#L12d47e.   v3:= ([|java:lang:Comparable|])v3;
#L12d482.   goto L12d47c;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.doGet|] ([|java:util:concurrent:ConcurrentSkipListMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doGet:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:lang:Comparable|] v0 @varname [|key|] @scope ((L0004,L0011));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @varname [|n|] @scope ((L0008,L0011));
        [|java:lang:Object|] v2 @varname [|v|] @scope ((L000e,L0011));


      
#L12d494.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.comparable|](v3, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparable:(Ljava/lang/Object;)Ljava/lang/Comparable;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d49a.   v0:= temp  @type object;
#L12d49c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNode|](v3, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNode:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d4a2.   v1:= temp  @type object;
#L12d4a4.   if v1 != 0 then goto L12d4ac;
#L12d4a8.   v2:= 0  @length 4;
#L12d4aa.   return v2  @type object;
#L12d4ac.   v2:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12d4b0.   if v2 == 0 then goto L12d49c;
#L12d4b4.   goto L12d4aa;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.doPut|] ([|java:util:concurrent:ConcurrentSkipListMap|] v9 @type (this), [|java:lang:Object|] v10 @type (object), [|java:lang:Object|] v11 @type (object), [|boolean|] v12) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doPut:(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|int|] v1 @varname [|c|] @scope ((L0026,L0035));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @varname [|f|] @scope ((L000e,L0035));
        [|java:lang:Object|] v6 @varname [|v|] @scope ((L0014,L0035));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|b|] @scope ((L0008,L004c));
        [|java:lang:Comparable|] v3 @varname [|key|] @scope ((L0004,L004c));
        [|int|] v4 @varname [|level|] @scope ((L0045,L004c));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v5 @varname [|n|] @scope ((L000a,L004c));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v7 @varname [|z|] @scope ((L003b,L004c));




        v8;
      
#L12d4c8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.comparable|](v9, v10) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparable:(Ljava/lang/Object;)Ljava/lang/Comparable;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d4ce.   v3:= temp  @type object;
#L12d4d0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findPredecessor|](v9, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findPredecessor:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d4d6.   v0:= temp  @type object;
#L12d4d8.   v5:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12d4dc.   if v5 == 0 then goto L12d534;
#L12d4e0.   v2:= v5.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12d4e4.   v8:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12d4e8.   if v5 != v8 then goto L12d4d0;
#L12d4ec.   v6:= v5.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12d4f0.   if v6 != 0 then goto L12d4fc;
#L12d4f4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.helpDelete|](v5, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.helpDelete:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12d4fa.   goto L12d4d0;
#L12d4fc.   if v6 == v5 then goto L12d4d0;
#L12d500.   v8:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12d504.   if v8 == 0 then goto L12d4d0;
#L12d508.   v8:= v5.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12d50c.   call temp:=  [|java:lang:Comparable.compareTo|](v3, v8) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L12d512.   v1:= temp;
#L12d514.   if v1 <= 0 then goto L12d51e;
#L12d518.   v0:= v5  @type object;
#L12d51a.   v5:= v2  @type object;
#L12d51c.   goto L12d4dc;
#L12d51e.   if v1 != 0 then goto L12d534;
#L12d522.   if v12 != 0 then goto L12d532;
#L12d526.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casValue|](v5, v6, v11) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casValue:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12d52c.   v8:= temp;
#L12d52e.   if v8 == 0 then goto L12d4d0;
#L12d532.   return v6  @type object;
#L12d534.   v7:= new [|java:util:concurrent:ConcurrentSkipListMap$Node|];
#L12d538.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.<init>|](v7, v10, v11, v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type direct;
#L12d53e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casNext|](v0, v5, v7) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casNext:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12d544.   v8:= temp;
#L12d546.   if v8 == 0 then goto L12d4d0;
#L12d54a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.randomLevel|](v9) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.randomLevel:()I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d550.   v4:= temp;
#L12d552.   if v4 <= 0 then goto L12d55c;
#L12d556.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.insertIndex|](v9, v7, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.insertIndex:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d55c.   v6:= 0  @length 4;
#L12d55e.   goto L12d532;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap.findNode|] ([|java:util:concurrent:ConcurrentSkipListMap|] v7 @type (this), [|java:lang:Comparable|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNode:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v3 @varname [|n|] @scope ((L0007,L000a), (L000b,L002e));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|b|] @scope ((L0005,L002e));
        [|int|] v1 @varname [|c|] @scope ((L0025,L002e));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @varname [|f|] @scope ((L000d,L002e));
        [|java:lang:Object|] v4 @varname [|v|] @scope ((L0013,L002e));


        v5;
        v6;
      
#L12d570.   v5:= 0  @length 4;
#L12d572.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findPredecessor|](v7, v8) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findPredecessor:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d578.   v0:= temp  @type object;
#L12d57a.   v3:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12d57e.   if v3 != 0 then goto L12d586;
#L12d582.   v3:= v5  @type object;
#L12d584.   return v3  @type object;
#L12d586.   v2:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12d58a.   v6:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12d58e.   if v3 != v6 then goto L12d572;
#L12d592.   v4:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12d596.   if v4 != 0 then goto L12d5a2;
#L12d59a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.helpDelete|](v3, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.helpDelete:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12d5a0.   goto L12d572;
#L12d5a2.   if v4 == v3 then goto L12d572;
#L12d5a6.   v6:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12d5aa.   if v6 == 0 then goto L12d572;
#L12d5ae.   v6:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12d5b2.   call temp:=  [|java:lang:Comparable.compareTo|](v8, v6) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L12d5b8.   v1:= temp;
#L12d5ba.   if v1 == 0 then goto L12d584;
#L12d5be.   if v1 >= 0 then goto L12d5c6;
#L12d5c2.   v3:= v5  @type object;
#L12d5c4.   goto L12d584;
#L12d5c6.   v0:= v3  @type object;
#L12d5c8.   v3:= v2  @type object;
#L12d5ca.   goto L12d57e;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap.findPredecessor|] ([|java:util:concurrent:ConcurrentSkipListMap|] v6 @type (this), [|java:lang:Comparable|] v7 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findPredecessor:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v1 @varname [|k|] @scope ((L0012,L0029));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @varname [|n|] @scope ((L0010,L0029));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v0 @varname [|d|] @scope ((L002b,L0034));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v3 @varname [|q|] @scope ((L000a,L0034));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v4 @varname [|r|] @scope ((L000c,L0034));


        v5;
      
#L12d5dc.   if v7 != 0 then goto L12d5ec;
#L12d5e0.   v5:= new [|java:lang:NullPointerException|];
#L12d5e4.   call temp:=  [|java:lang:NullPointerException.<init>|](v5) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12d5ea.   throw v5;
#L12d5ec.   v3:= v6.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12d5f0.   v4:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d5f4.   if v4 == 0 then goto L12d62e;
#L12d5f8.   v2:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]   @type object;
#L12d5fc.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12d600.   v5:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12d604.   if v5 != 0 then goto L12d61a;
#L12d608.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.unlink|](v3, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.unlink:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12d60e.   v5:= temp;
#L12d610.   if v5 == 0 then goto L12d5ec;
#L12d614.   v4:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d618.   goto L12d5f4;
#L12d61a.   call temp:=  [|java:lang:Comparable.compareTo|](v7, v1) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L12d620.   v5:= temp;
#L12d622.   if v5 <= 0 then goto L12d62e;
#L12d626.   v3:= v4  @type object;
#L12d628.   v4:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d62c.   goto L12d5f4;
#L12d62e.   v0:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Index.down|]   @type object;
#L12d632.   if v0 == 0 then goto L12d63e;
#L12d636.   v3:= v0  @type object;
#L12d638.   v4:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d63c.   goto L12d5f4;
#L12d63e.   v5:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]   @type object;
#L12d642.   return v5  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap.findPredecessorOfLast|] ([|java:util:concurrent:ConcurrentSkipListMap|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findPredecessorOfLast:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v0 @varname [|d|] @scope ((L001a,L0021));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v1 @varname [|q|] @scope ((L0002,L0021));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v2 @varname [|r|] @scope ((L0004,L0021));

        v3;
      
#L12d654.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12d658.   v2:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12d65c.   if v2 == 0 then goto L12d684;
#L12d660.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.indexesDeletedNode|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.indexesDeletedNode:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12d666.   v3:= temp;
#L12d668.   if v3 == 0 then goto L12d674;
#L12d66c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.unlink|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.unlink:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12d672.   goto L12d654;
#L12d674.   v3:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]   @type object;
#L12d678.   v3:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12d67c.   if v3 == 0 then goto L12d684;
#L12d680.   v1:= v2  @type object;
#L12d682.   goto L12d658;
#L12d684.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Index.down|]   @type object;
#L12d688.   if v0 == 0 then goto L12d690;
#L12d68c.   v1:= v0  @type object;
#L12d68e.   goto L12d658;
#L12d690.   v3:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]   @type object;
#L12d694.   return v3  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.insertIndex|] ([|java:util:concurrent:ConcurrentSkipListMap|] v15 @type (this), [|java:util:concurrent:ConcurrentSkipListMap$Node|] v16 @type (object), [|int|] v17) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.insertIndex:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;I)V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v3 @varname [|idx|] @scope ((L0009,L000b), (L000b,L0017), (L0017,L001a), (L001a,L0021), (L002a,L002c), (L002c,L0038), (L0038,L003d), (L003d,L006b));
        [|int|] v2 @varname [|i|] @scope ((L000a,L0021), (L002b,L006b));
        [|int|] v7 @varname [|k|] @scope ((L0048,L004e), (L006a,L006b));
        [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v9 @varname [|newh|] @scope ((L004f,L0054), (L0054,L005f), (L005f,L0062), (L0062,L006b));
        [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v1 @varname [|h|] @scope ((L0002,L006b));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|][] v5 @varname [|idxs|] @scope ((L0029,L006b));
        [|int|] v6 @varname [|j|] @scope ((L0053,L006b));
        [|int|] v8 @varname [|max|] @scope ((L0004,L006b));
        [|int|] v11 @varname [|oldLevel|] @scope ((L0042,L006b));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v12 @varname [|oldbase|] @scope ((L0051,L006b));
        [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v13 @varname [|oldh|] @scope ((L0040,L006b));



        v0;
        v4;
        v10;
        v14;
      
#L12d6a8.   v1:= v15.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12d6ac.   v8:= v1.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d6b0.   v0:= v17;
#L12d6b4.   if v0 > v8 then goto L12d6ea;
#L12d6b8.   v3:= 0  @length 4;
#L12d6ba.   v2:= 1  @length 4;
#L12d6bc.   v4:= v3  @type object;
#L12d6be.   v0:= v17;
#L12d6c2.   if v2 > v0 then goto L12d6de;
#L12d6c6.   v3:= new [|java:util:concurrent:ConcurrentSkipListMap$Index|];
#L12d6ca.   v14:= 0  @length 4;
#L12d6cc.   v0:= v16  @type object;
#L12d6d0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.<init>|](v3, v0, v4, v14) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type direct;
#L12d6d6.   v2:= v2 + 1;
#L12d6da.   v4:= v3  @type object;
#L12d6dc.   goto L12d6be;
#L12d6de.   v0:= v17;
#L12d6e2.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.addIndex|](v15, v4, v1, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.addIndex:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d6e8.   return @void ;
#L12d6ea.   v17:= v8 + 1;
#L12d6ee.   v14:= v17 + 1;
#L12d6f2.   v5:= new [|java:util:concurrent:ConcurrentSkipListMap$Index|][v14];
#L12d6f6.   v5:= ([|java:util:concurrent:ConcurrentSkipListMap$Index|][])v5;
#L12d6fa.   v3:= 0  @length 4;
#L12d6fc.   v2:= 1  @length 4;
#L12d6fe.   v4:= v3  @type object;
#L12d700.   v0:= v17;
#L12d704.   if v2 > v0 then goto L12d724;
#L12d708.   v3:= new [|java:util:concurrent:ConcurrentSkipListMap$Index|];
#L12d70c.   v14:= 0  @length 4;
#L12d70e.   v0:= v16  @type object;
#L12d712.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.<init>|](v3, v0, v4, v14) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type direct;
#L12d718.   v5[v2]:= v3  @type object;
#L12d71c.   v2:= v2 + 1;
#L12d720.   v4:= v3  @type object;
#L12d722.   goto L12d700;
#L12d724.   v13:= v15.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12d728.   v11:= v13.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d72c.   v0:= v17;
#L12d730.   if v0 > v11 then goto L12d744;
#L12d734.   v7:= v17;
#L12d738.   v14:= v5[v7]  @type object;
#L12d73c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.addIndex|](v15, v14, v13, v7) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.addIndex:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d742.   goto L12d6e8;
#L12d744.   v9:= v13  @type object;
#L12d746.   v12:= v13.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.node|]   @type object;
#L12d74a.   v6:= v11 + 1;
#L12d74e.   v10:= v9  @type object;
#L12d750.   v0:= v17;
#L12d754.   if v6 > v0 then goto L12d76e;
#L12d758.   v9:= new [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|];
#L12d75c.   v14:= v5[v6]  @type object;
#L12d760.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.<init>|](v9, v12, v10, v14, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] @type direct;
#L12d766.   v6:= v6 + 1;
#L12d76a.   v10:= v9  @type object;
#L12d76c.   goto L12d750;
#L12d76e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.casHead|](v15, v13, v10) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.casHead:(Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d774.   v14:= temp;
#L12d776.   if v14 == 0 then goto L12d724;
#L12d77a.   v7:= v11;
#L12d77c.   goto L12d738;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentSkipListMap.randomLevel|] ([|java:util:concurrent:ConcurrentSkipListMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.randomLevel:()I|] @Access PRIVATE {
      local temp ;

        [|int|] v0 @varname [|level|] @scope ((L0016,L001f));
        [|int|] v1 @varname [|x|] @scope ((L0002,L001f));

        v2;
      
#L12d790.   v1:= v3.[|java:util:concurrent:ConcurrentSkipListMap.randomSeed|] ;
#L12d794.   v2:= v1 ^< 13;
#L12d798.   v1:= v1 ^~ v2  @type int;
#L12d79a.   v2:= v1 ^>> 17;
#L12d79e.   v1:= v1 ^~ v2  @type int;
#L12d7a0.   v2:= v1 ^< 5;
#L12d7a4.   v1:= v1 ^~ v2  @type int;
#L12d7a6.   v3.[|java:util:concurrent:ConcurrentSkipListMap.randomSeed|]  := v1;
#L12d7aa.    v2:= -0.000000;
#L12d7b0.   v2:= v2 ^& v1  @type int;
#L12d7b2.   if v2 == 0 then goto L12d7ba;
#L12d7b6.   v0:= 0  @length 4;
#L12d7b8.   return v0;
#L12d7ba.   v0:= 1  @length 4;
#L12d7bc.   v1:= v1 ^>> 1;
#L12d7c0.   v2:= v1 ^& 1;
#L12d7c4.   if v2 == 0 then goto L12d7b8;
#L12d7c8.   v0:= v0 + 1;
#L12d7cc.   goto L12d7bc;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.readObject|] ([|java:util:concurrent:ConcurrentSkipListMap|] v15 @type (this), [|java:io:ObjectInputStream|] v16 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v1 @varname [|h|] @scope ((L0008,L0028), (L0028,L0029), (L0029,L005b), (L005b,L006e), (L006e,L0083), (L0083,L0084), (L0084,L0088), (L0088,L0089), (L0089,L008a));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v5 @varname [|idx|] @scope ((L0028,L0029), (L0058,L005a), (L005a,L0063), (L0063,L0082), (L0082,L0084), (L0084,L008a));
        [|int|] v6 @varname [|j|] @scope ((L0028,L0029), (L0044,L008a));
        [|java:lang:Object|] v7 @varname [|k|] @scope ((L0028,L0029), (L002d,L008a));
        [|java:lang:Object|] v8 @varname [|key|] @scope ((L0028,L0029), (L003f,L008a));
        [|java:lang:Object|] v11 @varname [|v|] @scope ((L0028,L0029), (L0036,L008a));
        [|java:lang:Object|] v12 @varname [|val|] @scope ((L0028,L0029), (L0040,L008a));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v13 @varname [|z|] @scope ((L0028,L0029), (L0052,L008a));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|basepred|] @scope ((L000a,L008a));
        [|int|] v3 @varname [|i|] @scope ((L0010,L008a));
        [|java:util:ArrayList|] v9 @varname [|preds|] @scope ((L000f,L008a));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v10 @varname [|q|] @scope ((L001c,L008a));


        v2;
        v4;
        v14;
      
#L12d7e0.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v16) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12d7e6.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.initialize|](v15) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.initialize:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12d7ec.   v1:= v15.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12d7f0.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.node|]   @type object;
#L12d7f4.   v9:= new [|java:util:ArrayList|];
#L12d7f8.   call temp:=  [|java:util:ArrayList.<init>|](v9) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L12d7fe.   v3:= 0  @length 4;
#L12d800.   v14:= v1.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d804.   if v3 > v14 then goto L12d816;
#L12d808.   v14:= 0  @length 4;
#L12d80a.   call temp:=  [|java:util:ArrayList.add|](v9, v14) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d810.   v3:= v3 + 1;
#L12d814.   goto L12d800;
#L12d816.   v10:= v1  @type object;
#L12d818.   v3:= v1.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d81c.   if v3 <= 0 then goto L12d832;
#L12d820.   call temp:=  [|java:util:ArrayList.set|](v9, v3, v10) @signature [|Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d826.   v10:= v10.[|java:util:concurrent:ConcurrentSkipListMap$Index.down|]   @type object;
#L12d82a.   v3:= v3 + -1;
#L12d82e.   goto L12d81c;
#L12d830.   v1:= v2  @type object;
#L12d832.   call temp:=  [|java:io:ObjectInputStream.readObject|](v16) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12d838.   v7:= temp  @type object;
#L12d83a.   if v7 != 0 then goto L12d844;
#L12d83e.   v15.[|java:util:concurrent:ConcurrentSkipListMap.head|]  := v1 @type object;
#L12d842.   return @void ;
#L12d844.   call temp:=  [|java:io:ObjectInputStream.readObject|](v16) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12d84a.   v11:= temp  @type object;
#L12d84c.   if v11 != 0 then goto L12d85c;
#L12d850.   v14:= new [|java:lang:NullPointerException|];
#L12d854.   call temp:=  [|java:lang:NullPointerException.<init>|](v14) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12d85a.   throw v14;
#L12d85c.   v8:= v7  @type object;
#L12d85e.   v12:= v11  @type object;
#L12d860.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.randomLevel|](v15) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.randomLevel:()I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d866.   v6:= temp;
#L12d868.   v14:= v1.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d86c.   if v6 <= v14 then goto L12d878;
#L12d870.   v14:= v1.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d874.   v6:= v14 + 1;
#L12d878.   v13:= new [|java:util:concurrent:ConcurrentSkipListMap$Node|];
#L12d87c.   v14:= 0  @length 4;
#L12d87e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.<init>|](v13, v8, v12, v14) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type direct;
#L12d884.   v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]  := v13 @type object;
#L12d888.   v0:= v13  @type object;
#L12d88a.   if v6 <= 0 then goto L12d832;
#L12d88e.   v4:= 0  @length 4;
#L12d890.   v3:= 1  @length 4;
#L12d892.   v5:= v4  @type object;
#L12d894.   v2:= v1  @type object;
#L12d896.   if v3 > v6 then goto L12d830;
#L12d89a.   v4:= new [|java:util:concurrent:ConcurrentSkipListMap$Index|];
#L12d89e.   v14:= 0  @length 4;
#L12d8a0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.<init>|](v4, v13, v5, v14) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type direct;
#L12d8a6.   v14:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d8aa.   if v3 <= v14 then goto L12d8f0;
#L12d8ae.   v1:= new [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|];
#L12d8b2.   v14:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.node|]   @type object;
#L12d8b6.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.<init>|](v1, v14, v2, v4, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] @type direct;
#L12d8bc.   call temp:=  [|java:util:ArrayList.size|](v9) @signature [|Ljava/util/ArrayList;.size:()I|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d8c2.   v14:= temp;
#L12d8c4.   if v3 >= v14 then goto L12d8e8;
#L12d8c8.   call temp:=  [|java:util:ArrayList.get|](v9, v3) @signature [|Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d8ce.   v14:= temp  @type object;
#L12d8d0.   v14:= ([|java:util:concurrent:ConcurrentSkipListMap$Index|])v14;
#L12d8d4.   v14.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]  := v4 @type object;
#L12d8d8.   call temp:=  [|java:util:ArrayList.set|](v9, v3, v4) @signature [|Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d8de.   v3:= v3 + 1;
#L12d8e2.   v5:= v4  @type object;
#L12d8e4.   v2:= v1  @type object;
#L12d8e6.   goto L12d896;
#L12d8e8.   call temp:=  [|java:util:ArrayList.add|](v9, v4) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L12d8ee.   goto L12d8de;
#L12d8f0.   v1:= v2  @type object;
#L12d8f2.   goto L12d8bc;

   }
    procedure [|java:util:List|] [|java:util:concurrent:ConcurrentSkipListMap.toList|] ([|java:util:Collection|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.toList:(Ljava/util/Collection;)Ljava/util/List;|] @Access STATIC_FINAL {
      local temp ;
        [|java:lang:Object|] v0 @varname [|e|] @scope ((L0013,L0017));
        [|java:util:Iterator|] v1 @varname [|i$|] @scope ((L0009,L0018));
        [|java:util:List|] v2 @varname [|list|] @scope ((L0005,L0018));

        v3;
      
#L12d904.   v2:= new [|java:util:ArrayList|];
#L12d908.   call temp:=  [|java:util:ArrayList.<init>|](v2) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L12d90e.   call temp:=  [|java:util:Collection.iterator|](v4) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L12d914.   v1:= temp  @type object;
#L12d916.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12d91c.   v3:= temp;
#L12d91e.   if v3 == 0 then goto L12d932;
#L12d922.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12d928.   v0:= temp  @type object;
#L12d92a.   call temp:=  [|java:util:List.add|](v2, v0) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L12d930.   goto L12d916;
#L12d932.   return v2  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.tryReduceLevel|] ([|java:util:concurrent:ConcurrentSkipListMap|] v5 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tryReduceLevel:()V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v0 @varname [|d|] @scope ((L000b,L002c));
        [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v1 @varname [|e|] @scope ((L0011,L002c));
        [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] v2 @varname [|h|] @scope ((L0002,L002d));

        v3;
        v4;
      
#L12d944.   v2:= v5.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12d948.   v3:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.level|] ;
#L12d94c.   v4:= 3  @length 4;
#L12d94e.   if v3 <= v4 then goto L12d99c;
#L12d952.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.down|]   @type object;
#L12d956.   v0:= ([|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|])v0;
#L12d95a.   if v0 == 0 then goto L12d99c;
#L12d95e.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.down|]   @type object;
#L12d962.   v1:= ([|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|])v1;
#L12d966.   if v1 == 0 then goto L12d99c;
#L12d96a.   v3:= v1.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.right|]   @type object;
#L12d96e.   if v3 != 0 then goto L12d99c;
#L12d972.   v3:= v0.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.right|]   @type object;
#L12d976.   if v3 != 0 then goto L12d99c;
#L12d97a.   v3:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.right|]   @type object;
#L12d97e.   if v3 != 0 then goto L12d99c;
#L12d982.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.casHead|](v5, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.casHead:(Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d988.   v3:= temp;
#L12d98a.   if v3 == 0 then goto L12d99c;
#L12d98e.   v3:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.right|]   @type object;
#L12d992.   if v3 == 0 then goto L12d99c;
#L12d996.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.casHead|](v5, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.casHead:(Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12d99c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.writeObject|] ([|java:util:concurrent:ConcurrentSkipListMap|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v1 @varname [|v|] @scope ((L000d,L001a));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|n|] @scope ((L0007,L001f));


        v2;
      
#L12d9b0.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v4) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12d9b6.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findFirst|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12d9bc.   v0:= temp  @type object;
#L12d9be.   if v0 == 0 then goto L12d9e4;
#L12d9c2.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12d9c8.   v1:= temp  @type object;
#L12d9ca.   if v1 == 0 then goto L12d9de;
#L12d9ce.   v2:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12d9d2.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12d9d8.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v1) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12d9de.   v0:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12d9e2.   goto L12d9be;
#L12d9e4.   v2:= 0  @length 4;
#L12d9e6.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12d9ec.   return @void ;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.ceilingEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.ceilingEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12da00.   v0:= 1  @length 4;
#L12da02.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.getNear|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.getNear:(Ljava/lang/Object;I)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12da08.   v0:= temp  @type object;
#L12da0a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.ceilingKey|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|n|] @scope ((L0005,L000c));


        v1;
      
#L12da1c.   v1:= 1  @length 4;
#L12da1e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v2, v3, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12da24.   v0:= temp  @type object;
#L12da26.   if v0 != 0 then goto L12da2e;
#L12da2a.   v1:= 0  @length 4;
#L12da2c.   return v1  @type object;
#L12da2e.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12da32.   goto L12da2c;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.clear|] ([|java:util:concurrent:ConcurrentSkipListMap|] v0 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.clear:()V|] @Access PUBLIC {
      local temp ;


      
#L12da44.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.initialize|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.initialize:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12da4a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.clone|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.clone:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L12da5c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.clone|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.clone:()Ljava/util/concurrent/ConcurrentSkipListMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12da62.   v0:= temp  @type object;
#L12da64.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap|] [|java:util:concurrent:ConcurrentSkipListMap.clone|] ([|java:util:concurrent:ConcurrentSkipListMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.clone:()Ljava/util/concurrent/ConcurrentSkipListMap;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap|] v0 @varname [|clone|] @scope ((L0006,L000d));
        [|java:lang:CloneNotSupportedException|] v1 @varname [|e|] @scope ((L000e,L0014));

        v2;
      
#L12da78.   call temp:=  [|java:util:AbstractMap.clone|](v3) @signature [|Ljava/util/AbstractMap;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:util:AbstractMap|] @type super;
#L12da7e.   v0:= temp  @type object;
#L12da80.   v0:= ([|java:util:concurrent:ConcurrentSkipListMap|])v0;
#L12da84.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.initialize|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.initialize:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12da8a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.buildFromSorted|](v0, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.buildFromSorted:(Ljava/util/SortedMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12da90.   return v0  @type object;
#L12da92.   v1:= Exception  @type object;
#L12da94.   v2:= new [|java:lang:InternalError|];
#L12da98.   call temp:=  [|java:lang:InternalError.<init>|](v2) @signature [|Ljava/lang/InternalError;.<init>:()V|] @classDescriptor [|java:lang:InternalError|] @type direct;
#L12da9e.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L12da78..L12da90] goto L12da92;

   }
    procedure [|java:util:Comparator|] [|java:util:concurrent:ConcurrentSkipListMap.comparator|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12dac0.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap.comparator|]   @type object;
#L12dac4.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentSkipListMap.compare|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @Access  {
      local temp ;



        [|java:util:Comparator|] v0 @varname [|cmp|] @scope ((L0002,L0010));


        v1;
      
#L12dad8.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap.comparator|]   @type object;
#L12dadc.   if v0 == 0 then goto L12daea;
#L12dae0.   call temp:=  [|java:util:Comparator.compare|](v0, v3, v4) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L12dae6.   v1:= temp;
#L12dae8.   return v1;
#L12daea.   v3:= ([|java:lang:Comparable|])v3;
#L12daee.   call temp:=  [|java:lang:Comparable.compareTo|](v3, v4) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L12daf4.   v1:= temp;
#L12daf6.   goto L12dae8;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap.containsKey|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.containsKey:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12db08.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doGet|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doGet:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12db0e.   v0:= temp  @type object;
#L12db10.   if v0 == 0 then goto L12db18;
#L12db14.   v0:= 1  @length 4;
#L12db16.   return v0;
#L12db18.   v0:= 0  @length 4;
#L12db1a.   goto L12db16;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap.containsValue|] ([|java:util:concurrent:ConcurrentSkipListMap|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.containsValue:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v1 @varname [|v|] @scope ((L0012,L001b), (L001c,L001f));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|n|] @scope ((L000c,L0021));


        v2;
      
#L12db2c.   if v4 != 0 then goto L12db3c;
#L12db30.   v2:= new [|java:lang:NullPointerException|];
#L12db34.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12db3a.   throw v2;
#L12db3c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findFirst|](v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12db42.   v0:= temp  @type object;
#L12db44.   if v0 == 0 then goto L12db6a;
#L12db48.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12db4e.   v1:= temp  @type object;
#L12db50.   if v1 == 0 then goto L12db64;
#L12db54.   call temp:=  [|java:lang:Object.equals|](v4, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12db5a.   v2:= temp;
#L12db5c.   if v2 == 0 then goto L12db64;
#L12db60.   v2:= 1  @length 4;
#L12db62.   return v2;
#L12db64.   v0:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12db68.   goto L12db44;
#L12db6a.   v2:= 0  @length 4;
#L12db6c.   goto L12db62;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap.descendingKeySet|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.descendingKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12db80.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.descendingMap|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.descendingMap:()Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12db86.   v0:= temp  @type object;
#L12db88.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12db8e.   v0:= temp  @type object;
#L12db90.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.descendingMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.descendingMap:()Ljava/util/NavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L12dba4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.descendingMap|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.descendingMap:()Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12dbaa.   v0:= temp  @type object;
#L12dbac.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.descendingMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v8 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.descendingMap:()Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentNavigableMap|] v7 @varname [|dm|] @scope ((L0004,L0006), (L0007,L0014));

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12dbc0.   v2:= 0  @length 4;
#L12dbc2.   v3:= 0  @length 4;
#L12dbc4.   v7:= v8.[|java:util:concurrent:ConcurrentSkipListMap.descendingMap|]   @type object;
#L12dbc8.   if v7 == 0 then goto L12dbce;
#L12dbcc.   return v7  @type object;
#L12dbce.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$SubMap|];
#L12dbd2.   v6:= 1  @length 4;
#L12dbd4.   v1:= v8  @type object;
#L12dbd6.   v4:= v2  @type object;
#L12dbd8.   v5:= v3;
#L12dbda.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;Ljava/lang/Object;ZLjava/lang/Object;ZZ)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12dbe0.   v8.[|java:util:concurrent:ConcurrentSkipListMap.descendingMap|]  := v0 @type object;
#L12dbe4.   v7:= v0  @type object;
#L12dbe6.   goto L12dbcc;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.doRemove|] ([|java:util:concurrent:ConcurrentSkipListMap|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|java:lang:Object|] v10 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doRemove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access FINAL {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|b|] @scope ((L0009,L005f));
        [|int|] v1 @varname [|c|] @scope ((L0029,L005f));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @varname [|f|] @scope ((L0011,L005f));
        [|java:lang:Comparable|] v3 @varname [|key|] @scope ((L0005,L005f));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v4 @varname [|n|] @scope ((L000b,L005f));
        [|java:lang:Object|] v5 @varname [|v|] @scope ((L0017,L005f));



        v6;
        v7;
      
#L12dbf8.   v6:= 0  @length 4;
#L12dbfa.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.comparable|](v8, v9) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparable:(Ljava/lang/Object;)Ljava/lang/Comparable;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12dc00.   v3:= temp  @type object;
#L12dc02.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findPredecessor|](v8, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findPredecessor:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12dc08.   v0:= temp  @type object;
#L12dc0a.   v4:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dc0e.   if v4 != 0 then goto L12dc16;
#L12dc12.   v5:= v6  @type object;
#L12dc14.   return v5  @type object;
#L12dc16.   v2:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dc1a.   v7:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dc1e.   if v4 != v7 then goto L12dc02;
#L12dc22.   v5:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12dc26.   if v5 != 0 then goto L12dc32;
#L12dc2a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.helpDelete|](v4, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.helpDelete:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dc30.   goto L12dc02;
#L12dc32.   if v5 == v4 then goto L12dc02;
#L12dc36.   v7:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12dc3a.   if v7 == 0 then goto L12dc02;
#L12dc3e.   v7:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12dc42.   call temp:=  [|java:lang:Comparable.compareTo|](v3, v7) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L12dc48.   v1:= temp;
#L12dc4a.   if v1 >= 0 then goto L12dc52;
#L12dc4e.   v5:= v6  @type object;
#L12dc50.   goto L12dc14;
#L12dc52.   if v1 <= 0 then goto L12dc5c;
#L12dc56.   v0:= v4  @type object;
#L12dc58.   v4:= v2  @type object;
#L12dc5a.   goto L12dc0e;
#L12dc5c.   if v10 == 0 then goto L12dc70;
#L12dc60.   call temp:=  [|java:lang:Object.equals|](v10, v5) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12dc66.   v7:= temp;
#L12dc68.   if v7 != 0 then goto L12dc70;
#L12dc6c.   v5:= v6  @type object;
#L12dc6e.   goto L12dc14;
#L12dc70.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casValue|](v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casValue:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dc76.   v7:= temp;
#L12dc78.   if v7 == 0 then goto L12dc02;
#L12dc7c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.appendMarker|](v4, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.appendMarker:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dc82.   v6:= temp;
#L12dc84.   if v6 == 0 then goto L12dc94;
#L12dc88.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casNext|](v0, v4, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casNext:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dc8e.   v6:= temp;
#L12dc90.   if v6 != 0 then goto L12dc9c;
#L12dc94.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNode|](v8, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNode:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12dc9a.   goto L12dc14;
#L12dc9c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findPredecessor|](v8, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findPredecessor:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12dca2.   v6:= v8.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12dca6.   v6:= v6.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.right|]   @type object;
#L12dcaa.   if v6 != 0 then goto L12dc14;
#L12dcae.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.tryReduceLevel|](v8) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tryReduceLevel:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12dcb4.   goto L12dc14;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.doRemoveFirstEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v6 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doRemoveFirstEntry:()Ljava/util/Map$Entry;|] @Access  {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|b|] @scope ((L0005,L0038));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @varname [|f|] @scope ((L000c,L0038));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @varname [|n|] @scope ((L0007,L0038));
        [|java:lang:Object|] v3 @varname [|v|] @scope ((L0012,L0038));

        v4;
        v5;
      
#L12dcc8.   v4:= 0  @length 4;
#L12dcca.   v5:= v6.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12dcce.   v0:= v5.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.node|]   @type object;
#L12dcd2.   v2:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dcd6.   if v2 != 0 then goto L12dcdc;
#L12dcda.   return v4  @type object;
#L12dcdc.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dce0.   v5:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dce4.   if v2 != v5 then goto L12dcca;
#L12dce8.   v3:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12dcec.   if v3 != 0 then goto L12dcf8;
#L12dcf0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.helpDelete|](v2, v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.helpDelete:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dcf6.   goto L12dcca;
#L12dcf8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casValue|](v2, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casValue:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dcfe.   v5:= temp;
#L12dd00.   if v5 == 0 then goto L12dcca;
#L12dd04.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.appendMarker|](v2, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.appendMarker:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dd0a.   v4:= temp;
#L12dd0c.   if v4 == 0 then goto L12dd1c;
#L12dd10.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casNext|](v0, v2, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casNext:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dd16.   v4:= temp;
#L12dd18.   if v4 != 0 then goto L12dd22;
#L12dd1c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findFirst|](v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12dd22.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.clearIndexToFirst|](v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.clearIndexToFirst:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12dd28.   v4:= new [|java:util:AbstractMap$SimpleImmutableEntry|];
#L12dd2c.   v5:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12dd30.   call temp:=  [|java:util:AbstractMap$SimpleImmutableEntry.<init>|](v4, v5, v3) @signature [|Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:AbstractMap$SimpleImmutableEntry|] @type direct;
#L12dd36.   goto L12dcda;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.doRemoveLastEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v8 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doRemoveLastEntry:()Ljava/util/Map$Entry;|] @Access  {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @varname [|f|] @scope ((L0010,L0014), (L0016,L0057));
        [|java:lang:Object|] v5 @varname [|v|] @scope ((L0010,L0014), (L001c,L0057));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|b|] @scope ((L0005,L0057));
        [|java:lang:Comparable|] v1 @varname [|ck|] @scope ((L0035,L0057));
        [|java:lang:Object|] v3 @varname [|key|] @scope ((L0031,L0057));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v4 @varname [|n|] @scope ((L0007,L0057));

        v6;
        v7;
      
#L12dd48.   v6:= 0  @length 4;
#L12dd4a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findPredecessorOfLast|](v8) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findPredecessorOfLast:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12dd50.   v0:= temp  @type object;
#L12dd52.   v4:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dd56.   if v4 != 0 then goto L12dd70;
#L12dd5a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.isBaseHeader|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.isBaseHeader:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dd60.   v7:= temp;
#L12dd62.   if v7 == 0 then goto L12dd4a;
#L12dd66.   return v6  @type object;
#L12dd68.   if v2 == 0 then goto L12dd9a;
#L12dd6c.   v0:= v4  @type object;
#L12dd6e.   v4:= v2  @type object;
#L12dd70.   v2:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dd74.   v7:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dd78.   if v4 != v7 then goto L12dd4a;
#L12dd7c.   v5:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12dd80.   if v5 != 0 then goto L12dd8c;
#L12dd84.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.helpDelete|](v4, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.helpDelete:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dd8a.   goto L12dd4a;
#L12dd8c.   if v5 == v4 then goto L12dd4a;
#L12dd90.   v7:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12dd94.   if v7 != 0 then goto L12dd68;
#L12dd98.   goto L12dd4a;
#L12dd9a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casValue|](v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casValue:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dda0.   v7:= temp;
#L12dda2.   if v7 == 0 then goto L12dd4a;
#L12dda6.   v3:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12ddaa.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.comparable|](v8, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparable:(Ljava/lang/Object;)Ljava/lang/Comparable;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12ddb0.   v1:= temp  @type object;
#L12ddb2.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.appendMarker|](v4, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.appendMarker:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12ddb8.   v6:= temp;
#L12ddba.   if v6 == 0 then goto L12ddca;
#L12ddbe.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casNext|](v0, v4, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casNext:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12ddc4.   v6:= temp;
#L12ddc6.   if v6 != 0 then goto L12dddc;
#L12ddca.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNode|](v8, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNode:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12ddd0.   v6:= new [|java:util:AbstractMap$SimpleImmutableEntry|];
#L12ddd4.   call temp:=  [|java:util:AbstractMap$SimpleImmutableEntry.<init>|](v6, v3, v5) @signature [|Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V|] @classDescriptor [|java:util:AbstractMap$SimpleImmutableEntry|] @type direct;
#L12ddda.   goto L12dd66;
#L12dddc.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findPredecessor|](v8, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findPredecessor:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12dde2.   v6:= v8.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12dde6.   v6:= v6.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.right|]   @type object;
#L12ddea.   if v6 != 0 then goto L12ddd0;
#L12ddee.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.tryReduceLevel|](v8) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tryReduceLevel:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12ddf4.   goto L12ddd0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap.entryIterator|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.entryIterator:()Ljava/util/Iterator;|] @Access  {
      local temp ;


        v0;
      
#L12de08.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|];
#L12de0c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntryIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$EntryIterator|] @type direct;
#L12de12.   return v0  @type object;

   }
    procedure [|java:util:Set|] [|java:util:concurrent:ConcurrentSkipListMap.entrySet|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.entrySet:()Ljava/util/Set;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] v0 @varname [|es|] @scope ((L0002,L0004), (L0005,L0007));

      
#L12de24.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap.entrySet|]   @type object;
#L12de28.   if v0 == 0 then goto L12de2e;
#L12de2c.   return v0  @type object;
#L12de2e.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|];
#L12de32.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$EntrySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$EntrySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$EntrySet|] @type direct;
#L12de38.   v1.[|java:util:concurrent:ConcurrentSkipListMap.entrySet|]  := v0 @type object;
#L12de3c.   goto L12de2c;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap.equals|] ([|java:util:concurrent:ConcurrentSkipListMap|] v11 @type (this), [|java:lang:Object|] v12 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:Map$Entry|] v1 @varname [|e|] @scope ((L0022,L0036), (L004a,L0062));
        [|java:util:Iterator|] v2 @varname [|i$|] @scope ((L0016,L0062));
        [|java:lang:Object|] v3 @varname [|k|] @scope ((L004e,L0062));
        [|java:lang:Object|] v6 @varname [|v|] @scope ((L0052,L0062));
        [|java:lang:ClassCastException|] v5 @varname [|unused|] @scope ((L0063,L0065), (L0066,L0068));
        [|java:util:Map|] v4 @varname [|m|] @scope ((L000e,L0068));


        v0;
        v7;
        v8;
        v9;
        v10;
      
#L12de50.   v7:= 1  @length 4;
#L12de52.   v8:= 0  @length 4;
#L12de54.   if v12 != v11 then goto L12de5a;
#L12de58.   return v7;
#L12de5a.   v9:= instanceof @varname v12 @type [|java:util:Map|];
#L12de5e.   if v9 != 0 then goto L12de66;
#L12de62.   v7:= v8;
#L12de64.   goto L12de58;
#L12de66.   v4:= v12  @type object;
#L12de68.   v4:= ([|java:util:Map|])v4;
#L12de6c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.entrySet|](v11) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12de72.   v9:= temp  @type object;
#L12de74.   call temp:=  [|java:util:Set.iterator|](v9) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L12de7a.   v2:= temp  @type object;
#L12de7c.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12de82.   v9:= temp;
#L12de84.   if v9 == 0 then goto L12debc;
#L12de88.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12de8e.   v1:= temp  @type object;
#L12de90.   v1:= ([|java:util:Map$Entry|])v1;
#L12de94.   call temp:=  [|java:util:Map$Entry.getValue|](v1) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12de9a.   v9:= temp  @type object;
#L12de9c.   call temp:=  [|java:util:Map$Entry.getKey|](v1) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12dea2.   v10:= temp  @type object;
#L12dea4.   call temp:=  [|java:util:Map.get|](v4, v10) @signature [|Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:Map|] @type interface;
#L12deaa.   v10:= temp  @type object;
#L12deac.   call temp:=  [|java:lang:Object.equals|](v9, v10) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12deb2.   v9:= temp;
#L12deb4.   if v9 != 0 then goto L12de7c;
#L12deb8.   v7:= v8;
#L12deba.   goto L12de58;
#L12debc.   call temp:=  [|java:util:Map.entrySet|](v4) @signature [|Ljava/util/Map;.entrySet:()Ljava/util/Set;|] @classDescriptor [|java:util:Map|] @type interface;
#L12dec2.   v9:= temp  @type object;
#L12dec4.   call temp:=  [|java:util:Set.iterator|](v9) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L12deca.   v2:= temp  @type object;
#L12decc.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12ded2.   v9:= temp;
#L12ded4.   if v9 == 0 then goto L12de58;
#L12ded8.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12dede.   v0:= temp  @type object;
#L12dee0.   v0:= ([|java:util:Map$Entry|])v0;
#L12dee4.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12deea.   v3:= temp  @type object;
#L12deec.   call temp:=  [|java:util:Map$Entry.getValue|](v0) @signature [|Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12def2.   v6:= temp  @type object;
#L12def4.   if v3 == 0 then goto L12df10;
#L12def8.   if v6 == 0 then goto L12df10;
#L12defc.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.get|](v11, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12df02.   v9:= temp  @type object;
#L12df04.   call temp:=  [|java:lang:Object.equals|](v6, v9) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12df0a.   v9:= temp;
#L12df0c.   if v9 != 0 then goto L12decc;
#L12df10.   v7:= v8;
#L12df12.   goto L12de58;
#L12df14.   v5:= Exception  @type object;
#L12df16.   v7:= v8;
#L12df18.   goto L12de58;
#L12df1a.   v5:= Exception  @type object;
#L12df1c.   v7:= v8;
#L12df1e.   goto L12de58;
  catch  [|java:lang:ClassCastException|] @[L12de6c..L12df0a] goto L12df14;
  catch  [|java:lang:NullPointerException|] @[L12de6c..L12df0a] goto L12df1a;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap.findFirst|] ([|java:util:concurrent:ConcurrentSkipListMap|] v3 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access  {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @varname [|n|] @scope ((L0006,L0009), (L000a,L0014));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|b|] @scope ((L0004,L0014));

        v2;
      
#L12df40.   v2:= v3.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12df44.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.node|]   @type object;
#L12df48.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12df4c.   if v1 != 0 then goto L12df54;
#L12df50.   v1:= 0  @length 4;
#L12df52.   return v1  @type object;
#L12df54.   v2:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12df58.   if v2 != 0 then goto L12df52;
#L12df5c.   v2:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12df60.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.helpDelete|](v1, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.helpDelete:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12df66.   goto L12df40;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap.findLast|] ([|java:util:concurrent:ConcurrentSkipListMap|] v8 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findLast:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access  {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|b|] @scope ((L001c,L0027), (L0028,L0042));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v1 @varname [|d|] @scope ((L0016,L0042));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @varname [|f|] @scope ((L002a,L0042));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v3 @varname [|n|] @scope ((L001e,L0042));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v4 @varname [|q|] @scope ((L0002,L0042));
        [|java:util:concurrent:ConcurrentSkipListMap$Index|] v5 @varname [|r|] @scope ((L0004,L0042));
        [|java:lang:Object|] v6 @varname [|v|] @scope ((L0033,L0042));

        v7;
      
#L12df78.   v4:= v8.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12df7c.   v5:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Index.right|]   @type object;
#L12df80.   if v5 == 0 then goto L12dfa0;
#L12df84.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.indexesDeletedNode|](v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.indexesDeletedNode:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12df8a.   v7:= temp;
#L12df8c.   if v7 == 0 then goto L12df9c;
#L12df90.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Index.unlink|](v4, v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Index;.unlink:(Ljava/util/concurrent/ConcurrentSkipListMap$Index;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Index|] @type virtual;
#L12df96.   v4:= v8.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12df9a.   goto L12df7c;
#L12df9c.   v4:= v5  @type object;
#L12df9e.   goto L12df7c;
#L12dfa0.   v1:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Index.down|]   @type object;
#L12dfa4.   if v1 == 0 then goto L12dfac;
#L12dfa8.   v4:= v1  @type object;
#L12dfaa.   goto L12df7c;
#L12dfac.   v0:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Index.node|]   @type object;
#L12dfb0.   v3:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dfb4.   if v3 != 0 then goto L12dfc8;
#L12dfb8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.isBaseHeader|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.isBaseHeader:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dfbe.   v7:= temp;
#L12dfc0.   if v7 == 0 then goto L12dfc6;
#L12dfc4.   v0:= 0  @length 4;
#L12dfc6.   return v0  @type object;
#L12dfc8.   v2:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dfcc.   v7:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12dfd0.   if v3 == v7 then goto L12dfda;
#L12dfd4.   v4:= v8.[|java:util:concurrent:ConcurrentSkipListMap.head|]   @type object;
#L12dfd8.   goto L12df7c;
#L12dfda.   v6:= v3.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12dfde.   if v6 != 0 then goto L12dfea;
#L12dfe2.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.helpDelete|](v3, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.helpDelete:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12dfe8.   goto L12dfd4;
#L12dfea.   if v6 == v3 then goto L12dfd4;
#L12dfee.   v7:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12dff2.   if v7 == 0 then goto L12dfd4;
#L12dff6.   v0:= v3  @type object;
#L12dff8.   v3:= v2  @type object;
#L12dffa.   goto L12dfb4;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListMap$Node|] [|java:util:concurrent:ConcurrentSkipListMap.findNear|] ([|java:util:concurrent:ConcurrentSkipListMap|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|int|] v10) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @Access  {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|b|] @scope ((L0009,L0018), (L0019,L0054));
        [|int|] v1 @varname [|c|] @scope ((L0033,L0054));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @varname [|f|] @scope ((L001b,L0054));
        [|java:lang:Comparable|] v3 @varname [|key|] @scope ((L0005,L0054));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v4 @varname [|n|] @scope ((L000b,L0054));
        [|java:lang:Object|] v5 @varname [|v|] @scope ((L0021,L0054));



        v6;
        v7;
      
#L12e00c.   v6:= 0  @length 4;
#L12e00e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.comparable|](v8, v9) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparable:(Ljava/lang/Object;)Ljava/lang/Comparable;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e014.   v3:= temp  @type object;
#L12e016.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findPredecessor|](v8, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findPredecessor:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e01c.   v0:= temp  @type object;
#L12e01e.   v4:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12e022.   if v4 != 0 then goto L12e03e;
#L12e026.   v7:= v10 ^& 2;
#L12e02a.   if v7 == 0 then goto L12e03a;
#L12e02e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.isBaseHeader|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.isBaseHeader:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12e034.   v7:= temp;
#L12e036.   if v7 == 0 then goto L12e03c;
#L12e03a.   v0:= v6  @type object;
#L12e03c.   return v0  @type object;
#L12e03e.   v2:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12e042.   v7:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12e046.   if v4 != v7 then goto L12e016;
#L12e04a.   v5:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12e04e.   if v5 != 0 then goto L12e05a;
#L12e052.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.helpDelete|](v4, v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.helpDelete:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12e058.   goto L12e016;
#L12e05a.   if v5 == v4 then goto L12e016;
#L12e05e.   v7:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12e062.   if v7 == 0 then goto L12e016;
#L12e066.   v7:= v4.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12e06a.   call temp:=  [|java:lang:Comparable.compareTo|](v3, v7) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L12e070.   v1:= temp;
#L12e072.   if v1 != 0 then goto L12e07e;
#L12e076.   v7:= v10 ^& 1;
#L12e07a.   if v7 != 0 then goto L12e08a;
#L12e07e.   if v1 >= 0 then goto L12e08e;
#L12e082.   v7:= v10 ^& 2;
#L12e086.   if v7 != 0 then goto L12e08e;
#L12e08a.   v0:= v4  @type object;
#L12e08c.   goto L12e03c;
#L12e08e.   if v1 > 0 then goto L12e0ae;
#L12e092.   v7:= v10 ^& 2;
#L12e096.   if v7 == 0 then goto L12e0ae;
#L12e09a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.isBaseHeader|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.isBaseHeader:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12e0a0.   v7:= temp;
#L12e0a2.   if v7 == 0 then goto L12e0aa;
#L12e0a6.   v0:= v6  @type object;
#L12e0a8.   goto L12e03c;
#L12e0aa.   v6:= v0  @type object;
#L12e0ac.   goto L12e0a6;
#L12e0ae.   v0:= v4  @type object;
#L12e0b0.   v4:= v2  @type object;
#L12e0b2.   goto L12e022;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.firstEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.firstEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;

        [|java:util:AbstractMap$SimpleImmutableEntry|] v0 @varname [|e|] @scope ((L000c,L000f));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @varname [|n|] @scope ((L0004,L000f));

      
#L12e0c4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findFirst|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e0ca.   v1:= temp  @type object;
#L12e0cc.   if v1 != 0 then goto L12e0d4;
#L12e0d0.   v0:= 0  @length 4;
#L12e0d2.   return v0  @type object;
#L12e0d4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.createSnapshot|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.createSnapshot:()Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12e0da.   v0:= temp  @type object;
#L12e0dc.   if v0 == 0 then goto L12e0c4;
#L12e0e0.   goto L12e0d2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.firstKey|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.firstKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|n|] @scope ((L0004,L000f));

        v1;
      
#L12e0f4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findFirst|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e0fa.   v0:= temp  @type object;
#L12e0fc.   if v0 != 0 then goto L12e10c;
#L12e100.   v1:= new [|java:util:NoSuchElementException|];
#L12e104.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12e10a.   throw v1;
#L12e10c.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12e110.   return v1  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.floorEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.floorEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12e124.   v0:= 3  @length 4;
#L12e126.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.getNear|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.getNear:(Ljava/lang/Object;I)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e12c.   v0:= temp  @type object;
#L12e12e.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.floorKey|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|n|] @scope ((L0005,L000c));


        v1;
      
#L12e140.   v1:= 3  @length 4;
#L12e142.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v2, v3, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e148.   v0:= temp  @type object;
#L12e14a.   if v0 != 0 then goto L12e152;
#L12e14e.   v1:= 0  @length 4;
#L12e150.   return v1  @type object;
#L12e152.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12e156.   goto L12e150;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.get|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12e168.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doGet|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doGet:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e16e.   v0:= temp  @type object;
#L12e170.   return v0  @type object;

   }
    procedure [|java:util:AbstractMap$SimpleImmutableEntry|] [|java:util:concurrent:ConcurrentSkipListMap.getNear|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|int|] v4) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.getNear:(Ljava/lang/Object;I)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @Access  {
      local temp ;

        [|java:util:AbstractMap$SimpleImmutableEntry|] v0 @varname [|e|] @scope ((L000c,L000f));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @varname [|n|] @scope ((L0004,L000f));



      
#L12e184.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v2, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e18a.   v1:= temp  @type object;
#L12e18c.   if v1 != 0 then goto L12e194;
#L12e190.   v0:= 0  @length 4;
#L12e192.   return v0  @type object;
#L12e194.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.createSnapshot|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.createSnapshot:()Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12e19a.   v0:= temp  @type object;
#L12e19c.   if v0 == 0 then goto L12e184;
#L12e1a0.   goto L12e192;

   }
    procedure [|java:util:NavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;




        v0;
      
#L12e1b4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.headMap|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e1ba.   v0:= temp  @type object;
#L12e1bc.   return v0  @type object;

   }
    procedure [|java:util:SortedMap|] [|java:util:concurrent:ConcurrentSkipListMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.headMap:(Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



        v0;
      
#L12e1d0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.headMap|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.headMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e1d6.   v0:= temp  @type object;
#L12e1d8.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.headMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12e1ec.   v0:= 0  @length 4;
#L12e1ee.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.headMap|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e1f4.   v0:= temp  @type object;
#L12e1f6.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.headMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|boolean|] v9) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12e208.   v3:= 0  @length 4;
#L12e20a.   if v8 != 0 then goto L12e21a;
#L12e20e.   v0:= new [|java:lang:NullPointerException|];
#L12e212.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e218.   throw v0;
#L12e21a.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$SubMap|];
#L12e21e.   v2:= 0  @length 4;
#L12e220.   v1:= v7  @type object;
#L12e222.   v4:= v8  @type object;
#L12e224.   v5:= v9;
#L12e226.   v6:= v3;
#L12e228.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;Ljava/lang/Object;ZLjava/lang/Object;ZZ)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12e22e.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.higherEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.higherEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12e240.   v0:= 0  @length 4;
#L12e242.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.getNear|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.getNear:(Ljava/lang/Object;I)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e248.   v0:= temp  @type object;
#L12e24a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.higherKey|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|n|] @scope ((L0005,L000c));


        v1;
      
#L12e25c.   v1:= 0  @length 4;
#L12e25e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v2, v3, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e264.   v0:= temp  @type object;
#L12e266.   if v0 != 0 then goto L12e26e;
#L12e26a.   v1:= 0  @length 4;
#L12e26c.   return v1  @type object;
#L12e26e.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12e272.   goto L12e26c;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap.inHalfOpenRange|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.inHalfOpenRange:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access  {
      local temp ;





        v0;
      
#L12e284.   if v2 != 0 then goto L12e294;
#L12e288.   v0:= new [|java:lang:NullPointerException|];
#L12e28c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e292.   throw v0;
#L12e294.   if v3 == 0 then goto L12e2a4;
#L12e298.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e29e.   v0:= temp;
#L12e2a0.   if v0 < 0 then goto L12e2b8;
#L12e2a4.   if v4 == 0 then goto L12e2b4;
#L12e2a8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v1, v2, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e2ae.   v0:= temp;
#L12e2b0.   if v0 >= 0 then goto L12e2b8;
#L12e2b4.   v0:= 1  @length 4;
#L12e2b6.   return v0;
#L12e2b8.   v0:= 0  @length 4;
#L12e2ba.   goto L12e2b6;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap.inOpenRange|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.inOpenRange:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access  {
      local temp ;





        v0;
      
#L12e2cc.   if v2 != 0 then goto L12e2dc;
#L12e2d0.   v0:= new [|java:lang:NullPointerException|];
#L12e2d4.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e2da.   throw v0;
#L12e2dc.   if v3 == 0 then goto L12e2ec;
#L12e2e0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e2e6.   v0:= temp;
#L12e2e8.   if v0 < 0 then goto L12e300;
#L12e2ec.   if v4 == 0 then goto L12e2fc;
#L12e2f0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.compare|](v1, v2, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e2f6.   v0:= temp;
#L12e2f8.   if v0 > 0 then goto L12e300;
#L12e2fc.   v0:= 1  @length 4;
#L12e2fe.   return v0;
#L12e300.   v0:= 0  @length 4;
#L12e302.   goto L12e2fe;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListMap.initialize|] ([|java:util:concurrent:ConcurrentSkipListMap|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.initialize:()V|] @Access FINAL {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L12e314.   v3:= 0  @length 4;
#L12e316.   v4.[|java:util:concurrent:ConcurrentSkipListMap.keySet|]  := v3 @type object;
#L12e31a.   v4.[|java:util:concurrent:ConcurrentSkipListMap.entrySet|]  := v3 @type object;
#L12e31e.   v4.[|java:util:concurrent:ConcurrentSkipListMap.values|]  := v3 @type object;
#L12e322.   v4.[|java:util:concurrent:ConcurrentSkipListMap.descendingMap|]  := v3 @type object;
#L12e326.   v0:= @@[|java:util:concurrent:ConcurrentSkipListMap.seedGenerator|]   @type object;
#L12e32a.   call temp:=  [|java:util:Random.nextInt|](v0) @signature [|Ljava/util/Random;.nextInt:()I|] @classDescriptor [|java:util:Random|] @type virtual;
#L12e330.   v0:= temp;
#L12e332.   v0:= v0 ^| 256;
#L12e336.   v4.[|java:util:concurrent:ConcurrentSkipListMap.randomSeed|]  := v0;
#L12e33a.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|];
#L12e33e.   v1:= new [|java:util:concurrent:ConcurrentSkipListMap$Node|];
#L12e342.   v2:= @@[|java:util:concurrent:ConcurrentSkipListMap.BASE_HEADER|]   @type object;
#L12e346.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.<init>|](v1, v3, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.<init>:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/concurrent/ConcurrentSkipListMap$Node;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type direct;
#L12e34c.   v2:= 1  @length 4;
#L12e34e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex.<init>|](v0, v1, v3, v3, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap$Node;Ljava/util/concurrent/ConcurrentSkipListMap$Index;Ljava/util/concurrent/ConcurrentSkipListMap$Index;I)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$HeadIndex|] @type direct;
#L12e354.   v4.[|java:util:concurrent:ConcurrentSkipListMap.head|]  := v0 @type object;
#L12e358.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap.isEmpty|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12e36c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findFirst|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e372.   v0:= temp  @type object;
#L12e374.   if v0 != 0 then goto L12e37c;
#L12e378.   v0:= 1  @length 4;
#L12e37a.   return v0;
#L12e37c.   v0:= 0  @length 4;
#L12e37e.   goto L12e37a;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap.keyIterator|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.keyIterator:()Ljava/util/Iterator;|] @Access  {
      local temp ;


        v0;
      
#L12e390.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator|];
#L12e394.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeyIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeyIterator|] @type direct;
#L12e39a.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap.keySet|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.keySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v0 @varname [|ks|] @scope ((L0002,L0004), (L0005,L0007));

      
#L12e3ac.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap.keySet|]   @type object;
#L12e3b0.   if v0 == 0 then goto L12e3b6;
#L12e3b4.   return v0  @type object;
#L12e3b6.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$KeySet|];
#L12e3ba.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type direct;
#L12e3c0.   v1.[|java:util:concurrent:ConcurrentSkipListMap.keySet|]  := v0 @type object;
#L12e3c4.   goto L12e3b4;

   }
    procedure [|java:util:Set|] [|java:util:concurrent:ConcurrentSkipListMap.keySet|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.keySet:()Ljava/util/Set;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L12e3d8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.keySet|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.keySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e3de.   v0:= temp  @type object;
#L12e3e0.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.lastEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.lastEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;

        [|java:util:AbstractMap$SimpleImmutableEntry|] v0 @varname [|e|] @scope ((L000c,L000f));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @varname [|n|] @scope ((L0004,L000f));

      
#L12e3f4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findLast|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findLast:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e3fa.   v1:= temp  @type object;
#L12e3fc.   if v1 != 0 then goto L12e404;
#L12e400.   v0:= 0  @length 4;
#L12e402.   return v0  @type object;
#L12e404.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.createSnapshot|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.createSnapshot:()Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12e40a.   v0:= temp  @type object;
#L12e40c.   if v0 == 0 then goto L12e3f4;
#L12e410.   goto L12e402;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.lastKey|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.lastKey:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|n|] @scope ((L0004,L000f));

        v1;
      
#L12e424.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findLast|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findLast:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e42a.   v0:= temp  @type object;
#L12e42c.   if v0 != 0 then goto L12e43c;
#L12e430.   v1:= new [|java:util:NoSuchElementException|];
#L12e434.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12e43a.   throw v1;
#L12e43c.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12e440.   return v1  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.lowerEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.lowerEntry:(Ljava/lang/Object;)Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12e454.   v0:= 2  @length 4;
#L12e456.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.getNear|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.getNear:(Ljava/lang/Object;I)Ljava/util/AbstractMap$SimpleImmutableEntry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e45c.   v0:= temp  @type object;
#L12e45e.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.lowerKey|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v0 @varname [|n|] @scope ((L0005,L000c));


        v1;
      
#L12e470.   v1:= 2  @length 4;
#L12e472.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNear|](v2, v3, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNear:(Ljava/lang/Object;I)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e478.   v0:= temp  @type object;
#L12e47a.   if v0 != 0 then goto L12e482;
#L12e47e.   v1:= 0  @length 4;
#L12e480.   return v1  @type object;
#L12e482.   v1:= v0.[|java:util:concurrent:ConcurrentSkipListMap$Node.key|]   @type object;
#L12e486.   goto L12e480;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListMap.navigableKeySet|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] v0 @varname [|ks|] @scope ((L0002,L0004), (L0005,L0007));

      
#L12e498.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap.keySet|]   @type object;
#L12e49c.   if v0 == 0 then goto L12e4a2;
#L12e4a0.   return v0  @type object;
#L12e4a2.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$KeySet|];
#L12e4a6.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$KeySet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$KeySet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$KeySet|] @type direct;
#L12e4ac.   v1.[|java:util:concurrent:ConcurrentSkipListMap.keySet|]  := v0 @type object;
#L12e4b0.   goto L12e4a0;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.pollFirstEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.pollFirstEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12e4c4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doRemoveFirstEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doRemoveFirstEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e4ca.   v0:= temp  @type object;
#L12e4cc.   return v0  @type object;

   }
    procedure [|java:util:Map$Entry|] [|java:util:concurrent:ConcurrentSkipListMap.pollLastEntry|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.pollLastEntry:()Ljava/util/Map$Entry;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12e4e0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doRemoveLastEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doRemoveLastEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e4e6.   v0:= temp  @type object;
#L12e4e8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.put|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L12e4fc.   if v3 != 0 then goto L12e50c;
#L12e500.   v0:= new [|java:lang:NullPointerException|];
#L12e504.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e50a.   throw v0;
#L12e50c.   v0:= 0  @length 4;
#L12e50e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doPut|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doPut:(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e514.   v0:= temp  @type object;
#L12e516.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.putIfAbsent|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L12e528.   if v3 != 0 then goto L12e538;
#L12e52c.   v0:= new [|java:lang:NullPointerException|];
#L12e530.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e536.   throw v0;
#L12e538.   v0:= 1  @length 4;
#L12e53a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doPut|](v1, v2, v3, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doPut:(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e540.   v0:= temp  @type object;
#L12e542.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.remove|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12e554.   v0:= 0  @length 4;
#L12e556.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doRemove|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doRemove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e55c.   v0:= temp  @type object;
#L12e55e.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap.remove|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
      
#L12e570.   v0:= 0  @length 4;
#L12e572.   if v3 != 0 then goto L12e582;
#L12e576.   v0:= new [|java:lang:NullPointerException|];
#L12e57a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e580.   throw v0;
#L12e582.   if v4 != 0 then goto L12e588;
#L12e586.   return v0;
#L12e588.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.doRemove|](v2, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.doRemove:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e58e.   v1:= temp  @type object;
#L12e590.   if v1 == 0 then goto L12e586;
#L12e594.   v0:= 1  @length 4;
#L12e596.   goto L12e586;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListMap.replace|] ([|java:util:concurrent:ConcurrentSkipListMap|] v4 @type (this), [|java:lang:Object|] v5 @type (object), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Comparable|] v0 @varname [|k|] @scope ((L000c,L001f));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @varname [|n|] @scope ((L0010,L001f));
        [|java:lang:Object|] v2 @varname [|v|] @scope ((L0016,L001f));



        v3;
      
#L12e5a8.   if v6 != 0 then goto L12e5b8;
#L12e5ac.   v3:= new [|java:lang:NullPointerException|];
#L12e5b0.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e5b6.   throw v3;
#L12e5b8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.comparable|](v4, v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparable:(Ljava/lang/Object;)Ljava/lang/Comparable;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e5be.   v0:= temp  @type object;
#L12e5c0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNode|](v4, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNode:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e5c6.   v1:= temp  @type object;
#L12e5c8.   if v1 != 0 then goto L12e5d0;
#L12e5cc.   v2:= 0  @length 4;
#L12e5ce.   return v2  @type object;
#L12e5d0.   v2:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12e5d4.   if v2 == 0 then goto L12e5c0;
#L12e5d8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casValue|](v1, v2, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casValue:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12e5de.   v3:= temp;
#L12e5e0.   if v3 == 0 then goto L12e5c0;
#L12e5e4.   goto L12e5ce;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListMap.replace|] ([|java:util:concurrent:ConcurrentSkipListMap|] v5 @type (this), [|java:lang:Object|] v6 @type (object), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:Comparable|] v0 @varname [|k|] @scope ((L000f,L0028));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v1 @varname [|n|] @scope ((L0013,L0028));
        [|java:lang:Object|] v2 @varname [|v|] @scope ((L0018,L0028));




        v3;
        v4;
      
#L12e5f8.   v3:= 0  @length 4;
#L12e5fa.   if v7 == 0 then goto L12e602;
#L12e5fe.   if v8 != 0 then goto L12e60e;
#L12e602.   v3:= new [|java:lang:NullPointerException|];
#L12e606.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e60c.   throw v3;
#L12e60e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.comparable|](v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.comparable:(Ljava/lang/Object;)Ljava/lang/Comparable;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e614.   v0:= temp  @type object;
#L12e616.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findNode|](v5, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findNode:(Ljava/lang/Comparable;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e61c.   v1:= temp  @type object;
#L12e61e.   if v1 != 0 then goto L12e624;
#L12e622.   return v3;
#L12e624.   v2:= v1.[|java:util:concurrent:ConcurrentSkipListMap$Node.value|]   @type object;
#L12e628.   if v2 == 0 then goto L12e616;
#L12e62c.   call temp:=  [|java:lang:Object.equals|](v7, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12e632.   v4:= temp;
#L12e634.   if v4 == 0 then goto L12e622;
#L12e638.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.casValue|](v1, v2, v8) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.casValue:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12e63e.   v4:= temp;
#L12e640.   if v4 == 0 then goto L12e616;
#L12e644.   v3:= 1  @length 4;
#L12e646.   goto L12e622;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentSkipListMap.size|] ([|java:util:concurrent:ConcurrentSkipListMap|] v5 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.size:()I|] @Access PUBLIC {
      local temp ;

        [|long|] v0 @varname [|count|] @scope ((L0002,L0021));
        [|java:util:concurrent:ConcurrentSkipListMap$Node|] v2 @varname [|n|] @scope ((L0006,L0021));

        v1;
        v3;
        v4;
      
#L12e658.   v0:= 0  @length wide16;
#L12e65c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.findFirst|](v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.findFirst:()Ljava/util/concurrent/ConcurrentSkipListMap$Node;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e662.   v2:= temp  @type object;
#L12e664.   if v2 == 0 then goto L12e680;
#L12e668.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Node.getValidValue|](v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Node;.getValidValue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Node|] @type virtual;
#L12e66e.   v3:= temp  @type object;
#L12e670.   if v3 == 0 then goto L12e67a;
#L12e674.   v3:= 1  @length wide16;
#L12e678.   v0:= v0 + v3  @type long;
#L12e67a.   v2:= v2.[|java:util:concurrent:ConcurrentSkipListMap$Node.next|]   @type object;
#L12e67e.   goto L12e664;
#L12e680.    v3:= nan  @length wide32;
#L12e686.   v3:= cmp(v0,v3);
#L12e68a.   if v3 < 0 then goto L12e696;
#L12e68e.    v3:= nan;
#L12e694.   return v3;
#L12e696.   v3:= (int)v0  @type l2i;
#L12e698.   goto L12e694;

   }
    procedure [|java:util:NavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3, [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;






        v0;
      
#L12e6ac.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.subMap|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e6b2.   v0:= temp  @type object;
#L12e6b4.   return v0  @type object;

   }
    procedure [|java:util:SortedMap|] [|java:util:concurrent:ConcurrentSkipListMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;




        v0;
      
#L12e6c8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.subMap|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e6ce.   v0:= temp  @type object;
#L12e6d0.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.subMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
      
#L12e6e4.   v0:= 1  @length 4;
#L12e6e6.   v1:= 0  @length 4;
#L12e6e8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.subMap|](v2, v3, v0, v4, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e6ee.   v0:= temp  @type object;
#L12e6f0.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.subMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|boolean|] v9, [|java:lang:Object|] v10 @type (object), [|boolean|] v11) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC {
      local temp ;






        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12e704.   if v8 == 0 then goto L12e70c;
#L12e708.   if v10 != 0 then goto L12e718;
#L12e70c.   v0:= new [|java:lang:NullPointerException|];
#L12e710.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e716.   throw v0;
#L12e718.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$SubMap|];
#L12e71c.   v6:= 0  @length 4;
#L12e71e.   v1:= v7  @type object;
#L12e720.   v2:= v8  @type object;
#L12e722.   v3:= v9;
#L12e724.   v4:= v10  @type object;
#L12e726.   v5:= v11;
#L12e728.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;Ljava/lang/Object;ZLjava/lang/Object;ZZ)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12e72e.   return v0  @type object;

   }
    procedure [|java:util:NavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|boolean|] v3) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;




        v0;
      
#L12e740.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.tailMap|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e746.   v0:= temp  @type object;
#L12e748.   return v0  @type object;

   }
    procedure [|java:util:SortedMap|] [|java:util:concurrent:ConcurrentSkipListMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tailMap:(Ljava/lang/Object;)Ljava/util/SortedMap;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



        v0;
      
#L12e75c.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.tailMap|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tailMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e762.   v0:= temp  @type object;
#L12e764.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tailMap:(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12e778.   v0:= 1  @length 4;
#L12e77a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.tailMap|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type virtual;
#L12e780.   v0:= temp  @type object;
#L12e782.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListMap.tailMap|] ([|java:util:concurrent:ConcurrentSkipListMap|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|boolean|] v9) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12e794.   v5:= 0  @length 4;
#L12e796.   if v8 != 0 then goto L12e7a6;
#L12e79a.   v0:= new [|java:lang:NullPointerException|];
#L12e79e.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L12e7a4.   throw v0;
#L12e7a6.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$SubMap|];
#L12e7aa.   v4:= 0  @length 4;
#L12e7ac.   v1:= v7  @type object;
#L12e7ae.   v2:= v8  @type object;
#L12e7b0.   v3:= v9;
#L12e7b2.   v6:= v5;
#L12e7b4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$SubMap.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$SubMap;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;Ljava/lang/Object;ZLjava/lang/Object;ZZ)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$SubMap|] @type direct;
#L12e7ba.   return v0  @type object;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListMap.valueIterator|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.valueIterator:()Ljava/util/Iterator;|] @Access  {
      local temp ;


        v0;
      
#L12e7cc.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator|];
#L12e7d0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$ValueIterator;.<init>:(Ljava/util/concurrent/ConcurrentSkipListMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$ValueIterator|] @type direct;
#L12e7d6.   return v0  @type object;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:ConcurrentSkipListMap.values|] ([|java:util:concurrent:ConcurrentSkipListMap|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListMap|] @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.values:()Ljava/util/Collection;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListMap$Values|] v0 @varname [|vs|] @scope ((L0002,L0004), (L0005,L0007));

      
#L12e7e8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListMap.values|]   @type object;
#L12e7ec.   if v0 == 0 then goto L12e7f2;
#L12e7f0.   return v0  @type object;
#L12e7f2.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap$Values|];
#L12e7f6.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap$Values.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap$Values;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap$Values|] @type direct;
#L12e7fc.   v1.[|java:util:concurrent:ConcurrentSkipListMap.values|]  := v0 @type object;
#L12e800.   goto L12e7f0;

   }
record [|java:util:concurrent:ConcurrentSkipListSet|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractSet|], [|java:util:NavigableSet|], [|java:lang:Cloneable|], [|java:io:Serializable|] {
      [|java:util:concurrent:ConcurrentNavigableMap|] [|java:util:concurrent:ConcurrentSkipListSet.m|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ConcurrentSkipListSet.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentSkipListSet.mapOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ConcurrentSkipListSet.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListSet.<clinit>|] () @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0018,L001e));
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0008,L001e));
        v2;
        v3;
      
#L12e814.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L12e81a.   v2:= temp  @type object;
#L12e81c.   @@[|java:util:concurrent:ConcurrentSkipListSet.UNSAFE|] := v2  @type object;
#L12e820.   v1:= new [|java:util:concurrent:ConcurrentSkipListSet|];
#L12e824.   v2:= @@[|java:util:concurrent:ConcurrentSkipListSet.UNSAFE|]   @type object;
#L12e828.   v3:= "m" @type (object, string);
#L12e82c.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L12e832.   v3:= temp  @type object;
#L12e834.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12e83a.   v2:= temp  @type wide;
#L12e83c.   @@[|java:util:concurrent:ConcurrentSkipListSet.mapOffset|] := v2  @wide;
#L12e840.   return @void ;
#L12e842.   v0:= Exception  @type object;
#L12e844.   v2:= new [|java:lang:Error|];
#L12e848.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L12e84e.   throw v2;
  catch  [|java:lang:Exception|] @[L12e814..L12e840] goto L12e842;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListSet.<init>|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L12e870.   call temp:=  [|java:util:AbstractSet.<init>|](v1) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12e876.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap|];
#L12e87a.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.<init>|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e880.   v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]  := v0 @type object;
#L12e884.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListSet.<init>|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L12e898.   call temp:=  [|java:util:AbstractSet.<init>|](v1) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12e89e.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap|];
#L12e8a2.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.<init>|](v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:()V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e8a8.   v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]  := v0 @type object;
#L12e8ac.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.addAll|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12e8b2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListSet.<init>|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:util:Comparator|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<init>:(Ljava/util/Comparator;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L12e8c4.   call temp:=  [|java:util:AbstractSet.<init>|](v1) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12e8ca.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap|];
#L12e8ce.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.<init>|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:(Ljava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e8d4.   v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]  := v0 @type object;
#L12e8d8.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListSet.<init>|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this), [|java:util:SortedSet|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<init>:(Ljava/util/SortedSet;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
      
#L12e8ec.   call temp:=  [|java:util:AbstractSet.<init>|](v2) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12e8f2.   v0:= new [|java:util:concurrent:ConcurrentSkipListMap|];
#L12e8f6.   call temp:=  [|java:util:SortedSet.comparator|](v3) @signature [|Ljava/util/SortedSet;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:SortedSet|] @type interface;
#L12e8fc.   v1:= temp  @type object;
#L12e8fe.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:(Ljava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e904.   v2.[|java:util:concurrent:ConcurrentSkipListSet.m|]  := v0 @type object;
#L12e908.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.addAll|](v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12e90e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListSet.<init>|] ([|java:util:concurrent:ConcurrentSkipListSet|] v0 @type (this), [|java:util:concurrent:ConcurrentNavigableMap|] v1 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @Access CONSTRUCTOR {
      local temp ;



      
#L12e920.   call temp:=  [|java:util:AbstractSet.<init>|](v0) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L12e926.   v0.[|java:util:concurrent:ConcurrentSkipListSet.m|]  := v1 @type object;
#L12e92a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListSet.setMap|] ([|java:util:concurrent:ConcurrentSkipListSet|] v3 @type (this), [|java:util:concurrent:ConcurrentNavigableMap|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.setMap:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @Access PRIVATE {
      local temp ;



        v0;
        v1;
        v2;
      
#L12e93c.   v0:= @@[|java:util:concurrent:ConcurrentSkipListSet.UNSAFE|]   @type object;
#L12e940.   v1:= @@[|java:util:concurrent:ConcurrentSkipListSet.mapOffset|]   @wide;
#L12e944.   call temp:=  [|sun:misc:Unsafe.putObjectVolatile|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L12e94a.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListSet.add|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L12e95c.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12e960.   v1:= @@[|java:lang:Boolean.TRUE|]   @type object;
#L12e964.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.putIfAbsent|](v0, v3, v1) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12e96a.   v0:= temp  @type object;
#L12e96c.   if v0 != 0 then goto L12e974;
#L12e970.   v0:= 1  @length 4;
#L12e972.   return v0;
#L12e974.   v0:= 0  @length 4;
#L12e976.   goto L12e972;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListSet.ceiling|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.ceiling:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12e988.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12e98c.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.ceilingKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12e992.   v0:= temp  @type object;
#L12e994.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ConcurrentSkipListSet.clear|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.clear:()V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12e9a8.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12e9ac.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.clear|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.clear:()V|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12e9b2.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListSet.clone|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.clone:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L12e9c4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.clone|](v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.clone:()Ljava/util/concurrent/ConcurrentSkipListSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12e9ca.   v0:= temp  @type object;
#L12e9cc.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ConcurrentSkipListSet|] [|java:util:concurrent:ConcurrentSkipListSet.clone|] ([|java:util:concurrent:ConcurrentSkipListSet|] v4 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.clone:()Ljava/util/concurrent/ConcurrentSkipListSet;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:ConcurrentSkipListSet|] v0 @varname [|clone|] @scope ((L0006,L0011));
        [|java:lang:CloneNotSupportedException|] v1 @varname [|e|] @scope ((L0012,L0018));

        v2;
        v3;
      
#L12e9e0.   call temp:=  [|java:lang:Object.clone|](v4) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L12e9e6.   v0:= temp  @type object;
#L12e9e8.   v0:= ([|java:util:concurrent:ConcurrentSkipListSet|])v0;
#L12e9ec.   v2:= new [|java:util:concurrent:ConcurrentSkipListMap|];
#L12e9f0.   v3:= v4.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12e9f4.   call temp:=  [|java:util:concurrent:ConcurrentSkipListMap.<init>|](v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:(Ljava/util/SortedMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListMap|] @type direct;
#L12e9fa.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.setMap|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.setMap:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type direct;
#L12ea00.   return v0  @type object;
#L12ea02.   v1:= Exception  @type object;
#L12ea04.   v2:= new [|java:lang:InternalError|];
#L12ea08.   call temp:=  [|java:lang:InternalError.<init>|](v2) @signature [|Ljava/lang/InternalError;.<init>:()V|] @classDescriptor [|java:lang:InternalError|] @type direct;
#L12ea0e.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L12e9e0..L12ea00] goto L12ea02;

   }
    procedure [|java:util:Comparator|] [|java:util:concurrent:ConcurrentSkipListSet.comparator|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12ea30.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ea34.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.comparator|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ea3a.   v0:= temp  @type object;
#L12ea3c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListSet.contains|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12ea50.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ea54.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.containsKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.containsKey:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ea5a.   v0:= temp;
#L12ea5c.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListSet.descendingIterator|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.descendingIterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12ea70.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ea74.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.descendingKeySet|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.descendingKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ea7a.   v0:= temp  @type object;
#L12ea7c.   call temp:=  [|java:util:NavigableSet.iterator|](v0) @signature [|Ljava/util/NavigableSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:NavigableSet|] @type interface;
#L12ea82.   v0:= temp  @type object;
#L12ea84.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListSet.descendingSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.descendingSet:()Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L12ea98.   v0:= new [|java:util:concurrent:ConcurrentSkipListSet|];
#L12ea9c.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12eaa0.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.descendingMap|](v1) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.descendingMap:()Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12eaa6.   v1:= temp  @type object;
#L12eaa8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type direct;
#L12eaae.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListSet.equals|] ([|java:util:concurrent:ConcurrentSkipListSet|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:ClassCastException|] v1 @varname [|unused|] @scope ((L001e,L001f), (L0020,L0021));
        [|java:util:Collection|] v0 @varname [|c|] @scope ((L000d,L0021));


        v2;
        v3;
        v4;
      
#L12eac0.   v2:= 1  @length 4;
#L12eac2.   v3:= 0  @length 4;
#L12eac4.   if v6 != v5 then goto L12eacc;
#L12eac8.   v3:= v2;
#L12eaca.   return v3;
#L12eacc.   v4:= instanceof @varname v6 @type [|java:util:Set|];
#L12ead0.   if v4 == 0 then goto L12eaca;
#L12ead4.   v0:= v6  @type object;
#L12ead6.   v0:= ([|java:util:Collection|])v0;
#L12eada.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.containsAll|](v5, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.containsAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12eae0.   v4:= temp;
#L12eae2.   if v4 == 0 then goto L12eaf6;
#L12eae6.   call temp:=  [|java:util:Collection.containsAll|](v0, v5) @signature [|Ljava/util/Collection;.containsAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L12eaec.   v4:= temp;
#L12eaee.   if v4 == 0 then goto L12eaf6;
#L12eaf2.   v3:= v2;
#L12eaf4.   goto L12eaca;
#L12eaf6.   v2:= v3;
#L12eaf8.   goto L12eaf2;
#L12eafa.   v1:= Exception  @type object;
#L12eafc.   goto L12eaca;
#L12eafe.   v1:= Exception  @type object;
#L12eb00.   goto L12eaca;
  catch  [|java:lang:ClassCastException|] @[L12eada..L12eaec] goto L12eafa;
  catch  [|java:lang:NullPointerException|] @[L12eada..L12eaec] goto L12eafe;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListSet.first|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.first:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12eb24.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12eb28.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.firstKey|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.firstKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12eb2e.   v0:= temp  @type object;
#L12eb30.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListSet.floor|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.floor:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12eb44.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12eb48.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.floorKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.floorKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12eb4e.   v0:= temp  @type object;
#L12eb50.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListSet.headSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.headSet:(Ljava/lang/Object;)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12eb64.   v0:= 0  @length 4;
#L12eb66.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.headSet|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12eb6c.   v0:= temp  @type object;
#L12eb6e.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListSet.headSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
      
#L12eb80.   v0:= new [|java:util:concurrent:ConcurrentSkipListSet|];
#L12eb84.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12eb88.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.headMap|](v1, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12eb8e.   v1:= temp  @type object;
#L12eb90.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type direct;
#L12eb96.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:concurrent:ConcurrentSkipListSet.headSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.headSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



        v0;
      
#L12eba8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.headSet|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.headSet:(Ljava/lang/Object;)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12ebae.   v0:= temp  @type object;
#L12ebb0.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListSet.higher|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.higher:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12ebc4.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ebc8.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.higherKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.higherKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ebce.   v0:= temp  @type object;
#L12ebd0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListSet.isEmpty|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12ebe4.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ebe8.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.isEmpty|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ebee.   v0:= temp;
#L12ebf0.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ConcurrentSkipListSet.iterator|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12ec04.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ec08.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.navigableKeySet|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.navigableKeySet:()Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ec0e.   v0:= temp  @type object;
#L12ec10.   call temp:=  [|java:util:NavigableSet.iterator|](v0) @signature [|Ljava/util/NavigableSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:NavigableSet|] @type interface;
#L12ec16.   v0:= temp  @type object;
#L12ec18.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListSet.last|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.last:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12ec2c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ec30.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.lastKey|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.lastKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ec36.   v0:= temp  @type object;
#L12ec38.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListSet.lower|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.lower:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12ec4c.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ec50.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.lowerKey|](v0, v2) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.lowerKey:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ec56.   v0:= temp  @type object;
#L12ec58.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListSet.pollFirst|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.pollFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:Map$Entry|] v0 @varname [|e|] @scope ((L0006,L000f));

        v1;
      
#L12ec6c.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ec70.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.pollFirstEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.pollFirstEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ec76.   v0:= temp  @type object;
#L12ec78.   if v0 != 0 then goto L12ec80;
#L12ec7c.   v1:= 0  @length 4;
#L12ec7e.   return v1  @type object;
#L12ec80.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12ec86.   v1:= temp  @type object;
#L12ec88.   goto L12ec7e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ConcurrentSkipListSet.pollLast|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.pollLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:Map$Entry|] v0 @varname [|e|] @scope ((L0006,L000f));

        v1;
      
#L12ec9c.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12eca0.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.pollLastEntry|](v1) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.pollLastEntry:()Ljava/util/Map$Entry;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12eca6.   v0:= temp  @type object;
#L12eca8.   if v0 != 0 then goto L12ecb0;
#L12ecac.   v1:= 0  @length 4;
#L12ecae.   return v1  @type object;
#L12ecb0.   call temp:=  [|java:util:Map$Entry.getKey|](v0) @signature [|Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;|] @classDescriptor [|java:util:Map$Entry|] @type interface;
#L12ecb6.   v1:= temp  @type object;
#L12ecb8.   goto L12ecae;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListSet.remove|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L12eccc.   v0:= v2.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ecd0.   v1:= @@[|java:lang:Boolean.TRUE|]   @type object;
#L12ecd4.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.remove|](v0, v3, v1) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ecda.   v0:= temp;
#L12ecdc.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ConcurrentSkipListSet.removeAll|] ([|java:util:concurrent:ConcurrentSkipListSet|] v4 @type (this), [|java:util:Collection|] v5 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L000f,L0017));
        [|java:util:Iterator|] v1 @varname [|i$|] @scope ((L0005,L0018));
        [|boolean|] v2 @varname [|modified|] @scope ((L0001,L0018));


        v3;
      
#L12ecf0.   v2:= 0  @length 4;
#L12ecf2.   call temp:=  [|java:util:Collection.iterator|](v5) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L12ecf8.   v1:= temp  @type object;
#L12ecfa.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12ed00.   v3:= temp;
#L12ed02.   if v3 == 0 then goto L12ed1e;
#L12ed06.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12ed0c.   v0:= temp  @type object;
#L12ed0e.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.remove|](v4, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12ed14.   v3:= temp;
#L12ed16.   if v3 == 0 then goto L12ecfa;
#L12ed1a.   v2:= 1  @length 4;
#L12ed1c.   goto L12ecfa;
#L12ed1e.   return v2;

   }
    procedure [|int|] [|java:util:concurrent:ConcurrentSkipListSet.size|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.size:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12ed30.   v0:= v1.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ed34.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.size|](v0) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.size:()I|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ed3a.   v0:= temp;
#L12ed3c.   return v0;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListSet.subSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
      
#L12ed50.   v0:= 1  @length 4;
#L12ed52.   v1:= 0  @length 4;
#L12ed54.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.subSet|](v2, v3, v0, v4, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12ed5a.   v0:= temp  @type object;
#L12ed5c.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListSet.subSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4, [|java:lang:Object|] v5 @type (object), [|boolean|] v6) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;






        v0;
        v1;
      
#L12ed70.   v0:= new [|java:util:concurrent:ConcurrentSkipListSet|];
#L12ed74.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12ed78.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.subMap|](v1, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12ed7e.   v1:= temp  @type object;
#L12ed80.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type direct;
#L12ed86.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:concurrent:ConcurrentSkipListSet.subSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;




        v0;
      
#L12ed98.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.subSet|](v1, v2, v3) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.subSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12ed9e.   v0:= temp  @type object;
#L12eda0.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListSet.tailSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.tailSet:(Ljava/lang/Object;)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12edb4.   v0:= 1  @length 4;
#L12edb6.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.tailSet|](v1, v2, v0) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12edbc.   v0:= temp  @type object;
#L12edbe.   return v0  @type object;

   }
    procedure [|java:util:NavigableSet|] [|java:util:concurrent:ConcurrentSkipListSet.tailSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|boolean|] v4) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
      
#L12edd0.   v0:= new [|java:util:concurrent:ConcurrentSkipListSet|];
#L12edd4.   v1:= v2.[|java:util:concurrent:ConcurrentSkipListSet.m|]   @type object;
#L12edd8.   call temp:=  [|java:util:concurrent:ConcurrentNavigableMap.tailMap|](v1, v3, v4) @signature [|Ljava/util/concurrent/ConcurrentNavigableMap;.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;|] @classDescriptor [|java:util:concurrent:ConcurrentNavigableMap|] @type interface;
#L12edde.   v1:= temp  @type object;
#L12ede0.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.<init>:(Ljava/util/concurrent/ConcurrentNavigableMap;)V|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type direct;
#L12ede6.   return v0  @type object;

   }
    procedure [|java:util:SortedSet|] [|java:util:concurrent:ConcurrentSkipListSet.tailSet|] ([|java:util:concurrent:ConcurrentSkipListSet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ConcurrentSkipListSet|] @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.tailSet:(Ljava/lang/Object;)Ljava/util/SortedSet;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



        v0;
      
#L12edf8.   call temp:=  [|java:util:concurrent:ConcurrentSkipListSet.tailSet|](v1, v2) @signature [|Ljava/util/concurrent/ConcurrentSkipListSet;.tailSet:(Ljava/lang/Object;)Ljava/util/NavigableSet;|] @classDescriptor [|java:util:concurrent:ConcurrentSkipListSet|] @type virtual;
#L12edfe.   v0:= temp  @type object;
#L12ee00.   return v0  @type object;

   }
record [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|]  @type class @AccessFlag  extends  [|java:util:ListIterator|] {
      [|int|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.from|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|]    @AccessFlag PRIVATE;
      [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.snapshot|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.to|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.<init>|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v1 @type (this), [|java:lang:Object|][] v2 @type (object), [|int|] v3, [|int|] v4) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.<init>:([Ljava/lang/Object;II)V|] @Access CONSTRUCTOR {
      local temp ;





        v0;
      
#L12ee14.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12ee1a.   v0:= 0  @length 4;
#L12ee1c.   v1.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|]  := v0;
#L12ee20.   v1.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.snapshot|]  := v2 @type object;
#L12ee24.   v1.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.from|]  := v3;
#L12ee28.   v1.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.to|]  := v4;
#L12ee2c.   v1.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|]  := v3;
#L12ee30.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.access$002|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v0 @type (object), [|int|] v1) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.access$002:(Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;I)I|] @Access STATIC_SYNTHETIC {
      local temp ;


      
#L12ee44.   v0.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|]  := v1;
#L12ee48.   return v1;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.add|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.add:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12ee5c.   v0:= new [|java:lang:UnsupportedOperationException|];
#L12ee60.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L12ee66.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.hasNext|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v2 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.hasNext:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L12ee78.   v0:= v2.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|] ;
#L12ee7c.   v1:= v2.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.to|] ;
#L12ee80.   if v0 >= v1 then goto L12ee88;
#L12ee84.   v0:= 1  @length 4;
#L12ee86.   return v0;
#L12ee88.   v0:= 0  @length 4;
#L12ee8a.   goto L12ee86;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.hasPrevious|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v2 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.hasPrevious:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L12ee9c.   v0:= v2.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|] ;
#L12eea0.   v1:= v2.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.from|] ;
#L12eea4.   if v0 <= v1 then goto L12eeac;
#L12eea8.   v0:= 1  @length 4;
#L12eeaa.   return v0;
#L12eeac.   v0:= 0  @length 4;
#L12eeae.   goto L12eeaa;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.next|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v3 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L12eec0.   v0:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|] ;
#L12eec4.   v1:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.to|] ;
#L12eec8.   if v0 >= v1 then goto L12eee2;
#L12eecc.   v0:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.snapshot|]   @type object;
#L12eed0.   v1:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|] ;
#L12eed4.   v2:= v1 + 1;
#L12eed8.   v3.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|]  := v2;
#L12eedc.   v0:= v0[v1]  @type object;
#L12eee0.   return v0  @type object;
#L12eee2.   v0:= new [|java:util:NoSuchElementException|];
#L12eee6.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12eeec.   throw v0;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.nextIndex|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.nextIndex:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12ef00.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|] ;
#L12ef04.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.previous|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v2 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.previous:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L12ef18.   v0:= v2.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|] ;
#L12ef1c.   v1:= v2.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.from|] ;
#L12ef20.   if v0 <= v1 then goto L12ef3a;
#L12ef24.   v0:= v2.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.snapshot|]   @type object;
#L12ef28.   v1:= v2.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|] ;
#L12ef2c.   v1:= v1 + -1;
#L12ef30.   v2.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|]  := v1;
#L12ef34.   v0:= v0[v1]  @type object;
#L12ef38.   return v0  @type object;
#L12ef3a.   v0:= new [|java:util:NoSuchElementException|];
#L12ef3e.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L12ef44.   throw v0;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.previousIndex|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.previousIndex:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12ef58.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList$CowIterator.index|] ;
#L12ef5c.   v0:= v0 + -1;
#L12ef60.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.remove|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.remove:()V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12ef74.   v0:= new [|java:lang:UnsupportedOperationException|];
#L12ef78.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L12ef7e.   throw v0;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.set|] ([|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.set:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



        v0;
      
#L12ef90.   v0:= new [|java:lang:UnsupportedOperationException|];
#L12ef94.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L12ef9a.   throw v0;

   }
record [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|]  @type class @AccessFlag   extends [|java:util:AbstractList|] {
      [|java:util:concurrent:CopyOnWriteArrayList$Slice|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:concurrent:CopyOnWriteArrayList|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.<init>|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v1 @type (this), [|java:util:concurrent:CopyOnWriteArrayList|] v2 @type (object), [|java:lang:Object|][] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.<init>:(Ljava/util/concurrent/CopyOnWriteArrayList;[Ljava/lang/Object;II)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





        v0;
      
#L12efac.   v1.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]  := v2 @type object;
#L12efb0.   call temp:=  [|java:util:AbstractList.<init>|](v1) @signature [|Ljava/util/AbstractList;.<init>:()V|] @classDescriptor [|java:util:AbstractList|] @type direct;
#L12efb6.   v0:= new [|java:util:concurrent:CopyOnWriteArrayList$Slice|];
#L12efba.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.<init>|](v0, v3, v4, v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type direct;
#L12efc0.   v1.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]  := v0 @type object;
#L12efc4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.add|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v5 @type (this), [|int|] v6, [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.add:(ILjava/lang/Object;)V|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12efd8.   v1:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12efdc.   (@monitorenter v1)
#L12efde.   v0:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12efe2.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkPositionIndex|](v0, v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkPositionIndex:(I)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12efe8.   v0:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12efec.   v2:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12eff0.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12eff6.   v2:= temp  @type object;
#L12eff8.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12effe.   v0:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f002.   v2:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f006.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f00c.   v2:= temp;
#L12f00e.   v2:= v2 + v6  @type int;
#L12f010.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.add|](v0, v2, v7) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.add:(ILjava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L12f016.   v0:= new [|java:util:concurrent:CopyOnWriteArrayList$Slice|];
#L12f01a.   v2:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f01e.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f024.   v2:= temp  @type object;
#L12f026.   v3:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f02a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f030.   v3:= temp;
#L12f032.   v4:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f036.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f03c.   v4:= temp;
#L12f03e.   v4:= v4 + 1;
#L12f042.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.<init>|](v0, v2, v3, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type direct;
#L12f048.   v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]  := v0 @type object;
#L12f04c.   (@monitorexit v1)
#L12f04e.   return @void ;
#L12f050.   v0:= Exception  @type object;
#L12f052.   (@monitorexit v1)
#L12f054.   throw v0;
  catch  [|any|] @[L12efde..L12f054] goto L12f050;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.add|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
      
#L12f074.   v1:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f078.   (@monitorenter v1)
#L12f07a.   v0:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f07e.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f084.   v0:= temp;
#L12f086.   v2:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f08a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f090.   v2:= temp;
#L12f092.   v0:= v0 - v2  @type int;
#L12f094.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.add|](v3, v0, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.add:(ILjava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f09a.   v0:= 1  @length 4;
#L12f09c.   (@monitorexit v1)
#L12f09e.   return v0;
#L12f0a0.   v0:= Exception  @type object;
#L12f0a2.   (@monitorexit v1)
#L12f0a4.   throw v0;
  catch  [|any|] @[L12f07a..L12f0a4] goto L12f0a0;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.addAll|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v8 @type (this), [|int|] v9, [|java:util:Collection|] v10 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.addAll:(ILjava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|oldSize|] @scope ((L001a,L004b));
        [|boolean|] v1 @varname [|result|] @scope ((L0027,L004b));



        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L12f0c4.   v3:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f0c8.   (@monitorenter v3)
#L12f0ca.   v2:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f0ce.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkPositionIndex|](v2, v9) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkPositionIndex:(I)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f0d4.   v2:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f0d8.   v4:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f0dc.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f0e2.   v4:= temp  @type object;
#L12f0e4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v2, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f0ea.   v2:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f0ee.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f0f4.   v2:= temp  @type object;
#L12f0f6.   v0:= v2.length;
#L12f0f8.   v2:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f0fc.   v4:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f100.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f106.   v4:= temp;
#L12f108.   v4:= v4 + v9  @type int;
#L12f10a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.addAll|](v2, v4, v10) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.addAll:(ILjava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L12f110.   v1:= temp;
#L12f112.   v2:= new [|java:util:concurrent:CopyOnWriteArrayList$Slice|];
#L12f116.   v4:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f11a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f120.   v4:= temp  @type object;
#L12f122.   v5:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f126.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f12c.   v5:= temp;
#L12f12e.   v6:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f132.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f138.   v6:= temp;
#L12f13a.   v7:= v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f13e.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v7) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f144.   v7:= temp  @type object;
#L12f146.   v7:= v7.length;
#L12f148.   v7:= v7 - v0  @type int;
#L12f14a.   v6:= v6 + v7  @type int;
#L12f14c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.<init>|](v2, v4, v5, v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type direct;
#L12f152.   v8.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]  := v2 @type object;
#L12f156.   (@monitorexit v3)
#L12f158.   return v1;
#L12f15a.   v2:= Exception  @type object;
#L12f15c.   (@monitorexit v3)
#L12f15e.   throw v2;
  catch  [|any|] @[L12f0ca..L12f15e] goto L12f15a;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.addAll|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v2 @type (this), [|java:util:Collection|] v3 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L12f17c.   v1:= v2.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f180.   (@monitorenter v1)
#L12f182.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.size|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.size:()I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f188.   v0:= temp;
#L12f18a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.addAll|](v2, v0, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.addAll:(ILjava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f190.   v0:= temp;
#L12f192.   (@monitorexit v1)
#L12f194.   return v0;
#L12f196.   v0:= Exception  @type object;
#L12f198.   (@monitorexit v1)
#L12f19a.   throw v0;
  catch  [|any|] @[L12f182..L12f19a] goto L12f196;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.clear|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v5 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.clear:()V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
        v4;
      
#L12f1b8.   v1:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f1bc.   (@monitorenter v1)
#L12f1be.   v0:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f1c2.   v2:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f1c6.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f1cc.   v2:= temp  @type object;
#L12f1ce.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f1d4.   v0:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f1d8.   v2:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f1dc.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f1e2.   v2:= temp;
#L12f1e4.   v3:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f1e8.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f1ee.   v3:= temp;
#L12f1f0.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$500|](v0, v2, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$500:(Ljava/util/concurrent/CopyOnWriteArrayList;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f1f6.   v0:= new [|java:util:concurrent:CopyOnWriteArrayList$Slice|];
#L12f1fa.   v2:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f1fe.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f204.   v2:= temp  @type object;
#L12f206.   v3:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f20a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f210.   v3:= temp;
#L12f212.   v4:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f216.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f21c.   v4:= temp;
#L12f21e.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.<init>|](v0, v2, v3, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type direct;
#L12f224.   v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]  := v0 @type object;
#L12f228.   (@monitorexit v1)
#L12f22a.   return @void ;
#L12f22c.   v0:= Exception  @type object;
#L12f22e.   (@monitorexit v1)
#L12f230.   throw v0;
  catch  [|any|] @[L12f1be..L12f230] goto L12f22c;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.contains|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L12f250.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.indexOf|](v2, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f256.   v0:= temp;
#L12f258.   v1:= -1  @length 4;
#L12f25a.   if v0 == v1 then goto L12f262;
#L12f25e.   v0:= 1  @length 4;
#L12f260.   return v0;
#L12f262.   v0:= 0  @length 4;
#L12f264.   goto L12f260;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.containsAll|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v4 @type (this), [|java:util:Collection|] v5 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.containsAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:CopyOnWriteArrayList$Slice|] v0 @varname [|slice|] @scope ((L0002,L0018));
        [|java:lang:Object|][] v1 @varname [|snapshot|] @scope ((L0008,L0018));


        v2;
        v3;
      
#L12f278.   v0:= v4.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f27c.   v2:= v4.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f280.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f286.   v1:= temp  @type object;
#L12f288.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v0, v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f28e.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f294.   v2:= temp;
#L12f296.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f29c.   v3:= temp;
#L12f29e.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.containsAll|](v5, v1, v2, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.containsAll:(Ljava/util/Collection;[Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f2a4.   v2:= temp;
#L12f2a6.   return v2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.get|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.get:(I)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:CopyOnWriteArrayList$Slice|] v0 @varname [|slice|] @scope ((L0002,L0016));
        [|java:lang:Object|][] v1 @varname [|snapshot|] @scope ((L0008,L0016));


        v2;
      
#L12f2b8.   v0:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f2bc.   v2:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f2c0.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f2c6.   v1:= temp  @type object;
#L12f2c8.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkElementIndex|](v0, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkElementIndex:(I)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f2ce.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v0, v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f2d4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f2da.   v2:= temp;
#L12f2dc.   v2:= v2 + v4  @type int;
#L12f2de.   v2:= v1[v2]  @type object;
#L12f2e2.   return v2  @type object;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.indexOf|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.indexOf:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|result|] @scope ((L0018,L0021));
        [|java:util:concurrent:CopyOnWriteArrayList$Slice|] v1 @varname [|slice|] @scope ((L0003,L0021));
        [|java:lang:Object|][] v2 @varname [|snapshot|] @scope ((L0009,L0021));


        v3;
        v4;
        v5;
      
#L12f2f4.   v3:= -1  @length 4;
#L12f2f6.   v1:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f2fa.   v4:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f2fe.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f304.   v2:= temp  @type object;
#L12f306.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v1, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f30c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f312.   v4:= temp;
#L12f314.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f31a.   v5:= temp;
#L12f31c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.indexOf|](v7, v2, v4, v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f322.   v0:= temp;
#L12f324.   if v0 == v3 then goto L12f334;
#L12f328.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f32e.   v3:= temp;
#L12f330.   v3:= v0 - v3  @type int;
#L12f334.   return v3;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.isEmpty|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v3 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:CopyOnWriteArrayList$Slice|] v0 @varname [|slice|] @scope ((L0002,L0010));

        v1;
        v2;
      
#L12f348.   v0:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f34c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f352.   v1:= temp;
#L12f354.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f35a.   v2:= temp;
#L12f35c.   if v1 != v2 then goto L12f364;
#L12f360.   v1:= 1  @length 4;
#L12f362.   return v1;
#L12f364.   v1:= 0  @length 4;
#L12f366.   goto L12f362;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.iterator|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12f378.   v0:= 0  @length 4;
#L12f37a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.listIterator|](v1, v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.listIterator:(I)Ljava/util/ListIterator;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f380.   v0:= temp  @type object;
#L12f382.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.lastIndexOf|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.lastIndexOf:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|result|] @scope ((L0018,L0021));
        [|java:util:concurrent:CopyOnWriteArrayList$Slice|] v1 @varname [|slice|] @scope ((L0003,L0021));
        [|java:lang:Object|][] v2 @varname [|snapshot|] @scope ((L0009,L0021));


        v3;
        v4;
        v5;
      
#L12f394.   v3:= -1  @length 4;
#L12f396.   v1:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f39a.   v4:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f39e.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f3a4.   v2:= temp  @type object;
#L12f3a6.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v1, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f3ac.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f3b2.   v4:= temp;
#L12f3b4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f3ba.   v5:= temp;
#L12f3bc.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.lastIndexOf|](v7, v2, v4, v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.lastIndexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f3c2.   v0:= temp;
#L12f3c4.   if v0 == v3 then goto L12f3d4;
#L12f3c8.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f3ce.   v3:= temp;
#L12f3d0.   v3:= v0 - v3  @type int;
#L12f3d4.   return v3;

   }
    procedure [|java:util:ListIterator|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.listIterator|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.listIterator:()Ljava/util/ListIterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L12f3e8.   v0:= 0  @length 4;
#L12f3ea.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.listIterator|](v1, v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.listIterator:(I)Ljava/util/ListIterator;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f3f0.   v0:= temp  @type object;
#L12f3f2.   return v0  @type object;

   }
    procedure [|java:util:ListIterator|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.listIterator|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v5 @type (this), [|int|] v6) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.listIterator:(I)Ljava/util/ListIterator;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v0 @varname [|result|] @scope ((L001b,L0024));
        [|java:util:concurrent:CopyOnWriteArrayList$Slice|] v1 @varname [|slice|] @scope ((L0002,L0024));
        [|java:lang:Object|][] v2 @varname [|snapshot|] @scope ((L0008,L0024));


        v3;
        v4;
      
#L12f404.   v1:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f408.   v3:= v5.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f40c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f412.   v2:= temp  @type object;
#L12f414.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkPositionIndex|](v1, v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkPositionIndex:(I)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f41a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v1, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f420.   v0:= new [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|];
#L12f424.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f42a.   v3:= temp;
#L12f42c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f432.   v4:= temp;
#L12f434.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.<init>|](v0, v2, v3, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @type direct;
#L12f43a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f440.   v3:= temp;
#L12f442.   v3:= v3 + v6  @type int;
#L12f444.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.access$002|](v0, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.access$002:(Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;I)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @type static;
#L12f44a.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.remove|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.remove:(I)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|removed|] @scope ((L0020,L003d));


        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12f45c.   v2:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f460.   (@monitorenter v2)
#L12f462.   v1:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f466.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkElementIndex|](v1, v7) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkElementIndex:(I)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f46c.   v1:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f470.   v3:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f474.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f47a.   v3:= temp  @type object;
#L12f47c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v1, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f482.   v1:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f486.   v3:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f48a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f490.   v3:= temp;
#L12f492.   v3:= v3 + v7  @type int;
#L12f494.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.remove|](v1, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.remove:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L12f49a.   v0:= temp  @type object;
#L12f49c.   v1:= new [|java:util:concurrent:CopyOnWriteArrayList$Slice|];
#L12f4a0.   v3:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f4a4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f4aa.   v3:= temp  @type object;
#L12f4ac.   v4:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f4b0.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f4b6.   v4:= temp;
#L12f4b8.   v5:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f4bc.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f4c2.   v5:= temp;
#L12f4c4.   v5:= v5 + -1;
#L12f4c8.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.<init>|](v1, v3, v4, v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type direct;
#L12f4ce.   v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]  := v1 @type object;
#L12f4d2.   (@monitorexit v2)
#L12f4d4.   return v0  @type object;
#L12f4d6.   v1:= Exception  @type object;
#L12f4d8.   (@monitorexit v2)
#L12f4da.   throw v1;
  catch  [|any|] @[L12f462..L12f4da] goto L12f4d6;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.remove|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|index|] @scope ((L0007,L0013));


        v1;
        v2;
      
#L12f4f8.   v2:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f4fc.   (@monitorenter v2)
#L12f4fe.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.indexOf|](v3, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f504.   v0:= temp;
#L12f506.   v1:= -1  @length 4;
#L12f508.   if v0 != v1 then goto L12f512;
#L12f50c.   v1:= 0  @length 4;
#L12f50e.   (@monitorexit v2)
#L12f510.   return v1;
#L12f512.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.remove|](v3, v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.remove:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f518.   v1:= 1  @length 4;
#L12f51a.   (@monitorexit v2)
#L12f51c.   goto L12f510;
#L12f51e.   v1:= Exception  @type object;
#L12f520.   (@monitorexit v2)
#L12f522.   throw v1;
  catch  [|any|] @[L12f4fe..L12f522] goto L12f51e;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.removeAll|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v7 @type (this), [|java:util:Collection|] v8 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|removed|] @scope ((L0022,L0041));


        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12f540.   v1:= 0  @length 4;
#L12f542.   v2:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f546.   (@monitorenter v2)
#L12f548.   v3:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f54c.   v4:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f550.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f556.   v4:= temp  @type object;
#L12f558.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v3, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f55e.   v3:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f562.   v4:= 0  @length 4;
#L12f564.   v5:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f568.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f56e.   v5:= temp;
#L12f570.   v6:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f574.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f57a.   v6:= temp;
#L12f57c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$600|](v3, v8, v4, v5, v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$600:(Ljava/util/concurrent/CopyOnWriteArrayList;Ljava/util/Collection;ZII)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f582.   v0:= temp;
#L12f584.   v3:= new [|java:util:concurrent:CopyOnWriteArrayList$Slice|];
#L12f588.   v4:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f58c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f592.   v4:= temp  @type object;
#L12f594.   v5:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f598.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f59e.   v5:= temp;
#L12f5a0.   v6:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f5a4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f5aa.   v6:= temp;
#L12f5ac.   v6:= v6 - v0  @type int;
#L12f5ae.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.<init>|](v3, v4, v5, v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type direct;
#L12f5b4.   v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]  := v3 @type object;
#L12f5b8.   if v0 == 0 then goto L12f5be;
#L12f5bc.   v1:= 1  @length 4;
#L12f5be.   (@monitorexit v2)
#L12f5c0.   return v1;
#L12f5c2.   v1:= Exception  @type object;
#L12f5c4.   (@monitorexit v2)
#L12f5c6.   throw v1;
  catch  [|any|] @[L12f548..L12f5c6] goto L12f5c2;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.retainAll|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v7 @type (this), [|java:util:Collection|] v8 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.retainAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|removed|] @scope ((L0022,L0042));


        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L12f5e4.   v1:= 1  @length 4;
#L12f5e6.   v2:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f5ea.   (@monitorenter v2)
#L12f5ec.   v3:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f5f0.   v4:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f5f4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f5fa.   v4:= temp  @type object;
#L12f5fc.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v3, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f602.   v3:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f606.   v4:= 1  @length 4;
#L12f608.   v5:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f60c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f612.   v5:= temp;
#L12f614.   v6:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f618.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f61e.   v6:= temp;
#L12f620.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$600|](v3, v8, v4, v5, v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$600:(Ljava/util/concurrent/CopyOnWriteArrayList;Ljava/util/Collection;ZII)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f626.   v0:= temp;
#L12f628.   v3:= new [|java:util:concurrent:CopyOnWriteArrayList$Slice|];
#L12f62c.   v4:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f630.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f636.   v4:= temp  @type object;
#L12f638.   v5:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f63c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f642.   v5:= temp;
#L12f644.   v6:= v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f648.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f64e.   v6:= temp;
#L12f650.   v6:= v6 - v0  @type int;
#L12f652.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.<init>|](v3, v4, v5, v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type direct;
#L12f658.   v7.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]  := v3 @type object;
#L12f65c.   if v0 == 0 then goto L12f664;
#L12f660.   (@monitorexit v2)
#L12f662.   return v1;
#L12f664.   v1:= 0  @length 4;
#L12f666.   goto L12f660;
#L12f668.   v1:= Exception  @type object;
#L12f66a.   (@monitorexit v2)
#L12f66c.   throw v1;
  catch  [|any|] @[L12f5ec..L12f66c] goto L12f668;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.set|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v6 @type (this), [|int|] v7, [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|result|] @scope ((L0020,L003b));



        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12f68c.   v2:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f690.   (@monitorenter v2)
#L12f692.   v1:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f696.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkElementIndex|](v1, v7) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkElementIndex:(I)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f69c.   v1:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f6a0.   v3:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f6a4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f6aa.   v3:= temp  @type object;
#L12f6ac.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|](v1, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type virtual;
#L12f6b2.   v1:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f6b6.   v3:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f6ba.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f6c0.   v3:= temp;
#L12f6c2.   v3:= v3 + v7  @type int;
#L12f6c4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.set|](v1, v3, v8) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L12f6ca.   v0:= temp  @type object;
#L12f6cc.   v1:= new [|java:util:concurrent:CopyOnWriteArrayList$Slice|];
#L12f6d0.   v3:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f6d4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.access$300|](v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12f6da.   v3:= temp  @type object;
#L12f6dc.   v4:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f6e0.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f6e6.   v4:= temp;
#L12f6e8.   v5:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f6ec.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f6f2.   v5:= temp;
#L12f6f4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.<init>|](v1, v3, v4, v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type direct;
#L12f6fa.   v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]  := v1 @type object;
#L12f6fe.   (@monitorexit v2)
#L12f700.   return v0  @type object;
#L12f702.   v1:= Exception  @type object;
#L12f704.   (@monitorexit v2)
#L12f706.   throw v1;
  catch  [|any|] @[L12f692..L12f706] goto L12f702;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.size|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v3 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.size:()I|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:CopyOnWriteArrayList$Slice|] v0 @varname [|slice|] @scope ((L0002,L000c));

        v1;
        v2;
      
#L12f724.   v0:= v3.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f728.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f72e.   v1:= temp;
#L12f730.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f736.   v2:= temp;
#L12f738.   v1:= v1 - v2  @type int;
#L12f73a.   return v1;

   }
    procedure [|java:util:List|] [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.subList|] ([|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] v6 @type (this), [|int|] v7, [|int|] v8) @owner [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.subList:(II)Ljava/util/List;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:CopyOnWriteArrayList$Slice|] v0 @varname [|slice|] @scope ((L0002,L0053));



        v1;
        v2;
        v3;
        v4;
        v5;
      
#L12f74c.   v0:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.slice|]   @type object;
#L12f750.   if v7 < 0 then goto L12f764;
#L12f754.   if v7 > v8 then goto L12f764;
#L12f758.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.size|](v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.size:()I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f75e.   v1:= temp;
#L12f760.   if v8 <= v1 then goto L12f7c6;
#L12f764.   v1:= new [|java:lang:IndexOutOfBoundsException|];
#L12f768.   v2:= new [|java:lang:StringBuilder|];
#L12f76c.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L12f772.   v3:= "from=" @type (object, string);
#L12f776.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f77c.   v2:= temp  @type object;
#L12f77e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v7) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f784.   v2:= temp  @type object;
#L12f786.   v3:= ", to=" @type (object, string);
#L12f78a.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f790.   v2:= temp  @type object;
#L12f792.   call temp:=  [|java:lang:StringBuilder.append|](v2, v8) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f798.   v2:= temp  @type object;
#L12f79a.   v3:= ", list size=" @type (object, string);
#L12f79e.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f7a4.   v2:= temp  @type object;
#L12f7a6.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.size|](v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.size:()I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type virtual;
#L12f7ac.   v3:= temp;
#L12f7ae.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f7b4.   v2:= temp  @type object;
#L12f7b6.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f7bc.   v2:= temp  @type object;
#L12f7be.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v1, v2) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L12f7c4.   throw v1;
#L12f7c6.   v1:= new [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|];
#L12f7ca.   v2:= v6.[|java:util:concurrent:CopyOnWriteArrayList$CowSubList.this$0|]   @type object;
#L12f7ce.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$400|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$400:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f7d4.   v3:= temp  @type object;
#L12f7d6.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f7dc.   v4:= temp;
#L12f7de.   v4:= v4 + v7  @type int;
#L12f7e0.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @type static;
#L12f7e6.   v5:= temp;
#L12f7e8.   v5:= v5 + v8  @type int;
#L12f7ea.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.<init>|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.<init>:(Ljava/util/concurrent/CopyOnWriteArrayList;[Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type direct;
#L12f7f0.   return v1  @type object;

   }
record [|java:util:concurrent:CopyOnWriteArrayList$Slice|]  @type class @AccessFlag   {
      [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArrayList$Slice.expectedElements|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:concurrent:CopyOnWriteArrayList$Slice.from|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:concurrent:CopyOnWriteArrayList$Slice.to|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$Slice.<init>|] ([|java:util:concurrent:CopyOnWriteArrayList$Slice|] v0 @type (this), [|java:lang:Object|][] v1 @type (object), [|int|] v2, [|int|] v3) @owner [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.<init>:([Ljava/lang/Object;II)V|] @Access CONSTRUCTOR {
      local temp ;




      
#L12f804.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12f80a.   v0.[|java:util:concurrent:CopyOnWriteArrayList$Slice.expectedElements|]  := v1 @type object;
#L12f80e.   v0.[|java:util:concurrent:CopyOnWriteArrayList$Slice.from|]  := v2;
#L12f812.   v0.[|java:util:concurrent:CopyOnWriteArrayList$Slice.to|]  := v3;
#L12f816.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$100|] ([|java:util:concurrent:CopyOnWriteArrayList$Slice|] v1 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$100:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L12f828.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList$Slice.to|] ;
#L12f82c.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$200|] ([|java:util:concurrent:CopyOnWriteArrayList$Slice|] v1 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$200:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)I|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L12f840.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList$Slice.from|] ;
#L12f844.   return v0;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArrayList$Slice.access$400|] ([|java:util:concurrent:CopyOnWriteArrayList$Slice|] v1 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.access$400:(Ljava/util/concurrent/CopyOnWriteArrayList$Slice;)[Ljava/lang/Object;|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L12f858.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList$Slice.expectedElements|]   @type object;
#L12f85c.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkConcurrentModification|] ([|java:util:concurrent:CopyOnWriteArrayList$Slice|] v1 @type (this), [|java:lang:Object|][] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkConcurrentModification:([Ljava/lang/Object;)V|] @Access  {
      local temp ;


        v0;
      
#L12f870.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList$Slice.expectedElements|]   @type object;
#L12f874.   if v0 == v2 then goto L12f884;
#L12f878.   v0:= new [|java:util:ConcurrentModificationException|];
#L12f87c.   call temp:=  [|java:util:ConcurrentModificationException.<init>|](v0) @signature [|Ljava/util/ConcurrentModificationException;.<init>:()V|] @classDescriptor [|java:util:ConcurrentModificationException|] @type direct;
#L12f882.   throw v0;
#L12f884.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkElementIndex|] ([|java:util:concurrent:CopyOnWriteArrayList$Slice|] v4 @type (this), [|int|] v5) @owner [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkElementIndex:(I)V|] @Access  {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L12f898.   if v5 < 0 then goto L12f8aa;
#L12f89c.   v0:= v4.[|java:util:concurrent:CopyOnWriteArrayList$Slice.to|] ;
#L12f8a0.   v1:= v4.[|java:util:concurrent:CopyOnWriteArrayList$Slice.from|] ;
#L12f8a4.   v0:= v0 - v1  @type int;
#L12f8a6.   if v5 < v0 then goto L12f8fa;
#L12f8aa.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L12f8ae.   v1:= new [|java:lang:StringBuilder|];
#L12f8b2.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L12f8b8.   v2:= "index=" @type (object, string);
#L12f8bc.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f8c2.   v1:= temp  @type object;
#L12f8c4.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f8ca.   v1:= temp  @type object;
#L12f8cc.   v2:= ", size=" @type (object, string);
#L12f8d0.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f8d6.   v1:= temp  @type object;
#L12f8d8.   v2:= v4.[|java:util:concurrent:CopyOnWriteArrayList$Slice.to|] ;
#L12f8dc.   v3:= v4.[|java:util:concurrent:CopyOnWriteArrayList$Slice.from|] ;
#L12f8e0.   v2:= v2 - v3  @type int;
#L12f8e2.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f8e8.   v1:= temp  @type object;
#L12f8ea.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f8f0.   v1:= temp  @type object;
#L12f8f2.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L12f8f8.   throw v0;
#L12f8fa.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList$Slice.checkPositionIndex|] ([|java:util:concurrent:CopyOnWriteArrayList$Slice|] v4 @type (this), [|int|] v5) @owner [|java:util:concurrent:CopyOnWriteArrayList$Slice|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$Slice;.checkPositionIndex:(I)V|] @Access  {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L12f90c.   if v5 < 0 then goto L12f91e;
#L12f910.   v0:= v4.[|java:util:concurrent:CopyOnWriteArrayList$Slice.to|] ;
#L12f914.   v1:= v4.[|java:util:concurrent:CopyOnWriteArrayList$Slice.from|] ;
#L12f918.   v0:= v0 - v1  @type int;
#L12f91a.   if v5 <= v0 then goto L12f96e;
#L12f91e.   v0:= new [|java:lang:IndexOutOfBoundsException|];
#L12f922.   v1:= new [|java:lang:StringBuilder|];
#L12f926.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L12f92c.   v2:= "index=" @type (object, string);
#L12f930.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f936.   v1:= temp  @type object;
#L12f938.   call temp:=  [|java:lang:StringBuilder.append|](v1, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f93e.   v1:= temp  @type object;
#L12f940.   v2:= ", size=" @type (object, string);
#L12f944.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f94a.   v1:= temp  @type object;
#L12f94c.   v2:= v4.[|java:util:concurrent:CopyOnWriteArrayList$Slice.to|] ;
#L12f950.   v3:= v4.[|java:util:concurrent:CopyOnWriteArrayList$Slice.from|] ;
#L12f954.   v2:= v2 - v3  @type int;
#L12f956.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f95c.   v1:= temp  @type object;
#L12f95e.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L12f964.   v1:= temp  @type object;
#L12f966.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v0, v1) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L12f96c.   throw v0;
#L12f96e.   return @void ;

   }
record [|java:util:concurrent:CopyOnWriteArrayList|]  @type class @AccessFlag PUBLIC extends  [|java:util:List|], [|java:util:RandomAccess|], [|java:lang:Cloneable|], [|java:io:Serializable|] {
      [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArrayList.elements|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
   }
      global [|long|] @@[|java:util:concurrent:CopyOnWriteArrayList.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList.<init>|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L12f980.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12f986.   v0:= @@[|libcore:util:EmptyArray.OBJECT|]   @type object;
#L12f98a.   v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v0 @type object;
#L12f98e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList.<init>|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L12f9a0.   call temp:=  [|java:util:Collection.toArray|](v2) @signature [|Ljava/util/Collection;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:Collection|] @type interface;
#L12f9a6.   v0:= temp  @type object;
#L12f9a8.   v0:= ([|java:lang:Object|][])v0;
#L12f9ac.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.<init>|](v1, v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:([Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L12f9b2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList.<init>|] ([|java:util:concurrent:CopyOnWriteArrayList|] v2 @type (this), [|java:lang:Object|][] v3 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:([Ljava/lang/Object;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
      
#L12f9c4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L12f9ca.   v0:= v3.length;
#L12f9cc.   v1:= new [|java:lang:Object|][];
#L12f9d0.   call temp:=  [|java:util:Arrays.copyOf|](v3, v0, v1) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L12f9d6.   v0:= temp  @type object;
#L12f9d8.   v2.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v0 @type object;
#L12f9dc.   return @void ;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArrayList.access$300|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$300:(Ljava/util/concurrent/CopyOnWriteArrayList;)[Ljava/lang/Object;|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L12f9f0.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12f9f4.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList.access$500|] ([|java:util:concurrent:CopyOnWriteArrayList|] v0 @type (object), [|int|] v1, [|int|] v2) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$500:(Ljava/util/concurrent/CopyOnWriteArrayList;II)V|] @Access STATIC_SYNTHETIC {
      local temp ;



      
#L12fa08.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.removeRange|](v0, v1, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.removeRange:(II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L12fa0e.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.access$600|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (object), [|java:util:Collection|] v2 @type (object), [|boolean|] v3, [|int|] v4, [|int|] v5) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.access$600:(Ljava/util/concurrent/CopyOnWriteArrayList;Ljava/util/Collection;ZII)I|] @Access STATIC_SYNTHETIC {
      local temp ;





        v0;
      
#L12fa20.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.removeOrRetain|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.removeOrRetain:(Ljava/util/Collection;ZII)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L12fa26.   v0:= temp;
#L12fa28.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.containsAll|] ([|java:util:Collection|] v4 @type (object), [|java:lang:Object|][] v5 @type (object), [|int|] v6, [|int|] v7) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.containsAll:(Ljava/util/Collection;[Ljava/lang/Object;II)Z|] @Access STATIC {
      local temp ;
        [|java:lang:Object|] v1 @varname [|o|] @scope ((L000e,L0016));
        [|java:util:Iterator|] v0 @varname [|i$|] @scope ((L0004,L0019));




        v2;
        v3;
      
#L12fa3c.   call temp:=  [|java:util:Collection.iterator|](v4) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L12fa42.   v0:= temp  @type object;
#L12fa44.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12fa4a.   v2:= temp;
#L12fa4c.   if v2 == 0 then goto L12fa6a;
#L12fa50.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L12fa56.   v1:= temp  @type object;
#L12fa58.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.indexOf|](v1, v5, v6, v7) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12fa5e.   v2:= temp;
#L12fa60.   v3:= -1  @length 4;
#L12fa62.   if v2 != v3 then goto L12fa44;
#L12fa66.   v2:= 0  @length 4;
#L12fa68.   return v2;
#L12fa6a.   v2:= 1  @length 4;
#L12fa6c.   goto L12fa68;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.indexOf|] ([|java:lang:Object|] v2 @type (object), [|java:lang:Object|][] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @Access STATIC {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0003,L000e), (L000f,L0020));




        v1;
      
#L12fa80.   if v2 != 0 then goto L12fa9c;
#L12fa84.   v0:= v4;
#L12fa86.   if v0 >= v5 then goto L12fabc;
#L12fa8a.   v1:= v3[v0]  @type object;
#L12fa8e.   if v1 != 0 then goto L12fa96;
#L12fa92.   v1:= v0;
#L12fa94.   return v1;
#L12fa96.   v0:= v0 + 1;
#L12fa9a.   goto L12fa86;
#L12fa9c.   v0:= v4;
#L12fa9e.   if v0 >= v5 then goto L12fabc;
#L12faa2.   v1:= v3[v0]  @type object;
#L12faa6.   call temp:=  [|java:lang:Object.equals|](v2, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12faac.   v1:= temp;
#L12faae.   if v1 == 0 then goto L12fab6;
#L12fab2.   v1:= v0;
#L12fab4.   goto L12fa94;
#L12fab6.   v0:= v0 + 1;
#L12faba.   goto L12fa9e;
#L12fabc.   v1:= -1  @length 4;
#L12fabe.   goto L12fa94;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.lastIndexOf|] ([|java:lang:Object|] v2 @type (object), [|java:lang:Object|][] v3 @type (object), [|int|] v4, [|int|] v5) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.lastIndexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @Access STATIC {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0004,L000f), (L0011,L0022));




        v1;
      
#L12fad0.   if v2 != 0 then goto L12faee;
#L12fad4.   v0:= v5 + -1;
#L12fad8.   if v0 < v4 then goto L12fb10;
#L12fadc.   v1:= v3[v0]  @type object;
#L12fae0.   if v1 != 0 then goto L12fae8;
#L12fae4.   v1:= v0;
#L12fae6.   return v1;
#L12fae8.   v0:= v0 + -1;
#L12faec.   goto L12fad8;
#L12faee.   v0:= v5 + -1;
#L12faf2.   if v0 < v4 then goto L12fb10;
#L12faf6.   v1:= v3[v0]  @type object;
#L12fafa.   call temp:=  [|java:lang:Object.equals|](v2, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L12fb00.   v1:= temp;
#L12fb02.   if v1 == 0 then goto L12fb0a;
#L12fb06.   v1:= v0;
#L12fb08.   goto L12fae6;
#L12fb0a.   v0:= v0 + -1;
#L12fb0e.   goto L12faf2;
#L12fb10.   v1:= -1  @length 4;
#L12fb12.   goto L12fae6;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList.readObject|] ([|java:util:concurrent:CopyOnWriteArrayList|] v3 @type (this), [|java:io:ObjectInputStream|] v4 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE_DECLARED_SYNCHRONIZED {
      local temp ;

        [|int|] v0 @varname [|i|] @scope ((L000b,L001b));
        [|java:lang:Object|][] v1 @varname [|snapshot|] @scope ((L000a,L001b));


        v2;
      
#L12fb24.   (@monitorenter v3)
#L12fb26.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v4) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12fb2c.   call temp:=  [|java:io:ObjectInputStream.readInt|](v4) @signature [|Ljava/io/ObjectInputStream;.readInt:()I|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12fb32.   v2:= temp;
#L12fb34.   v1:= new [|java:lang:Object|][v2];
#L12fb38.   v0:= 0  @length 4;
#L12fb3a.   v2:= v1.length;
#L12fb3c.   if v0 >= v2 then goto L12fb52;
#L12fb40.   call temp:=  [|java:io:ObjectInputStream.readObject|](v4) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L12fb46.   v2:= temp  @type object;
#L12fb48.   v1[v0]:= v2  @type object;
#L12fb4c.   v0:= v0 + 1;
#L12fb50.   goto L12fb3a;
#L12fb52.   v3.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v1 @type object;
#L12fb56.   (@monitorexit v3)
#L12fb58.   return @void ;
#L12fb5a.   v2:= Exception  @type object;
#L12fb5c.   (@monitorexit v3)
#L12fb5e.   throw v2;
  catch  [|any|] @[L12fb26..L12fb56] goto L12fb5a;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.removeOrRetain|] ([|java:util:concurrent:CopyOnWriteArrayList|] v8 @type (this), [|java:util:Collection|] v9 @type (object), [|boolean|] v10, [|int|] v11, [|int|] v12) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.removeOrRetain:(Ljava/util/Collection;ZII)I|] @Access PRIVATE {
      local temp ;

        [|int|] v3 @varname [|newSize|] @scope ((L001e,L0021), (L0021,L002f), (L002f,L0038), (L0038,L0048), (L0048,L0057), (L0058,L0059), (L0059,L005a));
        [|int|] v1 @varname [|j|] @scope ((L0020,L0057), (L0058,L005a));
        [|java:lang:Object|][] v2 @varname [|newElements|] @scope ((L0018,L0057), (L0058,L005a));
        [|int|] v5 @varname [|removed|] @scope ((L0055,L0057));
        [|int|] v0 @varname [|i|] @scope ((L0002,L005a));





        v4;
        v6;
        v7;
      
#L12fb7c.   v5:= 0  @length 4;
#L12fb7e.   v0:= v11;
#L12fb80.   if v0 >= v12 then goto L12fc2a;
#L12fb84.   v6:= v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fb88.   v6:= v6[v0]  @type object;
#L12fb8c.   call temp:=  [|java:util:Collection.contains|](v9, v6) @signature [|Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L12fb92.   v6:= temp;
#L12fb94.   if v6 != v10 then goto L12fb9e;
#L12fb98.   v0:= v0 + 1;
#L12fb9c.   goto L12fb80;
#L12fb9e.   v6:= v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fba2.   v6:= v6.length;
#L12fba4.   v6:= v6 + -1;
#L12fba8.   v2:= new [|java:lang:Object|][v6];
#L12fbac.   v6:= v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fbb0.   call temp:=  [|java:lang:System.arraycopy|](v6, v5, v2, v5, v0) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fbb6.   v3:= v0;
#L12fbb8.   v1:= v0 + 1;
#L12fbbc.   v4:= v3;
#L12fbbe.   if v1 >= v12 then goto L12fbee;
#L12fbc2.   v6:= v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fbc6.   v6:= v6[v1]  @type object;
#L12fbca.   call temp:=  [|java:util:Collection.contains|](v9, v6) @signature [|Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L12fbd0.   v6:= temp;
#L12fbd2.   if v6 != v10 then goto L12fc2c;
#L12fbd6.   v3:= v4 + 1;
#L12fbda.   v6:= v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fbde.   v6:= v6[v1]  @type object;
#L12fbe2.   v2[v4]:= v6  @type object;
#L12fbe6.   v1:= v1 + 1;
#L12fbea.   v4:= v3;
#L12fbec.   goto L12fbbe;
#L12fbee.   v6:= v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fbf2.   v7:= v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fbf6.   v7:= v7.length;
#L12fbf8.   v7:= v7 - v12  @type int;
#L12fbfa.   call temp:=  [|java:lang:System.arraycopy|](v6, v12, v2, v4, v7) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fc00.   v6:= v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fc04.   v6:= v6.length;
#L12fc06.   v6:= v6 - v12  @type int;
#L12fc08.   v3:= v4 + v6  @type int;
#L12fc0c.   v6:= v2.length;
#L12fc0e.   if v3 >= v6 then goto L12fc1a;
#L12fc12.   call temp:=  [|java:util:Arrays.copyOfRange|](v2, v5, v3) @signature [|Ljava/util/Arrays;.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L12fc18.   v2:= temp  @type object;
#L12fc1a.   v6:= v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fc1e.   v6:= v6.length;
#L12fc20.   v7:= v2.length;
#L12fc22.   v5:= v6 - v7  @type int;
#L12fc26.   v8.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v2 @type object;
#L12fc2a.   return v5;
#L12fc2c.   v3:= v4;
#L12fc2e.   goto L12fbe6;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList.removeRange|] ([|java:util:concurrent:CopyOnWriteArrayList|] v4 @type (this), [|int|] v5, [|int|] v6) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.removeRange:(II)V|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|newElements|] @scope ((L0009,L001a));



        v1;
        v2;
        v3;
      
#L12fc40.   v3:= 0  @length 4;
#L12fc42.   v1:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fc46.   v1:= v1.length;
#L12fc48.   v2:= v6 - v5  @type int;
#L12fc4c.   v1:= v1 - v2  @type int;
#L12fc4e.   v0:= new [|java:lang:Object|][v1];
#L12fc52.   v1:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fc56.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v3, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fc5c.   v1:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fc60.   v2:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fc64.   v2:= v2.length;
#L12fc66.   v2:= v2 - v6  @type int;
#L12fc68.   call temp:=  [|java:lang:System.arraycopy|](v1, v6, v0, v5, v2) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fc6e.   v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v0 @type object;
#L12fc72.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList.writeObject|] ([|java:util:concurrent:CopyOnWriteArrayList|] v6 @type (this), [|java:io:ObjectOutputStream|] v7 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v3 @varname [|o|] @scope ((L0010,L0016));
        [|java:lang:Object|][] v0 @varname [|arr$|] @scope ((L000a,L0017));
        [|int|] v1 @varname [|i$|] @scope ((L000c,L0017));
        [|int|] v2 @varname [|len$|] @scope ((L000b,L0017));
        [|java:lang:Object|][] v4 @varname [|snapshot|] @scope ((L0002,L0017));


        v5;
      
#L12fc84.   v4:= v6.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fc88.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v7) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12fc8e.   v5:= v4.length;
#L12fc90.   call temp:=  [|java:io:ObjectOutputStream.writeInt|](v7, v5) @signature [|Ljava/io/ObjectOutputStream;.writeInt:(I)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12fc96.   v0:= v4  @type object;
#L12fc98.   v2:= v0.length;
#L12fc9a.   v1:= 0  @length 4;
#L12fc9c.   if v1 >= v2 then goto L12fcb0;
#L12fca0.   v3:= v0[v1]  @type object;
#L12fca4.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v7, v3) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L12fcaa.   v1:= v1 + 1;
#L12fcae.   goto L12fc9c;
#L12fcb0.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList.add|] ([|java:util:concurrent:CopyOnWriteArrayList|] v4 @type (this), [|int|] v5, [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.add:(ILjava/lang/Object;)V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|newElements|] @scope ((L0008,L0020));



        v1;
        v2;
        v3;
      
#L12fcc4.   (@monitorenter v4)
#L12fcc6.   v1:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fcca.   v1:= v1.length;
#L12fccc.   v1:= v1 + 1;
#L12fcd0.   v0:= new [|java:lang:Object|][v1];
#L12fcd4.   v1:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fcd8.   v2:= 0  @length 4;
#L12fcda.   v3:= 0  @length 4;
#L12fcdc.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v0, v3, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fce2.   v0[v5]:= v6  @type object;
#L12fce6.   v1:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fcea.   v2:= v5 + 1;
#L12fcee.   v3:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fcf2.   v3:= v3.length;
#L12fcf4.   v3:= v3 - v5  @type int;
#L12fcf6.   call temp:=  [|java:lang:System.arraycopy|](v1, v5, v0, v2, v3) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fcfc.   v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v0 @type object;
#L12fd00.   (@monitorexit v4)
#L12fd02.   return @void ;
#L12fd04.   v1:= Exception  @type object;
#L12fd06.   (@monitorexit v4)
#L12fd08.   throw v1;
  catch  [|any|] @[L12fcc6..L12fd00] goto L12fd04;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.add|] ([|java:util:concurrent:CopyOnWriteArrayList|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|newElements|] @scope ((L0008,L001c));


        v1;
        v2;
        v3;
        v4;
      
#L12fd28.   (@monitorenter v5)
#L12fd2a.   v1:= v5.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fd2e.   v1:= v1.length;
#L12fd30.   v1:= v1 + 1;
#L12fd34.   v0:= new [|java:lang:Object|][v1];
#L12fd38.   v1:= v5.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fd3c.   v2:= 0  @length 4;
#L12fd3e.   v3:= 0  @length 4;
#L12fd40.   v4:= v5.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fd44.   v4:= v4.length;
#L12fd46.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v0, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fd4c.   v1:= v5.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fd50.   v1:= v1.length;
#L12fd52.   v0[v1]:= v6  @type object;
#L12fd56.   v5.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v0 @type object;
#L12fd5a.   v1:= 1  @length 4;
#L12fd5c.   (@monitorexit v5)
#L12fd5e.   return v1;
#L12fd60.   v1:= Exception  @type object;
#L12fd62.   (@monitorexit v5)
#L12fd64.   throw v1;
  catch  [|any|] @[L12fd2a..L12fd5a] goto L12fd60;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.addAll|] ([|java:util:concurrent:CopyOnWriteArrayList|] v6 @type (this), [|int|] v7, [|java:util:Collection|] v8 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.addAll:(ILjava/util/Collection;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|newElements|] @scope ((L000d,L002c));
        [|java:lang:Object|][] v1 @varname [|toAdd|] @scope ((L0006,L002c));



        v2;
        v3;
        v4;
        v5;
      
#L12fd84.   v2:= 0  @length 4;
#L12fd86.   (@monitorenter v6)
#L12fd88.   call temp:=  [|java:util:Collection.toArray|](v8) @signature [|Ljava/util/Collection;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:Collection|] @type interface;
#L12fd8e.   v1:= temp  @type object;
#L12fd90.   v3:= v6.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fd94.   v3:= v3.length;
#L12fd96.   v4:= v1.length;
#L12fd98.   v3:= v3 + v4  @type int;
#L12fd9a.   v0:= new [|java:lang:Object|][v3];
#L12fd9e.   v3:= v6.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fda2.   v4:= 0  @length 4;
#L12fda4.   v5:= 0  @length 4;
#L12fda6.   call temp:=  [|java:lang:System.arraycopy|](v3, v4, v0, v5, v7) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fdac.   v3:= 0  @length 4;
#L12fdae.   v4:= v1.length;
#L12fdb0.   call temp:=  [|java:lang:System.arraycopy|](v1, v3, v0, v7, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fdb6.   v3:= v6.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fdba.   v4:= v1.length;
#L12fdbc.   v4:= v4 + v7  @type int;
#L12fdbe.   v5:= v6.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fdc2.   v5:= v5.length;
#L12fdc4.   v5:= v5 - v7  @type int;
#L12fdc6.   call temp:=  [|java:lang:System.arraycopy|](v3, v7, v0, v4, v5) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fdcc.   v6.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v0 @type object;
#L12fdd0.   v3:= v1.length;
#L12fdd2.   if v3 <= 0 then goto L12fdd8;
#L12fdd6.   v2:= 1  @length 4;
#L12fdd8.   (@monitorexit v6)
#L12fdda.   return v2;
#L12fddc.   v2:= Exception  @type object;
#L12fdde.   (@monitorexit v6)
#L12fde0.   throw v2;
  catch  [|any|] @[L12fd88..L12fdd2] goto L12fddc;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.addAll|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;



        v0;
      
#L12fe00.   (@monitorenter v1)
#L12fe02.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fe06.   v0:= v0.length;
#L12fe08.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.addAll|](v1, v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.addAll:(ILjava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L12fe0e.   v0:= temp;
#L12fe10.   (@monitorexit v1)
#L12fe12.   return v0;
#L12fe14.   v0:= Exception  @type object;
#L12fe16.   (@monitorexit v1)
#L12fe18.   throw v0;
  catch  [|any|] @[L12fe02..L12fe0e] goto L12fe14;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.addAllAbsent|] ([|java:util:concurrent:CopyOnWriteArrayList|] v12 @type (this), [|java:util:Collection|] v13 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.addAllAbsent:(Ljava/util/Collection;)I|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;

        [|int|] v0 @varname [|addedCount|] @scope ((L0017,L001b), (L001b,L0030), (L0030,L0036), (L0036,L0047), (L004a,L004b), (L004b,L004c));
        [|java:lang:Object|] v6 @varname [|o|] @scope ((L001f,L0037), (L004a,L004c));
        [|java:lang:Object|][] v2 @varname [|arr$|] @scope ((L0018,L0047), (L004a,L004c));
        [|int|] v3 @varname [|i$|] @scope ((L001a,L0047), (L004a,L004c));
        [|int|] v4 @varname [|len$|] @scope ((L0019,L0047), (L004a,L004c));
        [|java:lang:Object|][] v5 @varname [|newElements|] @scope ((L000c,L0047), (L004a,L004c));
        [|java:lang:Object|][] v7 @varname [|toAdd|] @scope ((L0005,L0047), (L004a,L004c));


        v1;
        v8;
        v9;
        v10;
        v11;
      
#L12fe38.   (@monitorenter v12)
#L12fe3a.   call temp:=  [|java:util:Collection.toArray|](v13) @signature [|Ljava/util/Collection;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:Collection|] @type interface;
#L12fe40.   v7:= temp  @type object;
#L12fe42.   v8:= v12.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fe46.   v8:= v8.length;
#L12fe48.   v9:= v7.length;
#L12fe4a.   v8:= v8 + v9  @type int;
#L12fe4c.   v5:= new [|java:lang:Object|][v8];
#L12fe50.   v8:= v12.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fe54.   v9:= 0  @length 4;
#L12fe56.   v10:= 0  @length 4;
#L12fe58.   v11:= v12.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fe5c.   v11:= v11.length;
#L12fe5e.   call temp:=  [|java:lang:System.arraycopy|](v8, v9, v5, v10, v11) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L12fe64.   v0:= 0  @length 4;
#L12fe66.   v2:= v7  @type object;
#L12fe68.   v4:= v2.length;
#L12fe6a.   v3:= 0  @length 4;
#L12fe6c.   v1:= v0;
#L12fe6e.   if v3 >= v4 then goto L12fea6;
#L12fe72.   v6:= v2[v3]  @type object;
#L12fe76.   v8:= 0  @length 4;
#L12fe78.   v9:= v12.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fe7c.   v9:= v9.length;
#L12fe7e.   v9:= v9 + v1  @type int;
#L12fe80.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.indexOf|](v6, v5, v8, v9) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12fe86.   v8:= temp;
#L12fe88.   v9:= -1  @length 4;
#L12fe8a.   if v8 != v9 then goto L12fecc;
#L12fe8e.   v8:= v12.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12fe92.   v8:= v8.length;
#L12fe94.   v0:= v1 + 1;
#L12fe98.   v8:= v8 + v1  @type int;
#L12fe9a.   v5[v8]:= v6  @type object;
#L12fe9e.   v3:= v3 + 1;
#L12fea2.   v1:= v0;
#L12fea4.   goto L12fe6e;
#L12fea6.   v8:= v7.length;
#L12fea8.   if v1 >= v8 then goto L12febe;
#L12feac.   v8:= 0  @length 4;
#L12feae.   v9:= v12.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12feb2.   v9:= v9.length;
#L12feb4.   v9:= v9 + v1  @type int;
#L12feb6.   call temp:=  [|java:util:Arrays.copyOfRange|](v5, v8, v9) @signature [|Ljava/util/Arrays;.copyOfRange:([Ljava/lang/Object;II)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L12febc.   v5:= temp  @type object;
#L12febe.   v12.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v5 @type object;
#L12fec2.   (@monitorexit v12)
#L12fec4.   return v1;
#L12fec6.   v8:= Exception  @type object;
#L12fec8.   (@monitorexit v12)
#L12feca.   throw v8;
#L12fecc.   v0:= v1;
#L12fece.   goto L12fe9e;
  catch  [|any|] @[L12fe3a..L12fec2] goto L12fec6;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.addIfAbsent|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.addIfAbsent:(Ljava/lang/Object;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;



        v0;
      
#L12feec.   (@monitorenter v1)
#L12feee.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.contains|](v1, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L12fef4.   v0:= temp;
#L12fef6.   if v0 == 0 then goto L12ff00;
#L12fefa.   v0:= 0  @length 4;
#L12fefc.   (@monitorexit v1)
#L12fefe.   return v0;
#L12ff00.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.add|](v1, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L12ff06.   v0:= 1  @length 4;
#L12ff08.   goto L12fefc;
#L12ff0a.   v0:= Exception  @type object;
#L12ff0c.   (@monitorexit v1)
#L12ff0e.   throw v0;
  catch  [|any|] @[L12feee..L12fef4] goto L12ff0a;
  catch  [|any|] @[L12ff00..L12ff06] goto L12ff0a;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArrayList.clear|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.clear:()V|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;


        v0;
      
#L12ff34.   (@monitorenter v1)
#L12ff36.   v0:= @@[|libcore:util:EmptyArray.OBJECT|]   @type object;
#L12ff3a.   v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v0 @type object;
#L12ff3e.   (@monitorexit v1)
#L12ff40.   return @void ;
#L12ff42.   v0:= Exception  @type object;
#L12ff44.   (@monitorexit v1)
#L12ff46.   throw v0;
  catch  [|any|] @[L12ff36..L12ff3e] goto L12ff42;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:CopyOnWriteArrayList.clone|] ([|java:util:concurrent:CopyOnWriteArrayList|] v3 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.clone:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:CopyOnWriteArrayList|] v1 @varname [|result|] @scope ((L0006,L0011));
        [|java:lang:CloneNotSupportedException|] v0 @varname [|e|] @scope ((L0012,L0018));

        v2;
      
#L12ff64.   call temp:=  [|java:lang:Object.clone|](v3) @signature [|Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object|] @type super;
#L12ff6a.   v1:= temp  @type object;
#L12ff6c.   v1:= ([|java:util:concurrent:CopyOnWriteArrayList|])v1;
#L12ff70.   v2:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12ff74.   call temp:=  [|java:lang:Object[].clone|](v2) @signature [|[Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object[]|] @type virtual;
#L12ff7a.   v2:= temp  @type object;
#L12ff7c.   v2:= ([|java:lang:Object|][])v2;
#L12ff80.   v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v2 @type object;
#L12ff84.   return v1  @type object;
#L12ff86.   v0:= Exception  @type object;
#L12ff88.   v2:= new [|java:lang:AssertionError|];
#L12ff8c.   call temp:=  [|java:lang:AssertionError.<init>|](v2, v0) @signature [|Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:lang:AssertionError|] @type direct;
#L12ff92.   throw v2;
  catch  [|java:lang:CloneNotSupportedException|] @[L12ff64..L12ff84] goto L12ff86;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.contains|] ([|java:util:concurrent:CopyOnWriteArrayList|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L12ffb4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.indexOf|](v2, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L12ffba.   v0:= temp;
#L12ffbc.   v1:= -1  @length 4;
#L12ffbe.   if v0 == v1 then goto L12ffc6;
#L12ffc2.   v0:= 1  @length 4;
#L12ffc4.   return v0;
#L12ffc6.   v0:= 0  @length 4;
#L12ffc8.   goto L12ffc4;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.containsAll|] ([|java:util:concurrent:CopyOnWriteArrayList|] v3 @type (this), [|java:util:Collection|] v4 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.containsAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|snapshot|] @scope ((L0002,L0009));


        v1;
        v2;
      
#L12ffdc.   v0:= v3.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L12ffe0.   v1:= 0  @length 4;
#L12ffe2.   v2:= v0.length;
#L12ffe4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.containsAll|](v4, v0, v1, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.containsAll:(Ljava/util/Collection;[Ljava/lang/Object;II)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L12ffea.   v1:= temp;
#L12ffec.   return v1;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.equals|] ([|java:util:concurrent:CopyOnWriteArrayList|] v10 @type (this), [|java:lang:Object|] v11 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        [|java:lang:Object|] v4 @varname [|o|] @scope ((L0029,L003c));
        [|java:lang:Object|][] v0 @varname [|arr$|] @scope ((L0023,L0046));
        [|java:util:Iterator|] v1 @varname [|i|] @scope ((L0022,L0046));
        [|int|] v2 @varname [|i$|] @scope ((L0025,L0046));
        [|int|] v3 @varname [|len$|] @scope ((L0024,L0046));
        [|java:lang:Object|][] v5 @varname [|snapshot|] @scope ((L001c,L0046));

        v6;
        v7;
        v8;
        v9;
      
#L130000.   v7:= 1  @length 4;
#L130002.   v6:= 0  @length 4;
#L130004.   v8:= instanceof @varname v11 @type [|java:util:concurrent:CopyOnWriteArrayList|];
#L130008.   if v8 == 0 then goto L13002c;
#L13000c.   if v10 == v11 then goto L130028;
#L130010.   v8:= v10.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L130014.   v11:= ([|java:util:concurrent:CopyOnWriteArrayList|])v11;
#L130018.   v9:= v11.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L13001c.   call temp:=  [|java:util:Arrays.equals|](v8, v9) @signature [|Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Arrays|] @type static;
#L130022.   v8:= temp;
#L130024.   if v8 == 0 then goto L13002a;
#L130028.   v6:= v7;
#L13002a.   return v6;
#L13002c.   v8:= instanceof @varname v11 @type [|java:util:List|];
#L130030.   if v8 == 0 then goto L13002a;
#L130034.   v5:= v10.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L130038.   v11:= ([|java:util:List|])v11;
#L13003c.   call temp:=  [|java:util:List.iterator|](v11) @signature [|Ljava/util/List;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:List|] @type interface;
#L130042.   v1:= temp  @type object;
#L130044.   v0:= v5  @type object;
#L130046.   v3:= v0.length;
#L130048.   v2:= 0  @length 4;
#L13004a.   if v2 >= v3 then goto L130078;
#L13004e.   v4:= v0[v2]  @type object;
#L130052.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L130058.   v8:= temp;
#L13005a.   if v8 == 0 then goto L13002a;
#L13005e.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L130064.   v8:= temp  @type object;
#L130066.   call temp:=  [|libcore:util:Objects.equal|](v4, v8) @signature [|Llibcore/util/Objects;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|libcore:util:Objects|] @type static;
#L13006c.   v8:= temp;
#L13006e.   if v8 == 0 then goto L13002a;
#L130072.   v2:= v2 + 1;
#L130076.   goto L13004a;
#L130078.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13007e.   v8:= temp;
#L130080.   if v8 != 0 then goto L130088;
#L130084.   v6:= v7;
#L130086.   goto L13002a;
#L130088.   v7:= v6;
#L13008a.   goto L130084;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:CopyOnWriteArrayList.get|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.get:(I)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L13009c.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1300a0.   v0:= v0[v2]  @type object;
#L1300a4.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArrayList.getArray|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.getArray:()[Ljava/lang/Object;|] @Access FINAL {
      local temp ;


        v0;
      
#L1300b8.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1300bc.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.hashCode|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.hashCode:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1300d0.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1300d4.   call temp:=  [|java:util:Arrays.hashCode|](v0) @signature [|Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I|] @classDescriptor [|java:util:Arrays|] @type static;
#L1300da.   v0:= temp;
#L1300dc.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.indexOf|] ([|java:util:concurrent:CopyOnWriteArrayList|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|snapshot|] @scope ((L0002,L0009));


        v1;
        v2;
      
#L1300f0.   v0:= v3.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1300f4.   v1:= 0  @length 4;
#L1300f6.   v2:= v0.length;
#L1300f8.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.indexOf|](v4, v0, v1, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L1300fe.   v1:= temp;
#L130100.   return v1;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.indexOf|] ([|java:util:concurrent:CopyOnWriteArrayList|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|int|] v4) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;I)I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|snapshot|] @scope ((L0002,L0008));



        v1;
      
#L130114.   v0:= v2.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L130118.   v1:= v0.length;
#L13011a.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.indexOf|](v3, v0, v4, v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L130120.   v1:= temp;
#L130122.   return v1;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.isEmpty|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L130134.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L130138.   v0:= v0.length;
#L13013a.   if v0 != 0 then goto L130142;
#L13013e.   v0:= 1  @length 4;
#L130140.   return v0;
#L130142.   v0:= 0  @length 4;
#L130144.   goto L130140;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:CopyOnWriteArrayList.iterator|] ([|java:util:concurrent:CopyOnWriteArrayList|] v4 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|snapshot|] @scope ((L0002,L000a));

        v1;
        v2;
        v3;
      
#L130158.   v0:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L13015c.   v1:= new [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|];
#L130160.   v2:= 0  @length 4;
#L130162.   v3:= v0.length;
#L130164.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.<init>|](v1, v0, v2, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @type direct;
#L13016a.   return v1  @type object;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.lastIndexOf|] ([|java:util:concurrent:CopyOnWriteArrayList|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.lastIndexOf:(Ljava/lang/Object;)I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|snapshot|] @scope ((L0002,L0009));


        v1;
        v2;
      
#L13017c.   v0:= v3.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L130180.   v1:= 0  @length 4;
#L130182.   v2:= v0.length;
#L130184.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.lastIndexOf|](v4, v0, v1, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.lastIndexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L13018a.   v1:= temp;
#L13018c.   return v1;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.lastIndexOf|] ([|java:util:concurrent:CopyOnWriteArrayList|] v2 @type (this), [|java:lang:Object|] v3 @type (object), [|int|] v4) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.lastIndexOf:(Ljava/lang/Object;I)I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|snapshot|] @scope ((L0002,L0008));



        v1;
      
#L1301a0.   v0:= v2.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1301a4.   v1:= 0  @length 4;
#L1301a6.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.lastIndexOf|](v3, v0, v1, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.lastIndexOf:(Ljava/lang/Object;[Ljava/lang/Object;II)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type static;
#L1301ac.   v1:= temp;
#L1301ae.   return v1;

   }
    procedure [|java:util:ListIterator|] [|java:util:concurrent:CopyOnWriteArrayList.listIterator|] ([|java:util:concurrent:CopyOnWriteArrayList|] v4 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.listIterator:()Ljava/util/ListIterator;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|snapshot|] @scope ((L0002,L000a));

        v1;
        v2;
        v3;
      
#L1301c0.   v0:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1301c4.   v1:= new [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|];
#L1301c8.   v2:= 0  @length 4;
#L1301ca.   v3:= v0.length;
#L1301cc.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.<init>|](v1, v0, v2, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @type direct;
#L1301d2.   return v1  @type object;

   }
    procedure [|java:util:ListIterator|] [|java:util:concurrent:CopyOnWriteArrayList.listIterator|] ([|java:util:concurrent:CopyOnWriteArrayList|] v5 @type (this), [|int|] v6) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.listIterator:(I)Ljava/util/ListIterator;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] v0 @varname [|result|] @scope ((L0032,L0036));
        [|java:lang:Object|][] v1 @varname [|snapshot|] @scope ((L0002,L0036));


        v2;
        v3;
        v4;
      
#L1301e4.   v1:= v5.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1301e8.   if v6 < 0 then goto L1301f2;
#L1301ec.   v2:= v1.length;
#L1301ee.   if v6 <= v2 then goto L13023a;
#L1301f2.   v2:= new [|java:lang:IndexOutOfBoundsException|];
#L1301f6.   v3:= new [|java:lang:StringBuilder|];
#L1301fa.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L130200.   v4:= "index=" @type (object, string);
#L130204.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13020a.   v3:= temp  @type object;
#L13020c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L130212.   v3:= temp  @type object;
#L130214.   v4:= ", length=" @type (object, string);
#L130218.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13021e.   v3:= temp  @type object;
#L130220.   v4:= v1.length;
#L130222.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L130228.   v3:= temp  @type object;
#L13022a.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L130230.   v3:= temp  @type object;
#L130232.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v2, v3) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L130238.   throw v2;
#L13023a.   v0:= new [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|];
#L13023e.   v2:= 0  @length 4;
#L130240.   v3:= v1.length;
#L130242.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.<init>|](v0, v1, v2, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.<init>:([Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @type direct;
#L130248.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowIterator.access$002|](v0, v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;.access$002:(Ljava/util/concurrent/CopyOnWriteArrayList$CowIterator;I)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowIterator|] @type static;
#L13024e.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:CopyOnWriteArrayList.remove|] ([|java:util:concurrent:CopyOnWriteArrayList|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.remove:(I)Ljava/lang/Object;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;

        [|java:lang:Object|] v0 @varname [|removed|] @scope ((L0005,L000c));


        v1;
      
#L130260.   (@monitorenter v2)
#L130262.   v1:= v2.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L130266.   v0:= v1[v3]  @type object;
#L13026a.   v1:= v3 + 1;
#L13026e.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.removeRange|](v2, v3, v1) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.removeRange:(II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L130274.   (@monitorexit v2)
#L130276.   return v0  @type object;
#L130278.   v1:= Exception  @type object;
#L13027a.   (@monitorexit v2)
#L13027c.   throw v1;
  catch  [|any|] @[L130262..L130274] goto L130278;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.remove|] ([|java:util:concurrent:CopyOnWriteArrayList|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;

        [|int|] v0 @varname [|index|] @scope ((L0005,L0010));


        v1;
      
#L13029c.   (@monitorenter v2)
#L13029e.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.indexOf|](v2, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L1302a4.   v0:= temp;
#L1302a6.   v1:= -1  @length 4;
#L1302a8.   if v0 != v1 then goto L1302b2;
#L1302ac.   v1:= 0  @length 4;
#L1302ae.   (@monitorexit v2)
#L1302b0.   return v1;
#L1302b2.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.remove|](v2, v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.remove:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L1302b8.   v1:= 1  @length 4;
#L1302ba.   goto L1302ae;
#L1302bc.   v1:= Exception  @type object;
#L1302be.   (@monitorexit v2)
#L1302c0.   throw v1;
  catch  [|any|] @[L13029e..L1302a4] goto L1302bc;
  catch  [|any|] @[L1302b2..L1302b8] goto L1302bc;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.removeAll|] ([|java:util:concurrent:CopyOnWriteArrayList|] v4 @type (this), [|java:util:Collection|] v5 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L1302e8.   v0:= 0  @length 4;
#L1302ea.   (@monitorenter v4)
#L1302ec.   v1:= 0  @length 4;
#L1302ee.   v2:= 0  @length 4;
#L1302f0.   v3:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1302f4.   v3:= v3.length;
#L1302f6.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.removeOrRetain|](v4, v5, v1, v2, v3) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.removeOrRetain:(Ljava/util/Collection;ZII)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L1302fc.   v1:= temp;
#L1302fe.   if v1 == 0 then goto L130304;
#L130302.   v0:= 1  @length 4;
#L130304.   (@monitorexit v4)
#L130306.   return v0;
#L130308.   v0:= Exception  @type object;
#L13030a.   (@monitorexit v4)
#L13030c.   throw v0;
  catch  [|any|] @[L1302f0..L1302fc] goto L130308;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArrayList.retainAll|] ([|java:util:concurrent:CopyOnWriteArrayList|] v5 @type (this), [|java:util:Collection|] v6 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.retainAll:(Ljava/util/Collection;)Z|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
      
#L13032c.   v0:= 1  @length 4;
#L13032e.   v1:= 0  @length 4;
#L130330.   (@monitorenter v5)
#L130332.   v2:= 1  @length 4;
#L130334.   v3:= 0  @length 4;
#L130336.   v4:= v5.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L13033a.   v4:= v4.length;
#L13033c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.removeOrRetain|](v5, v6, v2, v3, v4) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.removeOrRetain:(Ljava/util/Collection;ZII)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L130342.   v2:= temp;
#L130344.   if v2 == 0 then goto L13034c;
#L130348.   (@monitorexit v5)
#L13034a.   return v0;
#L13034c.   v0:= v1;
#L13034e.   goto L130348;
#L130350.   v0:= Exception  @type object;
#L130352.   (@monitorexit v5)
#L130354.   throw v0;
  catch  [|any|] @[L130336..L130342] goto L130350;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:CopyOnWriteArrayList.set|] ([|java:util:concurrent:CopyOnWriteArrayList|] v3 @type (this), [|int|] v4, [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_DECLARED_SYNCHRONIZED {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|newElements|] @scope ((L0009,L0011));
        [|java:lang:Object|] v1 @varname [|result|] @scope ((L000b,L0011));



        v2;
      
#L130374.   (@monitorenter v3)
#L130376.   v2:= v3.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L13037a.   call temp:=  [|java:lang:Object[].clone|](v2) @signature [|[Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object[]|] @type virtual;
#L130380.   v0:= temp  @type object;
#L130382.   v0:= ([|java:lang:Object|][])v0;
#L130386.   v1:= v0[v4]  @type object;
#L13038a.   v0[v4]:= v5  @type object;
#L13038e.   v3.[|java:util:concurrent:CopyOnWriteArrayList.elements|]  := v0 @type object;
#L130392.   (@monitorexit v3)
#L130394.   return v1  @type object;
#L130396.   v2:= Exception  @type object;
#L130398.   (@monitorexit v3)
#L13039a.   throw v2;
  catch  [|any|] @[L130376..L130392] goto L130396;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArrayList.size|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.size:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1303b8.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1303bc.   v0:= v0.length;
#L1303be.   return v0;

   }
    procedure [|java:util:List|] [|java:util:concurrent:CopyOnWriteArrayList.subList|] ([|java:util:concurrent:CopyOnWriteArrayList|] v4 @type (this), [|int|] v5, [|int|] v6) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.subList:(II)Ljava/util/List;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|snapshot|] @scope ((L0002,L003d));



        v1;
        v2;
        v3;
      
#L1303d0.   v0:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1303d4.   if v5 < 0 then goto L1303e2;
#L1303d8.   if v5 > v6 then goto L1303e2;
#L1303dc.   v1:= v0.length;
#L1303de.   if v6 <= v1 then goto L13043e;
#L1303e2.   v1:= new [|java:lang:IndexOutOfBoundsException|];
#L1303e6.   v2:= new [|java:lang:StringBuilder|];
#L1303ea.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1303f0.   v3:= "from=" @type (object, string);
#L1303f4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1303fa.   v2:= temp  @type object;
#L1303fc.   call temp:=  [|java:lang:StringBuilder.append|](v2, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L130402.   v2:= temp  @type object;
#L130404.   v3:= ", to=" @type (object, string);
#L130408.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13040e.   v2:= temp  @type object;
#L130410.   call temp:=  [|java:lang:StringBuilder.append|](v2, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L130416.   v2:= temp  @type object;
#L130418.   v3:= ", list size=" @type (object, string);
#L13041c.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L130422.   v2:= temp  @type object;
#L130424.   v3:= v0.length;
#L130426.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13042c.   v2:= temp  @type object;
#L13042e.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L130434.   v2:= temp  @type object;
#L130436.   call temp:=  [|java:lang:IndexOutOfBoundsException.<init>|](v1, v2) @signature [|Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IndexOutOfBoundsException|] @type direct;
#L13043c.   throw v1;
#L13043e.   v1:= new [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|];
#L130442.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList$CowSubList.<init>|](v1, v4, v0, v5, v6) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList$CowSubList;.<init>:(Ljava/util/concurrent/CopyOnWriteArrayList;[Ljava/lang/Object;II)V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList$CowSubList|] @type direct;
#L130448.   return v1  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArrayList.toArray|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13045c.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L130460.   call temp:=  [|java:lang:Object[].clone|](v0) @signature [|[Ljava/lang/Object;.clone:()Ljava/lang/Object;|] @classDescriptor [|java:lang:Object[]|] @type virtual;
#L130466.   v0:= temp  @type object;
#L130468.   v0:= ([|java:lang:Object|][])v0;
#L13046c.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArrayList.toArray|] ([|java:util:concurrent:CopyOnWriteArrayList|] v4 @type (this), [|java:lang:Object|][] v5 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|snapshot|] @scope ((L0003,L0021));


        v1;
        v2;
        v3;
      
#L130480.   v3:= 0  @length 4;
#L130482.   v0:= v4.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L130486.   v1:= v0.length;
#L130488.   v2:= v5.length;
#L13048a.   if v1 <= v2 then goto L1304a6;
#L13048e.   v1:= v0.length;
#L130490.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L130496.   v2:= temp  @type object;
#L130498.   call temp:=  [|java:util:Arrays.copyOf|](v0, v1, v2) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L13049e.   v1:= temp  @type object;
#L1304a0.   v1:= ([|java:lang:Object|][])v1;
#L1304a4.   return v1  @type object;
#L1304a6.   v1:= v0.length;
#L1304a8.   call temp:=  [|java:lang:System.arraycopy|](v0, v3, v5, v3, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L1304ae.   v1:= v0.length;
#L1304b0.   v2:= v5.length;
#L1304b2.   if v1 >= v2 then goto L1304be;
#L1304b6.   v1:= v0.length;
#L1304b8.   v2:= 0  @length 4;
#L1304ba.   v5[v1]:= v2  @type object;
#L1304be.   v1:= v5  @type object;
#L1304c0.   goto L1304a4;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:CopyOnWriteArrayList.toString|] ([|java:util:concurrent:CopyOnWriteArrayList|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArrayList|] @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1304d4.   v0:= v1.[|java:util:concurrent:CopyOnWriteArrayList.elements|]   @type object;
#L1304d8.   call temp:=  [|java:util:Arrays.toString|](v0) @signature [|Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:util:Arrays|] @type static;
#L1304de.   v0:= temp  @type object;
#L1304e0.   return v0  @type object;

   }
record [|java:util:concurrent:CopyOnWriteArraySet|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractSet|], [|java:io:Serializable|] {
      [|java:util:concurrent:CopyOnWriteArrayList|] [|java:util:concurrent:CopyOnWriteArraySet.al|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:concurrent:CopyOnWriteArraySet.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArraySet.<init>|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L1304f4.   call temp:=  [|java:util:AbstractSet.<init>|](v1) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L1304fa.   v0:= new [|java:util:concurrent:CopyOnWriteArrayList|];
#L1304fe.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.<init>|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L130504.   v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]  := v0 @type object;
#L130508.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArraySet.<init>|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L13051c.   call temp:=  [|java:util:AbstractSet.<init>|](v1) @signature [|Ljava/util/AbstractSet;.<init>:()V|] @classDescriptor [|java:util:AbstractSet|] @type direct;
#L130522.   v0:= new [|java:util:concurrent:CopyOnWriteArrayList|];
#L130526.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.<init>|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type direct;
#L13052c.   v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]  := v0 @type object;
#L130530.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L130534.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.addAllAbsent|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.addAllAbsent:(Ljava/util/Collection;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L13053a.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.eq|] ([|java:lang:Object|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.eq:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PRIVATE_STATIC {
      local temp ;


        v0;
      
#L13054c.   if v1 != 0 then goto L13055c;
#L130550.   if v2 != 0 then goto L130558;
#L130554.   v0:= 1  @length 4;
#L130556.   return v0;
#L130558.   v0:= 0  @length 4;
#L13055a.   goto L130556;
#L13055c.   call temp:=  [|java:lang:Object.equals|](v1, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L130562.   v0:= temp;
#L130564.   goto L130556;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.add|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L130578.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L13057c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.addIfAbsent|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.addIfAbsent:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L130582.   v0:= temp;
#L130584.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.addAll|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.addAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L130598.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L13059c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.addAllAbsent|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.addAllAbsent:(Ljava/util/Collection;)I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L1305a2.   v0:= temp;
#L1305a4.   if v0 <= 0 then goto L1305ac;
#L1305a8.   v0:= 1  @length 4;
#L1305aa.   return v0;
#L1305ac.   v0:= 0  @length 4;
#L1305ae.   goto L1305aa;

   }
    procedure [|void|] [|java:util:concurrent:CopyOnWriteArraySet.clear|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.clear:()V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1305c0.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L1305c4.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.clear|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.clear:()V|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L1305ca.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.contains|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L1305dc.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L1305e0.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.contains|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.contains:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L1305e6.   v0:= temp;
#L1305e8.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.containsAll|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.containsAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L1305fc.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L130600.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.containsAll|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.containsAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L130606.   v0:= temp;
#L130608.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.equals|] ([|java:util:concurrent:CopyOnWriteArraySet|] v11 @type (this), [|java:lang:Object|] v12 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.equals:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        [|int|] v1 @varname [|i|] @scope ((L002c,L0040));
        [|java:lang:Object|] v7 @varname [|x|] @scope ((L002b,L0040));
        [|java:lang:Object|][] v0 @varname [|elements|] @scope ((L0019,L0046));
        [|java:util:Iterator|] v2 @varname [|it|] @scope ((L0013,L0046));
        [|int|] v3 @varname [|k|] @scope ((L001d,L0046));
        [|int|] v4 @varname [|len|] @scope ((L001a,L0046));
        [|boolean|][] v5 @varname [|matched|] @scope ((L001c,L0046));
        [|java:util:Set|] v6 @varname [|set|] @scope ((L000f,L0046));

        v8;
        v9;
        v10;
      
#L13061c.   v8:= 1  @length 4;
#L13061e.   v9:= 0  @length 4;
#L130620.   if v12 != v11 then goto L130628;
#L130624.   v9:= v8;
#L130626.   return v9;
#L130628.   v10:= instanceof @varname v12 @type [|java:util:Set|];
#L13062c.   if v10 == 0 then goto L130626;
#L130630.   v12:= ([|java:util:Set|])v12;
#L130634.   v6:= v12  @type object;
#L130636.   v6:= ([|java:util:Set|])v6;
#L13063a.   call temp:=  [|java:util:Set.iterator|](v6) @signature [|Ljava/util/Set;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Set|] @type interface;
#L130640.   v2:= temp  @type object;
#L130642.   v10:= v11.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L130646.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.getArray|](v10) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.getArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L13064c.   v0:= temp  @type object;
#L13064e.   v4:= v0.length;
#L130650.   v5:= new [|boolean|][v4];
#L130654.   v3:= 0  @length 4;
#L130656.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13065c.   v10:= temp;
#L13065e.   if v10 == 0 then goto L13069c;
#L130662.   v3:= v3 + 1;
#L130666.   if v3 > v4 then goto L130626;
#L13066a.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L130670.   v7:= temp  @type object;
#L130672.   v1:= 0  @length 4;
#L130674.   if v1 >= v4 then goto L130626;
#L130678.   v10:= v5[v1]  @boolean;
#L13067c.   if v10 != 0 then goto L130696;
#L130680.   v10:= v0[v1]  @type object;
#L130684.   call temp:=  [|java:util:concurrent:CopyOnWriteArraySet.eq|](v7, v10) @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.eq:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArraySet|] @type static;
#L13068a.   v10:= temp;
#L13068c.   if v10 == 0 then goto L130696;
#L130690.   v5[v1]:= v8  @boolean;
#L130694.   goto L130656;
#L130696.   v1:= v1 + 1;
#L13069a.   goto L130674;
#L13069c.   if v3 != v4 then goto L1306a4;
#L1306a0.   v9:= v8;
#L1306a2.   goto L130626;
#L1306a4.   v8:= v9;
#L1306a6.   goto L1306a0;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.isEmpty|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1306b8.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L1306bc.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.isEmpty|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L1306c2.   v0:= temp;
#L1306c4.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:CopyOnWriteArraySet.iterator|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1306d8.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L1306dc.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.iterator|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L1306e2.   v0:= temp  @type object;
#L1306e4.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.remove|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L1306f8.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L1306fc.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.remove|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L130702.   v0:= temp;
#L130704.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.removeAll|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L130718.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L13071c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.removeAll|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.removeAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L130722.   v0:= temp;
#L130724.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:CopyOnWriteArraySet.retainAll|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.retainAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L130738.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L13073c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.retainAll|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.retainAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L130742.   v0:= temp;
#L130744.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:CopyOnWriteArraySet.size|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.size:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L130758.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L13075c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.size|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.size:()I|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L130762.   v0:= temp;
#L130764.   return v0;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArraySet.toArray|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L130778.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L13077c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.toArray|](v0) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L130782.   v0:= temp  @type object;
#L130784.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:CopyOnWriteArraySet.toArray|] ([|java:util:concurrent:CopyOnWriteArraySet|] v1 @type (this), [|java:lang:Object|][] v2 @type (object)) @owner [|java:util:concurrent:CopyOnWriteArraySet|] @signature [|Ljava/util/concurrent/CopyOnWriteArraySet;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L130798.   v0:= v1.[|java:util:concurrent:CopyOnWriteArraySet.al|]   @type object;
#L13079c.   call temp:=  [|java:util:concurrent:CopyOnWriteArrayList.toArray|](v0, v2) @signature [|Ljava/util/concurrent/CopyOnWriteArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:CopyOnWriteArrayList|] @type virtual;
#L1307a2.   v0:= temp  @type object;
#L1307a4.   return v0  @type object;

   }
record [|java:util:concurrent:locks:AbstractOwnableSynchronizer|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:io:Serializable|] {
      [|java:lang:Thread|] [|java:util:concurrent:locks:AbstractOwnableSynchronizer.exclusiveOwnerThread|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|long|] @@[|java:util:concurrent:locks:AbstractOwnableSynchronizer.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:AbstractOwnableSynchronizer.<init>|] ([|java:util:concurrent:locks:AbstractOwnableSynchronizer|] v0 @type (this)) @owner [|java:util:concurrent:locks:AbstractOwnableSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractOwnableSynchronizer;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L1307b8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1307be.   return @void ;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:locks:AbstractOwnableSynchronizer.getExclusiveOwnerThread|] ([|java:util:concurrent:locks:AbstractOwnableSynchronizer|] v1 @type (this)) @owner [|java:util:concurrent:locks:AbstractOwnableSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractOwnableSynchronizer;.getExclusiveOwnerThread:()Ljava/lang/Thread;|] @Access PROTECTED_FINAL {
      local temp ;

        v0;
      
#L1307d0.   v0:= v1.[|java:util:concurrent:locks:AbstractOwnableSynchronizer.exclusiveOwnerThread|]   @type object;
#L1307d4.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractOwnableSynchronizer.setExclusiveOwnerThread|] ([|java:util:concurrent:locks:AbstractOwnableSynchronizer|] v0 @type (this), [|java:lang:Thread|] v1 @type (object)) @owner [|java:util:concurrent:locks:AbstractOwnableSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractOwnableSynchronizer;.setExclusiveOwnerThread:(Ljava/lang/Thread;)V|] @Access PROTECTED_FINAL {
      local temp ;


      
#L1307e8.   v0.[|java:util:concurrent:locks:AbstractOwnableSynchronizer.exclusiveOwnerThread|]  := v1 @type object;
#L1307ec.   return @void ;

   }
record [|java:util:concurrent:locks:AbstractQueuedSynchronizer|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:concurrent:locks:AbstractOwnableSynchronizer|], [|java:io:Serializable|] {
      [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
      [|int|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.state|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
   }
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.headOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.nextOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.spinForTimeoutThreshold|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.stateOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tailOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.waitStatusOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.<clinit>|] () @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|ex|] @scope ((L0058,L005e));
        v1;
        v2;
        v3;
      
#L130800.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L130806.   v1:= temp  @type object;
#L130808.   @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|] := v1  @type object;
#L13080c.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L130810.   v2:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer|];
#L130814.   v3:= "state" @type (object, string);
#L130818.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13081e.   v2:= temp  @type object;
#L130820.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L130826.   v1:= temp  @type wide;
#L130828.   @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.stateOffset|] := v1  @wide;
#L13082c.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L130830.   v2:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer|];
#L130834.   v3:= "head" @type (object, string);
#L130838.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13083e.   v2:= temp  @type object;
#L130840.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L130846.   v1:= temp  @type wide;
#L130848.   @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.headOffset|] := v1  @wide;
#L13084c.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L130850.   v2:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer|];
#L130854.   v3:= "tail" @type (object, string);
#L130858.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13085e.   v2:= temp  @type object;
#L130860.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L130866.   v1:= temp  @type wide;
#L130868.   @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tailOffset|] := v1  @wide;
#L13086c.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L130870.   v2:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|];
#L130874.   v3:= "waitStatus" @type (object, string);
#L130878.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13087e.   v2:= temp  @type object;
#L130880.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L130886.   v1:= temp  @type wide;
#L130888.   @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.waitStatusOffset|] := v1  @wide;
#L13088c.   v1:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L130890.   v2:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|];
#L130894.   v3:= "next" @type (object, string);
#L130898.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13089e.   v2:= temp  @type object;
#L1308a0.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1308a6.   v1:= temp  @type wide;
#L1308a8.   @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.nextOffset|] := v1  @wide;
#L1308ac.   return @void ;
#L1308ae.   v0:= Exception  @type object;
#L1308b0.   v1:= new [|java:lang:Error|];
#L1308b4.   call temp:=  [|java:lang:Error.<init>|](v1, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1308ba.   throw v1;
  catch  [|java:lang:Exception|] @[L13080c..L1308ac] goto L1308ae;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.<init>|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v0 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L1308dc.   call temp:=  [|java:util:concurrent:locks:AbstractOwnableSynchronizer.<init>|](v0) @signature [|Ljava/util/concurrent/locks/AbstractOwnableSynchronizer;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractOwnableSynchronizer|] @type direct;
#L1308e2.   return @void ;

   }
    procedure [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.addWaiter|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v3 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v4 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|node|] @scope ((L0009,L001c));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|pred|] @scope ((L000b,L001c));


        v2;
      
#L1308f4.   v0:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|];
#L1308f8.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1308fe.   v2:= temp  @type object;
#L130900.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.<init>|](v0, v2, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.<init>:(Ljava/lang/Thread;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type direct;
#L130906.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L13090a.   if v1 == 0 then goto L130924;
#L13090e.   v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]  := v1 @type object;
#L130912.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetTail|](v3, v1, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetTail:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130918.   v2:= temp;
#L13091a.   if v2 == 0 then goto L130924;
#L13091e.   v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v0 @type object;
#L130922.   return v0  @type object;
#L130924.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.enq|](v3, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.enq:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13092a.   goto L130922;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v7 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v8 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|next|] @scope ((L003b,L0044));
        [|int|] v3 @varname [|ws|] @scope ((L002b,L0044));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|pred|] @scope ((L0009,L004b));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @varname [|predNext|] @scope ((L0014,L004b));


        v4;
        v5;
        v6;
      
#L13093c.   v6:= 0  @length 4;
#L13093e.   v5:= -1  @length 4;
#L130940.   if v8 != 0 then goto L130946;
#L130944.   return @void ;
#L130946.   v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]  := v6 @type object;
#L13094a.   v1:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L13094e.   v4:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L130952.   if v4 <= 0 then goto L130960;
#L130956.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L13095a.   v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]  := v1 @type object;
#L13095e.   goto L13094e;
#L130960.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]   @type object;
#L130964.   v4:= 1  @length 4;
#L130966.   v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|]  := v4;
#L13096a.   v4:= v7.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L13096e.   if v8 != v4 then goto L130986;
#L130972.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetTail|](v7, v8, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetTail:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130978.   v4:= temp;
#L13097a.   if v4 == 0 then goto L130986;
#L13097e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetNext|](v1, v2, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetNext:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L130984.   goto L130944;
#L130986.   v4:= v7.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L13098a.   if v1 == v4 then goto L1309ca;
#L13098e.   v3:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L130992.   if v3 == v5 then goto L1309a6;
#L130996.   if v3 > 0 then goto L1309ca;
#L13099a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetWaitStatus|](v1, v3, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L1309a0.   v4:= temp;
#L1309a2.   if v4 == 0 then goto L1309ca;
#L1309a6.   v4:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L1309aa.   if v4 == 0 then goto L1309ca;
#L1309ae.   v0:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]   @type object;
#L1309b2.   if v0 == 0 then goto L1309c4;
#L1309b6.   v4:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L1309ba.   if v4 > 0 then goto L1309c4;
#L1309be.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetNext|](v1, v2, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetNext:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L1309c4.   v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v8 @type object;
#L1309c8.   goto L130944;
#L1309ca.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.unparkSuccessor|](v7, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.unparkSuccessor:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L1309d0.   goto L1309c4;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetHead|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v6 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v7 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetHead:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @Access PRIVATE_FINAL {
      local temp ;


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1309e4.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L1309e8.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.headOffset|]   @wide;
#L1309ec.   v4:= 0  @length 4;
#L1309ee.   v1:= v6  @type object;
#L1309f0.   v5:= v7  @type object;
#L1309f2.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1309f8.   v0:= temp;
#L1309fa.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetNext|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v6 @type (object), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v7 @type (object), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v8 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetNext:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @Access PRIVATE_STATIC_FINAL {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L130a0c.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L130a10.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.nextOffset|]   @wide;
#L130a14.   v1:= v6  @type object;
#L130a16.   v4:= v7  @type object;
#L130a18.   v5:= v8  @type object;
#L130a1a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L130a20.   v0:= temp;
#L130a22.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetTail|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v6 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v7 @type (object), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v8 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetTail:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @Access PRIVATE_FINAL {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L130a34.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L130a38.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tailOffset|]   @wide;
#L130a3c.   v1:= v6  @type object;
#L130a3e.   v4:= v7  @type object;
#L130a40.   v5:= v8  @type object;
#L130a42.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L130a48.   v0:= temp;
#L130a4a.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetWaitStatus|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v6 @type (object), [|int|] v7, [|int|] v8) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z|] @Access PRIVATE_STATIC_FINAL {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L130a5c.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L130a60.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.waitStatusOffset|]   @wide;
#L130a64.   v1:= v6  @type object;
#L130a66.   v4:= v7;
#L130a68.   v5:= v8;
#L130a6a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L130a70.   v0:= temp;
#L130a72.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireInterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v4 @type (this), [|int|] v5) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireInterruptibly:(I)V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @varname [|p|] @scope ((L000b,L0034));
        [|boolean|] v0 @varname [|failed|] @scope ((L0007,L003b));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|node|] @scope ((L0006,L003b));


        v3;
      
#L130a84.   v3:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.EXCLUSIVE|]   @type object;
#L130a88.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.addWaiter|](v4, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130a8e.   v1:= temp  @type object;
#L130a90.   v0:= 1  @length 4;
#L130a92.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.predecessor|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L130a98.   v2:= temp  @type object;
#L130a9a.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130a9e.   if v2 != v3 then goto L130ac8;
#L130aa2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquire|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquire:(I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L130aa8.   v3:= temp;
#L130aaa.   if v3 == 0 then goto L130ac8;
#L130aae.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setHead|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130ab4.   v3:= 0  @length 4;
#L130ab6.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v3 @type object;
#L130aba.   v0:= 0  @length 4;
#L130abc.   if v0 == 0 then goto L130ac6;
#L130ac0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130ac6.   return @void ;
#L130ac8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire|](v2, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L130ace.   v3:= temp;
#L130ad0.   if v3 == 0 then goto L130a92;
#L130ad4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.parkAndCheckInterrupt|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.parkAndCheckInterrupt:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130ada.   v3:= temp;
#L130adc.   if v3 == 0 then goto L130a92;
#L130ae0.   v3:= new [|java:lang:InterruptedException|];
#L130ae4.   call temp:=  [|java:lang:InterruptedException.<init>|](v3) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L130aea.   throw v3;
#L130aec.   v3:= Exception  @type object;
#L130aee.   if v0 == 0 then goto L130af8;
#L130af2.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130af8.   throw v3;
  catch  [|any|] @[L130a92..L130aba] goto L130aec;
  catch  [|any|] @[L130ac8..L130aec] goto L130aec;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireNanos|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v9 @type (this), [|int|] v10, [|long|] v11) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireNanos:(IJ)Z|] @Access PRIVATE {
      local temp ;
        [|long|] v4 @varname [|now|] @scope ((L0044,L0054));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v6 @varname [|p|] @scope ((L000f,L0054));
        [|boolean|] v0 @varname [|failed|] @scope ((L000b,L005b));
        [|long|] v1 @varname [|lastTime|] @scope ((L0004,L005b));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v3 @varname [|node|] @scope ((L000a,L005b));



        v2;
        v5;
        v7;
        v8;
      
#L130b20.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L130b26.   v1:= temp  @type wide;
#L130b28.   v7:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.EXCLUSIVE|]   @type object;
#L130b2c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.addWaiter|](v9, v7) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130b32.   v3:= temp  @type object;
#L130b34.   v0:= 1  @length 4;
#L130b36.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.predecessor|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L130b3c.   v6:= temp  @type object;
#L130b3e.   v7:= v9.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130b42.   if v6 != v7 then goto L130b6e;
#L130b46.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquire|](v9, v10) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquire:(I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L130b4c.   v7:= temp;
#L130b4e.   if v7 == 0 then goto L130b6e;
#L130b52.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setHead|](v9, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130b58.   v7:= 0  @length 4;
#L130b5a.   v6.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v7 @type object;
#L130b5e.   v0:= 0  @length 4;
#L130b60.   v7:= 1  @length 4;
#L130b62.   if v0 == 0 then goto L130b6c;
#L130b66.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v9, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130b6c.   return v7;
#L130b6e.   v7:= 0  @length wide16;
#L130b72.   v7:= cmp(v11,v7);
#L130b76.   if v7 > 0 then goto L130b82;
#L130b7a.   v7:= 0  @length 4;
#L130b7c.   if v0 == 0 then goto L130b6c;
#L130b80.   goto L130b66;
#L130b82.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire|](v6, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L130b88.   v7:= temp;
#L130b8a.   if v7 == 0 then goto L130ba0;
#L130b8e.   v7:= 1000  @length wide16;
#L130b92.   v7:= cmp(v11,v7);
#L130b96.   if v7 <= 0 then goto L130ba0;
#L130b9a.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v9, v11, v12) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L130ba0.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L130ba6.   v4:= temp  @type wide;
#L130ba8.   v7:= v4 - v1  @type long;
#L130bac.   v11:= v11 - v7  @type long;
#L130bae.   v1:= v4  @type wide;
#L130bb0.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L130bb6.   v7:= temp;
#L130bb8.   if v7 == 0 then goto L130b36;
#L130bbc.   v7:= new [|java:lang:InterruptedException|];
#L130bc0.   call temp:=  [|java:lang:InterruptedException.<init>|](v7) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L130bc6.   throw v7;
#L130bc8.   v7:= Exception  @type object;
#L130bca.   if v0 == 0 then goto L130bd4;
#L130bce.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v9, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130bd4.   throw v7;
  catch  [|any|] @[L130b36..L130b5e] goto L130bc8;
  catch  [|any|] @[L130b82..L130bc8] goto L130bc8;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireShared|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireShared:(I)V|] @Access PRIVATE {
      local temp ;
        [|int|] v4 @varname [|r|] @scope ((L0014,L0028));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v3 @varname [|p|] @scope ((L000c,L0036));
        [|boolean|] v0 @varname [|failed|] @scope ((L0007,L003d));
        [|boolean|] v1 @varname [|interrupted|] @scope ((L0008,L003d));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @varname [|node|] @scope ((L0006,L003d));


        v5;
      
#L130bfc.   v5:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.SHARED|]   @type object;
#L130c00.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.addWaiter|](v6, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130c06.   v2:= temp  @type object;
#L130c08.   v0:= 1  @length 4;
#L130c0a.   v1:= 0  @length 4;
#L130c0c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.predecessor|](v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L130c12.   v3:= temp  @type object;
#L130c14.   v5:= v6.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130c18.   if v3 != v5 then goto L130c4c;
#L130c1c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquireShared|](v6, v7) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquireShared:(I)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L130c22.   v4:= temp;
#L130c24.   if v4 < 0 then goto L130c4c;
#L130c28.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setHeadAndPropagate|](v6, v2, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setHeadAndPropagate:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130c2e.   v5:= 0  @length 4;
#L130c30.   v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v5 @type object;
#L130c34.   if v1 == 0 then goto L130c3e;
#L130c38.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.selfInterrupt|]() @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.selfInterrupt:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L130c3e.   v0:= 0  @length 4;
#L130c40.   if v0 == 0 then goto L130c4a;
#L130c44.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v6, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130c4a.   return @void ;
#L130c4c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire|](v3, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L130c52.   v5:= temp;
#L130c54.   if v5 == 0 then goto L130c0c;
#L130c58.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.parkAndCheckInterrupt|](v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.parkAndCheckInterrupt:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130c5e.   v5:= temp;
#L130c60.   if v5 == 0 then goto L130c0c;
#L130c64.   v1:= 1  @length 4;
#L130c66.   goto L130c0c;
#L130c68.   v5:= Exception  @type object;
#L130c6a.   if v0 == 0 then goto L130c74;
#L130c6e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v6, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130c74.   throw v5;
  catch  [|any|] @[L130c0c..L130c3e] goto L130c68;
  catch  [|any|] @[L130c4c..L130c5e] goto L130c68;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireSharedInterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v5 @type (this), [|int|] v6) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireSharedInterruptibly:(I)V|] @Access PRIVATE {
      local temp ;
        [|int|] v3 @varname [|r|] @scope ((L0013,L0022));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @varname [|p|] @scope ((L000b,L0034));
        [|boolean|] v0 @varname [|failed|] @scope ((L0007,L003b));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|node|] @scope ((L0006,L003b));


        v4;
      
#L130c9c.   v4:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.SHARED|]   @type object;
#L130ca0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.addWaiter|](v5, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130ca6.   v1:= temp  @type object;
#L130ca8.   v0:= 1  @length 4;
#L130caa.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.predecessor|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L130cb0.   v2:= temp  @type object;
#L130cb2.   v4:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130cb6.   if v2 != v4 then goto L130ce0;
#L130cba.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquireShared|](v5, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquireShared:(I)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L130cc0.   v3:= temp;
#L130cc2.   if v3 < 0 then goto L130ce0;
#L130cc6.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setHeadAndPropagate|](v5, v1, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setHeadAndPropagate:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130ccc.   v4:= 0  @length 4;
#L130cce.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v4 @type object;
#L130cd2.   v0:= 0  @length 4;
#L130cd4.   if v0 == 0 then goto L130cde;
#L130cd8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v5, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130cde.   return @void ;
#L130ce0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire|](v2, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L130ce6.   v4:= temp;
#L130ce8.   if v4 == 0 then goto L130caa;
#L130cec.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.parkAndCheckInterrupt|](v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.parkAndCheckInterrupt:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130cf2.   v4:= temp;
#L130cf4.   if v4 == 0 then goto L130caa;
#L130cf8.   v4:= new [|java:lang:InterruptedException|];
#L130cfc.   call temp:=  [|java:lang:InterruptedException.<init>|](v4) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L130d02.   throw v4;
#L130d04.   v4:= Exception  @type object;
#L130d06.   if v0 == 0 then goto L130d10;
#L130d0a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v5, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130d10.   throw v4;
  catch  [|any|] @[L130caa..L130cd2] goto L130d04;
  catch  [|any|] @[L130ce0..L130d04] goto L130d04;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireSharedNanos|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v10 @type (this), [|int|] v11, [|long|] v12) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireSharedNanos:(IJ)Z|] @Access PRIVATE {
      local temp ;
        [|int|] v7 @varname [|r|] @scope ((L0017,L0023));
        [|long|] v4 @varname [|now|] @scope ((L0044,L0054));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v6 @varname [|p|] @scope ((L000f,L0054));
        [|boolean|] v0 @varname [|failed|] @scope ((L000b,L005b));
        [|long|] v1 @varname [|lastTime|] @scope ((L0004,L005b));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v3 @varname [|node|] @scope ((L000a,L005b));



        v2;
        v5;
        v8;
        v9;
      
#L130d38.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L130d3e.   v1:= temp  @type wide;
#L130d40.   v8:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.SHARED|]   @type object;
#L130d44.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.addWaiter|](v10, v8) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130d4a.   v3:= temp  @type object;
#L130d4c.   v0:= 1  @length 4;
#L130d4e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.predecessor|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L130d54.   v6:= temp  @type object;
#L130d56.   v8:= v10.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130d5a.   if v6 != v8 then goto L130d86;
#L130d5e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquireShared|](v10, v11) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquireShared:(I)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L130d64.   v7:= temp;
#L130d66.   if v7 < 0 then goto L130d86;
#L130d6a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setHeadAndPropagate|](v10, v3, v7) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setHeadAndPropagate:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130d70.   v8:= 0  @length 4;
#L130d72.   v6.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v8 @type object;
#L130d76.   v0:= 0  @length 4;
#L130d78.   v8:= 1  @length 4;
#L130d7a.   if v0 == 0 then goto L130d84;
#L130d7e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v10, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130d84.   return v8;
#L130d86.   v8:= 0  @length wide16;
#L130d8a.   v8:= cmp(v12,v8);
#L130d8e.   if v8 > 0 then goto L130d9a;
#L130d92.   v8:= 0  @length 4;
#L130d94.   if v0 == 0 then goto L130d84;
#L130d98.   goto L130d7e;
#L130d9a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire|](v6, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L130da0.   v8:= temp;
#L130da2.   if v8 == 0 then goto L130db8;
#L130da6.   v8:= 1000  @length wide16;
#L130daa.   v8:= cmp(v12,v8);
#L130dae.   if v8 <= 0 then goto L130db8;
#L130db2.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v10, v12, v13) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L130db8.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L130dbe.   v4:= temp  @type wide;
#L130dc0.   v8:= v4 - v1  @type long;
#L130dc4.   v12:= v12 - v8  @type long;
#L130dc6.   v1:= v4  @type wide;
#L130dc8.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L130dce.   v8:= temp;
#L130dd0.   if v8 == 0 then goto L130d4e;
#L130dd4.   v8:= new [|java:lang:InterruptedException|];
#L130dd8.   call temp:=  [|java:lang:InterruptedException.<init>|](v8) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L130dde.   throw v8;
#L130de0.   v8:= Exception  @type object;
#L130de2.   if v0 == 0 then goto L130dec;
#L130de6.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v10, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130dec.   throw v8;
  catch  [|any|] @[L130d4e..L130d76] goto L130de0;
  catch  [|any|] @[L130d9a..L130de0] goto L130de0;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doReleaseShared|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doReleaseShared:()V|] @Access PRIVATE {
      local temp ;
        [|int|] v1 @varname [|ws|] @scope ((L000c,L0017), (L001c,L0026));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|h|] @scope ((L0004,L0026));

        v2;
        v3;
        v4;
      
#L130e14.   v4:= 0  @length 4;
#L130e16.   v3:= -1  @length 4;
#L130e18.   v0:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130e1c.   if v0 == 0 then goto L130e42;
#L130e20.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L130e24.   if v0 == v2 then goto L130e42;
#L130e28.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L130e2c.   if v1 != v3 then goto L130e4c;
#L130e30.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetWaitStatus|](v0, v3, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L130e36.   v2:= temp;
#L130e38.   if v2 == 0 then goto L130e18;
#L130e3c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.unparkSuccessor|](v5, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.unparkSuccessor:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130e42.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130e46.   if v0 != v2 then goto L130e18;
#L130e4a.   return @void ;
#L130e4c.   if v1 != 0 then goto L130e42;
#L130e50.   v2:= -3  @length 4;
#L130e52.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetWaitStatus|](v0, v4, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L130e58.   v2:= temp;
#L130e5a.   if v2 != 0 then goto L130e42;
#L130e5e.   goto L130e18;

   }
    procedure [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.enq|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.enq:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|t|] @scope ((L0002,L001f));


        v1;
      
#L130e70.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L130e74.   if v0 != 0 then goto L130e98;
#L130e78.   v1:= new [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|];
#L130e7c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.<init>|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type direct;
#L130e82.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetHead|](v2, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetHead:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130e88.   v1:= temp;
#L130e8a.   if v1 == 0 then goto L130e70;
#L130e8e.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130e92.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]  := v1 @type object;
#L130e96.   goto L130e70;
#L130e98.   v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]  := v0 @type object;
#L130e9c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetTail|](v2, v0, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetTail:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130ea2.   v1:= temp;
#L130ea4.   if v1 == 0 then goto L130e70;
#L130ea8.   v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v3 @type object;
#L130eac.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.findNodeFromTail|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.findNodeFromTail:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|t|] @scope ((L0002,L000d));


        v1;
      
#L130ec0.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L130ec4.   if v0 != v3 then goto L130ecc;
#L130ec8.   v1:= 1  @length 4;
#L130eca.   return v1;
#L130ecc.   if v0 != 0 then goto L130ed4;
#L130ed0.   v1:= 0  @length 4;
#L130ed2.   goto L130eca;
#L130ed4.   v0:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L130ed8.   goto L130ec4;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.fullGetFirstQueuedThread|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v8 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.fullGetFirstQueuedThread:()Ljava/lang/Thread;|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @varname [|s|] @scope ((L0006,L0012), (L0018,L0025));
        [|java:lang:Thread|] v3 @varname [|st|] @scope ((L0010,L0012), (L0022,L0025));
        [|java:lang:Thread|] v0 @varname [|firstThread|] @scope ((L0029,L0037));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|h|] @scope ((L0002,L0037));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v4 @varname [|t|] @scope ((L0028,L0037));
        [|java:lang:Thread|] v5 @varname [|tt|] @scope ((L0031,L0037));

        v6;
        v7;
      
#L130eec.   v1:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130ef0.   if v1 == 0 then goto L130f10;
#L130ef4.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]   @type object;
#L130ef8.   if v2 == 0 then goto L130f10;
#L130efc.   v6:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L130f00.   v7:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130f04.   if v6 != v7 then goto L130f10;
#L130f08.   v3:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L130f0c.   if v3 != 0 then goto L130f34;
#L130f10.   v1:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130f14.   if v1 == 0 then goto L130f38;
#L130f18.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]   @type object;
#L130f1c.   if v2 == 0 then goto L130f38;
#L130f20.   v6:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L130f24.   v7:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130f28.   if v6 != v7 then goto L130f38;
#L130f2c.   v3:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L130f30.   if v3 == 0 then goto L130f38;
#L130f34.   v0:= v3  @type object;
#L130f36.   return v0  @type object;
#L130f38.   v4:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L130f3c.   v0:= 0  @length 4;
#L130f3e.   if v4 == 0 then goto L130f36;
#L130f42.   v6:= v8.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130f46.   if v4 == v6 then goto L130f36;
#L130f4a.   v5:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L130f4e.   if v5 == 0 then goto L130f54;
#L130f52.   v0:= v5  @type object;
#L130f54.   v4:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L130f58.   goto L130f3e;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.parkAndCheckInterrupt|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.parkAndCheckInterrupt:()Z|] @Access PRIVATE_FINAL {
      local temp ;

        v0;
      
#L130f6c.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L130f72.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L130f78.   v0:= temp;
#L130f7a.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.selfInterrupt|] () @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.selfInterrupt:()V|] @Access STATIC {
      local temp ;
        v0;
      
#L130f8c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L130f92.   v0:= temp  @type object;
#L130f94.   call temp:=  [|java:lang:Thread.interrupt|](v0) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L130f9a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setHead|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;


        v0;
      
#L130fac.   v0:= 0  @length 4;
#L130fae.   v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]  := v2 @type object;
#L130fb2.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]  := v0 @type object;
#L130fb6.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]  := v0 @type object;
#L130fba.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setHeadAndPropagate|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v3 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v4 @type (object), [|int|] v5) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setHeadAndPropagate:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|s|] @scope ((L000f,L001a));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|h|] @scope ((L0002,L001b));



        v2;
      
#L130fcc.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L130fd0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setHead|](v3, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L130fd6.   if v5 > 0 then goto L130fe6;
#L130fda.   if v0 == 0 then goto L130fe6;
#L130fde.   v2:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L130fe2.   if v2 >= 0 then goto L131000;
#L130fe6.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]   @type object;
#L130fea.   if v1 == 0 then goto L130ffa;
#L130fee.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.isShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.isShared:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L130ff4.   v2:= temp;
#L130ff6.   if v2 == 0 then goto L131000;
#L130ffa.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doReleaseShared|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doReleaseShared:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L131000.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @type (object), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @Access PRIVATE_STATIC {
      local temp ;
        [|int|] v0 @varname [|ws|] @scope ((L0003,L0019));


        v1;
      
#L131014.   v1:= -1  @length 4;
#L131016.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L13101a.   if v0 != v1 then goto L131022;
#L13101e.   v1:= 1  @length 4;
#L131020.   return v1;
#L131022.   if v0 <= 0 then goto L13103e;
#L131026.   v2:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L13102a.   v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]  := v2 @type object;
#L13102e.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L131032.   if v1 > 0 then goto L131026;
#L131036.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v3 @type object;
#L13103a.   v1:= 0  @length 4;
#L13103c.   goto L131020;
#L13103e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetWaitStatus|](v2, v0, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L131044.   goto L13103a;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.unparkSuccessor|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v4 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v5 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.unparkSuccessor:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|t|] @scope ((L0013,L001f));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|s|] @scope ((L000a,L0027));
        [|int|] v2 @varname [|ws|] @scope ((L0002,L0027));


        v3;
      
#L131058.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L13105c.   if v2 >= 0 then goto L131068;
#L131060.   v3:= 0  @length 4;
#L131062.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetWaitStatus|](v5, v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L131068.   v0:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]   @type object;
#L13106c.   if v0 == 0 then goto L131078;
#L131070.   v3:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L131074.   if v3 <= 0 then goto L131096;
#L131078.   v0:= 0  @length 4;
#L13107a.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L13107e.   if v1 == 0 then goto L131096;
#L131082.   if v1 == v5 then goto L131096;
#L131086.   v3:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L13108a.   if v3 > 0 then goto L131090;
#L13108e.   v0:= v1  @type object;
#L131090.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L131094.   goto L13107e;
#L131096.   if v0 == 0 then goto L1310a4;
#L13109a.   v3:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L13109e.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v3) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L1310a4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquire|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquire:(I)V|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L1310b8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquire|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquire:(I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1310be.   v0:= temp;
#L1310c0.   if v0 != 0 then goto L1310e2;
#L1310c4.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.EXCLUSIVE|]   @type object;
#L1310c8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.addWaiter|](v1, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.addWaiter:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L1310ce.   v0:= temp  @type object;
#L1310d0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireQueued|](v1, v0, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1310d6.   v0:= temp;
#L1310d8.   if v0 == 0 then goto L1310e2;
#L1310dc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.selfInterrupt|]() @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.selfInterrupt:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L1310e2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireInterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireInterruptibly:(I)V|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L1310f4.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L1310fa.   v0:= temp;
#L1310fc.   if v0 == 0 then goto L13110c;
#L131100.   v0:= new [|java:lang:InterruptedException|];
#L131104.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L13110a.   throw v0;
#L13110c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquire|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquire:(I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L131112.   v0:= temp;
#L131114.   if v0 != 0 then goto L13111e;
#L131118.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireInterruptibly|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireInterruptibly:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13111e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireQueued|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v4 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v5 @type (object), [|int|] v6) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireQueued:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)Z|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @varname [|p|] @scope ((L0006,L002b));
        [|boolean|] v0 @varname [|failed|] @scope ((L0001,L0032));
        [|boolean|] v1 @varname [|interrupted|] @scope ((L0002,L0032));



        v3;
      
#L131130.   v0:= 1  @length 4;
#L131132.   v1:= 0  @length 4;
#L131134.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.predecessor|](v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.predecessor:()Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L13113a.   v2:= temp  @type object;
#L13113c.   v3:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L131140.   if v2 != v3 then goto L13116a;
#L131144.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquire|](v4, v6) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquire:(I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L13114a.   v3:= temp;
#L13114c.   if v3 == 0 then goto L13116a;
#L131150.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setHead|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setHead:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L131156.   v3:= 0  @length 4;
#L131158.   v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]  := v3 @type object;
#L13115c.   v0:= 0  @length 4;
#L13115e.   if v0 == 0 then goto L131168;
#L131162.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L131168.   return v1;
#L13116a.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire|](v2, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.shouldParkAfterFailedAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L131170.   v3:= temp;
#L131172.   if v3 == 0 then goto L131134;
#L131176.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.parkAndCheckInterrupt|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.parkAndCheckInterrupt:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13117c.   v3:= temp;
#L13117e.   if v3 == 0 then goto L131134;
#L131182.   v1:= 1  @length 4;
#L131184.   goto L131134;
#L131186.   v3:= Exception  @type object;
#L131188.   if v0 == 0 then goto L131192;
#L13118c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.cancelAcquire|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.cancelAcquire:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L131192.   throw v3;
  catch  [|any|] @[L131134..L13115c] goto L131186;
  catch  [|any|] @[L13116a..L13117c] goto L131186;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireShared|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireShared:(I)V|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L1311b8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquireShared|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquireShared:(I)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1311be.   v0:= temp;
#L1311c0.   if v0 >= 0 then goto L1311ca;
#L1311c4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireShared|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireShared:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L1311ca.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.acquireSharedInterruptibly|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.acquireSharedInterruptibly:(I)V|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L1311dc.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L1311e2.   v0:= temp;
#L1311e4.   if v0 == 0 then goto L1311f4;
#L1311e8.   v0:= new [|java:lang:InterruptedException|];
#L1311ec.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L1311f2.   throw v0;
#L1311f4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquireShared|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquireShared:(I)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1311fa.   v0:= temp;
#L1311fc.   if v0 >= 0 then goto L131206;
#L131200.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireSharedInterruptibly|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireSharedInterruptibly:(I)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L131206.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v3 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.apparentlyFirstQueuedIsExclusive:()Z|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|s|] @scope ((L0006,L0013));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|h|] @scope ((L0002,L0016));

        v2;
      
#L131218.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L13121c.   if v0 == 0 then goto L131240;
#L131220.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]   @type object;
#L131224.   if v1 == 0 then goto L131240;
#L131228.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.isShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.isShared:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L13122e.   v2:= temp;
#L131230.   if v2 != 0 then goto L131240;
#L131234.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L131238.   if v2 == 0 then goto L131240;
#L13123c.   v2:= 1  @length 4;
#L13123e.   return v2;
#L131240.   v2:= 0  @length 4;
#L131242.   goto L13123e;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetState|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v6 @type (this), [|int|] v7, [|int|] v8) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetState:(II)Z|] @Access PROTECTED_FINAL {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L131254.   v0:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.unsafe|]   @type object;
#L131258.   v2:= @@[|java:util:concurrent:locks:AbstractQueuedSynchronizer.stateOffset|]   @wide;
#L13125c.   v1:= v6  @type object;
#L13125e.   v4:= v7;
#L131260.   v5:= v8;
#L131262.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L131268.   v0:= temp;
#L13126a.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.fullyRelease|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v4 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v5 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.fullyRelease:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I|] @Access FINAL {
      local temp ;
        [|int|] v1 @varname [|savedState|] @scope ((L0006,L0018));
        [|boolean|] v0 @varname [|failed|] @scope ((L0002,L001e));


        v2;
        v3;
      
#L13127c.   v3:= 1  @length 4;
#L13127e.   v0:= 1  @length 4;
#L131280.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getState|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L131286.   v1:= temp;
#L131288.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.release|](v4, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.release:(I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L13128e.   v2:= temp;
#L131290.   if v2 == 0 then goto L1312a0;
#L131294.   v0:= 0  @length 4;
#L131296.   if v0 == 0 then goto L13129e;
#L13129a.   v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|]  := v3;
#L13129e.   return v1;
#L1312a0.   v2:= new [|java:lang:IllegalMonitorStateException|];
#L1312a4.   call temp:=  [|java:lang:IllegalMonitorStateException.<init>|](v2) @signature [|Ljava/lang/IllegalMonitorStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalMonitorStateException|] @type direct;
#L1312aa.   throw v2;
#L1312ac.   v2:= Exception  @type object;
#L1312ae.   if v0 == 0 then goto L1312b6;
#L1312b2.   v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|]  := v3;
#L1312b6.   throw v2;
  catch  [|any|] @[L131280..L13128e] goto L1312ac;
  catch  [|any|] @[L1312a0..L1312ac] goto L1312ac;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getExclusiveQueuedThreads|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getExclusiveQueuedThreads:()Ljava/util/Collection;|] @Access PUBLIC_FINAL {
      local temp ;
        [|java:lang:Thread|] v2 @varname [|t|] @scope ((L0011,L0016));
        [|java:util:ArrayList|] v0 @varname [|list|] @scope ((L0005,L001a));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|p|] @scope ((L0007,L001a));

        v3;
      
#L1312dc.   v0:= new [|java:util:ArrayList|];
#L1312e0.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L1312e6.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L1312ea.   if v1 == 0 then goto L13130e;
#L1312ee.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.isShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.isShared:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L1312f4.   v3:= temp;
#L1312f6.   if v3 != 0 then goto L131308;
#L1312fa.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L1312fe.   if v2 == 0 then goto L131308;
#L131302.   call temp:=  [|java:util:ArrayList.add|](v0, v2) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L131308.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L13130c.   goto L1312ea;
#L13130e.   return v0  @type object;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getFirstQueuedThread|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getFirstQueuedThread:()Ljava/lang/Thread;|] @Access PUBLIC_FINAL {
      local temp ;

        v0;
        v1;
      
#L131320.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L131324.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L131328.   if v0 != v1 then goto L131330;
#L13132c.   v0:= 0  @length 4;
#L13132e.   return v0  @type object;
#L131330.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.fullGetFirstQueuedThread|](v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.fullGetFirstQueuedThread:()Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L131336.   v0:= temp  @type object;
#L131338.   goto L13132e;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getQueueLength|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v3 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getQueueLength:()I|] @Access PUBLIC_FINAL {
      local temp ;
        [|int|] v0 @varname [|n|] @scope ((L0001,L000f));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|p|] @scope ((L0003,L000f));

        v2;
      
#L13134c.   v0:= 0  @length 4;
#L13134e.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L131352.   if v1 == 0 then goto L131368;
#L131356.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L13135a.   if v2 == 0 then goto L131362;
#L13135e.   v0:= v0 + 1;
#L131362.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L131366.   goto L131352;
#L131368.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getQueuedThreads|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v3 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getQueuedThreads:()Ljava/util/Collection;|] @Access PUBLIC_FINAL {
      local temp ;
        [|java:lang:Thread|] v2 @varname [|t|] @scope ((L000b,L0013));
        [|java:util:ArrayList|] v0 @varname [|list|] @scope ((L0005,L0014));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|p|] @scope ((L0007,L0014));

      
#L13137c.   v0:= new [|java:util:ArrayList|];
#L131380.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L131386.   v1:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L13138a.   if v1 == 0 then goto L1313a2;
#L13138e.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L131392.   if v2 == 0 then goto L13139c;
#L131396.   call temp:=  [|java:util:ArrayList.add|](v0, v2) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L13139c.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L1313a0.   goto L13138a;
#L1313a2.   return v0  @type object;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getSharedQueuedThreads|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getSharedQueuedThreads:()Ljava/util/Collection;|] @Access PUBLIC_FINAL {
      local temp ;
        [|java:lang:Thread|] v2 @varname [|t|] @scope ((L0011,L0016));
        [|java:util:ArrayList|] v0 @varname [|list|] @scope ((L0005,L001a));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|p|] @scope ((L0007,L001a));

        v3;
      
#L1313b4.   v0:= new [|java:util:ArrayList|];
#L1313b8.   call temp:=  [|java:util:ArrayList.<init>|](v0) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L1313be.   v1:= v4.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L1313c2.   if v1 == 0 then goto L1313e6;
#L1313c6.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.isShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;.isShared:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] @type virtual;
#L1313cc.   v3:= temp;
#L1313ce.   if v3 == 0 then goto L1313e0;
#L1313d2.   v2:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L1313d6.   if v2 == 0 then goto L1313e0;
#L1313da.   call temp:=  [|java:util:ArrayList.add|](v0, v2) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L1313e0.   v1:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L1313e4.   goto L1313c2;
#L1313e6.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getState|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getState:()I|] @Access PROTECTED_FINAL {
      local temp ;

        v0;
      
#L1313f8.   v0:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.state|] ;
#L1313fc.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getWaitQueueLength|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getWaitQueueLength:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)I|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L131410.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.owns|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.owns:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L131416.   v0:= temp;
#L131418.   if v0 != 0 then goto L13142c;
#L13141c.   v0:= new [|java:lang:IllegalArgumentException|];
#L131420.   v1:= "Not owner" @type (object, string);
#L131424.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13142a.   throw v0;
#L13142c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.getWaitQueueLength|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.getWaitQueueLength:()I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type virtual;
#L131432.   v0:= temp;
#L131434.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getWaitingThreads|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getWaitingThreads:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Ljava/util/Collection;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L131448.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.owns|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.owns:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L13144e.   v0:= temp;
#L131450.   if v0 != 0 then goto L131464;
#L131454.   v0:= new [|java:lang:IllegalArgumentException|];
#L131458.   v1:= "Not owner" @type (object, string);
#L13145c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L131462.   throw v0;
#L131464.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.getWaitingThreads|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.getWaitingThreads:()Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type virtual;
#L13146a.   v0:= temp  @type object;
#L13146c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.hasContended|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.hasContended:()Z|] @Access PUBLIC_FINAL {
      local temp ;

        v0;
      
#L131480.   v0:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L131484.   if v0 == 0 then goto L13148c;
#L131488.   v0:= 1  @length 4;
#L13148a.   return v0;
#L13148c.   v0:= 0  @length 4;
#L13148e.   goto L13148a;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.hasQueuedPredecessors|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v5 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.hasQueuedPredecessors:()Z|] @Access PUBLIC_FINAL {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v1 @varname [|s|] @scope ((L0008,L0013));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|h|] @scope ((L0004,L0016));
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v2 @varname [|t|] @scope ((L0002,L0016));

        v3;
        v4;
      
#L1314a0.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L1314a4.   v0:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L1314a8.   if v0 == v2 then goto L1314c8;
#L1314ac.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]   @type object;
#L1314b0.   if v1 == 0 then goto L1314c4;
#L1314b4.   v3:= v1.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L1314b8.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1314be.   v4:= temp  @type object;
#L1314c0.   if v3 == v4 then goto L1314c8;
#L1314c4.   v3:= 1  @length 4;
#L1314c6.   return v3;
#L1314c8.   v3:= 0  @length 4;
#L1314ca.   goto L1314c6;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.hasQueuedThreads|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.hasQueuedThreads:()Z|] @Access PUBLIC_FINAL {
      local temp ;

        v0;
        v1;
      
#L1314dc.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L1314e0.   v1:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L1314e4.   if v0 == v1 then goto L1314ec;
#L1314e8.   v0:= 1  @length 4;
#L1314ea.   return v0;
#L1314ec.   v0:= 0  @length 4;
#L1314ee.   goto L1314ea;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.hasWaiters|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.hasWaiters:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L131500.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.owns|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.owns:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L131506.   v0:= temp;
#L131508.   if v0 != 0 then goto L13151c;
#L13150c.   v0:= new [|java:lang:IllegalArgumentException|];
#L131510.   v1:= "Not owner" @type (object, string);
#L131514.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13151a.   throw v0;
#L13151c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.hasWaiters|](v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.hasWaiters:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type virtual;
#L131522.   v0:= temp;
#L131524.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isHeldExclusively|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isHeldExclusively:()Z|] @Access PROTECTED {
      local temp ;

        v0;
      
#L131538.   v0:= new [|java:lang:UnsupportedOperationException|];
#L13153c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L131542.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isOnSyncQueue|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @Access FINAL {
      local temp ;


        v0;
        v1;
      
#L131554.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L131558.   v1:= -2  @length 4;
#L13155a.   if v0 == v1 then goto L131566;
#L13155e.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L131562.   if v0 != 0 then goto L13156a;
#L131566.   v0:= 0  @length 4;
#L131568.   return v0;
#L13156a.   v0:= v3.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.next|]   @type object;
#L13156e.   if v0 == 0 then goto L131576;
#L131572.   v0:= 1  @length 4;
#L131574.   goto L131568;
#L131576.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.findNodeFromTail|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.findNodeFromTail:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13157c.   v0:= temp;
#L13157e.   goto L131568;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isQueued|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this), [|java:lang:Thread|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isQueued:(Ljava/lang/Thread;)Z|] @Access PUBLIC_FINAL {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|p|] @scope ((L000a,L0017));


        v1;
      
#L131590.   if v3 != 0 then goto L1315a0;
#L131594.   v1:= new [|java:lang:NullPointerException|];
#L131598.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13159e.   throw v1;
#L1315a0.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.tail|]   @type object;
#L1315a4.   if v0 == 0 then goto L1315ba;
#L1315a8.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L1315ac.   if v1 != v3 then goto L1315b4;
#L1315b0.   v1:= 1  @length 4;
#L1315b2.   return v1;
#L1315b4.   v0:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.prev|]   @type object;
#L1315b8.   goto L1315a4;
#L1315ba.   v1:= 0  @length 4;
#L1315bc.   goto L1315b2;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.owns|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] v2 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.owns:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L1315d0.   if v2 != 0 then goto L1315e0;
#L1315d4.   v0:= new [|java:lang:NullPointerException|];
#L1315d8.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1315de.   throw v0;
#L1315e0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject.isOwnedBy|](v2, v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;.isOwnedBy:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer$ConditionObject|] @type virtual;
#L1315e6.   v0:= temp;
#L1315e8.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.release|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.release:(I)Z|] @Access PUBLIC_FINAL {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|h|] @scope ((L0008,L0012));


        v1;
      
#L1315fc.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryRelease|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryRelease:(I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L131602.   v1:= temp;
#L131604.   if v1 == 0 then goto L131622;
#L131608.   v0:= v2.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.head|]   @type object;
#L13160c.   if v0 == 0 then goto L13161e;
#L131610.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L131614.   if v1 == 0 then goto L13161e;
#L131618.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.unparkSuccessor|](v2, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.unparkSuccessor:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13161e.   v1:= 1  @length 4;
#L131620.   return v1;
#L131622.   v1:= 0  @length 4;
#L131624.   goto L131620;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.releaseShared|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.releaseShared:(I)Z|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L131638.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryReleaseShared|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryReleaseShared:(I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L13163e.   v0:= temp;
#L131640.   if v0 == 0 then goto L13164e;
#L131644.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doReleaseShared|](v1) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doReleaseShared:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13164a.   v0:= 1  @length 4;
#L13164c.   return v0;
#L13164e.   v0:= 0  @length 4;
#L131650.   goto L13164c;

   }
    procedure [|void|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.setState|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v0 @type (this), [|int|] v1) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.setState:(I)V|] @Access PROTECTED_FINAL {
      local temp ;


      
#L131664.   v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer.state|]  := v1;
#L131668.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.toString|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v4 @type (this)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|java:lang:String|] v0 @varname [|q|] @scope ((L000c,L0038));
        [|int|] v1 @varname [|s|] @scope ((L0004,L003b));

        v2;
        v3;
      
#L13167c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.getState|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.getState:()I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L131682.   v1:= temp;
#L131684.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.hasQueuedThreads|](v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.hasQueuedThreads:()Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L13168a.   v2:= temp;
#L13168c.   if v2 == 0 then goto L1316ec;
#L131690.   v0:= "non" @type (object, string);
#L131694.   v2:= new [|java:lang:StringBuilder|];
#L131698.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L13169e.   call temp:=  [|java:lang:Object.toString|](v4) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L1316a4.   v3:= temp  @type object;
#L1316a6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1316ac.   v2:= temp  @type object;
#L1316ae.   v3:= "[State = " @type (object, string);
#L1316b2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1316b8.   v2:= temp  @type object;
#L1316ba.   call temp:=  [|java:lang:StringBuilder.append|](v2, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1316c0.   v2:= temp  @type object;
#L1316c2.   v3:= ", " @type (object, string);
#L1316c6.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1316cc.   v2:= temp  @type object;
#L1316ce.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1316d4.   v2:= temp  @type object;
#L1316d6.   v3:= "empty queue]" @type (object, string);
#L1316da.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1316e0.   v2:= temp  @type object;
#L1316e2.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1316e8.   v2:= temp  @type object;
#L1316ea.   return v2  @type object;
#L1316ec.   v0:= "" @type (object, string);
#L1316f0.   goto L131694;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.transferAfterCancelledWait|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v2 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v3 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.transferAfterCancelledWait:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @Access FINAL {
      local temp ;


        v0;
        v1;
      
#L131704.   v0:= 0  @length 4;
#L131706.   v1:= -2  @length 4;
#L131708.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetWaitStatus|](v3, v1, v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L13170e.   v1:= temp;
#L131710.   if v1 == 0 then goto L13171e;
#L131714.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.enq|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.enq:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13171a.   v0:= 1  @length 4;
#L13171c.   return v0;
#L13171e.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.isOnSyncQueue|](v2, v3) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.isOnSyncQueue:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L131724.   v1:= temp;
#L131726.   if v1 != 0 then goto L13171c;
#L13172a.   call temp:=  [|java:lang:Thread.yield|]() @signature [|Ljava/lang/Thread;.yield:()V|] @classDescriptor [|java:lang:Thread|] @type static;
#L131730.   goto L13171e;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.transferForSignal|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v4 @type (this), [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v5 @type (object)) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.transferForSignal:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node|] v0 @varname [|p|] @scope ((L000d,L001f));
        [|int|] v1 @varname [|ws|] @scope ((L000f,L001f));


        v2;
        v3;
      
#L131744.   v2:= 0  @length 4;
#L131746.   v3:= -2  @length 4;
#L131748.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetWaitStatus|](v5, v3, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L13174e.   v3:= temp;
#L131750.   if v3 != 0 then goto L131756;
#L131754.   return v2;
#L131756.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.enq|](v4, v5) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.enq:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13175c.   v0:= temp  @type object;
#L13175e.   v1:= v0.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.waitStatus|] ;
#L131762.   if v1 > 0 then goto L131774;
#L131766.   v2:= -1  @length 4;
#L131768.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.compareAndSetWaitStatus|](v0, v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.compareAndSetWaitStatus:(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type static;
#L13176e.   v2:= temp;
#L131770.   if v2 != 0 then goto L13177e;
#L131774.   v2:= v5.[|java:util:concurrent:locks:AbstractQueuedSynchronizer$Node.thread|]   @type object;
#L131778.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v2) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L13177e.   v2:= 1  @length 4;
#L131780.   goto L131754;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquire|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquire:(I)Z|] @Access PROTECTED {
      local temp ;


        v0;
      
#L131794.   v0:= new [|java:lang:UnsupportedOperationException|];
#L131798.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L13179e.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquireNanos|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2, [|long|] v3) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquireNanos:(IJ)Z|] @Access PUBLIC_FINAL {
      local temp ;



        v0;
      
#L1317b0.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L1317b6.   v0:= temp;
#L1317b8.   if v0 == 0 then goto L1317c8;
#L1317bc.   v0:= new [|java:lang:InterruptedException|];
#L1317c0.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L1317c6.   throw v0;
#L1317c8.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquire|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquire:(I)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L1317ce.   v0:= temp;
#L1317d0.   if v0 != 0 then goto L1317e0;
#L1317d4.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireNanos|](v1, v2, v3, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireNanos:(IJ)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L1317da.   v0:= temp;
#L1317dc.   if v0 == 0 then goto L1317e4;
#L1317e0.   v0:= 1  @length 4;
#L1317e2.   return v0;
#L1317e4.   v0:= 0  @length 4;
#L1317e6.   goto L1317e2;

   }
    procedure [|int|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquireShared|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquireShared:(I)I|] @Access PROTECTED {
      local temp ;


        v0;
      
#L1317f8.   v0:= new [|java:lang:UnsupportedOperationException|];
#L1317fc.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L131802.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquireSharedNanos|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2, [|long|] v3) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquireSharedNanos:(IJ)Z|] @Access PUBLIC_FINAL {
      local temp ;



        v0;
      
#L131814.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L13181a.   v0:= temp;
#L13181c.   if v0 == 0 then goto L13182c;
#L131820.   v0:= new [|java:lang:InterruptedException|];
#L131824.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L13182a.   throw v0;
#L13182c.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryAcquireShared|](v1, v2) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryAcquireShared:(I)I|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type virtual;
#L131832.   v0:= temp;
#L131834.   if v0 >= 0 then goto L131844;
#L131838.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.doAcquireSharedNanos|](v1, v2, v3, v4) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.doAcquireSharedNanos:(IJ)Z|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13183e.   v0:= temp;
#L131840.   if v0 == 0 then goto L131848;
#L131844.   v0:= 1  @length 4;
#L131846.   return v0;
#L131848.   v0:= 0  @length 4;
#L13184a.   goto L131846;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryRelease|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryRelease:(I)Z|] @Access PROTECTED {
      local temp ;


        v0;
      
#L13185c.   v0:= new [|java:lang:UnsupportedOperationException|];
#L131860.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L131866.   throw v0;

   }
    procedure [|boolean|] [|java:util:concurrent:locks:AbstractQueuedSynchronizer.tryReleaseShared|] ([|java:util:concurrent:locks:AbstractQueuedSynchronizer|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.tryReleaseShared:(I)Z|] @Access PROTECTED {
      local temp ;


        v0;
      
#L131878.   v0:= new [|java:lang:UnsupportedOperationException|];
#L13187c.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L131882.   throw v0;

   }
record [|java:util:concurrent:CountDownLatch$Sync|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] {
   }
      global [|long|] @@[|java:util:concurrent:CountDownLatch$Sync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:CountDownLatch$Sync.<init>|] ([|java:util:concurrent:CountDownLatch$Sync|] v0 @type (this), [|int|] v1) @owner [|java:util:concurrent:CountDownLatch$Sync|] @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L131894.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.<init>|](v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13189a.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.setState|](v0, v1) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L1318a0.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:CountDownLatch$Sync.getCount|] ([|java:util:concurrent:CountDownLatch$Sync|] v1 @type (this)) @owner [|java:util:concurrent:CountDownLatch$Sync|] @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.getCount:()I|] @Access  {
      local temp ;

        v0;
      
#L1318b4.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.getState|](v1) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L1318ba.   v0:= temp;
#L1318bc.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:CountDownLatch$Sync.tryAcquireShared|] ([|java:util:concurrent:CountDownLatch$Sync|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:CountDownLatch$Sync|] @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.tryAcquireShared:(I)I|] @Access PROTECTED {
      local temp ;


        v0;
      
#L1318d0.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.getState|](v1) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L1318d6.   v0:= temp;
#L1318d8.   if v0 != 0 then goto L1318e0;
#L1318dc.   v0:= 1  @length 4;
#L1318de.   return v0;
#L1318e0.   v0:= -1  @length 4;
#L1318e2.   goto L1318de;

   }
    procedure [|boolean|] [|java:util:concurrent:CountDownLatch$Sync.tryReleaseShared|] ([|java:util:concurrent:CountDownLatch$Sync|] v4 @type (this), [|int|] v5) @owner [|java:util:concurrent:CountDownLatch$Sync|] @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.tryReleaseShared:(I)Z|] @Access PROTECTED {
      local temp ;
        [|int|] v0 @varname [|c|] @scope ((L0005,L0014));
        [|int|] v1 @varname [|nextc|] @scope ((L000a,L0014));


        v2;
        v3;
      
#L1318f4.   v2:= 0  @length 4;
#L1318f6.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.getState|](v4) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L1318fc.   v0:= temp;
#L1318fe.   if v0 != 0 then goto L131904;
#L131902.   return v2;
#L131904.   v1:= v0 + -1;
#L131908.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.compareAndSetState|](v4, v0, v1) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L13190e.   v3:= temp;
#L131910.   if v3 == 0 then goto L1318f6;
#L131914.   if v1 != 0 then goto L131902;
#L131918.   v2:= 1  @length 4;
#L13191a.   goto L131902;

   }
record [|java:util:concurrent:CountDownLatch|]  @type class @AccessFlag PUBLIC  {
      [|java:util:concurrent:CountDownLatch$Sync|] [|java:util:concurrent:CountDownLatch.sync|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:CountDownLatch.<init>|] ([|java:util:concurrent:CountDownLatch|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:CountDownLatch|] @signature [|Ljava/util/concurrent/CountDownLatch;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L13192c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L131932.   if v3 >= 0 then goto L131946;
#L131936.   v0:= new [|java:lang:IllegalArgumentException|];
#L13193a.   v1:= "count < 0" @type (object, string);
#L13193e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L131944.   throw v0;
#L131946.   v0:= new [|java:util:concurrent:CountDownLatch$Sync|];
#L13194a.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.<init>|](v0, v3) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type direct;
#L131950.   v2.[|java:util:concurrent:CountDownLatch.sync|]  := v0 @type object;
#L131954.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CountDownLatch.await|] ([|java:util:concurrent:CountDownLatch|] v2 @type (this)) @owner [|java:util:concurrent:CountDownLatch|] @signature [|Ljava/util/concurrent/CountDownLatch;.await:()V|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L131968.   v0:= v2.[|java:util:concurrent:CountDownLatch.sync|]   @type object;
#L13196c.   v1:= 1  @length 4;
#L13196e.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.acquireSharedInterruptibly|](v0, v1) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.acquireSharedInterruptibly:(I)V|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L131974.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:CountDownLatch.await|] ([|java:util:concurrent:CountDownLatch|] v4 @type (this), [|long|] v5, [|java:util:concurrent:TimeUnit|] v7 @type (object)) @owner [|java:util:concurrent:CountDownLatch|] @signature [|Ljava/util/concurrent/CountDownLatch;.await:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L131988.   v0:= v4.[|java:util:concurrent:CountDownLatch.sync|]   @type object;
#L13198c.   v1:= 1  @length 4;
#L13198e.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v7, v5, v6) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L131994.   v2:= temp  @type wide;
#L131996.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.tryAcquireSharedNanos|](v0, v1, v2, v3) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.tryAcquireSharedNanos:(IJ)Z|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L13199c.   v0:= temp;
#L13199e.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:CountDownLatch.countDown|] ([|java:util:concurrent:CountDownLatch|] v2 @type (this)) @owner [|java:util:concurrent:CountDownLatch|] @signature [|Ljava/util/concurrent/CountDownLatch;.countDown:()V|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L1319b0.   v0:= v2.[|java:util:concurrent:CountDownLatch.sync|]   @type object;
#L1319b4.   v1:= 1  @length 4;
#L1319b6.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.releaseShared|](v0, v1) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.releaseShared:(I)Z|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L1319bc.   return @void ;

   }
    procedure [|long|] [|java:util:concurrent:CountDownLatch.getCount|] ([|java:util:concurrent:CountDownLatch|] v2 @type (this)) @owner [|java:util:concurrent:CountDownLatch|] @signature [|Ljava/util/concurrent/CountDownLatch;.getCount:()J|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L1319d0.   v0:= v2.[|java:util:concurrent:CountDownLatch.sync|]   @type object;
#L1319d4.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.getCount|](v0) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.getCount:()I|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L1319da.   v0:= temp;
#L1319dc.   v0:= (long)v0  @type i2l;
#L1319de.   return v0  @type wide;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:CountDownLatch.toString|] ([|java:util:concurrent:CountDownLatch|] v2 @type (this)) @owner [|java:util:concurrent:CountDownLatch|] @signature [|Ljava/util/concurrent/CountDownLatch;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L1319f0.   v0:= new [|java:lang:StringBuilder|];
#L1319f4.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1319fa.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L131a00.   v1:= temp  @type object;
#L131a02.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L131a08.   v0:= temp  @type object;
#L131a0a.   v1:= "[Count = " @type (object, string);
#L131a0e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L131a14.   v0:= temp  @type object;
#L131a16.   v1:= v2.[|java:util:concurrent:CountDownLatch.sync|]   @type object;
#L131a1a.   call temp:=  [|java:util:concurrent:CountDownLatch$Sync.getCount|](v1) @signature [|Ljava/util/concurrent/CountDownLatch$Sync;.getCount:()I|] @classDescriptor [|java:util:concurrent:CountDownLatch$Sync|] @type virtual;
#L131a20.   v1:= temp;
#L131a22.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L131a28.   v0:= temp  @type object;
#L131a2a.   v1:= "]" @type (object, string);
#L131a2e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L131a34.   v0:= temp  @type object;
#L131a36.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L131a3c.   v0:= temp  @type object;
#L131a3e.   return v0  @type object;

   }
record [|java:util:concurrent:CyclicBarrier$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|java:util:concurrent:CyclicBarrier$Generation|]  @type class @AccessFlag   {
      [|boolean|] [|java:util:concurrent:CyclicBarrier$Generation.broken|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:concurrent:CyclicBarrier$Generation.<init>|] ([|java:util:concurrent:CyclicBarrier$Generation|] v1 @type (this)) @owner [|java:util:concurrent:CyclicBarrier$Generation|] @signature [|Ljava/util/concurrent/CyclicBarrier$Generation;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;

        v0;
      
#L131a50.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L131a56.   v0:= 0  @length 4;
#L131a58.   v1.[|java:util:concurrent:CyclicBarrier$Generation.broken|]  := v0 @boolean;
#L131a5c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CyclicBarrier$Generation.<init>|] ([|java:util:concurrent:CyclicBarrier$Generation|] v0 @type (this), [|java:util:concurrent:CyclicBarrier$1|] v1 @type (object)) @owner [|java:util:concurrent:CyclicBarrier$Generation|] @signature [|Ljava/util/concurrent/CyclicBarrier$Generation;.<init>:(Ljava/util/concurrent/CyclicBarrier$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;


      
#L131a70.   call temp:=  [|java:util:concurrent:CyclicBarrier$Generation.<init>|](v0) @signature [|Ljava/util/concurrent/CyclicBarrier$Generation;.<init>:()V|] @classDescriptor [|java:util:concurrent:CyclicBarrier$Generation|] @type direct;
#L131a76.   return @void ;

   }
record [|java:util:concurrent:CyclicBarrier|]  @type class @AccessFlag PUBLIC  {
      [|java:lang:Runnable|] [|java:util:concurrent:CyclicBarrier.barrierCommand|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:concurrent:CyclicBarrier.count|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:CyclicBarrier$Generation|] [|java:util:concurrent:CyclicBarrier.generation|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:CyclicBarrier.lock|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:concurrent:CyclicBarrier.parties|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:CyclicBarrier.trip|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:CyclicBarrier.<init>|] ([|java:util:concurrent:CyclicBarrier|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L131a88.   v0:= 0  @length 4;
#L131a8a.   call temp:=  [|java:util:concurrent:CyclicBarrier.<init>|](v1, v2, v0) @signature [|Ljava/util/concurrent/CyclicBarrier;.<init>:(ILjava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131a90.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CyclicBarrier.<init>|] ([|java:util:concurrent:CyclicBarrier|] v2 @type (this), [|int|] v3, [|java:lang:Runnable|] v4 @type (object)) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.<init>:(ILjava/lang/Runnable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
      
#L131aa4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L131aaa.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L131aae.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L131ab4.   v2.[|java:util:concurrent:CyclicBarrier.lock|]  := v0 @type object;
#L131ab8.   v0:= v2.[|java:util:concurrent:CyclicBarrier.lock|]   @type object;
#L131abc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131ac2.   v0:= temp  @type object;
#L131ac4.   v2.[|java:util:concurrent:CyclicBarrier.trip|]  := v0 @type object;
#L131ac8.   v0:= new [|java:util:concurrent:CyclicBarrier$Generation|];
#L131acc.   v1:= 0  @length 4;
#L131ace.   call temp:=  [|java:util:concurrent:CyclicBarrier$Generation.<init>|](v0, v1) @signature [|Ljava/util/concurrent/CyclicBarrier$Generation;.<init>:(Ljava/util/concurrent/CyclicBarrier$1;)V|] @classDescriptor [|java:util:concurrent:CyclicBarrier$Generation|] @type direct;
#L131ad4.   v2.[|java:util:concurrent:CyclicBarrier.generation|]  := v0 @type object;
#L131ad8.   if v3 > 0 then goto L131ae8;
#L131adc.   v0:= new [|java:lang:IllegalArgumentException|];
#L131ae0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L131ae6.   throw v0;
#L131ae8.   v2.[|java:util:concurrent:CyclicBarrier.parties|]  := v3;
#L131aec.   v2.[|java:util:concurrent:CyclicBarrier.count|]  := v3;
#L131af0.   v2.[|java:util:concurrent:CyclicBarrier.barrierCommand|]  := v4 @type object;
#L131af4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:CyclicBarrier.breakBarrier|] ([|java:util:concurrent:CyclicBarrier|] v2 @type (this)) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.breakBarrier:()V|] @Access PRIVATE {
      local temp ;

        v0;
        v1;
      
#L131b08.   v0:= v2.[|java:util:concurrent:CyclicBarrier.generation|]   @type object;
#L131b0c.   v1:= 1  @length 4;
#L131b0e.   v0.[|java:util:concurrent:CyclicBarrier$Generation.broken|]  := v1 @boolean;
#L131b12.   v0:= v2.[|java:util:concurrent:CyclicBarrier.parties|] ;
#L131b16.   v2.[|java:util:concurrent:CyclicBarrier.count|]  := v0;
#L131b1a.   v0:= v2.[|java:util:concurrent:CyclicBarrier.trip|]   @type object;
#L131b1e.   call temp:=  [|java:util:concurrent:locks:Condition.signalAll|](v0) @signature [|Ljava/util/concurrent/locks/Condition;.signalAll:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L131b24.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:CyclicBarrier.dowait|] ([|java:util:concurrent:CyclicBarrier|] v9 @type (this), [|boolean|] v10, [|long|] v11) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.dowait:(ZJ)I|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:CyclicBarrier$Generation|] v1 @varname [|g|] @scope ((L0009,L0013), (L0018,L0090));
        [|int|] v3 @varname [|index|] @scope ((L002d,L003c), (L0045,L0090));
        [|java:lang:Runnable|] v0 @varname [|command|] @scope ((L0032,L0041));
        [|boolean|] v5 @varname [|ranAction|] @scope ((L0030,L0041), (L0045,L004c));
        [|java:lang:InterruptedException|] v2 @varname [|ie|] @scope ((L0069,L007d));
        [|java:util:concurrent:locks:ReentrantLock|] v4 @varname [|lock|] @scope ((L0004,L0090));



        v6;
        v7;
        v8;
      
#L131b38.   v7:= 0  @length wide16;
#L131b3c.   v4:= v9.[|java:util:concurrent:CyclicBarrier.lock|]   @type object;
#L131b40.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131b46.   v1:= v9.[|java:util:concurrent:CyclicBarrier.generation|]   @type object;
#L131b4a.   v6:= v1.[|java:util:concurrent:CyclicBarrier$Generation.broken|]   @boolean;
#L131b4e.   if v6 == 0 then goto L131b68;
#L131b52.   v6:= new [|java:util:concurrent:BrokenBarrierException|];
#L131b56.   call temp:=  [|java:util:concurrent:BrokenBarrierException.<init>|](v6) @signature [|Ljava/util/concurrent/BrokenBarrierException;.<init>:()V|] @classDescriptor [|java:util:concurrent:BrokenBarrierException|] @type direct;
#L131b5c.   throw v6;
#L131b5e.   v6:= Exception  @type object;
#L131b60.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131b66.   throw v6;
#L131b68.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L131b6e.   v6:= temp;
#L131b70.   if v6 == 0 then goto L131b86;
#L131b74.   call temp:=  [|java:util:concurrent:CyclicBarrier.breakBarrier|](v9) @signature [|Ljava/util/concurrent/CyclicBarrier;.breakBarrier:()V|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131b7a.   v6:= new [|java:lang:InterruptedException|];
#L131b7e.   call temp:=  [|java:lang:InterruptedException.<init>|](v6) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L131b84.   throw v6;
#L131b86.   v6:= v9.[|java:util:concurrent:CyclicBarrier.count|] ;
#L131b8a.   v3:= v6 + -1;
#L131b8e.   v9.[|java:util:concurrent:CyclicBarrier.count|]  := v3;
#L131b92.   if v3 != 0 then goto L131bd0;
#L131b96.   v5:= 0  @length 4;
#L131b98.   v0:= v9.[|java:util:concurrent:CyclicBarrier.barrierCommand|]   @type object;
#L131b9c.   if v0 == 0 then goto L131ba6;
#L131ba0.   call temp:=  [|java:lang:Runnable.run|](v0) @signature [|Ljava/lang/Runnable;.run:()V|] @classDescriptor [|java:lang:Runnable|] @type interface;
#L131ba6.   v5:= 1  @length 4;
#L131ba8.   call temp:=  [|java:util:concurrent:CyclicBarrier.nextGeneration|](v9) @signature [|Ljava/util/concurrent/CyclicBarrier;.nextGeneration:()V|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131bae.   v3:= 0  @length 4;
#L131bb0.   if v5 != 0 then goto L131bba;
#L131bb4.   call temp:=  [|java:util:concurrent:CyclicBarrier.breakBarrier|](v9) @signature [|Ljava/util/concurrent/CyclicBarrier;.breakBarrier:()V|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131bba.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131bc0.   return v3;
#L131bc2.   v6:= Exception  @type object;
#L131bc4.   if v5 != 0 then goto L131bce;
#L131bc8.   call temp:=  [|java:util:concurrent:CyclicBarrier.breakBarrier|](v9) @signature [|Ljava/util/concurrent/CyclicBarrier;.breakBarrier:()V|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131bce.   throw v6;
#L131bd0.   if v10 != 0 then goto L131bf2;
#L131bd4.   v6:= v9.[|java:util:concurrent:CyclicBarrier.trip|]   @type object;
#L131bd8.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v6) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L131bde.   v6:= v1.[|java:util:concurrent:CyclicBarrier$Generation.broken|]   @boolean;
#L131be2.   if v6 == 0 then goto L131c32;
#L131be6.   v6:= new [|java:util:concurrent:BrokenBarrierException|];
#L131bea.   call temp:=  [|java:util:concurrent:BrokenBarrierException.<init>|](v6) @signature [|Ljava/util/concurrent/BrokenBarrierException;.<init>:()V|] @classDescriptor [|java:util:concurrent:BrokenBarrierException|] @type direct;
#L131bf0.   throw v6;
#L131bf2.   v6:= cmp(v11,v7);
#L131bf6.   if v6 <= 0 then goto L131bde;
#L131bfa.   v6:= v9.[|java:util:concurrent:CyclicBarrier.trip|]   @type object;
#L131bfe.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v6, v11, v12) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L131c04.   v11:= temp  @type wide;
#L131c06.   goto L131bde;
#L131c08.   v2:= Exception  @type object;
#L131c0a.   v6:= v9.[|java:util:concurrent:CyclicBarrier.generation|]   @type object;
#L131c0e.   if v1 != v6 then goto L131c22;
#L131c12.   v6:= v1.[|java:util:concurrent:CyclicBarrier$Generation.broken|]   @boolean;
#L131c16.   if v6 != 0 then goto L131c22;
#L131c1a.   call temp:=  [|java:util:concurrent:CyclicBarrier.breakBarrier|](v9) @signature [|Ljava/util/concurrent/CyclicBarrier;.breakBarrier:()V|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131c20.   throw v2;
#L131c22.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L131c28.   v6:= temp  @type object;
#L131c2a.   call temp:=  [|java:lang:Thread.interrupt|](v6) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L131c30.   goto L131bde;
#L131c32.   v6:= v9.[|java:util:concurrent:CyclicBarrier.generation|]   @type object;
#L131c36.   if v1 != v6 then goto L131bba;
#L131c3a.   if v10 == 0 then goto L131bd0;
#L131c3e.   v6:= cmp(v11,v7);
#L131c42.   if v6 > 0 then goto L131bd0;
#L131c46.   call temp:=  [|java:util:concurrent:CyclicBarrier.breakBarrier|](v9) @signature [|Ljava/util/concurrent/CyclicBarrier;.breakBarrier:()V|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131c4c.   v6:= new [|java:util:concurrent:TimeoutException|];
#L131c50.   call temp:=  [|java:util:concurrent:TimeoutException.<init>|](v6) @signature [|Ljava/util/concurrent/TimeoutException;.<init>:()V|] @classDescriptor [|java:util:concurrent:TimeoutException|] @type direct;
#L131c56.   throw v6;
  catch  [|any|] @[L131b46..L131b5e] goto L131b5e;
  catch  [|any|] @[L131b68..L131b92] goto L131b5e;
  catch  [|any|] @[L131b98..L131bae] goto L131bc2;
  catch  [|any|] @[L131bb4..L131bba] goto L131b5e;
  catch  [|any|] @[L131bc8..L131bd0] goto L131b5e;
  catch  [|java:lang:InterruptedException|] @[L131bd4..L131bde] goto L131c08;
  catch  [|any|] @[L131bd4..L131bde] goto L131b5e;
  catch  [|any|] @[L131bde..L131bf2] goto L131b5e;
  catch  [|java:lang:InterruptedException|] @[L131bfa..L131c04] goto L131c08;
  catch  [|any|] @[L131bfa..L131c04] goto L131b5e;
  catch  [|any|] @[L131c0a..L131c56] goto L131b5e;

   }
    procedure [|void|] [|java:util:concurrent:CyclicBarrier.nextGeneration|] ([|java:util:concurrent:CyclicBarrier|] v2 @type (this)) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.nextGeneration:()V|] @Access PRIVATE {
      local temp ;

        v0;
        v1;
      
#L131cbc.   v0:= v2.[|java:util:concurrent:CyclicBarrier.trip|]   @type object;
#L131cc0.   call temp:=  [|java:util:concurrent:locks:Condition.signalAll|](v0) @signature [|Ljava/util/concurrent/locks/Condition;.signalAll:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L131cc6.   v0:= v2.[|java:util:concurrent:CyclicBarrier.parties|] ;
#L131cca.   v2.[|java:util:concurrent:CyclicBarrier.count|]  := v0;
#L131cce.   v0:= new [|java:util:concurrent:CyclicBarrier$Generation|];
#L131cd2.   v1:= 0  @length 4;
#L131cd4.   call temp:=  [|java:util:concurrent:CyclicBarrier$Generation.<init>|](v0, v1) @signature [|Ljava/util/concurrent/CyclicBarrier$Generation;.<init>:(Ljava/util/concurrent/CyclicBarrier$1;)V|] @classDescriptor [|java:util:concurrent:CyclicBarrier$Generation|] @type direct;
#L131cda.   v2.[|java:util:concurrent:CyclicBarrier.generation|]  := v0 @type object;
#L131cde.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:CyclicBarrier.await|] ([|java:util:concurrent:CyclicBarrier|] v4 @type (this)) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.await:()I|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:TimeoutException|] v0 @varname [|toe|] @scope ((L0009,L000f));

        v1;
        v2;
        v3;
      
#L131cf0.   v1:= 0  @length 4;
#L131cf2.   v2:= 0  @length wide16;
#L131cf6.   call temp:=  [|java:util:concurrent:CyclicBarrier.dowait|](v4, v1, v2, v3) @signature [|Ljava/util/concurrent/CyclicBarrier;.dowait:(ZJ)I|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131cfc.   v1:= temp;
#L131cfe.   return v1;
#L131d00.   v0:= Exception  @type object;
#L131d02.   v1:= new [|java:lang:Error|];
#L131d06.   call temp:=  [|java:lang:Error.<init>|](v1, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L131d0c.   throw v1;
  catch  [|java:util:concurrent:TimeoutException|] @[L131cf6..L131cfc] goto L131d00;

   }
    procedure [|int|] [|java:util:concurrent:CyclicBarrier.await|] ([|java:util:concurrent:CyclicBarrier|] v3 @type (this), [|long|] v4, [|java:util:concurrent:TimeUnit|] v6 @type (object)) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.await:(JLjava/util/concurrent/TimeUnit;)I|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
      
#L131d30.   v0:= 1  @length 4;
#L131d32.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v6, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L131d38.   v1:= temp  @type wide;
#L131d3a.   call temp:=  [|java:util:concurrent:CyclicBarrier.dowait|](v3, v0, v1, v2) @signature [|Ljava/util/concurrent/CyclicBarrier;.dowait:(ZJ)I|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131d40.   v0:= temp;
#L131d42.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:CyclicBarrier.getNumberWaiting|] ([|java:util:concurrent:CyclicBarrier|] v3 @type (this)) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.getNumberWaiting:()I|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0013));

        v1;
        v2;
      
#L131d54.   v0:= v3.[|java:util:concurrent:CyclicBarrier.lock|]   @type object;
#L131d58.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131d5e.   v1:= v3.[|java:util:concurrent:CyclicBarrier.parties|] ;
#L131d62.   v2:= v3.[|java:util:concurrent:CyclicBarrier.count|] ;
#L131d66.   v1:= v1 - v2  @type int;
#L131d68.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131d6e.   return v1;
#L131d70.   v1:= Exception  @type object;
#L131d72.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131d78.   throw v1;
  catch  [|any|] @[L131d5e..L131d66] goto L131d70;

   }
    procedure [|int|] [|java:util:concurrent:CyclicBarrier.getParties|] ([|java:util:concurrent:CyclicBarrier|] v1 @type (this)) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.getParties:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L131d98.   v0:= v1.[|java:util:concurrent:CyclicBarrier.parties|] ;
#L131d9c.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:CyclicBarrier.isBroken|] ([|java:util:concurrent:CyclicBarrier|] v2 @type (this)) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.isBroken:()Z|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0012));

        v1;
      
#L131db0.   v0:= v2.[|java:util:concurrent:CyclicBarrier.lock|]   @type object;
#L131db4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131dba.   v1:= v2.[|java:util:concurrent:CyclicBarrier.generation|]   @type object;
#L131dbe.   v1:= v1.[|java:util:concurrent:CyclicBarrier$Generation.broken|]   @boolean;
#L131dc2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131dc8.   return v1;
#L131dca.   v1:= Exception  @type object;
#L131dcc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131dd2.   throw v1;
  catch  [|any|] @[L131dba..L131dc2] goto L131dca;

   }
    procedure [|void|] [|java:util:concurrent:CyclicBarrier.reset|] ([|java:util:concurrent:CyclicBarrier|] v2 @type (this)) @owner [|java:util:concurrent:CyclicBarrier|] @signature [|Ljava/util/concurrent/CyclicBarrier;.reset:()V|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0014));

        v1;
      
#L131df0.   v0:= v2.[|java:util:concurrent:CyclicBarrier.lock|]   @type object;
#L131df4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131dfa.   call temp:=  [|java:util:concurrent:CyclicBarrier.breakBarrier|](v2) @signature [|Ljava/util/concurrent/CyclicBarrier;.breakBarrier:()V|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131e00.   call temp:=  [|java:util:concurrent:CyclicBarrier.nextGeneration|](v2) @signature [|Ljava/util/concurrent/CyclicBarrier;.nextGeneration:()V|] @classDescriptor [|java:util:concurrent:CyclicBarrier|] @type direct;
#L131e06.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131e0c.   return @void ;
#L131e0e.   v1:= Exception  @type object;
#L131e10.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131e16.   throw v1;
  catch  [|any|] @[L131dfa..L131e06] goto L131e0e;

   }
record [|java:util:concurrent:DelayQueue$Itr|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
      [|java:lang:Object|][] [|java:util:concurrent:DelayQueue$Itr.array|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:DelayQueue$Itr.cursor|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:DelayQueue$Itr.lastRet|]    @AccessFlag ;
      [|java:util:concurrent:DelayQueue|] [|java:util:concurrent:DelayQueue$Itr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:DelayQueue$Itr.<init>|] ([|java:util:concurrent:DelayQueue$Itr|] v1 @type (this), [|java:util:concurrent:DelayQueue|] v2 @type (object), [|java:lang:Object|][] v3 @type (object)) @owner [|java:util:concurrent:DelayQueue$Itr|] @signature [|Ljava/util/concurrent/DelayQueue$Itr;.<init>:(Ljava/util/concurrent/DelayQueue;[Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;



        v0;
      
#L131e34.   v1.[|java:util:concurrent:DelayQueue$Itr.this$0|]  := v2 @type object;
#L131e38.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L131e3e.   v0:= -1  @length 4;
#L131e40.   v1.[|java:util:concurrent:DelayQueue$Itr.lastRet|]  := v0;
#L131e44.   v1.[|java:util:concurrent:DelayQueue$Itr.array|]  := v3 @type object;
#L131e48.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:DelayQueue$Itr.hasNext|] ([|java:util:concurrent:DelayQueue$Itr|] v2 @type (this)) @owner [|java:util:concurrent:DelayQueue$Itr|] @signature [|Ljava/util/concurrent/DelayQueue$Itr;.hasNext:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L131e5c.   v0:= v2.[|java:util:concurrent:DelayQueue$Itr.cursor|] ;
#L131e60.   v1:= v2.[|java:util:concurrent:DelayQueue$Itr.array|]   @type object;
#L131e64.   v1:= v1.length;
#L131e66.   if v0 >= v1 then goto L131e6e;
#L131e6a.   v0:= 1  @length 4;
#L131e6c.   return v0;
#L131e6e.   v0:= 0  @length 4;
#L131e70.   goto L131e6c;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:DelayQueue$Itr.next|] ([|java:util:concurrent:DelayQueue$Itr|] v1 @type (this)) @owner [|java:util:concurrent:DelayQueue$Itr|] @signature [|Ljava/util/concurrent/DelayQueue$Itr;.next:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L131e84.   call temp:=  [|java:util:concurrent:DelayQueue$Itr.next|](v1) @signature [|Ljava/util/concurrent/DelayQueue$Itr;.next:()Ljava/util/concurrent/Delayed;|] @classDescriptor [|java:util:concurrent:DelayQueue$Itr|] @type virtual;
#L131e8a.   v0:= temp  @type object;
#L131e8c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Delayed|] [|java:util:concurrent:DelayQueue$Itr.next|] ([|java:util:concurrent:DelayQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:DelayQueue$Itr|] @signature [|Ljava/util/concurrent/DelayQueue$Itr;.next:()Ljava/util/concurrent/Delayed;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L131ea0.   v0:= v3.[|java:util:concurrent:DelayQueue$Itr.cursor|] ;
#L131ea4.   v1:= v3.[|java:util:concurrent:DelayQueue$Itr.array|]   @type object;
#L131ea8.   v1:= v1.length;
#L131eaa.   if v0 < v1 then goto L131eba;
#L131eae.   v0:= new [|java:util:NoSuchElementException|];
#L131eb2.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L131eb8.   throw v0;
#L131eba.   v0:= v3.[|java:util:concurrent:DelayQueue$Itr.cursor|] ;
#L131ebe.   v3.[|java:util:concurrent:DelayQueue$Itr.lastRet|]  := v0;
#L131ec2.   v0:= v3.[|java:util:concurrent:DelayQueue$Itr.array|]   @type object;
#L131ec6.   v1:= v3.[|java:util:concurrent:DelayQueue$Itr.cursor|] ;
#L131eca.   v2:= v1 + 1;
#L131ece.   v3.[|java:util:concurrent:DelayQueue$Itr.cursor|]  := v2;
#L131ed2.   v0:= v0[v1]  @type object;
#L131ed6.   v0:= ([|java:util:concurrent:Delayed|])v0;
#L131eda.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:DelayQueue$Itr.remove|] ([|java:util:concurrent:DelayQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:DelayQueue$Itr|] @signature [|Ljava/util/concurrent/DelayQueue$Itr;.remove:()V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L131eec.   v0:= v3.[|java:util:concurrent:DelayQueue$Itr.lastRet|] ;
#L131ef0.   if v0 >= 0 then goto L131f00;
#L131ef4.   v0:= new [|java:lang:IllegalStateException|];
#L131ef8.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L131efe.   throw v0;
#L131f00.   v0:= v3.[|java:util:concurrent:DelayQueue$Itr.this$0|]   @type object;
#L131f04.   v1:= v3.[|java:util:concurrent:DelayQueue$Itr.array|]   @type object;
#L131f08.   v2:= v3.[|java:util:concurrent:DelayQueue$Itr.lastRet|] ;
#L131f0c.   v1:= v1[v2]  @type object;
#L131f10.   call temp:=  [|java:util:concurrent:DelayQueue.removeEQ|](v0, v1) @signature [|Ljava/util/concurrent/DelayQueue;.removeEQ:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L131f16.   v0:= -1  @length 4;
#L131f18.   v3.[|java:util:concurrent:DelayQueue$Itr.lastRet|]  := v0;
#L131f1c.   return @void ;

   }
record [|java:util:concurrent:DelayQueue|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractQueue|], [|java:util:concurrent:BlockingQueue|] {
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:DelayQueue.available|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Thread|] [|java:util:concurrent:DelayQueue.leader|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:DelayQueue.lock|]    @AccessFlag PRIVATE_FINAL_TRANSIENT;
      [|java:util:PriorityQueue|] [|java:util:concurrent:DelayQueue.q|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:DelayQueue.<init>|] ([|java:util:concurrent:DelayQueue|] v1 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L131f30.   call temp:=  [|java:util:AbstractQueue.<init>|](v1) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L131f36.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L131f3a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L131f40.   v1.[|java:util:concurrent:DelayQueue.lock|]  := v0 @type object;
#L131f44.   v0:= new [|java:util:PriorityQueue|];
#L131f48.   call temp:=  [|java:util:PriorityQueue.<init>|](v0) @signature [|Ljava/util/PriorityQueue;.<init>:()V|] @classDescriptor [|java:util:PriorityQueue|] @type direct;
#L131f4e.   v1.[|java:util:concurrent:DelayQueue.q|]  := v0 @type object;
#L131f52.   v0:= 0  @length 4;
#L131f54.   v1.[|java:util:concurrent:DelayQueue.leader|]  := v0 @type object;
#L131f58.   v0:= v1.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L131f5c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131f62.   v0:= temp  @type object;
#L131f64.   v1.[|java:util:concurrent:DelayQueue.available|]  := v0 @type object;
#L131f68.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:DelayQueue.<init>|] ([|java:util:concurrent:DelayQueue|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L131f7c.   call temp:=  [|java:util:AbstractQueue.<init>|](v1) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L131f82.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L131f86.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L131f8c.   v1.[|java:util:concurrent:DelayQueue.lock|]  := v0 @type object;
#L131f90.   v0:= new [|java:util:PriorityQueue|];
#L131f94.   call temp:=  [|java:util:PriorityQueue.<init>|](v0) @signature [|Ljava/util/PriorityQueue;.<init>:()V|] @classDescriptor [|java:util:PriorityQueue|] @type direct;
#L131f9a.   v1.[|java:util:concurrent:DelayQueue.q|]  := v0 @type object;
#L131f9e.   v0:= 0  @length 4;
#L131fa0.   v1.[|java:util:concurrent:DelayQueue.leader|]  := v0 @type object;
#L131fa4.   v0:= v1.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L131fa8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L131fae.   v0:= temp  @type object;
#L131fb0.   v1.[|java:util:concurrent:DelayQueue.available|]  := v0 @type object;
#L131fb4.   call temp:=  [|java:util:concurrent:DelayQueue.addAll|](v1, v2) @signature [|Ljava/util/concurrent/DelayQueue;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L131fba.   return @void ;

   }
    procedure [|java:util:concurrent:Delayed|] [|java:util:concurrent:DelayQueue.peekExpired|] ([|java:util:concurrent:DelayQueue|] v5 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.peekExpired:()Ljava/util/concurrent/Delayed;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:Delayed|] v0 @varname [|first|] @scope ((L0008,L0017));

        v1;
        v2;
        v3;
        v4;
      
#L131fcc.   v1:= v5.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L131fd0.   call temp:=  [|java:util:PriorityQueue.peek|](v1) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L131fd6.   v0:= temp  @type object;
#L131fd8.   v0:= ([|java:util:concurrent:Delayed|])v0;
#L131fdc.   if v0 == 0 then goto L131ff8;
#L131fe0.   v1:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L131fe4.   call temp:=  [|java:util:concurrent:Delayed.getDelay|](v0, v1) @signature [|Ljava/util/concurrent/Delayed;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:Delayed|] @type interface;
#L131fea.   v1:= temp  @type wide;
#L131fec.   v3:= 0  @length wide16;
#L131ff0.   v1:= cmp(v1,v3);
#L131ff4.   if v1 <= 0 then goto L131ffa;
#L131ff8.   v0:= 0  @length 4;
#L131ffa.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:DelayQueue.add|] ([|java:util:concurrent:DelayQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



        v0;
      
#L13200c.   v2:= ([|java:util:concurrent:Delayed|])v2;
#L132010.   call temp:=  [|java:util:concurrent:DelayQueue.add|](v1, v2) @signature [|Ljava/util/concurrent/DelayQueue;.add:(Ljava/util/concurrent/Delayed;)Z|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L132016.   v0:= temp;
#L132018.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:DelayQueue.add|] ([|java:util:concurrent:DelayQueue|] v1 @type (this), [|java:util:concurrent:Delayed|] v2 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.add:(Ljava/util/concurrent/Delayed;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L13202c.   call temp:=  [|java:util:concurrent:DelayQueue.offer|](v1, v2) @signature [|Ljava/util/concurrent/DelayQueue;.offer:(Ljava/util/concurrent/Delayed;)Z|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L132032.   v0:= temp;
#L132034.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:DelayQueue.clear|] ([|java:util:concurrent:DelayQueue|] v2 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.clear:()V|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0013));

        v1;
      
#L132048.   v0:= v2.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L13204c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L132052.   v1:= v2.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L132056.   call temp:=  [|java:util:PriorityQueue.clear|](v1) @signature [|Ljava/util/PriorityQueue;.clear:()V|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L13205c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L132062.   return @void ;
#L132064.   v1:= Exception  @type object;
#L132066.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13206c.   throw v1;
  catch  [|any|] @[L132052..L13205c] goto L132064;

   }
    procedure [|int|] [|java:util:concurrent:DelayQueue.drainTo|] ([|java:util:concurrent:DelayQueue|] v4 @type (this), [|java:util:Collection|] v5 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.drainTo:(Ljava/util/Collection;)I|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:Delayed|] v0 @varname [|e|] @scope ((L001a,L0027), (L002c,L0030));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0012,L0030));
        [|int|] v2 @varname [|n|] @scope ((L0016,L0030));


        v3;
      
#L13208c.   if v5 != 0 then goto L13209c;
#L132090.   v3:= new [|java:lang:NullPointerException|];
#L132094.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13209a.   throw v3;
#L13209c.   if v5 != v4 then goto L1320ac;
#L1320a0.   v3:= new [|java:lang:IllegalArgumentException|];
#L1320a4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1320aa.   throw v3;
#L1320ac.   v1:= v4.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L1320b0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1320b6.   v2:= 0  @length 4;
#L1320b8.   call temp:=  [|java:util:concurrent:DelayQueue.peekExpired|](v4) @signature [|Ljava/util/concurrent/DelayQueue;.peekExpired:()Ljava/util/concurrent/Delayed;|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type direct;
#L1320be.   v0:= temp  @type object;
#L1320c0.   if v0 == 0 then goto L1320e4;
#L1320c4.   call temp:=  [|java:util:Collection.add|](v5, v0) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L1320ca.   v3:= v4.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L1320ce.   call temp:=  [|java:util:PriorityQueue.poll|](v3) @signature [|Ljava/util/PriorityQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1320d4.   v2:= v2 + 1;
#L1320d8.   goto L1320b8;
#L1320da.   v3:= Exception  @type object;
#L1320dc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1320e2.   throw v3;
#L1320e4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1320ea.   return v2;
  catch  [|any|] @[L1320b8..L1320d4] goto L1320da;

   }
    procedure [|int|] [|java:util:concurrent:DelayQueue.drainTo|] ([|java:util:concurrent:DelayQueue|] v4 @type (this), [|java:util:Collection|] v5 @type (object), [|int|] v6) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.drainTo:(Ljava/util/Collection;I)I|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:Delayed|] v0 @varname [|e|] @scope ((L0020,L002d));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0016,L0036));
        [|int|] v2 @varname [|n|] @scope ((L001a,L0036));



        v3;
      
#L132108.   if v5 != 0 then goto L132118;
#L13210c.   v3:= new [|java:lang:NullPointerException|];
#L132110.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L132116.   throw v3;
#L132118.   if v5 != v4 then goto L132128;
#L13211c.   v3:= new [|java:lang:IllegalArgumentException|];
#L132120.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L132126.   throw v3;
#L132128.   if v6 > 0 then goto L132130;
#L13212c.   v2:= 0  @length 4;
#L13212e.   return v2;
#L132130.   v1:= v4.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L132134.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13213a.   v2:= 0  @length 4;
#L13213c.   if v2 >= v6 then goto L13216c;
#L132140.   call temp:=  [|java:util:concurrent:DelayQueue.peekExpired|](v4) @signature [|Ljava/util/concurrent/DelayQueue;.peekExpired:()Ljava/util/concurrent/Delayed;|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type direct;
#L132146.   v0:= temp  @type object;
#L132148.   if v0 == 0 then goto L13216c;
#L13214c.   call temp:=  [|java:util:Collection.add|](v5, v0) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L132152.   v3:= v4.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L132156.   call temp:=  [|java:util:PriorityQueue.poll|](v3) @signature [|Ljava/util/PriorityQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L13215c.   v2:= v2 + 1;
#L132160.   goto L13213c;
#L132162.   v3:= Exception  @type object;
#L132164.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13216a.   throw v3;
#L13216c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L132172.   goto L13212e;
  catch  [|any|] @[L132140..L13215c] goto L132162;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:DelayQueue.iterator|] ([|java:util:concurrent:DelayQueue|] v2 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L132190.   v0:= new [|java:util:concurrent:DelayQueue$Itr|];
#L132194.   call temp:=  [|java:util:concurrent:DelayQueue.toArray|](v2) @signature [|Ljava/util/concurrent/DelayQueue;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L13219a.   v1:= temp  @type object;
#L13219c.   call temp:=  [|java:util:concurrent:DelayQueue$Itr.<init>|](v0, v2, v1) @signature [|Ljava/util/concurrent/DelayQueue$Itr;.<init>:(Ljava/util/concurrent/DelayQueue;[Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:DelayQueue$Itr|] @type direct;
#L1321a2.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:DelayQueue.offer|] ([|java:util:concurrent:DelayQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



        v0;
      
#L1321b4.   v2:= ([|java:util:concurrent:Delayed|])v2;
#L1321b8.   call temp:=  [|java:util:concurrent:DelayQueue.offer|](v1, v2) @signature [|Ljava/util/concurrent/DelayQueue;.offer:(Ljava/util/concurrent/Delayed;)Z|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L1321be.   v0:= temp;
#L1321c0.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:DelayQueue.offer|] ([|java:util:concurrent:DelayQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;





        v0;
      
#L1321d4.   v2:= ([|java:util:concurrent:Delayed|])v2;
#L1321d8.   call temp:=  [|java:util:concurrent:DelayQueue.offer|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/DelayQueue;.offer:(Ljava/util/concurrent/Delayed;JLjava/util/concurrent/TimeUnit;)Z|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L1321de.   v0:= temp;
#L1321e0.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:DelayQueue.offer|] ([|java:util:concurrent:DelayQueue|] v2 @type (this), [|java:util:concurrent:Delayed|] v3 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.offer:(Ljava/util/concurrent/Delayed;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0024));


        v1;
      
#L1321f4.   v0:= v2.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L1321f8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1321fe.   v1:= v2.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L132202.   call temp:=  [|java:util:PriorityQueue.offer|](v1, v3) @signature [|Ljava/util/PriorityQueue;.offer:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L132208.   v1:= v2.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L13220c.   call temp:=  [|java:util:PriorityQueue.peek|](v1) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L132212.   v1:= temp  @type object;
#L132214.   if v1 != v3 then goto L132228;
#L132218.   v1:= 0  @length 4;
#L13221a.   v2.[|java:util:concurrent:DelayQueue.leader|]  := v1 @type object;
#L13221e.   v1:= v2.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L132222.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v1) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L132228.   v1:= 1  @length 4;
#L13222a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L132230.   return v1;
#L132232.   v1:= Exception  @type object;
#L132234.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13223a.   throw v1;
  catch  [|any|] @[L1321fe..L132228] goto L132232;

   }
    procedure [|boolean|] [|java:util:concurrent:DelayQueue.offer|] ([|java:util:concurrent:DelayQueue|] v1 @type (this), [|java:util:concurrent:Delayed|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.offer:(Ljava/util/concurrent/Delayed;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;





        v0;
      
#L132258.   call temp:=  [|java:util:concurrent:DelayQueue.offer|](v1, v2) @signature [|Ljava/util/concurrent/DelayQueue;.offer:(Ljava/util/concurrent/Delayed;)Z|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L13225e.   v0:= temp;
#L132260.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:DelayQueue.peek|] ([|java:util:concurrent:DelayQueue|] v1 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.peek:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L132274.   call temp:=  [|java:util:concurrent:DelayQueue.peek|](v1) @signature [|Ljava/util/concurrent/DelayQueue;.peek:()Ljava/util/concurrent/Delayed;|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L13227a.   v0:= temp  @type object;
#L13227c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Delayed|] [|java:util:concurrent:DelayQueue.peek|] ([|java:util:concurrent:DelayQueue|] v2 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.peek:()Ljava/util/concurrent/Delayed;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0016));

        v1;
      
#L132290.   v0:= v2.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L132294.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13229a.   v1:= v2.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L13229e.   call temp:=  [|java:util:PriorityQueue.peek|](v1) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1322a4.   v1:= temp  @type object;
#L1322a6.   v1:= ([|java:util:concurrent:Delayed|])v1;
#L1322aa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1322b0.   return v1  @type object;
#L1322b2.   v1:= Exception  @type object;
#L1322b4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1322ba.   throw v1;
  catch  [|any|] @[L13229a..L1322aa] goto L1322b2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:DelayQueue.poll|] ([|java:util:concurrent:DelayQueue|] v1 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.poll:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L1322d8.   call temp:=  [|java:util:concurrent:DelayQueue.poll|](v1) @signature [|Ljava/util/concurrent/DelayQueue;.poll:()Ljava/util/concurrent/Delayed;|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L1322de.   v0:= temp  @type object;
#L1322e0.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:DelayQueue.poll|] ([|java:util:concurrent:DelayQueue|] v1 @type (this), [|long|] v2, [|java:util:concurrent:TimeUnit|] v4 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;




        v0;
      
#L1322f4.   call temp:=  [|java:util:concurrent:DelayQueue.poll|](v1, v2, v3, v4) @signature [|Ljava/util/concurrent/DelayQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Delayed;|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L1322fa.   v0:= temp  @type object;
#L1322fc.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Delayed|] [|java:util:concurrent:DelayQueue.poll|] ([|java:util:concurrent:DelayQueue|] v6 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.poll:()Ljava/util/concurrent/Delayed;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:Delayed|] v0 @varname [|first|] @scope ((L000d,L0029));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0002,L002e));

        v2;
        v3;
        v4;
        v5;
      
#L132310.   v1:= v6.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L132314.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13231a.   v2:= v6.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L13231e.   call temp:=  [|java:util:PriorityQueue.peek|](v2) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L132324.   v0:= temp  @type object;
#L132326.   v0:= ([|java:util:concurrent:Delayed|])v0;
#L13232a.   if v0 == 0 then goto L132346;
#L13232e.   v2:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L132332.   call temp:=  [|java:util:concurrent:Delayed.getDelay|](v0, v2) @signature [|Ljava/util/concurrent/Delayed;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:Delayed|] @type interface;
#L132338.   v2:= temp  @type wide;
#L13233a.   v4:= 0  @length wide16;
#L13233e.   v2:= cmp(v2,v4);
#L132342.   if v2 <= 0 then goto L132350;
#L132346.   v2:= 0  @length 4;
#L132348.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13234e.   return v2  @type object;
#L132350.   v2:= v6.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L132354.   call temp:=  [|java:util:PriorityQueue.poll|](v2) @signature [|Ljava/util/PriorityQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L13235a.   v2:= temp  @type object;
#L13235c.   v2:= ([|java:util:concurrent:Delayed|])v2;
#L132360.   goto L132348;
#L132362.   v2:= Exception  @type object;
#L132364.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13236a.   throw v2;
  catch  [|any|] @[L13231a..L132338] goto L132362;
  catch  [|any|] @[L132350..L132360] goto L132362;

   }
    procedure [|java:util:concurrent:Delayed|] [|java:util:concurrent:DelayQueue.poll|] ([|java:util:concurrent:DelayQueue|] v11 @type (this), [|long|] v12, [|java:util:concurrent:TimeUnit|] v14 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Delayed;|] @Access PUBLIC {
      local temp ;

        [|long|] v0 @varname [|delay|] @scope ((L003c,L009c), (L00b2,L00bb));
        [|java:util:concurrent:Delayed|] v2 @varname [|first|] @scope ((L0011,L009c), (L00b2,L00bb));
        [|java:lang:Thread|] v6 @varname [|thisThread|] @scope ((L0088,L009c), (L00b2,L00bb));
        [|long|] v7 @varname [|timeLeft|] @scope ((L0090,L009c));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|lock|] @scope ((L0006,L00bb));
        [|long|] v4 @varname [|nanos|] @scope ((L0004,L00bb));



        v1;
        v5;
        v8;
        v9;
        v10;
      
#L132390.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v14, v12, v13) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L132396.   v4:= temp  @type wide;
#L132398.   v3:= v11.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L13239c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1323a2.   v9:= v11.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L1323a6.   call temp:=  [|java:util:PriorityQueue.peek|](v9) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1323ac.   v2:= temp  @type object;
#L1323ae.   v2:= ([|java:util:concurrent:Delayed|])v2;
#L1323b2.   if v2 != 0 then goto L1323fc;
#L1323b6.   v9:= 0  @length wide16;
#L1323ba.   v9:= cmp(v4,v9);
#L1323be.   if v9 > 0 then goto L1323ee;
#L1323c2.   v9:= 0  @length 4;
#L1323c4.   v10:= v11.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L1323c8.   if v10 != 0 then goto L1323e6;
#L1323cc.   v10:= v11.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L1323d0.   call temp:=  [|java:util:PriorityQueue.peek|](v10) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1323d6.   v10:= temp  @type object;
#L1323d8.   if v10 == 0 then goto L1323e6;
#L1323dc.   v10:= v11.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L1323e0.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v10) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1323e6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1323ec.   return v9  @type object;
#L1323ee.   v9:= v11.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L1323f2.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v9, v4, v5) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1323f8.   v4:= temp  @type wide;
#L1323fa.   goto L1323a2;
#L1323fc.   v9:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L132400.   call temp:=  [|java:util:concurrent:Delayed.getDelay|](v2, v9) @signature [|Ljava/util/concurrent/Delayed;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:Delayed|] @type interface;
#L132406.   v0:= temp  @type wide;
#L132408.   v9:= 0  @length wide16;
#L13240c.   v9:= cmp(v0,v9);
#L132410.   if v9 > 0 then goto L132448;
#L132414.   v9:= v11.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L132418.   call temp:=  [|java:util:PriorityQueue.poll|](v9) @signature [|Ljava/util/PriorityQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L13241e.   v9:= temp  @type object;
#L132420.   v9:= ([|java:util:concurrent:Delayed|])v9;
#L132424.   v10:= v11.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L132428.   if v10 != 0 then goto L1323e6;
#L13242c.   v10:= v11.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L132430.   call temp:=  [|java:util:PriorityQueue.peek|](v10) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L132436.   v10:= temp  @type object;
#L132438.   if v10 == 0 then goto L1323e6;
#L13243c.   v10:= v11.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L132440.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v10) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L132446.   goto L1323e6;
#L132448.   v9:= 0  @length wide16;
#L13244c.   v9:= cmp(v4,v9);
#L132450.   if v9 > 0 then goto L13247a;
#L132454.   v9:= 0  @length 4;
#L132456.   v10:= v11.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L13245a.   if v10 != 0 then goto L1323e6;
#L13245e.   v10:= v11.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L132462.   call temp:=  [|java:util:PriorityQueue.peek|](v10) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L132468.   v10:= temp  @type object;
#L13246a.   if v10 == 0 then goto L1323e6;
#L13246e.   v10:= v11.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L132472.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v10) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L132478.   goto L1323e6;
#L13247a.   v9:= cmp(v4,v0);
#L13247e.   if v9 < 0 then goto L13248a;
#L132482.   v9:= v11.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L132486.   if v9 == 0 then goto L132498;
#L13248a.   v9:= v11.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L13248e.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v9, v4, v5) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L132494.   v4:= temp  @type wide;
#L132496.   goto L1323a2;
#L132498.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13249e.   v6:= temp  @type object;
#L1324a0.   v11.[|java:util:concurrent:DelayQueue.leader|]  := v6 @type object;
#L1324a4.   v9:= v11.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L1324a8.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v9, v0, v1) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1324ae.   v7:= temp  @type wide;
#L1324b0.   v9:= v0 - v7  @type long;
#L1324b4.   v4:= v4 - v9  @type long;
#L1324b6.   v9:= v11.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L1324ba.   if v9 != v6 then goto L1323a2;
#L1324be.   v9:= 0  @length 4;
#L1324c0.   v11.[|java:util:concurrent:DelayQueue.leader|]  := v9 @type object;
#L1324c4.   goto L1323a2;
#L1324c8.   v9:= Exception  @type object;
#L1324ca.   v10:= v11.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L1324ce.   if v10 != 0 then goto L1324ec;
#L1324d2.   v10:= v11.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L1324d6.   call temp:=  [|java:util:PriorityQueue.peek|](v10) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1324dc.   v10:= temp  @type object;
#L1324de.   if v10 == 0 then goto L1324ec;
#L1324e2.   v10:= v11.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L1324e6.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v10) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1324ec.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1324f2.   throw v9;
#L1324f4.   v9:= Exception  @type object;
#L1324f6.   v10:= v11.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L1324fa.   if v10 != v6 then goto L132504;
#L1324fe.   v10:= 0  @length 4;
#L132500.   v11.[|java:util:concurrent:DelayQueue.leader|]  := v10 @type object;
#L132504.   throw v9;
  catch  [|any|] @[L1323a2..L1323b2] goto L1324c8;
  catch  [|any|] @[L1323ee..L132424] goto L1324c8;
  catch  [|any|] @[L132482..L1324a4] goto L1324c8;
  catch  [|any|] @[L1324a4..L1324ae] goto L1324f4;
  catch  [|any|] @[L1324b6..L1324c4] goto L1324c8;
  catch  [|any|] @[L1324f6..L132504] goto L1324c8;

   }
    procedure [|void|] [|java:util:concurrent:DelayQueue.put|] ([|java:util:concurrent:DelayQueue|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.put:(Ljava/lang/Object;)V|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



      
#L132550.   v1:= ([|java:util:concurrent:Delayed|])v1;
#L132554.   call temp:=  [|java:util:concurrent:DelayQueue.put|](v0, v1) @signature [|Ljava/util/concurrent/DelayQueue;.put:(Ljava/util/concurrent/Delayed;)V|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L13255a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:DelayQueue.put|] ([|java:util:concurrent:DelayQueue|] v0 @type (this), [|java:util:concurrent:Delayed|] v1 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.put:(Ljava/util/concurrent/Delayed;)V|] @Access PUBLIC {
      local temp ;



      
#L13256c.   call temp:=  [|java:util:concurrent:DelayQueue.offer|](v0, v1) @signature [|Ljava/util/concurrent/DelayQueue;.offer:(Ljava/util/concurrent/Delayed;)Z|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L132572.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:DelayQueue.remainingCapacity|] ([|java:util:concurrent:DelayQueue|] v1 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.remainingCapacity:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L132584.    v0:= nan;
#L13258a.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:DelayQueue.remove|] ([|java:util:concurrent:DelayQueue|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0014));


        v1;
      
#L13259c.   v0:= v2.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L1325a0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1325a6.   v1:= v2.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L1325aa.   call temp:=  [|java:util:PriorityQueue.remove|](v1, v3) @signature [|Ljava/util/PriorityQueue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1325b0.   v1:= temp;
#L1325b2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1325b8.   return v1;
#L1325ba.   v1:= Exception  @type object;
#L1325bc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1325c2.   throw v1;
  catch  [|any|] @[L1325a6..L1325b0] goto L1325ba;

   }
    procedure [|void|] [|java:util:concurrent:DelayQueue.removeEQ|] ([|java:util:concurrent:DelayQueue|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.removeEQ:(Ljava/lang/Object;)V|] @Access  {
      local temp ;

        [|java:util:Iterator|] v0 @varname [|it|] @scope ((L000b,L001e));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0002,L0023));


        v2;
      
#L1325e0.   v1:= v3.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L1325e4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1325ea.   v2:= v3.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L1325ee.   call temp:=  [|java:util:PriorityQueue.iterator|](v2) @signature [|Ljava/util/PriorityQueue;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1325f4.   v0:= temp  @type object;
#L1325f6.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1325fc.   v2:= temp;
#L1325fe.   if v2 == 0 then goto L132614;
#L132602.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L132608.   v2:= temp  @type object;
#L13260a.   if v4 != v2 then goto L1325f6;
#L13260e.   call temp:=  [|java:util:Iterator.remove|](v0) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L132614.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13261a.   return @void ;
#L13261c.   v2:= Exception  @type object;
#L13261e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L132624.   throw v2;
  catch  [|any|] @[L1325ea..L132614] goto L13261c;

   }
    procedure [|int|] [|java:util:concurrent:DelayQueue.size|] ([|java:util:concurrent:DelayQueue|] v2 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.size:()I|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0014));

        v1;
      
#L132644.   v0:= v2.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L132648.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13264e.   v1:= v2.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L132652.   call temp:=  [|java:util:PriorityQueue.size|](v1) @signature [|Ljava/util/PriorityQueue;.size:()I|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L132658.   v1:= temp;
#L13265a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L132660.   return v1;
#L132662.   v1:= Exception  @type object;
#L132664.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13266a.   throw v1;
  catch  [|any|] @[L13264e..L132658] goto L132662;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:DelayQueue.take|] ([|java:util:concurrent:DelayQueue|] v1 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.take:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L132688.   call temp:=  [|java:util:concurrent:DelayQueue.take|](v1) @signature [|Ljava/util/concurrent/DelayQueue;.take:()Ljava/util/concurrent/Delayed;|] @classDescriptor [|java:util:concurrent:DelayQueue|] @type virtual;
#L13268e.   v0:= temp  @type object;
#L132690.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Delayed|] [|java:util:concurrent:DelayQueue.take|] ([|java:util:concurrent:DelayQueue|] v7 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.take:()Ljava/util/concurrent/Delayed;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:Delayed|] v2 @varname [|first|] @scope ((L000d,L0015), (L002b,L007a));
        [|long|] v0 @varname [|delay|] @scope ((L0031,L007a));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|lock|] @scope ((L0002,L007a));
        [|java:lang:Thread|] v4 @varname [|thisThread|] @scope ((L0062,L007a));

        v1;
        v5;
        v6;
      
#L1326a4.   v3:= v7.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L1326a8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1326ae.   v5:= v7.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L1326b2.   call temp:=  [|java:util:PriorityQueue.peek|](v5) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1326b8.   v2:= temp  @type object;
#L1326ba.   v2:= ([|java:util:concurrent:Delayed|])v2;
#L1326be.   if v2 != 0 then goto L1326fa;
#L1326c2.   v5:= v7.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L1326c6.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v5) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1326cc.   goto L1326ae;
#L1326ce.   v5:= Exception  @type object;
#L1326d0.   v6:= v7.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L1326d4.   if v6 != 0 then goto L1326f2;
#L1326d8.   v6:= v7.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L1326dc.   call temp:=  [|java:util:PriorityQueue.peek|](v6) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1326e2.   v6:= temp  @type object;
#L1326e4.   if v6 == 0 then goto L1326f2;
#L1326e8.   v6:= v7.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L1326ec.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v6) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1326f2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1326f8.   throw v5;
#L1326fa.   v5:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L1326fe.   call temp:=  [|java:util:concurrent:Delayed.getDelay|](v2, v5) @signature [|Ljava/util/concurrent/Delayed;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:Delayed|] @type interface;
#L132704.   v0:= temp  @type wide;
#L132706.   v5:= 0  @length wide16;
#L13270a.   v5:= cmp(v0,v5);
#L13270e.   if v5 > 0 then goto L13274c;
#L132712.   v5:= v7.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L132716.   call temp:=  [|java:util:PriorityQueue.poll|](v5) @signature [|Ljava/util/PriorityQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L13271c.   v5:= temp  @type object;
#L13271e.   v5:= ([|java:util:concurrent:Delayed|])v5;
#L132722.   v6:= v7.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L132726.   if v6 != 0 then goto L132744;
#L13272a.   v6:= v7.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L13272e.   call temp:=  [|java:util:PriorityQueue.peek|](v6) @signature [|Ljava/util/PriorityQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L132734.   v6:= temp  @type object;
#L132736.   if v6 == 0 then goto L132744;
#L13273a.   v6:= v7.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L13273e.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v6) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L132744.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13274a.   return v5  @type object;
#L13274c.   v5:= v7.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L132750.   if v5 == 0 then goto L132760;
#L132754.   v5:= v7.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L132758.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v5) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13275e.   goto L1326ae;
#L132760.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L132766.   v4:= temp  @type object;
#L132768.   v7.[|java:util:concurrent:DelayQueue.leader|]  := v4 @type object;
#L13276c.   v5:= v7.[|java:util:concurrent:DelayQueue.available|]   @type object;
#L132770.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v5, v0, v1) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L132776.   v5:= v7.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L13277a.   if v5 != v4 then goto L1326ae;
#L13277e.   v5:= 0  @length 4;
#L132780.   v7.[|java:util:concurrent:DelayQueue.leader|]  := v5 @type object;
#L132784.   goto L1326ae;
#L132786.   v5:= Exception  @type object;
#L132788.   v6:= v7.[|java:util:concurrent:DelayQueue.leader|]   @type object;
#L13278c.   if v6 != v4 then goto L132796;
#L132790.   v6:= 0  @length 4;
#L132792.   v7.[|java:util:concurrent:DelayQueue.leader|]  := v6 @type object;
#L132796.   throw v5;
  catch  [|any|] @[L1326ae..L1326cc] goto L1326ce;
  catch  [|any|] @[L1326fa..L132722] goto L1326ce;
  catch  [|any|] @[L13274c..L13276c] goto L1326ce;
  catch  [|any|] @[L13276c..L132776] goto L132786;
  catch  [|any|] @[L132776..L132796] goto L1326ce;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:DelayQueue.toArray|] ([|java:util:concurrent:DelayQueue|] v2 @type (this)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0014));

        v1;
      
#L1327d8.   v0:= v2.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L1327dc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1327e2.   v1:= v2.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L1327e6.   call temp:=  [|java:util:PriorityQueue.toArray|](v1) @signature [|Ljava/util/PriorityQueue;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L1327ec.   v1:= temp  @type object;
#L1327ee.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1327f4.   return v1  @type object;
#L1327f6.   v1:= Exception  @type object;
#L1327f8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1327fe.   throw v1;
  catch  [|any|] @[L1327e2..L1327ec] goto L1327f6;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:DelayQueue.toArray|] ([|java:util:concurrent:DelayQueue|] v2 @type (this), [|java:lang:Object|][] v3 @type (object)) @owner [|java:util:concurrent:DelayQueue|] @signature [|Ljava/util/concurrent/DelayQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0014));


        v1;
      
#L13281c.   v0:= v2.[|java:util:concurrent:DelayQueue.lock|]   @type object;
#L132820.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L132826.   v1:= v2.[|java:util:concurrent:DelayQueue.q|]   @type object;
#L13282a.   call temp:=  [|java:util:PriorityQueue.toArray|](v1, v3) @signature [|Ljava/util/PriorityQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L132830.   v1:= temp  @type object;
#L132832.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L132838.   return v1  @type object;
#L13283a.   v1:= Exception  @type object;
#L13283c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L132842.   throw v1;
  catch  [|any|] @[L132826..L132830] goto L13283a;

   }
record [|java:util:concurrent:Delayed|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:lang:Comparable|] {
   }
    procedure [|long|] [|java:util:concurrent:Delayed.getDelay|] ([|java:util:concurrent:TimeUnit|] v0 @type (object)) @owner [|java:util:concurrent:Delayed|] @signature [|Ljava/util/concurrent/Delayed;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:Exchanger$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|java:util:concurrent:atomic:AtomicReference|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicReference.value|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|long|] @@[|java:util:concurrent:atomic:AtomicReference.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:atomic:AtomicReference.unsafe|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:atomic:AtomicReference.valueOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReference.<clinit>|] () @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|ex|] @scope ((L0018,L001e));
        v1;
        v2;
        v3;
      
#L132860.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L132866.   v1:= temp  @type object;
#L132868.   @@[|java:util:concurrent:atomic:AtomicReference.unsafe|] := v1  @type object;
#L13286c.   v1:= @@[|java:util:concurrent:atomic:AtomicReference.unsafe|]   @type object;
#L132870.   v2:= new [|java:util:concurrent:atomic:AtomicReference|];
#L132874.   v3:= "value" @type (object, string);
#L132878.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13287e.   v2:= temp  @type object;
#L132880.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L132886.   v1:= temp  @type wide;
#L132888.   @@[|java:util:concurrent:atomic:AtomicReference.valueOffset|] := v1  @wide;
#L13288c.   return @void ;
#L13288e.   v0:= Exception  @type object;
#L132890.   v1:= new [|java:lang:Error|];
#L132894.   call temp:=  [|java:lang:Error.<init>|](v1, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13289a.   throw v1;
  catch  [|java:lang:Exception|] @[L13286c..L13288c] goto L13288e;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReference.<init>|] ([|java:util:concurrent:atomic:AtomicReference|] v0 @type (this)) @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L1328bc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1328c2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReference.<init>|] ([|java:util:concurrent:atomic:AtomicReference|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L1328d4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1328da.   v0.[|java:util:concurrent:atomic:AtomicReference.value|]  := v1 @type object;
#L1328de.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicReference.compareAndSet|] ([|java:util:concurrent:atomic:AtomicReference|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC_FINAL {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1328f0.   v0:= @@[|java:util:concurrent:atomic:AtomicReference.unsafe|]   @type object;
#L1328f4.   v2:= @@[|java:util:concurrent:atomic:AtomicReference.valueOffset|]   @wide;
#L1328f8.   v1:= v6  @type object;
#L1328fa.   v4:= v7  @type object;
#L1328fc.   v5:= v8  @type object;
#L1328fe.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L132904.   v0:= temp;
#L132906.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicReference.get|] ([|java:util:concurrent:atomic:AtomicReference|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L132918.   v0:= v1.[|java:util:concurrent:atomic:AtomicReference.value|]   @type object;
#L13291c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:atomic:AtomicReference.getAndSet|] ([|java:util:concurrent:atomic:AtomicReference|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;

        [|java:lang:Object|] v0 @varname [|x|] @scope ((L0004,L000b));


        v1;
      
#L132930.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type virtual;
#L132936.   v0:= temp  @type object;
#L132938.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.compareAndSet|](v2, v0, v3) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type virtual;
#L13293e.   v1:= temp;
#L132940.   if v1 == 0 then goto L132930;
#L132944.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReference.lazySet|] ([|java:util:concurrent:atomic:AtomicReference|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V|] @Access PUBLIC_FINAL {
      local temp ;



        v0;
        v1;
        v2;
      
#L132958.   v0:= @@[|java:util:concurrent:atomic:AtomicReference.unsafe|]   @type object;
#L13295c.   v1:= @@[|java:util:concurrent:atomic:AtomicReference.valueOffset|]   @wide;
#L132960.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L132966.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:atomic:AtomicReference.set|] ([|java:util:concurrent:atomic:AtomicReference|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V|] @Access PUBLIC_FINAL {
      local temp ;



      
#L132978.   v0.[|java:util:concurrent:atomic:AtomicReference.value|]  := v1 @type object;
#L13297c.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:atomic:AtomicReference.toString|] ([|java:util:concurrent:atomic:AtomicReference|] v1 @type (this)) @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L132990.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type virtual;
#L132996.   v0:= temp  @type object;
#L132998.   call temp:=  [|java:lang:String.valueOf|](v0) @signature [|Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;|] @classDescriptor [|java:lang:String|] @type static;
#L13299e.   v0:= temp  @type object;
#L1329a0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:atomic:AtomicReference.weakCompareAndSet|] ([|java:util:concurrent:atomic:AtomicReference|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:atomic:AtomicReference|] @signature [|Ljava/util/concurrent/atomic/AtomicReference;.weakCompareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access PUBLIC_FINAL {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1329b4.   v0:= @@[|java:util:concurrent:atomic:AtomicReference.unsafe|]   @type object;
#L1329b8.   v2:= @@[|java:util:concurrent:atomic:AtomicReference.valueOffset|]   @wide;
#L1329bc.   v1:= v6  @type object;
#L1329be.   v4:= v7  @type object;
#L1329c0.   v5:= v8  @type object;
#L1329c2.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1329c8.   v0:= temp;
#L1329ca.   return v0;

   }
record [|java:util:concurrent:Exchanger$Node|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:atomic:AtomicReference|] {
      [|java:lang:Object|] [|java:util:concurrent:Exchanger$Node.item|]    @AccessFlag PUBLIC_FINAL;
      [|java:lang:Thread|] [|java:util:concurrent:Exchanger$Node.waiter|]    @AccessFlag PUBLIC_VOLATILE;
   }
    procedure [|void|] [|java:util:concurrent:Exchanger$Node.<init>|] ([|java:util:concurrent:Exchanger$Node|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:Exchanger$Node|] @signature [|Ljava/util/concurrent/Exchanger$Node;.<init>:(Ljava/lang/Object;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L1329dc.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.<init>|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type direct;
#L1329e2.   v0.[|java:util:concurrent:Exchanger$Node.item|]  := v1 @type object;
#L1329e6.   return @void ;

   }
record [|java:util:concurrent:Exchanger$Slot|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:atomic:AtomicReference|] {
      [|long|] [|java:util:concurrent:Exchanger$Slot.q0|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.q1|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.q2|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.q3|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.q4|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.q5|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.q6|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.q7|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.q8|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.q9|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.qa|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.qb|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.qc|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.qd|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Exchanger$Slot.qe|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:concurrent:Exchanger$Slot.<init>|] ([|java:util:concurrent:Exchanger$Slot|] v0 @type (this)) @owner [|java:util:concurrent:Exchanger$Slot|] @signature [|Ljava/util/concurrent/Exchanger$Slot;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;

      
#L1329f8.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.<init>|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type direct;
#L1329fe.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Exchanger$Slot.<init>|] ([|java:util:concurrent:Exchanger$Slot|] v0 @type (this), [|java:util:concurrent:Exchanger$1|] v1 @type (object)) @owner [|java:util:concurrent:Exchanger$Slot|] @signature [|Ljava/util/concurrent/Exchanger$Slot;.<init>:(Ljava/util/concurrent/Exchanger$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;


      
#L132a10.   call temp:=  [|java:util:concurrent:Exchanger$Slot.<init>|](v0) @signature [|Ljava/util/concurrent/Exchanger$Slot;.<init>:()V|] @classDescriptor [|java:util:concurrent:Exchanger$Slot|] @type direct;
#L132a16.   return @void ;

   }
record [|java:util:concurrent:Exchanger|]  @type class @AccessFlag PUBLIC  {
      [|java:util:concurrent:Exchanger$Slot|][] [|java:util:concurrent:Exchanger.arena|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:concurrent:atomic:AtomicInteger|] [|java:util:concurrent:Exchanger.max|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:lang:Object|] @@[|java:util:concurrent:Exchanger.CANCEL|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Exchanger.CAPACITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Exchanger.FULL|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Exchanger.NCPU|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:Object|] @@[|java:util:concurrent:Exchanger.NULL_ITEM|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Exchanger.SPINS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Exchanger.TIMED_SPINS|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:Exchanger.<clinit>|] () @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
        v2;
      
#L132a28.   v0:= 0  @length 4;
#L132a2a.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L132a30.   v1:= temp  @type object;
#L132a32.   call temp:=  [|java:lang:Runtime.availableProcessors|](v1) @signature [|Ljava/lang/Runtime;.availableProcessors:()I|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L132a38.   v1:= temp;
#L132a3a.   @@[|java:util:concurrent:Exchanger.NCPU|] := v1;
#L132a3e.   v1:= 32  @length 16;
#L132a42.   v2:= @@[|java:util:concurrent:Exchanger.NCPU|] ;
#L132a46.   v2:= v2 / 2;
#L132a4a.   call temp:=  [|java:lang:Math.min|](v1, v2) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L132a50.   v1:= temp;
#L132a52.   v1:= v1 + -1;
#L132a56.   call temp:=  [|java:lang:Math.max|](v0, v1) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L132a5c.   v1:= temp;
#L132a5e.   @@[|java:util:concurrent:Exchanger.FULL|] := v1;
#L132a62.   v1:= @@[|java:util:concurrent:Exchanger.NCPU|] ;
#L132a66.   v2:= 1  @length 4;
#L132a68.   if v1 != v2 then goto L132a9a;
#L132a6c.   @@[|java:util:concurrent:Exchanger.SPINS|] := v0;
#L132a70.   v0:= @@[|java:util:concurrent:Exchanger.SPINS|] ;
#L132a74.   v0:= v0 / 20;
#L132a78.   @@[|java:util:concurrent:Exchanger.TIMED_SPINS|] := v0;
#L132a7c.   v0:= new [|java:lang:Object|];
#L132a80.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L132a86.   @@[|java:util:concurrent:Exchanger.CANCEL|] := v0  @type object;
#L132a8a.   v0:= new [|java:lang:Object|];
#L132a8e.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L132a94.   @@[|java:util:concurrent:Exchanger.NULL_ITEM|] := v0  @type object;
#L132a98.   return @void ;
#L132a9a.   v0:= 2000  @length 16;
#L132a9e.   goto L132a6c;

   }
    procedure [|void|] [|java:util:concurrent:Exchanger.<init>|] ([|java:util:concurrent:Exchanger|] v1 @type (this)) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L132ab0.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L132ab6.   v0:= 32  @length 16;
#L132aba.   v0:= new [|java:util:concurrent:Exchanger$Slot|][v0];
#L132abe.   v1.[|java:util:concurrent:Exchanger.arena|]  := v0 @type object;
#L132ac2.   v0:= new [|java:util:concurrent:atomic:AtomicInteger|];
#L132ac6.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.<init>|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type direct;
#L132acc.   v1.[|java:util:concurrent:Exchanger.max|]  := v0 @type object;
#L132ad0.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Exchanger.await|] ([|java:util:concurrent:Exchanger$Node|] v4 @type (object), [|java:util:concurrent:Exchanger$Slot|] v5 @type (object)) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.await:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;)Ljava/lang/Object;|] @Access PRIVATE_STATIC {
      local temp ;
        [|int|] v0 @varname [|spins|] @scope ((L0006,L0027));
        [|java:lang:Object|] v1 @varname [|v|] @scope ((L000a,L0027));
        [|java:lang:Thread|] v2 @varname [|w|] @scope ((L0004,L0027));


        v3;
      
#L132ae4.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L132aea.   v2:= temp  @type object;
#L132aec.   v0:= @@[|java:util:concurrent:Exchanger.SPINS|] ;
#L132af0.   call temp:=  [|java:util:concurrent:Exchanger$Node.get|](v4) @signature [|Ljava/util/concurrent/Exchanger$Node;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger$Node|] @type virtual;
#L132af6.   v1:= temp  @type object;
#L132af8.   if v1 == 0 then goto L132afe;
#L132afc.   return v1  @type object;
#L132afe.   if v0 <= 0 then goto L132b08;
#L132b02.   v0:= v0 + -1;
#L132b06.   goto L132af0;
#L132b08.   v3:= v4.[|java:util:concurrent:Exchanger$Node.waiter|]   @type object;
#L132b0c.   if v3 != 0 then goto L132b16;
#L132b10.   v4.[|java:util:concurrent:Exchanger$Node.waiter|]  := v2 @type object;
#L132b14.   goto L132af0;
#L132b16.   call temp:=  [|java:lang:Thread.isInterrupted|](v2) @signature [|Ljava/lang/Thread;.isInterrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L132b1c.   v3:= temp;
#L132b1e.   if v3 == 0 then goto L132b2a;
#L132b22.   call temp:=  [|java:util:concurrent:Exchanger.tryCancel|](v4, v5) @signature [|Ljava/util/concurrent/Exchanger;.tryCancel:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;)Z|] @classDescriptor [|java:util:concurrent:Exchanger|] @type static;
#L132b28.   goto L132af0;
#L132b2a.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v4) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L132b30.   goto L132af0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Exchanger.awaitNanos|] ([|java:util:concurrent:Exchanger|] v9 @type (this), [|java:util:concurrent:Exchanger$Node|] v10 @type (object), [|java:util:concurrent:Exchanger$Slot|] v11 @type (object), [|long|] v12) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.awaitNanos:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;J)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v5 @varname [|v|] @scope ((L0009,L000b), (L000c,L004c));
        [|long|] v0 @varname [|lastTime|] @scope ((L0004,L004c));
        [|long|] v2 @varname [|now|] @scope ((L0010,L004c));
        [|int|] v4 @varname [|spins|] @scope ((L0002,L004c));
        [|java:lang:Thread|] v6 @varname [|w|] @scope ((L0005,L004c));




        v1;
        v3;
        v7;
        v8;
      
#L132b44.   v4:= @@[|java:util:concurrent:Exchanger.TIMED_SPINS|] ;
#L132b48.   v0:= 0  @length wide16;
#L132b4c.   v6:= 0  @length 4;
#L132b4e.   call temp:=  [|java:util:concurrent:Exchanger$Node.get|](v10) @signature [|Ljava/util/concurrent/Exchanger$Node;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger$Node|] @type virtual;
#L132b54.   v5:= temp  @type object;
#L132b56.   if v5 == 0 then goto L132b5c;
#L132b5a.   return v5  @type object;
#L132b5c.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L132b62.   v2:= temp  @type wide;
#L132b64.   if v6 != 0 then goto L132b88;
#L132b68.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L132b6e.   v6:= temp  @type object;
#L132b70.   v0:= v2  @type wide;
#L132b72.   v7:= 0  @length wide16;
#L132b76.   v7:= cmp(v12,v7);
#L132b7a.   if v7 <= 0 then goto L132bba;
#L132b7e.   if v4 <= 0 then goto L132b90;
#L132b82.   v4:= v4 + -1;
#L132b86.   goto L132b4e;
#L132b88.   v7:= v2 - v0  @type long;
#L132b8c.   v12:= v12 - v7  @type long;
#L132b8e.   goto L132b70;
#L132b90.   v7:= v10.[|java:util:concurrent:Exchanger$Node.waiter|]   @type object;
#L132b94.   if v7 != 0 then goto L132b9e;
#L132b98.   v10.[|java:util:concurrent:Exchanger$Node.waiter|]  := v6 @type object;
#L132b9c.   goto L132b4e;
#L132b9e.   call temp:=  [|java:lang:Thread.isInterrupted|](v6) @signature [|Ljava/lang/Thread;.isInterrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L132ba4.   v7:= temp;
#L132ba6.   if v7 == 0 then goto L132bb2;
#L132baa.   call temp:=  [|java:util:concurrent:Exchanger.tryCancel|](v10, v11) @signature [|Ljava/util/concurrent/Exchanger;.tryCancel:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;)Z|] @classDescriptor [|java:util:concurrent:Exchanger|] @type static;
#L132bb0.   goto L132b4e;
#L132bb2.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v10, v12, v13) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L132bb8.   goto L132b4e;
#L132bba.   call temp:=  [|java:util:concurrent:Exchanger.tryCancel|](v10, v11) @signature [|Ljava/util/concurrent/Exchanger;.tryCancel:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;)Z|] @classDescriptor [|java:util:concurrent:Exchanger|] @type static;
#L132bc0.   v7:= temp;
#L132bc2.   if v7 == 0 then goto L132b4e;
#L132bc6.   call temp:=  [|java:lang:Thread.isInterrupted|](v6) @signature [|Ljava/lang/Thread;.isInterrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L132bcc.   v7:= temp;
#L132bce.   if v7 != 0 then goto L132b4e;
#L132bd2.   call temp:=  [|java:util:concurrent:Exchanger.scanOnTimeout|](v9, v10) @signature [|Ljava/util/concurrent/Exchanger;.scanOnTimeout:(Ljava/util/concurrent/Exchanger$Node;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger|] @type direct;
#L132bd8.   v5:= temp  @type object;
#L132bda.   goto L132b5a;

   }
    procedure [|void|] [|java:util:concurrent:Exchanger.createSlot|] ([|java:util:concurrent:Exchanger|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.createSlot:(I)V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:Exchanger$Slot|][] v0 @varname [|a|] @scope ((L0008,L0014));
        [|java:util:concurrent:Exchanger$Slot|] v1 @varname [|newSlot|] @scope ((L0006,L0014));


        v2;
      
#L132bec.   v1:= new [|java:util:concurrent:Exchanger$Slot|];
#L132bf0.   v2:= 0  @length 4;
#L132bf2.   call temp:=  [|java:util:concurrent:Exchanger$Slot.<init>|](v1, v2) @signature [|Ljava/util/concurrent/Exchanger$Slot;.<init>:(Ljava/util/concurrent/Exchanger$1;)V|] @classDescriptor [|java:util:concurrent:Exchanger$Slot|] @type direct;
#L132bf8.   v0:= v3.[|java:util:concurrent:Exchanger.arena|]   @type object;
#L132bfc.   (@monitorenter v0)
#L132bfe.   v2:= v0[v4]  @type object;
#L132c02.   if v2 != 0 then goto L132c0a;
#L132c06.   v0[v4]:= v1  @type object;
#L132c0a.   (@monitorexit v0)
#L132c0c.   return @void ;
#L132c0e.   v2:= Exception  @type object;
#L132c10.   (@monitorexit v0)
#L132c12.   throw v2;
  catch  [|any|] @[L132bfe..L132c12] goto L132c0e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Exchanger.doExchange|] ([|java:util:concurrent:Exchanger|] v11 @type (this), [|java:lang:Object|] v12 @type (object), [|boolean|] v13, [|long|] v14) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.doExchange:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:Exchanger$Node|] v7 @varname [|you|] @scope ((L0024,L0031));
        [|java:util:concurrent:Exchanger$Node|] v3 @varname [|me|] @scope ((L0006,L0054), (L0057,L008f));
        [|int|] v2 @varname [|m|] @scope ((L005d,L0069), (L0074,L008f));
        [|java:lang:Object|] v5 @varname [|v|] @scope ((L004c,L0069));
        [|int|] v0 @varname [|fails|] @scope ((L000b,L008f));
        [|int|] v1 @varname [|index|] @scope ((L000a,L008f));
        [|java:util:concurrent:Exchanger$Slot|] v4 @varname [|slot|] @scope ((L000f,L008f));
        [|java:lang:Object|] v6 @varname [|y|] @scope ((L0019,L008f));




        v8;
        v9;
        v10;
      
#L132c30.   v10:= 0  @length 4;
#L132c32.   v3:= new [|java:util:concurrent:Exchanger$Node|];
#L132c36.   call temp:=  [|java:util:concurrent:Exchanger$Node.<init>|](v3, v12) @signature [|Ljava/util/concurrent/Exchanger$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:Exchanger$Node|] @type direct;
#L132c3c.   call temp:=  [|java:util:concurrent:Exchanger.hashIndex|](v11) @signature [|Ljava/util/concurrent/Exchanger;.hashIndex:()I|] @classDescriptor [|java:util:concurrent:Exchanger|] @type direct;
#L132c42.   v1:= temp;
#L132c44.   v0:= 0  @length 4;
#L132c46.   v8:= v11.[|java:util:concurrent:Exchanger.arena|]   @type object;
#L132c4a.   v4:= v8[v1]  @type object;
#L132c4e.   if v4 != 0 then goto L132c5a;
#L132c52.   call temp:=  [|java:util:concurrent:Exchanger.createSlot|](v11, v1) @signature [|Ljava/util/concurrent/Exchanger;.createSlot:(I)V|] @classDescriptor [|java:util:concurrent:Exchanger|] @type direct;
#L132c58.   goto L132c46;
#L132c5a.   call temp:=  [|java:util:concurrent:Exchanger$Slot.get|](v4) @signature [|Ljava/util/concurrent/Exchanger$Slot;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger$Slot|] @type virtual;
#L132c60.   v6:= temp  @type object;
#L132c62.   if v6 == 0 then goto L132c94;
#L132c66.   call temp:=  [|java:util:concurrent:Exchanger$Slot.compareAndSet|](v4, v6, v10) @signature [|Ljava/util/concurrent/Exchanger$Slot;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:Exchanger$Slot|] @type virtual;
#L132c6c.   v8:= temp;
#L132c6e.   if v8 == 0 then goto L132c94;
#L132c72.   v7:= v6  @type object;
#L132c74.   v7:= ([|java:util:concurrent:Exchanger$Node|])v7;
#L132c78.   call temp:=  [|java:util:concurrent:Exchanger$Node.compareAndSet|](v7, v10, v12) @signature [|Ljava/util/concurrent/Exchanger$Node;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:Exchanger$Node|] @type virtual;
#L132c7e.   v8:= temp;
#L132c80.   if v8 == 0 then goto L132c46;
#L132c84.   v8:= v7.[|java:util:concurrent:Exchanger$Node.waiter|]   @type object;
#L132c88.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v8) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L132c8e.   v8:= v7.[|java:util:concurrent:Exchanger$Node.item|]   @type object;
#L132c92.   return v8  @type object;
#L132c94.   if v6 != 0 then goto L132d02;
#L132c98.   call temp:=  [|java:util:concurrent:Exchanger$Slot.compareAndSet|](v4, v10, v3) @signature [|Ljava/util/concurrent/Exchanger$Slot;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:Exchanger$Slot|] @type virtual;
#L132c9e.   v8:= temp;
#L132ca0.   if v8 == 0 then goto L132d02;
#L132ca4.   if v1 != 0 then goto L132cc0;
#L132ca8.   if v13 == 0 then goto L132cb6;
#L132cac.   call temp:=  [|java:util:concurrent:Exchanger.awaitNanos|](v11, v3, v4, v14, v15) @signature [|Ljava/util/concurrent/Exchanger;.awaitNanos:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;J)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger|] @type direct;
#L132cb2.   v8:= temp  @type object;
#L132cb4.   goto L132c92;
#L132cb6.   call temp:=  [|java:util:concurrent:Exchanger.await|](v3, v4) @signature [|Ljava/util/concurrent/Exchanger;.await:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger|] @type static;
#L132cbc.   v8:= temp  @type object;
#L132cbe.   goto L132c92;
#L132cc0.   call temp:=  [|java:util:concurrent:Exchanger.spinWait|](v3, v4) @signature [|Ljava/util/concurrent/Exchanger;.spinWait:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger|] @type static;
#L132cc6.   v5:= temp  @type object;
#L132cc8.   v8:= @@[|java:util:concurrent:Exchanger.CANCEL|]   @type object;
#L132ccc.   if v5 == v8 then goto L132cd4;
#L132cd0.   v8:= v5  @type object;
#L132cd2.   goto L132c92;
#L132cd4.   v3:= new [|java:util:concurrent:Exchanger$Node|];
#L132cd8.   call temp:=  [|java:util:concurrent:Exchanger$Node.<init>|](v3, v12) @signature [|Ljava/util/concurrent/Exchanger$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:Exchanger$Node|] @type direct;
#L132cde.   v8:= v11.[|java:util:concurrent:Exchanger.max|]   @type object;
#L132ce2.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v8) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L132ce8.   v2:= temp;
#L132cea.   v1:= v1 ^>> 1;
#L132cee.   if v2 <= v1 then goto L132c46;
#L132cf2.   v8:= v11.[|java:util:concurrent:Exchanger.max|]   @type object;
#L132cf6.   v9:= v2 + -1;
#L132cfa.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v8, v2, v9) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L132d00.   goto L132c46;
#L132d02.   v0:= v0 + 1;
#L132d06.   v8:= 1  @length 4;
#L132d08.   if v0 <= v8 then goto L132c46;
#L132d0c.   v8:= v11.[|java:util:concurrent:Exchanger.max|]   @type object;
#L132d10.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v8) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L132d16.   v2:= temp;
#L132d18.   v8:= 3  @length 4;
#L132d1a.   if v0 <= v8 then goto L132d40;
#L132d1e.   v8:= @@[|java:util:concurrent:Exchanger.FULL|] ;
#L132d22.   if v2 >= v8 then goto L132d40;
#L132d26.   v8:= v11.[|java:util:concurrent:Exchanger.max|]   @type object;
#L132d2a.   v9:= v2 + 1;
#L132d2e.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v8, v2, v9) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L132d34.   v8:= temp;
#L132d36.   if v8 == 0 then goto L132d40;
#L132d3a.   v1:= v2 + 1;
#L132d3e.   goto L132c46;
#L132d40.   v1:= v1 + -1;
#L132d44.   if v1 >= 0 then goto L132c46;
#L132d48.   v1:= v2;
#L132d4a.   goto L132c46;

   }
    procedure [|int|] [|java:util:concurrent:Exchanger.hashIndex|] ([|java:util:concurrent:Exchanger|] v8 @type (this)) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.hashIndex:()I|] @Access PRIVATE_FINAL {
      local temp ;

        [|int|] v0 @varname [|hash|] @scope ((L0017,L0042));
        [|long|] v1 @varname [|id|] @scope ((L0008,L0042));
        [|int|] v3 @varname [|index|] @scope ((L0036,L0042));
        [|int|] v4 @varname [|m|] @scope ((L001d,L0042));
        [|int|] v5 @varname [|nbits|] @scope ((L0030,L0042));

        v2;
        v6;
        v7;
      
#L132d60.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L132d66.   v6:= temp  @type object;
#L132d68.   call temp:=  [|java:lang:Thread.getId|](v6) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L132d6e.   v1:= temp  @type wide;
#L132d70.   v6:= 32  @length 16;
#L132d74.   v6:= v1 ^>> v6  @type long;
#L132d78.   v6:= v6 ^~ v1  @type long;
#L132d7a.   v6:= (int)v6  @type l2i;
#L132d7c.    v7:= -0.000000;
#L132d82.   v6:= v6 ^~ v7  @type int;
#L132d84.    v7:= 0.000000;
#L132d8a.   v0:= v6 * v7  @type int;
#L132d8e.   v6:= v8.[|java:util:concurrent:Exchanger.max|]   @type object;
#L132d92.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v6) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L132d98.   v4:= temp;
#L132d9a.   v6:= -1024  @length 16;
#L132d9e.   v6:= v6 ^> v4  @type int;
#L132da0.   v6:= v6 ^& 4;
#L132da4.   v7:= 504  @length 16;
#L132da8.   v7:= v7 ^>> v4  @type int;
#L132daa.   v7:= v7 ^& 2;
#L132dae.   v6:= v6 ^| v7  @type int;
#L132db0.    v7:= nan;
#L132db6.   v7:= v7 ^>> v4  @type int;
#L132db8.   v7:= v7 ^& 1;
#L132dbc.   v5:= v6 ^| v7  @type int;
#L132dc0.   v6:= 1  @length 4;
#L132dc2.   v6:= v6 ^< v5  @type int;
#L132dc4.   v6:= v6 + -1;
#L132dc8.   v3:= v0 ^& v6  @type int;
#L132dcc.   if v3 <= v4 then goto L132de2;
#L132dd0.   v6:= v0 ^>> v5  @type int;
#L132dd4.   v7:= v5 - 33;
#L132dd8.   v7:= v0 ^< v7  @type int;
#L132ddc.   v0:= v6 ^| v7  @type int;
#L132de0.   goto L132dc0;
#L132de2.   return v3;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Exchanger.scanOnTimeout|] ([|java:util:concurrent:Exchanger|] v6 @type (this), [|java:util:concurrent:Exchanger$Node|] v7 @type (object)) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.scanOnTimeout:(Ljava/util/concurrent/Exchanger$Node;)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:Exchanger$Slot|] v1 @varname [|slot|] @scope ((L000c,L002c), (L002d,L0030));
        [|java:lang:Object|] v2 @varname [|y|] @scope ((L0012,L002c));
        [|java:util:concurrent:Exchanger$Node|] v3 @varname [|you|] @scope ((L001d,L002c));
        [|int|] v0 @varname [|j|] @scope ((L0006,L0033));


        v4;
        v5;
      
#L132df4.   v5:= 0  @length 4;
#L132df6.   v4:= v6.[|java:util:concurrent:Exchanger.arena|]   @type object;
#L132dfa.   v4:= v4.length;
#L132dfc.   v0:= v4 + -1;
#L132e00.   if v0 < 0 then goto L132e54;
#L132e04.   v4:= v6.[|java:util:concurrent:Exchanger.arena|]   @type object;
#L132e08.   v1:= v4[v0]  @type object;
#L132e0c.   if v1 == 0 then goto L132e4e;
#L132e10.   call temp:=  [|java:util:concurrent:Exchanger$Slot.get|](v1) @signature [|Ljava/util/concurrent/Exchanger$Slot;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger$Slot|] @type virtual;
#L132e16.   v2:= temp  @type object;
#L132e18.   if v2 == 0 then goto L132e4e;
#L132e1c.   call temp:=  [|java:util:concurrent:Exchanger$Slot.compareAndSet|](v1, v2, v5) @signature [|Ljava/util/concurrent/Exchanger$Slot;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:Exchanger$Slot|] @type virtual;
#L132e22.   v4:= temp;
#L132e24.   if v4 == 0 then goto L132e10;
#L132e28.   v3:= v2  @type object;
#L132e2a.   v3:= ([|java:util:concurrent:Exchanger$Node|])v3;
#L132e2e.   v4:= v7.[|java:util:concurrent:Exchanger$Node.item|]   @type object;
#L132e32.   call temp:=  [|java:util:concurrent:Exchanger$Node.compareAndSet|](v3, v5, v4) @signature [|Ljava/util/concurrent/Exchanger$Node;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:Exchanger$Node|] @type virtual;
#L132e38.   v4:= temp;
#L132e3a.   if v4 == 0 then goto L132e10;
#L132e3e.   v4:= v3.[|java:util:concurrent:Exchanger$Node.waiter|]   @type object;
#L132e42.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v4) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L132e48.   v4:= v3.[|java:util:concurrent:Exchanger$Node.item|]   @type object;
#L132e4c.   return v4  @type object;
#L132e4e.   v0:= v0 + -1;
#L132e52.   goto L132e00;
#L132e54.   v4:= @@[|java:util:concurrent:Exchanger.CANCEL|]   @type object;
#L132e58.   goto L132e4c;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Exchanger.spinWait|] ([|java:util:concurrent:Exchanger$Node|] v2 @type (object), [|java:util:concurrent:Exchanger$Slot|] v3 @type (object)) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.spinWait:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;)Ljava/lang/Object;|] @Access PRIVATE_STATIC {
      local temp ;
        [|int|] v0 @varname [|spins|] @scope ((L0002,L0012));
        [|java:lang:Object|] v1 @varname [|v|] @scope ((L0006,L0012));


      
#L132e6c.   v0:= @@[|java:util:concurrent:Exchanger.SPINS|] ;
#L132e70.   call temp:=  [|java:util:concurrent:Exchanger$Node.get|](v2) @signature [|Ljava/util/concurrent/Exchanger$Node;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger$Node|] @type virtual;
#L132e76.   v1:= temp  @type object;
#L132e78.   if v1 == 0 then goto L132e7e;
#L132e7c.   return v1  @type object;
#L132e7e.   if v0 <= 0 then goto L132e88;
#L132e82.   v0:= v0 + -1;
#L132e86.   goto L132e70;
#L132e88.   call temp:=  [|java:util:concurrent:Exchanger.tryCancel|](v2, v3) @signature [|Ljava/util/concurrent/Exchanger;.tryCancel:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;)Z|] @classDescriptor [|java:util:concurrent:Exchanger|] @type static;
#L132e8e.   goto L132e70;

   }
    procedure [|boolean|] [|java:util:concurrent:Exchanger.tryCancel|] ([|java:util:concurrent:Exchanger$Node|] v2 @type (object), [|java:util:concurrent:Exchanger$Slot|] v3 @type (object)) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.tryCancel:(Ljava/util/concurrent/Exchanger$Node;Ljava/util/concurrent/Exchanger$Slot;)Z|] @Access PRIVATE_STATIC {
      local temp ;


        v0;
        v1;
      
#L132ea0.   v1:= 0  @length 4;
#L132ea2.   v0:= @@[|java:util:concurrent:Exchanger.CANCEL|]   @type object;
#L132ea6.   call temp:=  [|java:util:concurrent:Exchanger$Node.compareAndSet|](v2, v1, v0) @signature [|Ljava/util/concurrent/Exchanger$Node;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:Exchanger$Node|] @type virtual;
#L132eac.   v0:= temp;
#L132eae.   if v0 != 0 then goto L132eb6;
#L132eb2.   v0:= 0  @length 4;
#L132eb4.   return v0;
#L132eb6.   call temp:=  [|java:util:concurrent:Exchanger$Slot.get|](v3) @signature [|Ljava/util/concurrent/Exchanger$Slot;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger$Slot|] @type virtual;
#L132ebc.   v0:= temp  @type object;
#L132ebe.   if v0 != v2 then goto L132ec8;
#L132ec2.   call temp:=  [|java:util:concurrent:Exchanger$Slot.compareAndSet|](v3, v2, v1) @signature [|Ljava/util/concurrent/Exchanger$Slot;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:Exchanger$Slot|] @type virtual;
#L132ec8.   v0:= 1  @length 4;
#L132eca.   goto L132eb4;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Exchanger.exchange|] ([|java:util:concurrent:Exchanger|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.exchange:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        [|java:lang:Object|] v0 @varname [|v|] @scope ((L0011,L0016), (L0017,L001e));

        v1;
        v2;
        v3;
      
#L132edc.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L132ee2.   v1:= temp;
#L132ee4.   if v1 != 0 then goto L132f18;
#L132ee8.   if v5 != 0 then goto L132ef0;
#L132eec.   v5:= @@[|java:util:concurrent:Exchanger.NULL_ITEM|]   @type object;
#L132ef0.   v1:= 0  @length 4;
#L132ef2.   v2:= 0  @length wide16;
#L132ef6.   call temp:=  [|java:util:concurrent:Exchanger.doExchange|](v4, v5, v1, v2, v3) @signature [|Ljava/util/concurrent/Exchanger;.doExchange:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger|] @type direct;
#L132efc.   v0:= temp  @type object;
#L132efe.   v1:= @@[|java:util:concurrent:Exchanger.NULL_ITEM|]   @type object;
#L132f02.   if v0 != v1 then goto L132f0a;
#L132f06.   v0:= 0  @length 4;
#L132f08.   return v0  @type object;
#L132f0a.   v1:= @@[|java:util:concurrent:Exchanger.CANCEL|]   @type object;
#L132f0e.   if v0 != v1 then goto L132f08;
#L132f12.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L132f18.   v1:= new [|java:lang:InterruptedException|];
#L132f1c.   call temp:=  [|java:lang:InterruptedException.<init>|](v1) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L132f22.   throw v1;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Exchanger.exchange|] ([|java:util:concurrent:Exchanger|] v4 @type (this), [|java:lang:Object|] v5 @type (object), [|long|] v6, [|java:util:concurrent:TimeUnit|] v8 @type (object)) @owner [|java:util:concurrent:Exchanger|] @signature [|Ljava/util/concurrent/Exchanger;.exchange:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        [|java:lang:Object|] v0 @varname [|v|] @scope ((L0013,L0018), (L0019,L0029));



        v1;
        v2;
        v3;
      
#L132f34.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L132f3a.   v1:= temp;
#L132f3c.   if v1 != 0 then goto L132f86;
#L132f40.   if v5 != 0 then goto L132f48;
#L132f44.   v5:= @@[|java:util:concurrent:Exchanger.NULL_ITEM|]   @type object;
#L132f48.   v1:= 1  @length 4;
#L132f4a.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v8, v6, v7) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L132f50.   v2:= temp  @type wide;
#L132f52.   call temp:=  [|java:util:concurrent:Exchanger.doExchange|](v4, v5, v1, v2, v3) @signature [|Ljava/util/concurrent/Exchanger;.doExchange:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Exchanger|] @type direct;
#L132f58.   v0:= temp  @type object;
#L132f5a.   v1:= @@[|java:util:concurrent:Exchanger.NULL_ITEM|]   @type object;
#L132f5e.   if v0 != v1 then goto L132f66;
#L132f62.   v0:= 0  @length 4;
#L132f64.   return v0  @type object;
#L132f66.   v1:= @@[|java:util:concurrent:Exchanger.CANCEL|]   @type object;
#L132f6a.   if v0 != v1 then goto L132f64;
#L132f6e.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L132f74.   v1:= temp;
#L132f76.   if v1 != 0 then goto L132f86;
#L132f7a.   v1:= new [|java:util:concurrent:TimeoutException|];
#L132f7e.   call temp:=  [|java:util:concurrent:TimeoutException.<init>|](v1) @signature [|Ljava/util/concurrent/TimeoutException;.<init>:()V|] @classDescriptor [|java:util:concurrent:TimeoutException|] @type direct;
#L132f84.   throw v1;
#L132f86.   v1:= new [|java:lang:InterruptedException|];
#L132f8a.   call temp:=  [|java:lang:InterruptedException.<init>|](v1) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L132f90.   throw v1;

   }
record [|java:util:concurrent:ExecutionException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Exception|] {
   }
      global [|long|] @@[|java:util:concurrent:ExecutionException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ExecutionException.<init>|] ([|java:util:concurrent:ExecutionException|] v0 @type (this)) @owner [|java:util:concurrent:ExecutionException|] @signature [|Ljava/util/concurrent/ExecutionException;.<init>:()V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;

      
#L132fa4.   call temp:=  [|java:lang:Exception.<init>|](v0) @signature [|Ljava/lang/Exception;.<init>:()V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L132faa.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ExecutionException.<init>|] ([|java:util:concurrent:ExecutionException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:concurrent:ExecutionException|] @signature [|Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/String;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;


      
#L132fbc.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L132fc2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ExecutionException.<init>|] ([|java:util:concurrent:ExecutionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:util:concurrent:ExecutionException|] @signature [|Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L132fd4.   call temp:=  [|java:lang:Exception.<init>|](v0, v1, v2) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L132fda.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ExecutionException.<init>|] ([|java:util:concurrent:ExecutionException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:util:concurrent:ExecutionException|] @signature [|Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L132fec.   call temp:=  [|java:lang:Exception.<init>|](v0, v1) @signature [|Ljava/lang/Exception;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Exception|] @type direct;
#L132ff2.   return @void ;

   }
record [|java:util:concurrent:Future|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|java:util:concurrent:Future.cancel|] ([|boolean|] v0) @owner [|java:util:concurrent:Future|] @signature [|Ljava/util/concurrent/Future;.cancel:(Z)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Future.get|] () @owner [|java:util:concurrent:Future|] @signature [|Ljava/util/concurrent/Future;.get:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Future.get|] ([|long|] v0, [|java:util:concurrent:TimeUnit|] v2 @type (object)) @owner [|java:util:concurrent:Future|] @signature [|Ljava/util/concurrent/Future;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:Future.isCancelled|] () @owner [|java:util:concurrent:Future|] @signature [|Ljava/util/concurrent/Future;.isCancelled:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:Future.isDone|] () @owner [|java:util:concurrent:Future|] @signature [|Ljava/util/concurrent/Future;.isDone:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:RunnableFuture|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:lang:Runnable|], [|java:util:concurrent:Future|] {
   }
    procedure [|void|] [|java:util:concurrent:RunnableFuture.run|] () @owner [|java:util:concurrent:RunnableFuture|] @signature [|Ljava/util/concurrent/RunnableFuture;.run:()V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:FutureTask|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:RunnableFuture|] {
      [|java:util:concurrent:Callable|] [|java:util:concurrent:FutureTask.callable|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:util:concurrent:FutureTask.outcome|]    @AccessFlag PRIVATE;
      [|java:lang:Thread|] [|java:util:concurrent:FutureTask.runner|]    @AccessFlag PRIVATE_VOLATILE;
      [|int|] [|java:util:concurrent:FutureTask.state|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:concurrent:FutureTask$WaitNode|] [|java:util:concurrent:FutureTask.waiters|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|int|] @@[|java:util:concurrent:FutureTask.CANCELLED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:FutureTask.COMPLETING|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:FutureTask.EXCEPTIONAL|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:FutureTask.INTERRUPTED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:FutureTask.INTERRUPTING|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:FutureTask.NEW|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:FutureTask.NORMAL|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:FutureTask.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:FutureTask.runnerOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:FutureTask.stateOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:FutureTask.waitersOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:FutureTask.<clinit>|] () @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0034,L003a));
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0008,L003a));
        v2;
        v3;
      
#L133004.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L13300a.   v2:= temp  @type object;
#L13300c.   @@[|java:util:concurrent:FutureTask.UNSAFE|] := v2  @type object;
#L133010.   v1:= new [|java:util:concurrent:FutureTask|];
#L133014.   v2:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L133018.   v3:= "state" @type (object, string);
#L13301c.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L133022.   v3:= temp  @type object;
#L133024.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13302a.   v2:= temp  @type wide;
#L13302c.   @@[|java:util:concurrent:FutureTask.stateOffset|] := v2  @wide;
#L133030.   v2:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L133034.   v3:= "runner" @type (object, string);
#L133038.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13303e.   v3:= temp  @type object;
#L133040.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L133046.   v2:= temp  @type wide;
#L133048.   @@[|java:util:concurrent:FutureTask.runnerOffset|] := v2  @wide;
#L13304c.   v2:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L133050.   v3:= "waiters" @type (object, string);
#L133054.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13305a.   v3:= temp  @type object;
#L13305c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L133062.   v2:= temp  @type wide;
#L133064.   @@[|java:util:concurrent:FutureTask.waitersOffset|] := v2  @wide;
#L133068.   return @void ;
#L13306a.   v0:= Exception  @type object;
#L13306c.   v2:= new [|java:lang:Error|];
#L133070.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L133076.   throw v2;
  catch  [|java:lang:Exception|] @[L133004..L133068] goto L13306a;

   }
    procedure [|void|] [|java:util:concurrent:FutureTask.<init>|] ([|java:util:concurrent:FutureTask|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




        v0;
      
#L133098.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13309e.   call temp:=  [|java:util:concurrent:Executors.callable|](v2, v3) @signature [|Ljava/util/concurrent/Executors;.callable:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Callable;|] @classDescriptor [|java:util:concurrent:Executors|] @type static;
#L1330a4.   v0:= temp  @type object;
#L1330a6.   v1.[|java:util:concurrent:FutureTask.callable|]  := v0 @type object;
#L1330aa.   v0:= 0  @length 4;
#L1330ac.   v1.[|java:util:concurrent:FutureTask.state|]  := v0;
#L1330b0.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:FutureTask.<init>|] ([|java:util:concurrent:FutureTask|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/util/concurrent/Callable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L1330c4.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1330ca.   if v2 != 0 then goto L1330da;
#L1330ce.   v0:= new [|java:lang:NullPointerException|];
#L1330d2.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1330d8.   throw v0;
#L1330da.   v1.[|java:util:concurrent:FutureTask.callable|]  := v2 @type object;
#L1330de.   v0:= 0  @length 4;
#L1330e0.   v1.[|java:util:concurrent:FutureTask.state|]  := v0;
#L1330e4.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:FutureTask.awaitDone|] ([|java:util:concurrent:FutureTask|] v12 @type (this), [|boolean|] v13, [|long|] v14) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.awaitDone:(ZJ)I|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:FutureTask$WaitNode|] v5 @varname [|q|] @scope ((L0007,L0017), (L001a,L0029), (L002c,L005b));
        [|long|] v6 @varname [|last|] @scope ((L0006,L0017), (L001a,L005b));
        [|boolean|] v10 @varname [|queued|] @scope ((L0008,L0017), (L001a,L005b));
        [|int|] v11 @varname [|s|] @scope ((L001c,L0024), (L0025,L005b));
        [|long|] v8 @varname [|now|] @scope ((L0043,L0057));



        v0;
        v1;
        v2;
        v3;
        v4;
        v7;
        v9;
      
#L1330f8.   if v13 == 0 then goto L133126;
#L1330fc.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L133102.   v6:= temp  @type wide;
#L133104.   v5:= 0  @length 4;
#L133106.   v10:= 0  @length 4;
#L133108.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L13310e.   v0:= temp;
#L133110.   if v0 == 0 then goto L13312c;
#L133114.   call temp:=  [|java:util:concurrent:FutureTask.removeWaiter|](v12, v5) @signature [|Ljava/util/concurrent/FutureTask;.removeWaiter:(Ljava/util/concurrent/FutureTask$WaitNode;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L13311a.   v0:= new [|java:lang:InterruptedException|];
#L13311e.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L133124.   throw v0;
#L133126.   v6:= 0  @length wide16;
#L13312a.   goto L133104;
#L13312c.   v11:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L133130.   v0:= 1  @length 4;
#L133132.   if v11 <= v0 then goto L133142;
#L133136.   if v5 == 0 then goto L133140;
#L13313a.   v0:= 0  @length 4;
#L13313c.   v5.[|java:util:concurrent:FutureTask$WaitNode.thread|]  := v0 @type object;
#L133140.   return v11;
#L133142.   if v5 != 0 then goto L133152;
#L133146.   v5:= new [|java:util:concurrent:FutureTask$WaitNode|];
#L13314a.   call temp:=  [|java:util:concurrent:FutureTask$WaitNode.<init>|](v5) @signature [|Ljava/util/concurrent/FutureTask$WaitNode;.<init>:()V|] @classDescriptor [|java:util:concurrent:FutureTask$WaitNode|] @type direct;
#L133150.   goto L133108;
#L133152.   if v10 != 0 then goto L133172;
#L133156.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L13315a.   v2:= @@[|java:util:concurrent:FutureTask.waitersOffset|]   @wide;
#L13315e.   v4:= v12.[|java:util:concurrent:FutureTask.waiters|]   @type object;
#L133162.   v5.[|java:util:concurrent:FutureTask$WaitNode.next|]  := v4 @type object;
#L133166.   v1:= v12  @type object;
#L133168.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13316e.   v10:= temp;
#L133170.   goto L133108;
#L133172.   if v13 == 0 then goto L1331a6;
#L133176.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L13317c.   v8:= temp  @type wide;
#L13317e.   v0:= v8 - v6  @type long;
#L133182.   v14:= v14 - v0  @type long;
#L133184.   v0:= 0  @length wide16;
#L133188.   v0:= cmp(v14,v0);
#L13318c.   if v0 > 0 then goto L13319c;
#L133190.   call temp:=  [|java:util:concurrent:FutureTask.removeWaiter|](v12, v5) @signature [|Ljava/util/concurrent/FutureTask;.removeWaiter:(Ljava/util/concurrent/FutureTask$WaitNode;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L133196.   v11:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L13319a.   goto L133140;
#L13319c.   v6:= v8  @type wide;
#L13319e.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v12, v14, v15) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L1331a4.   goto L133108;
#L1331a6.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v12) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L1331ac.   goto L133108;

   }
    procedure [|void|] [|java:util:concurrent:FutureTask.finishCompletion|] ([|java:util:concurrent:FutureTask|] v8 @type (this)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.finishCompletion:()V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:FutureTask$WaitNode|] v6 @varname [|next|] @scope ((L001b,L001d), (L0023,L0027));
        [|java:lang:Thread|] v7 @varname [|t|] @scope ((L0012,L001d), (L0023,L0027));
        [|java:util:concurrent:FutureTask$WaitNode|] v4 @varname [|q|] @scope ((L0003,L0027));

        v0;
        v1;
        v2;
        v3;
        v5;
      
#L1331c0.   v5:= 0  @length 4;
#L1331c2.   v4:= v8.[|java:util:concurrent:FutureTask.waiters|]   @type object;
#L1331c6.   if v4 == 0 then goto L1331fa;
#L1331ca.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L1331ce.   v2:= @@[|java:util:concurrent:FutureTask.waitersOffset|]   @wide;
#L1331d2.   v1:= v8  @type object;
#L1331d4.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1331da.   v0:= temp;
#L1331dc.   if v0 == 0 then goto L1331c2;
#L1331e0.   v7:= v4.[|java:util:concurrent:FutureTask$WaitNode.thread|]   @type object;
#L1331e4.   if v7 == 0 then goto L1331f2;
#L1331e8.   v4.[|java:util:concurrent:FutureTask$WaitNode.thread|]  := v5 @type object;
#L1331ec.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v7) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L1331f2.   v6:= v4.[|java:util:concurrent:FutureTask$WaitNode.next|]   @type object;
#L1331f6.   if v6 != 0 then goto L133206;
#L1331fa.   call temp:=  [|java:util:concurrent:FutureTask.done|](v8) @signature [|Ljava/util/concurrent/FutureTask;.done:()V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type virtual;
#L133200.   v8.[|java:util:concurrent:FutureTask.callable|]  := v5 @type object;
#L133204.   return @void ;
#L133206.   v4.[|java:util:concurrent:FutureTask$WaitNode.next|]  := v5 @type object;
#L13320a.   v4:= v6  @type object;
#L13320c.   goto L1331e0;

   }
    procedure [|void|] [|java:util:concurrent:FutureTask.handlePossibleCancellationInterrupt|] ([|java:util:concurrent:FutureTask|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.handlePossibleCancellationInterrupt:(I)V|] @Access PRIVATE {
      local temp ;



        v0;
        v1;
      
#L133220.   v1:= 5  @length 4;
#L133222.   if v3 != v1 then goto L133236;
#L133226.   v0:= v2.[|java:util:concurrent:FutureTask.state|] ;
#L13322a.   if v0 != v1 then goto L133236;
#L13322e.   call temp:=  [|java:lang:Thread.yield|]() @signature [|Ljava/lang/Thread;.yield:()V|] @classDescriptor [|java:lang:Thread|] @type static;
#L133234.   goto L133226;
#L133236.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:FutureTask.removeWaiter|] ([|java:util:concurrent:FutureTask|] v7 @type (this), [|java:util:concurrent:FutureTask$WaitNode|] v8 @type (object)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.removeWaiter:(Ljava/util/concurrent/FutureTask$WaitNode;)V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:FutureTask$WaitNode|] v4 @varname [|q|] @scope ((L0008,L0028));
        [|java:util:concurrent:FutureTask$WaitNode|] v5 @varname [|s|] @scope ((L000c,L0028));
        [|java:util:concurrent:FutureTask$WaitNode|] v6 @varname [|pred|] @scope ((L0006,L0028));


        v0;
        v1;
        v2;
        v3;
      
#L133248.   if v8 == 0 then goto L133298;
#L13324c.   v0:= 0  @length 4;
#L13324e.   v8.[|java:util:concurrent:FutureTask$WaitNode.thread|]  := v0 @type object;
#L133252.   v6:= 0  @length 4;
#L133254.   v4:= v7.[|java:util:concurrent:FutureTask.waiters|]   @type object;
#L133258.   if v4 == 0 then goto L133298;
#L13325c.   v5:= v4.[|java:util:concurrent:FutureTask$WaitNode.next|]   @type object;
#L133260.   v0:= v4.[|java:util:concurrent:FutureTask$WaitNode.thread|]   @type object;
#L133264.   if v0 == 0 then goto L13326e;
#L133268.   v6:= v4  @type object;
#L13326a.   v4:= v5  @type object;
#L13326c.   goto L133258;
#L13326e.   if v6 == 0 then goto L133280;
#L133272.   v6.[|java:util:concurrent:FutureTask$WaitNode.next|]  := v5 @type object;
#L133276.   v0:= v6.[|java:util:concurrent:FutureTask$WaitNode.thread|]   @type object;
#L13327a.   if v0 != 0 then goto L13326a;
#L13327e.   goto L133252;
#L133280.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L133284.   v2:= @@[|java:util:concurrent:FutureTask.waitersOffset|]   @wide;
#L133288.   v1:= v7  @type object;
#L13328a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L133290.   v0:= temp;
#L133292.   if v0 != 0 then goto L13326a;
#L133296.   goto L133252;
#L133298.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:FutureTask.report|] ([|java:util:concurrent:FutureTask|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.report:(I)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v0 @varname [|v|] @scope ((L0006,L0007));
        [|java:lang:Object|] v1 @varname [|x|] @scope ((L0002,L0014));


        v2;
      
#L1332ac.   v1:= v3.[|java:util:concurrent:FutureTask.outcome|]   @type object;
#L1332b0.   v2:= 2  @length 4;
#L1332b2.   if v4 != v2 then goto L1332ba;
#L1332b6.   v0:= v1  @type object;
#L1332b8.   return v0  @type object;
#L1332ba.   v2:= 4  @length 4;
#L1332bc.   if v4 < v2 then goto L1332cc;
#L1332c0.   v2:= new [|java:util:concurrent:CancellationException|];
#L1332c4.   call temp:=  [|java:util:concurrent:CancellationException.<init>|](v2) @signature [|Ljava/util/concurrent/CancellationException;.<init>:()V|] @classDescriptor [|java:util:concurrent:CancellationException|] @type direct;
#L1332ca.   throw v2;
#L1332cc.   v2:= new [|java:util:concurrent:ExecutionException|];
#L1332d0.   v1:= ([|java:lang:Throwable|])v1;
#L1332d4.   call temp:=  [|java:util:concurrent:ExecutionException.<init>|](v2, v1) @signature [|Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:ExecutionException|] @type direct;
#L1332da.   throw v2;

   }
    procedure [|boolean|] [|java:util:concurrent:FutureTask.cancel|] ([|java:util:concurrent:FutureTask|] v7 @type (this), [|boolean|] v8) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.cancel:(Z)Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:Thread|] v6 @varname [|t|] @scope ((L0016,L0023));


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1332ec.   v4:= 0  @length 4;
#L1332ee.   v0:= v7.[|java:util:concurrent:FutureTask.state|] ;
#L1332f2.   if v0 == 0 then goto L1332f8;
#L1332f6.   return v4;
#L1332f8.   if v8 == 0 then goto L13333c;
#L1332fc.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L133300.   v2:= @@[|java:util:concurrent:FutureTask.stateOffset|]   @wide;
#L133304.   v5:= 5  @length 4;
#L133306.   v1:= v7  @type object;
#L133308.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13330e.   v0:= temp;
#L133310.   if v0 == 0 then goto L1332f6;
#L133314.   v6:= v7.[|java:util:concurrent:FutureTask.runner|]   @type object;
#L133318.   if v6 == 0 then goto L133322;
#L13331c.   call temp:=  [|java:lang:Thread.interrupt|](v6) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133322.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L133326.   v1:= @@[|java:util:concurrent:FutureTask.stateOffset|]   @wide;
#L13332a.   v3:= 6  @length 4;
#L13332c.   call temp:=  [|sun:misc:Unsafe.putOrderedInt|](v0, v7, v1, v2, v3) @signature [|Lsun/misc/Unsafe;.putOrderedInt:(Ljava/lang/Object;JI)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L133332.   call temp:=  [|java:util:concurrent:FutureTask.finishCompletion|](v7) @signature [|Ljava/util/concurrent/FutureTask;.finishCompletion:()V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L133338.   v4:= 1  @length 4;
#L13333a.   goto L1332f6;
#L13333c.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L133340.   v2:= @@[|java:util:concurrent:FutureTask.stateOffset|]   @wide;
#L133344.   v5:= 4  @length 4;
#L133346.   v1:= v7  @type object;
#L133348.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13334e.   v0:= temp;
#L133350.   if v0 != 0 then goto L133332;
#L133354.   goto L1332f6;

   }
    procedure [|void|] [|java:util:concurrent:FutureTask.done|] ([|java:util:concurrent:FutureTask|] v0 @type (this)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.done:()V|] @Access PROTECTED {
      local temp ;


      
#L133368.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:FutureTask.get|] ([|java:util:concurrent:FutureTask|] v4 @type (this)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.get:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|s|] @scope ((L0002,L0011));

        v1;
        v2;
        v3;
      
#L13337c.   v0:= v4.[|java:util:concurrent:FutureTask.state|] ;
#L133380.   v1:= 1  @length 4;
#L133382.   if v0 > v1 then goto L133394;
#L133386.   v1:= 0  @length 4;
#L133388.   v2:= 0  @length wide16;
#L13338c.   call temp:=  [|java:util:concurrent:FutureTask.awaitDone|](v4, v1, v2, v3) @signature [|Ljava/util/concurrent/FutureTask;.awaitDone:(ZJ)I|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L133392.   v0:= temp;
#L133394.   call temp:=  [|java:util:concurrent:FutureTask.report|](v4, v0) @signature [|Ljava/util/concurrent/FutureTask;.report:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L13339a.   v1:= temp  @type object;
#L13339c.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:FutureTask.get|] ([|java:util:concurrent:FutureTask|] v4 @type (this), [|long|] v5, [|java:util:concurrent:TimeUnit|] v7 @type (object)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|s|] @scope ((L000b,L0022));



        v1;
        v2;
        v3;
      
#L1333b0.   v3:= 1  @length 4;
#L1333b2.   if v7 != 0 then goto L1333c2;
#L1333b6.   v1:= new [|java:lang:NullPointerException|];
#L1333ba.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1333c0.   throw v1;
#L1333c2.   v0:= v4.[|java:util:concurrent:FutureTask.state|] ;
#L1333c6.   if v0 > v3 then goto L1333ea;
#L1333ca.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v7, v5, v6) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L1333d0.   v1:= temp  @type wide;
#L1333d2.   call temp:=  [|java:util:concurrent:FutureTask.awaitDone|](v4, v3, v1, v2) @signature [|Ljava/util/concurrent/FutureTask;.awaitDone:(ZJ)I|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L1333d8.   v0:= temp;
#L1333da.   if v0 > v3 then goto L1333ea;
#L1333de.   v1:= new [|java:util:concurrent:TimeoutException|];
#L1333e2.   call temp:=  [|java:util:concurrent:TimeoutException.<init>|](v1) @signature [|Ljava/util/concurrent/TimeoutException;.<init>:()V|] @classDescriptor [|java:util:concurrent:TimeoutException|] @type direct;
#L1333e8.   throw v1;
#L1333ea.   call temp:=  [|java:util:concurrent:FutureTask.report|](v4, v0) @signature [|Ljava/util/concurrent/FutureTask;.report:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L1333f0.   v1:= temp  @type object;
#L1333f2.   return v1  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:FutureTask.isCancelled|] ([|java:util:concurrent:FutureTask|] v2 @type (this)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.isCancelled:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L133404.   v0:= v2.[|java:util:concurrent:FutureTask.state|] ;
#L133408.   v1:= 4  @length 4;
#L13340a.   if v0 < v1 then goto L133412;
#L13340e.   v0:= 1  @length 4;
#L133410.   return v0;
#L133412.   v0:= 0  @length 4;
#L133414.   goto L133410;

   }
    procedure [|boolean|] [|java:util:concurrent:FutureTask.isDone|] ([|java:util:concurrent:FutureTask|] v1 @type (this)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.isDone:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L133428.   v0:= v1.[|java:util:concurrent:FutureTask.state|] ;
#L13342c.   if v0 == 0 then goto L133434;
#L133430.   v0:= 1  @length 4;
#L133432.   return v0;
#L133434.   v0:= 0  @length 4;
#L133436.   goto L133432;

   }
    procedure [|void|] [|java:util:concurrent:FutureTask.run|] ([|java:util:concurrent:FutureTask|] v12 @type (this)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.run:()V|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v9 @varname [|result|] @scope ((L0022,L0023), (L0034,L0039));
        [|boolean|] v8 @varname [|ran|] @scope ((L0023,L0028), (L0035,L0039));
        [|int|] v10 @varname [|s|] @scope ((L002c,L0032), (L003e,L0044));
        [|java:util:concurrent:Callable|] v6 @varname [|c|] @scope ((L0018,L0039));
        [|java:lang:Throwable|] v7 @varname [|ex|] @scope ((L0033,L0039));

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v11;
      
#L133448.   v11:= 5  @length 4;
#L13344a.   v4:= 0  @length 4;
#L13344c.   v0:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L133450.   if v0 != 0 then goto L133472;
#L133454.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L133458.   v2:= @@[|java:util:concurrent:FutureTask.runnerOffset|]   @wide;
#L13345c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L133462.   v5:= temp  @type object;
#L133464.   v1:= v12  @type object;
#L133466.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13346c.   v0:= temp;
#L13346e.   if v0 != 0 then goto L133474;
#L133472.   return @void ;
#L133474.   v6:= v12.[|java:util:concurrent:FutureTask.callable|]   @type object;
#L133478.   if v6 == 0 then goto L133498;
#L13347c.   v0:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L133480.   if v0 != 0 then goto L133498;
#L133484.   call temp:=  [|java:util:concurrent:Callable.call|](v6) @signature [|Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Callable|] @type interface;
#L13348a.   v9:= temp  @type object;
#L13348c.   v8:= 1  @length 4;
#L13348e.   if v8 == 0 then goto L133498;
#L133492.   call temp:=  [|java:util:concurrent:FutureTask.set|](v12, v9) @signature [|Ljava/util/concurrent/FutureTask;.set:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type virtual;
#L133498.   v12.[|java:util:concurrent:FutureTask.runner|]  := v4 @type object;
#L13349c.   v10:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L1334a0.   if v10 < v11 then goto L133472;
#L1334a4.   call temp:=  [|java:util:concurrent:FutureTask.handlePossibleCancellationInterrupt|](v12, v10) @signature [|Ljava/util/concurrent/FutureTask;.handlePossibleCancellationInterrupt:(I)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L1334aa.   goto L133472;
#L1334ac.   v7:= Exception  @type object;
#L1334ae.   v9:= 0  @length 4;
#L1334b0.   v8:= 0  @length 4;
#L1334b2.   call temp:=  [|java:util:concurrent:FutureTask.setException|](v12, v7) @signature [|Ljava/util/concurrent/FutureTask;.setException:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type virtual;
#L1334b8.   goto L13348e;
#L1334ba.   v0:= Exception  @type object;
#L1334bc.   v12.[|java:util:concurrent:FutureTask.runner|]  := v4 @type object;
#L1334c0.   v10:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L1334c4.   if v10 < v11 then goto L1334ce;
#L1334c8.   call temp:=  [|java:util:concurrent:FutureTask.handlePossibleCancellationInterrupt|](v12, v10) @signature [|Ljava/util/concurrent/FutureTask;.handlePossibleCancellationInterrupt:(I)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L1334ce.   throw v0;
  catch  [|any|] @[L133474..L133480] goto L1334ba;
  catch  [|java:lang:Throwable|] @[L133484..L13348a] goto L1334ac;
  catch  [|any|] @[L133484..L13348a] goto L1334ba;
  catch  [|any|] @[L133492..L133498] goto L1334ba;
  catch  [|any|] @[L1334b2..L1334b8] goto L1334ba;

   }
    procedure [|boolean|] [|java:util:concurrent:FutureTask.runAndReset|] ([|java:util:concurrent:FutureTask|] v12 @type (this)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.runAndReset:()Z|] @Access PROTECTED {
      local temp ;

        [|java:util:concurrent:Callable|] v6 @varname [|c|] @scope ((L001d,L0039), (L0044,L0046));
        [|java:lang:Throwable|] v7 @varname [|ex|] @scope ((L0035,L0039));
        [|boolean|] v8 @varname [|ran|] @scope ((L0019,L0046));
        [|int|] v9 @varname [|s|] @scope ((L001b,L0046));

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v10;
        v11;
      
#L133508.   v11:= 5  @length 4;
#L13350a.   v10:= 0  @length 4;
#L13350c.   v4:= 0  @length 4;
#L13350e.   v0:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L133512.   if v0 != 0 then goto L133534;
#L133516.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L13351a.   v2:= @@[|java:util:concurrent:FutureTask.runnerOffset|]   @wide;
#L13351e.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L133524.   v5:= temp  @type object;
#L133526.   v1:= v12  @type object;
#L133528.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13352e.   v0:= temp;
#L133530.   if v0 != 0 then goto L133538;
#L133534.   v0:= v10;
#L133536.   return v0;
#L133538.   v8:= 0  @length 4;
#L13353a.   v9:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L13353e.   v6:= v12.[|java:util:concurrent:FutureTask.callable|]   @type object;
#L133542.   if v6 == 0 then goto L133552;
#L133546.   if v9 != 0 then goto L133552;
#L13354a.   call temp:=  [|java:util:concurrent:Callable.call|](v6) @signature [|Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Callable|] @type interface;
#L133550.   v8:= 1  @length 4;
#L133552.   v12.[|java:util:concurrent:FutureTask.runner|]  := v4 @type object;
#L133556.   v9:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L13355a.   if v9 < v11 then goto L133564;
#L13355e.   call temp:=  [|java:util:concurrent:FutureTask.handlePossibleCancellationInterrupt|](v12, v9) @signature [|Ljava/util/concurrent/FutureTask;.handlePossibleCancellationInterrupt:(I)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L133564.   if v8 == 0 then goto L133590;
#L133568.   if v9 != 0 then goto L133590;
#L13356c.   v0:= 1  @length 4;
#L13356e.   goto L133536;
#L133570.   v7:= Exception  @type object;
#L133572.   call temp:=  [|java:util:concurrent:FutureTask.setException|](v12, v7) @signature [|Ljava/util/concurrent/FutureTask;.setException:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type virtual;
#L133578.   goto L133552;
#L13357a.   v0:= Exception  @type object;
#L13357c.   v12.[|java:util:concurrent:FutureTask.runner|]  := v4 @type object;
#L133580.   v9:= v12.[|java:util:concurrent:FutureTask.state|] ;
#L133584.   if v9 < v11 then goto L13358e;
#L133588.   call temp:=  [|java:util:concurrent:FutureTask.handlePossibleCancellationInterrupt|](v12, v9) @signature [|Ljava/util/concurrent/FutureTask;.handlePossibleCancellationInterrupt:(I)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L13358e.   throw v0;
#L133590.   v0:= v10;
#L133592.   goto L133536;
  catch  [|any|] @[L13353e..L133542] goto L13357a;
  catch  [|java:lang:Throwable|] @[L13354a..L133550] goto L133570;
  catch  [|any|] @[L13354a..L133550] goto L13357a;
  catch  [|any|] @[L133572..L133578] goto L13357a;

   }
    procedure [|void|] [|java:util:concurrent:FutureTask.set|] ([|java:util:concurrent:FutureTask|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.set:(Ljava/lang/Object;)V|] @Access PROTECTED {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1335c4.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L1335c8.   v2:= @@[|java:util:concurrent:FutureTask.stateOffset|]   @wide;
#L1335cc.   v4:= 0  @length 4;
#L1335ce.   v5:= 1  @length 4;
#L1335d0.   v1:= v6  @type object;
#L1335d2.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1335d8.   v0:= temp;
#L1335da.   if v0 == 0 then goto L1335f8;
#L1335de.   v6.[|java:util:concurrent:FutureTask.outcome|]  := v7 @type object;
#L1335e2.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L1335e6.   v1:= @@[|java:util:concurrent:FutureTask.stateOffset|]   @wide;
#L1335ea.   v3:= 2  @length 4;
#L1335ec.   call temp:=  [|sun:misc:Unsafe.putOrderedInt|](v0, v6, v1, v2, v3) @signature [|Lsun/misc/Unsafe;.putOrderedInt:(Ljava/lang/Object;JI)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1335f2.   call temp:=  [|java:util:concurrent:FutureTask.finishCompletion|](v6) @signature [|Ljava/util/concurrent/FutureTask;.finishCompletion:()V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L1335f8.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:FutureTask.setException|] ([|java:util:concurrent:FutureTask|] v6 @type (this), [|java:lang:Throwable|] v7 @type (object)) @owner [|java:util:concurrent:FutureTask|] @signature [|Ljava/util/concurrent/FutureTask;.setException:(Ljava/lang/Throwable;)V|] @Access PROTECTED {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13360c.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L133610.   v2:= @@[|java:util:concurrent:FutureTask.stateOffset|]   @wide;
#L133614.   v4:= 0  @length 4;
#L133616.   v5:= 1  @length 4;
#L133618.   v1:= v6  @type object;
#L13361a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L133620.   v0:= temp;
#L133622.   if v0 == 0 then goto L133640;
#L133626.   v6.[|java:util:concurrent:FutureTask.outcome|]  := v7 @type object;
#L13362a.   v0:= @@[|java:util:concurrent:FutureTask.UNSAFE|]   @type object;
#L13362e.   v1:= @@[|java:util:concurrent:FutureTask.stateOffset|]   @wide;
#L133632.   v3:= 3  @length 4;
#L133634.   call temp:=  [|sun:misc:Unsafe.putOrderedInt|](v0, v6, v1, v2, v3) @signature [|Lsun/misc/Unsafe;.putOrderedInt:(Ljava/lang/Object;JI)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13363a.   call temp:=  [|java:util:concurrent:FutureTask.finishCompletion|](v6) @signature [|Ljava/util/concurrent/FutureTask;.finishCompletion:()V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L133640.   return @void ;

   }
record [|java:util:concurrent:ExecutorCompletionService$QueueingFuture|]  @type class @AccessFlag   extends [|java:util:concurrent:FutureTask|] {
      [|java:util:concurrent:Future|] [|java:util:concurrent:ExecutorCompletionService$QueueingFuture.task|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:ExecutorCompletionService|] [|java:util:concurrent:ExecutorCompletionService$QueueingFuture.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ExecutorCompletionService$QueueingFuture.<init>|] ([|java:util:concurrent:ExecutorCompletionService$QueueingFuture|] v1 @type (this), [|java:util:concurrent:ExecutorCompletionService|] v2 @type (object), [|java:util:concurrent:RunnableFuture|] v3 @type (object)) @owner [|java:util:concurrent:ExecutorCompletionService$QueueingFuture|] @signature [|Ljava/util/concurrent/ExecutorCompletionService$QueueingFuture;.<init>:(Ljava/util/concurrent/ExecutorCompletionService;Ljava/util/concurrent/RunnableFuture;)V|] @Access CONSTRUCTOR {
      local temp ;



        v0;
      
#L133654.   v1.[|java:util:concurrent:ExecutorCompletionService$QueueingFuture.this$0|]  := v2 @type object;
#L133658.   v0:= 0  @length 4;
#L13365a.   call temp:=  [|java:util:concurrent:FutureTask.<init>|](v1, v3, v0) @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L133660.   v1.[|java:util:concurrent:ExecutorCompletionService$QueueingFuture.task|]  := v3 @type object;
#L133664.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ExecutorCompletionService$QueueingFuture.done|] ([|java:util:concurrent:ExecutorCompletionService$QueueingFuture|] v2 @type (this)) @owner [|java:util:concurrent:ExecutorCompletionService$QueueingFuture|] @signature [|Ljava/util/concurrent/ExecutorCompletionService$QueueingFuture;.done:()V|] @Access PROTECTED {
      local temp ;


        v0;
        v1;
      
#L133678.   v0:= v2.[|java:util:concurrent:ExecutorCompletionService$QueueingFuture.this$0|]   @type object;
#L13367c.   call temp:=  [|java:util:concurrent:ExecutorCompletionService.access$000|](v0) @signature [|Ljava/util/concurrent/ExecutorCompletionService;.access$000:(Ljava/util/concurrent/ExecutorCompletionService;)Ljava/util/concurrent/BlockingQueue;|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService|] @type static;
#L133682.   v0:= temp  @type object;
#L133684.   v1:= v2.[|java:util:concurrent:ExecutorCompletionService$QueueingFuture.task|]   @type object;
#L133688.   call temp:=  [|java:util:concurrent:BlockingQueue.add|](v0, v1) @signature [|Ljava/util/concurrent/BlockingQueue;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13368e.   return @void ;

   }
record [|java:util:concurrent:ExecutorCompletionService|]  @type class @AccessFlag PUBLIC extends  [|java:util:concurrent:CompletionService|] {
      [|java:util:concurrent:AbstractExecutorService|] [|java:util:concurrent:ExecutorCompletionService.aes|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:BlockingQueue|] [|java:util:concurrent:ExecutorCompletionService.completionQueue|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:Executor|] [|java:util:concurrent:ExecutorCompletionService.executor|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:ExecutorCompletionService.<init>|] ([|java:util:concurrent:ExecutorCompletionService|] v1 @type (this), [|java:util:concurrent:Executor|] v2 @type (object)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.<init>:(Ljava/util/concurrent/Executor;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




        v0;
      
#L1336a0.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1336a6.   if v2 != 0 then goto L1336b6;
#L1336aa.   v0:= new [|java:lang:NullPointerException|];
#L1336ae.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1336b4.   throw v0;
#L1336b6.   v1.[|java:util:concurrent:ExecutorCompletionService.executor|]  := v2 @type object;
#L1336ba.   v0:= instanceof @varname v2 @type [|java:util:concurrent:AbstractExecutorService|];
#L1336be.   if v0 == 0 then goto L1336da;
#L1336c2.   v2:= ([|java:util:concurrent:AbstractExecutorService|])v2;
#L1336c6.   v1.[|java:util:concurrent:ExecutorCompletionService.aes|]  := v2 @type object;
#L1336ca.   v0:= new [|java:util:concurrent:LinkedBlockingQueue|];
#L1336ce.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.<init>|](v0) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L1336d4.   v1.[|java:util:concurrent:ExecutorCompletionService.completionQueue|]  := v0 @type object;
#L1336d8.   return @void ;
#L1336da.   v2:= 0  @length 4;
#L1336dc.   goto L1336c6;

   }
    procedure [|void|] [|java:util:concurrent:ExecutorCompletionService.<init>|] ([|java:util:concurrent:ExecutorCompletionService|] v1 @type (this), [|java:util:concurrent:Executor|] v2 @type (object), [|java:util:concurrent:BlockingQueue|] v3 @type (object)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.<init>:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/BlockingQueue;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;





        v0;
      
#L1336f0.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1336f6.   if v2 == 0 then goto L1336fe;
#L1336fa.   if v3 != 0 then goto L13370a;
#L1336fe.   v0:= new [|java:lang:NullPointerException|];
#L133702.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L133708.   throw v0;
#L13370a.   v1.[|java:util:concurrent:ExecutorCompletionService.executor|]  := v2 @type object;
#L13370e.   v0:= instanceof @varname v2 @type [|java:util:concurrent:AbstractExecutorService|];
#L133712.   if v0 == 0 then goto L133724;
#L133716.   v2:= ([|java:util:concurrent:AbstractExecutorService|])v2;
#L13371a.   v1.[|java:util:concurrent:ExecutorCompletionService.aes|]  := v2 @type object;
#L13371e.   v1.[|java:util:concurrent:ExecutorCompletionService.completionQueue|]  := v3 @type object;
#L133722.   return @void ;
#L133724.   v2:= 0  @length 4;
#L133726.   goto L13371a;

   }
    procedure [|java:util:concurrent:BlockingQueue|] [|java:util:concurrent:ExecutorCompletionService.access$000|] ([|java:util:concurrent:ExecutorCompletionService|] v1 @type (object)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.access$000:(Ljava/util/concurrent/ExecutorCompletionService;)Ljava/util/concurrent/BlockingQueue;|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L133738.   v0:= v1.[|java:util:concurrent:ExecutorCompletionService.completionQueue|]   @type object;
#L13373c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:RunnableFuture|] [|java:util:concurrent:ExecutorCompletionService.newTaskFor|] ([|java:util:concurrent:ExecutorCompletionService|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.newTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;|] @Access PRIVATE {
      local temp ;




        v0;
      
#L133750.   v0:= v1.[|java:util:concurrent:ExecutorCompletionService.aes|]   @type object;
#L133754.   if v0 != 0 then goto L133764;
#L133758.   v0:= new [|java:util:concurrent:FutureTask|];
#L13375c.   call temp:=  [|java:util:concurrent:FutureTask.<init>|](v0, v2, v3) @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L133762.   return v0  @type object;
#L133764.   v0:= v1.[|java:util:concurrent:ExecutorCompletionService.aes|]   @type object;
#L133768.   call temp:=  [|java:util:concurrent:AbstractExecutorService.newTaskFor|](v0, v2, v3) @signature [|Ljava/util/concurrent/AbstractExecutorService;.newTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L13376e.   v0:= temp  @type object;
#L133770.   goto L133762;

   }
    procedure [|java:util:concurrent:RunnableFuture|] [|java:util:concurrent:ExecutorCompletionService.newTaskFor|] ([|java:util:concurrent:ExecutorCompletionService|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.newTaskFor:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;|] @Access PRIVATE {
      local temp ;



        v0;
      
#L133784.   v0:= v1.[|java:util:concurrent:ExecutorCompletionService.aes|]   @type object;
#L133788.   if v0 != 0 then goto L133798;
#L13378c.   v0:= new [|java:util:concurrent:FutureTask|];
#L133790.   call temp:=  [|java:util:concurrent:FutureTask.<init>|](v0, v2) @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/util/concurrent/Callable;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L133796.   return v0  @type object;
#L133798.   v0:= v1.[|java:util:concurrent:ExecutorCompletionService.aes|]   @type object;
#L13379c.   call temp:=  [|java:util:concurrent:AbstractExecutorService.newTaskFor|](v0, v2) @signature [|Ljava/util/concurrent/AbstractExecutorService;.newTaskFor:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type virtual;
#L1337a2.   v0:= temp  @type object;
#L1337a4.   goto L133796;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ExecutorCompletionService.poll|] ([|java:util:concurrent:ExecutorCompletionService|] v1 @type (this)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.poll:()Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1337b8.   v0:= v1.[|java:util:concurrent:ExecutorCompletionService.completionQueue|]   @type object;
#L1337bc.   call temp:=  [|java:util:concurrent:BlockingQueue.poll|](v0) @signature [|Ljava/util/concurrent/BlockingQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L1337c2.   v0:= temp  @type object;
#L1337c4.   v0:= ([|java:util:concurrent:Future|])v0;
#L1337c8.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ExecutorCompletionService.poll|] ([|java:util:concurrent:ExecutorCompletionService|] v1 @type (this), [|long|] v2, [|java:util:concurrent:TimeUnit|] v4 @type (object)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L1337dc.   v0:= v1.[|java:util:concurrent:ExecutorCompletionService.completionQueue|]   @type object;
#L1337e0.   call temp:=  [|java:util:concurrent:BlockingQueue.poll|](v0, v2, v3, v4) @signature [|Ljava/util/concurrent/BlockingQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L1337e6.   v0:= temp  @type object;
#L1337e8.   v0:= ([|java:util:concurrent:Future|])v0;
#L1337ec.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ExecutorCompletionService.submit|] ([|java:util:concurrent:ExecutorCompletionService|] v3 @type (this), [|java:lang:Runnable|] v4 @type (object), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:RunnableFuture|] v0 @varname [|f|] @scope ((L000c,L0017));



        v1;
        v2;
      
#L133800.   if v4 != 0 then goto L133810;
#L133804.   v1:= new [|java:lang:NullPointerException|];
#L133808.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13380e.   throw v1;
#L133810.   call temp:=  [|java:util:concurrent:ExecutorCompletionService.newTaskFor|](v3, v4, v5) @signature [|Ljava/util/concurrent/ExecutorCompletionService;.newTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService|] @type direct;
#L133816.   v0:= temp  @type object;
#L133818.   v1:= v3.[|java:util:concurrent:ExecutorCompletionService.executor|]   @type object;
#L13381c.   v2:= new [|java:util:concurrent:ExecutorCompletionService$QueueingFuture|];
#L133820.   call temp:=  [|java:util:concurrent:ExecutorCompletionService$QueueingFuture.<init>|](v2, v3, v0) @signature [|Ljava/util/concurrent/ExecutorCompletionService$QueueingFuture;.<init>:(Ljava/util/concurrent/ExecutorCompletionService;Ljava/util/concurrent/RunnableFuture;)V|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService$QueueingFuture|] @type direct;
#L133826.   call temp:=  [|java:util:concurrent:Executor.execute|](v1, v2) @signature [|Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:Executor|] @type interface;
#L13382c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ExecutorCompletionService.submit|] ([|java:util:concurrent:ExecutorCompletionService|] v3 @type (this), [|java:util:concurrent:Callable|] v4 @type (object)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:RunnableFuture|] v0 @varname [|f|] @scope ((L000c,L0017));


        v1;
        v2;
      
#L133840.   if v4 != 0 then goto L133850;
#L133844.   v1:= new [|java:lang:NullPointerException|];
#L133848.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13384e.   throw v1;
#L133850.   call temp:=  [|java:util:concurrent:ExecutorCompletionService.newTaskFor|](v3, v4) @signature [|Ljava/util/concurrent/ExecutorCompletionService;.newTaskFor:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService|] @type direct;
#L133856.   v0:= temp  @type object;
#L133858.   v1:= v3.[|java:util:concurrent:ExecutorCompletionService.executor|]   @type object;
#L13385c.   v2:= new [|java:util:concurrent:ExecutorCompletionService$QueueingFuture|];
#L133860.   call temp:=  [|java:util:concurrent:ExecutorCompletionService$QueueingFuture.<init>|](v2, v3, v0) @signature [|Ljava/util/concurrent/ExecutorCompletionService$QueueingFuture;.<init>:(Ljava/util/concurrent/ExecutorCompletionService;Ljava/util/concurrent/RunnableFuture;)V|] @classDescriptor [|java:util:concurrent:ExecutorCompletionService$QueueingFuture|] @type direct;
#L133866.   call temp:=  [|java:util:concurrent:Executor.execute|](v1, v2) @signature [|Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:Executor|] @type interface;
#L13386c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ExecutorCompletionService.take|] ([|java:util:concurrent:ExecutorCompletionService|] v1 @type (this)) @owner [|java:util:concurrent:ExecutorCompletionService|] @signature [|Ljava/util/concurrent/ExecutorCompletionService;.take:()Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L133880.   v0:= v1.[|java:util:concurrent:ExecutorCompletionService.completionQueue|]   @type object;
#L133884.   call temp:=  [|java:util:concurrent:BlockingQueue.take|](v0) @signature [|Ljava/util/concurrent/BlockingQueue;.take:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13388a.   v0:= temp  @type object;
#L13388c.   v0:= ([|java:util:concurrent:Future|])v0;
#L133890.   return v0  @type object;

   }
record [|java:util:concurrent:Executors$1|]  @type class @AccessFlag FINAL extends  [|java:util:concurrent:Callable|] {
      [|java:security:PrivilegedAction|] [|java:util:concurrent:Executors$1.val$action|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:Executors$1.<init>|] ([|java:util:concurrent:Executors$1|] v0 @type (this), [|java:security:PrivilegedAction|] v1 @type (object)) @owner [|java:util:concurrent:Executors$1|] @signature [|Ljava/util/concurrent/Executors$1;.<init>:(Ljava/security/PrivilegedAction;)V|] @Access CONSTRUCTOR {
      local temp ;

      
#L1338a4.   v0.[|java:util:concurrent:Executors$1.val$action|]  := v1 @type object;
#L1338a8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1338ae.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$1.call|] ([|java:util:concurrent:Executors$1|] v1 @type (this)) @owner [|java:util:concurrent:Executors$1|] @signature [|Ljava/util/concurrent/Executors$1;.call:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L1338c0.   v0:= v1.[|java:util:concurrent:Executors$1.val$action|]   @type object;
#L1338c4.   call temp:=  [|java:security:PrivilegedAction.run|](v0) @signature [|Ljava/security/PrivilegedAction;.run:()Ljava/lang/Object;|] @classDescriptor [|java:security:PrivilegedAction|] @type interface;
#L1338ca.   v0:= temp  @type object;
#L1338cc.   return v0  @type object;

   }
record [|java:util:concurrent:Executors$2|]  @type class @AccessFlag FINAL extends  [|java:util:concurrent:Callable|] {
      [|java:security:PrivilegedExceptionAction|] [|java:util:concurrent:Executors$2.val$action|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:Executors$2.<init>|] ([|java:util:concurrent:Executors$2|] v0 @type (this), [|java:security:PrivilegedExceptionAction|] v1 @type (object)) @owner [|java:util:concurrent:Executors$2|] @signature [|Ljava/util/concurrent/Executors$2;.<init>:(Ljava/security/PrivilegedExceptionAction;)V|] @Access CONSTRUCTOR {
      local temp ;

      
#L1338e0.   v0.[|java:util:concurrent:Executors$2.val$action|]  := v1 @type object;
#L1338e4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1338ea.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$2.call|] ([|java:util:concurrent:Executors$2|] v1 @type (this)) @owner [|java:util:concurrent:Executors$2|] @signature [|Ljava/util/concurrent/Executors$2;.call:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L1338fc.   v0:= v1.[|java:util:concurrent:Executors$2.val$action|]   @type object;
#L133900.   call temp:=  [|java:security:PrivilegedExceptionAction.run|](v0) @signature [|Ljava/security/PrivilegedExceptionAction;.run:()Ljava/lang/Object;|] @classDescriptor [|java:security:PrivilegedExceptionAction|] @type interface;
#L133906.   v0:= temp  @type object;
#L133908.   return v0  @type object;

   }
record [|java:util:concurrent:ThreadFactory|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:ThreadFactory.newThread|] ([|java:lang:Runnable|] v0 @type (object)) @owner [|java:util:concurrent:ThreadFactory|] @signature [|Ljava/util/concurrent/ThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:Executors$DefaultThreadFactory|]  @type class @AccessFlag  extends  [|java:util:concurrent:ThreadFactory|] {
      [|java:lang:ThreadGroup|] [|java:util:concurrent:Executors$DefaultThreadFactory.group|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:String|] [|java:util:concurrent:Executors$DefaultThreadFactory.namePrefix|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:atomic:AtomicInteger|] [|java:util:concurrent:Executors$DefaultThreadFactory.threadNumber|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|java:util:concurrent:atomic:AtomicInteger|] @@[|java:util:concurrent:Executors$DefaultThreadFactory.poolNumber|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:Executors$DefaultThreadFactory.<clinit>|] () @owner [|java:util:concurrent:Executors$DefaultThreadFactory|] @signature [|Ljava/util/concurrent/Executors$DefaultThreadFactory;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L13391c.   v0:= new [|java:util:concurrent:atomic:AtomicInteger|];
#L133920.   v1:= 1  @length 4;
#L133922.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.<init>|](v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type direct;
#L133928.   @@[|java:util:concurrent:Executors$DefaultThreadFactory.poolNumber|] := v0  @type object;
#L13392c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Executors$DefaultThreadFactory.<init>|] ([|java:util:concurrent:Executors$DefaultThreadFactory|] v3 @type (this)) @owner [|java:util:concurrent:Executors$DefaultThreadFactory|] @signature [|Ljava/util/concurrent/Executors$DefaultThreadFactory;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        [|java:lang:SecurityManager|] v0 @varname [|s|] @scope ((L000f,L0042));

        v1;
        v2;
      
#L133940.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L133946.   v1:= new [|java:util:concurrent:atomic:AtomicInteger|];
#L13394a.   v2:= 1  @length 4;
#L13394c.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.<init>|](v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type direct;
#L133952.   v3.[|java:util:concurrent:Executors$DefaultThreadFactory.threadNumber|]  := v1 @type object;
#L133956.   call temp:=  [|java:lang:System.getSecurityManager|]() @signature [|Ljava/lang/System;.getSecurityManager:()Ljava/lang/SecurityManager;|] @classDescriptor [|java:lang:System|] @type static;
#L13395c.   v0:= temp  @type object;
#L13395e.   if v0 == 0 then goto L1339b2;
#L133962.   call temp:=  [|java:lang:SecurityManager.getThreadGroup|](v0) @signature [|Ljava/lang/SecurityManager;.getThreadGroup:()Ljava/lang/ThreadGroup;|] @classDescriptor [|java:lang:SecurityManager|] @type virtual;
#L133968.   v1:= temp  @type object;
#L13396a.   v3.[|java:util:concurrent:Executors$DefaultThreadFactory.group|]  := v1 @type object;
#L13396e.   v1:= new [|java:lang:StringBuilder|];
#L133972.   call temp:=  [|java:lang:StringBuilder.<init>|](v1) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L133978.   v2:= "pool-" @type (object, string);
#L13397c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L133982.   v1:= temp  @type object;
#L133984.   v2:= @@[|java:util:concurrent:Executors$DefaultThreadFactory.poolNumber|]   @type object;
#L133988.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndIncrement|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13398e.   v2:= temp;
#L133990.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L133996.   v1:= temp  @type object;
#L133998.   v2:= "-thread-" @type (object, string);
#L13399c.   call temp:=  [|java:lang:StringBuilder.append|](v1, v2) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1339a2.   v1:= temp  @type object;
#L1339a4.   call temp:=  [|java:lang:StringBuilder.toString|](v1) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1339aa.   v1:= temp  @type object;
#L1339ac.   v3.[|java:util:concurrent:Executors$DefaultThreadFactory.namePrefix|]  := v1 @type object;
#L1339b0.   return @void ;
#L1339b2.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1339b8.   v1:= temp  @type object;
#L1339ba.   call temp:=  [|java:lang:Thread.getThreadGroup|](v1) @signature [|Ljava/lang/Thread;.getThreadGroup:()Ljava/lang/ThreadGroup;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L1339c0.   v1:= temp  @type object;
#L1339c2.   goto L13396a;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:Executors$DefaultThreadFactory.newThread|] ([|java:util:concurrent:Executors$DefaultThreadFactory|] v7 @type (this), [|java:lang:Runnable|] v8 @type (object)) @owner [|java:util:concurrent:Executors$DefaultThreadFactory|] @signature [|Ljava/util/concurrent/Executors$DefaultThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;|] @Access PUBLIC {
      local temp ;
        [|java:lang:Thread|] v0 @varname [|t|] @scope ((L0024,L0038));


        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1339d4.   v6:= 5  @length 4;
#L1339d6.   v0:= new [|java:lang:Thread|];
#L1339da.   v1:= v7.[|java:util:concurrent:Executors$DefaultThreadFactory.group|]   @type object;
#L1339de.   v2:= new [|java:lang:StringBuilder|];
#L1339e2.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1339e8.   v3:= v7.[|java:util:concurrent:Executors$DefaultThreadFactory.namePrefix|]   @type object;
#L1339ec.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1339f2.   v2:= temp  @type object;
#L1339f4.   v3:= v7.[|java:util:concurrent:Executors$DefaultThreadFactory.threadNumber|]   @type object;
#L1339f8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndIncrement|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1339fe.   v3:= temp;
#L133a00.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L133a06.   v2:= temp  @type object;
#L133a08.   call temp:=  [|java:lang:StringBuilder.toString|](v2) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L133a0e.   v3:= temp  @type object;
#L133a10.   v4:= 0  @length wide16;
#L133a14.   v2:= v8  @type object;
#L133a16.   call temp:=  [|java:lang:Thread.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/lang/Thread;.<init>:(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V|] @classDescriptor [|java:lang:Thread|] @type direct;
#L133a1c.   call temp:=  [|java:lang:Thread.isDaemon|](v0) @signature [|Ljava/lang/Thread;.isDaemon:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133a22.   v1:= temp;
#L133a24.   if v1 == 0 then goto L133a30;
#L133a28.   v1:= 0  @length 4;
#L133a2a.   call temp:=  [|java:lang:Thread.setDaemon|](v0, v1) @signature [|Ljava/lang/Thread;.setDaemon:(Z)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133a30.   call temp:=  [|java:lang:Thread.getPriority|](v0) @signature [|Ljava/lang/Thread;.getPriority:()I|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133a36.   v1:= temp;
#L133a38.   if v1 == v6 then goto L133a42;
#L133a3c.   call temp:=  [|java:lang:Thread.setPriority|](v0, v6) @signature [|Ljava/lang/Thread;.setPriority:(I)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133a42.   return v0  @type object;

   }
record [|java:util:concurrent:Executors$DelegatedExecutorService|]  @type class @AccessFlag   extends [|java:util:concurrent:AbstractExecutorService|] {
      [|java:util:concurrent:ExecutorService|] [|java:util:concurrent:Executors$DelegatedExecutorService.e|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:Executors$DelegatedExecutorService.<init>|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v0 @type (this), [|java:util:concurrent:ExecutorService|] v1 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.<init>:(Ljava/util/concurrent/ExecutorService;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L133a54.   call temp:=  [|java:util:concurrent:AbstractExecutorService.<init>|](v0) @signature [|Ljava/util/concurrent/AbstractExecutorService;.<init>:()V|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type direct;
#L133a5a.   v0.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]  := v1 @type object;
#L133a5e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:Executors$DelegatedExecutorService.awaitTermination|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this), [|long|] v2, [|java:util:concurrent:TimeUnit|] v4 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L133a70.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133a74.   call temp:=  [|java:util:concurrent:ExecutorService.awaitTermination|](v0, v2, v3, v4) @signature [|Ljava/util/concurrent/ExecutorService;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133a7a.   v0:= temp;
#L133a7c.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:Executors$DelegatedExecutorService.execute|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.execute:(Ljava/lang/Runnable;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L133a90.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133a94.   call temp:=  [|java:util:concurrent:ExecutorService.execute|](v0, v2) @signature [|Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133a9a.   return @void ;

   }
    procedure [|java:util:List|] [|java:util:concurrent:Executors$DelegatedExecutorService.invokeAll|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.invokeAll:(Ljava/util/Collection;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L133aac.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133ab0.   call temp:=  [|java:util:concurrent:ExecutorService.invokeAll|](v0, v2) @signature [|Ljava/util/concurrent/ExecutorService;.invokeAll:(Ljava/util/Collection;)Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133ab6.   v0:= temp  @type object;
#L133ab8.   return v0  @type object;

   }
    procedure [|java:util:List|] [|java:util:concurrent:Executors$DelegatedExecutorService.invokeAll|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this), [|java:util:Collection|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L133acc.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133ad0.   call temp:=  [|java:util:concurrent:ExecutorService.invokeAll|](v0, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ExecutorService;.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133ad6.   v0:= temp  @type object;
#L133ad8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$DelegatedExecutorService.invokeAny|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L133aec.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133af0.   call temp:=  [|java:util:concurrent:ExecutorService.invokeAny|](v0, v2) @signature [|Ljava/util/concurrent/ExecutorService;.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133af6.   v0:= temp  @type object;
#L133af8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$DelegatedExecutorService.invokeAny|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this), [|java:util:Collection|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L133b0c.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133b10.   call temp:=  [|java:util:concurrent:ExecutorService.invokeAny|](v0, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ExecutorService;.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133b16.   v0:= temp  @type object;
#L133b18.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:Executors$DelegatedExecutorService.isShutdown|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.isShutdown:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L133b2c.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133b30.   call temp:=  [|java:util:concurrent:ExecutorService.isShutdown|](v0) @signature [|Ljava/util/concurrent/ExecutorService;.isShutdown:()Z|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133b36.   v0:= temp;
#L133b38.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:Executors$DelegatedExecutorService.isTerminated|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.isTerminated:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L133b4c.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133b50.   call temp:=  [|java:util:concurrent:ExecutorService.isTerminated|](v0) @signature [|Ljava/util/concurrent/ExecutorService;.isTerminated:()Z|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133b56.   v0:= temp;
#L133b58.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:Executors$DelegatedExecutorService.shutdown|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.shutdown:()V|] @Access PUBLIC {
      local temp ;

        v0;
      
#L133b6c.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133b70.   call temp:=  [|java:util:concurrent:ExecutorService.shutdown|](v0) @signature [|Ljava/util/concurrent/ExecutorService;.shutdown:()V|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133b76.   return @void ;

   }
    procedure [|java:util:List|] [|java:util:concurrent:Executors$DelegatedExecutorService.shutdownNow|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.shutdownNow:()Ljava/util/List;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L133b88.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133b8c.   call temp:=  [|java:util:concurrent:ExecutorService.shutdownNow|](v0) @signature [|Ljava/util/concurrent/ExecutorService;.shutdownNow:()Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133b92.   v0:= temp  @type object;
#L133b94.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:Executors$DelegatedExecutorService.submit|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L133ba8.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133bac.   call temp:=  [|java:util:concurrent:ExecutorService.submit|](v0, v2) @signature [|Ljava/util/concurrent/ExecutorService;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133bb2.   v0:= temp  @type object;
#L133bb4.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:Executors$DelegatedExecutorService.submit|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;



        v0;
      
#L133bc8.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133bcc.   call temp:=  [|java:util:concurrent:ExecutorService.submit|](v0, v2, v3) @signature [|Ljava/util/concurrent/ExecutorService;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133bd2.   v0:= temp  @type object;
#L133bd4.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:Executors$DelegatedExecutorService.submit|] ([|java:util:concurrent:Executors$DelegatedExecutorService|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L133be8.   v0:= v1.[|java:util:concurrent:Executors$DelegatedExecutorService.e|]   @type object;
#L133bec.   call temp:=  [|java:util:concurrent:ExecutorService.submit|](v0, v2) @signature [|Ljava/util/concurrent/ExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @classDescriptor [|java:util:concurrent:ExecutorService|] @type interface;
#L133bf2.   v0:= temp  @type object;
#L133bf4.   return v0  @type object;

   }
record [|java:util:concurrent:ScheduledExecutorService|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:concurrent:ExecutorService|] {
   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:ScheduledExecutorService.schedule|] ([|java:lang:Runnable|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|java:util:concurrent:ScheduledExecutorService|] @signature [|Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:ScheduledExecutorService.schedule|] ([|java:util:concurrent:Callable|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|java:util:concurrent:ScheduledExecutorService|] @signature [|Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:ScheduledExecutorService.scheduleAtFixedRate|] ([|java:lang:Runnable|] v0 @type (object), [|long|] v1, [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:ScheduledExecutorService|] @signature [|Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:ScheduledExecutorService.scheduleWithFixedDelay|] ([|java:lang:Runnable|] v0 @type (object), [|long|] v1, [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:ScheduledExecutorService|] @signature [|Ljava/util/concurrent/ScheduledExecutorService;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|]  @type class @AccessFlag   extends [|java:util:concurrent:Executors$DelegatedExecutorService|], [|java:util:concurrent:ScheduledExecutorService|] {
      [|java:util:concurrent:ScheduledExecutorService|] [|java:util:concurrent:Executors$DelegatedScheduledExecutorService.e|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:Executors$DelegatedScheduledExecutorService.<init>|] ([|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] v0 @type (this), [|java:util:concurrent:ScheduledExecutorService|] v1 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedScheduledExecutorService;.<init>:(Ljava/util/concurrent/ScheduledExecutorService;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L133c08.   call temp:=  [|java:util:concurrent:Executors$DelegatedExecutorService.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.<init>:(Ljava/util/concurrent/ExecutorService;)V|] @classDescriptor [|java:util:concurrent:Executors$DelegatedExecutorService|] @type direct;
#L133c0e.   v0.[|java:util:concurrent:Executors$DelegatedScheduledExecutorService.e|]  := v1 @type object;
#L133c12.   return @void ;

   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:Executors$DelegatedScheduledExecutorService.schedule|] ([|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L133c24.   v0:= v1.[|java:util:concurrent:Executors$DelegatedScheduledExecutorService.e|]   @type object;
#L133c28.   call temp:=  [|java:util:concurrent:ScheduledExecutorService.schedule|](v0, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledExecutorService|] @type interface;
#L133c2e.   v0:= temp  @type object;
#L133c30.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:Executors$DelegatedScheduledExecutorService.schedule|] ([|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L133c44.   v0:= v1.[|java:util:concurrent:Executors$DelegatedScheduledExecutorService.e|]   @type object;
#L133c48.   call temp:=  [|java:util:concurrent:ScheduledExecutorService.schedule|](v0, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledExecutorService|] @type interface;
#L133c4e.   v0:= temp  @type object;
#L133c50.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:Executors$DelegatedScheduledExecutorService.scheduleAtFixedRate|] ([|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] v7 @type (this), [|java:lang:Runnable|] v8 @type (object), [|long|] v9, [|long|] v11, [|java:util:concurrent:TimeUnit|] v13 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC {
      local temp ;





        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L133c64.   v0:= v7.[|java:util:concurrent:Executors$DelegatedScheduledExecutorService.e|]   @type object;
#L133c68.   v1:= v8  @type object;
#L133c6a.   v2:= v9  @type wide;
#L133c6c.   v4:= v11  @type wide;
#L133c6e.   v6:= v13  @type object;
#L133c70.   call temp:=  [|java:util:concurrent:ScheduledExecutorService.scheduleAtFixedRate|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledExecutorService|] @type interface;
#L133c76.   v0:= temp  @type object;
#L133c78.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:Executors$DelegatedScheduledExecutorService.scheduleWithFixedDelay|] ([|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] v7 @type (this), [|java:lang:Runnable|] v8 @type (object), [|long|] v9, [|long|] v11, [|java:util:concurrent:TimeUnit|] v13 @type (object)) @owner [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] @signature [|Ljava/util/concurrent/Executors$DelegatedScheduledExecutorService;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC {
      local temp ;





        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L133c8c.   v0:= v7.[|java:util:concurrent:Executors$DelegatedScheduledExecutorService.e|]   @type object;
#L133c90.   v1:= v8  @type object;
#L133c92.   v2:= v9  @type wide;
#L133c94.   v4:= v11  @type wide;
#L133c96.   v6:= v13  @type object;
#L133c98.   call temp:=  [|java:util:concurrent:ScheduledExecutorService.scheduleWithFixedDelay|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ScheduledExecutorService;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledExecutorService|] @type interface;
#L133c9e.   v0:= temp  @type object;
#L133ca0.   return v0  @type object;

   }
record [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService|]  @type class @AccessFlag   extends [|java:util:concurrent:Executors$DelegatedExecutorService|] {
   }
    procedure [|void|] [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService.<init>|] ([|java:util:concurrent:Executors$FinalizableDelegatedExecutorService|] v0 @type (this), [|java:util:concurrent:ExecutorService|] v1 @type (object)) @owner [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$FinalizableDelegatedExecutorService;.<init>:(Ljava/util/concurrent/ExecutorService;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L133cb4.   call temp:=  [|java:util:concurrent:Executors$DelegatedExecutorService.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.<init>:(Ljava/util/concurrent/ExecutorService;)V|] @classDescriptor [|java:util:concurrent:Executors$DelegatedExecutorService|] @type direct;
#L133cba.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService.finalize|] ([|java:util:concurrent:Executors$FinalizableDelegatedExecutorService|] v0 @type (this)) @owner [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService|] @signature [|Ljava/util/concurrent/Executors$FinalizableDelegatedExecutorService;.finalize:()V|] @Access PROTECTED {
      local temp ;

      
#L133ccc.   call temp:=  [|java:util:concurrent:Executors$DelegatedExecutorService.shutdown|](v0) @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.shutdown:()V|] @classDescriptor [|java:util:concurrent:Executors$DelegatedExecutorService|] @type super;
#L133cd2.   return @void ;

   }
record [|java:util:concurrent:Executors$PrivilegedCallable$1|]  @type class @AccessFlag  extends  [|java:security:PrivilegedExceptionAction|] {
      [|java:util:concurrent:Executors$PrivilegedCallable|] [|java:util:concurrent:Executors$PrivilegedCallable$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:Executors$PrivilegedCallable$1.<init>|] ([|java:util:concurrent:Executors$PrivilegedCallable$1|] v0 @type (this), [|java:util:concurrent:Executors$PrivilegedCallable|] v1 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedCallable$1|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallable$1;.<init>:(Ljava/util/concurrent/Executors$PrivilegedCallable;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L133ce4.   v0.[|java:util:concurrent:Executors$PrivilegedCallable$1.this$0|]  := v1 @type object;
#L133ce8.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L133cee.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$PrivilegedCallable$1.run|] ([|java:util:concurrent:Executors$PrivilegedCallable$1|] v1 @type (this)) @owner [|java:util:concurrent:Executors$PrivilegedCallable$1|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallable$1;.run:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L133d00.   v0:= v1.[|java:util:concurrent:Executors$PrivilegedCallable$1.this$0|]   @type object;
#L133d04.   call temp:=  [|java:util:concurrent:Executors$PrivilegedCallable.access$000|](v0) @signature [|Ljava/util/concurrent/Executors$PrivilegedCallable;.access$000:(Ljava/util/concurrent/Executors$PrivilegedCallable;)Ljava/util/concurrent/Callable;|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedCallable|] @type static;
#L133d0a.   v0:= temp  @type object;
#L133d0c.   call temp:=  [|java:util:concurrent:Callable.call|](v0) @signature [|Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Callable|] @type interface;
#L133d12.   v0:= temp  @type object;
#L133d14.   return v0  @type object;

   }
record [|java:util:concurrent:Executors$PrivilegedCallable|]  @type class @AccessFlag FINAL extends  [|java:util:concurrent:Callable|] {
      [|java:security:AccessControlContext|] [|java:util:concurrent:Executors$PrivilegedCallable.acc|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors$PrivilegedCallable.task|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:Executors$PrivilegedCallable.<init>|] ([|java:util:concurrent:Executors$PrivilegedCallable|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedCallable|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallable;.<init>:(Ljava/util/concurrent/Callable;)V|] @Access CONSTRUCTOR {
      local temp ;



        v0;
      
#L133d28.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L133d2e.   v1.[|java:util:concurrent:Executors$PrivilegedCallable.task|]  := v2 @type object;
#L133d32.   call temp:=  [|java:security:AccessController.getContext|]() @signature [|Ljava/security/AccessController;.getContext:()Ljava/security/AccessControlContext;|] @classDescriptor [|java:security:AccessController|] @type static;
#L133d38.   v0:= temp  @type object;
#L133d3a.   v1.[|java:util:concurrent:Executors$PrivilegedCallable.acc|]  := v0 @type object;
#L133d3e.   return @void ;

   }
    procedure [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors$PrivilegedCallable.access$000|] ([|java:util:concurrent:Executors$PrivilegedCallable|] v1 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedCallable|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallable;.access$000:(Ljava/util/concurrent/Executors$PrivilegedCallable;)Ljava/util/concurrent/Callable;|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L133d50.   v0:= v1.[|java:util:concurrent:Executors$PrivilegedCallable.task|]   @type object;
#L133d54.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$PrivilegedCallable.call|] ([|java:util:concurrent:Executors$PrivilegedCallable|] v3 @type (this)) @owner [|java:util:concurrent:Executors$PrivilegedCallable|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallable;.call:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:security:PrivilegedActionException|] v0 @varname [|e|] @scope ((L000d,L0012));

        v1;
        v2;
      
#L133d68.   v1:= new [|java:util:concurrent:Executors$PrivilegedCallable$1|];
#L133d6c.   call temp:=  [|java:util:concurrent:Executors$PrivilegedCallable$1.<init>|](v1, v3) @signature [|Ljava/util/concurrent/Executors$PrivilegedCallable$1;.<init>:(Ljava/util/concurrent/Executors$PrivilegedCallable;)V|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedCallable$1|] @type direct;
#L133d72.   v2:= v3.[|java:util:concurrent:Executors$PrivilegedCallable.acc|]   @type object;
#L133d76.   call temp:=  [|java:security:AccessController.doPrivileged|](v1, v2) @signature [|Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;|] @classDescriptor [|java:security:AccessController|] @type static;
#L133d7c.   v1:= temp  @type object;
#L133d7e.   return v1  @type object;
#L133d80.   v0:= Exception  @type object;
#L133d82.   call temp:=  [|java:security:PrivilegedActionException.getException|](v0) @signature [|Ljava/security/PrivilegedActionException;.getException:()Ljava/lang/Exception;|] @classDescriptor [|java:security:PrivilegedActionException|] @type virtual;
#L133d88.   v1:= temp  @type object;
#L133d8a.   throw v1;
  catch  [|java:security:PrivilegedActionException|] @[L133d68..L133d7c] goto L133d80;

   }
record [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1|]  @type class @AccessFlag  extends  [|java:security:PrivilegedExceptionAction|] {
      [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1.<init>|] ([|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1|] v0 @type (this), [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] v1 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader$1;.<init>:(Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L133dac.   v0.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1.this$0|]  := v1 @type object;
#L133db0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L133db6.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1.run|] ([|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1|] v4 @type (this)) @owner [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader$1;.run:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:ClassLoader|] v0 @varname [|cl|] @scope ((L0009,L002b));
        [|java:lang:ClassLoader|] v1 @varname [|savedcl|] @scope ((L0001,L0032));
        [|java:lang:Thread|] v2 @varname [|t|] @scope ((L0005,L0032));

        v3;
      
#L133dc8.   v1:= 0  @length 4;
#L133dca.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L133dd0.   v2:= temp  @type object;
#L133dd2.   call temp:=  [|java:lang:Thread.getContextClassLoader|](v2) @signature [|Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133dd8.   v0:= temp  @type object;
#L133dda.   v3:= v4.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1.this$0|]   @type object;
#L133dde.   call temp:=  [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.access$100|](v3) @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;.access$100:(Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;)Ljava/lang/ClassLoader;|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] @type static;
#L133de4.   v3:= temp  @type object;
#L133de6.   if v3 == v0 then goto L133dfe;
#L133dea.   v3:= v4.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1.this$0|]   @type object;
#L133dee.   call temp:=  [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.access$100|](v3) @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;.access$100:(Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;)Ljava/lang/ClassLoader;|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] @type static;
#L133df4.   v3:= temp  @type object;
#L133df6.   call temp:=  [|java:lang:Thread.setContextClassLoader|](v2, v3) @signature [|Ljava/lang/Thread;.setContextClassLoader:(Ljava/lang/ClassLoader;)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133dfc.   v1:= v0  @type object;
#L133dfe.   v3:= v4.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1.this$0|]   @type object;
#L133e02.   call temp:=  [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.access$200|](v3) @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;.access$200:(Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;)Ljava/util/concurrent/Callable;|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] @type static;
#L133e08.   v3:= temp  @type object;
#L133e0a.   call temp:=  [|java:util:concurrent:Callable.call|](v3) @signature [|Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Callable|] @type interface;
#L133e10.   v3:= temp  @type object;
#L133e12.   if v1 == 0 then goto L133e1c;
#L133e16.   call temp:=  [|java:lang:Thread.setContextClassLoader|](v2, v1) @signature [|Ljava/lang/Thread;.setContextClassLoader:(Ljava/lang/ClassLoader;)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133e1c.   return v3  @type object;
#L133e1e.   v3:= Exception  @type object;
#L133e20.   if v1 == 0 then goto L133e2a;
#L133e24.   call temp:=  [|java:lang:Thread.setContextClassLoader|](v2, v1) @signature [|Ljava/lang/Thread;.setContextClassLoader:(Ljava/lang/ClassLoader;)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133e2a.   throw v3;
  catch  [|any|] @[L133dd2..L133e10] goto L133e1e;

   }
record [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|]  @type class @AccessFlag FINAL extends  [|java:util:concurrent:Callable|] {
      [|java:security:AccessControlContext|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.acc|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:ClassLoader|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.ccl|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.task|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.<init>|] ([|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;.<init>:(Ljava/util/concurrent/Callable;)V|] @Access CONSTRUCTOR {
      local temp ;



        v0;
      
#L133e48.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L133e4e.   v1.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.task|]  := v2 @type object;
#L133e52.   call temp:=  [|java:security:AccessController.getContext|]() @signature [|Ljava/security/AccessController;.getContext:()Ljava/security/AccessControlContext;|] @classDescriptor [|java:security:AccessController|] @type static;
#L133e58.   v0:= temp  @type object;
#L133e5a.   v1.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.acc|]  := v0 @type object;
#L133e5e.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L133e64.   v0:= temp  @type object;
#L133e66.   call temp:=  [|java:lang:Thread.getContextClassLoader|](v0) @signature [|Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133e6c.   v0:= temp  @type object;
#L133e6e.   v1.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.ccl|]  := v0 @type object;
#L133e72.   return @void ;

   }
    procedure [|java:lang:ClassLoader|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.access$100|] ([|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] v1 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;.access$100:(Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;)Ljava/lang/ClassLoader;|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L133e84.   v0:= v1.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.ccl|]   @type object;
#L133e88.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.access$200|] ([|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] v1 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;.access$200:(Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;)Ljava/util/concurrent/Callable;|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L133e9c.   v0:= v1.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.task|]   @type object;
#L133ea0.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.call|] ([|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] v3 @type (this)) @owner [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;.call:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:security:PrivilegedActionException|] v0 @varname [|e|] @scope ((L000d,L0012));

        v1;
        v2;
      
#L133eb4.   v1:= new [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1|];
#L133eb8.   call temp:=  [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1.<init>|](v1, v3) @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader$1;.<init>:(Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;)V|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader$1|] @type direct;
#L133ebe.   v2:= v3.[|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.acc|]   @type object;
#L133ec2.   call temp:=  [|java:security:AccessController.doPrivileged|](v1, v2) @signature [|Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;|] @classDescriptor [|java:security:AccessController|] @type static;
#L133ec8.   v1:= temp  @type object;
#L133eca.   return v1  @type object;
#L133ecc.   v0:= Exception  @type object;
#L133ece.   call temp:=  [|java:security:PrivilegedActionException.getException|](v0) @signature [|Ljava/security/PrivilegedActionException;.getException:()Ljava/lang/Exception;|] @classDescriptor [|java:security:PrivilegedActionException|] @type virtual;
#L133ed4.   v1:= temp  @type object;
#L133ed6.   throw v1;
  catch  [|java:security:PrivilegedActionException|] @[L133eb4..L133ec8] goto L133ecc;

   }
record [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|]  @type class @AccessFlag  extends  [|java:security:PrivilegedAction|] {
      [|java:util:concurrent:Executors$PrivilegedThreadFactory$1|] [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1.this$1|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1.<init>|] ([|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|] v0 @type (this), [|java:util:concurrent:Executors$PrivilegedThreadFactory$1|] v1 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|] @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1$1;.<init>:(Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1;)V|] @Access CONSTRUCTOR {
      local temp ;

      
#L133ef8.   v0.[|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1.this$1|]  := v1 @type object;
#L133efc.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L133f02.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1.run|] ([|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|] v1 @type (this)) @owner [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|] @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1$1;.run:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;

        v0;
      
#L133f14.   call temp:=  [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1.run|](v1) @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1$1;.run:()Ljava/lang/Void;|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|] @type virtual;
#L133f1a.   v0:= temp  @type object;
#L133f1c.   return v0  @type object;

   }
    procedure [|java:lang:Void|] [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1.run|] ([|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|] v2 @type (this)) @owner [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|] @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1$1;.run:()Ljava/lang/Void;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L133f30.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L133f36.   v0:= temp  @type object;
#L133f38.   v1:= v2.[|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1.this$1|]   @type object;
#L133f3c.   v1:= v1.[|java:util:concurrent:Executors$PrivilegedThreadFactory$1.this$0|]   @type object;
#L133f40.   call temp:=  [|java:util:concurrent:Executors$PrivilegedThreadFactory.access$300|](v1) @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory;.access$300:(Ljava/util/concurrent/Executors$PrivilegedThreadFactory;)Ljava/lang/ClassLoader;|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedThreadFactory|] @type static;
#L133f46.   v1:= temp  @type object;
#L133f48.   call temp:=  [|java:lang:Thread.setContextClassLoader|](v0, v1) @signature [|Ljava/lang/Thread;.setContextClassLoader:(Ljava/lang/ClassLoader;)V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133f4e.   v0:= v2.[|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1.this$1|]   @type object;
#L133f52.   v0:= v0.[|java:util:concurrent:Executors$PrivilegedThreadFactory$1.val$r|]   @type object;
#L133f56.   call temp:=  [|java:lang:Runnable.run|](v0) @signature [|Ljava/lang/Runnable;.run:()V|] @classDescriptor [|java:lang:Runnable|] @type interface;
#L133f5c.   v0:= 0  @length 4;
#L133f5e.   return v0  @type object;

   }
record [|java:util:concurrent:Executors$PrivilegedThreadFactory$1|]  @type class @AccessFlag  extends  [|java:lang:Runnable|] {
      [|java:util:concurrent:Executors$PrivilegedThreadFactory|] [|java:util:concurrent:Executors$PrivilegedThreadFactory$1.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|java:lang:Runnable|] [|java:util:concurrent:Executors$PrivilegedThreadFactory$1.val$r|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:Executors$PrivilegedThreadFactory$1.<init>|] ([|java:util:concurrent:Executors$PrivilegedThreadFactory$1|] v0 @type (this), [|java:util:concurrent:Executors$PrivilegedThreadFactory|] v1 @type (object), [|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedThreadFactory$1|] @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1;.<init>:(Ljava/util/concurrent/Executors$PrivilegedThreadFactory;Ljava/lang/Runnable;)V|] @Access CONSTRUCTOR {
      local temp ;

      
#L133f70.   v0.[|java:util:concurrent:Executors$PrivilegedThreadFactory$1.this$0|]  := v1 @type object;
#L133f74.   v0.[|java:util:concurrent:Executors$PrivilegedThreadFactory$1.val$r|]  := v2 @type object;
#L133f78.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L133f7e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Executors$PrivilegedThreadFactory$1.run|] ([|java:util:concurrent:Executors$PrivilegedThreadFactory$1|] v2 @type (this)) @owner [|java:util:concurrent:Executors$PrivilegedThreadFactory$1|] @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1;.run:()V|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L133f90.   v0:= new [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|];
#L133f94.   call temp:=  [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1.<init>|](v0, v2) @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1$1;.<init>:(Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1;)V|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedThreadFactory$1$1|] @type direct;
#L133f9a.   v1:= v2.[|java:util:concurrent:Executors$PrivilegedThreadFactory$1.this$0|]   @type object;
#L133f9e.   call temp:=  [|java:util:concurrent:Executors$PrivilegedThreadFactory.access$400|](v1) @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory;.access$400:(Ljava/util/concurrent/Executors$PrivilegedThreadFactory;)Ljava/security/AccessControlContext;|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedThreadFactory|] @type static;
#L133fa4.   v1:= temp  @type object;
#L133fa6.   call temp:=  [|java:security:AccessController.doPrivileged|](v0, v1) @signature [|Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;|] @classDescriptor [|java:security:AccessController|] @type static;
#L133fac.   return @void ;

   }
record [|java:util:concurrent:Executors$PrivilegedThreadFactory|]  @type class @AccessFlag   extends [|java:util:concurrent:Executors$DefaultThreadFactory|] {
      [|java:security:AccessControlContext|] [|java:util:concurrent:Executors$PrivilegedThreadFactory.acc|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:ClassLoader|] [|java:util:concurrent:Executors$PrivilegedThreadFactory.ccl|]    @AccessFlag PRIVATE_FINAL;
   }
    procedure [|void|] [|java:util:concurrent:Executors$PrivilegedThreadFactory.<init>|] ([|java:util:concurrent:Executors$PrivilegedThreadFactory|] v1 @type (this)) @owner [|java:util:concurrent:Executors$PrivilegedThreadFactory|] @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

        v0;
      
#L133fc0.   call temp:=  [|java:util:concurrent:Executors$DefaultThreadFactory.<init>|](v1) @signature [|Ljava/util/concurrent/Executors$DefaultThreadFactory;.<init>:()V|] @classDescriptor [|java:util:concurrent:Executors$DefaultThreadFactory|] @type direct;
#L133fc6.   call temp:=  [|java:security:AccessController.getContext|]() @signature [|Ljava/security/AccessController;.getContext:()Ljava/security/AccessControlContext;|] @classDescriptor [|java:security:AccessController|] @type static;
#L133fcc.   v0:= temp  @type object;
#L133fce.   v1.[|java:util:concurrent:Executors$PrivilegedThreadFactory.acc|]  := v0 @type object;
#L133fd2.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L133fd8.   v0:= temp  @type object;
#L133fda.   call temp:=  [|java:lang:Thread.getContextClassLoader|](v0) @signature [|Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L133fe0.   v0:= temp  @type object;
#L133fe2.   v1.[|java:util:concurrent:Executors$PrivilegedThreadFactory.ccl|]  := v0 @type object;
#L133fe6.   return @void ;

   }
    procedure [|java:lang:ClassLoader|] [|java:util:concurrent:Executors$PrivilegedThreadFactory.access$300|] ([|java:util:concurrent:Executors$PrivilegedThreadFactory|] v1 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedThreadFactory|] @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory;.access$300:(Ljava/util/concurrent/Executors$PrivilegedThreadFactory;)Ljava/lang/ClassLoader;|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L133ff8.   v0:= v1.[|java:util:concurrent:Executors$PrivilegedThreadFactory.ccl|]   @type object;
#L133ffc.   return v0  @type object;

   }
    procedure [|java:security:AccessControlContext|] [|java:util:concurrent:Executors$PrivilegedThreadFactory.access$400|] ([|java:util:concurrent:Executors$PrivilegedThreadFactory|] v1 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedThreadFactory|] @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory;.access$400:(Ljava/util/concurrent/Executors$PrivilegedThreadFactory;)Ljava/security/AccessControlContext;|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L134010.   v0:= v1.[|java:util:concurrent:Executors$PrivilegedThreadFactory.acc|]   @type object;
#L134014.   return v0  @type object;

   }
    procedure [|java:lang:Thread|] [|java:util:concurrent:Executors$PrivilegedThreadFactory.newThread|] ([|java:util:concurrent:Executors$PrivilegedThreadFactory|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:Executors$PrivilegedThreadFactory|] @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L134028.   v0:= new [|java:util:concurrent:Executors$PrivilegedThreadFactory$1|];
#L13402c.   call temp:=  [|java:util:concurrent:Executors$PrivilegedThreadFactory$1.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory$1;.<init>:(Ljava/util/concurrent/Executors$PrivilegedThreadFactory;Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedThreadFactory$1|] @type direct;
#L134032.   call temp:=  [|java:util:concurrent:Executors$DefaultThreadFactory.newThread|](v1, v0) @signature [|Ljava/util/concurrent/Executors$DefaultThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;|] @classDescriptor [|java:util:concurrent:Executors$DefaultThreadFactory|] @type super;
#L134038.   v0:= temp  @type object;
#L13403a.   return v0  @type object;

   }
record [|java:util:concurrent:Executors$RunnableAdapter|]  @type class @AccessFlag FINAL extends  [|java:util:concurrent:Callable|] {
      [|java:lang:Object|] [|java:util:concurrent:Executors$RunnableAdapter.result|]    @AccessFlag FINAL;
      [|java:lang:Runnable|] [|java:util:concurrent:Executors$RunnableAdapter.task|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:util:concurrent:Executors$RunnableAdapter.<init>|] ([|java:util:concurrent:Executors$RunnableAdapter|] v0 @type (this), [|java:lang:Runnable|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:Executors$RunnableAdapter|] @signature [|Ljava/util/concurrent/Executors$RunnableAdapter;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;




      
#L13404c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L134052.   v0.[|java:util:concurrent:Executors$RunnableAdapter.task|]  := v1 @type object;
#L134056.   v0.[|java:util:concurrent:Executors$RunnableAdapter.result|]  := v2 @type object;
#L13405a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:Executors$RunnableAdapter.call|] ([|java:util:concurrent:Executors$RunnableAdapter|] v1 @type (this)) @owner [|java:util:concurrent:Executors$RunnableAdapter|] @signature [|Ljava/util/concurrent/Executors$RunnableAdapter;.call:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13406c.   v0:= v1.[|java:util:concurrent:Executors$RunnableAdapter.task|]   @type object;
#L134070.   call temp:=  [|java:lang:Runnable.run|](v0) @signature [|Ljava/lang/Runnable;.run:()V|] @classDescriptor [|java:lang:Runnable|] @type interface;
#L134076.   v0:= v1.[|java:util:concurrent:Executors$RunnableAdapter.result|]   @type object;
#L13407a.   return v0  @type object;

   }
record [|java:util:concurrent:Executors|]  @type class @AccessFlag PUBLIC  {
   }
    procedure [|void|] [|java:util:concurrent:Executors.<init>|] ([|java:util:concurrent:Executors|] v0 @type (this)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;

      
#L13408c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L134092.   return @void ;

   }
    procedure [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors.callable|] ([|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.callable:(Ljava/lang/Runnable;)Ljava/util/concurrent/Callable;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L1340a4.   if v2 != 0 then goto L1340b4;
#L1340a8.   v0:= new [|java:lang:NullPointerException|];
#L1340ac.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1340b2.   throw v0;
#L1340b4.   v0:= new [|java:util:concurrent:Executors$RunnableAdapter|];
#L1340b8.   v1:= 0  @length 4;
#L1340ba.   call temp:=  [|java:util:concurrent:Executors$RunnableAdapter.<init>|](v0, v2, v1) @signature [|Ljava/util/concurrent/Executors$RunnableAdapter;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:Executors$RunnableAdapter|] @type direct;
#L1340c0.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors.callable|] ([|java:lang:Runnable|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.callable:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Callable;|] @Access PUBLIC_STATIC {
      local temp ;


        v0;
      
#L1340d4.   if v1 != 0 then goto L1340e4;
#L1340d8.   v0:= new [|java:lang:NullPointerException|];
#L1340dc.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1340e2.   throw v0;
#L1340e4.   v0:= new [|java:util:concurrent:Executors$RunnableAdapter|];
#L1340e8.   call temp:=  [|java:util:concurrent:Executors$RunnableAdapter.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/Executors$RunnableAdapter;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:Executors$RunnableAdapter|] @type direct;
#L1340ee.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors.callable|] ([|java:security:PrivilegedAction|] v1 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.callable:(Ljava/security/PrivilegedAction;)Ljava/util/concurrent/Callable;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L134100.   if v1 != 0 then goto L134110;
#L134104.   v0:= new [|java:lang:NullPointerException|];
#L134108.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13410e.   throw v0;
#L134110.   v0:= new [|java:util:concurrent:Executors$1|];
#L134114.   call temp:=  [|java:util:concurrent:Executors$1.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$1;.<init>:(Ljava/security/PrivilegedAction;)V|] @classDescriptor [|java:util:concurrent:Executors$1|] @type direct;
#L13411a.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors.callable|] ([|java:security:PrivilegedExceptionAction|] v1 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.callable:(Ljava/security/PrivilegedExceptionAction;)Ljava/util/concurrent/Callable;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L13412c.   if v1 != 0 then goto L13413c;
#L134130.   v0:= new [|java:lang:NullPointerException|];
#L134134.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13413a.   throw v0;
#L13413c.   v0:= new [|java:util:concurrent:Executors$2|];
#L134140.   call temp:=  [|java:util:concurrent:Executors$2.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$2;.<init>:(Ljava/security/PrivilegedExceptionAction;)V|] @classDescriptor [|java:util:concurrent:Executors$2|] @type direct;
#L134146.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ThreadFactory|] [|java:util:concurrent:Executors.defaultThreadFactory|] () @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L134158.   v0:= new [|java:util:concurrent:Executors$DefaultThreadFactory|];
#L13415c.   call temp:=  [|java:util:concurrent:Executors$DefaultThreadFactory.<init>|](v0) @signature [|Ljava/util/concurrent/Executors$DefaultThreadFactory;.<init>:()V|] @classDescriptor [|java:util:concurrent:Executors$DefaultThreadFactory|] @type direct;
#L134162.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ExecutorService|] [|java:util:concurrent:Executors.newCachedThreadPool|] () @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L134174.   v0:= new [|java:util:concurrent:ThreadPoolExecutor|];
#L134178.   v1:= 0  @length 4;
#L13417a.    v2:= nan;
#L134180.   v3:= 60  @length wide16;
#L134184.   v5:= @@[|java:util:concurrent:TimeUnit.SECONDS|]   @type object;
#L134188.   v6:= new [|java:util:concurrent:SynchronousQueue|];
#L13418c.   call temp:=  [|java:util:concurrent:SynchronousQueue.<init>|](v6) @signature [|Ljava/util/concurrent/SynchronousQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue|] @type direct;
#L134192.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L134198.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ExecutorService|] [|java:util:concurrent:Executors.newCachedThreadPool|] ([|java:util:concurrent:ThreadFactory|] v8 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newCachedThreadPool:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L1341ac.   v0:= new [|java:util:concurrent:ThreadPoolExecutor|];
#L1341b0.   v1:= 0  @length 4;
#L1341b2.    v2:= nan;
#L1341b8.   v3:= 60  @length wide16;
#L1341bc.   v5:= @@[|java:util:concurrent:TimeUnit.SECONDS|]   @type object;
#L1341c0.   v6:= new [|java:util:concurrent:SynchronousQueue|];
#L1341c4.   call temp:=  [|java:util:concurrent:SynchronousQueue.<init>|](v6) @signature [|Ljava/util/concurrent/SynchronousQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue|] @type direct;
#L1341ca.   v7:= v8  @type object;
#L1341cc.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L1341d2.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ExecutorService|] [|java:util:concurrent:Executors.newFixedThreadPool|] ([|int|] v7) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L1341e4.   v0:= new [|java:util:concurrent:ThreadPoolExecutor|];
#L1341e8.   v3:= 0  @length wide16;
#L1341ec.   v5:= @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]   @type object;
#L1341f0.   v6:= new [|java:util:concurrent:LinkedBlockingQueue|];
#L1341f4.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.<init>|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L1341fa.   v1:= v7;
#L1341fc.   v2:= v7;
#L1341fe.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L134204.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ExecutorService|] [|java:util:concurrent:Executors.newFixedThreadPool|] ([|int|] v8, [|java:util:concurrent:ThreadFactory|] v9 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newFixedThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L134218.   v0:= new [|java:util:concurrent:ThreadPoolExecutor|];
#L13421c.   v3:= 0  @length wide16;
#L134220.   v5:= @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]   @type object;
#L134224.   v6:= new [|java:util:concurrent:LinkedBlockingQueue|];
#L134228.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.<init>|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L13422e.   v1:= v8;
#L134230.   v2:= v8;
#L134232.   v7:= v9  @type object;
#L134234.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13423a.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ScheduledExecutorService|] [|java:util:concurrent:Executors.newScheduledThreadPool|] ([|int|] v1) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L13424c.   v0:= new [|java:util:concurrent:ScheduledThreadPoolExecutor|];
#L134250.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L134256.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ScheduledExecutorService|] [|java:util:concurrent:Executors.newScheduledThreadPool|] ([|int|] v1, [|java:util:concurrent:ThreadFactory|] v2 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;


        v0;
      
#L134268.   v0:= new [|java:util:concurrent:ScheduledThreadPoolExecutor|];
#L13426c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L134272.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ExecutorService|] [|java:util:concurrent:Executors.newSingleThreadExecutor|] () @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newSingleThreadExecutor:()Ljava/util/concurrent/ExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L134284.   v1:= 1  @length 4;
#L134286.   v7:= new [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService|];
#L13428a.   v0:= new [|java:util:concurrent:ThreadPoolExecutor|];
#L13428e.   v3:= 0  @length wide16;
#L134292.   v5:= @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]   @type object;
#L134296.   v6:= new [|java:util:concurrent:LinkedBlockingQueue|];
#L13429a.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.<init>|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L1342a0.   v2:= v1;
#L1342a2.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L1342a8.   call temp:=  [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService.<init>|](v7, v0) @signature [|Ljava/util/concurrent/Executors$FinalizableDelegatedExecutorService;.<init>:(Ljava/util/concurrent/ExecutorService;)V|] @classDescriptor [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService|] @type direct;
#L1342ae.   return v7  @type object;

   }
    procedure [|java:util:concurrent:ExecutorService|] [|java:util:concurrent:Executors.newSingleThreadExecutor|] ([|java:util:concurrent:ThreadFactory|] v9 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newSingleThreadExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L1342c0.   v1:= 1  @length 4;
#L1342c2.   v8:= new [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService|];
#L1342c6.   v0:= new [|java:util:concurrent:ThreadPoolExecutor|];
#L1342ca.   v3:= 0  @length wide16;
#L1342ce.   v5:= @@[|java:util:concurrent:TimeUnit.MILLISECONDS|]   @type object;
#L1342d2.   v6:= new [|java:util:concurrent:LinkedBlockingQueue|];
#L1342d6.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.<init>|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L1342dc.   v2:= v1;
#L1342de.   v7:= v9  @type object;
#L1342e0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L1342e6.   call temp:=  [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService.<init>|](v8, v0) @signature [|Ljava/util/concurrent/Executors$FinalizableDelegatedExecutorService;.<init>:(Ljava/util/concurrent/ExecutorService;)V|] @classDescriptor [|java:util:concurrent:Executors$FinalizableDelegatedExecutorService|] @type direct;
#L1342ec.   return v8  @type object;

   }
    procedure [|java:util:concurrent:ScheduledExecutorService|] [|java:util:concurrent:Executors.newSingleThreadScheduledExecutor|] () @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newSingleThreadScheduledExecutor:()Ljava/util/concurrent/ScheduledExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
        v1;
        v2;
      
#L134300.   v0:= new [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|];
#L134304.   v1:= new [|java:util:concurrent:ScheduledThreadPoolExecutor|];
#L134308.   v2:= 1  @length 4;
#L13430a.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.<init>|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L134310.   call temp:=  [|java:util:concurrent:Executors$DelegatedScheduledExecutorService.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$DelegatedScheduledExecutorService;.<init>:(Ljava/util/concurrent/ScheduledExecutorService;)V|] @classDescriptor [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] @type direct;
#L134316.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ScheduledExecutorService|] [|java:util:concurrent:Executors.newSingleThreadScheduledExecutor|] ([|java:util:concurrent:ThreadFactory|] v3 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L134328.   v0:= new [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|];
#L13432c.   v1:= new [|java:util:concurrent:ScheduledThreadPoolExecutor|];
#L134330.   v2:= 1  @length 4;
#L134332.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.<init>|](v1, v2, v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L134338.   call temp:=  [|java:util:concurrent:Executors$DelegatedScheduledExecutorService.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$DelegatedScheduledExecutorService;.<init>:(Ljava/util/concurrent/ScheduledExecutorService;)V|] @classDescriptor [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] @type direct;
#L13433e.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors.privilegedCallable|] ([|java:util:concurrent:Callable|] v1 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.privilegedCallable:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L134350.   if v1 != 0 then goto L134360;
#L134354.   v0:= new [|java:lang:NullPointerException|];
#L134358.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13435e.   throw v0;
#L134360.   v0:= new [|java:util:concurrent:Executors$PrivilegedCallable|];
#L134364.   call temp:=  [|java:util:concurrent:Executors$PrivilegedCallable.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$PrivilegedCallable;.<init>:(Ljava/util/concurrent/Callable;)V|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedCallable|] @type direct;
#L13436a.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Callable|] [|java:util:concurrent:Executors.privilegedCallableUsingCurrentClassLoader|] ([|java:util:concurrent:Callable|] v1 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.privilegedCallableUsingCurrentClassLoader:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L13437c.   if v1 != 0 then goto L13438c;
#L134380.   v0:= new [|java:lang:NullPointerException|];
#L134384.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13438a.   throw v0;
#L13438c.   v0:= new [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|];
#L134390.   call temp:=  [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$PrivilegedCallableUsingCurrentClassLoader;.<init>:(Ljava/util/concurrent/Callable;)V|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedCallableUsingCurrentClassLoader|] @type direct;
#L134396.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ThreadFactory|] [|java:util:concurrent:Executors.privilegedThreadFactory|] () @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.privilegedThreadFactory:()Ljava/util/concurrent/ThreadFactory;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1343a8.   v0:= new [|java:util:concurrent:Executors$PrivilegedThreadFactory|];
#L1343ac.   call temp:=  [|java:util:concurrent:Executors$PrivilegedThreadFactory.<init>|](v0) @signature [|Ljava/util/concurrent/Executors$PrivilegedThreadFactory;.<init>:()V|] @classDescriptor [|java:util:concurrent:Executors$PrivilegedThreadFactory|] @type direct;
#L1343b2.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ExecutorService|] [|java:util:concurrent:Executors.unconfigurableExecutorService|] ([|java:util:concurrent:ExecutorService|] v1 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.unconfigurableExecutorService:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/ExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L1343c4.   if v1 != 0 then goto L1343d4;
#L1343c8.   v0:= new [|java:lang:NullPointerException|];
#L1343cc.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1343d2.   throw v0;
#L1343d4.   v0:= new [|java:util:concurrent:Executors$DelegatedExecutorService|];
#L1343d8.   call temp:=  [|java:util:concurrent:Executors$DelegatedExecutorService.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$DelegatedExecutorService;.<init>:(Ljava/util/concurrent/ExecutorService;)V|] @classDescriptor [|java:util:concurrent:Executors$DelegatedExecutorService|] @type direct;
#L1343de.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ScheduledExecutorService|] [|java:util:concurrent:Executors.unconfigurableScheduledExecutorService|] ([|java:util:concurrent:ScheduledExecutorService|] v1 @type (object)) @owner [|java:util:concurrent:Executors|] @signature [|Ljava/util/concurrent/Executors;.unconfigurableScheduledExecutorService:(Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L1343f0.   if v1 != 0 then goto L134400;
#L1343f4.   v0:= new [|java:lang:NullPointerException|];
#L1343f8.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1343fe.   throw v0;
#L134400.   v0:= new [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|];
#L134404.   call temp:=  [|java:util:concurrent:Executors$DelegatedScheduledExecutorService.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Executors$DelegatedScheduledExecutorService;.<init>:(Ljava/util/concurrent/ScheduledExecutorService;)V|] @classDescriptor [|java:util:concurrent:Executors$DelegatedScheduledExecutorService|] @type direct;
#L13440a.   return v0  @type object;

   }
record [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|java:util:concurrent:ForkJoinWorkerThread|] [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory.newThread|] ([|java:util:concurrent:ForkJoinPool|] v0 @type (object)) @owner [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory|] @signature [|Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;.newThread:(Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory|]  @type class @AccessFlag  extends  [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory|] {
   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory.<init>|] ([|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory|] v0 @type (this)) @owner [|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory|] @signature [|Ljava/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

      
#L13441c.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L134422.   return @void ;

   }
    procedure [|java:util:concurrent:ForkJoinWorkerThread|] [|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory.newThread|] ([|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory|] v1 @type (this), [|java:util:concurrent:ForkJoinPool|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory|] @signature [|Ljava/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory;.newThread:(Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L134434.   v0:= new [|java:util:concurrent:ForkJoinWorkerThread|];
#L134438.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.<init>|](v0, v2) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.<init>:(Ljava/util/concurrent/ForkJoinPool;)V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L13443e.   return v0  @type object;

   }
record [|java:util:concurrent:ForkJoinTask|]  @type class @AccessFlag PUBLIC_ABSTRACT extends  [|java:util:concurrent:Future|], [|java:io:Serializable|] {
      [|int|] [|java:util:concurrent:ForkJoinTask.status|]    @AccessFlag VOLATILE;
   }
      global [|int|] @@[|java:util:concurrent:ForkJoinTask.CANCELLED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinTask.EXCEPTIONAL|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinTask.EXCEPTION_MAP_CAPACITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinTask.NORMAL|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinTask.SIGNAL|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ForkJoinTask.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:concurrent:ForkJoinTask$ExceptionNode|][] @@[|java:util:concurrent:ForkJoinTask.exceptionTable|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:concurrent:locks:ReentrantLock|] @@[|java:util:concurrent:ForkJoinTask.exceptionTableLock|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:ref:ReferenceQueue|] @@[|java:util:concurrent:ForkJoinTask.exceptionTableRefQueue|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinTask.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinTask.statusOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.<clinit>|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L002c,L0032));
        v1;
        v2;
        v3;
      
#L134450.   v1:= new [|java:util:concurrent:locks:ReentrantLock|];
#L134454.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L13445a.   @@[|java:util:concurrent:ForkJoinTask.exceptionTableLock|] := v1  @type object;
#L13445e.   v1:= new [|java:lang:ref:ReferenceQueue|];
#L134462.   call temp:=  [|java:lang:ref:ReferenceQueue.<init>|](v1) @signature [|Ljava/lang/ref/ReferenceQueue;.<init>:()V|] @classDescriptor [|java:lang:ref:ReferenceQueue|] @type direct;
#L134468.   @@[|java:util:concurrent:ForkJoinTask.exceptionTableRefQueue|] := v1  @type object;
#L13446c.   v1:= 32  @length 16;
#L134470.   v1:= new [|java:util:concurrent:ForkJoinTask$ExceptionNode|][v1];
#L134474.   @@[|java:util:concurrent:ForkJoinTask.exceptionTable|] := v1  @type object;
#L134478.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L13447e.   v1:= temp  @type object;
#L134480.   @@[|java:util:concurrent:ForkJoinTask.UNSAFE|] := v1  @type object;
#L134484.   v1:= @@[|java:util:concurrent:ForkJoinTask.UNSAFE|]   @type object;
#L134488.   v2:= new [|java:util:concurrent:ForkJoinTask|];
#L13448c.   v3:= "status" @type (object, string);
#L134490.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L134496.   v2:= temp  @type object;
#L134498.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v1, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13449e.   v1:= temp  @type wide;
#L1344a0.   @@[|java:util:concurrent:ForkJoinTask.statusOffset|] := v1  @wide;
#L1344a4.   return @void ;
#L1344a6.   v0:= Exception  @type object;
#L1344a8.   v1:= new [|java:lang:Error|];
#L1344ac.   call temp:=  [|java:lang:Error.<init>|](v1, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1344b2.   throw v1;
  catch  [|java:lang:Exception|] @[L134478..L1344a4] goto L1344a6;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.<init>|] ([|java:util:concurrent:ForkJoinTask|] v0 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L1344d4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1344da.   return @void ;

   }
    procedure [|java:lang:ref:ReferenceQueue|] [|java:util:concurrent:ForkJoinTask.access$000|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.access$000:()Ljava/lang/ref/ReferenceQueue;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L1344ec.   v0:= @@[|java:util:concurrent:ForkJoinTask.exceptionTableRefQueue|]   @type object;
#L1344f0.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinTask.adapt|] ([|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/lang/Runnable;)Ljava/util/concurrent/ForkJoinTask;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
        v1;
      
#L134504.   v0:= new [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|];
#L134508.   v1:= 0  @length 4;
#L13450a.   call temp:=  [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.<init>|](v0, v2, v1) @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedRunnable;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] @type direct;
#L134510.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinTask.adapt|] ([|java:lang:Runnable|] v1 @type (object), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;|] @Access PUBLIC_STATIC {
      local temp ;


        v0;
      
#L134524.   v0:= new [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|];
#L134528.   call temp:=  [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedRunnable;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] @type direct;
#L13452e.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinTask.adapt|] ([|java:util:concurrent:Callable|] v1 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/ForkJoinTask;|] @Access PUBLIC_STATIC {
      local temp ;

        v0;
      
#L134540.   v0:= new [|java:util:concurrent:ForkJoinTask$AdaptedCallable|];
#L134544.   call temp:=  [|java:util:concurrent:ForkJoinTask$AdaptedCallable.<init>|](v0, v1) @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedCallable;.<init>:(Ljava/util/concurrent/Callable;)V|] @classDescriptor [|java:util:concurrent:ForkJoinTask$AdaptedCallable|] @type direct;
#L13454a.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.clearExceptionalCompletion|] ([|java:util:concurrent:ForkJoinTask|] v8 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.clearExceptionalCompletion:()V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ForkJoinTask$ExceptionNode|] v4 @varname [|next|] @scope ((L0017,L0021), (L002b,L002e), (L0033,L0036));
        [|java:util:concurrent:ForkJoinTask$ExceptionNode|] v0 @varname [|e|] @scope ((L0012,L002e), (L0033,L0036));
        [|int|] v2 @varname [|i|] @scope ((L0010,L002e), (L0033,L0036));
        [|java:util:concurrent:ForkJoinTask$ExceptionNode|] v5 @varname [|pred|] @scope ((L0013,L002e), (L0033,L0036));
        [|java:util:concurrent:ForkJoinTask$ExceptionNode|][] v6 @varname [|t|] @scope ((L000b,L002e), (L0033,L0036));
        [|int|] v1 @varname [|h|] @scope ((L0004,L0036));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|lock|] @scope ((L0006,L0036));

        v7;
      
#L13455c.   call temp:=  [|java:lang:System.identityHashCode|](v8) @signature [|Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:System|] @type static;
#L134562.   v1:= temp;
#L134564.   v3:= @@[|java:util:concurrent:ForkJoinTask.exceptionTableLock|]   @type object;
#L134568.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13456e.   v6:= @@[|java:util:concurrent:ForkJoinTask.exceptionTable|]   @type object;
#L134572.   v7:= v6.length;
#L134574.   v7:= v7 + -1;
#L134578.   v2:= v1 ^& v7  @type int;
#L13457c.   v0:= v6[v2]  @type object;
#L134580.   v5:= 0  @length 4;
#L134582.   if v0 == 0 then goto L13459e;
#L134586.   v4:= v0.[|java:util:concurrent:ForkJoinTask$ExceptionNode.next|]   @type object;
#L13458a.   call temp:=  [|java:util:concurrent:ForkJoinTask$ExceptionNode.get|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask$ExceptionNode;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask$ExceptionNode|] @type virtual;
#L134590.   v7:= temp  @type object;
#L134592.   if v7 != v8 then goto L1345c2;
#L134596.   if v5 != 0 then goto L1345b2;
#L13459a.   v6[v2]:= v4  @type object;
#L13459e.   call temp:=  [|java:util:concurrent:ForkJoinTask.expungeStaleExceptions|]() @signature [|Ljava/util/concurrent/ForkJoinTask;.expungeStaleExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L1345a4.   v7:= 0  @length 4;
#L1345a6.   v8.[|java:util:concurrent:ForkJoinTask.status|]  := v7;
#L1345aa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1345b0.   return @void ;
#L1345b2.   v5.[|java:util:concurrent:ForkJoinTask$ExceptionNode.next|]  := v4 @type object;
#L1345b6.   goto L13459e;
#L1345b8.   v7:= Exception  @type object;
#L1345ba.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1345c0.   throw v7;
#L1345c2.   v5:= v0  @type object;
#L1345c4.   v0:= v4  @type object;
#L1345c6.   goto L134582;
  catch  [|any|] @[L13456e..L1345aa] goto L1345b8;
  catch  [|any|] @[L1345b2..L1345b6] goto L1345b8;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinTask.doInvoke|] ([|java:util:concurrent:ForkJoinTask|] v4 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.doInvoke:()I|] @Access PRIVATE {
      local temp ;

        [|int|] v2 @varname [|s|] @scope ((L0002,L0004), (L0005,L001c));
        [|boolean|] v0 @varname [|completed|] @scope ((L0009,L0011), (L0017,L001c));
        [|java:lang:Throwable|] v1 @varname [|rex|] @scope ((L0012,L0017));

        v3;
      
#L1345ec.   v2:= v4.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1345f0.   if v2 >= 0 then goto L1345f6;
#L1345f4.   return v2;
#L1345f6.   call temp:=  [|java:util:concurrent:ForkJoinTask.exec|](v4) @signature [|Ljava/util/concurrent/ForkJoinTask;.exec:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L1345fc.   v0:= temp;
#L1345fe.   if v0 == 0 then goto L13461a;
#L134602.   v3:= -1  @length 4;
#L134604.   call temp:=  [|java:util:concurrent:ForkJoinTask.setCompletion|](v4, v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.setCompletion:(I)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L13460a.   v2:= temp;
#L13460c.   goto L1345f4;
#L13460e.   v1:= Exception  @type object;
#L134610.   call temp:=  [|java:util:concurrent:ForkJoinTask.setExceptionalCompletion|](v4, v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.setExceptionalCompletion:(Ljava/lang/Throwable;)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134616.   v2:= temp;
#L134618.   goto L1345f4;
#L13461a.   call temp:=  [|java:util:concurrent:ForkJoinTask.doJoin|](v4) @signature [|Ljava/util/concurrent/ForkJoinTask;.doJoin:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134620.   v2:= temp;
#L134622.   goto L1345f4;
  catch  [|java:lang:Throwable|] @[L1345f6..L1345fc] goto L13460e;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinTask.doJoin|] ([|java:util:concurrent:ForkJoinTask|] v6 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.doJoin:()I|] @Access PRIVATE {
      local temp ;

        [|int|] v2 @varname [|s|] @scope ((L000a,L000c), (L000d,L002d));
        [|boolean|] v0 @varname [|completed|] @scope ((L001a,L0022));
        [|java:lang:Throwable|] v1 @varname [|rex|] @scope ((L0023,L0028));
        [|java:util:concurrent:ForkJoinWorkerThread|] v4 @varname [|w|] @scope ((L0010,L002d));
        [|java:lang:Thread|] v3 @varname [|t|] @scope ((L0004,L0032));

        v5;
      
#L134644.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13464a.   v3:= temp  @type object;
#L13464c.   v5:= instanceof @varname v3 @type [|java:util:concurrent:ForkJoinWorkerThread|];
#L134650.   if v5 == 0 then goto L13469e;
#L134654.   v2:= v6.[|java:util:concurrent:ForkJoinTask.status|] ;
#L134658.   if v2 >= 0 then goto L13465e;
#L13465c.   return v2;
#L13465e.   v4:= v3  @type object;
#L134660.   v4:= ([|java:util:concurrent:ForkJoinWorkerThread|])v4;
#L134664.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.unpushTask|](v4, v6) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.unpushTask:(Ljava/util/concurrent/ForkJoinTask;)Z|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L13466a.   v5:= temp;
#L13466c.   if v5 == 0 then goto L134694;
#L134670.   call temp:=  [|java:util:concurrent:ForkJoinTask.exec|](v6) @signature [|Ljava/util/concurrent/ForkJoinTask;.exec:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134676.   v0:= temp;
#L134678.   if v0 == 0 then goto L134694;
#L13467c.   v5:= -1  @length 4;
#L13467e.   call temp:=  [|java:util:concurrent:ForkJoinTask.setCompletion|](v6, v5) @signature [|Ljava/util/concurrent/ForkJoinTask;.setCompletion:(I)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134684.   v2:= temp;
#L134686.   goto L13465c;
#L134688.   v1:= Exception  @type object;
#L13468a.   call temp:=  [|java:util:concurrent:ForkJoinTask.setExceptionalCompletion|](v6, v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.setExceptionalCompletion:(Ljava/lang/Throwable;)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134690.   v2:= temp;
#L134692.   goto L13465c;
#L134694.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.joinTask|](v4, v6) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.joinTask:(Ljava/util/concurrent/ForkJoinTask;)I|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L13469a.   v2:= temp;
#L13469c.   goto L13465c;
#L13469e.   call temp:=  [|java:util:concurrent:ForkJoinTask.externalAwaitDone|](v6) @signature [|Ljava/util/concurrent/ForkJoinTask;.externalAwaitDone:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L1346a4.   v2:= temp;
#L1346a6.   goto L13465c;
  catch  [|java:lang:Throwable|] @[L134670..L134676] goto L134688;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.expungeStaleExceptions|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.expungeStaleExceptions:()V|] @Access PRIVATE_STATIC {
      local temp ;
        [|java:util:concurrent:ForkJoinTask$ExceptionNode|] v0 @varname [|e|] @scope ((L0022,L0034));
        [|int|] v1 @varname [|i|] @scope ((L0020,L0034));
        [|java:util:concurrent:ForkJoinTask|] v2 @varname [|key|] @scope ((L0015,L0034));
        [|java:util:concurrent:ForkJoinTask$ExceptionNode|] v3 @varname [|next|] @scope ((L0027,L0034));
        [|java:util:concurrent:ForkJoinTask$ExceptionNode|] v4 @varname [|pred|] @scope ((L0023,L0034));
        [|java:util:concurrent:ForkJoinTask$ExceptionNode|][] v5 @varname [|t|] @scope ((L0017,L0034));
        [|java:lang:ref:Reference|] v6 @varname [|x|] @scope ((L0000,L0035));
        v7;
        v8;
      
#L1346c8.   v7:= @@[|java:util:concurrent:ForkJoinTask.exceptionTableRefQueue|]   @type object;
#L1346cc.   call temp:=  [|java:lang:ref:ReferenceQueue.poll|](v7) @signature [|Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;|] @classDescriptor [|java:lang:ref:ReferenceQueue|] @type virtual;
#L1346d2.   v6:= temp  @type object;
#L1346d4.   if v6 == 0 then goto L134730;
#L1346d8.   v7:= instanceof @varname v6 @type [|java:util:concurrent:ForkJoinTask$ExceptionNode|];
#L1346dc.   if v7 == 0 then goto L1346c8;
#L1346e0.   v7:= v6  @type object;
#L1346e2.   v7:= ([|java:util:concurrent:ForkJoinTask$ExceptionNode|])v7;
#L1346e6.   call temp:=  [|java:util:concurrent:ForkJoinTask$ExceptionNode.get|](v7) @signature [|Ljava/util/concurrent/ForkJoinTask$ExceptionNode;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask$ExceptionNode|] @type virtual;
#L1346ec.   v2:= temp  @type object;
#L1346ee.   v2:= ([|java:util:concurrent:ForkJoinTask|])v2;
#L1346f2.   v5:= @@[|java:util:concurrent:ForkJoinTask.exceptionTable|]   @type object;
#L1346f6.   call temp:=  [|java:lang:System.identityHashCode|](v2) @signature [|Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:System|] @type static;
#L1346fc.   v7:= temp;
#L1346fe.   v8:= v5.length;
#L134700.   v8:= v8 + -1;
#L134704.   v1:= v7 ^& v8  @type int;
#L134708.   v0:= v5[v1]  @type object;
#L13470c.   v4:= 0  @length 4;
#L13470e.   if v0 == 0 then goto L1346c8;
#L134712.   v3:= v0.[|java:util:concurrent:ForkJoinTask$ExceptionNode.next|]   @type object;
#L134716.   if v0 != v6 then goto L13472a;
#L13471a.   if v4 != 0 then goto L134724;
#L13471e.   v5[v1]:= v3  @type object;
#L134722.   goto L1346c8;
#L134724.   v4.[|java:util:concurrent:ForkJoinTask$ExceptionNode.next|]  := v3 @type object;
#L134728.   goto L1346c8;
#L13472a.   v4:= v0  @type object;
#L13472c.   v0:= v3  @type object;
#L13472e.   goto L13470e;
#L134730.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinTask.externalAwaitDone|] ([|java:util:concurrent:ForkJoinTask|] v9 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.externalAwaitDone:()I|] @Access PRIVATE {
      local temp ;

        [|java:lang:InterruptedException|] v6 @varname [|ie|] @scope ((L001f,L0021));
        [|boolean|] v7 @varname [|interrupted|] @scope ((L0005,L002b));
        [|int|] v8 @varname [|s|] @scope ((L0002,L002c));

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L134744.   v8:= v9.[|java:util:concurrent:ForkJoinTask.status|] ;
#L134748.   if v8 < 0 then goto L13479a;
#L13474c.   v7:= 0  @length 4;
#L13474e.   (@monitorenter v9)
#L134750.   v8:= v9.[|java:util:concurrent:ForkJoinTask.status|] ;
#L134754.   if v8 < 0 then goto L134786;
#L134758.   if v8 != 0 then goto L134778;
#L13475c.   v0:= @@[|java:util:concurrent:ForkJoinTask.UNSAFE|]   @type object;
#L134760.   v2:= @@[|java:util:concurrent:ForkJoinTask.statusOffset|]   @wide;
#L134764.   v4:= 0  @length 4;
#L134766.   v5:= 1  @length 4;
#L134768.   v1:= v9  @type object;
#L13476a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L134770.   goto L134750;
#L134772.   v0:= Exception  @type object;
#L134774.   (@monitorexit v9)
#L134776.   throw v0;
#L134778.   call temp:=  [|java:lang:Object.wait|](v9) @signature [|Ljava/lang/Object;.wait:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13477e.   goto L134750;
#L134780.   v6:= Exception  @type object;
#L134782.   v7:= 1  @length 4;
#L134784.   goto L134750;
#L134786.   (@monitorexit v9)
#L134788.   if v7 == 0 then goto L13479a;
#L13478c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134792.   v0:= temp  @type object;
#L134794.   call temp:=  [|java:lang:Thread.interrupt|](v0) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13479a.   return v8;
  catch  [|any|] @[L134750..L134776] goto L134772;
  catch  [|java:lang:InterruptedException|] @[L134778..L13477e] goto L134780;
  catch  [|any|] @[L134778..L13477e] goto L134772;
  catch  [|any|] @[L134786..L134788] goto L134772;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinTask.externalInterruptibleAwaitDone|] ([|java:util:concurrent:ForkJoinTask|] v7 @type (this), [|long|] v8) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.externalInterruptibleAwaitDone:(J)I|] @Access PRIVATE {
      local temp ;

        [|int|] v6 @varname [|s|] @scope ((L000e,L0030));


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1347cc.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L1347d2.   v0:= temp;
#L1347d4.   if v0 == 0 then goto L1347e4;
#L1347d8.   v0:= new [|java:lang:InterruptedException|];
#L1347dc.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L1347e2.   throw v0;
#L1347e4.   v6:= v7.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1347e8.   if v6 < 0 then goto L13482a;
#L1347ec.   (@monitorenter v7)
#L1347ee.   v6:= v7.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1347f2.   if v6 < 0 then goto L134828;
#L1347f6.   if v6 != 0 then goto L134816;
#L1347fa.   v0:= @@[|java:util:concurrent:ForkJoinTask.UNSAFE|]   @type object;
#L1347fe.   v2:= @@[|java:util:concurrent:ForkJoinTask.statusOffset|]   @wide;
#L134802.   v4:= 0  @length 4;
#L134804.   v5:= 1  @length 4;
#L134806.   v1:= v7  @type object;
#L134808.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13480e.   goto L1347ee;
#L134810.   v0:= Exception  @type object;
#L134812.   (@monitorexit v7)
#L134814.   throw v0;
#L134816.   call temp:=  [|java:lang:Object.wait|](v7, v8, v9) @signature [|Ljava/lang/Object;.wait:(J)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13481c.   v0:= 0  @length wide16;
#L134820.   v0:= cmp(v8,v0);
#L134824.   if v0 <= 0 then goto L1347ee;
#L134828.   (@monitorexit v7)
#L13482a.   return v6;
  catch  [|any|] @[L1347ee..L134814] goto L134810;
  catch  [|any|] @[L134816..L13482a] goto L134810;

   }
    procedure [|java:util:concurrent:ForkJoinPool|] [|java:util:concurrent:ForkJoinTask.getPool|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.getPool:()Ljava/util/concurrent/ForkJoinPool;|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:lang:Thread|] v0 @varname [|t|] @scope ((L0004,L000a), (L000d,L000f));
        v1;
      
#L134850.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134856.   v0:= temp  @type object;
#L134858.   v1:= instanceof @varname v0 @type [|java:util:concurrent:ForkJoinWorkerThread|];
#L13485c.   if v1 == 0 then goto L13486a;
#L134860.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L134864.   v1:= v0.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L134868.   return v1  @type object;
#L13486a.   v1:= 0  @length 4;
#L13486c.   goto L134868;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinTask.getQueuedTaskCount|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.getQueuedTaskCount:()I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L134880.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134886.   v0:= temp  @type object;
#L134888.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L13488c.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.getQueueSize|](v0) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.getQueueSize:()I|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L134892.   v0:= temp;
#L134894.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinTask.getSurplusQueuedTaskCount|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.getSurplusQueuedTaskCount:()I|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1348a8.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1348ae.   v0:= temp  @type object;
#L1348b0.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L1348b4.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.getEstimatedSurplusTaskCount|](v0) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.getEstimatedSurplusTaskCount:()I|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L1348ba.   v0:= temp;
#L1348bc.   return v0;

   }
    procedure [|java:lang:Throwable|] [|java:util:concurrent:ForkJoinTask.getThrowableException|] ([|java:util:concurrent:ForkJoinTask|] v17 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.getThrowableException:()Ljava/lang/Throwable;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ForkJoinTask$ExceptionNode|] v3 @varname [|e|] @scope ((L001d,L002a), (L002f,L0095));
        [|java:util:concurrent:ForkJoinTask$ExceptionNode|][] v11 @varname [|t|] @scope ((L0017,L002a), (L002f,L0095));
        [|java:lang:Throwable|] v5 @varname [|ex|] @scope ((L0036,L0038), (L003a,L0095));
        [|java:lang:reflect:Constructor|] v1 @varname [|c|] @scope ((L0057,L007c));
        [|java:lang:Class|][] v10 @varname [|ps|] @scope ((L005b,L007c));
        [|java:lang:reflect:Constructor|][] v2 @varname [|cs|] @scope ((L0051,L0091));
        [|int|] v7 @varname [|i|] @scope ((L0052,L0091));
        [|java:lang:Throwable|] v12 @varname [|wx|] @scope ((L008b,L0091));
        [|java:lang:Class|] v4 @varname [|ec|] @scope ((L004c,L0092));
        [|java:lang:reflect:Constructor|] v9 @varname [|noArgCtor|] @scope ((L004d,L0092));
        [|int|] v6 @varname [|h|] @scope ((L000d,L0095));
        [|java:util:concurrent:locks:ReentrantLock|] v8 @varname [|lock|] @scope ((L000f,L0095));

        v0;
        v13;
        v14;
        v15;
        v16;
      
#L1348d0.   v0:= v17  @type object;
#L1348d4.   v13:= v0.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1348d8.   v14:= -3  @length 4;
#L1348da.   if v13 == v14 then goto L1348e2;
#L1348de.   v13:= 0  @length 4;
#L1348e0.   return v13  @type object;
#L1348e2.   call temp:=  [|java:lang:System.identityHashCode|](v17) @signature [|Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:System|] @type static;
#L1348e8.   v6:= temp;
#L1348ea.   v8:= @@[|java:util:concurrent:ForkJoinTask.exceptionTableLock|]   @type object;
#L1348ee.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v8) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1348f4.   call temp:=  [|java:util:concurrent:ForkJoinTask.expungeStaleExceptions|]() @signature [|Ljava/util/concurrent/ForkJoinTask;.expungeStaleExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L1348fa.   v11:= @@[|java:util:concurrent:ForkJoinTask.exceptionTable|]   @type object;
#L1348fe.   v13:= v11.length;
#L134900.   v13:= v13 + -1;
#L134904.   v13:= v13 ^& v6  @type int;
#L134906.   v3:= v11[v13]  @type object;
#L13490a.   if v3 == 0 then goto L13492e;
#L13490e.   call temp:=  [|java:util:concurrent:ForkJoinTask$ExceptionNode.get|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask$ExceptionNode;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask$ExceptionNode|] @type virtual;
#L134914.   v13:= temp  @type object;
#L134916.   v0:= v17  @type object;
#L13491a.   if v13 == v0 then goto L13492e;
#L13491e.   v3:= v3.[|java:util:concurrent:ForkJoinTask$ExceptionNode.next|]   @type object;
#L134922.   goto L13490a;
#L134924.   v13:= Exception  @type object;
#L134926.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v8) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13492c.   throw v13;
#L13492e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v8) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L134934.   if v3 == 0 then goto L134940;
#L134938.   v5:= v3.[|java:util:concurrent:ForkJoinTask$ExceptionNode.ex|]   @type object;
#L13493c.   if v5 != 0 then goto L134944;
#L134940.   v13:= 0  @length 4;
#L134942.   goto L1348e0;
#L134944.   v13:= v3.[|java:util:concurrent:ForkJoinTask$ExceptionNode.thrower|]   @wide;
#L134948.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13494e.   v15:= temp  @type object;
#L134950.   call temp:=  [|java:lang:Thread.getId|](v15) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L134956.   v15:= temp  @type wide;
#L134958.   v13:= cmp(v13,v15);
#L13495c.   if v13 == 0 then goto L1349f4;
#L134960.   call temp:=  [|java:lang:Object.getClass|](v5) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L134966.   v4:= temp  @type object;
#L134968.   v9:= 0  @length 4;
#L13496a.   call temp:=  [|java:lang:Class.getConstructors|](v4) @signature [|Ljava/lang/Class;.getConstructors:()[Ljava/lang/reflect/Constructor;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L134970.   v2:= temp  @type object;
#L134972.   v7:= 0  @length 4;
#L134974.   v13:= v2.length;
#L134976.   if v7 >= v13 then goto L1349c8;
#L13497a.   v1:= v2[v7]  @type object;
#L13497e.   call temp:=  [|java:lang:reflect:Constructor.getParameterTypes|](v1) @signature [|Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L134984.   v10:= temp  @type object;
#L134986.   v13:= v10.length;
#L134988.   if v13 != 0 then goto L134994;
#L13498c.   v9:= v1  @type object;
#L13498e.   v7:= v7 + 1;
#L134992.   goto L134974;
#L134994.   v13:= v10.length;
#L134996.   v14:= 1  @length 4;
#L134998.   if v13 != v14 then goto L13498e;
#L13499c.   v13:= 0  @length 4;
#L13499e.   v13:= v10[v13]  @type object;
#L1349a2.   v14:= new [|java:lang:Throwable|];
#L1349a6.   if v13 != v14 then goto L13498e;
#L1349aa.   v13:= 1  @length 4;
#L1349ac.   v13:= new [|java:lang:Object|][v13];
#L1349b0.   v14:= 0  @length 4;
#L1349b2.   v13[v14]:= v5  @type object;
#L1349b6.   call temp:=  [|java:lang:reflect:Constructor.newInstance|](v1, v13) @signature [|Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L1349bc.   v13:= temp  @type object;
#L1349be.   v13:= ([|java:lang:Throwable|])v13;
#L1349c2.   v13:= ([|java:lang:Throwable|])v13;
#L1349c6.   goto L1348e0;
#L1349c8.   if v9 == 0 then goto L1349f4;
#L1349cc.   v13:= 0  @length 4;
#L1349ce.   v13:= new [|java:lang:Object|][v13];
#L1349d2.   call temp:=  [|java:lang:reflect:Constructor.newInstance|](v9, v13) @signature [|Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Constructor|] @type virtual;
#L1349d8.   v13:= temp  @type object;
#L1349da.   v13:= ([|java:lang:Throwable|])v13;
#L1349de.   v0:= v13  @type object;
#L1349e0.   v0:= ([|java:lang:Throwable|])v0;
#L1349e4.   v12:= v0  @type object;
#L1349e6.   call temp:=  [|java:lang:Throwable.initCause|](v12, v5) @signature [|Ljava/lang/Throwable;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:Throwable|] @type virtual;
#L1349ec.   v13:= v12  @type object;
#L1349ee.   goto L1348e0;
#L1349f2.   v13:= Exception  @type object;
#L1349f4.   v13:= v5  @type object;
#L1349f6.   goto L1348e0;
  catch  [|any|] @[L1348f4..L134922] goto L134924;
  catch  [|java:lang:Exception|] @[L13496a..L1349ec] goto L1349f2;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.helpExpungeStaleExceptions|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.helpExpungeStaleExceptions:()V|] @Access STATIC_FINAL {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0014));
        v1;
      
#L134a24.   v0:= @@[|java:util:concurrent:ForkJoinTask.exceptionTableLock|]   @type object;
#L134a28.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.tryLock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.tryLock:()Z|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L134a2e.   v1:= temp;
#L134a30.   if v1 == 0 then goto L134a40;
#L134a34.   call temp:=  [|java:util:concurrent:ForkJoinTask.expungeStaleExceptions|]() @signature [|Ljava/util/concurrent/ForkJoinTask;.expungeStaleExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L134a3a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L134a40.   return @void ;
#L134a42.   v1:= Exception  @type object;
#L134a44.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L134a4a.   throw v1;
  catch  [|any|] @[L134a34..L134a3a] goto L134a42;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.helpQuiesce|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.helpQuiesce:()V|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L134a68.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134a6e.   v0:= temp  @type object;
#L134a70.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L134a74.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.helpQuiescePool|](v0) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.helpQuiescePool:()V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L134a7a.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask.inForkJoinPool|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.inForkJoinPool:()Z|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L134a8c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134a92.   v0:= temp  @type object;
#L134a94.   v0:= instanceof @varname v0 @type [|java:util:concurrent:ForkJoinWorkerThread|];
#L134a98.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:ForkJoinTask.invokeAll|] ([|java:util:Collection|] v7 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.invokeAll:(Ljava/util/Collection;)Ljava/util/Collection;|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:lang:Throwable|] v0 @varname [|ex|] @scope ((L001d,L0032), (L0035,L0070));
        [|java:util:concurrent:ForkJoinTask|] v3 @varname [|t|] @scope ((L002c,L004b), (L0054,L006a));
        [|int|] v1 @varname [|i|] @scope ((L0024,L0070));
        [|int|] v2 @varname [|last|] @scope ((L0023,L0070));
        [|java:util:List|] v4 @varname [|ts|] @scope ((L001c,L0070));

        v5;
        v6;
      
#L134aac.   v6:= -1  @length 4;
#L134aae.   v5:= instanceof @varname v7 @type [|java:util:RandomAccess|];
#L134ab2.   if v5 == 0 then goto L134abe;
#L134ab6.   v5:= instanceof @varname v7 @type [|java:util:List|];
#L134aba.   if v5 != 0 then goto L134ade;
#L134abe.   call temp:=  [|java:util:Collection.size|](v7) @signature [|Ljava/util/Collection;.size:()I|] @classDescriptor [|java:util:Collection|] @type interface;
#L134ac4.   v5:= temp;
#L134ac6.   v5:= new [|java:util:concurrent:ForkJoinTask|][v5];
#L134aca.   call temp:=  [|java:util:Collection.toArray|](v7, v5) @signature [|Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Collection|] @type interface;
#L134ad0.   v5:= temp  @type object;
#L134ad2.   v5:= ([|java:util:concurrent:ForkJoinTask|][])v5;
#L134ad6.   call temp:=  [|java:util:concurrent:ForkJoinTask.invokeAll|](v5) @signature [|Ljava/util/concurrent/ForkJoinTask;.invokeAll:([Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L134adc.   return v7  @type object;
#L134ade.   v4:= v7  @type object;
#L134ae0.   v4:= ([|java:util:List|])v4;
#L134ae4.   v0:= 0  @length 4;
#L134ae6.   call temp:=  [|java:util:List.size|](v4) @signature [|Ljava/util/List;.size:()I|] @classDescriptor [|java:util:List|] @type interface;
#L134aec.   v5:= temp;
#L134aee.   v2:= v5 + -1;
#L134af2.   v1:= v2;
#L134af4.   if v1 < 0 then goto L134b42;
#L134af8.   call temp:=  [|java:util:List.get|](v4, v1) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L134afe.   v3:= temp  @type object;
#L134b00.   v3:= ([|java:util:concurrent:ForkJoinTask|])v3;
#L134b04.   if v3 != 0 then goto L134b1c;
#L134b08.   if v0 != 0 then goto L134b16;
#L134b0c.   v0:= new [|java:lang:NullPointerException|];
#L134b10.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L134b16.   v1:= v1 + -1;
#L134b1a.   goto L134af4;
#L134b1c.   if v1 == 0 then goto L134b28;
#L134b20.   call temp:=  [|java:util:concurrent:ForkJoinTask.fork|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.fork:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134b26.   goto L134b16;
#L134b28.   call temp:=  [|java:util:concurrent:ForkJoinTask.doInvoke|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.doInvoke:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134b2e.   v5:= temp;
#L134b30.   if v5 >= v6 then goto L134b16;
#L134b34.   if v0 != 0 then goto L134b16;
#L134b38.   call temp:=  [|java:util:concurrent:ForkJoinTask.getException|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.getException:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134b3e.   v0:= temp  @type object;
#L134b40.   goto L134b16;
#L134b42.   v1:= 1  @length 4;
#L134b44.   if v1 > v2 then goto L134b80;
#L134b48.   call temp:=  [|java:util:List.get|](v4, v1) @signature [|Ljava/util/List;.get:(I)Ljava/lang/Object;|] @classDescriptor [|java:util:List|] @type interface;
#L134b4e.   v3:= temp  @type object;
#L134b50.   v3:= ([|java:util:concurrent:ForkJoinTask|])v3;
#L134b54.   if v3 == 0 then goto L134b64;
#L134b58.   if v0 == 0 then goto L134b6a;
#L134b5c.   v5:= 0  @length 4;
#L134b5e.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancel|](v3, v5) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134b64.   v1:= v1 + 1;
#L134b68.   goto L134b44;
#L134b6a.   call temp:=  [|java:util:concurrent:ForkJoinTask.doJoin|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.doJoin:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134b70.   v5:= temp;
#L134b72.   if v5 >= v6 then goto L134b64;
#L134b76.   call temp:=  [|java:util:concurrent:ForkJoinTask.getException|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.getException:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134b7c.   v0:= temp  @type object;
#L134b7e.   goto L134b64;
#L134b80.   if v0 == 0 then goto L134adc;
#L134b84.   call temp:=  [|libcore:util:SneakyThrow.sneakyThrow|](v0) @signature [|Llibcore/util/SneakyThrow;.sneakyThrow:(Ljava/lang/Throwable;)V|] @classDescriptor [|libcore:util:SneakyThrow|] @type static;
#L134b8a.   goto L134adc;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.invokeAll|] ([|java:util:concurrent:ForkJoinTask|] v0 @type (object), [|java:util:concurrent:ForkJoinTask|] v1 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.invokeAll:(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinTask;)V|] @Access PUBLIC_STATIC {
      local temp ;


      
#L134b9c.   call temp:=  [|java:util:concurrent:ForkJoinTask.fork|](v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.fork:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134ba2.   call temp:=  [|java:util:concurrent:ForkJoinTask.invoke|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask;.invoke:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134ba8.   call temp:=  [|java:util:concurrent:ForkJoinTask.join|](v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.join:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134bae.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.invokeAll|] ([|java:util:concurrent:ForkJoinTask|][] v6 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.invokeAll:([Ljava/util/concurrent/ForkJoinTask;)V|] @Access PUBLIC_STATIC_VARARGS {
      local temp ;
        [|java:lang:Throwable|] v0 @varname [|ex|] @scope ((L0002,L0010), (L0013,L004a));
        [|java:util:concurrent:ForkJoinTask|] v3 @varname [|t|] @scope ((L000a,L0029), (L002e,L0044));
        [|int|] v1 @varname [|i|] @scope ((L0006,L004a));
        [|int|] v2 @varname [|last|] @scope ((L0005,L004a));

        v4;
        v5;
      
#L134bc0.   v5:= -1  @length 4;
#L134bc2.   v0:= 0  @length 4;
#L134bc4.   v4:= v6.length;
#L134bc6.   v2:= v4 + -1;
#L134bca.   v1:= v2;
#L134bcc.   if v1 < 0 then goto L134c12;
#L134bd0.   v3:= v6[v1]  @type object;
#L134bd4.   if v3 != 0 then goto L134bec;
#L134bd8.   if v0 != 0 then goto L134be6;
#L134bdc.   v0:= new [|java:lang:NullPointerException|];
#L134be0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L134be6.   v1:= v1 + -1;
#L134bea.   goto L134bcc;
#L134bec.   if v1 == 0 then goto L134bf8;
#L134bf0.   call temp:=  [|java:util:concurrent:ForkJoinTask.fork|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.fork:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134bf6.   goto L134be6;
#L134bf8.   call temp:=  [|java:util:concurrent:ForkJoinTask.doInvoke|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.doInvoke:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134bfe.   v4:= temp;
#L134c00.   if v4 >= v5 then goto L134be6;
#L134c04.   if v0 != 0 then goto L134be6;
#L134c08.   call temp:=  [|java:util:concurrent:ForkJoinTask.getException|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.getException:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134c0e.   v0:= temp  @type object;
#L134c10.   goto L134be6;
#L134c12.   v1:= 1  @length 4;
#L134c14.   if v1 > v2 then goto L134c48;
#L134c18.   v3:= v6[v1]  @type object;
#L134c1c.   if v3 == 0 then goto L134c2c;
#L134c20.   if v0 == 0 then goto L134c32;
#L134c24.   v4:= 0  @length 4;
#L134c26.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancel|](v3, v4) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134c2c.   v1:= v1 + 1;
#L134c30.   goto L134c14;
#L134c32.   call temp:=  [|java:util:concurrent:ForkJoinTask.doJoin|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.doJoin:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134c38.   v4:= temp;
#L134c3a.   if v4 >= v5 then goto L134c2c;
#L134c3e.   call temp:=  [|java:util:concurrent:ForkJoinTask.getException|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.getException:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134c44.   v0:= temp  @type object;
#L134c46.   goto L134c2c;
#L134c48.   if v0 == 0 then goto L134c52;
#L134c4c.   call temp:=  [|libcore:util:SneakyThrow.sneakyThrow|](v0) @signature [|Llibcore/util/SneakyThrow;.sneakyThrow:(Ljava/lang/Throwable;)V|] @classDescriptor [|libcore:util:SneakyThrow|] @type static;
#L134c52.   return @void ;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinTask.peekNextLocalTask|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.peekNextLocalTask:()Ljava/util/concurrent/ForkJoinTask;|] @Access PROTECTED_STATIC {
      local temp ;
        v0;
      
#L134c64.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134c6a.   v0:= temp  @type object;
#L134c6c.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L134c70.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.peekTask|](v0) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.peekTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L134c76.   v0:= temp  @type object;
#L134c78.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinTask.pollNextLocalTask|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.pollNextLocalTask:()Ljava/util/concurrent/ForkJoinTask;|] @Access PROTECTED_STATIC {
      local temp ;
        v0;
      
#L134c8c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134c92.   v0:= temp  @type object;
#L134c94.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L134c98.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.pollLocalTask|](v0) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.pollLocalTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L134c9e.   v0:= temp  @type object;
#L134ca0.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinTask.pollTask|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.pollTask:()Ljava/util/concurrent/ForkJoinTask;|] @Access PROTECTED_STATIC {
      local temp ;
        v0;
      
#L134cb4.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134cba.   v0:= temp  @type object;
#L134cbc.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L134cc0.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.pollTask|](v0) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.pollTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L134cc6.   v0:= temp  @type object;
#L134cc8.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.readObject|] ([|java:util:concurrent:ForkJoinTask|] v1 @type (this), [|java:io:ObjectInputStream|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v0 @varname [|ex|] @scope ((L0007,L000b));


      
#L134cdc.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v2) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L134ce2.   call temp:=  [|java:io:ObjectInputStream.readObject|](v2) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L134ce8.   v0:= temp  @type object;
#L134cea.   if v0 == 0 then goto L134cf8;
#L134cee.   v0:= ([|java:lang:Throwable|])v0;
#L134cf2.   call temp:=  [|java:util:concurrent:ForkJoinTask.setExceptionalCompletion|](v1, v0) @signature [|Ljava/util/concurrent/ForkJoinTask;.setExceptionalCompletion:(Ljava/lang/Throwable;)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134cf8.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask.reportResult|] ([|java:util:concurrent:ForkJoinTask|] v3 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.reportResult:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:lang:Throwable|] v0 @varname [|ex|] @scope ((L0012,L0017));
        [|int|] v1 @varname [|s|] @scope ((L0002,L001c));

        v2;
      
#L134d0c.   v1:= v3.[|java:util:concurrent:ForkJoinTask.status|] ;
#L134d10.   v2:= -2  @length 4;
#L134d12.   if v1 != v2 then goto L134d22;
#L134d16.   v2:= new [|java:util:concurrent:CancellationException|];
#L134d1a.   call temp:=  [|java:util:concurrent:CancellationException.<init>|](v2) @signature [|Ljava/util/concurrent/CancellationException;.<init>:()V|] @classDescriptor [|java:util:concurrent:CancellationException|] @type direct;
#L134d20.   throw v2;
#L134d22.   v2:= -3  @length 4;
#L134d24.   if v1 != v2 then goto L134d3a;
#L134d28.   call temp:=  [|java:util:concurrent:ForkJoinTask.getThrowableException|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.getThrowableException:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134d2e.   v0:= temp  @type object;
#L134d30.   if v0 == 0 then goto L134d3a;
#L134d34.   call temp:=  [|libcore:util:SneakyThrow.sneakyThrow|](v0) @signature [|Llibcore/util/SneakyThrow;.sneakyThrow:(Ljava/lang/Throwable;)V|] @classDescriptor [|libcore:util:SneakyThrow|] @type static;
#L134d3a.   call temp:=  [|java:util:concurrent:ForkJoinTask.getRawResult|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.getRawResult:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134d40.   v2:= temp  @type object;
#L134d42.   return v2  @type object;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinTask.setCompletion|] ([|java:util:concurrent:ForkJoinTask|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.setCompletion:(I)I|] @Access PRIVATE {
      local temp ;

        [|int|] v4 @varname [|s|] @scope ((L0002,L0004), (L0005,L001d));


        v0;
        v1;
        v2;
        v3;
        v5;
      
#L134d54.   v4:= v6.[|java:util:concurrent:ForkJoinTask.status|] ;
#L134d58.   if v4 >= 0 then goto L134d5e;
#L134d5c.   return v4;
#L134d5e.   v0:= @@[|java:util:concurrent:ForkJoinTask.UNSAFE|]   @type object;
#L134d62.   v2:= @@[|java:util:concurrent:ForkJoinTask.statusOffset|]   @wide;
#L134d66.   v1:= v6  @type object;
#L134d68.   v5:= v7;
#L134d6a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L134d70.   v0:= temp;
#L134d72.   if v0 == 0 then goto L134d54;
#L134d76.   if v4 == 0 then goto L134d84;
#L134d7a.   (@monitorenter v6)
#L134d7c.   call temp:=  [|java:lang:Object.notifyAll|](v6) @signature [|Ljava/lang/Object;.notifyAll:()V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L134d82.   (@monitorexit v6)
#L134d84.   v4:= v7;
#L134d86.   goto L134d5c;
#L134d88.   v0:= Exception  @type object;
#L134d8a.   (@monitorexit v6)
#L134d8c.   throw v0;
  catch  [|any|] @[L134d7c..L134d8c] goto L134d88;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinTask.setExceptionalCompletion|] ([|java:util:concurrent:ForkJoinTask|] v7 @type (this), [|java:lang:Throwable|] v8 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.setExceptionalCompletion:(Ljava/lang/Throwable;)I|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:ForkJoinTask$ExceptionNode|] v0 @varname [|e|] @scope ((L0015,L0032));
        [|int|] v2 @varname [|i|] @scope ((L0013,L0032));
        [|java:util:concurrent:ForkJoinTask$ExceptionNode|][] v4 @varname [|t|] @scope ((L000e,L0032));
        [|int|] v1 @varname [|h|] @scope ((L0004,L0037));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|lock|] @scope ((L0006,L0037));


        v5;
        v6;
      
#L134dac.   call temp:=  [|java:lang:System.identityHashCode|](v7) @signature [|Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:System|] @type static;
#L134db2.   v1:= temp;
#L134db4.   v3:= @@[|java:util:concurrent:ForkJoinTask.exceptionTableLock|]   @type object;
#L134db8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L134dbe.   call temp:=  [|java:util:concurrent:ForkJoinTask.expungeStaleExceptions|]() @signature [|Ljava/util/concurrent/ForkJoinTask;.expungeStaleExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L134dc4.   v4:= @@[|java:util:concurrent:ForkJoinTask.exceptionTable|]   @type object;
#L134dc8.   v5:= v4.length;
#L134dca.   v5:= v5 + -1;
#L134dce.   v2:= v1 ^& v5  @type int;
#L134dd2.   v0:= v4[v2]  @type object;
#L134dd6.   if v0 != 0 then goto L134dfe;
#L134dda.   v5:= new [|java:util:concurrent:ForkJoinTask$ExceptionNode|];
#L134dde.   v6:= v4[v2]  @type object;
#L134de2.   call temp:=  [|java:util:concurrent:ForkJoinTask$ExceptionNode.<init>|](v5, v7, v8, v6) @signature [|Ljava/util/concurrent/ForkJoinTask$ExceptionNode;.<init>:(Ljava/util/concurrent/ForkJoinTask;Ljava/lang/Throwable;Ljava/util/concurrent/ForkJoinTask$ExceptionNode;)V|] @classDescriptor [|java:util:concurrent:ForkJoinTask$ExceptionNode|] @type direct;
#L134de8.   v4[v2]:= v5  @type object;
#L134dec.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L134df2.   v5:= -3  @length 4;
#L134df4.   call temp:=  [|java:util:concurrent:ForkJoinTask.setCompletion|](v7, v5) @signature [|Ljava/util/concurrent/ForkJoinTask;.setCompletion:(I)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134dfa.   v5:= temp;
#L134dfc.   return v5;
#L134dfe.   call temp:=  [|java:util:concurrent:ForkJoinTask$ExceptionNode.get|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask$ExceptionNode;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask$ExceptionNode|] @type virtual;
#L134e04.   v5:= temp  @type object;
#L134e06.   if v5 == v7 then goto L134dec;
#L134e0a.   v0:= v0.[|java:util:concurrent:ForkJoinTask$ExceptionNode.next|]   @type object;
#L134e0e.   goto L134dd6;
#L134e10.   v5:= Exception  @type object;
#L134e12.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L134e18.   throw v5;
  catch  [|any|] @[L134dbe..L134dec] goto L134e10;
  catch  [|any|] @[L134dfe..L134e0e] goto L134e10;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.writeObject|] ([|java:util:concurrent:ForkJoinTask|] v1 @type (this), [|java:io:ObjectOutputStream|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;



        v0;
      
#L134e40.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v2) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L134e46.   call temp:=  [|java:util:concurrent:ForkJoinTask.getException|](v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.getException:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134e4c.   v0:= temp  @type object;
#L134e4e.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v2, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L134e54.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask.cancel|] ([|java:util:concurrent:ForkJoinTask|] v2 @type (this), [|boolean|] v3) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.cancel:(Z)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L134e68.   v1:= -2  @length 4;
#L134e6a.   call temp:=  [|java:util:concurrent:ForkJoinTask.setCompletion|](v2, v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.setCompletion:(I)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134e70.   v0:= temp;
#L134e72.   if v0 != v1 then goto L134e7a;
#L134e76.   v0:= 1  @length 4;
#L134e78.   return v0;
#L134e7a.   v0:= 0  @length 4;
#L134e7c.   goto L134e78;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.cancelIgnoringExceptions|] ([|java:util:concurrent:ForkJoinTask|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.cancelIgnoringExceptions:()V|] @Access FINAL {
      local temp ;


        v0;
      
#L134e90.   v0:= 0  @length 4;
#L134e92.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancel|](v1, v0) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134e98.   return @void ;
#L134e9a.   v0:= Exception  @type object;
#L134e9c.   goto L134e98;
  catch  [|java:lang:Throwable|] @[L134e92..L134e98] goto L134e9a;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.complete|] ([|java:util:concurrent:ForkJoinTask|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.complete:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;

        [|java:lang:Throwable|] v0 @varname [|rex|] @scope ((L0009,L000d));


        v1;
      
#L134ec0.   call temp:=  [|java:util:concurrent:ForkJoinTask.setRawResult|](v2, v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.setRawResult:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134ec6.   v1:= -1  @length 4;
#L134ec8.   call temp:=  [|java:util:concurrent:ForkJoinTask.setCompletion|](v2, v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.setCompletion:(I)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134ece.   return @void ;
#L134ed0.   v0:= Exception  @type object;
#L134ed2.   call temp:=  [|java:util:concurrent:ForkJoinTask.setExceptionalCompletion|](v2, v0) @signature [|Ljava/util/concurrent/ForkJoinTask;.setExceptionalCompletion:(Ljava/lang/Throwable;)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134ed8.   goto L134ece;
  catch  [|java:lang:Throwable|] @[L134ec0..L134ec6] goto L134ed0;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.completeExceptionally|] ([|java:util:concurrent:ForkJoinTask|] v1 @type (this), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.completeExceptionally:(Ljava/lang/Throwable;)V|] @Access PUBLIC {
      local temp ;




        v0;
      
#L134efc.   v0:= instanceof @varname v2 @type [|java:lang:RuntimeException|];
#L134f00.   if v0 != 0 then goto L134f0c;
#L134f04.   v0:= instanceof @varname v2 @type [|java:lang:Error|];
#L134f08.   if v0 == 0 then goto L134f14;
#L134f0c.   call temp:=  [|java:util:concurrent:ForkJoinTask.setExceptionalCompletion|](v1, v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.setExceptionalCompletion:(Ljava/lang/Throwable;)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134f12.   return @void ;
#L134f14.   v0:= new [|java:lang:RuntimeException|];
#L134f18.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v2) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L134f1e.   v2:= v0  @type object;
#L134f20.   goto L134f0c;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.doExec|] ([|java:util:concurrent:ForkJoinTask|] v3 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.doExec:()V|] @Access FINAL {
      local temp ;

        [|boolean|] v0 @varname [|completed|] @scope ((L0008,L000e));
        [|java:lang:Throwable|] v1 @varname [|rex|] @scope ((L0010,L0014));

        v2;
      
#L134f34.   v2:= v3.[|java:util:concurrent:ForkJoinTask.status|] ;
#L134f38.   if v2 < 0 then goto L134f50;
#L134f3c.   call temp:=  [|java:util:concurrent:ForkJoinTask.exec|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.exec:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134f42.   v0:= temp;
#L134f44.   if v0 == 0 then goto L134f50;
#L134f48.   v2:= -1  @length 4;
#L134f4a.   call temp:=  [|java:util:concurrent:ForkJoinTask.setCompletion|](v3, v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.setCompletion:(I)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134f50.   return @void ;
#L134f52.   v1:= Exception  @type object;
#L134f54.   call temp:=  [|java:util:concurrent:ForkJoinTask.setExceptionalCompletion|](v3, v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.setExceptionalCompletion:(Ljava/lang/Throwable;)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134f5a.   goto L134f50;
  catch  [|java:lang:Throwable|] @[L134f3c..L134f42] goto L134f52;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask.exec|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.exec:()Z|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinTask.fork|] ([|java:util:concurrent:ForkJoinTask|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.fork:()Ljava/util/concurrent/ForkJoinTask;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L134f7c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134f82.   v0:= temp  @type object;
#L134f84.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L134f88.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.pushTask|](v0, v1) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.pushTask:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L134f8e.   return v1  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask.get|] ([|java:util:concurrent:ForkJoinTask|] v4 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.get:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;

        [|int|] v1 @varname [|s|] @scope ((L000c,L0015), (L001c,L0030));
        [|java:lang:Throwable|] v0 @varname [|ex|] @scope ((L0023,L002b));

        v2;
        v3;
      
#L134fa0.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L134fa6.   v2:= temp  @type object;
#L134fa8.   v2:= instanceof @varname v2 @type [|java:util:concurrent:ForkJoinWorkerThread|];
#L134fac.   if v2 == 0 then goto L134fca;
#L134fb0.   call temp:=  [|java:util:concurrent:ForkJoinTask.doJoin|](v4) @signature [|Ljava/util/concurrent/ForkJoinTask;.doJoin:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134fb6.   v1:= temp;
#L134fb8.   v2:= -2  @length 4;
#L134fba.   if v1 != v2 then goto L134fd8;
#L134fbe.   v2:= new [|java:util:concurrent:CancellationException|];
#L134fc2.   call temp:=  [|java:util:concurrent:CancellationException.<init>|](v2) @signature [|Ljava/util/concurrent/CancellationException;.<init>:()V|] @classDescriptor [|java:util:concurrent:CancellationException|] @type direct;
#L134fc8.   throw v2;
#L134fca.   v2:= 0  @length wide16;
#L134fce.   call temp:=  [|java:util:concurrent:ForkJoinTask.externalInterruptibleAwaitDone|](v4, v2, v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.externalInterruptibleAwaitDone:(J)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134fd4.   v1:= temp;
#L134fd6.   goto L134fb8;
#L134fd8.   v2:= -3  @length 4;
#L134fda.   if v1 != v2 then goto L134ff6;
#L134fde.   call temp:=  [|java:util:concurrent:ForkJoinTask.getThrowableException|](v4) @signature [|Ljava/util/concurrent/ForkJoinTask;.getThrowableException:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L134fe4.   v0:= temp  @type object;
#L134fe6.   if v0 == 0 then goto L134ff6;
#L134fea.   v2:= new [|java:util:concurrent:ExecutionException|];
#L134fee.   call temp:=  [|java:util:concurrent:ExecutionException.<init>|](v2, v0) @signature [|Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:ExecutionException|] @type direct;
#L134ff4.   throw v2;
#L134ff6.   call temp:=  [|java:util:concurrent:ForkJoinTask.getRawResult|](v4) @signature [|Ljava/util/concurrent/ForkJoinTask;.getRawResult:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L134ffc.   v2:= temp  @type object;
#L134ffe.   return v2  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask.get|] ([|java:util:concurrent:ForkJoinTask|] v12 @type (this), [|long|] v13, [|java:util:concurrent:TimeUnit|] v15 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;

        [|boolean|] v0 @varname [|completed|] @scope ((L0014,L0024), (L0032,L0047));
        [|long|] v4 @varname [|nanos|] @scope ((L000f,L0024), (L0032,L0047));
        [|java:util:concurrent:ForkJoinWorkerThread|] v9 @varname [|w|] @scope ((L000b,L0024), (L0032,L0047));
        [|int|] v7 @varname [|s|] @scope ((L0026,L0032), (L0055,L006f));
        [|java:lang:Throwable|] v6 @varname [|rex|] @scope ((L0033,L0037));
        [|long|] v2 @varname [|millis|] @scope ((L004b,L0055));
        [|java:lang:Throwable|] v1 @varname [|ex|] @scope ((L0062,L006a));
        [|java:lang:Thread|] v8 @varname [|t|] @scope ((L0004,L006f));



        v3;
        v5;
        v10;
        v11;
      
#L135010.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L135016.   v8:= temp  @type object;
#L135018.   v10:= instanceof @varname v8 @type [|java:util:concurrent:ForkJoinWorkerThread|];
#L13501c.   if v10 == 0 then goto L13509e;
#L135020.   v9:= v8  @type object;
#L135022.   v9:= ([|java:util:concurrent:ForkJoinWorkerThread|])v9;
#L135026.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v15, v13, v14) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13502c.   v4:= temp  @type wide;
#L13502e.   v10:= v12.[|java:util:concurrent:ForkJoinTask.status|] ;
#L135032.   if v10 < 0 then goto L135058;
#L135036.   v0:= 0  @length 4;
#L135038.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.unpushTask|](v9, v12) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.unpushTask:(Ljava/util/concurrent/ForkJoinTask;)Z|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L13503e.   v10:= temp;
#L135040.   if v10 == 0 then goto L13504c;
#L135044.   call temp:=  [|java:util:concurrent:ForkJoinTask.exec|](v12) @signature [|Ljava/util/concurrent/ForkJoinTask;.exec:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L13504a.   v0:= temp;
#L13504c.   if v0 == 0 then goto L13507e;
#L135050.   v10:= -1  @length 4;
#L135052.   call temp:=  [|java:util:concurrent:ForkJoinTask.setCompletion|](v12, v10) @signature [|Ljava/util/concurrent/ForkJoinTask;.setCompletion:(I)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L135058.   v7:= v12.[|java:util:concurrent:ForkJoinTask.status|] ;
#L13505c.   v10:= -1  @length 4;
#L13505e.   if v7 == v10 then goto L1350e4;
#L135062.   v10:= -2  @length 4;
#L135064.   if v7 != v10 then goto L1350ba;
#L135068.   v10:= new [|java:util:concurrent:CancellationException|];
#L13506c.   call temp:=  [|java:util:concurrent:CancellationException.<init>|](v10) @signature [|Ljava/util/concurrent/CancellationException;.<init>:()V|] @classDescriptor [|java:util:concurrent:CancellationException|] @type direct;
#L135072.   throw v10;
#L135074.   v6:= Exception  @type object;
#L135076.   call temp:=  [|java:util:concurrent:ForkJoinTask.setExceptionalCompletion|](v12, v6) @signature [|Ljava/util/concurrent/ForkJoinTask;.setExceptionalCompletion:(Ljava/lang/Throwable;)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L13507c.   goto L13504c;
#L13507e.   v10:= v12.[|java:util:concurrent:ForkJoinTask.status|] ;
#L135082.   if v10 < 0 then goto L135058;
#L135086.   v10:= 0  @length wide16;
#L13508a.   v10:= cmp(v4,v10);
#L13508e.   if v10 <= 0 then goto L135058;
#L135092.   v10:= v9.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L135096.   call temp:=  [|java:util:concurrent:ForkJoinPool.timedAwaitJoin|](v10, v12, v4, v5) @signature [|Ljava/util/concurrent/ForkJoinPool;.timedAwaitJoin:(Ljava/util/concurrent/ForkJoinTask;J)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L13509c.   goto L135058;
#L13509e.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v15, v13, v14) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L1350a4.   v2:= temp  @type wide;
#L1350a6.   v10:= 0  @length wide16;
#L1350aa.   v10:= cmp(v2,v10);
#L1350ae.   if v10 <= 0 then goto L135058;
#L1350b2.   call temp:=  [|java:util:concurrent:ForkJoinTask.externalInterruptibleAwaitDone|](v12, v2, v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.externalInterruptibleAwaitDone:(J)I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L1350b8.   goto L135058;
#L1350ba.   v10:= -3  @length 4;
#L1350bc.   if v7 == v10 then goto L1350cc;
#L1350c0.   v10:= new [|java:util:concurrent:TimeoutException|];
#L1350c4.   call temp:=  [|java:util:concurrent:TimeoutException.<init>|](v10) @signature [|Ljava/util/concurrent/TimeoutException;.<init>:()V|] @classDescriptor [|java:util:concurrent:TimeoutException|] @type direct;
#L1350ca.   throw v10;
#L1350cc.   call temp:=  [|java:util:concurrent:ForkJoinTask.getThrowableException|](v12) @signature [|Ljava/util/concurrent/ForkJoinTask;.getThrowableException:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L1350d2.   v1:= temp  @type object;
#L1350d4.   if v1 == 0 then goto L1350e4;
#L1350d8.   v10:= new [|java:util:concurrent:ExecutionException|];
#L1350dc.   call temp:=  [|java:util:concurrent:ExecutionException.<init>|](v10, v1) @signature [|Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:ExecutionException|] @type direct;
#L1350e2.   throw v10;
#L1350e4.   call temp:=  [|java:util:concurrent:ForkJoinTask.getRawResult|](v12) @signature [|Ljava/util/concurrent/ForkJoinTask;.getRawResult:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L1350ea.   v10:= temp  @type object;
#L1350ec.   return v10  @type object;
  catch  [|java:lang:Throwable|] @[L135044..L13504a] goto L135074;

   }
    procedure [|java:lang:Throwable|] [|java:util:concurrent:ForkJoinTask.getException|] ([|java:util:concurrent:ForkJoinTask|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.getException:()Ljava/lang/Throwable;|] @Access PUBLIC_FINAL {
      local temp ;

        [|int|] v0 @varname [|s|] @scope ((L0002,L0015));

        v1;
      
#L135110.   v0:= v2.[|java:util:concurrent:ForkJoinTask.status|] ;
#L135114.   v1:= -1  @length 4;
#L135116.   if v0 < v1 then goto L13511e;
#L13511a.   v1:= 0  @length 4;
#L13511c.   return v1  @type object;
#L13511e.   v1:= -2  @length 4;
#L135120.   if v0 != v1 then goto L135130;
#L135124.   v1:= new [|java:util:concurrent:CancellationException|];
#L135128.   call temp:=  [|java:util:concurrent:CancellationException.<init>|](v1) @signature [|Ljava/util/concurrent/CancellationException;.<init>:()V|] @classDescriptor [|java:util:concurrent:CancellationException|] @type direct;
#L13512e.   goto L13511c;
#L135130.   call temp:=  [|java:util:concurrent:ForkJoinTask.getThrowableException|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.getThrowableException:()Ljava/lang/Throwable;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L135136.   v1:= temp  @type object;
#L135138.   goto L13511c;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask.getRawResult|] () @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.getRawResult:()Ljava/lang/Object;|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask.invoke|] ([|java:util:concurrent:ForkJoinTask|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.invoke:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L13514c.   call temp:=  [|java:util:concurrent:ForkJoinTask.doInvoke|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.doInvoke:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L135152.   v0:= temp;
#L135154.   v1:= -1  @length 4;
#L135156.   if v0 == v1 then goto L135164;
#L13515a.   call temp:=  [|java:util:concurrent:ForkJoinTask.reportResult|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.reportResult:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L135160.   v0:= temp  @type object;
#L135162.   return v0  @type object;
#L135164.   call temp:=  [|java:util:concurrent:ForkJoinTask.getRawResult|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.getRawResult:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L13516a.   v0:= temp  @type object;
#L13516c.   goto L135162;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask.isCancelled|] ([|java:util:concurrent:ForkJoinTask|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.isCancelled:()Z|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L135180.   v0:= v2.[|java:util:concurrent:ForkJoinTask.status|] ;
#L135184.   v1:= -2  @length 4;
#L135186.   if v0 != v1 then goto L13518e;
#L13518a.   v0:= 1  @length 4;
#L13518c.   return v0;
#L13518e.   v0:= 0  @length 4;
#L135190.   goto L13518c;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask.isCompletedAbnormally|] ([|java:util:concurrent:ForkJoinTask|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.isCompletedAbnormally:()Z|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L1351a4.   v0:= v2.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1351a8.   v1:= -1  @length 4;
#L1351aa.   if v0 >= v1 then goto L1351b2;
#L1351ae.   v0:= 1  @length 4;
#L1351b0.   return v0;
#L1351b2.   v0:= 0  @length 4;
#L1351b4.   goto L1351b0;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask.isCompletedNormally|] ([|java:util:concurrent:ForkJoinTask|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.isCompletedNormally:()Z|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L1351c8.   v0:= v2.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1351cc.   v1:= -1  @length 4;
#L1351ce.   if v0 != v1 then goto L1351d6;
#L1351d2.   v0:= 1  @length 4;
#L1351d4.   return v0;
#L1351d6.   v0:= 0  @length 4;
#L1351d8.   goto L1351d4;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask.isDone|] ([|java:util:concurrent:ForkJoinTask|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.isDone:()Z|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L1351ec.   v0:= v1.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1351f0.   if v0 >= 0 then goto L1351f8;
#L1351f4.   v0:= 1  @length 4;
#L1351f6.   return v0;
#L1351f8.   v0:= 0  @length 4;
#L1351fa.   goto L1351f6;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask.join|] ([|java:util:concurrent:ForkJoinTask|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.join:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
        v1;
      
#L13520c.   call temp:=  [|java:util:concurrent:ForkJoinTask.doJoin|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.doJoin:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L135212.   v0:= temp;
#L135214.   v1:= -1  @length 4;
#L135216.   if v0 == v1 then goto L135224;
#L13521a.   call temp:=  [|java:util:concurrent:ForkJoinTask.reportResult|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.reportResult:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L135220.   v0:= temp  @type object;
#L135222.   return v0  @type object;
#L135224.   call temp:=  [|java:util:concurrent:ForkJoinTask.getRawResult|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.getRawResult:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L13522a.   v0:= temp  @type object;
#L13522c.   goto L135222;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.quietlyInvoke|] ([|java:util:concurrent:ForkJoinTask|] v0 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.quietlyInvoke:()V|] @Access PUBLIC_FINAL {
      local temp ;


      
#L135240.   call temp:=  [|java:util:concurrent:ForkJoinTask.doInvoke|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask;.doInvoke:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L135246.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.quietlyJoin|] ([|java:util:concurrent:ForkJoinTask|] v0 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.quietlyJoin:()V|] @Access PUBLIC_FINAL {
      local temp ;


      
#L135258.   call temp:=  [|java:util:concurrent:ForkJoinTask.doJoin|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask;.doJoin:()I|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L13525e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.reinitialize|] ([|java:util:concurrent:ForkJoinTask|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.reinitialize:()V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L135270.   v0:= v2.[|java:util:concurrent:ForkJoinTask.status|] ;
#L135274.   v1:= -3  @length 4;
#L135276.   if v0 != v1 then goto L135282;
#L13527a.   call temp:=  [|java:util:concurrent:ForkJoinTask.clearExceptionalCompletion|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.clearExceptionalCompletion:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L135280.   return @void ;
#L135282.   v0:= 0  @length 4;
#L135284.   v2.[|java:util:concurrent:ForkJoinTask.status|]  := v0;
#L135288.   goto L135280;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.setRawResult|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.setRawResult:(Ljava/lang/Object;)V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask.tryAwaitDone|] ([|java:util:concurrent:ForkJoinTask|] v7 @type (this), [|long|] v8) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.tryAwaitDone:(J)V|] @Access FINAL {
      local temp ;

        [|int|] v6 @varname [|s|] @scope ((L0002,L0020), (L0021,L0024));


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13529c.   v6:= v7.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1352a0.   if v6 > 0 then goto L1352c2;
#L1352a4.   if v6 != 0 then goto L1352dc;
#L1352a8.   v0:= @@[|java:util:concurrent:ForkJoinTask.UNSAFE|]   @type object;
#L1352ac.   v2:= @@[|java:util:concurrent:ForkJoinTask.statusOffset|]   @wide;
#L1352b0.   v4:= 0  @length 4;
#L1352b2.   v5:= 1  @length 4;
#L1352b4.   v1:= v7  @type object;
#L1352b6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1352bc.   v0:= temp;
#L1352be.   if v0 == 0 then goto L1352dc;
#L1352c2.   v0:= v7.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1352c6.   if v0 <= 0 then goto L1352dc;
#L1352ca.   (@monitorenter v7)
#L1352cc.   v0:= v7.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1352d0.   if v0 <= 0 then goto L1352da;
#L1352d4.   call temp:=  [|java:lang:Object.wait|](v7, v8, v9) @signature [|Ljava/lang/Object;.wait:(J)V|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1352da.   (@monitorexit v7)
#L1352dc.   return @void ;
#L1352de.   v0:= Exception  @type object;
#L1352e0.   (@monitorexit v7)
#L1352e2.   throw v0;
#L1352e4.   v0:= Exception  @type object;
#L1352e6.   goto L1352dc;
  catch  [|java:lang:InterruptedException|] @[L13529c..L1352cc] goto L1352e4;
  catch  [|any|] @[L1352cc..L1352e2] goto L1352de;
  catch  [|java:lang:InterruptedException|] @[L1352e2..L1352e4] goto L1352e4;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask.tryUnfork|] ([|java:util:concurrent:ForkJoinTask|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinTask|] @signature [|Ljava/util/concurrent/ForkJoinTask;.tryUnfork:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L135318.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13531e.   v0:= temp  @type object;
#L135320.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L135324.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.unpushTask|](v0, v1) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.unpushTask:(Ljava/util/concurrent/ForkJoinTask;)Z|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L13532a.   v0:= temp;
#L13532c.   return v0;

   }
record [|java:util:concurrent:RecursiveAction|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:concurrent:ForkJoinTask|] {
   }
      global [|long|] @@[|java:util:concurrent:RecursiveAction.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:RecursiveAction.<init>|] ([|java:util:concurrent:RecursiveAction|] v0 @type (this)) @owner [|java:util:concurrent:RecursiveAction|] @signature [|Ljava/util/concurrent/RecursiveAction;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L135340.   call temp:=  [|java:util:concurrent:ForkJoinTask.<init>|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask;.<init>:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L135346.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:RecursiveAction.compute|] () @owner [|java:util:concurrent:RecursiveAction|] @signature [|Ljava/util/concurrent/RecursiveAction;.compute:()V|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:RecursiveAction.exec|] ([|java:util:concurrent:RecursiveAction|] v1 @type (this)) @owner [|java:util:concurrent:RecursiveAction|] @signature [|Ljava/util/concurrent/RecursiveAction;.exec:()Z|] @Access PROTECTED_FINAL {
      local temp ;

        v0;
      
#L135358.   call temp:=  [|java:util:concurrent:RecursiveAction.compute|](v1) @signature [|Ljava/util/concurrent/RecursiveAction;.compute:()V|] @classDescriptor [|java:util:concurrent:RecursiveAction|] @type virtual;
#L13535e.   v0:= 1  @length 4;
#L135360.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:RecursiveAction.getRawResult|] ([|java:util:concurrent:RecursiveAction|] v1 @type (this)) @owner [|java:util:concurrent:RecursiveAction|] @signature [|Ljava/util/concurrent/RecursiveAction;.getRawResult:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;

        v0;
      
#L135374.   call temp:=  [|java:util:concurrent:RecursiveAction.getRawResult|](v1) @signature [|Ljava/util/concurrent/RecursiveAction;.getRawResult:()Ljava/lang/Void;|] @classDescriptor [|java:util:concurrent:RecursiveAction|] @type virtual;
#L13537a.   v0:= temp  @type object;
#L13537c.   return v0  @type object;

   }
    procedure [|java:lang:Void|] [|java:util:concurrent:RecursiveAction.getRawResult|] ([|java:util:concurrent:RecursiveAction|] v1 @type (this)) @owner [|java:util:concurrent:RecursiveAction|] @signature [|Ljava/util/concurrent/RecursiveAction;.getRawResult:()Ljava/lang/Void;|] @Access PUBLIC_FINAL {
      local temp ;

        v0;
      
#L135390.   v0:= 0  @length 4;
#L135392.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:RecursiveAction.setRawResult|] ([|java:util:concurrent:RecursiveAction|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:RecursiveAction|] @signature [|Ljava/util/concurrent/RecursiveAction;.setRawResult:(Ljava/lang/Object;)V|] @Access PROTECTED_BRIDGE_SYNTHETIC {
      local temp ;


      
#L1353a4.   v1:= ([|java:lang:Void|])v1;
#L1353a8.   call temp:=  [|java:util:concurrent:RecursiveAction.setRawResult|](v0, v1) @signature [|Ljava/util/concurrent/RecursiveAction;.setRawResult:(Ljava/lang/Void;)V|] @classDescriptor [|java:util:concurrent:RecursiveAction|] @type virtual;
#L1353ae.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:RecursiveAction.setRawResult|] ([|java:util:concurrent:RecursiveAction|] v0 @type (this), [|java:lang:Void|] v1 @type (object)) @owner [|java:util:concurrent:RecursiveAction|] @signature [|Ljava/util/concurrent/RecursiveAction;.setRawResult:(Ljava/lang/Void;)V|] @Access PROTECTED_FINAL {
      local temp ;


      
#L1353c0.   return @void ;

   }
record [|java:util:concurrent:ForkJoinPool$InvokeAll|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:RecursiveAction|] {
      [|java:util:ArrayList|] [|java:util:concurrent:ForkJoinPool$InvokeAll.tasks|]    @AccessFlag FINAL;
   }
      global [|long|] @@[|java:util:concurrent:ForkJoinPool$InvokeAll.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ForkJoinPool$InvokeAll.<init>|] ([|java:util:concurrent:ForkJoinPool$InvokeAll|] v0 @type (this), [|java:util:ArrayList|] v1 @type (object)) @owner [|java:util:concurrent:ForkJoinPool$InvokeAll|] @signature [|Ljava/util/concurrent/ForkJoinPool$InvokeAll;.<init>:(Ljava/util/ArrayList;)V|] @Access CONSTRUCTOR {
      local temp ;



      
#L1353d4.   call temp:=  [|java:util:concurrent:RecursiveAction.<init>|](v0) @signature [|Ljava/util/concurrent/RecursiveAction;.<init>:()V|] @classDescriptor [|java:util:concurrent:RecursiveAction|] @type direct;
#L1353da.   v0.[|java:util:concurrent:ForkJoinPool$InvokeAll.tasks|]  := v1 @type object;
#L1353de.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool$InvokeAll.compute|] ([|java:util:concurrent:ForkJoinPool$InvokeAll|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinPool$InvokeAll|] @signature [|Ljava/util/concurrent/ForkJoinPool$InvokeAll;.compute:()V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1353f0.   v0:= v1.[|java:util:concurrent:ForkJoinPool$InvokeAll.tasks|]   @type object;
#L1353f4.   call temp:=  [|java:util:concurrent:ForkJoinPool$InvokeAll.invokeAll|](v0) @signature [|Ljava/util/concurrent/ForkJoinPool$InvokeAll;.invokeAll:(Ljava/util/Collection;)Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:ForkJoinPool$InvokeAll|] @type static;
#L1353fa.   return @void ;
#L1353fc.   v0:= Exception  @type object;
#L1353fe.   goto L1353fa;
  catch  [|java:lang:Exception|] @[L1353f0..L1353fa] goto L1353fc;

   }
record [|java:util:concurrent:ForkJoinPool$ManagedBlocker|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool$ManagedBlocker.block|] () @owner [|java:util:concurrent:ForkJoinPool$ManagedBlocker|] @signature [|Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;.block:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool$ManagedBlocker.isReleasable|] () @owner [|java:util:concurrent:ForkJoinPool$ManagedBlocker|] @signature [|Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;.isReleasable:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ForkJoinPool|]  @type class @AccessFlag PUBLIC  extends [|java:util:concurrent:AbstractExecutorService|] {
      [|int|] [|java:util:concurrent:ForkJoinPool.blockedCount|]    @AccessFlag VOLATILE;
      [|long|] [|java:util:concurrent:ForkJoinPool.ctl|]    @AccessFlag VOLATILE;
      [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory|] [|java:util:concurrent:ForkJoinPool.factory|]    @AccessFlag PRIVATE_FINAL;
      [|boolean|] [|java:util:concurrent:ForkJoinPool.locallyFifo|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:ForkJoinPool.nextWorkerIndex|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:concurrent:ForkJoinPool.nextWorkerNumber|]    @AccessFlag PRIVATE_VOLATILE;
      [|int|] [|java:util:concurrent:ForkJoinPool.parallelism|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:ForkJoinPool.queueBase|]    @AccessFlag VOLATILE;
      [|int|] [|java:util:concurrent:ForkJoinPool.queueTop|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ForkJoinPool.quiescerCount|]    @AccessFlag VOLATILE;
      [|int|] [|java:util:concurrent:ForkJoinPool.scanGuard|]    @AccessFlag VOLATILE;
      [|boolean|] [|java:util:concurrent:ForkJoinPool.shutdown|]    @AccessFlag VOLATILE;
      [|long|] [|java:util:concurrent:ForkJoinPool.stealCount|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:ForkJoinPool.submissionLock|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:ForkJoinTask|][] [|java:util:concurrent:ForkJoinPool.submissionQueue|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:ForkJoinPool.termination|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Thread$UncaughtExceptionHandler|] [|java:util:concurrent:ForkJoinPool.ueh|]    @AccessFlag FINAL;
      [|java:lang:String|] [|java:util:concurrent:ForkJoinPool.workerNamePrefix|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:ForkJoinWorkerThread|][] [|java:util:concurrent:ForkJoinPool.workers|]    @AccessFlag ;
   }
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.ABASE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.AC_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.AC_SHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.AC_UNIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.ASHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.EC_SHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.EC_UNIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.E_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.INITIAL_QUEUE_CAPACITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.INT_SIGN|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.MAXIMUM_QUEUE_CAPACITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.MAX_ID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.SG_UNIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.SHORT_SIGN|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.SHRINK_RATE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.SMASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.STOP_BIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.ST_SHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.TC_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.TC_SHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.TC_UNIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.UAC_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.UAC_SHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.UAC_UNIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.UTC_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.UTC_SHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinPool.UTC_UNIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.blockedCountOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory|] @@[|java:util:concurrent:ForkJoinPool.defaultForkJoinWorkerThreadFactory|]    @AccessFlag PUBLIC_STATIC_FINAL;
      global [|java:lang:RuntimePermission|] @@[|java:util:concurrent:ForkJoinPool.modifyThreadPermission|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.nextWorkerNumberOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:concurrent:atomic:AtomicInteger|] @@[|java:util:concurrent:ForkJoinPool.poolNumberGenerator|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.quiescerCountOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.scanGuardOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ForkJoinPool.stealCountOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:Random|] @@[|java:util:concurrent:ForkJoinPool.workerSeedGenerator|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.<clinit>|] () @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Class|] v0 @varname [|a|] @scope ((L007c,L0098), (L009f,L00a8));
        [|int|] v3 @varname [|s|] @scope ((L008b,L0098), (L009f,L00a8));
        [|java:lang:Exception|] v1 @varname [|e|] @scope ((L0099,L009f));
        [|java:lang:Class|] v2 @varname [|k|] @scope ((L0026,L00a8));
        v4;
        v5;
      
#L135420.   v4:= new [|java:util:concurrent:atomic:AtomicInteger|];
#L135424.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.<init>|](v4) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type direct;
#L13542a.   @@[|java:util:concurrent:ForkJoinPool.poolNumberGenerator|] := v4  @type object;
#L13542e.   v4:= new [|java:util:Random|];
#L135432.   call temp:=  [|java:util:Random.<init>|](v4) @signature [|Ljava/util/Random;.<init>:()V|] @classDescriptor [|java:util:Random|] @type direct;
#L135438.   @@[|java:util:concurrent:ForkJoinPool.workerSeedGenerator|] := v4  @type object;
#L13543c.   v4:= new [|java:lang:RuntimePermission|];
#L135440.   v5:= "modifyThread" @type (object, string);
#L135444.   call temp:=  [|java:lang:RuntimePermission.<init>|](v4, v5) @signature [|Ljava/lang/RuntimePermission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimePermission|] @type direct;
#L13544a.   @@[|java:util:concurrent:ForkJoinPool.modifyThreadPermission|] := v4  @type object;
#L13544e.   v4:= new [|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory|];
#L135452.   call temp:=  [|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory.<init>|](v4) @signature [|Ljava/util/concurrent/ForkJoinPool$DefaultForkJoinWorkerThreadFactory;.<init>:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool$DefaultForkJoinWorkerThreadFactory|] @type direct;
#L135458.   @@[|java:util:concurrent:ForkJoinPool.defaultForkJoinWorkerThreadFactory|] := v4  @type object;
#L13545c.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L135462.   v4:= temp  @type object;
#L135464.   @@[|java:util:concurrent:ForkJoinPool.UNSAFE|] := v4  @type object;
#L135468.   v2:= new [|java:util:concurrent:ForkJoinPool|];
#L13546c.   v4:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135470.   v5:= "ctl" @type (object, string);
#L135474.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v5) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13547a.   v5:= temp  @type object;
#L13547c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v4, v5) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135482.   v4:= temp  @type wide;
#L135484.   @@[|java:util:concurrent:ForkJoinPool.ctlOffset|] := v4  @wide;
#L135488.   v4:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L13548c.   v5:= "stealCount" @type (object, string);
#L135490.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v5) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L135496.   v5:= temp  @type object;
#L135498.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v4, v5) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13549e.   v4:= temp  @type wide;
#L1354a0.   @@[|java:util:concurrent:ForkJoinPool.stealCountOffset|] := v4  @wide;
#L1354a4.   v4:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1354a8.   v5:= "blockedCount" @type (object, string);
#L1354ac.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v5) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1354b2.   v5:= temp  @type object;
#L1354b4.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v4, v5) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1354ba.   v4:= temp  @type wide;
#L1354bc.   @@[|java:util:concurrent:ForkJoinPool.blockedCountOffset|] := v4  @wide;
#L1354c0.   v4:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1354c4.   v5:= "quiescerCount" @type (object, string);
#L1354c8.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v5) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1354ce.   v5:= temp  @type object;
#L1354d0.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v4, v5) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1354d6.   v4:= temp  @type wide;
#L1354d8.   @@[|java:util:concurrent:ForkJoinPool.quiescerCountOffset|] := v4  @wide;
#L1354dc.   v4:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1354e0.   v5:= "scanGuard" @type (object, string);
#L1354e4.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v5) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1354ea.   v5:= temp  @type object;
#L1354ec.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v4, v5) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1354f2.   v4:= temp  @type wide;
#L1354f4.   @@[|java:util:concurrent:ForkJoinPool.scanGuardOffset|] := v4  @wide;
#L1354f8.   v4:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1354fc.   v5:= "nextWorkerNumber" @type (object, string);
#L135500.   call temp:=  [|java:lang:Class.getDeclaredField|](v2, v5) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L135506.   v5:= temp  @type object;
#L135508.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v4, v5) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13550e.   v4:= temp  @type wide;
#L135510.   @@[|java:util:concurrent:ForkJoinPool.nextWorkerNumberOffset|] := v4  @wide;
#L135514.   v0:= new [|java:util:concurrent:ForkJoinTask|][];
#L135518.   v4:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L13551c.   call temp:=  [|sun:misc:Unsafe.arrayBaseOffset|](v4, v0) @signature [|Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135522.   v4:= temp;
#L135524.   v4:= (long)v4  @type i2l;
#L135526.   @@[|java:util:concurrent:ForkJoinPool.ABASE|] := v4  @wide;
#L13552a.   v4:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L13552e.   call temp:=  [|sun:misc:Unsafe.arrayIndexScale|](v4, v0) @signature [|Lsun/misc/Unsafe;.arrayIndexScale:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135534.   v3:= temp;
#L135536.   v4:= v3 + -1;
#L13553a.   v4:= v4 ^& v3  @type int;
#L13553c.   if v4 == 0 then goto L13555e;
#L135540.   v4:= new [|java:lang:Error|];
#L135544.   v5:= "data type scale not a power of two" @type (object, string);
#L135548.   call temp:=  [|java:lang:Error.<init>|](v4, v5) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13554e.   throw v4;
#L135550.   v1:= Exception  @type object;
#L135552.   v4:= new [|java:lang:Error|];
#L135556.   call temp:=  [|java:lang:Error.<init>|](v4, v1) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13555c.   throw v4;
#L13555e.   call temp:=  [|java:lang:Integer.numberOfLeadingZeros|](v3) @signature [|Ljava/lang/Integer;.numberOfLeadingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L135564.   v4:= temp;
#L135566.   v4:= v4 - 31;
#L13556a.   @@[|java:util:concurrent:ForkJoinPool.ASHIFT|] := v4;
#L13556e.   return @void ;
  catch  [|java:lang:Exception|] @[L13545c..L135514] goto L135550;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.<init>|] ([|java:util:concurrent:ForkJoinPool|] v4 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L135590.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L135596.   v0:= temp  @type object;
#L135598.   call temp:=  [|java:lang:Runtime.availableProcessors|](v0) @signature [|Ljava/lang/Runtime;.availableProcessors:()I|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L13559e.   v0:= temp;
#L1355a0.   v1:= @@[|java:util:concurrent:ForkJoinPool.defaultForkJoinWorkerThreadFactory|]   @type object;
#L1355a4.   v2:= 0  @length 4;
#L1355a6.   v3:= 0  @length 4;
#L1355a8.   call temp:=  [|java:util:concurrent:ForkJoinPool.<init>|](v4, v0, v1, v2, v3) @signature [|Ljava/util/concurrent/ForkJoinPool;.<init>:(ILjava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;Ljava/lang/Thread$UncaughtExceptionHandler;Z)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L1355ae.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.<init>|] ([|java:util:concurrent:ForkJoinPool|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
        v2;
      
#L1355c0.   v0:= @@[|java:util:concurrent:ForkJoinPool.defaultForkJoinWorkerThreadFactory|]   @type object;
#L1355c4.   v1:= 0  @length 4;
#L1355c6.   v2:= 0  @length 4;
#L1355c8.   call temp:=  [|java:util:concurrent:ForkJoinPool.<init>|](v3, v4, v0, v1, v2) @signature [|Ljava/util/concurrent/ForkJoinPool;.<init>:(ILjava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;Ljava/lang/Thread$UncaughtExceptionHandler;Z)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L1355ce.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.<init>|] ([|java:util:concurrent:ForkJoinPool|] v11 @type (this), [|int|] v12, [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory|] v13 @type (object), [|java:lang:Thread$UncaughtExceptionHandler|] v14 @type (object), [|boolean|] v15) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.<init>:(ILjava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;Ljava/lang/Thread$UncaughtExceptionHandler;Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:StringBuilder|] v3 @varname [|sb|] @scope ((L0060,L0075));
        [|int|] v0 @varname [|n|] @scope ((L0040,L0082));
        [|long|] v1 @varname [|np|] @scope ((L0024,L0082));





        v2;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
      
#L1355e0.   v10:= 32767  @length 16;
#L1355e4.   call temp:=  [|java:util:concurrent:AbstractExecutorService.<init>|](v11) @signature [|Ljava/util/concurrent/AbstractExecutorService;.<init>:()V|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type direct;
#L1355ea.   call temp:=  [|java:util:concurrent:ForkJoinPool.checkPermission|]() @signature [|Ljava/util/concurrent/ForkJoinPool;.checkPermission:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type static;
#L1355f0.   if v13 != 0 then goto L135600;
#L1355f4.   v4:= new [|java:lang:NullPointerException|];
#L1355f8.   call temp:=  [|java:lang:NullPointerException.<init>|](v4) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1355fe.   throw v4;
#L135600.   if v12 <= 0 then goto L135608;
#L135604.   if v12 <= v10 then goto L135614;
#L135608.   v4:= new [|java:lang:IllegalArgumentException|];
#L13560c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L135612.   throw v4;
#L135614.   v11.[|java:util:concurrent:ForkJoinPool.parallelism|]  := v12;
#L135618.   v11.[|java:util:concurrent:ForkJoinPool.factory|]  := v13 @type object;
#L13561c.   v11.[|java:util:concurrent:ForkJoinPool.ueh|]  := v14 @type object;
#L135620.   v11.[|java:util:concurrent:ForkJoinPool.locallyFifo|]  := v15 @boolean;
#L135624.   v4:= -v12  @type int;
#L135626.   v1:= (long)v4  @type i2l;
#L135628.   v4:= 48  @length 16;
#L13562c.   v4:= v1 ^< v4  @type long;
#L135630.   v6:= -281474976710656L  @length wide_high16;
#L135634.   v4:= v4 ^& v6  @type long;
#L135636.   v6:= 32  @length 16;
#L13563a.   v6:= v1 ^< v6  @type long;
#L13563e.   v8:= 0.000000L  @length wide;
#L135648.   v6:= v6 ^& v8  @type long;
#L13564a.   v4:= v4 ^| v6  @type long;
#L13564c.   v11.[|java:util:concurrent:ForkJoinPool.ctl|]  := v4 @wide;
#L135650.   v4:= 8  @length 16;
#L135654.   v4:= new [|java:util:concurrent:ForkJoinTask|][v4];
#L135658.   v11.[|java:util:concurrent:ForkJoinPool.submissionQueue|]  := v4 @type object;
#L13565c.   v0:= v12 ^< 1;
#L135660.   if v0 < v10 then goto L1356ca;
#L135664.   v0:= 32767  @length 16;
#L135668.   v4:= v0 + 1;
#L13566c.   v4:= new [|java:util:concurrent:ForkJoinWorkerThread|][v4];
#L135670.   v11.[|java:util:concurrent:ForkJoinPool.workers|]  := v4 @type object;
#L135674.   v4:= new [|java:util:concurrent:locks:ReentrantLock|];
#L135678.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L13567e.   v11.[|java:util:concurrent:ForkJoinPool.submissionLock|]  := v4 @type object;
#L135682.   v4:= v11.[|java:util:concurrent:ForkJoinPool.submissionLock|]   @type object;
#L135686.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13568c.   v4:= temp  @type object;
#L13568e.   v11.[|java:util:concurrent:ForkJoinPool.termination|]  := v4 @type object;
#L135692.   v3:= new [|java:lang:StringBuilder|];
#L135696.   v4:= "ForkJoinPool-" @type (object, string);
#L13569a.   call temp:=  [|java:lang:StringBuilder.<init>|](v3, v4) @signature [|Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L1356a0.   v4:= @@[|java:util:concurrent:ForkJoinPool.poolNumberGenerator|]   @type object;
#L1356a4.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.incrementAndGet|](v4) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1356aa.   v4:= temp;
#L1356ac.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1356b2.   v4:= "-worker-" @type (object, string);
#L1356b6.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1356bc.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1356c2.   v4:= temp  @type object;
#L1356c4.   v11.[|java:util:concurrent:ForkJoinPool.workerNamePrefix|]  := v4 @type object;
#L1356c8.   return @void ;
#L1356ca.   v4:= v0 ^>> 1;
#L1356ce.   v0:= v0 ^| v4  @type int;
#L1356d0.   v4:= v0 ^>> 2;
#L1356d4.   v0:= v0 ^| v4  @type int;
#L1356d6.   v4:= v0 ^>> 4;
#L1356da.   v0:= v0 ^| v4  @type int;
#L1356dc.   v4:= v0 ^>> 8;
#L1356e0.   v0:= v0 ^| v4  @type int;
#L1356e2.   goto L135668;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.addSubmission|] ([|java:util:concurrent:ForkJoinPool|] v10 @type (this), [|java:util:concurrent:ForkJoinTask|] v11 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.addSubmission:(Ljava/util/concurrent/ForkJoinTask;)V|] @Access PRIVATE {
      local temp ;
        [|int|] v1 @varname [|m|] @scope ((L000e,L002a));
        [|int|] v3 @varname [|s|] @scope ((L000b,L002a));
        [|long|] v4 @varname [|u|] @scope ((L0018,L002a));
        [|java:util:concurrent:ForkJoinTask|][] v2 @varname [|q|] @scope ((L0007,L0031));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0036));


        v5;
        v6;
        v7;
        v8;
        v9;
      
#L1356f4.   v0:= v10.[|java:util:concurrent:ForkJoinPool.submissionLock|]   @type object;
#L1356f8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1356fe.   v2:= v10.[|java:util:concurrent:ForkJoinPool.submissionQueue|]   @type object;
#L135702.   if v2 == 0 then goto L135748;
#L135706.   v3:= v10.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L13570a.   v6:= v2.length;
#L13570c.   v1:= v6 + -1;
#L135710.   v6:= v3 ^& v1  @type int;
#L135714.   v7:= @@[|java:util:concurrent:ForkJoinPool.ASHIFT|] ;
#L135718.   v6:= v6 ^< v7  @type int;
#L13571a.   v6:= (long)v6  @type i2l;
#L13571c.   v8:= @@[|java:util:concurrent:ForkJoinPool.ABASE|]   @wide;
#L135720.   v4:= v6 + v8  @type long;
#L135724.   v6:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135728.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v6, v2, v4, v5, v11) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13572e.   v6:= v3 + 1;
#L135732.   v10.[|java:util:concurrent:ForkJoinPool.queueTop|]  := v6;
#L135736.   v6:= v10.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L13573a.   v6:= v3 - v6  @type int;
#L13573e.   if v6 != v1 then goto L135748;
#L135742.   call temp:=  [|java:util:concurrent:ForkJoinPool.growSubmissionQueue|](v10) @signature [|Ljava/util/concurrent/ForkJoinPool;.growSubmissionQueue:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L135748.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13574e.   call temp:=  [|java:util:concurrent:ForkJoinPool.signalWork|](v10) @signature [|Ljava/util/concurrent/ForkJoinPool;.signalWork:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L135754.   return @void ;
#L135756.   v6:= Exception  @type object;
#L135758.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13575e.   throw v6;
  catch  [|any|] @[L1356fe..L135748] goto L135756;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.addWorker|] ([|java:util:concurrent:ForkJoinPool|] v15 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.addWorker:()V|] @Access PRIVATE {
      local temp ;
        [|long|] v4 @varname [|c|] @scope ((L0010,L0047));
        [|java:lang:Throwable|] v8 @varname [|e|] @scope ((L0049,L004b));
        [|java:lang:Throwable|] v9 @varname [|ex|] @scope ((L0001,L004f));
        [|java:util:concurrent:ForkJoinWorkerThread|] v10 @varname [|t|] @scope ((L0002,L004f));

        v0;
        v1;
        v2;
        v3;
        v5;
        v6;
        v7;
        v11;
        v12;
        v13;
        v14;
      
#L13577c.   v9:= 0  @length 4;
#L13577e.   v10:= 0  @length 4;
#L135780.   v0:= v15.[|java:util:concurrent:ForkJoinPool.factory|]   @type object;
#L135784.   call temp:=  [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory.newThread|](v0, v15) @signature [|Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;.newThread:(Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;|] @classDescriptor [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory|] @type interface;
#L13578a.   v10:= temp  @type object;
#L13578c.   if v10 != 0 then goto L135812;
#L135790.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135794.   v2:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L135798.   v4:= v15.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L13579c.   v6:= 281474976710656L  @length wide_high16;
#L1357a0.   v6:= v4 - v6  @type long;
#L1357a4.   v11:= -281474976710656L  @length wide_high16;
#L1357a8.   v6:= v6 ^& v11  @type long;
#L1357aa.   v11:= 0.000000L  @length wide;
#L1357b4.   v11:= v4 - v11  @type long;
#L1357b8.   v13:= 0.000000L  @length wide;
#L1357c2.   v11:= v11 ^& v13  @type long;
#L1357c4.   v6:= v6 ^| v11  @type long;
#L1357c6.   v11:= 0.000000L  @length wide;
#L1357d0.   v11:= v11 ^& v4  @type long;
#L1357d2.   v6:= v6 ^| v11  @type long;
#L1357d4.   v1:= v15  @type object;
#L1357d6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1357dc.   v0:= temp;
#L1357de.   if v0 == 0 then goto L135790;
#L1357e2.   v0:= 0  @length 4;
#L1357e4.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryTerminate|](v15, v0) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryTerminate:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L1357ea.   v0:= temp;
#L1357ec.   if v0 != 0 then goto L13580a;
#L1357f0.   if v9 == 0 then goto L13580a;
#L1357f4.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1357fa.   v0:= temp  @type object;
#L1357fc.   v0:= instanceof @varname v0 @type [|java:util:concurrent:ForkJoinWorkerThread|];
#L135800.   if v0 != 0 then goto L13580a;
#L135804.   call temp:=  [|libcore:util:SneakyThrow.sneakyThrow|](v9) @signature [|Llibcore/util/SneakyThrow;.sneakyThrow:(Ljava/lang/Throwable;)V|] @classDescriptor [|libcore:util:SneakyThrow|] @type static;
#L13580a.   return @void ;
#L13580c.   v8:= Exception  @type object;
#L13580e.   v9:= v8  @type object;
#L135810.   goto L13578c;
#L135812.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.start|](v10) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.start:()V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L135818.   goto L13580a;
  catch  [|java:lang:Throwable|] @[L135780..L13578a] goto L13580c;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.awaitBlocker|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this), [|java:util:concurrent:ForkJoinPool$ManagedBlocker|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.awaitBlocker:(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V|] @Access PRIVATE {
      local temp ;


        v0;
      
#L13583c.   call temp:=  [|java:util:concurrent:ForkJoinPool$ManagedBlocker.isReleasable|](v2) @signature [|Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;.isReleasable:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool$ManagedBlocker|] @type interface;
#L135842.   v0:= temp;
#L135844.   if v0 != 0 then goto L135872;
#L135848.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryPreBlock|](v1) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryPreBlock:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L13584e.   v0:= temp;
#L135850.   if v0 == 0 then goto L13583c;
#L135854.   call temp:=  [|java:util:concurrent:ForkJoinPool$ManagedBlocker.isReleasable|](v2) @signature [|Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;.isReleasable:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool$ManagedBlocker|] @type interface;
#L13585a.   v0:= temp;
#L13585c.   if v0 != 0 then goto L13586c;
#L135860.   call temp:=  [|java:util:concurrent:ForkJoinPool$ManagedBlocker.block|](v2) @signature [|Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;.block:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool$ManagedBlocker|] @type interface;
#L135866.   v0:= temp;
#L135868.   if v0 == 0 then goto L135854;
#L13586c.   call temp:=  [|java:util:concurrent:ForkJoinPool.postBlock|](v1) @signature [|Ljava/util/concurrent/ForkJoinPool;.postBlock:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L135872.   return @void ;
#L135874.   v0:= Exception  @type object;
#L135876.   call temp:=  [|java:util:concurrent:ForkJoinPool.postBlock|](v1) @signature [|Ljava/util/concurrent/ForkJoinPool;.postBlock:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L13587c.   throw v0;
  catch  [|any|] @[L135854..L135866] goto L135874;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.cancelSubmissions|] ([|java:util:concurrent:ForkJoinPool|] v3 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.cancelSubmissions:()V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v0 @varname [|task|] @scope ((L000a,L0013));

        v1;
        v2;
      
#L13589c.   v1:= v3.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L1358a0.   v2:= v3.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L1358a4.   if v1 == v2 then goto L1358c2;
#L1358a8.   call temp:=  [|java:util:concurrent:ForkJoinPool.pollSubmission|](v3) @signature [|Ljava/util/concurrent/ForkJoinPool;.pollSubmission:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L1358ae.   v0:= temp  @type object;
#L1358b0.   if v0 == 0 then goto L13589c;
#L1358b4.   v1:= 0  @length 4;
#L1358b6.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancel|](v0, v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L1358bc.   goto L13589c;
#L1358be.   v1:= Exception  @type object;
#L1358c0.   goto L13589c;
#L1358c2.   return @void ;
  catch  [|java:lang:Throwable|] @[L1358b6..L1358bc] goto L1358be;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.checkPermission|] () @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.checkPermission:()V|] @Access PRIVATE_STATIC {
      local temp ;
        [|java:lang:SecurityManager|] v0 @varname [|security|] @scope ((L0004,L000c));
        v1;
      
#L1358e4.   call temp:=  [|java:lang:System.getSecurityManager|]() @signature [|Ljava/lang/System;.getSecurityManager:()Ljava/lang/SecurityManager;|] @classDescriptor [|java:lang:System|] @type static;
#L1358ea.   v0:= temp  @type object;
#L1358ec.   if v0 == 0 then goto L1358fa;
#L1358f0.   v1:= @@[|java:util:concurrent:ForkJoinPool.modifyThreadPermission|]   @type object;
#L1358f4.   call temp:=  [|java:lang:SecurityManager.checkPermission|](v0, v1) @signature [|Ljava/lang/SecurityManager;.checkPermission:(Ljava/security/Permission;)V|] @classDescriptor [|java:lang:SecurityManager|] @type virtual;
#L1358fa.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.forkOrSubmit|] ([|java:util:concurrent:ForkJoinPool|] v3 @type (this), [|java:util:concurrent:ForkJoinTask|] v4 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.forkOrSubmit:(Ljava/util/concurrent/ForkJoinTask;)V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:ForkJoinWorkerThread|] v1 @varname [|w|] @scope ((L0015,L001c));
        [|java:lang:Thread|] v0 @varname [|t|] @scope ((L0004,L0021));


        v2;
      
#L13590c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L135912.   v0:= temp  @type object;
#L135914.   v2:= v3.[|java:util:concurrent:ForkJoinPool.shutdown|]   @boolean;
#L135918.   if v2 == 0 then goto L135928;
#L13591c.   v2:= new [|java:util:concurrent:RejectedExecutionException|];
#L135920.   call temp:=  [|java:util:concurrent:RejectedExecutionException.<init>|](v2) @signature [|Ljava/util/concurrent/RejectedExecutionException;.<init>:()V|] @classDescriptor [|java:util:concurrent:RejectedExecutionException|] @type direct;
#L135926.   throw v2;
#L135928.   v2:= instanceof @varname v0 @type [|java:util:concurrent:ForkJoinWorkerThread|];
#L13592c.   if v2 == 0 then goto L135946;
#L135930.   v1:= v0  @type object;
#L135932.   v1:= ([|java:util:concurrent:ForkJoinWorkerThread|])v1;
#L135936.   v2:= v1.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L13593a.   if v2 != v3 then goto L135946;
#L13593e.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.pushTask|](v1, v4) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.pushTask:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L135944.   return @void ;
#L135946.   call temp:=  [|java:util:concurrent:ForkJoinPool.addSubmission|](v3, v4) @signature [|Ljava/util/concurrent/ForkJoinPool;.addSubmission:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L13594c.   goto L135944;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.growSubmissionQueue|] ([|java:util:concurrent:ForkJoinPool|] v17 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.growSubmissionQueue:()V|] @Access PRIVATE {
      local temp ;
        [|int|] v11 @varname [|size|] @scope ((L0009,L0015), (L0018,L0064));
        [|long|] v3 @varname [|u|] @scope ((L0041,L0063));
        [|java:lang:Object|] v5 @varname [|x|] @scope ((L0047,L0063));
        [|int|] v7 @varname [|b|] @scope ((L0035,L0063));
        [|int|] v9 @varname [|oldMask|] @scope ((L002f,L0063));
        [|java:util:concurrent:ForkJoinTask|][] v2 @varname [|oldQ|] @scope ((L0004,L0064));
        [|int|] v8 @varname [|mask|] @scope ((L0026,L0064));
        [|java:util:concurrent:ForkJoinTask|][] v10 @varname [|q|] @scope ((L0024,L0064));
        [|int|] v12 @varname [|top|] @scope ((L002a,L0064));

        v0;
        v1;
        v4;
        v6;
        v13;
        v14;
        v15;
        v16;
      
#L135960.   v0:= v17  @type object;
#L135964.   v2:= v0.[|java:util:concurrent:ForkJoinPool.submissionQueue|]   @type object;
#L135968.   if v2 == 0 then goto L13598a;
#L13596c.   v1:= v2.length;
#L13596e.   v11:= v1 ^< 1;
#L135972.   v1:= 16777216  @length high16;
#L135976.   if v11 <= v1 then goto L135990;
#L13597a.   v1:= new [|java:util:concurrent:RejectedExecutionException|];
#L13597e.   v6:= "Queue capacity exceeded" @type (object, string);
#L135982.   call temp:=  [|java:util:concurrent:RejectedExecutionException.<init>|](v1, v6) @signature [|Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:concurrent:RejectedExecutionException|] @type direct;
#L135988.   throw v1;
#L13598a.   v11:= 8  @length 16;
#L13598e.   goto L135972;
#L135990.   v1:= 8  @length 16;
#L135994.   if v11 >= v1 then goto L13599c;
#L135998.   v11:= 8  @length 16;
#L13599c.   v10:= new [|java:util:concurrent:ForkJoinTask|][v11];
#L1359a0.   v0:= v17  @type object;
#L1359a4.   v0.[|java:util:concurrent:ForkJoinPool.submissionQueue|]  := v10 @type object;
#L1359a8.   v8:= v11 + -1;
#L1359ac.   v0:= v17  @type object;
#L1359b0.   v12:= v0.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L1359b4.   if v2 == 0 then goto L135a26;
#L1359b8.   v1:= v2.length;
#L1359ba.   v9:= v1 + -1;
#L1359be.   if v9 < 0 then goto L135a26;
#L1359c2.   v0:= v17  @type object;
#L1359c6.   v7:= v0.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L1359ca.   if v7 == v12 then goto L135a26;
#L1359ce.   v1:= v7 ^& v9  @type int;
#L1359d2.   v6:= @@[|java:util:concurrent:ForkJoinPool.ASHIFT|] ;
#L1359d6.   v1:= v1 ^< v6  @type int;
#L1359d8.   v13:= (long)v1  @type i2l;
#L1359da.   v15:= @@[|java:util:concurrent:ForkJoinPool.ABASE|]   @wide;
#L1359de.   v3:= v13 + v15  @type long;
#L1359e2.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1359e6.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v1, v2, v3, v4) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1359ec.   v5:= temp  @type object;
#L1359ee.   if v5 == 0 then goto L135a20;
#L1359f2.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1359f6.   v6:= 0  @length 4;
#L1359f8.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v1, v2, v3, v4, v5, v6) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1359fe.   v1:= temp;
#L135a00.   if v1 == 0 then goto L135a20;
#L135a04.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135a08.   v6:= v7 ^& v8  @type int;
#L135a0c.   v13:= @@[|java:util:concurrent:ForkJoinPool.ASHIFT|] ;
#L135a10.   v6:= v6 ^< v13  @type int;
#L135a12.   v13:= (long)v6  @type i2l;
#L135a14.   v15:= @@[|java:util:concurrent:ForkJoinPool.ABASE|]   @wide;
#L135a18.   v13:= v13 + v15  @type long;
#L135a1a.   call temp:=  [|sun:misc:Unsafe.putObjectVolatile|](v1, v10, v13, v14, v5) @signature [|Lsun/misc/Unsafe;.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135a20.   v7:= v7 + 1;
#L135a24.   goto L1359ca;
#L135a26.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.idleAwaitWork|] ([|java:util:concurrent:ForkJoinPool|] v11 @type (this), [|java:util:concurrent:ForkJoinWorkerThread|] v12 @type (object), [|long|] v13, [|long|] v15, [|int|] v17) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.idleAwaitWork:(Ljava/util/concurrent/ForkJoinWorkerThread;JJI)V|] @Access PRIVATE {
      local temp ;
        [|long|] v9 @varname [|startTime|] @scope ((L001b,L0035), (L0036,L0063));





        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v10;
      
#L135a38.   v1:= v12.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L135a3c.   v0:= v17;
#L135a40.   if v1 != v0 then goto L135aa2;
#L135a44.   v1:= v11.[|java:util:concurrent:ForkJoinPool.shutdown|]   @boolean;
#L135a48.   if v1 == 0 then goto L135a54;
#L135a4c.   v1:= 0  @length 4;
#L135a4e.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryTerminate|](v11, v1) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryTerminate:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L135a54.   call temp:=  [|java:util:concurrent:ForkJoinTask.helpExpungeStaleExceptions|]() @signature [|Ljava/util/concurrent/ForkJoinTask;.helpExpungeStaleExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L135a5a.   v1:= v11.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L135a5e.   v1:= cmp(v1,v13);
#L135a62.   if v1 != 0 then goto L135aa2;
#L135a66.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L135a6c.   v9:= temp  @type wide;
#L135a6e.   v1:= 1  @length 4;
#L135a70.   v12.[|java:util:concurrent:ForkJoinWorkerThread.parked|]  := v1 @boolean;
#L135a74.   v1:= v12.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L135a78.   v0:= v17;
#L135a7c.   if v1 != v0 then goto L135a90;
#L135a80.   v1:= 0.000000L  @length wide;
#L135a8a.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v11, v1, v2) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L135a90.   v1:= 0  @length 4;
#L135a92.   v12.[|java:util:concurrent:ForkJoinWorkerThread.parked|]  := v1 @boolean;
#L135a96.   v1:= v12.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L135a9a.   v0:= v17;
#L135a9e.   if v1 == v0 then goto L135aa4;
#L135aa2.   return @void ;
#L135aa4.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L135aaa.   v1:= temp  @type wide;
#L135aac.   v1:= v1 - v9  @type long;
#L135aae.   v3:= 0.000000L  @length wide;
#L135ab8.   v1:= cmp(v1,v3);
#L135abc.   if v1 >= 0 then goto L135ac8;
#L135ac0.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L135ac6.   goto L135a5a;
#L135ac8.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135acc.   v3:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L135ad0.   v2:= v11  @type object;
#L135ad2.   v5:= v13  @type wide;
#L135ad4.   v7:= v15  @type wide;
#L135ad6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135adc.   v1:= temp;
#L135ade.   if v1 == 0 then goto L135a5a;
#L135ae2.   v1:= 1  @length 4;
#L135ae4.   v12.[|java:util:concurrent:ForkJoinWorkerThread.terminate|]  := v1 @boolean;
#L135ae8.   v1:= (int)v13  @type l2i;
#L135aea.   v2:= 65536  @length high16;
#L135aee.   v1:= v1 + v2  @type int;
#L135af0.    v2:= nan;
#L135af6.   v1:= v1 ^& v2  @type int;
#L135af8.   v12.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|]  := v1;
#L135afc.   goto L135aa2;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.managedBlock|] ([|java:util:concurrent:ForkJoinPool$ManagedBlocker|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.managedBlock:(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V|] @Access PUBLIC_STATIC {
      local temp ;
        [|java:util:concurrent:ForkJoinWorkerThread|] v1 @varname [|w|] @scope ((L000b,L0010));
        [|java:lang:Thread|] v0 @varname [|t|] @scope ((L0004,L001e));

        v2;
      
#L135b10.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L135b16.   v0:= temp  @type object;
#L135b18.   v2:= instanceof @varname v0 @type [|java:util:concurrent:ForkJoinWorkerThread|];
#L135b1c.   if v2 == 0 then goto L135b32;
#L135b20.   v1:= v0  @type object;
#L135b22.   v1:= ([|java:util:concurrent:ForkJoinWorkerThread|])v1;
#L135b26.   v2:= v1.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L135b2a.   call temp:=  [|java:util:concurrent:ForkJoinPool.awaitBlocker|](v2, v3) @signature [|Ljava/util/concurrent/ForkJoinPool;.awaitBlocker:(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L135b30.   return @void ;
#L135b32.   call temp:=  [|java:util:concurrent:ForkJoinPool$ManagedBlocker.isReleasable|](v3) @signature [|Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;.isReleasable:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool$ManagedBlocker|] @type interface;
#L135b38.   v2:= temp;
#L135b3a.   if v2 != 0 then goto L135b30;
#L135b3e.   call temp:=  [|java:util:concurrent:ForkJoinPool$ManagedBlocker.block|](v3) @signature [|Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;.block:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool$ManagedBlocker|] @type interface;
#L135b44.   v2:= temp;
#L135b46.   if v2 == 0 then goto L135b32;
#L135b4a.   goto L135b30;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.postBlock|] ([|java:util:concurrent:ForkJoinPool|] v12 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.postBlock:()V|] @Access PRIVATE {
      local temp ;
        [|long|] v4 @varname [|c|] @scope ((L0006,L0020));
        [|int|] v10 @varname [|b|] @scope ((L0016,L0020));

        v0;
        v1;
        v2;
        v3;
        v5;
        v6;
        v7;
        v8;
        v9;
        v11;
      
#L135b5c.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135b60.   v2:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L135b64.   v4:= v12.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L135b68.   v6:= 281474976710656L  @length wide_high16;
#L135b6c.   v6:= v6 + v4  @type long;
#L135b6e.   v1:= v12  @type object;
#L135b70.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135b76.   v0:= temp;
#L135b78.   if v0 == 0 then goto L135b5c;
#L135b7c.   v6:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135b80.   v8:= @@[|java:util:concurrent:ForkJoinPool.blockedCountOffset|]   @wide;
#L135b84.   v10:= v12.[|java:util:concurrent:ForkJoinPool.blockedCount|] ;
#L135b88.   v11:= v10 + -1;
#L135b8c.   v7:= v12  @type object;
#L135b8e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v6, v7, v8, v9, v10, v11) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135b94.   v0:= temp;
#L135b96.   if v0 == 0 then goto L135b7c;
#L135b9a.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.scan|] ([|java:util:concurrent:ForkJoinPool|] v22 @type (this), [|java:util:concurrent:ForkJoinWorkerThread|] v23 @type (object), [|int|] v24) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.scan:(Ljava/util/concurrent/ForkJoinWorkerThread;I)Z|] @Access PRIVATE {
      local temp ;
        [|int|] v14 @varname [|m|] @scope ((L0013,L0022), (L0028,L00fd));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v17 @varname [|ws|] @scope ((L0019,L0022), (L0028,L00fd));
        [|int|] v9 @varname [|d|] @scope ((L007b,L008d));
        [|java:util:concurrent:ForkJoinTask|][] v3 @varname [|q|] @scope ((L0048,L009c), (L00c5,L00fa));
        [|long|] v4 @varname [|u|] @scope ((L005c,L009c), (L00d9,L00fa));
        [|java:util:concurrent:ForkJoinTask|] v6 @varname [|t|] @scope ((L005e,L009c), (L00db,L00fa));
        [|int|] v8 @varname [|b|] @scope ((L003e,L009c), (L00bb,L00fd));
        [|int|] v11 @varname [|i|] @scope ((L004f,L009c), (L00cc,L00fa));
        [|java:util:concurrent:ForkJoinWorkerThread|] v16 @varname [|v|] @scope ((L0038,L00ae));
        [|int|] v10 @varname [|g|] @scope ((L0004,L00fd));
        [|int|] v12 @varname [|j|] @scope ((L0030,L00fd));
        [|int|] v13 @varname [|k|] @scope ((L002d,L00fd));
        [|int|] v15 @varname [|r|] @scope ((L002c,L00fd));



        v0;
        v1;
        v2;
        v5;
        v7;
        v18;
        v19;
        v20;
        v21;
      
#L135bac.   v0:= v22  @type object;
#L135bb0.   v10:= v0.[|java:util:concurrent:ForkJoinPool.scanGuard|] ;
#L135bb4.   v0:= v22  @type object;
#L135bb8.   v2:= v0.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L135bbc.   v7:= v24 - 1;
#L135bc0.   if v2 != v7 then goto L135bf0;
#L135bc4.   v0:= v22  @type object;
#L135bc8.   v2:= v0.[|java:util:concurrent:ForkJoinPool.blockedCount|] ;
#L135bcc.   if v2 != 0 then goto L135bf0;
#L135bd0.   v14:= 0  @length 4;
#L135bd2.   v0:= v22  @type object;
#L135bd6.   v0:= v0.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L135bda.   v17:= v0  @type object;
#L135bde.   if v17 == 0 then goto L135bec;
#L135be2.   v0:= v17  @type object;
#L135be6.   v2:= v0.length;
#L135be8.   if v2 > v14 then goto L135bfc;
#L135bec.   v2:= 0  @length 4;
#L135bee.   return v2;
#L135bf0.    v2:= 0.000000;
#L135bf6.   v14:= v10 ^& v2  @type int;
#L135bfa.   goto L135bd2;
#L135bfc.   v0:= v23  @type object;
#L135c00.   v15:= v0.[|java:util:concurrent:ForkJoinWorkerThread.seed|] ;
#L135c04.   v13:= v15;
#L135c06.   v2:= v14 + v14  @type int;
#L135c0a.   v12:= -v2  @type int;
#L135c0c.   v2:= v14 + v14  @type int;
#L135c10.   if v12 > v2 then goto L135d08;
#L135c14.   v2:= v13 ^& v14  @type int;
#L135c18.   v16:= v17[v2]  @type object;
#L135c1c.   if v16 == 0 then goto L135ce4;
#L135c20.   v0:= v16  @type object;
#L135c24.   v8:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L135c28.   v0:= v16  @type object;
#L135c2c.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L135c30.   if v8 == v2 then goto L135ce4;
#L135c34.   v0:= v16  @type object;
#L135c38.   v3:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L135c3c.   if v3 == 0 then goto L135ce4;
#L135c40.   v2:= v3.length;
#L135c42.   v2:= v2 + -1;
#L135c46.   v11:= v2 ^& v8  @type int;
#L135c4a.   if v11 < 0 then goto L135ce4;
#L135c4e.   v2:= @@[|java:util:concurrent:ForkJoinPool.ASHIFT|] ;
#L135c52.   v2:= v11 ^< v2  @type int;
#L135c56.   v0:= (long)v2  @type i2l;
#L135c58.   v18:= v0  @type wide;
#L135c5c.   v20:= @@[|java:util:concurrent:ForkJoinPool.ABASE|]   @wide;
#L135c60.   v4:= v18 + v20  @type long;
#L135c64.   v6:= v3[v11]  @type object;
#L135c68.   if v6 == 0 then goto L135cc6;
#L135c6c.   v0:= v16  @type object;
#L135c70.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L135c74.   if v2 != v8 then goto L135cc6;
#L135c78.   v2:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135c7c.   v7:= 0  @length 4;
#L135c7e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135c84.   v2:= temp;
#L135c86.   if v2 == 0 then goto L135cc6;
#L135c8a.   v2:= v8 + 1;
#L135c8e.   v0:= v16  @type object;
#L135c92.   v0.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|]  := v2;
#L135c96.   v0:= v16  @type object;
#L135c9a.   v7:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L135c9e.   v9:= v2 - v7  @type int;
#L135ca2.   v0:= v23  @type object;
#L135ca6.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.poolIndex|] ;
#L135caa.   v0:= v16  @type object;
#L135cae.   v0.[|java:util:concurrent:ForkJoinWorkerThread.stealHint|]  := v2;
#L135cb2.   if v9 == 0 then goto L135cbc;
#L135cb6.   call temp:=  [|java:util:concurrent:ForkJoinPool.signalWork|](v22) @signature [|Ljava/util/concurrent/ForkJoinPool;.signalWork:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L135cbc.   v0:= v23  @type object;
#L135cc0.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.execTask|](v0, v6) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.execTask:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L135cc6.   v2:= v15 ^< 13;
#L135cca.   v15:= v15 ^~ v2  @type int;
#L135ccc.   v2:= v15 ^>> 17;
#L135cd0.   v15:= v15 ^~ v2  @type int;
#L135cd2.   v2:= v15 ^< 5;
#L135cd6.   v2:= v2 ^~ v15  @type int;
#L135cd8.   v0:= v23  @type object;
#L135cdc.   v0.[|java:util:concurrent:ForkJoinWorkerThread.seed|]  := v2;
#L135ce0.   v2:= 0  @length 4;
#L135ce2.   goto L135bee;
#L135ce4.   if v12 >= 0 then goto L135d02;
#L135ce8.   v2:= v15 ^< 13;
#L135cec.   v15:= v15 ^~ v2  @type int;
#L135cee.   v2:= v15 ^>> 17;
#L135cf2.   v15:= v15 ^~ v2  @type int;
#L135cf4.   v2:= v15 ^< 5;
#L135cf8.   v15:= v15 ^~ v2  @type int;
#L135cfa.   v13:= v15;
#L135cfc.   v12:= v12 + 1;
#L135d00.   goto L135c0c;
#L135d02.   v13:= v13 + 1;
#L135d06.   goto L135cfc;
#L135d08.   v0:= v22  @type object;
#L135d0c.   v2:= v0.[|java:util:concurrent:ForkJoinPool.scanGuard|] ;
#L135d10.   if v2 == v10 then goto L135d1a;
#L135d14.   v2:= 0  @length 4;
#L135d16.   goto L135bee;
#L135d1a.   v0:= v22  @type object;
#L135d1e.   v8:= v0.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L135d22.   v0:= v22  @type object;
#L135d26.   v2:= v0.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L135d2a.   if v8 == v2 then goto L135da0;
#L135d2e.   v0:= v22  @type object;
#L135d32.   v3:= v0.[|java:util:concurrent:ForkJoinPool.submissionQueue|]   @type object;
#L135d36.   if v3 == 0 then goto L135da0;
#L135d3a.   v2:= v3.length;
#L135d3c.   v2:= v2 + -1;
#L135d40.   v11:= v2 ^& v8  @type int;
#L135d44.   if v11 < 0 then goto L135da0;
#L135d48.   v2:= @@[|java:util:concurrent:ForkJoinPool.ASHIFT|] ;
#L135d4c.   v2:= v11 ^< v2  @type int;
#L135d50.   v0:= (long)v2  @type i2l;
#L135d52.   v18:= v0  @type wide;
#L135d56.   v20:= @@[|java:util:concurrent:ForkJoinPool.ABASE|]   @wide;
#L135d5a.   v4:= v18 + v20  @type long;
#L135d5e.   v6:= v3[v11]  @type object;
#L135d62.   if v6 == 0 then goto L135d9a;
#L135d66.   v0:= v22  @type object;
#L135d6a.   v2:= v0.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L135d6e.   if v2 != v8 then goto L135d9a;
#L135d72.   v2:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135d76.   v7:= 0  @length 4;
#L135d78.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135d7e.   v2:= temp;
#L135d80.   if v2 == 0 then goto L135d9a;
#L135d84.   v2:= v8 + 1;
#L135d88.   v0:= v22  @type object;
#L135d8c.   v0.[|java:util:concurrent:ForkJoinPool.queueBase|]  := v2;
#L135d90.   v0:= v23  @type object;
#L135d94.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.execTask|](v0, v6) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.execTask:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L135d9a.   v2:= 0  @length 4;
#L135d9c.   goto L135bee;
#L135da0.   v2:= 1  @length 4;
#L135da2.   goto L135bee;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.startTerminating|] ([|java:util:concurrent:ForkJoinPool|] v8 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.startTerminating:()V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:ForkJoinWorkerThread|] v4 @varname [|w|] @scope ((L0013,L002a), (L0030,L0032));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v0 @varname [|arr$|] @scope ((L000d,L002d), (L0030,L0032));
        [|int|] v1 @varname [|i$|] @scope ((L000f,L002d), (L0030,L0032));
        [|int|] v2 @varname [|len$|] @scope ((L000e,L002d), (L0030,L0032));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v5 @varname [|ws|] @scope ((L000a,L0032));
        [|int|] v3 @varname [|pass|] @scope ((L0005,L0033));

        v6;
        v7;
      
#L135db8.   v7:= 1  @length 4;
#L135dba.   call temp:=  [|java:util:concurrent:ForkJoinPool.cancelSubmissions|](v8) @signature [|Ljava/util/concurrent/ForkJoinPool;.cancelSubmissions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L135dc0.   v3:= 0  @length 4;
#L135dc2.   v6:= 3  @length 4;
#L135dc4.   if v3 >= v6 then goto L135e1c;
#L135dc8.   v5:= v8.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L135dcc.   if v5 == 0 then goto L135e12;
#L135dd0.   v0:= v5  @type object;
#L135dd2.   v2:= v0.length;
#L135dd4.   v1:= 0  @length 4;
#L135dd6.   if v1 >= v2 then goto L135e0c;
#L135dda.   v4:= v0[v1]  @type object;
#L135dde.   if v4 == 0 then goto L135e06;
#L135de2.   v4.[|java:util:concurrent:ForkJoinWorkerThread.terminate|]  := v7 @boolean;
#L135de6.   if v3 <= 0 then goto L135e06;
#L135dea.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.cancelTasks|](v4) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.cancelTasks:()V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L135df0.   if v3 <= v7 then goto L135e06;
#L135df4.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.isInterrupted|](v4) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.isInterrupted:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L135dfa.   v6:= temp;
#L135dfc.   if v6 != 0 then goto L135e06;
#L135e00.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.interrupt|](v4) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.interrupt:()V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L135e06.   v1:= v1 + 1;
#L135e0a.   goto L135dd6;
#L135e0c.   call temp:=  [|java:util:concurrent:ForkJoinPool.terminateWaiters|](v8) @signature [|Ljava/util/concurrent/ForkJoinPool;.terminateWaiters:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L135e12.   v3:= v3 + 1;
#L135e16.   goto L135dc2;
#L135e18.   v6:= Exception  @type object;
#L135e1a.   goto L135e06;
#L135e1c.   return @void ;
  catch  [|java:lang:SecurityException|] @[L135e00..L135e06] goto L135e18;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.terminateWaiters|] ([|java:util:concurrent:ForkJoinPool|] v18 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.terminateWaiters:()V|] @Access PRIVATE {
      local temp ;
        [|long|] v5 @varname [|c|] @scope ((L000b,L0055));
        [|int|] v9 @varname [|e|] @scope ((L000c,L0055));
        [|int|] v10 @varname [|i|] @scope ((L0013,L0055));
        [|int|] v11 @varname [|n|] @scope ((L0007,L0055));
        [|java:util:concurrent:ForkJoinWorkerThread|] v12 @varname [|w|] @scope ((L0017,L0055));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v13 @varname [|ws|] @scope ((L0004,L0056));

        v0;
        v1;
        v2;
        v3;
        v4;
        v6;
        v7;
        v8;
        v14;
        v15;
        v16;
        v17;
      
#L135e40.   v0:= v18  @type object;
#L135e44.   v13:= v0.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L135e48.   if v13 == 0 then goto L135eea;
#L135e4c.   v11:= v13.length;
#L135e4e.   v0:= v18  @type object;
#L135e52.   v5:= v0.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L135e56.   v9:= (int)v5  @type l2i;
#L135e58.   v1:= v9 ^~ -1;
#L135e5c.    v2:= 0.000000;
#L135e62.   v10:= v1 ^& v2  @type int;
#L135e66.   if v10 >= v11 then goto L135eea;
#L135e6a.   v12:= v13[v10]  @type object;
#L135e6e.   if v12 == 0 then goto L135eea;
#L135e72.   v1:= v12.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L135e76.    v2:= nan;
#L135e7c.   v2:= v2 ^& v9  @type int;
#L135e7e.   if v1 != v2 then goto L135eea;
#L135e82.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135e86.   v3:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L135e8a.   v2:= v12.[|java:util:concurrent:ForkJoinWorkerThread.nextWait|] ;
#L135e8e.    v7:= nan;
#L135e94.   v2:= v2 ^& v7  @type int;
#L135e96.   v7:= (long)v2  @type i2l;
#L135e98.   v14:= 281474976710656L  @length wide_high16;
#L135e9c.   v14:= v14 + v5  @type long;
#L135e9e.   v16:= -281474976710656L  @length wide_high16;
#L135ea2.   v14:= v14 ^& v16  @type long;
#L135ea6.   v7:= v7 ^| v14  @type long;
#L135ea8.   v14:= 0.000000L  @length wide;
#L135eb2.   v14:= v14 ^& v5  @type long;
#L135eb4.   v7:= v7 ^| v14  @type long;
#L135eb6.   v2:= v18  @type object;
#L135eba.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135ec0.   v1:= temp;
#L135ec2.   if v1 == 0 then goto L135e4e;
#L135ec6.   v1:= 1  @length 4;
#L135ec8.   v12.[|java:util:concurrent:ForkJoinWorkerThread.terminate|]  := v1 @boolean;
#L135ecc.   v1:= 65536  @length high16;
#L135ed0.   v1:= v1 + v9  @type int;
#L135ed2.   v12.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|]  := v1;
#L135ed6.   v1:= v12.[|java:util:concurrent:ForkJoinWorkerThread.parked|]   @boolean;
#L135eda.   if v1 == 0 then goto L135e4e;
#L135ede.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135ee2.   call temp:=  [|sun:misc:Unsafe.unpark|](v1, v12) @signature [|Lsun/misc/Unsafe;.unpark:(Ljava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135ee8.   goto L135e4e;
#L135eea.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.tryAwaitWork|] ([|java:util:concurrent:ForkJoinPool|] v28 @type (this), [|java:util:concurrent:ForkJoinWorkerThread|] v29 @type (object), [|long|] v30) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.tryAwaitWork:(Ljava/util/concurrent/ForkJoinWorkerThread;J)Z|] @Access PRIVATE {
      local temp ;
        [|long|] v18 @varname [|d|] @scope ((L003b,L0050), (L0051,L0053));
        [|long|] v14 @varname [|s|] @scope ((L005f,L0083));
        [|int|] v21 @varname [|i|] @scope ((L00e6,L0110));
        [|java:util:concurrent:ForkJoinWorkerThread|] v25 @varname [|u|] @scope ((L00ee,L0110));
        [|int|] v20 @varname [|g|] @scope ((L00ce,L0134));
        [|int|] v22 @varname [|m|] @scope ((L00d3,L0134));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v27 @varname [|ws|] @scope ((L00d9,L0134));
        [|long|] v8 @varname [|nc|] @scope ((L001f,L0156));
        [|boolean|] v23 @varname [|rescanned|] @scope ((L00bc,L0156));
        [|int|] v24 @varname [|sc|] @scope ((L0059,L0156));
        [|int|] v26 @varname [|v|] @scope ((L0006,L0156));



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v9;
        v10;
        v11;
        v12;
        v13;
        v15;
        v16;
        v17;
        v19;
      
#L135efc.   v0:= v29  @type object;
#L135f00.   v0:= v0.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L135f04.   v26:= v0;
#L135f08.   v0:= v30  @type wide;
#L135f0c.   v2:= (int)v0  @type l2i;
#L135f0e.   v0:= v29  @type object;
#L135f12.   v0.[|java:util:concurrent:ForkJoinWorkerThread.nextWait|]  := v2;
#L135f16.    v2:= nan;
#L135f1c.   v2:= v2 ^& v26  @type int;
#L135f20.   v2:= (long)v2  @type i2l;
#L135f22.   v4:= 281474976710656L  @length wide_high16;
#L135f26.   v4:= v30 - v4  @type long;
#L135f2a.   v6:= nanL  @length wide;
#L135f34.   v4:= v4 ^& v6  @type long;
#L135f36.   v8:= v2 ^| v4  @type long;
#L135f3a.   v0:= v28  @type object;
#L135f3e.   v2:= v0.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L135f42.   v2:= cmp(v2,v30);
#L135f46.   if v2 != 0 then goto L135f66;
#L135f4a.   v2:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135f4e.   v4:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L135f52.   v3:= v28  @type object;
#L135f56.   v6:= v30  @type wide;
#L135f5a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v2, v3, v4, v5, v6, v7, v8, v9) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135f60.   v2:= temp;
#L135f62.   if v2 != 0 then goto L135fa2;
#L135f66.   v0:= v28  @type object;
#L135f6a.   v0:= v0.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L135f6e.   v18:= v0  @type wide;
#L135f72.   v0:= v18  @type wide;
#L135f76.   v2:= (int)v0  @type l2i;
#L135f78.   v0:= v30  @type wide;
#L135f7c.   v3:= (int)v0  @type l2i;
#L135f7e.   if v2 == v3 then goto L135f9e;
#L135f82.   v2:= -281474976710656L  @length wide_high16;
#L135f86.   v2:= v2 ^& v18  @type long;
#L135f8a.   v4:= -281474976710656L  @length wide_high16;
#L135f8e.   v4:= v4 ^& v30  @type long;
#L135f92.   v2:= cmp(v2,v4);
#L135f96.   if v2 < 0 then goto L135f9e;
#L135f9a.   v2:= 1  @length 4;
#L135f9c.   return v2;
#L135f9e.   v2:= 0  @length 4;
#L135fa0.   goto L135f9c;
#L135fa2.   v0:= v29  @type object;
#L135fa6.   v0:= v0.[|java:util:concurrent:ForkJoinWorkerThread.stealCount|] ;
#L135faa.   v24:= v0;
#L135fae.   if v24 == 0 then goto L136002;
#L135fb2.   v0:= v28  @type object;
#L135fb6.   v14:= v0.[|java:util:concurrent:ForkJoinPool.stealCount|]   @wide;
#L135fba.   v10:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L135fbe.   v12:= @@[|java:util:concurrent:ForkJoinPool.stealCountOffset|]   @wide;
#L135fc2.   v0:= v24;
#L135fc6.   v2:= (long)v0  @type i2l;
#L135fc8.   v16:= v14 + v2  @type long;
#L135fcc.   v11:= v28  @type object;
#L135fd0.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v10, v11, v12, v13, v14, v15, v16, v17) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L135fd6.   v2:= temp;
#L135fd8.   if v2 == 0 then goto L135fee;
#L135fdc.   v24:= 0  @length 16;
#L135fe0.   v0:= v24;
#L135fe4.   v1:= v29  @type object;
#L135fe8.   v1.[|java:util:concurrent:ForkJoinWorkerThread.stealCount|]  := v0;
#L135fec.   goto L135fae;
#L135fee.   v0:= v29  @type object;
#L135ff2.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L135ff6.   v0:= v26;
#L135ffa.   if v2 == v0 then goto L135fae;
#L135ffe.   v2:= 1  @length 4;
#L136000.   goto L135f9c;
#L136002.   v0:= v28  @type object;
#L136006.   v2:= v0.[|java:util:concurrent:ForkJoinPool.shutdown|]   @boolean;
#L13600a.   if v2 == 0 then goto L136020;
#L13600e.   v2:= 0  @length 4;
#L136010.   v0:= v28  @type object;
#L136014.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryTerminate|](v0, v2) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryTerminate:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L13601a.   v2:= temp;
#L13601c.   if v2 != 0 then goto L136070;
#L136020.   v0:= v30  @type wide;
#L136024.   v2:= (int)v0  @type l2i;
#L136026.   if v2 == 0 then goto L136070;
#L13602a.   v0:= v28  @type object;
#L13602e.   v2:= v0.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L136032.   v3:= 48  @length 16;
#L136036.   v3:= v8 ^> v3  @type long;
#L13603a.   v3:= (int)v3  @type l2i;
#L13603c.   v2:= v2 + v3  @type int;
#L13603e.   if v2 != 0 then goto L136070;
#L136042.   v0:= v28  @type object;
#L136046.   v2:= v0.[|java:util:concurrent:ForkJoinPool.blockedCount|] ;
#L13604a.   if v2 != 0 then goto L136070;
#L13604e.   v0:= v28  @type object;
#L136052.   v2:= v0.[|java:util:concurrent:ForkJoinPool.quiescerCount|] ;
#L136056.   if v2 != 0 then goto L136070;
#L13605a.   v6:= v28  @type object;
#L13605e.   v7:= v29  @type object;
#L136062.   v10:= v30  @type wide;
#L136066.   v12:= v26;
#L13606a.   call temp:=  [|java:util:concurrent:ForkJoinPool.idleAwaitWork|](v6, v7, v8, v9, v10, v11, v12) @signature [|Ljava/util/concurrent/ForkJoinPool;.idleAwaitWork:(Ljava/util/concurrent/ForkJoinWorkerThread;JJI)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L136070.   v23:= 0  @length 16;
#L136074.   v0:= v29  @type object;
#L136078.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L13607c.   v0:= v26;
#L136080.   if v2 == v0 then goto L136088;
#L136084.   v2:= 1  @length 4;
#L136086.   goto L135f9c;
#L136088.   if v23 != 0 then goto L136164;
#L13608c.   v0:= v28  @type object;
#L136090.   v0:= v0.[|java:util:concurrent:ForkJoinPool.scanGuard|] ;
#L136094.   v20:= v0;
#L136098.    v2:= 0.000000;
#L13609e.   v22:= v20 ^& v2  @type int;
#L1360a2.   v0:= v28  @type object;
#L1360a6.   v0:= v0.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L1360aa.   v27:= v0  @type object;
#L1360ae.   if v27 == 0 then goto L13611c;
#L1360b2.   v0:= v27  @type object;
#L1360b6.   v2:= v0.length;
#L1360b8.   v0:= v22;
#L1360bc.   if v0 >= v2 then goto L13611c;
#L1360c0.   v23:= 1  @length 16;
#L1360c4.   v21:= 0  @length 16;
#L1360c8.   v0:= v21;
#L1360cc.   v1:= v22;
#L1360d0.   if v0 > v1 then goto L13611c;
#L1360d4.   v25:= v27[v21]  @type object;
#L1360d8.   if v25 == 0 then goto L136116;
#L1360dc.   v0:= v25  @type object;
#L1360e0.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L1360e4.   v0:= v25  @type object;
#L1360e8.   v3:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L1360ec.   if v2 == v3 then goto L136100;
#L1360f0.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryReleaseWaiter|](v28) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryReleaseWaiter:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L1360f6.   v2:= temp;
#L1360f8.   if v2 != 0 then goto L136100;
#L1360fc.   v23:= 0  @length 16;
#L136100.   v0:= v29  @type object;
#L136104.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L136108.   v0:= v26;
#L13610c.   if v2 == v0 then goto L136116;
#L136110.   v2:= 1  @length 4;
#L136112.   goto L135f9c;
#L136116.   v21:= v21 + 1;
#L13611a.   goto L1360c8;
#L13611c.   v0:= v28  @type object;
#L136120.   v2:= v0.[|java:util:concurrent:ForkJoinPool.scanGuard|] ;
#L136124.   v0:= v20;
#L136128.   if v2 != v0 then goto L13614c;
#L13612c.   v0:= v28  @type object;
#L136130.   v2:= v0.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L136134.   v0:= v28  @type object;
#L136138.   v3:= v0.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L13613c.   if v2 == v3 then goto L136150;
#L136140.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryReleaseWaiter|](v28) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryReleaseWaiter:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L136146.   v2:= temp;
#L136148.   if v2 != 0 then goto L136150;
#L13614c.   v23:= 0  @length 16;
#L136150.   if v23 != 0 then goto L13615c;
#L136154.   call temp:=  [|java:lang:Thread.yield|]() @signature [|Ljava/lang/Thread;.yield:()V|] @classDescriptor [|java:lang:Thread|] @type static;
#L13615a.   goto L136074;
#L13615c.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L136162.   goto L136074;
#L136164.   v2:= 1  @length 4;
#L136166.   v0:= v29  @type object;
#L13616a.   v0.[|java:util:concurrent:ForkJoinWorkerThread.parked|]  := v2 @boolean;
#L13616e.   v0:= v29  @type object;
#L136172.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L136176.   v0:= v26;
#L13617a.   if v2 == v0 then goto L13618e;
#L13617e.   v2:= 0  @length 4;
#L136180.   v0:= v29  @type object;
#L136184.   v0.[|java:util:concurrent:ForkJoinWorkerThread.parked|]  := v2 @boolean;
#L136188.   v2:= 1  @length 4;
#L13618a.   goto L135f9c;
#L13618e.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v28) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L136194.   v23:= 0  @length 16;
#L136198.   v0:= v23;
#L13619c.   v1:= v29  @type object;
#L1361a0.   v1.[|java:util:concurrent:ForkJoinWorkerThread.parked|]  := v0 @boolean;
#L1361a4.   goto L136074;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.tryPreBlock|] ([|java:util:concurrent:ForkJoinPool|] v22 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.tryPreBlock:()Z|] @Access PRIVATE {
      local temp ;
        [|long|] v10 @varname [|c|] @scope ((L001c,L0038), (L003a,L00ed));
        [|int|] v15 @varname [|e|] @scope ((L0024,L0038), (L003a,L00ed));
        [|int|] v17 @varname [|pc|] @scope ((L0018,L0038), (L003a,L00ed));
        [|int|] v19 @varname [|u|] @scope ((L0023,L0038), (L003a,L00ed));
        [|long|] v12 @varname [|nc|] @scope ((L006b,L0097), (L00b2,L00c1), (L00db,L00ed));
        [|int|] v16 @varname [|i|] @scope ((L004f,L0097));
        [|java:util:concurrent:ForkJoinWorkerThread|] v20 @varname [|w|] @scope ((L0058,L0097));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v21 @varname [|ws|] @scope ((L0046,L0097));
        [|int|] v5 @varname [|b|] @scope ((L0004,L00ed));
        [|int|] v14 @varname [|ac|] @scope ((L003c,L00ed));
        [|int|] v18 @varname [|tc|] @scope ((L009c,L00ed));

        v0;
        v1;
        v2;
        v3;
        v4;
        v6;
        v7;
        v8;
        v9;
        v11;
        v13;
      
#L1361b8.   v0:= v22  @type object;
#L1361bc.   v5:= v0.[|java:util:concurrent:ForkJoinPool.blockedCount|] ;
#L1361c0.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1361c4.   v3:= @@[|java:util:concurrent:ForkJoinPool.blockedCountOffset|]   @wide;
#L1361c8.   v6:= v5 + 1;
#L1361cc.   v2:= v22  @type object;
#L1361d0.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v1, v2, v3, v4, v5, v6) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1361d6.   v1:= temp;
#L1361d8.   if v1 == 0 then goto L136228;
#L1361dc.   v0:= v22  @type object;
#L1361e0.   v0:= v0.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L1361e4.   v17:= v0;
#L1361e8.   v0:= v22  @type object;
#L1361ec.   v10:= v0.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L1361f0.   v1:= 32  @length 16;
#L1361f4.   v1:= v10 ^>> v1  @type long;
#L1361f8.   v0:= (int)v1  @type l2i;
#L1361fa.   v19:= v0;
#L1361fe.   v15:= (int)v10  @type l2i;
#L136200.   if v15 >= 0 then goto L13622c;
#L136204.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136208.   v3:= @@[|java:util:concurrent:ForkJoinPool.blockedCountOffset|]   @wide;
#L13620c.   v0:= v22  @type object;
#L136210.   v5:= v0.[|java:util:concurrent:ForkJoinPool.blockedCount|] ;
#L136214.   v6:= v5 + -1;
#L136218.   v2:= v22  @type object;
#L13621c.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v1, v2, v3, v4, v5, v6) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136222.   v1:= temp;
#L136224.   if v1 == 0 then goto L1361e8;
#L136228.   v1:= 0  @length 4;
#L13622a.   return v1;
#L13622c.   v14:= v19 ^> 16;
#L136230.   if v14 > 0 then goto L1362e6;
#L136234.   if v15 == 0 then goto L1362e6;
#L136238.   v0:= v22  @type object;
#L13623c.   v0:= v0.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L136240.   v21:= v0  @type object;
#L136244.   if v21 == 0 then goto L1362e6;
#L136248.   v1:= v15 ^~ -1;
#L13624c.    v2:= 0.000000;
#L136252.   v16:= v1 ^& v2  @type int;
#L136256.   v0:= v21  @type object;
#L13625a.   v1:= v0.length;
#L13625c.   v0:= v16;
#L136260.   if v0 >= v1 then goto L1362e6;
#L136264.   v20:= v21[v16]  @type object;
#L136268.   if v20 == 0 then goto L1362e6;
#L13626c.   v0:= v20  @type object;
#L136270.   v1:= v0.[|java:util:concurrent:ForkJoinWorkerThread.nextWait|] ;
#L136274.    v2:= nan;
#L13627a.   v1:= v1 ^& v2  @type int;
#L13627c.   v1:= (long)v1  @type i2l;
#L13627e.   v3:= nanL  @length wide;
#L136288.   v3:= v3 ^& v10  @type long;
#L13628a.   v12:= v1 ^| v3  @type long;
#L13628e.   v0:= v20  @type object;
#L136292.   v1:= v0.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L136296.   if v1 != v15 then goto L136204;
#L13629a.   v6:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L13629e.   v8:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L1362a2.   v7:= v22  @type object;
#L1362a6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v6, v7, v8, v9, v10, v11, v12, v13) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1362ac.   v1:= temp;
#L1362ae.   if v1 == 0 then goto L136204;
#L1362b2.   v1:= 65536  @length high16;
#L1362b6.   v1:= v1 + v15  @type int;
#L1362b8.    v2:= nan;
#L1362be.   v1:= v1 ^& v2  @type int;
#L1362c0.   v0:= v20  @type object;
#L1362c4.   v0.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|]  := v1;
#L1362c8.   v0:= v20  @type object;
#L1362cc.   v1:= v0.[|java:util:concurrent:ForkJoinWorkerThread.parked|]   @boolean;
#L1362d0.   if v1 == 0 then goto L1362e2;
#L1362d4.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1362d8.   v0:= v20  @type object;
#L1362dc.   call temp:=  [|sun:misc:Unsafe.unpark|](v1, v0) @signature [|Lsun/misc/Unsafe;.unpark:(Ljava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1362e2.   v1:= 1  @length 4;
#L1362e4.   goto L13622a;
#L1362e6.   v1:= v19 ^>> 0;
#L1362ea.   v0:= (short)v1  @type i2s;
#L1362ec.   v18:= v0;
#L1362f0.   if v18 < 0 then goto L13633a;
#L1362f4.   v1:= v14 + v17  @type int;
#L1362f8.   v2:= 1  @length 4;
#L1362fa.   if v1 <= v2 then goto L13633a;
#L1362fe.   v1:= 281474976710656L  @length wide_high16;
#L136302.   v1:= v10 - v1  @type long;
#L136306.   v3:= -281474976710656L  @length wide_high16;
#L13630a.   v1:= v1 ^& v3  @type long;
#L13630c.   v3:= 0.000000L  @length wide;
#L136316.   v3:= v3 ^& v10  @type long;
#L136318.   v12:= v1 ^| v3  @type long;
#L13631c.   v6:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136320.   v8:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L136324.   v7:= v22  @type object;
#L136328.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v6, v7, v8, v9, v10, v11, v12, v13) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13632e.   v1:= temp;
#L136330.   if v1 == 0 then goto L136204;
#L136334.   v1:= 1  @length 4;
#L136336.   goto L13622a;
#L13633a.   v1:= v18 + v17  @type int;
#L13633e.   v2:= 32767  @length 16;
#L136342.   if v1 >= v2 then goto L136204;
#L136346.   v1:= 0.000000L  @length wide;
#L136350.   v1:= v1 + v10  @type long;
#L136352.   v3:= 0.000000L  @length wide;
#L13635c.   v1:= v1 ^& v3  @type long;
#L13635e.   v3:= nanL  @length wide;
#L136368.   v3:= v3 ^& v10  @type long;
#L13636a.   v12:= v1 ^| v3  @type long;
#L13636e.   v6:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136372.   v8:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L136376.   v7:= v22  @type object;
#L13637a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v6, v7, v8, v9, v10, v11, v12, v13) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136380.   v1:= temp;
#L136382.   if v1 == 0 then goto L136204;
#L136386.   call temp:=  [|java:util:concurrent:ForkJoinPool.addWorker|](v22) @signature [|Ljava/util/concurrent/ForkJoinPool;.addWorker:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L13638c.   v1:= 1  @length 4;
#L13638e.   goto L13622a;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.tryReleaseWaiter|] ([|java:util:concurrent:ForkJoinPool|] v15 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.tryReleaseWaiter:()Z|] @Access PRIVATE {
      local temp ;
        [|long|] v6 @varname [|nc|] @scope ((L0030,L0040), (L0041,L0050));
        [|int|] v9 @varname [|i|] @scope ((L001a,L0040), (L0041,L0050));
        [|java:util:concurrent:ForkJoinWorkerThread|] v10 @varname [|w|] @scope ((L001f,L0040), (L0041,L0050));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v11 @varname [|ws|] @scope ((L0011,L0040), (L0041,L0050));
        [|long|] v4 @varname [|c|] @scope ((L0005,L0052));
        [|int|] v8 @varname [|e|] @scope ((L0006,L0052));

        v0;
        v1;
        v2;
        v3;
        v5;
        v7;
        v12;
        v13;
        v14;
      
#L1363a4.    v14:= nan;
#L1363aa.   v4:= v15.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L1363ae.   v8:= (int)v4  @type l2i;
#L1363b0.   if v8 <= 0 then goto L136444;
#L1363b4.   v0:= 48  @length 16;
#L1363b8.   v0:= v4 ^> v0  @type long;
#L1363bc.   v0:= (int)v0  @type l2i;
#L1363be.   if v0 >= 0 then goto L136444;
#L1363c2.   v11:= v15.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L1363c6.   if v11 == 0 then goto L136444;
#L1363ca.   v0:= v8 ^~ -1;
#L1363ce.    v1:= 0.000000;
#L1363d4.   v9:= v0 ^& v1  @type int;
#L1363d8.   v0:= v11.length;
#L1363da.   if v9 >= v0 then goto L136444;
#L1363de.   v10:= v11[v9]  @type object;
#L1363e2.   if v10 == 0 then goto L136444;
#L1363e6.   v0:= v10.[|java:util:concurrent:ForkJoinWorkerThread.nextWait|] ;
#L1363ea.   v0:= v0 ^& v14  @type int;
#L1363ec.   v0:= (long)v0  @type i2l;
#L1363ee.   v2:= 281474976710656L  @length wide_high16;
#L1363f2.   v2:= v2 + v4  @type long;
#L1363f4.   v12:= nanL  @length wide;
#L1363fe.   v2:= v2 ^& v12  @type long;
#L136400.   v6:= v0 ^| v2  @type long;
#L136404.   v0:= v10.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L136408.   if v0 != v8 then goto L136422;
#L13640c.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136410.   v2:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L136414.   v1:= v15  @type object;
#L136416.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13641c.   v0:= temp;
#L13641e.   if v0 != 0 then goto L136426;
#L136422.   v0:= 0  @length 4;
#L136424.   return v0;
#L136426.   v0:= 65536  @length high16;
#L13642a.   v0:= v0 + v8  @type int;
#L13642c.   v0:= v0 ^& v14  @type int;
#L13642e.   v10.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|]  := v0;
#L136432.   v0:= v10.[|java:util:concurrent:ForkJoinWorkerThread.parked|]   @boolean;
#L136436.   if v0 == 0 then goto L136444;
#L13643a.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L13643e.   call temp:=  [|sun:misc:Unsafe.unpark|](v0, v10) @signature [|Lsun/misc/Unsafe;.unpark:(Ljava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136444.   v0:= 1  @length 4;
#L136446.   goto L136424;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.tryTerminate|] ([|java:util:concurrent:ForkJoinPool|] v12 @type (this), [|boolean|] v13) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.tryTerminate:(Z)Z|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v8 @varname [|lock|] @scope ((L0056,L0061), (L0063,L0068));
        [|long|] v4 @varname [|c|] @scope ((L0008,L0068));


        v0;
        v1;
        v2;
        v3;
        v5;
        v6;
        v7;
        v9;
        v10;
        v11;
      
#L136458.   v10:= 0.000000L  @length wide;
#L136462.   v9:= 0  @length 4;
#L136464.   v4:= v12.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L136468.   v0:= v4 ^& v10  @type long;
#L13646c.   v2:= 0  @length wide16;
#L136470.   v0:= cmp(v0,v2);
#L136474.   if v0 != 0 then goto L1364ea;
#L136478.   if v13 != 0 then goto L1364c8;
#L13647c.   v0:= 48  @length 16;
#L136480.   v0:= v4 ^> v0  @type long;
#L136484.   v0:= (int)v0  @type l2i;
#L136486.   v1:= v12.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L13648a.   v1:= -v1  @type int;
#L13648c.   if v0 == v1 then goto L136494;
#L136490.   v0:= v9;
#L136492.   return v0;
#L136494.   v0:= v12.[|java:util:concurrent:ForkJoinPool.shutdown|]   @boolean;
#L136498.   if v0 == 0 then goto L1364b8;
#L13649c.   v0:= v12.[|java:util:concurrent:ForkJoinPool.blockedCount|] ;
#L1364a0.   if v0 != 0 then goto L1364b8;
#L1364a4.   v0:= v12.[|java:util:concurrent:ForkJoinPool.quiescerCount|] ;
#L1364a8.   if v0 != 0 then goto L1364b8;
#L1364ac.   v0:= v12.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L1364b0.   v1:= v12.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L1364b4.   if v0 == v1 then goto L1364c8;
#L1364b8.   v0:= v12.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L1364bc.   v0:= cmp(v0,v4);
#L1364c0.   if v0 != 0 then goto L136464;
#L1364c4.   v0:= v9;
#L1364c6.   goto L136492;
#L1364c8.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1364cc.   v2:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L1364d0.   v6:= v4 ^| v10  @type long;
#L1364d4.   v1:= v12  @type object;
#L1364d6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1364dc.   v0:= temp;
#L1364de.   if v0 == 0 then goto L136464;
#L1364e2.   call temp:=  [|java:util:concurrent:ForkJoinPool.startTerminating|](v12) @signature [|Ljava/util/concurrent/ForkJoinPool;.startTerminating:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L1364e8.   goto L136464;
#L1364ea.   v0:= 32  @length 16;
#L1364ee.   v0:= v4 ^>> v0  @type long;
#L1364f2.   v0:= (int)v0  @type l2i;
#L1364f4.   v0:= (short)v0  @type i2s;
#L1364f6.   v1:= v12.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L1364fa.   v1:= -v1  @type int;
#L1364fc.   if v0 != v1 then goto L13651a;
#L136500.   v8:= v12.[|java:util:concurrent:ForkJoinPool.submissionLock|]   @type object;
#L136504.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v8) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13650a.   v0:= v12.[|java:util:concurrent:ForkJoinPool.termination|]   @type object;
#L13650e.   call temp:=  [|java:util:concurrent:locks:Condition.signalAll|](v0) @signature [|Ljava/util/concurrent/locks/Condition;.signalAll:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L136514.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v8) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13651a.   v0:= 1  @length 4;
#L13651c.   goto L136492;
#L13651e.   v0:= Exception  @type object;
#L136520.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v8) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L136526.   throw v0;
  catch  [|any|] @[L13650a..L136514] goto L13651e;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.addActiveCount|] ([|java:util:concurrent:ForkJoinPool|] v10 @type (this), [|int|] v11) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.addActiveCount:(I)V|] @Access FINAL {
      local temp ;
        [|long|] v4 @varname [|c|] @scope ((L000b,L0015));
        [|long|] v8 @varname [|d|] @scope ((L0005,L0015));


        v0;
        v1;
        v2;
        v3;
        v5;
        v6;
        v7;
        v9;
      
#L136544.   v0:= (long)v11  @type i2l;
#L136546.   v2:= 48  @length 16;
#L13654a.   v8:= v0 ^< v2  @type long;
#L13654e.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136552.   v2:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L136556.   v4:= v10.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L13655a.   v6:= v4 + v8  @type long;
#L13655e.   v1:= v10  @type object;
#L136560.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136566.   v0:= temp;
#L136568.   if v0 == 0 then goto L13654e;
#L13656c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.addQuiescerCount|] ([|java:util:concurrent:ForkJoinPool|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.addQuiescerCount:(I)V|] @Access FINAL {
      local temp ;
        [|int|] v4 @varname [|c|] @scope ((L0006,L0010));


        v0;
        v1;
        v2;
        v3;
        v5;
      
#L136580.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136584.   v2:= @@[|java:util:concurrent:ForkJoinPool.quiescerCountOffset|]   @wide;
#L136588.   v4:= v6.[|java:util:concurrent:ForkJoinPool.quiescerCount|] ;
#L13658c.   v5:= v4 + v7  @type int;
#L136590.   v1:= v6  @type object;
#L136592.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136598.   v0:= temp;
#L13659a.   if v0 == 0 then goto L136580;
#L13659e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.awaitTermination|] ([|java:util:concurrent:ForkJoinPool|] v5 @type (this), [|long|] v6, [|java:util:concurrent:TimeUnit|] v8 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0006,L0028));
        [|long|] v1 @varname [|nanos|] @scope ((L0004,L0028));



        v2;
        v3;
        v4;
      
#L1365b0.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v8, v6, v7) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L1365b6.   v1:= temp  @type wide;
#L1365b8.   v0:= v5.[|java:util:concurrent:ForkJoinPool.submissionLock|]   @type object;
#L1365bc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1365c2.   call temp:=  [|java:util:concurrent:ForkJoinPool.isTerminated|](v5) @signature [|Ljava/util/concurrent/ForkJoinPool;.isTerminated:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L1365c8.   v3:= temp;
#L1365ca.   if v3 == 0 then goto L1365d8;
#L1365ce.   v3:= 1  @length 4;
#L1365d0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1365d6.   return v3;
#L1365d8.   v3:= 0  @length wide16;
#L1365dc.   v3:= cmp(v1,v3);
#L1365e0.   if v3 > 0 then goto L1365e8;
#L1365e4.   v3:= 0  @length 4;
#L1365e6.   goto L1365d0;
#L1365e8.   v3:= v5.[|java:util:concurrent:ForkJoinPool.termination|]   @type object;
#L1365ec.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v3, v1, v2) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1365f2.   v1:= temp  @type wide;
#L1365f4.   goto L1365c2;
#L1365f6.   v3:= Exception  @type object;
#L1365f8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1365fe.   throw v3;
  catch  [|any|] @[L1365c2..L1365c8] goto L1365f6;
  catch  [|any|] @[L1365e8..L1365f2] goto L1365f6;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.deregisterWorker|] ([|java:util:concurrent:ForkJoinPool|] v26 @type (this), [|java:util:concurrent:ForkJoinWorkerThread|] v27 @type (object), [|java:lang:Throwable|] v28 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.deregisterWorker:(Ljava/util/concurrent/ForkJoinWorkerThread;Ljava/lang/Throwable;)V|] @Access FINAL {
      local temp ;
        [|int|] v6 @varname [|g|] @scope ((L0014,L0021), (L0021,L0052));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v25 @varname [|ws|] @scope ((L002f,L0052));
        [|long|] v12 @varname [|c|] @scope ((L005f,L0086));
        [|long|] v18 @varname [|s|] @scope ((L0092,L00a1));
        [|int|] v22 @varname [|idx|] @scope ((L0006,L00bb));
        [|int|] v23 @varname [|sc|] @scope ((L000c,L00bb));
        [|int|] v24 @varname [|steps|] @scope ((L000e,L00bb));



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v7;
        v8;
        v9;
        v10;
        v11;
        v13;
        v14;
        v15;
        v16;
        v17;
        v19;
        v20;
        v21;
      
#L136624.   v0:= v27  @type object;
#L136628.   v0:= v0.[|java:util:concurrent:ForkJoinWorkerThread.poolIndex|] ;
#L13662c.   v22:= v0;
#L136630.   v0:= v27  @type object;
#L136634.   v0:= v0.[|java:util:concurrent:ForkJoinWorkerThread.stealCount|] ;
#L136638.   v23:= v0;
#L13663c.   v24:= 0  @length 16;
#L136640.   if v24 != 0 then goto L1366c8;
#L136644.   v0:= v26  @type object;
#L136648.   v6:= v0.[|java:util:concurrent:ForkJoinPool.scanGuard|] ;
#L13664c.   v2:= 65536  @length high16;
#L136650.   v2:= v2 ^& v6  @type int;
#L136652.   if v2 != 0 then goto L1366c8;
#L136656.   v2:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L13665a.   v4:= @@[|java:util:concurrent:ForkJoinPool.scanGuardOffset|]   @wide;
#L13665e.   v3:= 65536  @length high16;
#L136662.   v7:= v6 ^| v3  @type int;
#L136666.   v3:= v26  @type object;
#L13666a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136670.   v2:= temp;
#L136672.   if v2 == 0 then goto L1366c8;
#L136676.   v0:= v26  @type object;
#L13667a.   v0:= v0.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L13667e.   v25:= v0  @type object;
#L136682.   if v25 == 0 then goto L1366aa;
#L136686.   if v22 < 0 then goto L1366aa;
#L13668a.   v0:= v25  @type object;
#L13668e.   v2:= v0.length;
#L136690.   v0:= v22;
#L136694.   if v0 >= v2 then goto L1366aa;
#L136698.   v2:= v25[v22]  @type object;
#L13669c.   v0:= v27  @type object;
#L1366a0.   if v2 != v0 then goto L1366aa;
#L1366a4.   v2:= 0  @length 4;
#L1366a6.   v25[v22]:= v2  @type object;
#L1366aa.   v0:= v22;
#L1366ae.   v1:= v26  @type object;
#L1366b2.   v1.[|java:util:concurrent:ForkJoinPool.nextWorkerIndex|]  := v0;
#L1366b6.   v2:= 65536  @length high16;
#L1366ba.   v2:= v2 + v7  @type int;
#L1366bc.   v0:= v26  @type object;
#L1366c0.   v0.[|java:util:concurrent:ForkJoinPool.scanGuard|]  := v2;
#L1366c4.   v24:= 1  @length 16;
#L1366c8.   v2:= 1  @length 4;
#L1366ca.   v0:= v24;
#L1366ce.   if v0 != v2 then goto L136730;
#L1366d2.   v8:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L1366d6.   v10:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L1366da.   v0:= v26  @type object;
#L1366de.   v12:= v0.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L1366e2.   v2:= 281474976710656L  @length wide_high16;
#L1366e6.   v2:= v12 - v2  @type long;
#L1366ea.   v4:= -281474976710656L  @length wide_high16;
#L1366ee.   v2:= v2 ^& v4  @type long;
#L1366f0.   v4:= 0.000000L  @length wide;
#L1366fa.   v4:= v12 - v4  @type long;
#L1366fe.   v14:= 0.000000L  @length wide;
#L136708.   v4:= v4 ^& v14  @type long;
#L13670a.   v2:= v2 ^| v4  @type long;
#L13670c.   v4:= 0.000000L  @length wide;
#L136716.   v4:= v4 ^& v12  @type long;
#L136718.   v14:= v2 ^| v4  @type long;
#L13671c.   v9:= v26  @type object;
#L136720.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v8, v9, v10, v11, v12, v13, v14, v15) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136726.   v2:= temp;
#L136728.   if v2 == 0 then goto L136730;
#L13672c.   v24:= 2  @length 16;
#L136730.   if v23 == 0 then goto L136766;
#L136734.   v14:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136738.   v16:= @@[|java:util:concurrent:ForkJoinPool.stealCountOffset|]   @wide;
#L13673c.   v0:= v26  @type object;
#L136740.   v0:= v0.[|java:util:concurrent:ForkJoinPool.stealCount|]   @wide;
#L136744.   v18:= v0  @type wide;
#L136748.   v0:= v23;
#L13674c.   v2:= (long)v0  @type i2l;
#L13674e.   v20:= v18 + v2  @type long;
#L136752.   v15:= v26  @type object;
#L136756.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v14, v15, v16, v17, v18, v19, v20, v21) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13675c.   v2:= temp;
#L13675e.   if v2 == 0 then goto L136766;
#L136762.   v23:= 0  @length 16;
#L136766.   v2:= 2  @length 4;
#L136768.   v0:= v24;
#L13676c.   if v0 != v2 then goto L136640;
#L136770.   if v23 != 0 then goto L136640;
#L136774.   v2:= 0  @length 4;
#L136776.   v0:= v26  @type object;
#L13677a.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryTerminate|](v0, v2) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryTerminate:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L136780.   v2:= temp;
#L136782.   if v2 != 0 then goto L136790;
#L136786.   if v28 == 0 then goto L136792;
#L13678a.   call temp:=  [|java:util:concurrent:ForkJoinPool.signalWork|](v26) @signature [|Ljava/util/concurrent/ForkJoinPool;.signalWork:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L136790.   return @void ;
#L136792.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryReleaseWaiter|](v26) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryReleaseWaiter:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L136798.   goto L136790;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinPool.drainTasksTo|] ([|java:util:concurrent:ForkJoinPool|] v10 @type (this), [|java:util:Collection|] v11 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.drainTasksTo:(Ljava/util/Collection;)I|] @Access PROTECTED {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v4 @varname [|t|] @scope ((L000b,L0013));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v0 @varname [|arr$|] @scope ((L0024,L0034));
        [|int|] v2 @varname [|i$|] @scope ((L0026,L0034));
        [|int|] v3 @varname [|len$|] @scope ((L0025,L0034));
        [|java:util:concurrent:ForkJoinWorkerThread|] v5 @varname [|w|] @scope ((L002a,L0034));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v6 @varname [|ws|] @scope ((L0021,L0034));
        [|int|] v1 @varname [|count|] @scope ((L0001,L0035));


        v7;
        v8;
        v9;
      
#L1367ac.   v1:= 0  @length 4;
#L1367ae.   v7:= v10.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L1367b2.   v8:= v10.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L1367b6.   if v7 == v8 then goto L1367d2;
#L1367ba.   call temp:=  [|java:util:concurrent:ForkJoinPool.pollSubmission|](v10) @signature [|Ljava/util/concurrent/ForkJoinPool;.pollSubmission:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L1367c0.   v4:= temp  @type object;
#L1367c2.   if v4 == 0 then goto L1367ae;
#L1367c6.   call temp:=  [|java:util:Collection.add|](v11, v4) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L1367cc.   v1:= v1 + 1;
#L1367d0.   goto L1367ae;
#L1367d2.   v7:= v10.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L1367d6.   v9:= 32  @length 16;
#L1367da.   v7:= v7 ^>> v9  @type long;
#L1367dc.   v7:= (int)v7  @type l2i;
#L1367de.   v7:= (short)v7  @type i2s;
#L1367e0.   v8:= v10.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L1367e4.   v8:= -v8  @type int;
#L1367e6.   if v7 <= v8 then goto L136814;
#L1367ea.   v6:= v10.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L1367ee.   if v6 == 0 then goto L136814;
#L1367f2.   v0:= v6  @type object;
#L1367f4.   v3:= v0.length;
#L1367f6.   v2:= 0  @length 4;
#L1367f8.   if v2 >= v3 then goto L136814;
#L1367fc.   v5:= v0[v2]  @type object;
#L136800.   if v5 == 0 then goto L13680e;
#L136804.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.drainTasksTo|](v5, v11) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.drainTasksTo:(Ljava/util/Collection;)I|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L13680a.   v7:= temp;
#L13680c.   v1:= v1 + v7  @type int;
#L13680e.   v2:= v2 + 1;
#L136812.   goto L1367f8;
#L136814.   return v1;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.execute|] ([|java:util:concurrent:ForkJoinPool|] v2 @type (this), [|java:lang:Runnable|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.execute:(Ljava/lang/Runnable;)V|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v0 @varname [|job|] @scope ((L000f,L0013), (L0018,L0019));


        v1;
      
#L136828.   if v3 != 0 then goto L136838;
#L13682c.   v1:= new [|java:lang:NullPointerException|];
#L136830.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L136836.   throw v1;
#L136838.   v1:= instanceof @varname v3 @type [|java:util:concurrent:ForkJoinTask|];
#L13683c.   if v1 == 0 then goto L13684e;
#L136840.   v0:= v3  @type object;
#L136842.   v0:= ([|java:util:concurrent:ForkJoinTask|])v0;
#L136846.   call temp:=  [|java:util:concurrent:ForkJoinPool.forkOrSubmit|](v2, v0) @signature [|Ljava/util/concurrent/ForkJoinPool;.forkOrSubmit:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L13684c.   return @void ;
#L13684e.   v1:= 0  @length 4;
#L136850.   call temp:=  [|java:util:concurrent:ForkJoinTask.adapt|](v3, v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L136856.   v0:= temp  @type object;
#L136858.   goto L136846;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.execute|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this), [|java:util:concurrent:ForkJoinTask|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.execute:(Ljava/util/concurrent/ForkJoinTask;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13686c.   if v2 != 0 then goto L13687c;
#L136870.   v0:= new [|java:lang:NullPointerException|];
#L136874.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13687a.   throw v0;
#L13687c.   call temp:=  [|java:util:concurrent:ForkJoinPool.forkOrSubmit|](v1, v2) @signature [|Ljava/util/concurrent/ForkJoinPool;.forkOrSubmit:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L136882.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinPool.getActiveThreadCount|] ([|java:util:concurrent:ForkJoinPool|] v5 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getActiveThreadCount:()I|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|r|] @scope ((L000d,L0010));

        v1;
        v2;
        v3;
        v4;
      
#L136894.   v1:= v5.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L136898.   v2:= v5.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L13689c.   v4:= 48  @length 16;
#L1368a0.   v2:= v2 ^> v4  @type long;
#L1368a2.   v2:= (int)v2  @type l2i;
#L1368a4.   v1:= v1 + v2  @type int;
#L1368a6.   v2:= v5.[|java:util:concurrent:ForkJoinPool.blockedCount|] ;
#L1368aa.   v0:= v1 + v2  @type int;
#L1368ae.   if v0 > 0 then goto L1368b4;
#L1368b2.   v0:= 0  @length 4;
#L1368b4.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.getAsyncMode|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getAsyncMode:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L1368c8.   v0:= v1.[|java:util:concurrent:ForkJoinPool.locallyFifo|]   @boolean;
#L1368cc.   return v0;

   }
    procedure [|java:util:concurrent:ForkJoinPool$ForkJoinWorkerThreadFactory|] [|java:util:concurrent:ForkJoinPool.getFactory|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getFactory:()Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L1368e0.   v0:= v1.[|java:util:concurrent:ForkJoinPool.factory|]   @type object;
#L1368e4.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinPool.getParallelism|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getParallelism:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L1368f8.   v0:= v1.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L1368fc.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinPool.getPoolSize|] ([|java:util:concurrent:ForkJoinPool|] v4 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getPoolSize:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L136910.   v0:= v4.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L136914.   v1:= v4.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L136918.   v3:= 32  @length 16;
#L13691c.   v1:= v1 ^>> v3  @type long;
#L13691e.   v1:= (int)v1  @type l2i;
#L136920.   v1:= (short)v1  @type i2s;
#L136922.   v0:= v0 + v1  @type int;
#L136924.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinPool.getQueuedSubmissionCount|] ([|java:util:concurrent:ForkJoinPool|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getQueuedSubmissionCount:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L136938.   v0:= v2.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L13693c.   v0:= -v0  @type int;
#L13693e.   v1:= v2.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L136942.   v0:= v0 + v1  @type int;
#L136944.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:ForkJoinPool.getQueuedTaskCount|] ([|java:util:concurrent:ForkJoinPool|] v10 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getQueuedTaskCount:()J|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:ForkJoinWorkerThread|][] v0 @varname [|arr$|] @scope ((L0013,L0025));
        [|int|] v3 @varname [|i$|] @scope ((L0015,L0025));
        [|int|] v4 @varname [|len$|] @scope ((L0014,L0025));
        [|java:util:concurrent:ForkJoinWorkerThread|] v5 @varname [|w|] @scope ((L0019,L0025));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v6 @varname [|ws|] @scope ((L0010,L0025));
        [|long|] v1 @varname [|count|] @scope ((L0002,L0026));

        v2;
        v7;
        v8;
        v9;
      
#L136958.   v1:= 0  @length wide16;
#L13695c.   v7:= v10.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L136960.   v9:= 32  @length 16;
#L136964.   v7:= v7 ^>> v9  @type long;
#L136966.   v7:= (int)v7  @type l2i;
#L136968.   v7:= (short)v7  @type i2s;
#L13696a.   v8:= v10.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L13696e.   v8:= -v8  @type int;
#L136970.   if v7 <= v8 then goto L1369a2;
#L136974.   v6:= v10.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L136978.   if v6 == 0 then goto L1369a2;
#L13697c.   v0:= v6  @type object;
#L13697e.   v4:= v0.length;
#L136980.   v3:= 0  @length 4;
#L136982.   if v3 >= v4 then goto L1369a2;
#L136986.   v5:= v0[v3]  @type object;
#L13698a.   if v5 == 0 then goto L13699c;
#L13698e.   v7:= v5.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L136992.   v8:= v5.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L136996.   v7:= v7 - v8  @type int;
#L136998.   v7:= (long)v7  @type i2l;
#L13699a.   v1:= v1 - v7  @type long;
#L13699c.   v3:= v3 + 1;
#L1369a0.   goto L136982;
#L1369a2.   return v1  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinPool.getRunningThreadCount|] ([|java:util:concurrent:ForkJoinPool|] v5 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getRunningThreadCount:()I|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|r|] @scope ((L000a,L000d));

        v1;
        v2;
        v3;
        v4;
      
#L1369b4.   v1:= v5.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L1369b8.   v2:= v5.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L1369bc.   v4:= 48  @length 16;
#L1369c0.   v2:= v2 ^> v4  @type long;
#L1369c2.   v2:= (int)v2  @type l2i;
#L1369c4.   v0:= v1 + v2  @type int;
#L1369c8.   if v0 > 0 then goto L1369ce;
#L1369cc.   v0:= 0  @length 4;
#L1369ce.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:ForkJoinPool.getStealCount|] ([|java:util:concurrent:ForkJoinPool|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getStealCount:()J|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L1369e0.   v0:= v2.[|java:util:concurrent:ForkJoinPool.stealCount|]   @wide;
#L1369e4.   return v0  @type wide;

   }
    procedure [|java:lang:Thread$UncaughtExceptionHandler|] [|java:util:concurrent:ForkJoinPool.getUncaughtExceptionHandler|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L1369f8.   v0:= v1.[|java:util:concurrent:ForkJoinPool.ueh|]   @type object;
#L1369fc.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.hasQueuedSubmissions|] ([|java:util:concurrent:ForkJoinPool|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.hasQueuedSubmissions:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L136a10.   v0:= v2.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L136a14.   v1:= v2.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L136a18.   if v0 == v1 then goto L136a20;
#L136a1c.   v0:= 1  @length 4;
#L136a1e.   return v0;
#L136a20.   v0:= 0  @length 4;
#L136a22.   goto L136a1e;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinPool.idlePerActive|] ([|java:util:concurrent:ForkJoinPool|] v5 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.idlePerActive:()I|] @Access FINAL {
      local temp ;
        [|int|] v0 @varname [|a|] @scope ((L000a,L0025));
        [|int|] v1 @varname [|p|] @scope ((L0002,L0025));

        v2;
        v3;
        v4;
      
#L136a34.   v1:= v5.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L136a38.   v2:= v5.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L136a3c.   v4:= 48  @length 16;
#L136a40.   v2:= v2 ^> v4  @type long;
#L136a42.   v2:= (int)v2  @type l2i;
#L136a44.   v0:= v1 + v2  @type int;
#L136a48.   v1:= v1 ^>> 1;
#L136a4c.   if v0 <= v1 then goto L136a54;
#L136a50.   v2:= 0  @length 4;
#L136a52.   return v2;
#L136a54.   v1:= v1 ^>> 1;
#L136a58.   if v0 <= v1 then goto L136a60;
#L136a5c.   v2:= 1  @length 4;
#L136a5e.   goto L136a52;
#L136a60.   v1:= v1 ^>> 1;
#L136a64.   if v0 <= v1 then goto L136a6c;
#L136a68.   v2:= 2  @length 4;
#L136a6a.   goto L136a52;
#L136a6c.   v1:= v1 ^>> 1;
#L136a70.   if v0 <= v1 then goto L136a78;
#L136a74.   v2:= 4  @length 4;
#L136a76.   goto L136a52;
#L136a78.   v2:= 8  @length 16;
#L136a7c.   goto L136a52;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ForkJoinPool.invoke|] ([|java:util:concurrent:ForkJoinPool|] v2 @type (this), [|java:util:concurrent:ForkJoinTask|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.invoke:(Ljava/util/concurrent/ForkJoinTask;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:lang:Thread|] v0 @varname [|t|] @scope ((L0004,L001c));


        v1;
      
#L136a90.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L136a96.   v0:= temp  @type object;
#L136a98.   if v3 != 0 then goto L136aa8;
#L136a9c.   v1:= new [|java:lang:NullPointerException|];
#L136aa0.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L136aa6.   throw v1;
#L136aa8.   v1:= v2.[|java:util:concurrent:ForkJoinPool.shutdown|]   @boolean;
#L136aac.   if v1 == 0 then goto L136abc;
#L136ab0.   v1:= new [|java:util:concurrent:RejectedExecutionException|];
#L136ab4.   call temp:=  [|java:util:concurrent:RejectedExecutionException.<init>|](v1) @signature [|Ljava/util/concurrent/RejectedExecutionException;.<init>:()V|] @classDescriptor [|java:util:concurrent:RejectedExecutionException|] @type direct;
#L136aba.   throw v1;
#L136abc.   v1:= instanceof @varname v0 @type [|java:util:concurrent:ForkJoinWorkerThread|];
#L136ac0.   if v1 == 0 then goto L136ada;
#L136ac4.   v0:= ([|java:util:concurrent:ForkJoinWorkerThread|])v0;
#L136ac8.   v1:= v0.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L136acc.   if v1 != v2 then goto L136ada;
#L136ad0.   call temp:=  [|java:util:concurrent:ForkJoinTask.invoke|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.invoke:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L136ad6.   v1:= temp  @type object;
#L136ad8.   return v1  @type object;
#L136ada.   call temp:=  [|java:util:concurrent:ForkJoinPool.addSubmission|](v2, v3) @signature [|Ljava/util/concurrent/ForkJoinPool;.addSubmission:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L136ae0.   call temp:=  [|java:util:concurrent:ForkJoinTask.join|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.join:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L136ae6.   v1:= temp  @type object;
#L136ae8.   goto L136ad8;

   }
    procedure [|java:util:List|] [|java:util:concurrent:ForkJoinPool.invokeAll|] ([|java:util:concurrent:ForkJoinPool|] v5 @type (this), [|java:util:Collection|] v6 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.invokeAll:(Ljava/util/Collection;)Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:Callable|] v3 @varname [|task|] @scope ((L0019,L0021));
        [|java:util:ArrayList|] v0 @varname [|forkJoinTasks|] @scope ((L0009,L002b));
        [|java:util:List|] v1 @varname [|futures|] @scope ((L002a,L002b));
        [|java:util:Iterator|] v2 @varname [|i$|] @scope ((L000d,L002b));


        v4;
      
#L136afc.   v0:= new [|java:util:ArrayList|];
#L136b00.   call temp:=  [|java:util:Collection.size|](v6) @signature [|Ljava/util/Collection;.size:()I|] @classDescriptor [|java:util:Collection|] @type interface;
#L136b06.   v4:= temp;
#L136b08.   call temp:=  [|java:util:ArrayList.<init>|](v0, v4) @signature [|Ljava/util/ArrayList;.<init>:(I)V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L136b0e.   call temp:=  [|java:util:Collection.iterator|](v6) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L136b14.   v2:= temp  @type object;
#L136b16.   call temp:=  [|java:util:Iterator.hasNext|](v2) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L136b1c.   v4:= temp;
#L136b1e.   if v4 == 0 then goto L136b3e;
#L136b22.   call temp:=  [|java:util:Iterator.next|](v2) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L136b28.   v3:= temp  @type object;
#L136b2a.   v3:= ([|java:util:concurrent:Callable|])v3;
#L136b2e.   call temp:=  [|java:util:concurrent:ForkJoinTask.adapt|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L136b34.   v4:= temp  @type object;
#L136b36.   call temp:=  [|java:util:ArrayList.add|](v0, v4) @signature [|Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:ArrayList|] @type virtual;
#L136b3c.   goto L136b16;
#L136b3e.   v4:= new [|java:util:concurrent:ForkJoinPool$InvokeAll|];
#L136b42.   call temp:=  [|java:util:concurrent:ForkJoinPool$InvokeAll.<init>|](v4, v0) @signature [|Ljava/util/concurrent/ForkJoinPool$InvokeAll;.<init>:(Ljava/util/ArrayList;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool$InvokeAll|] @type direct;
#L136b48.   call temp:=  [|java:util:concurrent:ForkJoinPool.invoke|](v5, v4) @signature [|Ljava/util/concurrent/ForkJoinPool;.invoke:(Ljava/util/concurrent/ForkJoinTask;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L136b4e.   v1:= v0  @type object;
#L136b50.   return v1  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.isAtLeastTerminating|] ([|java:util:concurrent:ForkJoinPool|] v4 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.isAtLeastTerminating:()Z|] @Access FINAL {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L136b64.   v0:= v4.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L136b68.   v2:= 0.000000L  @length wide;
#L136b72.   v0:= v0 ^& v2  @type long;
#L136b74.   v2:= 0  @length wide16;
#L136b78.   v0:= cmp(v0,v2);
#L136b7c.   if v0 == 0 then goto L136b84;
#L136b80.   v0:= 1  @length 4;
#L136b82.   return v0;
#L136b84.   v0:= 0  @length 4;
#L136b86.   goto L136b82;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.isQuiescent|] ([|java:util:concurrent:ForkJoinPool|] v4 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.isQuiescent:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L136b98.   v0:= v4.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L136b9c.   v1:= v4.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L136ba0.   v3:= 48  @length 16;
#L136ba4.   v1:= v1 ^> v3  @type long;
#L136ba6.   v1:= (int)v1  @type l2i;
#L136ba8.   v0:= v0 + v1  @type int;
#L136baa.   v1:= v4.[|java:util:concurrent:ForkJoinPool.blockedCount|] ;
#L136bae.   v0:= v0 + v1  @type int;
#L136bb0.   if v0 != 0 then goto L136bb8;
#L136bb4.   v0:= 1  @length 4;
#L136bb6.   return v0;
#L136bb8.   v0:= 0  @length 4;
#L136bba.   goto L136bb6;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.isShutdown|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.isShutdown:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L136bcc.   v0:= v1.[|java:util:concurrent:ForkJoinPool.shutdown|]   @boolean;
#L136bd0.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.isTerminated|] ([|java:util:concurrent:ForkJoinPool|] v6 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.isTerminated:()Z|] @Access PUBLIC {
      local temp ;
        [|long|] v0 @varname [|c|] @scope ((L0002,L001d));

        v1;
        v2;
        v3;
        v4;
        v5;
      
#L136be4.   v0:= v6.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L136be8.   v2:= 0.000000L  @length wide;
#L136bf2.   v2:= v2 ^& v0  @type long;
#L136bf4.   v4:= 0  @length wide16;
#L136bf8.   v2:= cmp(v2,v4);
#L136bfc.   if v2 == 0 then goto L136c1a;
#L136c00.   v2:= 32  @length 16;
#L136c04.   v2:= v0 ^>> v2  @type long;
#L136c08.   v2:= (int)v2  @type l2i;
#L136c0a.   v2:= (short)v2  @type i2s;
#L136c0c.   v3:= v6.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L136c10.   v3:= -v3  @type int;
#L136c12.   if v2 != v3 then goto L136c1a;
#L136c16.   v2:= 1  @length 4;
#L136c18.   return v2;
#L136c1a.   v2:= 0  @length 4;
#L136c1c.   goto L136c18;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinPool.isTerminating|] ([|java:util:concurrent:ForkJoinPool|] v6 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.isTerminating:()Z|] @Access PUBLIC {
      local temp ;
        [|long|] v0 @varname [|c|] @scope ((L0002,L001d));

        v1;
        v2;
        v3;
        v4;
        v5;
      
#L136c30.   v0:= v6.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L136c34.   v2:= 0.000000L  @length wide;
#L136c3e.   v2:= v2 ^& v0  @type long;
#L136c40.   v4:= 0  @length wide16;
#L136c44.   v2:= cmp(v2,v4);
#L136c48.   if v2 == 0 then goto L136c66;
#L136c4c.   v2:= 32  @length 16;
#L136c50.   v2:= v0 ^>> v2  @type long;
#L136c54.   v2:= (int)v2  @type l2i;
#L136c56.   v2:= (short)v2  @type i2s;
#L136c58.   v3:= v6.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L136c5c.   v3:= -v3  @type int;
#L136c5e.   if v2 == v3 then goto L136c66;
#L136c62.   v2:= 1  @length 4;
#L136c64.   return v2;
#L136c66.   v2:= 0  @length 4;
#L136c68.   goto L136c64;

   }
    procedure [|java:util:concurrent:RunnableFuture|] [|java:util:concurrent:ForkJoinPool.newTaskFor|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.newTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;|] @Access PROTECTED {
      local temp ;



        v0;
      
#L136c7c.   call temp:=  [|java:util:concurrent:ForkJoinTask.adapt|](v2, v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L136c82.   v0:= temp  @type object;
#L136c84.   v0:= ([|java:util:concurrent:RunnableFuture|])v0;
#L136c88.   return v0  @type object;

   }
    procedure [|java:util:concurrent:RunnableFuture|] [|java:util:concurrent:ForkJoinPool.newTaskFor|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.newTaskFor:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;|] @Access PROTECTED {
      local temp ;


        v0;
      
#L136c9c.   call temp:=  [|java:util:concurrent:ForkJoinTask.adapt|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L136ca2.   v0:= temp  @type object;
#L136ca4.   v0:= ([|java:util:concurrent:RunnableFuture|])v0;
#L136ca8.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:ForkJoinPool.nextWorkerName|] ([|java:util:concurrent:ForkJoinPool|] v6 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.nextWorkerName:()Ljava/lang/String;|] @Access FINAL {
      local temp ;
        [|int|] v4 @varname [|n|] @scope ((L0006,L0008), (L0008,L0023));

        v0;
        v1;
        v2;
        v3;
        v5;
      
#L136cbc.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136cc0.   v2:= @@[|java:util:concurrent:ForkJoinPool.nextWorkerNumberOffset|]   @wide;
#L136cc4.   v4:= v6.[|java:util:concurrent:ForkJoinPool.nextWorkerNumber|] ;
#L136cc8.   v5:= v4 + 1;
#L136ccc.   v1:= v6  @type object;
#L136cce.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136cd4.   v0:= temp;
#L136cd6.   if v0 == 0 then goto L136cbc;
#L136cda.   v0:= new [|java:lang:StringBuilder|];
#L136cde.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L136ce4.   v1:= v6.[|java:util:concurrent:ForkJoinPool.workerNamePrefix|]   @type object;
#L136ce8.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L136cee.   v0:= temp  @type object;
#L136cf0.   call temp:=  [|java:lang:StringBuilder.append|](v0, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L136cf6.   v0:= temp  @type object;
#L136cf8.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L136cfe.   v0:= temp  @type object;
#L136d00.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinPool.pollSubmission|] ([|java:util:concurrent:ForkJoinPool|] v12 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.pollSubmission:()Ljava/util/concurrent/ForkJoinTask;|] @Access PROTECTED {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|][] v1 @varname [|q|] @scope ((L0009,L002f));
        [|long|] v2 @varname [|u|] @scope ((L001b,L002f));
        [|java:util:concurrent:ForkJoinTask|] v4 @varname [|t|] @scope ((L001d,L002f));
        [|int|] v7 @varname [|i|] @scope ((L0010,L002f));
        [|int|] v6 @varname [|b|] @scope ((L0003,L0032));

        v0;
        v3;
        v5;
        v8;
        v9;
        v10;
        v11;
      
#L136d14.   v5:= 0  @length 4;
#L136d16.   v6:= v12.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L136d1a.   v0:= v12.[|java:util:concurrent:ForkJoinPool.queueTop|] ;
#L136d1e.   if v6 == v0 then goto L136d74;
#L136d22.   v1:= v12.[|java:util:concurrent:ForkJoinPool.submissionQueue|]   @type object;
#L136d26.   if v1 == 0 then goto L136d74;
#L136d2a.   v0:= v1.length;
#L136d2c.   v0:= v0 + -1;
#L136d30.   v7:= v0 ^& v6  @type int;
#L136d34.   if v7 < 0 then goto L136d74;
#L136d38.   v0:= @@[|java:util:concurrent:ForkJoinPool.ASHIFT|] ;
#L136d3c.   v0:= v7 ^< v0  @type int;
#L136d40.   v8:= (long)v0  @type i2l;
#L136d42.   v10:= @@[|java:util:concurrent:ForkJoinPool.ABASE|]   @wide;
#L136d46.   v2:= v8 + v10  @type long;
#L136d4a.   v4:= v1[v7]  @type object;
#L136d4e.   if v4 == 0 then goto L136d16;
#L136d52.   v0:= v12.[|java:util:concurrent:ForkJoinPool.queueBase|] ;
#L136d56.   if v0 != v6 then goto L136d16;
#L136d5a.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136d5e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136d64.   v0:= temp;
#L136d66.   if v0 == 0 then goto L136d16;
#L136d6a.   v0:= v6 + 1;
#L136d6e.   v12.[|java:util:concurrent:ForkJoinPool.queueBase|]  := v0;
#L136d72.   return v4  @type object;
#L136d74.   v4:= v5  @type object;
#L136d76.   goto L136d72;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinPool.registerWorker|] ([|java:util:concurrent:ForkJoinPool|] v14 @type (this), [|java:util:concurrent:ForkJoinWorkerThread|] v15 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.registerWorker:(Ljava/util/concurrent/ForkJoinWorkerThread;)I|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:ForkJoinWorkerThread|][] v13 @varname [|ws|] @scope ((L001a,L0037), (L003b,L0058), (L005e,L0078));
        [|int|] v10 @varname [|m|] @scope ((L0046,L0051), (L0054,L0058));
        [|int|] v11 @varname [|n|] @scope ((L001d,L0051), (L0054,L0058));
        [|int|] v8 @varname [|k|] @scope ((L0018,L005c));
        [|int|] v4 @varname [|g|] @scope ((L0002,L0078));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v6 @varname [|arr$|] @scope ((L0061,L0078));
        [|int|] v7 @varname [|i$|] @scope ((L0063,L0078));
        [|int|] v9 @varname [|len$|] @scope ((L0062,L0078));
        [|java:util:concurrent:ForkJoinWorkerThread|] v12 @varname [|u|] @scope ((L0067,L0078));


        v0;
        v1;
        v2;
        v3;
        v5;
      
#L136d88.   v4:= v14.[|java:util:concurrent:ForkJoinPool.scanGuard|] ;
#L136d8c.   v0:= 65536  @length high16;
#L136d90.   v0:= v0 ^& v4  @type int;
#L136d92.   if v0 != 0 then goto L136e40;
#L136d96.   v0:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136d9a.   v2:= @@[|java:util:concurrent:ForkJoinPool.scanGuardOffset|]   @wide;
#L136d9e.   v1:= 65536  @length high16;
#L136da2.   v5:= v4 ^| v1  @type int;
#L136da6.   v1:= v14  @type object;
#L136da8.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136dae.   v0:= temp;
#L136db0.   if v0 == 0 then goto L136e40;
#L136db4.   v8:= v14.[|java:util:concurrent:ForkJoinPool.nextWorkerIndex|] ;
#L136db8.   v13:= v14.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L136dbc.   if v13 == 0 then goto L136e2a;
#L136dc0.   v11:= v13.length;
#L136dc2.   if v8 < 0 then goto L136dd2;
#L136dc6.   if v8 >= v11 then goto L136dd2;
#L136dca.   v0:= v13[v8]  @type object;
#L136dce.   if v0 == 0 then goto L136dfe;
#L136dd2.   v8:= 0  @length 4;
#L136dd4.   if v8 >= v11 then goto L136de6;
#L136dd8.   v0:= v13[v8]  @type object;
#L136ddc.   if v0 == 0 then goto L136de6;
#L136de0.   v8:= v8 + 1;
#L136de4.   goto L136dd4;
#L136de6.   if v8 != v11 then goto L136dfe;
#L136dea.   v0:= v11 ^< 1;
#L136dee.   call temp:=  [|java:util:Arrays.copyOf|](v13, v0) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L136df4.   v13:= temp  @type object;
#L136df6.   v13:= ([|java:util:concurrent:ForkJoinWorkerThread|][])v13;
#L136dfa.   v14.[|java:util:concurrent:ForkJoinPool.workers|]  := v13 @type object;
#L136dfe.   v13[v8]:= v15  @type object;
#L136e02.   v0:= v8 + 1;
#L136e06.   v14.[|java:util:concurrent:ForkJoinPool.nextWorkerIndex|]  := v0;
#L136e0a.    v0:= 0.000000;
#L136e10.   v10:= v4 ^& v0  @type int;
#L136e14.   if v8 <= v10 then goto L136e30;
#L136e18.   v0:= v10 ^< 1;
#L136e1c.   v0:= v0 + 1;
#L136e20.    v1:= 0.000000;
#L136e26.   v4:= v0 ^& v1  @type int;
#L136e2a.   v14.[|java:util:concurrent:ForkJoinPool.scanGuard|]  := v4;
#L136e2e.   return v8;
#L136e30.   v0:= 131072  @length high16;
#L136e34.   v4:= v4 + v0  @type int;
#L136e36.   goto L136e2a;
#L136e38.   v0:= Exception  @type object;
#L136e3a.   v14.[|java:util:concurrent:ForkJoinPool.scanGuard|]  := v4;
#L136e3e.   throw v0;
#L136e40.   v13:= v14.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L136e44.   if v13 == 0 then goto L136d88;
#L136e48.   v6:= v13  @type object;
#L136e4a.   v9:= v6.length;
#L136e4c.   v7:= 0  @length 4;
#L136e4e.   if v7 >= v9 then goto L136d88;
#L136e52.   v12:= v6[v7]  @type object;
#L136e56.   if v12 == 0 then goto L136e72;
#L136e5a.   v0:= v12.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L136e5e.   v1:= v12.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L136e62.   if v0 == v1 then goto L136e72;
#L136e66.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryReleaseWaiter|](v14) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryReleaseWaiter:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L136e6c.   v0:= temp;
#L136e6e.   if v0 != 0 then goto L136d88;
#L136e72.   v7:= v7 + 1;
#L136e76.   goto L136e4e;
  catch  [|any|] @[L136db8..L136e0a] goto L136e38;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.shutdown|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.shutdown:()V|] @Access PUBLIC {
      local temp ;

        v0;
      
#L136e94.   call temp:=  [|java:util:concurrent:ForkJoinPool.checkPermission|]() @signature [|Ljava/util/concurrent/ForkJoinPool;.checkPermission:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type static;
#L136e9a.   v0:= 1  @length 4;
#L136e9c.   v1.[|java:util:concurrent:ForkJoinPool.shutdown|]  := v0 @boolean;
#L136ea0.   v0:= 0  @length 4;
#L136ea2.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryTerminate|](v1, v0) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryTerminate:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L136ea8.   return @void ;

   }
    procedure [|java:util:List|] [|java:util:concurrent:ForkJoinPool.shutdownNow|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.shutdownNow:()Ljava/util/List;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L136ebc.   v0:= 1  @length 4;
#L136ebe.   call temp:=  [|java:util:concurrent:ForkJoinPool.checkPermission|]() @signature [|Ljava/util/concurrent/ForkJoinPool;.checkPermission:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type static;
#L136ec4.   v1.[|java:util:concurrent:ForkJoinPool.shutdown|]  := v0 @boolean;
#L136ec8.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryTerminate|](v1, v0) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryTerminate:(Z)Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L136ece.   call temp:=  [|java:util:Collections.emptyList|]() @signature [|Ljava/util/Collections;.emptyList:()Ljava/util/List;|] @classDescriptor [|java:util:Collections|] @type static;
#L136ed4.   v0:= temp  @type object;
#L136ed6.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.signalWork|] ([|java:util:concurrent:ForkJoinPool|] v22 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.signalWork:()V|] @Access FINAL {
      local temp ;
        [|int|] v18 @varname [|i|] @scope ((L002c,L0037), (L0038,L0079));
        [|java:util:concurrent:ForkJoinWorkerThread|] v20 @varname [|w|] @scope ((L0035,L0037), (L0038,L0079));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v21 @varname [|ws|] @scope ((L0023,L0037), (L0038,L0079));
        [|long|] v7 @varname [|nc|] @scope ((L004b,L0079));
        [|long|] v5 @varname [|c|] @scope ((L0004,L009d));
        [|int|] v17 @varname [|e|] @scope ((L0007,L009d));
        [|int|] v19 @varname [|u|] @scope ((L000e,L009d));

        v0;
        v1;
        v2;
        v3;
        v4;
        v6;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
      
#L136ee8.   v0:= v22  @type object;
#L136eec.   v5:= v0.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L136ef0.   v0:= (int)v5  @type l2i;
#L136ef2.   v17:= v0;
#L136ef6.   v1:= 32  @length 16;
#L136efa.   v1:= v5 ^>> v1  @type long;
#L136efe.   v0:= (int)v1  @type l2i;
#L136f00.   v19:= v0;
#L136f04.   v1:= v17 ^| v19  @type int;
#L136f08.    v2:= -0.000000;
#L136f0e.   v1:= v1 ^& v2  @type int;
#L136f10.    v2:= -0.000000;
#L136f16.   if v1 != v2 then goto L136f56;
#L136f1a.   if v17 < 0 then goto L136f56;
#L136f1e.   if v17 <= 0 then goto L136fda;
#L136f22.   v0:= v22  @type object;
#L136f26.   v0:= v0.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L136f2a.   v21:= v0  @type object;
#L136f2e.   if v21 == 0 then goto L136f56;
#L136f32.   v1:= v17 ^~ -1;
#L136f36.    v2:= 0.000000;
#L136f3c.   v18:= v1 ^& v2  @type int;
#L136f40.   v0:= v21  @type object;
#L136f44.   v1:= v0.length;
#L136f46.   v0:= v18;
#L136f4a.   if v0 >= v1 then goto L136f56;
#L136f4e.   v20:= v21[v18]  @type object;
#L136f52.   if v20 != 0 then goto L136f58;
#L136f56.   return @void ;
#L136f58.   v0:= v20  @type object;
#L136f5c.   v1:= v0.[|java:util:concurrent:ForkJoinWorkerThread.nextWait|] ;
#L136f60.    v2:= nan;
#L136f66.   v1:= v1 ^& v2  @type int;
#L136f68.   v1:= (long)v1  @type i2l;
#L136f6a.   v3:= 65536  @length high16;
#L136f6e.   v3:= v3 + v19  @type int;
#L136f72.   v3:= (long)v3  @type i2l;
#L136f74.   v9:= 32  @length 16;
#L136f78.   v3:= v3 ^< v9  @type long;
#L136f7a.   v7:= v1 ^| v3  @type long;
#L136f7e.   v0:= v20  @type object;
#L136f82.   v1:= v0.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|] ;
#L136f86.   v0:= v17;
#L136f8a.   if v1 != v0 then goto L136ee8;
#L136f8e.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136f92.   v3:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L136f96.   v2:= v22  @type object;
#L136f9a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136fa0.   v1:= temp;
#L136fa2.   if v1 == 0 then goto L136ee8;
#L136fa6.   v1:= 65536  @length high16;
#L136faa.   v1:= v1 + v17  @type int;
#L136fae.    v2:= nan;
#L136fb4.   v1:= v1 ^& v2  @type int;
#L136fb6.   v0:= v20  @type object;
#L136fba.   v0.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|]  := v1;
#L136fbe.   v0:= v20  @type object;
#L136fc2.   v1:= v0.[|java:util:concurrent:ForkJoinWorkerThread.parked|]   @boolean;
#L136fc6.   if v1 == 0 then goto L136f56;
#L136fca.   v1:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136fce.   v0:= v20  @type object;
#L136fd2.   call temp:=  [|sun:misc:Unsafe.unpark|](v1, v0) @signature [|Lsun/misc/Unsafe;.unpark:(Ljava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L136fd8.   goto L136f56;
#L136fda.   v9:= @@[|java:util:concurrent:ForkJoinPool.UNSAFE|]   @type object;
#L136fde.   v11:= @@[|java:util:concurrent:ForkJoinPool.ctlOffset|]   @wide;
#L136fe2.   v1:= v19 + 1;
#L136fe6.    v2:= 0.000000;
#L136fec.   v1:= v1 ^& v2  @type int;
#L136fee.   v2:= 65536  @length high16;
#L136ff2.   v2:= v2 + v19  @type int;
#L136ff6.   v3:= -65536  @length high16;
#L136ffa.   v2:= v2 ^& v3  @type int;
#L136ffc.   v1:= v1 ^| v2  @type int;
#L136ffe.   v1:= (long)v1  @type i2l;
#L137000.   v3:= 32  @length 16;
#L137004.   v15:= v1 ^< v3  @type long;
#L137008.   v10:= v22  @type object;
#L13700c.   v13:= v5  @type wide;
#L13700e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v9, v10, v11, v12, v13, v14, v15, v16) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L137014.   v1:= temp;
#L137016.   if v1 == 0 then goto L136ee8;
#L13701a.   call temp:=  [|java:util:concurrent:ForkJoinPool.addWorker|](v22) @signature [|Ljava/util/concurrent/ForkJoinPool;.addWorker:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L137020.   goto L136f56;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinPool.submit|] ([|java:util:concurrent:ForkJoinPool|] v2 @type (this), [|java:lang:Runnable|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/ForkJoinTask;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v0 @varname [|job|] @scope ((L000f,L0013), (L0018,L0019));


        v1;
      
#L137034.   if v3 != 0 then goto L137044;
#L137038.   v1:= new [|java:lang:NullPointerException|];
#L13703c.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L137042.   throw v1;
#L137044.   v1:= instanceof @varname v3 @type [|java:util:concurrent:ForkJoinTask|];
#L137048.   if v1 == 0 then goto L13705a;
#L13704c.   v0:= v3  @type object;
#L13704e.   v0:= ([|java:util:concurrent:ForkJoinTask|])v0;
#L137052.   call temp:=  [|java:util:concurrent:ForkJoinPool.forkOrSubmit|](v2, v0) @signature [|Ljava/util/concurrent/ForkJoinPool;.forkOrSubmit:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L137058.   return v0  @type object;
#L13705a.   v1:= 0  @length 4;
#L13705c.   call temp:=  [|java:util:concurrent:ForkJoinTask.adapt|](v3, v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L137062.   v0:= temp  @type object;
#L137064.   goto L137052;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinPool.submit|] ([|java:util:concurrent:ForkJoinPool|] v2 @type (this), [|java:lang:Runnable|] v3 @type (object), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v0 @varname [|job|] @scope ((L000c,L0010));



        v1;
      
#L137078.   if v3 != 0 then goto L137088;
#L13707c.   v1:= new [|java:lang:NullPointerException|];
#L137080.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L137086.   throw v1;
#L137088.   call temp:=  [|java:util:concurrent:ForkJoinTask.adapt|](v3, v4) @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L13708e.   v0:= temp  @type object;
#L137090.   call temp:=  [|java:util:concurrent:ForkJoinPool.forkOrSubmit|](v2, v0) @signature [|Ljava/util/concurrent/ForkJoinPool;.forkOrSubmit:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L137096.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinPool.submit|] ([|java:util:concurrent:ForkJoinPool|] v2 @type (this), [|java:util:concurrent:Callable|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/ForkJoinTask;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v0 @varname [|job|] @scope ((L000c,L0010));


        v1;
      
#L1370a8.   if v3 != 0 then goto L1370b8;
#L1370ac.   v1:= new [|java:lang:NullPointerException|];
#L1370b0.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1370b6.   throw v1;
#L1370b8.   call temp:=  [|java:util:concurrent:ForkJoinTask.adapt|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.adapt:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L1370be.   v0:= temp  @type object;
#L1370c0.   call temp:=  [|java:util:concurrent:ForkJoinPool.forkOrSubmit|](v2, v0) @signature [|Ljava/util/concurrent/ForkJoinPool;.forkOrSubmit:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L1370c6.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinPool.submit|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this), [|java:util:concurrent:ForkJoinTask|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/util/concurrent/ForkJoinTask;)Ljava/util/concurrent/ForkJoinTask;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1370d8.   if v2 != 0 then goto L1370e8;
#L1370dc.   v0:= new [|java:lang:NullPointerException|];
#L1370e0.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1370e6.   throw v0;
#L1370e8.   call temp:=  [|java:util:concurrent:ForkJoinPool.forkOrSubmit|](v1, v2) @signature [|Ljava/util/concurrent/ForkJoinPool;.forkOrSubmit:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L1370ee.   return v2  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ForkJoinPool.submit|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L137100.   call temp:=  [|java:util:concurrent:ForkJoinPool.submit|](v1, v2) @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137106.   v0:= temp  @type object;
#L137108.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ForkJoinPool.submit|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



        v0;
      
#L13711c.   call temp:=  [|java:util:concurrent:ForkJoinPool.submit|](v1, v2, v3) @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137122.   v0:= temp  @type object;
#L137124.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ForkJoinPool.submit|] ([|java:util:concurrent:ForkJoinPool|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L137138.   call temp:=  [|java:util:concurrent:ForkJoinPool.submit|](v1, v2) @signature [|Ljava/util/concurrent/ForkJoinPool;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L13713e.   v0:= temp  @type object;
#L137140.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.timedAwaitJoin|] ([|java:util:concurrent:ForkJoinPool|] v12 @type (this), [|java:util:concurrent:ForkJoinTask|] v13 @type (object), [|long|] v14) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.timedAwaitJoin:(Ljava/util/concurrent/ForkJoinTask;J)V|] @Access FINAL {
      local temp ;
        [|long|] v2 @varname [|millis|] @scope ((L002d,L0031), (L0035,L0050));
        [|long|] v0 @varname [|last|] @scope ((L0023,L0050));
        [|long|] v4 @varname [|now|] @scope ((L004b,L0050));



        v1;
        v3;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L137154.   v10:= 0.000000L  @length wide;
#L13715e.   v8:= 0  @length wide16;
#L137162.   v6:= v13.[|java:util:concurrent:ForkJoinTask.status|] ;
#L137166.   if v6 < 0 then goto L137184;
#L13716a.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L137170.   v6:= v12.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L137174.   v6:= v6 ^& v10  @type long;
#L137176.   v6:= cmp(v6,v8);
#L13717a.   if v6 == 0 then goto L137186;
#L13717e.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancelIgnoringExceptions|](v13) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancelIgnoringExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L137184.   return @void ;
#L137186.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryPreBlock|](v12) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryPreBlock:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L13718c.   v6:= temp;
#L13718e.   if v6 == 0 then goto L137162;
#L137192.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L137198.   v0:= temp  @type wide;
#L13719a.   v6:= v13.[|java:util:concurrent:ForkJoinTask.status|] ;
#L13719e.   if v6 < 0 then goto L1371b6;
#L1371a2.   v6:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L1371a6.   call temp:=  [|java:util:concurrent:TimeUnit.toMillis|](v6, v14, v15) @signature [|Ljava/util/concurrent/TimeUnit;.toMillis:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L1371ac.   v2:= temp  @type wide;
#L1371ae.   v6:= cmp(v2,v8);
#L1371b2.   if v6 > 0 then goto L1371be;
#L1371b6.   call temp:=  [|java:util:concurrent:ForkJoinPool.postBlock|](v12) @signature [|Ljava/util/concurrent/ForkJoinPool;.postBlock:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L1371bc.   goto L137184;
#L1371be.   call temp:=  [|java:util:concurrent:ForkJoinTask.tryAwaitDone|](v13, v2, v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.tryAwaitDone:(J)V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L1371c4.   v6:= v13.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1371c8.   if v6 < 0 then goto L1371b6;
#L1371cc.   v6:= v12.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L1371d0.   v6:= v6 ^& v10  @type long;
#L1371d2.   v6:= cmp(v6,v8);
#L1371d6.   if v6 == 0 then goto L1371e2;
#L1371da.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancelIgnoringExceptions|](v13) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancelIgnoringExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L1371e0.   goto L1371b6;
#L1371e2.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L1371e8.   v4:= temp  @type wide;
#L1371ea.   v6:= v4 - v0  @type long;
#L1371ee.   v14:= v14 - v6  @type long;
#L1371f0.   v0:= v4  @type wide;
#L1371f2.   goto L13719a;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:ForkJoinPool.toString|] ([|java:util:concurrent:ForkJoinPool|] v18 @type (this)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|java:lang:String|] v4 @varname [|level|] @scope ((L003d,L00a5), (L00b0,L00b1));
        [|int|] v1 @varname [|ac|] @scope ((L002d,L00b4));
        [|long|] v2 @varname [|c|] @scope ((L0015,L00b4));
        [|int|] v5 @varname [|pc|] @scope ((L0011,L00b4));
        [|long|] v6 @varname [|qs|] @scope ((L000d,L00b4));
        [|long|] v8 @varname [|qt|] @scope ((L0008,L00b4));
        [|int|] v10 @varname [|rc|] @scope ((L0024,L00b4));
        [|long|] v11 @varname [|st|] @scope ((L0004,L00b4));
        [|int|] v13 @varname [|tc|] @scope ((L001d,L00b4));

        v0;
        v3;
        v7;
        v9;
        v12;
        v14;
        v15;
        v16;
        v17;
      
#L137204.   call temp:=  [|java:util:concurrent:ForkJoinPool.getStealCount|](v18) @signature [|Ljava/util/concurrent/ForkJoinPool;.getStealCount:()J|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L13720a.   v11:= temp  @type wide;
#L13720c.   call temp:=  [|java:util:concurrent:ForkJoinPool.getQueuedTaskCount|](v18) @signature [|Ljava/util/concurrent/ForkJoinPool;.getQueuedTaskCount:()J|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137212.   v8:= temp  @type wide;
#L137214.   call temp:=  [|java:util:concurrent:ForkJoinPool.getQueuedSubmissionCount|](v18) @signature [|Ljava/util/concurrent/ForkJoinPool;.getQueuedSubmissionCount:()I|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L13721a.   v14:= temp;
#L13721c.   v6:= (long)v14  @type i2l;
#L13721e.   v0:= v18  @type object;
#L137222.   v5:= v0.[|java:util:concurrent:ForkJoinPool.parallelism|] ;
#L137226.   v0:= v18  @type object;
#L13722a.   v2:= v0.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L13722e.   v14:= 32  @length 16;
#L137232.   v14:= v2 ^>> v14  @type long;
#L137236.   v14:= (int)v14  @type l2i;
#L137238.   v14:= (short)v14  @type i2s;
#L13723a.   v13:= v5 + v14  @type int;
#L13723e.   v14:= 48  @length 16;
#L137242.   v14:= v2 ^> v14  @type long;
#L137246.   v14:= (int)v14  @type l2i;
#L137248.   v10:= v5 + v14  @type int;
#L13724c.   if v10 >= 0 then goto L137252;
#L137250.   v10:= 0  @length 4;
#L137252.   v0:= v18  @type object;
#L137256.   v14:= v0.[|java:util:concurrent:ForkJoinPool.blockedCount|] ;
#L13725a.   v1:= v10 + v14  @type int;
#L13725e.   v14:= 0.000000L  @length wide;
#L137268.   v14:= v14 ^& v2  @type long;
#L13726a.   v16:= 0  @length wide16;
#L13726e.   v14:= cmp(v14,v16);
#L137272.   if v14 == 0 then goto L137354;
#L137276.   if v13 != 0 then goto L13734e;
#L13727a.   v4:= "Terminated" @type (object, string);
#L13727e.   v14:= new [|java:lang:StringBuilder|];
#L137282.   call temp:=  [|java:lang:StringBuilder.<init>|](v14) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L137288.   call temp:=  [|java:lang:Object.toString|](v18) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L13728e.   v15:= temp  @type object;
#L137290.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L137296.   v14:= temp  @type object;
#L137298.   v15:= "[" @type (object, string);
#L13729c.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372a2.   v14:= temp  @type object;
#L1372a4.   call temp:=  [|java:lang:StringBuilder.append|](v14, v4) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372aa.   v14:= temp  @type object;
#L1372ac.   v15:= ", parallelism = " @type (object, string);
#L1372b0.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372b6.   v14:= temp  @type object;
#L1372b8.   call temp:=  [|java:lang:StringBuilder.append|](v14, v5) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372be.   v14:= temp  @type object;
#L1372c0.   v15:= ", size = " @type (object, string);
#L1372c4.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372ca.   v14:= temp  @type object;
#L1372cc.   call temp:=  [|java:lang:StringBuilder.append|](v14, v13) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372d2.   v14:= temp  @type object;
#L1372d4.   v15:= ", active = " @type (object, string);
#L1372d8.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372de.   v14:= temp  @type object;
#L1372e0.   call temp:=  [|java:lang:StringBuilder.append|](v14, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372e6.   v14:= temp  @type object;
#L1372e8.   v15:= ", running = " @type (object, string);
#L1372ec.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372f2.   v14:= temp  @type object;
#L1372f4.   call temp:=  [|java:lang:StringBuilder.append|](v14, v10) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1372fa.   v14:= temp  @type object;
#L1372fc.   v15:= ", steals = " @type (object, string);
#L137300.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L137306.   v14:= temp  @type object;
#L137308.   call temp:=  [|java:lang:StringBuilder.append|](v14, v11, v12) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13730e.   v14:= temp  @type object;
#L137310.   v15:= ", tasks = " @type (object, string);
#L137314.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13731a.   v14:= temp  @type object;
#L13731c.   call temp:=  [|java:lang:StringBuilder.append|](v14, v8, v9) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L137322.   v14:= temp  @type object;
#L137324.   v15:= ", submissions = " @type (object, string);
#L137328.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13732e.   v14:= temp  @type object;
#L137330.   call temp:=  [|java:lang:StringBuilder.append|](v14, v6, v7) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L137336.   v14:= temp  @type object;
#L137338.   v15:= "]" @type (object, string);
#L13733c.   call temp:=  [|java:lang:StringBuilder.append|](v14, v15) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L137342.   v14:= temp  @type object;
#L137344.   call temp:=  [|java:lang:StringBuilder.toString|](v14) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13734a.   v14:= temp  @type object;
#L13734c.   return v14  @type object;
#L13734e.   v4:= "Terminating" @type (object, string);
#L137352.   goto L13727e;
#L137354.   v0:= v18  @type object;
#L137358.   v14:= v0.[|java:util:concurrent:ForkJoinPool.shutdown|]   @boolean;
#L13735c.   if v14 == 0 then goto L137366;
#L137360.   v4:= "Shutting down" @type (object, string);
#L137364.   goto L13727e;
#L137366.   v4:= "Running" @type (object, string);
#L13736a.   goto L137364;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.tryAwaitJoin|] ([|java:util:concurrent:ForkJoinPool|] v6 @type (this), [|java:util:concurrent:ForkJoinTask|] v7 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.tryAwaitJoin:(Ljava/util/concurrent/ForkJoinTask;)V|] @Access FINAL {
      local temp ;


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13737c.   v4:= 0  @length wide16;
#L137380.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L137386.   v0:= v7.[|java:util:concurrent:ForkJoinTask.status|] ;
#L13738a.   if v0 < 0 then goto L1373a6;
#L13738e.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryPreBlock|](v6) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryPreBlock:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L137394.   v0:= temp;
#L137396.   if v0 == 0 then goto L1373a8;
#L13739a.   call temp:=  [|java:util:concurrent:ForkJoinTask.tryAwaitDone|](v7, v4, v5) @signature [|Ljava/util/concurrent/ForkJoinTask;.tryAwaitDone:(J)V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L1373a0.   call temp:=  [|java:util:concurrent:ForkJoinPool.postBlock|](v6) @signature [|Ljava/util/concurrent/ForkJoinPool;.postBlock:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L1373a6.   return @void ;
#L1373a8.   v0:= v6.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L1373ac.   v2:= 0.000000L  @length wide;
#L1373b6.   v0:= v0 ^& v2  @type long;
#L1373b8.   v0:= cmp(v0,v4);
#L1373bc.   if v0 == 0 then goto L1373a6;
#L1373c0.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancelIgnoringExceptions|](v7) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancelIgnoringExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L1373c6.   goto L1373a6;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinPool.work|] ([|java:util:concurrent:ForkJoinPool|] v6 @type (this), [|java:util:concurrent:ForkJoinWorkerThread|] v7 @type (object)) @owner [|java:util:concurrent:ForkJoinPool|] @signature [|Ljava/util/concurrent/ForkJoinPool;.work:(Ljava/util/concurrent/ForkJoinWorkerThread;)V|] @Access FINAL {
      local temp ;
        [|int|] v0 @varname [|a|] @scope ((L0011,L0018));
        [|long|] v1 @varname [|c|] @scope ((L0007,L0020));
        [|boolean|] v3 @varname [|swept|] @scope ((L0001,L0021));


        v2;
        v4;
        v5;
      
#L1373d8.   v3:= 0  @length 4;
#L1373da.   v4:= v7.[|java:util:concurrent:ForkJoinWorkerThread.terminate|]   @boolean;
#L1373de.   if v4 != 0 then goto L137418;
#L1373e2.   v1:= v6.[|java:util:concurrent:ForkJoinPool.ctl|]   @wide;
#L1373e6.   v4:= (int)v1  @type l2i;
#L1373e8.   if v4 < 0 then goto L137418;
#L1373ec.   if v3 != 0 then goto L137408;
#L1373f0.   v4:= 48  @length 16;
#L1373f4.   v4:= v1 ^> v4  @type long;
#L1373f8.   v0:= (int)v4  @type l2i;
#L1373fa.   if v0 > 0 then goto L137408;
#L1373fe.   call temp:=  [|java:util:concurrent:ForkJoinPool.scan|](v6, v7, v0) @signature [|Ljava/util/concurrent/ForkJoinPool;.scan:(Ljava/util/concurrent/ForkJoinWorkerThread;I)Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L137404.   v3:= temp;
#L137406.   goto L1373da;
#L137408.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryAwaitWork|](v6, v7, v1, v2) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryAwaitWork:(Ljava/util/concurrent/ForkJoinWorkerThread;J)Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type direct;
#L13740e.   v4:= temp;
#L137410.   if v4 == 0 then goto L1373da;
#L137414.   v3:= 0  @length 4;
#L137416.   goto L1373da;
#L137418.   return @void ;

   }
record [|java:util:concurrent:ForkJoinTask$AdaptedCallable|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ForkJoinTask|], [|java:util:concurrent:RunnableFuture|] {
      [|java:util:concurrent:Callable|] [|java:util:concurrent:ForkJoinTask$AdaptedCallable.callable|]    @AccessFlag FINAL;
      [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask$AdaptedCallable.result|]    @AccessFlag ;
   }
      global [|long|] @@[|java:util:concurrent:ForkJoinTask$AdaptedCallable.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ForkJoinTask$AdaptedCallable.<init>|] ([|java:util:concurrent:ForkJoinTask$AdaptedCallable|] v1 @type (this), [|java:util:concurrent:Callable|] v2 @type (object)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedCallable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedCallable;.<init>:(Ljava/util/concurrent/Callable;)V|] @Access CONSTRUCTOR {
      local temp ;



        v0;
      
#L13742c.   call temp:=  [|java:util:concurrent:ForkJoinTask.<init>|](v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.<init>:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L137432.   if v2 != 0 then goto L137442;
#L137436.   v0:= new [|java:lang:NullPointerException|];
#L13743a.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L137440.   throw v0;
#L137442.   v1.[|java:util:concurrent:ForkJoinTask$AdaptedCallable.callable|]  := v2 @type object;
#L137446.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask$AdaptedCallable.exec|] ([|java:util:concurrent:ForkJoinTask$AdaptedCallable|] v4 @type (this)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedCallable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedCallable;.exec:()Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:Error|] v0 @varname [|err|] @scope ((L000b,L000c));
        [|java:lang:RuntimeException|] v2 @varname [|rex|] @scope ((L000d,L000e));
        [|java:lang:Exception|] v1 @varname [|ex|] @scope ((L000f,L0015));

        v3;
      
#L137458.   v3:= v4.[|java:util:concurrent:ForkJoinTask$AdaptedCallable.callable|]   @type object;
#L13745c.   call temp:=  [|java:util:concurrent:Callable.call|](v3) @signature [|Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:Callable|] @type interface;
#L137462.   v3:= temp  @type object;
#L137464.   v4.[|java:util:concurrent:ForkJoinTask$AdaptedCallable.result|]  := v3 @type object;
#L137468.   v3:= 1  @length 4;
#L13746a.   return v3;
#L13746c.   v0:= Exception  @type object;
#L13746e.   throw v0;
#L137470.   v2:= Exception  @type object;
#L137472.   throw v2;
#L137474.   v1:= Exception  @type object;
#L137476.   v3:= new [|java:lang:RuntimeException|];
#L13747a.   call temp:=  [|java:lang:RuntimeException.<init>|](v3, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L137480.   throw v3;
  catch  [|java:lang:Error|] @[L137458..L137468] goto L13746c;
  catch  [|java:lang:RuntimeException|] @[L137458..L137468] goto L137470;
  catch  [|java:lang:Exception|] @[L137458..L137468] goto L137474;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask$AdaptedCallable.getRawResult|] ([|java:util:concurrent:ForkJoinTask$AdaptedCallable|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedCallable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedCallable;.getRawResult:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1374a8.   v0:= v1.[|java:util:concurrent:ForkJoinTask$AdaptedCallable.result|]   @type object;
#L1374ac.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask$AdaptedCallable.run|] ([|java:util:concurrent:ForkJoinTask$AdaptedCallable|] v0 @type (this)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedCallable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedCallable;.run:()V|] @Access PUBLIC {
      local temp ;


      
#L1374c0.   call temp:=  [|java:util:concurrent:ForkJoinTask$AdaptedCallable.invoke|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedCallable;.invoke:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask$AdaptedCallable|] @type virtual;
#L1374c6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask$AdaptedCallable.setRawResult|] ([|java:util:concurrent:ForkJoinTask$AdaptedCallable|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedCallable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedCallable;.setRawResult:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



      
#L1374d8.   v0.[|java:util:concurrent:ForkJoinTask$AdaptedCallable.result|]  := v1 @type object;
#L1374dc.   return @void ;

   }
record [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:ForkJoinTask|], [|java:util:concurrent:RunnableFuture|] {
      [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.result|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.resultOnCompletion|]    @AccessFlag FINAL;
      [|java:lang:Runnable|] [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.runnable|]    @AccessFlag FINAL;
   }
      global [|long|] @@[|java:util:concurrent:ForkJoinTask$AdaptedRunnable.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.<init>|] ([|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedRunnable;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;




        v0;
      
#L1374f0.   call temp:=  [|java:util:concurrent:ForkJoinTask.<init>|](v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.<init>:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L1374f6.   if v2 != 0 then goto L137506;
#L1374fa.   v0:= new [|java:lang:NullPointerException|];
#L1374fe.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L137504.   throw v0;
#L137506.   v1.[|java:util:concurrent:ForkJoinTask$AdaptedRunnable.runnable|]  := v2 @type object;
#L13750a.   v1.[|java:util:concurrent:ForkJoinTask$AdaptedRunnable.resultOnCompletion|]  := v3 @type object;
#L13750e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.exec|] ([|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedRunnable;.exec:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L137520.   v0:= v1.[|java:util:concurrent:ForkJoinTask$AdaptedRunnable.runnable|]   @type object;
#L137524.   call temp:=  [|java:lang:Runnable.run|](v0) @signature [|Ljava/lang/Runnable;.run:()V|] @classDescriptor [|java:lang:Runnable|] @type interface;
#L13752a.   v0:= v1.[|java:util:concurrent:ForkJoinTask$AdaptedRunnable.resultOnCompletion|]   @type object;
#L13752e.   v1.[|java:util:concurrent:ForkJoinTask$AdaptedRunnable.result|]  := v0 @type object;
#L137532.   v0:= 1  @length 4;
#L137534.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.getRawResult|] ([|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedRunnable;.getRawResult:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L137548.   v0:= v1.[|java:util:concurrent:ForkJoinTask$AdaptedRunnable.result|]   @type object;
#L13754c.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.run|] ([|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] v0 @type (this)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedRunnable;.run:()V|] @Access PUBLIC {
      local temp ;


      
#L137560.   call temp:=  [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.invoke|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedRunnable;.invoke:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] @type virtual;
#L137566.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask$AdaptedRunnable.setRawResult|] ([|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ForkJoinTask$AdaptedRunnable|] @signature [|Ljava/util/concurrent/ForkJoinTask$AdaptedRunnable;.setRawResult:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



      
#L137578.   v0.[|java:util:concurrent:ForkJoinTask$AdaptedRunnable.result|]  := v1 @type object;
#L13757c.   return @void ;

   }
record [|java:util:concurrent:ForkJoinTask$ExceptionNode|]  @type class @AccessFlag FINAL  extends [|java:lang:ref:WeakReference|] {
      [|java:lang:Throwable|] [|java:util:concurrent:ForkJoinTask$ExceptionNode.ex|]    @AccessFlag FINAL;
      [|java:util:concurrent:ForkJoinTask$ExceptionNode|] [|java:util:concurrent:ForkJoinTask$ExceptionNode.next|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:ForkJoinTask$ExceptionNode.thrower|]    @AccessFlag FINAL;
   }
    procedure [|void|] [|java:util:concurrent:ForkJoinTask$ExceptionNode.<init>|] ([|java:util:concurrent:ForkJoinTask$ExceptionNode|] v2 @type (this), [|java:util:concurrent:ForkJoinTask|] v3 @type (object), [|java:lang:Throwable|] v4 @type (object), [|java:util:concurrent:ForkJoinTask$ExceptionNode|] v5 @type (object)) @owner [|java:util:concurrent:ForkJoinTask$ExceptionNode|] @signature [|Ljava/util/concurrent/ForkJoinTask$ExceptionNode;.<init>:(Ljava/util/concurrent/ForkJoinTask;Ljava/lang/Throwable;Ljava/util/concurrent/ForkJoinTask$ExceptionNode;)V|] @Access CONSTRUCTOR {
      local temp ;




        v0;
        v1;
      
#L137590.   call temp:=  [|java:util:concurrent:ForkJoinTask.access$000|]() @signature [|Ljava/util/concurrent/ForkJoinTask;.access$000:()Ljava/lang/ref/ReferenceQueue;|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type static;
#L137596.   v0:= temp  @type object;
#L137598.   call temp:=  [|java:lang:ref:WeakReference.<init>|](v2, v3, v0) @signature [|Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V|] @classDescriptor [|java:lang:ref:WeakReference|] @type direct;
#L13759e.   v2.[|java:util:concurrent:ForkJoinTask$ExceptionNode.ex|]  := v4 @type object;
#L1375a2.   v2.[|java:util:concurrent:ForkJoinTask$ExceptionNode.next|]  := v5 @type object;
#L1375a6.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L1375ac.   v0:= temp  @type object;
#L1375ae.   call temp:=  [|java:lang:Thread.getId|](v0) @signature [|Ljava/lang/Thread;.getId:()J|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L1375b4.   v0:= temp  @type wide;
#L1375b6.   v2.[|java:util:concurrent:ForkJoinTask$ExceptionNode.thrower|]  := v0 @wide;
#L1375ba.   return @void ;

   }
record [|java:util:concurrent:ForkJoinWorkerThread|]  @type class @AccessFlag PUBLIC  extends [|java:lang:Thread|] {
      [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinWorkerThread.currentJoin|]    @AccessFlag ;
      [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ForkJoinWorkerThread.eventCount|]    @AccessFlag VOLATILE;
      [|boolean|] [|java:util:concurrent:ForkJoinWorkerThread.locallyFifo|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:ForkJoinWorkerThread.nextWait|]    @AccessFlag ;
      [|boolean|] [|java:util:concurrent:ForkJoinWorkerThread.parked|]    @AccessFlag VOLATILE;
      [|java:util:concurrent:ForkJoinPool|] [|java:util:concurrent:ForkJoinWorkerThread.pool|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:ForkJoinWorkerThread.poolIndex|]    @AccessFlag FINAL;
      [|java:util:concurrent:ForkJoinTask|][] [|java:util:concurrent:ForkJoinWorkerThread.queue|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ForkJoinWorkerThread.queueBase|]    @AccessFlag VOLATILE;
      [|int|] [|java:util:concurrent:ForkJoinWorkerThread.queueTop|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ForkJoinWorkerThread.seed|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ForkJoinWorkerThread.stealCount|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ForkJoinWorkerThread.stealHint|]    @AccessFlag ;
      [|boolean|] [|java:util:concurrent:ForkJoinWorkerThread.terminate|]    @AccessFlag VOLATILE;
   }
      global [|long|] @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinWorkerThread.INITIAL_QUEUE_CAPACITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinWorkerThread.MAXIMUM_QUEUE_CAPACITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinWorkerThread.MAX_HELP|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ForkJoinWorkerThread.SMASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.<clinit>|] () @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|int|] v2 @varname [|s|] @scope ((L0017,L0024), (L002b,L0034));
        [|java:lang:Exception|] v1 @varname [|e|] @scope ((L0025,L002b));
        [|java:lang:Class|] v0 @varname [|a|] @scope ((L0008,L0034));
        v3;
        v4;
      
#L1375cc.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L1375d2.   v3:= temp  @type object;
#L1375d4.   @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|] := v3  @type object;
#L1375d8.   v0:= new [|java:util:concurrent:ForkJoinTask|][];
#L1375dc.   v3:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L1375e0.   call temp:=  [|sun:misc:Unsafe.arrayBaseOffset|](v3, v0) @signature [|Lsun/misc/Unsafe;.arrayBaseOffset:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1375e6.   v3:= temp;
#L1375e8.   v3:= (long)v3  @type i2l;
#L1375ea.   @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|] := v3  @wide;
#L1375ee.   v3:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L1375f2.   call temp:=  [|sun:misc:Unsafe.arrayIndexScale|](v3, v0) @signature [|Lsun/misc/Unsafe;.arrayIndexScale:(Ljava/lang/Class;)I|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1375f8.   v2:= temp;
#L1375fa.   v3:= v2 + -1;
#L1375fe.   v3:= v3 ^& v2  @type int;
#L137600.   if v3 == 0 then goto L137622;
#L137604.   v3:= new [|java:lang:Error|];
#L137608.   v4:= "data type scale not a power of two" @type (object, string);
#L13760c.   call temp:=  [|java:lang:Error.<init>|](v3, v4) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L137612.   throw v3;
#L137614.   v1:= Exception  @type object;
#L137616.   v3:= new [|java:lang:Error|];
#L13761a.   call temp:=  [|java:lang:Error.<init>|](v3, v1) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L137620.   throw v3;
#L137622.   call temp:=  [|java:lang:Integer.numberOfLeadingZeros|](v2) @signature [|Ljava/lang/Integer;.numberOfLeadingZeros:(I)I|] @classDescriptor [|java:lang:Integer|] @type static;
#L137628.   v3:= temp;
#L13762a.   v3:= v3 - 31;
#L13762e.   @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] := v3;
#L137632.   return @void ;
  catch  [|java:lang:Exception|] @[L1375cc..L1375f8] goto L137614;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.<init>|] ([|java:util:concurrent:ForkJoinWorkerThread|] v4 @type (this), [|java:util:concurrent:ForkJoinPool|] v5 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.<init>:(Ljava/util/concurrent/ForkJoinPool;)V|] @Access PROTECTED_CONSTRUCTOR {
      local temp ;
        [|int|] v0 @varname [|k|] @scope ((L000d,L0027));
        [|java:lang:Thread$UncaughtExceptionHandler|] v1 @varname [|ueh|] @scope ((L001d,L0027));


        v2;
        v3;
      
#L137654.   call temp:=  [|java:util:concurrent:ForkJoinPool.nextWorkerName|](v5) @signature [|Ljava/util/concurrent/ForkJoinPool;.nextWorkerName:()Ljava/lang/String;|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L13765a.   v2:= temp  @type object;
#L13765c.   call temp:=  [|java:lang:Thread.<init>|](v4, v2) @signature [|Ljava/lang/Thread;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Thread|] @type direct;
#L137662.   v4.[|java:util:concurrent:ForkJoinWorkerThread.pool|]  := v5 @type object;
#L137666.   call temp:=  [|java:util:concurrent:ForkJoinPool.registerWorker|](v5, v4) @signature [|Ljava/util/concurrent/ForkJoinPool;.registerWorker:(Ljava/util/concurrent/ForkJoinWorkerThread;)I|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L13766c.   v0:= temp;
#L13766e.   v4.[|java:util:concurrent:ForkJoinWorkerThread.poolIndex|]  := v0;
#L137672.   v2:= v0 ^~ -1;
#L137676.    v3:= 0.000000;
#L13767c.   v2:= v2 ^& v3  @type int;
#L13767e.   v4.[|java:util:concurrent:ForkJoinWorkerThread.eventCount|]  := v2;
#L137682.   v2:= v5.[|java:util:concurrent:ForkJoinPool.locallyFifo|]   @boolean;
#L137686.   v4.[|java:util:concurrent:ForkJoinWorkerThread.locallyFifo|]  := v2 @boolean;
#L13768a.   v1:= v5.[|java:util:concurrent:ForkJoinPool.ueh|]   @type object;
#L13768e.   if v1 == 0 then goto L137698;
#L137692.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.setUncaughtExceptionHandler|](v4, v1) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.setUncaughtExceptionHandler:(Ljava/lang/Thread$UncaughtExceptionHandler;)V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L137698.   v2:= 1  @length 4;
#L13769a.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.setDaemon|](v4, v2) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.setDaemon:(Z)V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L1376a0.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinWorkerThread.casSlotNull|] ([|java:util:concurrent:ForkJoinTask|][] v6 @type (object), [|int|] v7, [|java:util:concurrent:ForkJoinTask|] v8 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.casSlotNull:([Ljava/util/concurrent/ForkJoinTask;ILjava/util/concurrent/ForkJoinTask;)Z|] @Access PRIVATE_STATIC_FINAL {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1376b4.   v0:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L1376b8.   v1:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L1376bc.   v1:= v7 ^< v1  @type int;
#L1376c0.   v1:= (long)v1  @type i2l;
#L1376c2.   v3:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L1376c6.   v2:= v1 + v3  @type long;
#L1376ca.   v5:= 0  @length 4;
#L1376cc.   v1:= v6  @type object;
#L1376ce.   v4:= v8  @type object;
#L1376d0.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1376d6.   v0:= temp;
#L1376d8.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.growQueue|] ([|java:util:concurrent:ForkJoinWorkerThread|] v17 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.growQueue:()V|] @Access PRIVATE {
      local temp ;
        [|int|] v11 @varname [|size|] @scope ((L0009,L0015), (L0018,L0064));
        [|long|] v3 @varname [|u|] @scope ((L0041,L0063));
        [|java:lang:Object|] v5 @varname [|x|] @scope ((L0047,L0063));
        [|int|] v7 @varname [|b|] @scope ((L0035,L0063));
        [|int|] v9 @varname [|oldMask|] @scope ((L002f,L0063));
        [|java:util:concurrent:ForkJoinTask|][] v2 @varname [|oldQ|] @scope ((L0004,L0064));
        [|int|] v8 @varname [|mask|] @scope ((L0026,L0064));
        [|java:util:concurrent:ForkJoinTask|][] v10 @varname [|q|] @scope ((L0024,L0064));
        [|int|] v12 @varname [|top|] @scope ((L002a,L0064));

        v0;
        v1;
        v4;
        v6;
        v13;
        v14;
        v15;
        v16;
      
#L1376ec.   v0:= v17  @type object;
#L1376f0.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L1376f4.   if v2 == 0 then goto L137716;
#L1376f8.   v1:= v2.length;
#L1376fa.   v11:= v1 ^< 1;
#L1376fe.   v1:= 16777216  @length high16;
#L137702.   if v11 <= v1 then goto L13771c;
#L137706.   v1:= new [|java:util:concurrent:RejectedExecutionException|];
#L13770a.   v6:= "Queue capacity exceeded" @type (object, string);
#L13770e.   call temp:=  [|java:util:concurrent:RejectedExecutionException.<init>|](v1, v6) @signature [|Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:util:concurrent:RejectedExecutionException|] @type direct;
#L137714.   throw v1;
#L137716.   v11:= 8192  @length 16;
#L13771a.   goto L1376fe;
#L13771c.   v1:= 8192  @length 16;
#L137720.   if v11 >= v1 then goto L137728;
#L137724.   v11:= 8192  @length 16;
#L137728.   v10:= new [|java:util:concurrent:ForkJoinTask|][v11];
#L13772c.   v0:= v17  @type object;
#L137730.   v0.[|java:util:concurrent:ForkJoinWorkerThread.queue|]  := v10 @type object;
#L137734.   v8:= v11 + -1;
#L137738.   v0:= v17  @type object;
#L13773c.   v12:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137740.   if v2 == 0 then goto L1377b2;
#L137744.   v1:= v2.length;
#L137746.   v9:= v1 + -1;
#L13774a.   if v9 < 0 then goto L1377b2;
#L13774e.   v0:= v17  @type object;
#L137752.   v7:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137756.   if v7 == v12 then goto L1377b2;
#L13775a.   v1:= v7 ^& v9  @type int;
#L13775e.   v6:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L137762.   v1:= v1 ^< v6  @type int;
#L137764.   v13:= (long)v1  @type i2l;
#L137766.   v15:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L13776a.   v3:= v13 + v15  @type long;
#L13776e.   v1:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L137772.   call temp:=  [|sun:misc:Unsafe.getObjectVolatile|](v1, v2, v3, v4) @signature [|Lsun/misc/Unsafe;.getObjectVolatile:(Ljava/lang/Object;J)Ljava/lang/Object;|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L137778.   v5:= temp  @type object;
#L13777a.   if v5 == 0 then goto L1377ac;
#L13777e.   v1:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L137782.   v6:= 0  @length 4;
#L137784.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v1, v2, v3, v4, v5, v6) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13778a.   v1:= temp;
#L13778c.   if v1 == 0 then goto L1377ac;
#L137790.   v1:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L137794.   v6:= v7 ^& v8  @type int;
#L137798.   v13:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L13779c.   v6:= v6 ^< v13  @type int;
#L13779e.   v13:= (long)v6  @type i2l;
#L1377a0.   v15:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L1377a4.   v13:= v13 + v15  @type long;
#L1377a6.   call temp:=  [|sun:misc:Unsafe.putObjectVolatile|](v1, v10, v13, v14, v5) @signature [|Lsun/misc/Unsafe;.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1377ac.   v7:= v7 + 1;
#L1377b0.   goto L137756;
#L1377b2.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinWorkerThread.helpJoinTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v24 @type (this), [|java:util:concurrent:ForkJoinTask|] v25 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.helpJoinTask:(Ljava/util/concurrent/ForkJoinTask;)Z|] @Access PRIVATE {
      local temp ;
        [|int|] v11 @varname [|j|] @scope ((L0039,L0049), (L0050,L0055));
        [|int|] v12 @varname [|levels|] @scope ((L0023,L004f), (L0050,L00c8));
        [|java:util:concurrent:ForkJoinTask|] v16 @varname [|task|] @scope ((L0025,L004f), (L0050,L00c8));
        [|java:util:concurrent:ForkJoinWorkerThread|] v17 @varname [|thread|] @scope ((L0027,L004f), (L0050,L00c8));
        [|java:util:concurrent:ForkJoinWorkerThread|] v18 @varname [|v|] @scope ((L002e,L004f), (L0050,L00c8));
        [|java:util:concurrent:ForkJoinTask|][] v3 @varname [|q|] @scope ((L0063,L006c), (L0085,L00c8));
        [|int|] v10 @varname [|i|] @scope ((L006a,L006c), (L0085,L00c8));
        [|java:util:concurrent:ForkJoinTask|] v14 @varname [|next|] @scope ((L0070,L0085));
        [|long|] v4 @varname [|u|] @scope ((L0090,L00c8));
        [|java:util:concurrent:ForkJoinTask|] v6 @varname [|t|] @scope ((L0092,L00c8));
        [|int|] v8 @varname [|b|] @scope ((L0059,L00c8));
        [|boolean|] v9 @varname [|helped|] @scope ((L0001,L00c8));
        [|int|] v13 @varname [|m|] @scope ((L000c,L00c8));
        [|java:util:concurrent:ForkJoinTask|] v15 @varname [|ps|] @scope ((L00bb,L00c8));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v19 @varname [|ws|] @scope ((L0014,L00c8));


        v0;
        v1;
        v2;
        v5;
        v7;
        v20;
        v21;
        v22;
        v23;
      
#L1377c4.   v9:= 0  @length 4;
#L1377c6.   v0:= v24  @type object;
#L1377ca.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L1377ce.   v2:= v2.[|java:util:concurrent:ForkJoinPool.scanGuard|] ;
#L1377d2.    v7:= 0.000000;
#L1377d8.   v13:= v2 ^& v7  @type int;
#L1377dc.   v0:= v24  @type object;
#L1377e0.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L1377e4.   v0:= v2.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L1377e8.   v19:= v0  @type object;
#L1377ec.   if v19 == 0 then goto L137862;
#L1377f0.   v0:= v19  @type object;
#L1377f4.   v2:= v0.length;
#L1377f6.   if v2 <= v13 then goto L137862;
#L1377fa.   v0:= v25  @type object;
#L1377fe.   v2:= v0.[|java:util:concurrent:ForkJoinTask.status|] ;
#L137802.   if v2 < 0 then goto L137862;
#L137806.   v12:= 16  @length 16;
#L13780a.   v16:= v25  @type object;
#L13780e.   v17:= v24  @type object;
#L137812.   v0:= v17  @type object;
#L137816.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.stealHint|] ;
#L13781a.   v2:= v2 ^& v13  @type int;
#L13781c.   v18:= v19[v2]  @type object;
#L137820.   if v18 == 0 then goto L137834;
#L137824.   v0:= v18  @type object;
#L137828.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]   @type object;
#L13782c.   v0:= v16  @type object;
#L137830.   if v2 == v0 then goto L137856;
#L137834.   v11:= 0  @length 4;
#L137836.   v18:= v19[v11]  @type object;
#L13783a.   if v18 == 0 then goto L137864;
#L13783e.   v0:= v18  @type object;
#L137842.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]   @type object;
#L137846.   v0:= v16  @type object;
#L13784a.   if v2 != v0 then goto L137864;
#L13784e.   v0:= v17  @type object;
#L137852.   v0.[|java:util:concurrent:ForkJoinWorkerThread.stealHint|]  := v11;
#L137856.   v0:= v25  @type object;
#L13785a.   v2:= v0.[|java:util:concurrent:ForkJoinTask.status|] ;
#L13785e.   if v2 >= 0 then goto L13786e;
#L137862.   return v9;
#L137864.   v11:= v11 + 1;
#L137868.   if v11 <= v13 then goto L137836;
#L13786c.   goto L137862;
#L13786e.   v0:= v18  @type object;
#L137872.   v8:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137876.   v0:= v18  @type object;
#L13787a.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L13787e.   if v8 == v2 then goto L13789c;
#L137882.   v0:= v18  @type object;
#L137886.   v3:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L13788a.   if v3 == 0 then goto L13789c;
#L13788e.   v2:= v3.length;
#L137890.   v2:= v2 + -1;
#L137894.   v10:= v2 ^& v8  @type int;
#L137898.   if v10 >= 0 then goto L1378ce;
#L13789c.   v0:= v18  @type object;
#L1378a0.   v14:= v0.[|java:util:concurrent:ForkJoinWorkerThread.currentJoin|]   @type object;
#L1378a4.   v12:= v12 + -1;
#L1378a8.   if v12 <= 0 then goto L137862;
#L1378ac.   v0:= v16  @type object;
#L1378b0.   v2:= v0.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1378b4.   if v2 < 0 then goto L137862;
#L1378b8.   if v14 == 0 then goto L137862;
#L1378bc.   v0:= v16  @type object;
#L1378c0.   if v14 == v0 then goto L137862;
#L1378c4.   v16:= v14  @type object;
#L1378c8.   v17:= v18  @type object;
#L1378cc.   goto L137812;
#L1378ce.   v2:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L1378d2.   v2:= v10 ^< v2  @type int;
#L1378d6.   v0:= (long)v2  @type i2l;
#L1378d8.   v20:= v0  @type wide;
#L1378dc.   v22:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L1378e0.   v4:= v20 + v22  @type long;
#L1378e4.   v6:= v3[v10]  @type object;
#L1378e8.   v0:= v16  @type object;
#L1378ec.   v2:= v0.[|java:util:concurrent:ForkJoinTask.status|] ;
#L1378f0.   if v2 < 0 then goto L137862;
#L1378f4.   if v6 == 0 then goto L137856;
#L1378f8.   v0:= v18  @type object;
#L1378fc.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137900.   if v2 != v8 then goto L137856;
#L137904.   v2:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L137908.   v7:= 0  @length 4;
#L13790a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L137910.   v2:= temp;
#L137912.   if v2 == 0 then goto L137856;
#L137916.   v2:= v8 + 1;
#L13791a.   v0:= v18  @type object;
#L13791e.   v0.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|]  := v2;
#L137922.   v0:= v24  @type object;
#L137926.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.poolIndex|] ;
#L13792a.   v0:= v18  @type object;
#L13792e.   v0.[|java:util:concurrent:ForkJoinWorkerThread.stealHint|]  := v2;
#L137932.   v0:= v24  @type object;
#L137936.   v15:= v0.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]   @type object;
#L13793a.   v0:= v24  @type object;
#L13793e.   v0.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]  := v6 @type object;
#L137942.   call temp:=  [|java:util:concurrent:ForkJoinTask.doExec|](v6) @signature [|Ljava/util/concurrent/ForkJoinTask;.doExec:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L137948.   v0:= v24  @type object;
#L13794c.   v0.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]  := v15 @type object;
#L137950.   v9:= 1  @length 4;
#L137952.   goto L137856;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinWorkerThread.localHelpJoinTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v10 @type (this), [|java:util:concurrent:ForkJoinTask|] v11 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.localHelpJoinTask:(Ljava/util/concurrent/ForkJoinTask;)Z|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|][] v1 @varname [|q|] @scope ((L0008,L001e), (L001f,L0035));
        [|java:util:concurrent:ForkJoinTask|] v4 @varname [|t|] @scope ((L0015,L001e), (L001f,L0035));
        [|int|] v6 @varname [|i|] @scope ((L0011,L001e), (L001f,L0035));
        [|int|] v7 @varname [|s|] @scope ((L0002,L0037));


        v0;
        v2;
        v3;
        v5;
        v8;
        v9;
      
#L137964.   v7:= v10.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137968.   v0:= v10.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L13796c.   if v7 == v0 then goto L1379ce;
#L137970.   v1:= v10.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L137974.   if v1 == 0 then goto L1379ce;
#L137978.   v0:= v1.length;
#L13797a.   v0:= v0 + -1;
#L13797e.   v7:= v7 + -1;
#L137982.   v6:= v0 ^& v7  @type int;
#L137986.   if v6 < 0 then goto L1379ce;
#L13798a.   v4:= v1[v6]  @type object;
#L13798e.   if v4 == 0 then goto L1379ce;
#L137992.   if v4 == v11 then goto L1379a2;
#L137996.   v0:= v4.[|java:util:concurrent:ForkJoinTask.status|] ;
#L13799a.   if v0 < 0 then goto L1379a2;
#L13799e.   v0:= 0  @length 4;
#L1379a0.   return v0;
#L1379a2.   v0:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L1379a6.   v2:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L1379aa.   v2:= v6 ^< v2  @type int;
#L1379ae.   v2:= (long)v2  @type i2l;
#L1379b0.   v8:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L1379b4.   v2:= v2 + v8  @type long;
#L1379b6.   v5:= 0  @length 4;
#L1379b8.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1379be.   v0:= temp;
#L1379c0.   if v0 == 0 then goto L1379ce;
#L1379c4.   v10.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|]  := v7;
#L1379c8.   call temp:=  [|java:util:concurrent:ForkJoinTask.doExec|](v4) @signature [|Ljava/util/concurrent/ForkJoinTask;.doExec:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L1379ce.   v0:= 1  @length 4;
#L1379d0.   goto L1379a0;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinWorkerThread.nextSeed|] ([|java:util:concurrent:ForkJoinWorkerThread|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.nextSeed:()I|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|r|] @scope ((L0002,L000e));

        v1;
      
#L1379e4.   v0:= v2.[|java:util:concurrent:ForkJoinWorkerThread.seed|] ;
#L1379e8.   v1:= v0 ^< 13;
#L1379ec.   v0:= v0 ^~ v1  @type int;
#L1379ee.   v1:= v0 ^>> 17;
#L1379f2.   v0:= v0 ^~ v1  @type int;
#L1379f4.   v1:= v0 ^< 5;
#L1379f8.   v0:= v0 ^~ v1  @type int;
#L1379fa.   v2.[|java:util:concurrent:ForkJoinWorkerThread.seed|]  := v0;
#L1379fe.   return v0;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinWorkerThread.popTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v13 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.popTask:()Ljava/util/concurrent/ForkJoinTask;|] @Access PRIVATE {
      local temp ;
        [|long|] v2 @varname [|u|] @scope ((L001d,L0021), (L0023,L002e));
        [|java:util:concurrent:ForkJoinTask|] v4 @varname [|t|] @scope ((L001f,L0021), (L0023,L002e));
        [|int|] v6 @varname [|i|] @scope ((L0014,L0021), (L0023,L002e));
        [|int|] v7 @varname [|m|] @scope ((L0008,L0021), (L0023,L002e));
        [|int|] v8 @varname [|s|] @scope ((L000c,L0021), (L0023,L002e));
        [|java:util:concurrent:ForkJoinTask|][] v1 @varname [|q|] @scope ((L0003,L002e));

        v0;
        v3;
        v5;
        v9;
        v10;
        v11;
        v12;
      
#L137a10.   v5:= 0  @length 4;
#L137a12.   v1:= v13.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L137a16.   if v1 == 0 then goto L137a52;
#L137a1a.   v0:= v1.length;
#L137a1c.   v7:= v0 + -1;
#L137a20.   if v7 < 0 then goto L137a52;
#L137a24.   v8:= v13.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137a28.   v0:= v13.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137a2c.   if v8 == v0 then goto L137a52;
#L137a30.   v8:= v8 + -1;
#L137a34.   v6:= v7 ^& v8  @type int;
#L137a38.   v0:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L137a3c.   v0:= v6 ^< v0  @type int;
#L137a40.   v9:= (long)v0  @type i2l;
#L137a42.   v11:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L137a46.   v2:= v9 + v11  @type long;
#L137a4a.   v4:= v1[v6]  @type object;
#L137a4e.   if v4 != 0 then goto L137a56;
#L137a52.   v4:= v5  @type object;
#L137a54.   return v4  @type object;
#L137a56.   v0:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L137a5a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L137a60.   v0:= temp;
#L137a62.   if v0 == 0 then goto L137a24;
#L137a66.   v13.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|]  := v8;
#L137a6a.   goto L137a54;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinWorkerThread.tryDeqAndExec|] ([|java:util:concurrent:ForkJoinWorkerThread|] v17 @type (this), [|java:util:concurrent:ForkJoinTask|] v18 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.tryDeqAndExec:(Ljava/util/concurrent/ForkJoinTask;)I|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|][] v3 @varname [|q|] @scope ((L002b,L006d));
        [|long|] v4 @varname [|u|] @scope ((L0043,L006d));
        [|int|] v8 @varname [|b|] @scope ((L0025,L006d));
        [|int|] v9 @varname [|i|] @scope ((L0032,L006d));
        [|int|] v10 @varname [|j|] @scope ((L001d,L006d), (L0072,L0075));
        [|java:util:concurrent:ForkJoinTask|] v12 @varname [|ps|] @scope ((L0060,L006d));
        [|java:util:concurrent:ForkJoinWorkerThread|] v13 @varname [|v|] @scope ((L0021,L006d), (L0072,L0075));
        [|int|] v11 @varname [|m|] @scope ((L000b,L0075));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v14 @varname [|ws|] @scope ((L0011,L0075));


        v0;
        v1;
        v2;
        v5;
        v6;
        v7;
        v15;
        v16;
      
#L137a7c.   v0:= v17  @type object;
#L137a80.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L137a84.   v2:= v2.[|java:util:concurrent:ForkJoinPool.scanGuard|] ;
#L137a88.    v6:= 0.000000;
#L137a8e.   v11:= v2 ^& v6  @type int;
#L137a92.   v0:= v17  @type object;
#L137a96.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L137a9a.   v14:= v2.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L137a9e.   if v14 == 0 then goto L137b56;
#L137aa2.   v2:= v14.length;
#L137aa4.   if v2 <= v11 then goto L137b56;
#L137aa8.   v0:= v18  @type object;
#L137aac.   v2:= v0.[|java:util:concurrent:ForkJoinTask.status|] ;
#L137ab0.   if v2 < 0 then goto L137b56;
#L137ab4.   v10:= 0  @length 4;
#L137ab6.   if v10 > v11 then goto L137b56;
#L137aba.   v13:= v14[v10]  @type object;
#L137abe.   if v13 == 0 then goto L137b60;
#L137ac2.   v8:= v13.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137ac6.   v2:= v13.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137aca.   if v8 == v2 then goto L137b60;
#L137ace.   v3:= v13.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L137ad2.   if v3 == 0 then goto L137b60;
#L137ad6.   v2:= v3.length;
#L137ad8.   v2:= v2 + -1;
#L137adc.   v9:= v2 ^& v8  @type int;
#L137ae0.   if v9 < 0 then goto L137b60;
#L137ae4.   v2:= v3[v9]  @type object;
#L137ae8.   v0:= v18  @type object;
#L137aec.   if v2 != v0 then goto L137b60;
#L137af0.   v2:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L137af4.   v2:= v9 ^< v2  @type int;
#L137af8.   v6:= (long)v2  @type i2l;
#L137afa.   v15:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L137afe.   v4:= v6 + v15  @type long;
#L137b02.   v2:= v13.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137b06.   if v2 != v8 then goto L137b56;
#L137b0a.   v2:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L137b0e.   v7:= 0  @length 4;
#L137b10.   v6:= v18  @type object;
#L137b14.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L137b1a.   v2:= temp;
#L137b1c.   if v2 == 0 then goto L137b56;
#L137b20.   v2:= v8 + 1;
#L137b24.   v13.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|]  := v2;
#L137b28.   v0:= v17  @type object;
#L137b2c.   v2:= v0.[|java:util:concurrent:ForkJoinWorkerThread.poolIndex|] ;
#L137b30.   v13.[|java:util:concurrent:ForkJoinWorkerThread.stealHint|]  := v2;
#L137b34.   v0:= v17  @type object;
#L137b38.   v12:= v0.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]   @type object;
#L137b3c.   v0:= v18  @type object;
#L137b40.   v1:= v17  @type object;
#L137b44.   v1.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]  := v0 @type object;
#L137b48.   call temp:=  [|java:util:concurrent:ForkJoinTask.doExec|](v18) @signature [|Ljava/util/concurrent/ForkJoinTask;.doExec:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L137b4e.   v0:= v17  @type object;
#L137b52.   v0.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]  := v12 @type object;
#L137b56.   v0:= v18  @type object;
#L137b5a.   v2:= v0.[|java:util:concurrent:ForkJoinTask.status|] ;
#L137b5e.   return v2;
#L137b60.   v10:= v10 + 1;
#L137b64.   goto L137ab6;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.writeSlot|] ([|java:util:concurrent:ForkJoinTask|][] v5 @type (object), [|int|] v6, [|java:util:concurrent:ForkJoinTask|] v7 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.writeSlot:([Ljava/util/concurrent/ForkJoinTask;ILjava/util/concurrent/ForkJoinTask;)V|] @Access PRIVATE_STATIC_FINAL {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
      
#L137b78.   v0:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L137b7c.   v1:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L137b80.   v1:= v6 ^< v1  @type int;
#L137b84.   v1:= (long)v1  @type i2l;
#L137b86.   v3:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L137b8a.   v1:= v1 + v3  @type long;
#L137b8c.   call temp:=  [|sun:misc:Unsafe.putObjectVolatile|](v0, v5, v1, v2, v7) @signature [|Lsun/misc/Unsafe;.putObjectVolatile:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L137b92.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.cancelTasks|] ([|java:util:concurrent:ForkJoinWorkerThread|] v5 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.cancelTasks:()V|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v2 @varname [|t|] @scope ((L0020,L0026));
        [|java:util:concurrent:ForkJoinTask|] v0 @varname [|cj|] @scope ((L0002,L0027));
        [|java:util:concurrent:ForkJoinTask|] v1 @varname [|cs|] @scope ((L000d,L0027));

        v3;
        v4;
      
#L137ba4.   v0:= v5.[|java:util:concurrent:ForkJoinWorkerThread.currentJoin|]   @type object;
#L137ba8.   if v0 == 0 then goto L137bba;
#L137bac.   v3:= v0.[|java:util:concurrent:ForkJoinTask.status|] ;
#L137bb0.   if v3 < 0 then goto L137bba;
#L137bb4.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancelIgnoringExceptions|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancelIgnoringExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L137bba.   v1:= v5.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]   @type object;
#L137bbe.   if v1 == 0 then goto L137bd0;
#L137bc2.   v3:= v1.[|java:util:concurrent:ForkJoinTask.status|] ;
#L137bc6.   if v3 < 0 then goto L137bd0;
#L137bca.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancelIgnoringExceptions|](v1) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancelIgnoringExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L137bd0.   v3:= v5.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137bd4.   v4:= v5.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137bd8.   if v3 == v4 then goto L137bf0;
#L137bdc.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.deqTask|](v5) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.deqTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L137be2.   v2:= temp  @type object;
#L137be4.   if v2 == 0 then goto L137bd0;
#L137be8.   call temp:=  [|java:util:concurrent:ForkJoinTask.cancelIgnoringExceptions|](v2) @signature [|Ljava/util/concurrent/ForkJoinTask;.cancelIgnoringExceptions:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L137bee.   goto L137bd0;
#L137bf0.   return @void ;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinWorkerThread.deqTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v10 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.deqTask:()Ljava/util/concurrent/ForkJoinTask;|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|][] v1 @varname [|q|] @scope ((L0009,L002e));
        [|java:util:concurrent:ForkJoinTask|] v4 @varname [|t|] @scope ((L0014,L002e));
        [|int|] v7 @varname [|i|] @scope ((L0010,L002e));
        [|int|] v6 @varname [|b|] @scope ((L0005,L0031));

        v0;
        v2;
        v3;
        v5;
        v8;
        v9;
      
#L137c04.   v5:= 0  @length 4;
#L137c06.   v0:= v10.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137c0a.   v6:= v10.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137c0e.   if v0 == v6 then goto L137c62;
#L137c12.   v1:= v10.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L137c16.   if v1 == 0 then goto L137c62;
#L137c1a.   v0:= v1.length;
#L137c1c.   v0:= v0 + -1;
#L137c20.   v7:= v0 ^& v6  @type int;
#L137c24.   if v7 < 0 then goto L137c62;
#L137c28.   v4:= v1[v7]  @type object;
#L137c2c.   if v4 == 0 then goto L137c62;
#L137c30.   v0:= v10.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137c34.   if v0 != v6 then goto L137c62;
#L137c38.   v0:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L137c3c.   v2:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L137c40.   v2:= v7 ^< v2  @type int;
#L137c44.   v2:= (long)v2  @type i2l;
#L137c46.   v8:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L137c4a.   v2:= v2 + v8  @type long;
#L137c4c.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L137c52.   v0:= temp;
#L137c54.   if v0 == 0 then goto L137c62;
#L137c58.   v0:= v6 + 1;
#L137c5c.   v10.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|]  := v0;
#L137c60.   return v4  @type object;
#L137c62.   v4:= v5  @type object;
#L137c64.   goto L137c60;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinWorkerThread.drainTasksTo|] ([|java:util:concurrent:ForkJoinWorkerThread|] v4 @type (this), [|java:util:Collection|] v5 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.drainTasksTo:(Ljava/util/Collection;)I|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v1 @varname [|t|] @scope ((L000b,L0013));
        [|int|] v0 @varname [|n|] @scope ((L0001,L0014));


        v2;
        v3;
      
#L137c78.   v0:= 0  @length 4;
#L137c7a.   v2:= v4.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137c7e.   v3:= v4.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137c82.   if v2 == v3 then goto L137c9e;
#L137c86.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.deqTask|](v4) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.deqTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L137c8c.   v1:= temp  @type object;
#L137c8e.   if v1 == 0 then goto L137c7a;
#L137c92.   call temp:=  [|java:util:Collection.add|](v5, v1) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L137c98.   v0:= v0 + 1;
#L137c9c.   goto L137c7a;
#L137c9e.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.execTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v2 @type (this), [|java:util:concurrent:ForkJoinTask|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.execTask:(Ljava/util/concurrent/ForkJoinTask;)V|] @Access FINAL {
      local temp ;


        v0;
        v1;
      
#L137cb0.   v2.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]  := v3 @type object;
#L137cb4.   if v3 == 0 then goto L137cbe;
#L137cb8.   call temp:=  [|java:util:concurrent:ForkJoinTask.doExec|](v3) @signature [|Ljava/util/concurrent/ForkJoinTask;.doExec:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L137cbe.   v0:= v2.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137cc2.   v1:= v2.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137cc6.   if v0 != v1 then goto L137cde;
#L137cca.   v0:= v2.[|java:util:concurrent:ForkJoinWorkerThread.stealCount|] ;
#L137cce.   v0:= v0 + 1;
#L137cd2.   v2.[|java:util:concurrent:ForkJoinWorkerThread.stealCount|]  := v0;
#L137cd6.   v0:= 0  @length 4;
#L137cd8.   v2.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]  := v0 @type object;
#L137cdc.   return @void ;
#L137cde.   v0:= v2.[|java:util:concurrent:ForkJoinWorkerThread.locallyFifo|]   @boolean;
#L137ce2.   if v0 == 0 then goto L137cf0;
#L137ce6.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.locallyDeqTask|](v2) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.locallyDeqTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L137cec.   v3:= temp  @type object;
#L137cee.   goto L137cb4;
#L137cf0.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.popTask|](v2) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.popTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L137cf6.   v3:= temp  @type object;
#L137cf8.   goto L137cee;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinWorkerThread.getEstimatedSurplusTaskCount|] ([|java:util:concurrent:ForkJoinWorkerThread|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.getEstimatedSurplusTaskCount:()I|] @Access FINAL {
      local temp ;

        v0;
        v1;
      
#L137d0c.   v0:= v2.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137d10.   v1:= v2.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137d14.   v0:= v0 - v1  @type int;
#L137d16.   v1:= v2.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L137d1a.   call temp:=  [|java:util:concurrent:ForkJoinPool.idlePerActive|](v1) @signature [|Ljava/util/concurrent/ForkJoinPool;.idlePerActive:()I|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137d20.   v1:= temp;
#L137d22.   v0:= v0 - v1  @type int;
#L137d24.   return v0;

   }
    procedure [|java:util:concurrent:ForkJoinPool|] [|java:util:concurrent:ForkJoinWorkerThread.getPool|] ([|java:util:concurrent:ForkJoinWorkerThread|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.getPool:()Ljava/util/concurrent/ForkJoinPool;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L137d38.   v0:= v1.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L137d3c.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinWorkerThread.getPoolIndex|] ([|java:util:concurrent:ForkJoinWorkerThread|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.getPoolIndex:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L137d50.   v0:= v1.[|java:util:concurrent:ForkJoinWorkerThread.poolIndex|] ;
#L137d54.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinWorkerThread.getQueueSize|] ([|java:util:concurrent:ForkJoinWorkerThread|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.getQueueSize:()I|] @Access FINAL {
      local temp ;

        v0;
        v1;
      
#L137d68.   v0:= v2.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137d6c.   v1:= v2.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137d70.   v0:= v0 - v1  @type int;
#L137d72.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.helpQuiescePool|] ([|java:util:concurrent:ForkJoinWorkerThread|] v15 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.helpQuiescePool:()V|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v7 @varname [|t|] @scope ((L0022,L002c));
        [|int|] v1 @varname [|i|] @scope ((L0038,L004e));
        [|int|] v2 @varname [|n|] @scope ((L002f,L004e));
        [|int|] v5 @varname [|r|] @scope ((L0035,L004e));
        [|int|] v6 @varname [|steps|] @scope ((L0037,L004e));
        [|java:util:concurrent:ForkJoinWorkerThread|] v9 @varname [|w|] @scope ((L0041,L004e));
        [|boolean|] v0 @varname [|active|] @scope ((L0003,L006f));
        [|java:util:concurrent:ForkJoinPool|] v3 @varname [|p|] @scope ((L0007,L006f));
        [|java:util:concurrent:ForkJoinTask|] v4 @varname [|ps|] @scope ((L0005,L006f));
        [|java:util:concurrent:ForkJoinWorkerThread|] v8 @varname [|v|] @scope ((L000d,L006f));
        [|java:util:concurrent:ForkJoinWorkerThread|][] v10 @varname [|ws|] @scope ((L000c,L006f));

        v11;
        v12;
        v13;
        v14;
      
#L137d84.   v14:= -1  @length 4;
#L137d86.   v13:= 1  @length 4;
#L137d88.   v0:= 1  @length 4;
#L137d8a.   v4:= v15.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]   @type object;
#L137d8e.   v3:= v15.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L137d92.   call temp:=  [|java:util:concurrent:ForkJoinPool.addQuiescerCount|](v3, v13) @signature [|Ljava/util/concurrent/ForkJoinPool;.addQuiescerCount:(I)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137d98.   v10:= v3.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L137d9c.   v8:= 0  @length 4;
#L137d9e.   v11:= v15.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137da2.   v12:= v15.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137da6.   if v11 == v12 then goto L137ddc;
#L137daa.   v8:= v15  @type object;
#L137dac.   if v8 == 0 then goto L137e3c;
#L137db0.   if v0 != 0 then goto L137dbc;
#L137db4.   v0:= 1  @length 4;
#L137db6.   call temp:=  [|java:util:concurrent:ForkJoinPool.addActiveCount|](v3, v13) @signature [|Ljava/util/concurrent/ForkJoinPool;.addActiveCount:(I)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137dbc.   if v8 == v15 then goto L137e20;
#L137dc0.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.deqTask|](v8) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.deqTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L137dc6.   v7:= temp  @type object;
#L137dc8.   if v7 == 0 then goto L137d98;
#L137dcc.   v15.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]  := v7 @type object;
#L137dd0.   call temp:=  [|java:util:concurrent:ForkJoinTask.doExec|](v7) @signature [|Ljava/util/concurrent/ForkJoinTask;.doExec:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type virtual;
#L137dd6.   v15.[|java:util:concurrent:ForkJoinWorkerThread.currentSteal|]  := v4 @type object;
#L137dda.   goto L137d98;
#L137ddc.   if v10 == 0 then goto L137dac;
#L137de0.   v2:= v10.length;
#L137de2.   if v2 <= v13 then goto L137dac;
#L137de6.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.nextSeed|](v15) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.nextSeed:()I|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L137dec.   v5:= temp;
#L137dee.   v6:= v2 ^< 1;
#L137df2.   v1:= 0  @length 4;
#L137df4.   if v1 >= v6 then goto L137dac;
#L137df8.   v11:= v1 + v5  @type int;
#L137dfc.   v12:= v2 + -1;
#L137e00.   v11:= v11 ^& v12  @type int;
#L137e02.   v9:= v10[v11]  @type object;
#L137e06.   if v9 == 0 then goto L137e1a;
#L137e0a.   v11:= v9.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137e0e.   v12:= v9.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137e12.   if v11 == v12 then goto L137e1a;
#L137e16.   v8:= v9  @type object;
#L137e18.   goto L137dac;
#L137e1a.   v1:= v1 + 1;
#L137e1e.   goto L137df4;
#L137e20.   v11:= v15.[|java:util:concurrent:ForkJoinWorkerThread.locallyFifo|]   @boolean;
#L137e24.   if v11 == 0 then goto L137e32;
#L137e28.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.locallyDeqTask|](v15) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.locallyDeqTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L137e2e.   v7:= temp  @type object;
#L137e30.   goto L137dc8;
#L137e32.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.popTask|](v15) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.popTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L137e38.   v7:= temp  @type object;
#L137e3a.   goto L137dc8;
#L137e3c.   if v0 == 0 then goto L137e48;
#L137e40.   v0:= 0  @length 4;
#L137e42.   call temp:=  [|java:util:concurrent:ForkJoinPool.addActiveCount|](v3, v14) @signature [|Ljava/util/concurrent/ForkJoinPool;.addActiveCount:(I)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137e48.   call temp:=  [|java:util:concurrent:ForkJoinPool.isQuiescent|](v3) @signature [|Ljava/util/concurrent/ForkJoinPool;.isQuiescent:()Z|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137e4e.   v11:= temp;
#L137e50.   if v11 == 0 then goto L137d98;
#L137e54.   call temp:=  [|java:util:concurrent:ForkJoinPool.addActiveCount|](v3, v13) @signature [|Ljava/util/concurrent/ForkJoinPool;.addActiveCount:(I)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137e5a.   call temp:=  [|java:util:concurrent:ForkJoinPool.addQuiescerCount|](v3, v14) @signature [|Ljava/util/concurrent/ForkJoinPool;.addQuiescerCount:(I)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137e60.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:ForkJoinWorkerThread.joinTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v5 @type (this), [|java:util:concurrent:ForkJoinTask|] v6 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.joinTask:(Ljava/util/concurrent/ForkJoinTask;)I|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v0 @varname [|prevJoin|] @scope ((L0002,L0041));
        [|int|] v1 @varname [|retries|] @scope ((L0006,L0041));
        [|int|] v2 @varname [|s|] @scope ((L0008,L0041));


        v3;
        v4;
      
#L137e74.   v0:= v5.[|java:util:concurrent:ForkJoinWorkerThread.currentJoin|]   @type object;
#L137e78.   v5.[|java:util:concurrent:ForkJoinWorkerThread.currentJoin|]  := v6 @type object;
#L137e7c.   v1:= 16  @length 16;
#L137e80.   v2:= v6.[|java:util:concurrent:ForkJoinTask.status|] ;
#L137e84.   if v2 >= 0 then goto L137e8e;
#L137e88.   v5.[|java:util:concurrent:ForkJoinWorkerThread.currentJoin|]  := v0 @type object;
#L137e8c.   return v2;
#L137e8e.   if v1 <= 0 then goto L137ee6;
#L137e92.   v3:= v5.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137e96.   v4:= v5.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137e9a.   if v3 == v4 then goto L137eae;
#L137e9e.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.localHelpJoinTask|](v5, v6) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.localHelpJoinTask:(Ljava/util/concurrent/ForkJoinTask;)Z|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L137ea4.   v3:= temp;
#L137ea6.   if v3 != 0 then goto L137e80;
#L137eaa.   v1:= 0  @length 4;
#L137eac.   goto L137e80;
#L137eae.   v3:= 8  @length 16;
#L137eb2.   if v1 != v3 then goto L137ece;
#L137eb6.   v1:= v1 + -1;
#L137eba.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.tryDeqAndExec|](v5, v6) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.tryDeqAndExec:(Ljava/util/concurrent/ForkJoinTask;)I|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L137ec0.   v3:= temp;
#L137ec2.   if v3 < 0 then goto L137e80;
#L137ec6.   call temp:=  [|java:lang:Thread.yield|]() @signature [|Ljava/lang/Thread;.yield:()V|] @classDescriptor [|java:lang:Thread|] @type static;
#L137ecc.   goto L137e80;
#L137ece.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.helpJoinTask|](v5, v6) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.helpJoinTask:(Ljava/util/concurrent/ForkJoinTask;)Z|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L137ed4.   v3:= temp;
#L137ed6.   if v3 == 0 then goto L137ee0;
#L137eda.   v1:= 16  @length 16;
#L137ede.   goto L137e80;
#L137ee0.   v1:= v1 + -1;
#L137ee4.   goto L137ede;
#L137ee6.   v1:= 16  @length 16;
#L137eea.   v3:= v5.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L137eee.   call temp:=  [|java:util:concurrent:ForkJoinPool.tryAwaitJoin|](v3, v6) @signature [|Ljava/util/concurrent/ForkJoinPool;.tryAwaitJoin:(Ljava/util/concurrent/ForkJoinTask;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137ef4.   goto L137e80;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinWorkerThread.locallyDeqTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v11 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.locallyDeqTask:()Ljava/util/concurrent/ForkJoinTask;|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:ForkJoinTask|] v4 @varname [|t|] @scope ((L0014,L002e));
        [|int|] v6 @varname [|b|] @scope ((L000e,L002e));
        [|int|] v7 @varname [|i|] @scope ((L0012,L002e));
        [|int|] v8 @varname [|m|] @scope ((L0008,L002e));
        [|java:util:concurrent:ForkJoinTask|][] v1 @varname [|q|] @scope ((L0003,L0031));

        v0;
        v2;
        v3;
        v5;
        v9;
        v10;
      
#L137f08.   v5:= 0  @length 4;
#L137f0a.   v1:= v11.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L137f0e.   if v1 == 0 then goto L137f66;
#L137f12.   v0:= v1.length;
#L137f14.   v8:= v0 + -1;
#L137f18.   if v8 < 0 then goto L137f66;
#L137f1c.   v0:= v11.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L137f20.   v6:= v11.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137f24.   if v0 == v6 then goto L137f66;
#L137f28.   v7:= v8 ^& v6  @type int;
#L137f2c.   v4:= v1[v7]  @type object;
#L137f30.   if v4 == 0 then goto L137f1c;
#L137f34.   v0:= v11.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L137f38.   if v0 != v6 then goto L137f1c;
#L137f3c.   v0:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L137f40.   v2:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L137f44.   v2:= v7 ^< v2  @type int;
#L137f48.   v2:= (long)v2  @type i2l;
#L137f4a.   v9:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L137f4e.   v2:= v2 + v9  @type long;
#L137f50.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L137f56.   v0:= temp;
#L137f58.   if v0 == 0 then goto L137f1c;
#L137f5c.   v0:= v6 + 1;
#L137f60.   v11.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|]  := v0;
#L137f64.   return v4  @type object;
#L137f66.   v4:= v5  @type object;
#L137f68.   goto L137f64;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.onStart|] ([|java:util:concurrent:ForkJoinWorkerThread|] v2 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.onStart:()V|] @Access PROTECTED {
      local temp ;
        [|int|] v0 @varname [|r|] @scope ((L000c,L000f));

        v1;
      
#L137f7c.   v1:= 8192  @length 16;
#L137f80.   v1:= new [|java:util:concurrent:ForkJoinTask|][v1];
#L137f84.   v2.[|java:util:concurrent:ForkJoinWorkerThread.queue|]  := v1 @type object;
#L137f88.   v1:= @@[|java:util:concurrent:ForkJoinPool.workerSeedGenerator|]   @type object;
#L137f8c.   call temp:=  [|java:util:Random.nextInt|](v1) @signature [|Ljava/util/Random;.nextInt:()I|] @classDescriptor [|java:util:Random|] @type virtual;
#L137f92.   v0:= temp;
#L137f94.   if v0 != 0 then goto L137f9a;
#L137f98.   v0:= 1  @length 4;
#L137f9a.   v2.[|java:util:concurrent:ForkJoinWorkerThread.seed|]  := v0;
#L137f9e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.onTermination|] ([|java:util:concurrent:ForkJoinWorkerThread|] v2 @type (this), [|java:lang:Throwable|] v3 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.onTermination:(Ljava/lang/Throwable;)V|] @Access PROTECTED {
      local temp ;
        [|java:lang:Throwable|] v0 @varname [|ex|] @scope ((L0012,L0018));


        v1;
      
#L137fb0.   v1:= 1  @length 4;
#L137fb2.   v2.[|java:util:concurrent:ForkJoinWorkerThread.terminate|]  := v1 @boolean;
#L137fb6.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.cancelTasks|](v2) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.cancelTasks:()V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L137fbc.   v1:= v2.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L137fc0.   call temp:=  [|java:util:concurrent:ForkJoinPool.deregisterWorker|](v1, v2, v3) @signature [|Ljava/util/concurrent/ForkJoinPool;.deregisterWorker:(Ljava/util/concurrent/ForkJoinWorkerThread;Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L137fc6.   if v3 == 0 then goto L137fd0;
#L137fca.   call temp:=  [|libcore:util:SneakyThrow.sneakyThrow|](v3) @signature [|Llibcore/util/SneakyThrow;.sneakyThrow:(Ljava/lang/Throwable;)V|] @classDescriptor [|libcore:util:SneakyThrow|] @type static;
#L137fd0.   return @void ;
#L137fd2.   v0:= Exception  @type object;
#L137fd4.   if v3 != 0 then goto L137fda;
#L137fd8.   v3:= v0  @type object;
#L137fda.   if v3 == 0 then goto L137fd0;
#L137fde.   goto L137fca;
#L137fe0.   v1:= Exception  @type object;
#L137fe2.   if v3 == 0 then goto L137fec;
#L137fe6.   call temp:=  [|libcore:util:SneakyThrow.sneakyThrow|](v3) @signature [|Llibcore/util/SneakyThrow;.sneakyThrow:(Ljava/lang/Throwable;)V|] @classDescriptor [|libcore:util:SneakyThrow|] @type static;
#L137fec.   throw v1;
  catch  [|java:lang:Throwable|] @[L137fb2..L137fc6] goto L137fd2;
  catch  [|any|] @[L137fb2..L137fc6] goto L137fe0;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinWorkerThread.peekTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v4 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.peekTask:()Ljava/util/concurrent/ForkJoinTask;|] @Access FINAL {
      local temp ;
        [|int|] v1 @varname [|m|] @scope ((L0007,L0009), (L000b,L001b));
        [|int|] v0 @varname [|i|] @scope ((L0011,L0016));
        [|java:util:concurrent:ForkJoinTask|][] v2 @varname [|q|] @scope ((L0002,L001b));

        v3;
      
#L138010.   v2:= v4.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L138014.   if v2 == 0 then goto L138022;
#L138018.   v3:= v2.length;
#L13801a.   v1:= v3 + -1;
#L13801e.   if v1 >= 0 then goto L138026;
#L138022.   v3:= 0  @length 4;
#L138024.   return v3  @type object;
#L138026.   v3:= v4.[|java:util:concurrent:ForkJoinWorkerThread.locallyFifo|]   @boolean;
#L13802a.   if v3 == 0 then goto L13803c;
#L13802e.   v0:= v4.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L138032.   v3:= v0 ^& v1  @type int;
#L138036.   v3:= v2[v3]  @type object;
#L13803a.   goto L138024;
#L13803c.   v3:= v4.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L138040.   v0:= v3 + -1;
#L138044.   goto L138032;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinWorkerThread.pollLocalTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v1 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.pollLocalTask:()Ljava/util/concurrent/ForkJoinTask;|] @Access FINAL {
      local temp ;

        v0;
      
#L138058.   v0:= v1.[|java:util:concurrent:ForkJoinWorkerThread.locallyFifo|]   @boolean;
#L13805c.   if v0 == 0 then goto L13806a;
#L138060.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.locallyDeqTask|](v1) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.locallyDeqTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L138066.   v0:= temp  @type object;
#L138068.   return v0  @type object;
#L13806a.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.popTask|](v1) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.popTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L138070.   v0:= temp  @type object;
#L138072.   goto L138068;

   }
    procedure [|java:util:concurrent:ForkJoinTask|] [|java:util:concurrent:ForkJoinWorkerThread.pollTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v10 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.pollTask:()Ljava/util/concurrent/ForkJoinTask;|] @Access FINAL {
      local temp ;
        [|java:util:concurrent:ForkJoinWorkerThread|][] v7 @varname [|ws|] @scope ((L000a,L000c), (L000e,L003b));
        [|int|] v0 @varname [|i|] @scope ((L0016,L0017), (L0017,L001b), (L001b,L0038), (L0038,L003b));
        [|java:util:concurrent:ForkJoinWorkerThread|] v6 @varname [|w|] @scope ((L0022,L0039));
        [|int|] v2 @varname [|n|] @scope ((L000f,L003b));
        [|int|] v3 @varname [|r|] @scope ((L0015,L003b));
        [|int|] v4 @varname [|steps|] @scope ((L0011,L003b));
        [|java:util:concurrent:ForkJoinTask|] v5 @varname [|t|] @scope ((L0004,L003b));

        v1;
        v8;
        v9;
      
#L138084.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.pollLocalTask|](v10) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.pollLocalTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L13808a.   v5:= temp  @type object;
#L13808c.   if v5 != 0 then goto L13809c;
#L138090.   v8:= v10.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L138094.   v7:= v8.[|java:util:concurrent:ForkJoinPool.workers|]   @type object;
#L138098.   if v7 != 0 then goto L1380a0;
#L13809c.   v8:= v5  @type object;
#L13809e.   return v8  @type object;
#L1380a0.   v2:= v7.length;
#L1380a2.   v4:= v2 ^< 1;
#L1380a6.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.nextSeed|](v10) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.nextSeed:()I|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L1380ac.   v3:= temp;
#L1380ae.   v0:= 0  @length 4;
#L1380b0.   v1:= v0;
#L1380b2.   if v1 >= v4 then goto L1380f6;
#L1380b6.   v0:= v1 + 1;
#L1380ba.   v8:= v1 + v3  @type int;
#L1380be.   v9:= v2 + -1;
#L1380c2.   v8:= v8 ^& v9  @type int;
#L1380c4.   v6:= v7[v8]  @type object;
#L1380c8.   if v6 == 0 then goto L1380f2;
#L1380cc.   v8:= v6.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L1380d0.   v9:= v6.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L1380d4.   if v8 == v9 then goto L1380f2;
#L1380d8.   v8:= v6.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L1380dc.   if v8 == 0 then goto L1380f2;
#L1380e0.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.deqTask|](v6) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.deqTask:()Ljava/util/concurrent/ForkJoinTask;|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L1380e6.   v5:= temp  @type object;
#L1380e8.   if v5 == 0 then goto L1380f0;
#L1380ec.   v8:= v5  @type object;
#L1380ee.   goto L13809e;
#L1380f0.   v0:= 0  @length 4;
#L1380f2.   v1:= v0;
#L1380f4.   goto L1380b2;
#L1380f6.   v8:= 0  @length 4;
#L1380f8.   goto L13809e;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.pushTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v9 @type (this), [|java:util:concurrent:ForkJoinTask|] v10 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.pushTask:(Ljava/util/concurrent/ForkJoinTask;)V|] @Access FINAL {
      local temp ;
        [|int|] v0 @varname [|m|] @scope ((L0009,L0027), (L0028,L002e));
        [|int|] v2 @varname [|s|] @scope ((L0006,L0027), (L0028,L002e));
        [|long|] v3 @varname [|u|] @scope ((L0013,L0027), (L0028,L002e));
        [|java:util:concurrent:ForkJoinTask|][] v1 @varname [|q|] @scope ((L0002,L002e));


        v4;
        v5;
        v6;
        v7;
        v8;
      
#L13810c.   v1:= v9.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L138110.   if v1 == 0 then goto L13815a;
#L138114.   v2:= v9.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L138118.   v5:= v1.length;
#L13811a.   v0:= v5 + -1;
#L13811e.   v5:= v2 ^& v0  @type int;
#L138122.   v6:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L138126.   v5:= v5 ^< v6  @type int;
#L138128.   v5:= (long)v5  @type i2l;
#L13812a.   v7:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L13812e.   v3:= v5 + v7  @type long;
#L138132.   v5:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L138136.   call temp:=  [|sun:misc:Unsafe.putOrderedObject|](v5, v1, v3, v4, v10) @signature [|Lsun/misc/Unsafe;.putOrderedObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13813c.   v5:= v2 + 1;
#L138140.   v9.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|]  := v5;
#L138144.   v5:= v9.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L138148.   v2:= v2 - v5  @type int;
#L13814a.   v5:= 2  @length 4;
#L13814c.   if v2 > v5 then goto L13815c;
#L138150.   v5:= v9.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L138154.   call temp:=  [|java:util:concurrent:ForkJoinPool.signalWork|](v5) @signature [|Ljava/util/concurrent/ForkJoinPool;.signalWork:()V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L13815a.   return @void ;
#L13815c.   if v2 != v0 then goto L13815a;
#L138160.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.growQueue|](v9) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.growQueue:()V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type direct;
#L138166.   goto L13815a;

   }
    procedure [|void|] [|java:util:concurrent:ForkJoinWorkerThread.run|] ([|java:util:concurrent:ForkJoinWorkerThread|] v3 @type (this)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.run:()V|] @Access PUBLIC {
      local temp ;
        [|java:lang:Throwable|] v0 @varname [|ex|] @scope ((L000e,L0010));
        [|java:lang:Throwable|] v1 @varname [|exception|] @scope ((L0001,L0015));

        v2;
      
#L138178.   v1:= 0  @length 4;
#L13817a.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.onStart|](v3) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.onStart:()V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L138180.   v2:= v3.[|java:util:concurrent:ForkJoinWorkerThread.pool|]   @type object;
#L138184.   call temp:=  [|java:util:concurrent:ForkJoinPool.work|](v2, v3) @signature [|Ljava/util/concurrent/ForkJoinPool;.work:(Ljava/util/concurrent/ForkJoinWorkerThread;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type virtual;
#L13818a.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.onTermination|](v3, v1) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.onTermination:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L138190.   return @void ;
#L138192.   v0:= Exception  @type object;
#L138194.   v1:= v0  @type object;
#L138196.   goto L13818a;
#L138198.   v2:= Exception  @type object;
#L13819a.   call temp:=  [|java:util:concurrent:ForkJoinWorkerThread.onTermination|](v3, v1) @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.onTermination:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:ForkJoinWorkerThread|] @type virtual;
#L1381a0.   throw v2;
  catch  [|java:lang:Throwable|] @[L13817a..L13818a] goto L138192;
  catch  [|any|] @[L13817a..L13818a] goto L138198;

   }
    procedure [|boolean|] [|java:util:concurrent:ForkJoinWorkerThread.unpushTask|] ([|java:util:concurrent:ForkJoinWorkerThread|] v7 @type (this), [|java:util:concurrent:ForkJoinTask|] v8 @type (object)) @owner [|java:util:concurrent:ForkJoinWorkerThread|] @signature [|Ljava/util/concurrent/ForkJoinWorkerThread;.unpushTask:(Ljava/util/concurrent/ForkJoinTask;)Z|] @Access FINAL {
      local temp ;
        [|int|] v6 @varname [|s|] @scope ((L0006,L0024));
        [|java:util:concurrent:ForkJoinTask|][] v1 @varname [|q|] @scope ((L0002,L0027));


        v0;
        v2;
        v3;
        v4;
        v5;
      
#L1381c4.   v1:= v7.[|java:util:concurrent:ForkJoinWorkerThread.queue|]   @type object;
#L1381c8.   if v1 == 0 then goto L13820e;
#L1381cc.   v6:= v7.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|] ;
#L1381d0.   v0:= v7.[|java:util:concurrent:ForkJoinWorkerThread.queueBase|] ;
#L1381d4.   if v6 == v0 then goto L13820e;
#L1381d8.   v0:= @@[|java:util:concurrent:ForkJoinWorkerThread.UNSAFE|]   @type object;
#L1381dc.   v2:= v1.length;
#L1381de.   v2:= v2 + -1;
#L1381e2.   v6:= v6 + -1;
#L1381e6.   v2:= v2 ^& v6  @type int;
#L1381e8.   v3:= @@[|java:util:concurrent:ForkJoinWorkerThread.ASHIFT|] ;
#L1381ec.   v2:= v2 ^< v3  @type int;
#L1381ee.   v2:= (long)v2  @type i2l;
#L1381f0.   v4:= @@[|java:util:concurrent:ForkJoinWorkerThread.ABASE|]   @wide;
#L1381f4.   v2:= v2 + v4  @type long;
#L1381f6.   v5:= 0  @length 4;
#L1381f8.   v4:= v8  @type object;
#L1381fa.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L138200.   v0:= temp;
#L138202.   if v0 == 0 then goto L13820e;
#L138206.   v7.[|java:util:concurrent:ForkJoinWorkerThread.queueTop|]  := v6;
#L13820a.   v0:= 1  @length 4;
#L13820c.   return v0;
#L13820e.   v0:= 0  @length 4;
#L138210.   goto L13820c;

   }
record [|java:util:concurrent:FutureTask$WaitNode|]  @type class @AccessFlag FINAL  {
      [|java:util:concurrent:FutureTask$WaitNode|] [|java:util:concurrent:FutureTask$WaitNode.next|]    @AccessFlag VOLATILE;
      [|java:lang:Thread|] [|java:util:concurrent:FutureTask$WaitNode.thread|]    @AccessFlag VOLATILE;
   }
    procedure [|void|] [|java:util:concurrent:FutureTask$WaitNode.<init>|] ([|java:util:concurrent:FutureTask$WaitNode|] v1 @type (this)) @owner [|java:util:concurrent:FutureTask$WaitNode|] @signature [|Ljava/util/concurrent/FutureTask$WaitNode;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

        v0;
      
#L138224.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13822a.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L138230.   v0:= temp  @type object;
#L138232.   v1.[|java:util:concurrent:FutureTask$WaitNode.thread|]  := v0 @type object;
#L138236.   return @void ;

   }
record [|java:util:concurrent:LinkedBlockingDeque$1|]  @type class @AccessFlag SYNTHETIC  {
   }
record [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|]  @type class @AccessFlag ABSTRACT extends  [|java:util:Iterator|] {
      [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.lastRet|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]    @AccessFlag ;
      [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.nextItem|]    @AccessFlag ;
      [|java:util:concurrent:LinkedBlockingDeque|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.<init>|] ([|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] v2 @type (this), [|java:util:concurrent:LinkedBlockingDeque|] v3 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;)V|] @Access CONSTRUCTOR {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0007,L0025));

        v1;
      
#L138248.   v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.this$0|]  := v3 @type object;
#L13824c.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L138252.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138256.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13825c.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.firstNode|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.firstNode:()Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @type virtual;
#L138262.   v1:= temp  @type object;
#L138264.   v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]  := v1 @type object;
#L138268.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]   @type object;
#L13826c.   if v1 != 0 then goto L13827e;
#L138270.   v1:= 0  @length 4;
#L138272.   v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.nextItem|]  := v1 @type object;
#L138276.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13827c.   return @void ;
#L13827e.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]   @type object;
#L138282.   v1:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L138286.   goto L138272;
#L138288.   v1:= Exception  @type object;
#L13828a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138290.   throw v1;
  catch  [|any|] @[L13825c..L138276] goto L138288;
  catch  [|any|] @[L13827e..L138286] goto L138288;

   }
    procedure [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.succ|] ([|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] v2 @type (this), [|java:util:concurrent:LinkedBlockingDeque$Node|] v3 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.succ:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v0 @varname [|s|] @scope ((L0004,L0007), (L0008,L0015));


        v1;
      
#L1382b8.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.nextNode|](v2, v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.nextNode:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @type virtual;
#L1382be.   v0:= temp  @type object;
#L1382c0.   if v0 != 0 then goto L1382c8;
#L1382c4.   v0:= 0  @length 4;
#L1382c6.   return v0  @type object;
#L1382c8.   v1:= v0.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L1382cc.   if v1 != 0 then goto L1382c6;
#L1382d0.   if v0 != v3 then goto L1382de;
#L1382d4.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.firstNode|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.firstNode:()Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @type virtual;
#L1382da.   v0:= temp  @type object;
#L1382dc.   goto L1382c6;
#L1382de.   v3:= v0  @type object;
#L1382e0.   goto L1382b8;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.advance|] ([|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.advance:()V|] @Access  {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0004,L0024));

        v1;
      
#L1382f4.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.this$0|]   @type object;
#L1382f8.   v0:= v1.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L1382fc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138302.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]   @type object;
#L138306.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.succ|](v2, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.succ:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @type direct;
#L13830c.   v1:= temp  @type object;
#L13830e.   v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]  := v1 @type object;
#L138312.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]   @type object;
#L138316.   if v1 != 0 then goto L138328;
#L13831a.   v1:= 0  @length 4;
#L13831c.   v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.nextItem|]  := v1 @type object;
#L138320.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138326.   return @void ;
#L138328.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]   @type object;
#L13832c.   v1:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L138330.   goto L13831c;
#L138332.   v1:= Exception  @type object;
#L138334.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13833a.   throw v1;
  catch  [|any|] @[L138302..L138320] goto L138332;
  catch  [|any|] @[L138328..L138330] goto L138332;

   }
    procedure [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.firstNode|] () @owner [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.firstNode:()Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @Access ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.hasNext|] ([|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.hasNext:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L138360.   v0:= v1.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]   @type object;
#L138364.   if v0 == 0 then goto L13836c;
#L138368.   v0:= 1  @length 4;
#L13836a.   return v0;
#L13836c.   v0:= 0  @length 4;
#L13836e.   goto L13836a;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|] ([|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|x|] @scope ((L0010,L0014));

        v1;
      
#L138380.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]   @type object;
#L138384.   if v1 != 0 then goto L138394;
#L138388.   v1:= new [|java:util:NoSuchElementException|];
#L13838c.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L138392.   throw v1;
#L138394.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.next|]   @type object;
#L138398.   v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.lastRet|]  := v1 @type object;
#L13839c.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.nextItem|]   @type object;
#L1383a0.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.advance|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.advance:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @type virtual;
#L1383a6.   return v0  @type object;

   }
    procedure [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.nextNode|] ([|java:util:concurrent:LinkedBlockingDeque$Node|] v0 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.nextNode:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @Access ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.remove|] ([|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] v3 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.remove:()V|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0011,L0026));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|n|] @scope ((L0002,L0026));

        v2;
      
#L1383b8.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.lastRet|]   @type object;
#L1383bc.   if v1 != 0 then goto L1383cc;
#L1383c0.   v2:= new [|java:lang:IllegalStateException|];
#L1383c4.   call temp:=  [|java:lang:IllegalStateException.<init>|](v2) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1383ca.   throw v2;
#L1383cc.   v2:= 0  @length 4;
#L1383ce.   v3.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.lastRet|]  := v2 @type object;
#L1383d2.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.this$0|]   @type object;
#L1383d6.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L1383da.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1383e0.   v2:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L1383e4.   if v2 == 0 then goto L1383f2;
#L1383e8.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque$AbstractItr.this$0|]   @type object;
#L1383ec.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlink|](v2, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlink:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L1383f2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1383f8.   return @void ;
#L1383fa.   v2:= Exception  @type object;
#L1383fc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138402.   throw v2;
  catch  [|any|] @[L1383e0..L1383f2] goto L1383fa;

   }
record [|java:util:concurrent:LinkedBlockingDeque$DescendingItr|]  @type class @AccessFlag   extends [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] {
      [|java:util:concurrent:LinkedBlockingDeque|] [|java:util:concurrent:LinkedBlockingDeque$DescendingItr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque$DescendingItr.<init>|] ([|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] v0 @type (this), [|java:util:concurrent:LinkedBlockingDeque|] v1 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$DescendingItr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;


      
#L138420.   v0.[|java:util:concurrent:LinkedBlockingDeque$DescendingItr.this$0|]  := v1 @type object;
#L138424.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @type direct;
#L13842a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque$DescendingItr.<init>|] ([|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] v0 @type (this), [|java:util:concurrent:LinkedBlockingDeque|] v1 @type (object), [|java:util:concurrent:LinkedBlockingDeque$1|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$DescendingItr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;Ljava/util/concurrent/LinkedBlockingDeque$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;




      
#L13843c.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$DescendingItr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$DescendingItr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] @type direct;
#L138442.   return @void ;

   }
    procedure [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$DescendingItr.firstNode|] ([|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$DescendingItr;.firstNode:()Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @Access  {
      local temp ;


        v0;
      
#L138454.   v0:= v1.[|java:util:concurrent:LinkedBlockingDeque$DescendingItr.this$0|]   @type object;
#L138458.   v0:= v0.[|java:util:concurrent:LinkedBlockingDeque.last|]   @type object;
#L13845c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$DescendingItr.nextNode|] ([|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] v1 @type (this), [|java:util:concurrent:LinkedBlockingDeque$Node|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$DescendingItr;.nextNode:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @Access  {
      local temp ;



        v0;
      
#L138470.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]   @type object;
#L138474.   return v0  @type object;

   }
record [|java:util:concurrent:LinkedBlockingDeque$Itr|]  @type class @AccessFlag   extends [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] {
      [|java:util:concurrent:LinkedBlockingDeque|] [|java:util:concurrent:LinkedBlockingDeque$Itr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque$Itr.<init>|] ([|java:util:concurrent:LinkedBlockingDeque$Itr|] v0 @type (this), [|java:util:concurrent:LinkedBlockingDeque|] v1 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$Itr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Itr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;)V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;


      
#L138488.   v0.[|java:util:concurrent:LinkedBlockingDeque$Itr.this$0|]  := v1 @type object;
#L13848c.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$AbstractItr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$AbstractItr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$AbstractItr|] @type direct;
#L138492.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque$Itr.<init>|] ([|java:util:concurrent:LinkedBlockingDeque$Itr|] v0 @type (this), [|java:util:concurrent:LinkedBlockingDeque|] v1 @type (object), [|java:util:concurrent:LinkedBlockingDeque$1|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$Itr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Itr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;Ljava/util/concurrent/LinkedBlockingDeque$1;)V|] @Access SYNTHETIC_CONSTRUCTOR {
      local temp ;




      
#L1384a4.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$Itr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Itr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$Itr|] @type direct;
#L1384aa.   return @void ;

   }
    procedure [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$Itr.firstNode|] ([|java:util:concurrent:LinkedBlockingDeque$Itr|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque$Itr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Itr;.firstNode:()Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @Access  {
      local temp ;


        v0;
      
#L1384bc.   v0:= v1.[|java:util:concurrent:LinkedBlockingDeque$Itr.this$0|]   @type object;
#L1384c0.   v0:= v0.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L1384c4.   return v0  @type object;

   }
    procedure [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$Itr.nextNode|] ([|java:util:concurrent:LinkedBlockingDeque$Itr|] v1 @type (this), [|java:util:concurrent:LinkedBlockingDeque$Node|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$Itr|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Itr;.nextNode:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Ljava/util/concurrent/LinkedBlockingDeque$Node;|] @Access  {
      local temp ;



        v0;
      
#L1384d8.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L1384dc.   return v0  @type object;

   }
record [|java:util:concurrent:LinkedBlockingDeque$Node|]  @type class @AccessFlag FINAL  {
      [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque$Node.item|]    @AccessFlag ;
      [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$Node.next|]    @AccessFlag ;
      [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque$Node.prev|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque$Node.<init>|] ([|java:util:concurrent:LinkedBlockingDeque$Node|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque$Node|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Node;.<init>:(Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;



      
#L1384f0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1384f6.   v0.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]  := v1 @type object;
#L1384fa.   return @void ;

   }
record [|java:util:concurrent:LinkedBlockingDeque|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractQueue|], [|java:util:concurrent:BlockingDeque|], [|java:io:Serializable|] {
      [|int|] [|java:util:concurrent:LinkedBlockingDeque.capacity|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:concurrent:LinkedBlockingDeque.count|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque.first|]    @AccessFlag TRANSIENT;
      [|java:util:concurrent:LinkedBlockingDeque$Node|] [|java:util:concurrent:LinkedBlockingDeque.last|]    @AccessFlag TRANSIENT;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:LinkedBlockingDeque.lock|]    @AccessFlag FINAL;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:LinkedBlockingDeque.notEmpty|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:LinkedBlockingDeque.notFull|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:concurrent:LinkedBlockingDeque.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.<init>|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L13850c.    v0:= nan;
#L138512.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.<init>|](v1, v0) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138518.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.<init>|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L13852c.   call temp:=  [|java:util:AbstractQueue.<init>|](v1) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L138532.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L138536.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L13853c.   v1.[|java:util:concurrent:LinkedBlockingDeque.lock|]  := v0 @type object;
#L138540.   v0:= v1.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138544.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13854a.   v0:= temp  @type object;
#L13854c.   v1.[|java:util:concurrent:LinkedBlockingDeque.notEmpty|]  := v0 @type object;
#L138550.   v0:= v1.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138554.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13855a.   v0:= temp  @type object;
#L13855c.   v1.[|java:util:concurrent:LinkedBlockingDeque.notFull|]  := v0 @type object;
#L138560.   if v2 > 0 then goto L138570;
#L138564.   v0:= new [|java:lang:IllegalArgumentException|];
#L138568.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13856e.   throw v0;
#L138570.   v1.[|java:util:concurrent:LinkedBlockingDeque.capacity|]  := v2;
#L138574.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.<init>|] ([|java:util:concurrent:LinkedBlockingDeque|] v5 @type (this), [|java:util:Collection|] v6 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L0019,L0021), (L0026,L0039));
        [|java:util:Iterator|] v1 @varname [|i$|] @scope ((L000f,L0021), (L0026,L003d));
        [|java:util:concurrent:locks:ReentrantLock|] v2 @varname [|lock|] @scope ((L0008,L003d));


        v3;
        v4;
      
#L138588.    v3:= nan;
#L13858e.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.<init>|](v5, v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138594.   v2:= v5.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138598.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13859e.   call temp:=  [|java:util:Collection.iterator|](v6) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L1385a4.   v1:= temp  @type object;
#L1385a6.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1385ac.   v3:= temp;
#L1385ae.   if v3 == 0 then goto L1385fa;
#L1385b2.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1385b8.   v0:= temp  @type object;
#L1385ba.   if v0 != 0 then goto L1385d4;
#L1385be.   v3:= new [|java:lang:NullPointerException|];
#L1385c2.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1385c8.   throw v3;
#L1385ca.   v3:= Exception  @type object;
#L1385cc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1385d2.   throw v3;
#L1385d4.   v3:= new [|java:util:concurrent:LinkedBlockingDeque$Node|];
#L1385d8.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$Node.<init>|](v3, v0) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$Node|] @type direct;
#L1385de.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.linkLast|](v5, v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.linkLast:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L1385e4.   v3:= temp;
#L1385e6.   if v3 != 0 then goto L1385a6;
#L1385ea.   v3:= new [|java:lang:IllegalStateException|];
#L1385ee.   v4:= "Deque full" @type (object, string);
#L1385f2.   call temp:=  [|java:lang:IllegalStateException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L1385f8.   throw v3;
#L1385fa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138600.   return @void ;
  catch  [|any|] @[L13859e..L1385ca] goto L1385ca;
  catch  [|any|] @[L1385d4..L1385fa] goto L1385ca;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.linkFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this), [|java:util:concurrent:LinkedBlockingDeque$Node|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.linkFirst:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v0 @varname [|f|] @scope ((L000a,L0024));


        v1;
        v2;
      
#L138628.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L13862c.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque.capacity|] ;
#L138630.   if v1 < v2 then goto L138638;
#L138634.   v1:= 0  @length 4;
#L138636.   return v1;
#L138638.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L13863c.   v4.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]  := v0 @type object;
#L138640.   v3.[|java:util:concurrent:LinkedBlockingDeque.first|]  := v4 @type object;
#L138644.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.last|]   @type object;
#L138648.   if v1 != 0 then goto L13866a;
#L13864c.   v3.[|java:util:concurrent:LinkedBlockingDeque.last|]  := v4 @type object;
#L138650.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L138654.   v1:= v1 + 1;
#L138658.   v3.[|java:util:concurrent:LinkedBlockingDeque.count|]  := v1;
#L13865c.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.notEmpty|]   @type object;
#L138660.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v1) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L138666.   v1:= 1  @length 4;
#L138668.   goto L138636;
#L13866a.   v0.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]  := v4 @type object;
#L13866e.   goto L138650;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.linkLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this), [|java:util:concurrent:LinkedBlockingDeque$Node|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.linkLast:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v0 @varname [|l|] @scope ((L000a,L0024));


        v1;
        v2;
      
#L138680.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L138684.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque.capacity|] ;
#L138688.   if v1 < v2 then goto L138690;
#L13868c.   v1:= 0  @length 4;
#L13868e.   return v1;
#L138690.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.last|]   @type object;
#L138694.   v4.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]  := v0 @type object;
#L138698.   v3.[|java:util:concurrent:LinkedBlockingDeque.last|]  := v4 @type object;
#L13869c.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L1386a0.   if v1 != 0 then goto L1386c2;
#L1386a4.   v3.[|java:util:concurrent:LinkedBlockingDeque.first|]  := v4 @type object;
#L1386a8.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L1386ac.   v1:= v1 + 1;
#L1386b0.   v3.[|java:util:concurrent:LinkedBlockingDeque.count|]  := v1;
#L1386b4.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.notEmpty|]   @type object;
#L1386b8.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v1) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1386be.   v1:= 1  @length 4;
#L1386c0.   goto L13868e;
#L1386c2.   v0.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]  := v4 @type object;
#L1386c6.   goto L1386a8;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.readObject|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this), [|java:io:ObjectInputStream|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v0 @varname [|item|] @scope ((L000f,L0016));


        v1;
        v2;
      
#L1386d8.   v2:= 0  @length 4;
#L1386da.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v4) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1386e0.   v1:= 0  @length 4;
#L1386e2.   v3.[|java:util:concurrent:LinkedBlockingDeque.count|]  := v1;
#L1386e6.   v3.[|java:util:concurrent:LinkedBlockingDeque.first|]  := v2 @type object;
#L1386ea.   v3.[|java:util:concurrent:LinkedBlockingDeque.last|]  := v2 @type object;
#L1386ee.   call temp:=  [|java:io:ObjectInputStream.readObject|](v4) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1386f4.   v0:= temp  @type object;
#L1386f6.   if v0 != 0 then goto L1386fc;
#L1386fa.   return @void ;
#L1386fc.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.add|](v3, v0) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138702.   goto L1386ee;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.unlinkFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v4 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkFirst:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v0 @varname [|f|] @scope ((L0003,L0024));
        [|java:lang:Object|] v1 @varname [|item|] @scope ((L000b,L0024));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v2 @varname [|n|] @scope ((L0009,L0024));

        v3;
      
#L138714.   v3:= 0  @length 4;
#L138716.   v0:= v4.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L13871a.   if v0 != 0 then goto L138722;
#L13871e.   v1:= v3  @type object;
#L138720.   return v1  @type object;
#L138722.   v2:= v0.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L138726.   v1:= v0.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L13872a.   v0.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]  := v3 @type object;
#L13872e.   v0.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]  := v0 @type object;
#L138732.   v4.[|java:util:concurrent:LinkedBlockingDeque.first|]  := v2 @type object;
#L138736.   if v2 != 0 then goto L138756;
#L13873a.   v4.[|java:util:concurrent:LinkedBlockingDeque.last|]  := v3 @type object;
#L13873e.   v3:= v4.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L138742.   v3:= v3 + -1;
#L138746.   v4.[|java:util:concurrent:LinkedBlockingDeque.count|]  := v3;
#L13874a.   v3:= v4.[|java:util:concurrent:LinkedBlockingDeque.notFull|]   @type object;
#L13874e.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v3) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L138754.   goto L138720;
#L138756.   v2.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]  := v3 @type object;
#L13875a.   goto L13873e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.unlinkLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v4 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkLast:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v0 @varname [|item|] @scope ((L000b,L0024));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|l|] @scope ((L0003,L0024));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v2 @varname [|p|] @scope ((L0009,L0024));

        v3;
      
#L13876c.   v3:= 0  @length 4;
#L13876e.   v1:= v4.[|java:util:concurrent:LinkedBlockingDeque.last|]   @type object;
#L138772.   if v1 != 0 then goto L13877a;
#L138776.   v0:= v3  @type object;
#L138778.   return v0  @type object;
#L13877a.   v2:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]   @type object;
#L13877e.   v0:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L138782.   v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]  := v3 @type object;
#L138786.   v1.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]  := v1 @type object;
#L13878a.   v4.[|java:util:concurrent:LinkedBlockingDeque.last|]  := v2 @type object;
#L13878e.   if v2 != 0 then goto L1387ae;
#L138792.   v4.[|java:util:concurrent:LinkedBlockingDeque.first|]  := v3 @type object;
#L138796.   v3:= v4.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L13879a.   v3:= v3 + -1;
#L13879e.   v4.[|java:util:concurrent:LinkedBlockingDeque.count|]  := v3;
#L1387a2.   v3:= v4.[|java:util:concurrent:LinkedBlockingDeque.notFull|]   @type object;
#L1387a6.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v3) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1387ac.   goto L138778;
#L1387ae.   v2.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]  := v3 @type object;
#L1387b2.   goto L138796;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.writeObject|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|p|] @scope ((L000a,L001c));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0021));


        v2;
      
#L1387c4.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L1387c8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1387ce.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v4) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1387d4.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L1387d8.   if v1 == 0 then goto L1387ec;
#L1387dc.   v2:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L1387e0.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1387e6.   v1:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L1387ea.   goto L1387d8;
#L1387ec.   v2:= 0  @length 4;
#L1387ee.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1387f4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1387fa.   return @void ;
#L1387fc.   v2:= Exception  @type object;
#L1387fe.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138804.   throw v2;
  catch  [|any|] @[L1387ce..L1387f4] goto L1387fc;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.add|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L138824.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.addLast|](v1, v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.addLast:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L13882a.   v0:= 1  @length 4;
#L13882c.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.addFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.addFirst:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L138840.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.offerFirst|](v2, v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offerFirst:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138846.   v0:= temp;
#L138848.   if v0 != 0 then goto L13885c;
#L13884c.   v0:= new [|java:lang:IllegalStateException|];
#L138850.   v1:= "Deque full" @type (object, string);
#L138854.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L13885a.   throw v0;
#L13885c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.addLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.addLast:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L138870.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.offerLast|](v2, v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offerLast:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138876.   v0:= temp;
#L138878.   if v0 != 0 then goto L13888c;
#L13887c.   v0:= new [|java:lang:IllegalStateException|];
#L138880.   v1:= "Deque full" @type (object, string);
#L138884.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L13888a.   throw v0;
#L13888c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.clear|] ([|java:util:concurrent:LinkedBlockingDeque|] v4 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.clear:()V|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v2 @varname [|n|] @scope ((L000e,L0016));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v0 @varname [|f|] @scope ((L0007,L0027));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0002,L002c));

        v3;
      
#L1388a0.   v1:= v4.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L1388a4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1388aa.   v0:= v4.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L1388ae.   if v0 == 0 then goto L1388cc;
#L1388b2.   v3:= 0  @length 4;
#L1388b4.   v0.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]  := v3 @type object;
#L1388b8.   v2:= v0.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L1388bc.   v3:= 0  @length 4;
#L1388be.   v0.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]  := v3 @type object;
#L1388c2.   v3:= 0  @length 4;
#L1388c4.   v0.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]  := v3 @type object;
#L1388c8.   v0:= v2  @type object;
#L1388ca.   goto L1388ae;
#L1388cc.   v3:= 0  @length 4;
#L1388ce.   v4.[|java:util:concurrent:LinkedBlockingDeque.last|]  := v3 @type object;
#L1388d2.   v4.[|java:util:concurrent:LinkedBlockingDeque.first|]  := v3 @type object;
#L1388d6.   v3:= 0  @length 4;
#L1388d8.   v4.[|java:util:concurrent:LinkedBlockingDeque.count|]  := v3;
#L1388dc.   v3:= v4.[|java:util:concurrent:LinkedBlockingDeque.notFull|]   @type object;
#L1388e0.   call temp:=  [|java:util:concurrent:locks:Condition.signalAll|](v3) @signature [|Ljava/util/concurrent/locks/Condition;.signalAll:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1388e6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1388ec.   return @void ;
#L1388ee.   v3:= Exception  @type object;
#L1388f0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1388f6.   throw v3;
  catch  [|any|] @[L1388aa..L1388e6] goto L1388ee;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.contains|] ([|java:util:concurrent:LinkedBlockingDeque|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|p|] @scope ((L000b,L001d));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0006,L0022));


        v2;
        v3;
      
#L138914.   v2:= 0  @length 4;
#L138916.   if v5 != 0 then goto L13891c;
#L13891a.   return v2;
#L13891c.   v0:= v4.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138920.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138926.   v1:= v4.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L13892a.   if v1 == 0 then goto L138940;
#L13892e.   v3:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L138932.   call temp:=  [|java:lang:Object.equals|](v5, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L138938.   v3:= temp;
#L13893a.   if v3 == 0 then goto L138948;
#L13893e.   v2:= 1  @length 4;
#L138940.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138946.   goto L13891a;
#L138948.   v1:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L13894c.   goto L13892a;
#L13894e.   v2:= Exception  @type object;
#L138950.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138956.   throw v2;
  catch  [|any|] @[L138926..L138938] goto L13894e;
  catch  [|any|] @[L138948..L13894c] goto L13894e;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:LinkedBlockingDeque.descendingIterator|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.descendingIterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L13897c.   v0:= new [|java:util:concurrent:LinkedBlockingDeque$DescendingItr|];
#L138980.   v1:= 0  @length 4;
#L138982.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$DescendingItr.<init>|](v0, v2, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$DescendingItr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;Ljava/util/concurrent/LinkedBlockingDeque$1;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$DescendingItr|] @type direct;
#L138988.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:LinkedBlockingDeque.drainTo|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.drainTo:(Ljava/util/Collection;)I|] @Access PUBLIC {
      local temp ;



        v0;
      
#L13899c.    v0:= nan;
#L1389a2.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.drainTo|](v1, v2, v0) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.drainTo:(Ljava/util/Collection;I)I|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L1389a8.   v0:= temp;
#L1389aa.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:LinkedBlockingDeque.drainTo|] ([|java:util:concurrent:LinkedBlockingDeque|] v4 @type (this), [|java:util:Collection|] v5 @type (object), [|int|] v6) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.drainTo:(Ljava/util/Collection;I)I|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|i|] @scope ((L0020,L002f), (L0034,L0038));
        [|int|] v2 @varname [|n|] @scope ((L001f,L002f), (L0034,L0038));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0016,L0038));



        v3;
      
#L1389bc.   if v5 != 0 then goto L1389cc;
#L1389c0.   v3:= new [|java:lang:NullPointerException|];
#L1389c4.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1389ca.   throw v3;
#L1389cc.   if v5 != v4 then goto L1389dc;
#L1389d0.   v3:= new [|java:lang:IllegalArgumentException|];
#L1389d4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1389da.   throw v3;
#L1389dc.   if v6 > 0 then goto L1389e4;
#L1389e0.   v2:= 0  @length 4;
#L1389e2.   return v2;
#L1389e4.   v1:= v4.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L1389e8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1389ee.   v3:= v4.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L1389f2.   call temp:=  [|java:lang:Math.min|](v6, v3) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L1389f8.   v2:= temp;
#L1389fa.   v0:= 0  @length 4;
#L1389fc.   if v0 >= v2 then goto L138a24;
#L138a00.   v3:= v4.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L138a04.   v3:= v3.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L138a08.   call temp:=  [|java:util:Collection.add|](v5, v3) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L138a0e.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlinkFirst|](v4) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138a14.   v0:= v0 + 1;
#L138a18.   goto L1389fc;
#L138a1a.   v3:= Exception  @type object;
#L138a1c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138a22.   throw v3;
#L138a24.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138a2a.   goto L1389e2;
  catch  [|any|] @[L1389ee..L138a14] goto L138a1a;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.element|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.element:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L138a48.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.getFirst|](v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.getFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138a4e.   v0:= temp  @type object;
#L138a50.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.getFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.getFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|x|] @scope ((L0004,L000d));

        v1;
      
#L138a64.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.peekFirst|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.peekFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138a6a.   v0:= temp  @type object;
#L138a6c.   if v0 != 0 then goto L138a7c;
#L138a70.   v1:= new [|java:util:NoSuchElementException|];
#L138a74.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L138a7a.   throw v1;
#L138a7c.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.getLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.getLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|x|] @scope ((L0004,L000d));

        v1;
      
#L138a90.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.peekLast|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.peekLast:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138a96.   v0:= temp  @type object;
#L138a98.   if v0 != 0 then goto L138aa8;
#L138a9c.   v1:= new [|java:util:NoSuchElementException|];
#L138aa0.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L138aa6.   throw v1;
#L138aa8.   return v0  @type object;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:LinkedBlockingDeque.iterator|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L138abc.   v0:= new [|java:util:concurrent:LinkedBlockingDeque$Itr|];
#L138ac0.   v1:= 0  @length 4;
#L138ac2.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$Itr.<init>|](v0, v2, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Itr;.<init>:(Ljava/util/concurrent/LinkedBlockingDeque;Ljava/util/concurrent/LinkedBlockingDeque$1;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$Itr|] @type direct;
#L138ac8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.offer|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L138adc.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.offerLast|](v1, v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offerLast:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138ae2.   v0:= temp;
#L138ae4.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.offer|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;





        v0;
      
#L138af8.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.offerLast|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offerLast:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138afe.   v0:= temp;
#L138b00.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.offerFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offerFirst:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L000f,L001f));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|node|] @scope ((L000d,L001f));


        v2;
      
#L138b14.   if v4 != 0 then goto L138b24;
#L138b18.   v2:= new [|java:lang:NullPointerException|];
#L138b1c.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L138b22.   throw v2;
#L138b24.   v1:= new [|java:util:concurrent:LinkedBlockingDeque$Node|];
#L138b28.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$Node.<init>|](v1, v4) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$Node|] @type direct;
#L138b2e.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138b32.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138b38.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.linkFirst|](v3, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.linkFirst:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138b3e.   v2:= temp;
#L138b40.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138b46.   return v2;
#L138b48.   v2:= Exception  @type object;
#L138b4a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138b50.   throw v2;
  catch  [|any|] @[L138b38..L138b3e] goto L138b48;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.offerFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8, [|java:util:concurrent:TimeUnit|] v10 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offerFirst:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0013,L0035));
        [|long|] v1 @varname [|nanos|] @scope ((L0011,L0035));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v3 @varname [|node|] @scope ((L000d,L0035));




        v2;
        v4;
        v5;
      
#L138b70.   if v7 != 0 then goto L138b80;
#L138b74.   v4:= new [|java:lang:NullPointerException|];
#L138b78.   call temp:=  [|java:lang:NullPointerException.<init>|](v4) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L138b7e.   throw v4;
#L138b80.   v3:= new [|java:util:concurrent:LinkedBlockingDeque$Node|];
#L138b84.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$Node.<init>|](v3, v7) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$Node|] @type direct;
#L138b8a.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v10, v8, v9) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L138b90.   v1:= temp  @type wide;
#L138b92.   v0:= v6.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138b96.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138b9c.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.linkFirst|](v6, v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.linkFirst:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138ba2.   v4:= temp;
#L138ba4.   if v4 != 0 then goto L138bcc;
#L138ba8.   v4:= 0  @length wide16;
#L138bac.   v4:= cmp(v1,v4);
#L138bb0.   if v4 > 0 then goto L138bbe;
#L138bb4.   v4:= 0  @length 4;
#L138bb6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138bbc.   return v4;
#L138bbe.   v4:= v6.[|java:util:concurrent:LinkedBlockingDeque.notFull|]   @type object;
#L138bc2.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v4, v1, v2) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L138bc8.   v1:= temp  @type wide;
#L138bca.   goto L138b9c;
#L138bcc.   v4:= 1  @length 4;
#L138bce.   goto L138bb6;
#L138bd0.   v4:= Exception  @type object;
#L138bd2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138bd8.   throw v4;
  catch  [|any|] @[L138b9c..L138ba2] goto L138bd0;
  catch  [|any|] @[L138bbe..L138bc8] goto L138bd0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.offerLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offerLast:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L000f,L001f));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|node|] @scope ((L000d,L001f));


        v2;
      
#L138c00.   if v4 != 0 then goto L138c10;
#L138c04.   v2:= new [|java:lang:NullPointerException|];
#L138c08.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L138c0e.   throw v2;
#L138c10.   v1:= new [|java:util:concurrent:LinkedBlockingDeque$Node|];
#L138c14.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$Node.<init>|](v1, v4) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$Node|] @type direct;
#L138c1a.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138c1e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138c24.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.linkLast|](v3, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.linkLast:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138c2a.   v2:= temp;
#L138c2c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138c32.   return v2;
#L138c34.   v2:= Exception  @type object;
#L138c36.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138c3c.   throw v2;
  catch  [|any|] @[L138c24..L138c2a] goto L138c34;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.offerLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8, [|java:util:concurrent:TimeUnit|] v10 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.offerLast:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0013,L0035));
        [|long|] v1 @varname [|nanos|] @scope ((L0011,L0035));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v3 @varname [|node|] @scope ((L000d,L0035));




        v2;
        v4;
        v5;
      
#L138c5c.   if v7 != 0 then goto L138c6c;
#L138c60.   v4:= new [|java:lang:NullPointerException|];
#L138c64.   call temp:=  [|java:lang:NullPointerException.<init>|](v4) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L138c6a.   throw v4;
#L138c6c.   v3:= new [|java:util:concurrent:LinkedBlockingDeque$Node|];
#L138c70.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$Node.<init>|](v3, v7) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$Node|] @type direct;
#L138c76.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v10, v8, v9) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L138c7c.   v1:= temp  @type wide;
#L138c7e.   v0:= v6.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138c82.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138c88.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.linkLast|](v6, v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.linkLast:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138c8e.   v4:= temp;
#L138c90.   if v4 != 0 then goto L138cb8;
#L138c94.   v4:= 0  @length wide16;
#L138c98.   v4:= cmp(v1,v4);
#L138c9c.   if v4 > 0 then goto L138caa;
#L138ca0.   v4:= 0  @length 4;
#L138ca2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138ca8.   return v4;
#L138caa.   v4:= v6.[|java:util:concurrent:LinkedBlockingDeque.notFull|]   @type object;
#L138cae.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v4, v1, v2) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L138cb4.   v1:= temp  @type wide;
#L138cb6.   goto L138c88;
#L138cb8.   v4:= 1  @length 4;
#L138cba.   goto L138ca2;
#L138cbc.   v4:= Exception  @type object;
#L138cbe.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138cc4.   throw v4;
  catch  [|any|] @[L138c88..L138c8e] goto L138cbc;
  catch  [|any|] @[L138caa..L138cb4] goto L138cbc;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.peek|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.peek:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L138cec.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.peekFirst|](v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.peekFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138cf2.   v0:= temp  @type object;
#L138cf4.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.peekFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.peekFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0018));

        v1;
      
#L138d08.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138d0c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138d12.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L138d16.   if v1 != 0 then goto L138d24;
#L138d1a.   v1:= 0  @length 4;
#L138d1c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138d22.   return v1  @type object;
#L138d24.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L138d28.   v1:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L138d2c.   goto L138d1c;
#L138d2e.   v1:= Exception  @type object;
#L138d30.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138d36.   throw v1;
  catch  [|any|] @[L138d12..L138d16] goto L138d2e;
  catch  [|any|] @[L138d24..L138d2c] goto L138d2e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.peekLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.peekLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0018));

        v1;
      
#L138d5c.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138d60.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138d66.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque.last|]   @type object;
#L138d6a.   if v1 != 0 then goto L138d78;
#L138d6e.   v1:= 0  @length 4;
#L138d70.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138d76.   return v1  @type object;
#L138d78.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque.last|]   @type object;
#L138d7c.   v1:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L138d80.   goto L138d70;
#L138d82.   v1:= Exception  @type object;
#L138d84.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138d8a.   throw v1;
  catch  [|any|] @[L138d66..L138d6a] goto L138d82;
  catch  [|any|] @[L138d78..L138d80] goto L138d82;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.poll|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.poll:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L138db0.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.pollFirst|](v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.pollFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138db6.   v0:= temp  @type object;
#L138db8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.poll|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this), [|long|] v2, [|java:util:concurrent:TimeUnit|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;




        v0;
      
#L138dcc.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.pollFirst|](v1, v2, v3, v4) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.pollFirst:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138dd2.   v0:= temp  @type object;
#L138dd4.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.pollFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.pollFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0012));

        v1;
      
#L138de8.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138dec.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138df2.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlinkFirst|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138df8.   v1:= temp  @type object;
#L138dfa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138e00.   return v1  @type object;
#L138e02.   v1:= Exception  @type object;
#L138e04.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138e0a.   throw v1;
  catch  [|any|] @[L138df2..L138df8] goto L138e02;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.pollFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v6 @type (this), [|long|] v7, [|java:util:concurrent:TimeUnit|] v9 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.pollFirst:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v3 @varname [|x|] @scope ((L000d,L0016), (L001a,L0021));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0006,L0026));
        [|long|] v1 @varname [|nanos|] @scope ((L0004,L0026));



        v2;
        v4;
        v5;
      
#L138e28.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v9, v7, v8) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L138e2e.   v1:= temp  @type wide;
#L138e30.   v0:= v6.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138e34.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138e3a.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlinkFirst|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138e40.   v3:= temp  @type object;
#L138e42.   if v3 != 0 then goto L138e54;
#L138e46.   v4:= 0  @length wide16;
#L138e4a.   v4:= cmp(v1,v4);
#L138e4e.   if v4 > 0 then goto L138e5c;
#L138e52.   v3:= 0  @length 4;
#L138e54.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138e5a.   return v3  @type object;
#L138e5c.   v4:= v6.[|java:util:concurrent:LinkedBlockingDeque.notEmpty|]   @type object;
#L138e60.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v4, v1, v2) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L138e66.   v1:= temp  @type wide;
#L138e68.   goto L138e3a;
#L138e6a.   v4:= Exception  @type object;
#L138e6c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138e72.   throw v4;
  catch  [|any|] @[L138e3a..L138e40] goto L138e6a;
  catch  [|any|] @[L138e5c..L138e66] goto L138e6a;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.pollLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.pollLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0012));

        v1;
      
#L138e98.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138e9c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138ea2.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlinkLast|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkLast:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138ea8.   v1:= temp  @type object;
#L138eaa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138eb0.   return v1  @type object;
#L138eb2.   v1:= Exception  @type object;
#L138eb4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138eba.   throw v1;
  catch  [|any|] @[L138ea2..L138ea8] goto L138eb2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.pollLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v6 @type (this), [|long|] v7, [|java:util:concurrent:TimeUnit|] v9 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.pollLast:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v3 @varname [|x|] @scope ((L000d,L0016), (L001a,L0021));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0006,L0026));
        [|long|] v1 @varname [|nanos|] @scope ((L0004,L0026));



        v2;
        v4;
        v5;
      
#L138ed8.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v9, v7, v8) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L138ede.   v1:= temp  @type wide;
#L138ee0.   v0:= v6.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138ee4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138eea.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlinkLast|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkLast:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138ef0.   v3:= temp  @type object;
#L138ef2.   if v3 != 0 then goto L138f04;
#L138ef6.   v4:= 0  @length wide16;
#L138efa.   v4:= cmp(v1,v4);
#L138efe.   if v4 > 0 then goto L138f0c;
#L138f02.   v3:= 0  @length 4;
#L138f04.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138f0a.   return v3  @type object;
#L138f0c.   v4:= v6.[|java:util:concurrent:LinkedBlockingDeque.notEmpty|]   @type object;
#L138f10.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v4, v1, v2) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L138f16.   v1:= temp  @type wide;
#L138f18.   goto L138eea;
#L138f1a.   v4:= Exception  @type object;
#L138f1c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138f22.   throw v4;
  catch  [|any|] @[L138eea..L138ef0] goto L138f1a;
  catch  [|any|] @[L138f0c..L138f16] goto L138f1a;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.pop|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.pop:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L138f48.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.removeFirst|](v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.removeFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138f4e.   v0:= temp  @type object;
#L138f50.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.push|] ([|java:util:concurrent:LinkedBlockingDeque|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.push:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



      
#L138f64.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.addFirst|](v0, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.addFirst:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138f6a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.put|] ([|java:util:concurrent:LinkedBlockingDeque|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.put:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



      
#L138f7c.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.putLast|](v0, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.putLast:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L138f82.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.putFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.putFirst:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L000f,L0027));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|node|] @scope ((L000d,L0027));


        v2;
      
#L138f94.   if v4 != 0 then goto L138fa4;
#L138f98.   v2:= new [|java:lang:NullPointerException|];
#L138f9c.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L138fa2.   throw v2;
#L138fa4.   v1:= new [|java:util:concurrent:LinkedBlockingDeque$Node|];
#L138fa8.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$Node.<init>|](v1, v4) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$Node|] @type direct;
#L138fae.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L138fb2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138fb8.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.linkFirst|](v3, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.linkFirst:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L138fbe.   v2:= temp;
#L138fc0.   if v2 != 0 then goto L138fda;
#L138fc4.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque.notFull|]   @type object;
#L138fc8.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v2) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L138fce.   goto L138fb8;
#L138fd0.   v2:= Exception  @type object;
#L138fd2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138fd8.   throw v2;
#L138fda.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L138fe0.   return @void ;
  catch  [|any|] @[L138fb8..L138fce] goto L138fd0;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.putLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.putLast:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L000f,L0027));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|node|] @scope ((L000d,L0027));


        v2;
      
#L139000.   if v4 != 0 then goto L139010;
#L139004.   v2:= new [|java:lang:NullPointerException|];
#L139008.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13900e.   throw v2;
#L139010.   v1:= new [|java:util:concurrent:LinkedBlockingDeque$Node|];
#L139014.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque$Node.<init>|](v1, v4) @signature [|Ljava/util/concurrent/LinkedBlockingDeque$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque$Node|] @type direct;
#L13901a.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L13901e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139024.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.linkLast|](v3, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.linkLast:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L13902a.   v2:= temp;
#L13902c.   if v2 != 0 then goto L139046;
#L139030.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque.notFull|]   @type object;
#L139034.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v2) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13903a.   goto L139024;
#L13903c.   v2:= Exception  @type object;
#L13903e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139044.   throw v2;
#L139046.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13904c.   return @void ;
  catch  [|any|] @[L139024..L13903a] goto L13903c;

   }
    procedure [|int|] [|java:util:concurrent:LinkedBlockingDeque.remainingCapacity|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.remainingCapacity:()I|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0013));

        v1;
        v2;
      
#L13906c.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L139070.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139076.   v1:= v3.[|java:util:concurrent:LinkedBlockingDeque.capacity|] ;
#L13907a.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L13907e.   v1:= v1 - v2  @type int;
#L139080.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139086.   return v1;
#L139088.   v1:= Exception  @type object;
#L13908a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139090.   throw v1;
  catch  [|any|] @[L139076..L13907e] goto L139088;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.remove|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.remove:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1390b0.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.removeFirst|](v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.removeFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L1390b6.   v0:= temp  @type object;
#L1390b8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.remove|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L1390cc.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.removeFirstOccurrence|](v1, v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.removeFirstOccurrence:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L1390d2.   v0:= temp;
#L1390d4.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.removeFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.removeFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|x|] @scope ((L0004,L000d));

        v1;
      
#L1390e8.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.pollFirst|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.pollFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L1390ee.   v0:= temp  @type object;
#L1390f0.   if v0 != 0 then goto L139100;
#L1390f4.   v1:= new [|java:util:NoSuchElementException|];
#L1390f8.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L1390fe.   throw v1;
#L139100.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.removeFirstOccurrence|] ([|java:util:concurrent:LinkedBlockingDeque|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.removeFirstOccurrence:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|p|] @scope ((L000b,L0020));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0006,L0025));


        v2;
        v3;
      
#L139114.   v2:= 0  @length 4;
#L139116.   if v5 != 0 then goto L13911c;
#L13911a.   return v2;
#L13911c.   v0:= v4.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L139120.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139126.   v1:= v4.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L13912a.   if v1 == 0 then goto L139146;
#L13912e.   v3:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L139132.   call temp:=  [|java:lang:Object.equals|](v5, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L139138.   v3:= temp;
#L13913a.   if v3 == 0 then goto L13914e;
#L13913e.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlink|](v4, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlink:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L139144.   v2:= 1  @length 4;
#L139146.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13914c.   goto L13911a;
#L13914e.   v1:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L139152.   goto L13912a;
#L139154.   v2:= Exception  @type object;
#L139156.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13915c.   throw v2;
  catch  [|any|] @[L139126..L139144] goto L139154;
  catch  [|any|] @[L13914e..L139152] goto L139154;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.removeLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.removeLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|x|] @scope ((L0004,L000d));

        v1;
      
#L139184.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.pollLast|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.pollLast:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L13918a.   v0:= temp  @type object;
#L13918c.   if v0 != 0 then goto L13919c;
#L139190.   v1:= new [|java:util:NoSuchElementException|];
#L139194.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L13919a.   throw v1;
#L13919c.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingDeque.removeLastOccurrence|] ([|java:util:concurrent:LinkedBlockingDeque|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.removeLastOccurrence:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|p|] @scope ((L000b,L0020));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0006,L0025));


        v2;
        v3;
      
#L1391b0.   v2:= 0  @length 4;
#L1391b2.   if v5 != 0 then goto L1391b8;
#L1391b6.   return v2;
#L1391b8.   v0:= v4.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L1391bc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1391c2.   v1:= v4.[|java:util:concurrent:LinkedBlockingDeque.last|]   @type object;
#L1391c6.   if v1 == 0 then goto L1391e2;
#L1391ca.   v3:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L1391ce.   call temp:=  [|java:lang:Object.equals|](v5, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L1391d4.   v3:= temp;
#L1391d6.   if v3 == 0 then goto L1391ea;
#L1391da.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlink|](v4, v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlink:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L1391e0.   v2:= 1  @length 4;
#L1391e2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1391e8.   goto L1391b6;
#L1391ea.   v1:= v1.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]   @type object;
#L1391ee.   goto L1391c6;
#L1391f0.   v2:= Exception  @type object;
#L1391f2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1391f8.   throw v2;
  catch  [|any|] @[L1391c2..L1391e0] goto L1391f0;
  catch  [|any|] @[L1391ea..L1391ee] goto L1391f0;

   }
    procedure [|int|] [|java:util:concurrent:LinkedBlockingDeque.size|] ([|java:util:concurrent:LinkedBlockingDeque|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.size:()I|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0010));

        v1;
      
#L139220.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L139224.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13922a.   v1:= v2.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L13922e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139234.   return v1;
#L139236.   v1:= Exception  @type object;
#L139238.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13923e.   throw v1;
  catch  [|any|] @[L13922a..L13922e] goto L139236;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.take|] ([|java:util:concurrent:LinkedBlockingDeque|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.take:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13925c.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.takeFirst|](v1) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.takeFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type virtual;
#L139262.   v0:= temp  @type object;
#L139264.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.takeFirst|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.takeFirst:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v1 @varname [|x|] @scope ((L0009,L0011), (L0016,L001a));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L001a));

        v2;
      
#L139278.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L13927c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139282.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlinkFirst|](v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L139288.   v1:= temp  @type object;
#L13928a.   if v1 != 0 then goto L1392a4;
#L13928e.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque.notEmpty|]   @type object;
#L139292.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v2) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139298.   goto L139282;
#L13929a.   v2:= Exception  @type object;
#L13929c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1392a2.   throw v2;
#L1392a4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1392aa.   return v1  @type object;
  catch  [|any|] @[L139282..L139298] goto L13929a;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingDeque.takeLast|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.takeLast:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v1 @varname [|x|] @scope ((L0009,L0011), (L0016,L001a));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L001a));

        v2;
      
#L1392c8.   v0:= v3.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L1392cc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1392d2.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlinkLast|](v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkLast:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L1392d8.   v1:= temp  @type object;
#L1392da.   if v1 != 0 then goto L1392f4;
#L1392de.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque.notEmpty|]   @type object;
#L1392e2.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v2) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1392e8.   goto L1392d2;
#L1392ea.   v2:= Exception  @type object;
#L1392ec.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1392f2.   throw v2;
#L1392f4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1392fa.   return v1  @type object;
  catch  [|any|] @[L1392d2..L1392e8] goto L1392ea;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:LinkedBlockingDeque.toArray|] ([|java:util:concurrent:LinkedBlockingDeque|] v6 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|int|] v1 @varname [|k|] @scope ((L000a,L000d), (L000d,L0011), (L0011,L0018), (L0018,L0019), (L001e,L0022));
        [|java:lang:Object|][] v0 @varname [|a|] @scope ((L0009,L0019), (L001e,L0022));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v4 @varname [|p|] @scope ((L000c,L0019), (L001e,L0022));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|lock|] @scope ((L0002,L0022));

        v2;
        v5;
      
#L139318.   v3:= v6.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L13931c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139322.   v5:= v6.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L139326.   v0:= new [|java:lang:Object|][v5];
#L13932a.   v1:= 0  @length 4;
#L13932c.   v4:= v6.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L139330.   v2:= v1;
#L139332.   if v4 == 0 then goto L139354;
#L139336.   v1:= v2 + 1;
#L13933a.   v5:= v4.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L13933e.   v0[v2]:= v5  @type object;
#L139342.   v4:= v4.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L139346.   v2:= v1;
#L139348.   goto L139332;
#L13934a.   v5:= Exception  @type object;
#L13934c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139352.   throw v5;
#L139354.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13935a.   return v0  @type object;
  catch  [|any|] @[L139322..L139346] goto L13934a;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:LinkedBlockingDeque.toArray|] ([|java:util:concurrent:LinkedBlockingDeque|] v7 @type (this), [|java:lang:Object|][] v8 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|int|] v1 @varname [|k|] @scope ((L001f,L0022), (L0022,L0026), (L0026,L002d), (L002d,L0038));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v4 @varname [|p|] @scope ((L0021,L0038));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|lock|] @scope ((L0002,L003d));


        v0;
        v2;
        v5;
        v6;
      
#L139378.   v3:= v7.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L13937c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139382.   v5:= v8.length;
#L139384.   v6:= v7.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L139388.   if v5 >= v6 then goto L1393b4;
#L13938c.   call temp:=  [|java:lang:Object.getClass|](v8) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L139392.   v5:= temp  @type object;
#L139394.   call temp:=  [|java:lang:Class.getComponentType|](v5) @signature [|Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13939a.   v5:= temp  @type object;
#L13939c.   v6:= v7.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L1393a0.   call temp:=  [|java:lang:reflect:Array.newInstance|](v5, v6) @signature [|Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L1393a6.   v5:= temp  @type object;
#L1393a8.   v5:= ([|java:lang:Object|][])v5;
#L1393ac.   v0:= v5  @type object;
#L1393ae.   v0:= ([|java:lang:Object|][])v0;
#L1393b2.   v8:= v0  @type object;
#L1393b4.   v1:= 0  @length 4;
#L1393b6.   v4:= v7.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L1393ba.   v2:= v1;
#L1393bc.   if v4 == 0 then goto L1393d4;
#L1393c0.   v1:= v2 + 1;
#L1393c4.   v5:= v4.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L1393c8.   v8[v2]:= v5  @type object;
#L1393cc.   v4:= v4.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L1393d0.   v2:= v1;
#L1393d2.   goto L1393bc;
#L1393d4.   v5:= v8.length;
#L1393d6.   if v5 <= v2 then goto L1393e0;
#L1393da.   v5:= 0  @length 4;
#L1393dc.   v8[v2]:= v5  @type object;
#L1393e0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1393e6.   return v8  @type object;
#L1393e8.   v5:= Exception  @type object;
#L1393ea.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1393f0.   throw v5;
  catch  [|any|] @[L139382..L1393e0] goto L1393e8;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:LinkedBlockingDeque.toString|] ([|java:util:concurrent:LinkedBlockingDeque|] v6 @type (this)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L001b,L001f));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v2 @varname [|p|] @scope ((L0007,L003d));
        [|java:lang:StringBuilder|] v3 @varname [|sb|] @scope ((L0014,L003d));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0002,L0042));

        v4;
        v5;
      
#L139410.   v1:= v6.[|java:util:concurrent:LinkedBlockingDeque.lock|]   @type object;
#L139414.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13941a.   v2:= v6.[|java:util:concurrent:LinkedBlockingDeque.first|]   @type object;
#L13941e.   if v2 != 0 then goto L13942e;
#L139422.   v4:= "[]" @type (object, string);
#L139426.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13942c.   return v4  @type object;
#L13942e.   v3:= new [|java:lang:StringBuilder|];
#L139432.   call temp:=  [|java:lang:StringBuilder.<init>|](v3) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L139438.   v4:= 91  @length 16;
#L13943c.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L139442.   v0:= v2.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]   @type object;
#L139446.   if v0 != v6 then goto L13944e;
#L13944a.   v0:= "(this Collection)" @type (object, string);
#L13944e.   call temp:=  [|java:lang:StringBuilder.append|](v3, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L139454.   v2:= v2.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L139458.   if v2 != 0 then goto L139472;
#L13945c.   v4:= 93  @length 16;
#L139460.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L139466.   v4:= temp  @type object;
#L139468.   call temp:=  [|java:lang:StringBuilder.toString|](v4) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13946e.   v4:= temp  @type object;
#L139470.   goto L139426;
#L139472.   v4:= 44  @length 16;
#L139476.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13947c.   v4:= temp  @type object;
#L13947e.   v5:= 32  @length 16;
#L139482.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L139488.   goto L139442;
#L13948a.   v4:= Exception  @type object;
#L13948c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139492.   throw v4;
  catch  [|any|] @[L13941a..L139426] goto L13948a;
  catch  [|any|] @[L13942e..L139488] goto L13948a;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingDeque.unlink|] ([|java:util:concurrent:LinkedBlockingDeque|] v3 @type (this), [|java:util:concurrent:LinkedBlockingDeque$Node|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingDeque|] @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlink:(Ljava/util/concurrent/LinkedBlockingDeque$Node;)V|] @Access  {
      local temp ;

        [|java:util:concurrent:LinkedBlockingDeque$Node|] v0 @varname [|n|] @scope ((L0004,L0023));
        [|java:util:concurrent:LinkedBlockingDeque$Node|] v1 @varname [|p|] @scope ((L0002,L0023));


        v2;
      
#L1394b8.   v1:= v4.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]   @type object;
#L1394bc.   v0:= v4.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]   @type object;
#L1394c0.   if v1 != 0 then goto L1394cc;
#L1394c4.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlinkFirst|](v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkFirst:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L1394ca.   return @void ;
#L1394cc.   if v0 != 0 then goto L1394d8;
#L1394d0.   call temp:=  [|java:util:concurrent:LinkedBlockingDeque.unlinkLast|](v3) @signature [|Ljava/util/concurrent/LinkedBlockingDeque;.unlinkLast:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingDeque|] @type direct;
#L1394d6.   goto L1394ca;
#L1394d8.   v1.[|java:util:concurrent:LinkedBlockingDeque$Node.next|]  := v0 @type object;
#L1394dc.   v0.[|java:util:concurrent:LinkedBlockingDeque$Node.prev|]  := v1 @type object;
#L1394e0.   v2:= 0  @length 4;
#L1394e2.   v4.[|java:util:concurrent:LinkedBlockingDeque$Node.item|]  := v2 @type object;
#L1394e6.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque.count|] ;
#L1394ea.   v2:= v2 + -1;
#L1394ee.   v3.[|java:util:concurrent:LinkedBlockingDeque.count|]  := v2;
#L1394f2.   v2:= v3.[|java:util:concurrent:LinkedBlockingDeque.notFull|]   @type object;
#L1394f6.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v2) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L1394fc.   goto L1394ca;

   }
record [|java:util:concurrent:LinkedBlockingQueue$Itr|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
      [|java:util:concurrent:LinkedBlockingQueue$Node|] [|java:util:concurrent:LinkedBlockingQueue$Itr.current|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingQueue$Itr.currentElement|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:LinkedBlockingQueue$Node|] [|java:util:concurrent:LinkedBlockingQueue$Itr.lastRet|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:LinkedBlockingQueue|] [|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue$Itr.<init>|] ([|java:util:concurrent:LinkedBlockingQueue$Itr|] v1 @type (this), [|java:util:concurrent:LinkedBlockingQueue|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Itr;.<init>:(Ljava/util/concurrent/LinkedBlockingQueue;)V|] @Access CONSTRUCTOR {
      local temp ;


        v0;
      
#L139510.   v1.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]  := v2 @type object;
#L139514.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13951a.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139520.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L139524.   v0:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L139528.   v1.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]  := v0 @type object;
#L13952c.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]   @type object;
#L139530.   if v0 == 0 then goto L139540;
#L139534.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]   @type object;
#L139538.   v0:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L13953c.   v1.[|java:util:concurrent:LinkedBlockingQueue$Itr.currentElement|]  := v0 @type object;
#L139540.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139546.   return @void ;
#L139548.   v0:= Exception  @type object;
#L13954a.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139550.   throw v0;
  catch  [|any|] @[L139520..L139540] goto L139548;

   }
    procedure [|java:util:concurrent:LinkedBlockingQueue$Node|] [|java:util:concurrent:LinkedBlockingQueue$Itr.nextNode|] ([|java:util:concurrent:LinkedBlockingQueue$Itr|] v2 @type (this), [|java:util:concurrent:LinkedBlockingQueue$Node|] v3 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Itr;.nextNode:(Ljava/util/concurrent/LinkedBlockingQueue$Node;)Ljava/util/concurrent/LinkedBlockingQueue$Node;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @varname [|s|] @scope ((L0002,L000a), (L000b,L0013));


        v1;
      
#L139570.   v0:= v3.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L139574.   if v0 != v3 then goto L139586;
#L139578.   v1:= v2.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]   @type object;
#L13957c.   v1:= v1.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L139580.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L139584.   return v0  @type object;
#L139586.   if v0 == 0 then goto L139584;
#L13958a.   v1:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L13958e.   if v1 != 0 then goto L139584;
#L139592.   v3:= v0  @type object;
#L139594.   goto L139570;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingQueue$Itr.hasNext|] ([|java:util:concurrent:LinkedBlockingQueue$Itr|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Itr;.hasNext:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1395a8.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]   @type object;
#L1395ac.   if v0 == 0 then goto L1395b4;
#L1395b0.   v0:= 1  @length 4;
#L1395b2.   return v0;
#L1395b4.   v0:= 0  @length 4;
#L1395b6.   goto L1395b2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingQueue$Itr.next|] ([|java:util:concurrent:LinkedBlockingQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Itr;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|x|] @scope ((L0018,L0036));

        v1;
        v2;
      
#L1395c8.   v1:= v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]   @type object;
#L1395cc.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v1) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L1395d2.   v1:= v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]   @type object;
#L1395d6.   if v1 != 0 then goto L1395f4;
#L1395da.   v1:= new [|java:util:NoSuchElementException|];
#L1395de.   call temp:=  [|java:util:NoSuchElementException.<init>|](v1) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L1395e4.   throw v1;
#L1395e6.   v1:= Exception  @type object;
#L1395e8.   v2:= v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]   @type object;
#L1395ec.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L1395f2.   throw v1;
#L1395f4.   v0:= v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.currentElement|]   @type object;
#L1395f8.   v1:= v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]   @type object;
#L1395fc.   v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.lastRet|]  := v1 @type object;
#L139600.   v1:= v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]   @type object;
#L139604.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue$Itr.nextNode|](v3, v1) @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Itr;.nextNode:(Ljava/util/concurrent/LinkedBlockingQueue$Node;)Ljava/util/concurrent/LinkedBlockingQueue$Node;|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue$Itr|] @type direct;
#L13960a.   v1:= temp  @type object;
#L13960c.   v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]  := v1 @type object;
#L139610.   v1:= v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]   @type object;
#L139614.   if v1 != 0 then goto L13962a;
#L139618.   v1:= 0  @length 4;
#L13961a.   v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.currentElement|]  := v1 @type object;
#L13961e.   v1:= v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]   @type object;
#L139622.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v1) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139628.   return v0  @type object;
#L13962a.   v1:= v3.[|java:util:concurrent:LinkedBlockingQueue$Itr.current|]   @type object;
#L13962e.   v1:= v1.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L139632.   goto L13961a;
  catch  [|any|] @[L1395d2..L1395e6] goto L1395e6;
  catch  [|any|] @[L1395f4..L13961e] goto L1395e6;
  catch  [|any|] @[L13962a..L139632] goto L1395e6;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue$Itr.remove|] ([|java:util:concurrent:LinkedBlockingQueue$Itr|] v5 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Itr;.remove:()V|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @varname [|node|] @scope ((L0011,L002d));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v1 @varname [|p|] @scope ((L001a,L002d));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v2 @varname [|trail|] @scope ((L0018,L002d));

        v3;
        v4;
      
#L139660.   v3:= v5.[|java:util:concurrent:LinkedBlockingQueue$Itr.lastRet|]   @type object;
#L139664.   if v3 != 0 then goto L139674;
#L139668.   v3:= new [|java:lang:IllegalStateException|];
#L13966c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v3) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L139672.   throw v3;
#L139674.   v3:= v5.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]   @type object;
#L139678.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v3) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13967e.   v0:= v5.[|java:util:concurrent:LinkedBlockingQueue$Itr.lastRet|]   @type object;
#L139682.   v3:= 0  @length 4;
#L139684.   v5.[|java:util:concurrent:LinkedBlockingQueue$Itr.lastRet|]  := v3 @type object;
#L139688.   v3:= v5.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]   @type object;
#L13968c.   v2:= v3.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L139690.   v1:= v2.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L139694.   if v1 == 0 then goto L1396a6;
#L139698.   if v1 != v0 then goto L1396b2;
#L13969c.   v3:= v5.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]   @type object;
#L1396a0.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.unlink|](v3, v1, v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.unlink:(Ljava/util/concurrent/LinkedBlockingQueue$Node;Ljava/util/concurrent/LinkedBlockingQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L1396a6.   v3:= v5.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]   @type object;
#L1396aa.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v3) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L1396b0.   return @void ;
#L1396b2.   v2:= v1  @type object;
#L1396b4.   v1:= v1.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L1396b8.   goto L139694;
#L1396ba.   v3:= Exception  @type object;
#L1396bc.   v4:= v5.[|java:util:concurrent:LinkedBlockingQueue$Itr.this$0|]   @type object;
#L1396c0.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v4) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L1396c6.   throw v3;
  catch  [|any|] @[L13967e..L1396a6] goto L1396ba;
  catch  [|any|] @[L1396b4..L1396b8] goto L1396ba;

   }
record [|java:util:concurrent:LinkedBlockingQueue$Node|]  @type class @AccessFlag   {
      [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingQueue$Node.item|]    @AccessFlag ;
      [|java:util:concurrent:LinkedBlockingQueue$Node|] [|java:util:concurrent:LinkedBlockingQueue$Node.next|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue$Node.<init>|] ([|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue$Node|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Node;.<init>:(Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;



      
#L1396ec.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1396f2.   v0.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]  := v1 @type object;
#L1396f6.   return @void ;

   }
record [|java:util:concurrent:LinkedBlockingQueue|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractQueue|], [|java:util:concurrent:BlockingQueue|], [|java:io:Serializable|] {
      [|int|] [|java:util:concurrent:LinkedBlockingQueue.capacity|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:atomic:AtomicInteger|] [|java:util:concurrent:LinkedBlockingQueue.count|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:LinkedBlockingQueue$Node|] [|java:util:concurrent:LinkedBlockingQueue.head|]    @AccessFlag TRANSIENT;
      [|java:util:concurrent:LinkedBlockingQueue$Node|] [|java:util:concurrent:LinkedBlockingQueue.last|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:LinkedBlockingQueue.notEmpty|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:LinkedBlockingQueue.notFull|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:LinkedBlockingQueue.putLock|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:LinkedBlockingQueue.takeLock|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:concurrent:LinkedBlockingQueue.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.<init>|] ([|java:util:concurrent:LinkedBlockingQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L139708.    v0:= nan;
#L13970e.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.<init>|](v1, v0) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139714.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.<init>|] ([|java:util:concurrent:LinkedBlockingQueue|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
      
#L139728.   call temp:=  [|java:util:AbstractQueue.<init>|](v2) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L13972e.   v0:= new [|java:util:concurrent:atomic:AtomicInteger|];
#L139732.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.<init>|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type direct;
#L139738.   v2.[|java:util:concurrent:LinkedBlockingQueue.count|]  := v0 @type object;
#L13973c.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L139740.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L139746.   v2.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]  := v0 @type object;
#L13974a.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]   @type object;
#L13974e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139754.   v0:= temp  @type object;
#L139756.   v2.[|java:util:concurrent:LinkedBlockingQueue.notEmpty|]  := v0 @type object;
#L13975a.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L13975e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L139764.   v2.[|java:util:concurrent:LinkedBlockingQueue.putLock|]  := v0 @type object;
#L139768.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue.putLock|]   @type object;
#L13976c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139772.   v0:= temp  @type object;
#L139774.   v2.[|java:util:concurrent:LinkedBlockingQueue.notFull|]  := v0 @type object;
#L139778.   if v3 > 0 then goto L139788;
#L13977c.   v0:= new [|java:lang:IllegalArgumentException|];
#L139780.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L139786.   throw v0;
#L139788.   v2.[|java:util:concurrent:LinkedBlockingQueue.capacity|]  := v3;
#L13978c.   v0:= new [|java:util:concurrent:LinkedBlockingQueue$Node|];
#L139790.   v1:= 0  @length 4;
#L139792.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue$Node.<init>|](v0, v1) @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue$Node|] @type direct;
#L139798.   v2.[|java:util:concurrent:LinkedBlockingQueue.head|]  := v0 @type object;
#L13979c.   v2.[|java:util:concurrent:LinkedBlockingQueue.last|]  := v0 @type object;
#L1397a0.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.<init>|] ([|java:util:concurrent:LinkedBlockingQueue|] v6 @type (this), [|java:util:Collection|] v7 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L001a,L0022), (L0027,L003e));
        [|java:util:Iterator|] v1 @varname [|i$|] @scope ((L0010,L0022), (L0027,L0047));
        [|int|] v2 @varname [|n|] @scope ((L000c,L0047));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|putLock|] @scope ((L0008,L0047));


        v4;
        v5;
      
#L1397b4.    v4:= nan;
#L1397ba.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.<init>|](v6, v4) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L1397c0.   v3:= v6.[|java:util:concurrent:LinkedBlockingQueue.putLock|]   @type object;
#L1397c4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L1397ca.   v2:= 0  @length 4;
#L1397cc.   call temp:=  [|java:util:Collection.iterator|](v7) @signature [|Ljava/util/Collection;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:Collection|] @type interface;
#L1397d2.   v1:= temp  @type object;
#L1397d4.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1397da.   v4:= temp;
#L1397dc.   if v4 == 0 then goto L139830;
#L1397e0.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L1397e6.   v0:= temp  @type object;
#L1397e8.   if v0 != 0 then goto L139802;
#L1397ec.   v4:= new [|java:lang:NullPointerException|];
#L1397f0.   call temp:=  [|java:lang:NullPointerException.<init>|](v4) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1397f6.   throw v4;
#L1397f8.   v4:= Exception  @type object;
#L1397fa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139800.   throw v4;
#L139802.   v4:= v6.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139806.   if v2 != v4 then goto L13981a;
#L13980a.   v4:= new [|java:lang:IllegalStateException|];
#L13980e.   v5:= "Queue full" @type (object, string);
#L139812.   call temp:=  [|java:lang:IllegalStateException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L139818.   throw v4;
#L13981a.   v4:= new [|java:util:concurrent:LinkedBlockingQueue$Node|];
#L13981e.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue$Node.<init>|](v4, v0) @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue$Node|] @type direct;
#L139824.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.enqueue|](v6, v4) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.enqueue:(Ljava/util/concurrent/LinkedBlockingQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L13982a.   v2:= v2 + 1;
#L13982e.   goto L1397d4;
#L139830.   v4:= v6.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139834.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.set|](v4, v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.set:(I)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13983a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139840.   return @void ;
  catch  [|any|] @[L1397cc..L1397f8] goto L1397f8;
  catch  [|any|] @[L139802..L13983a] goto L1397f8;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingQueue.dequeue|] ([|java:util:concurrent:LinkedBlockingQueue|] v4 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.dequeue:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @varname [|first|] @scope ((L0004,L000e));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v1 @varname [|h|] @scope ((L0002,L000e));
        [|java:lang:Object|] v2 @varname [|x|] @scope ((L000a,L000e));

        v3;
      
#L139868.   v1:= v4.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L13986c.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L139870.   v1.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]  := v1 @type object;
#L139874.   v4.[|java:util:concurrent:LinkedBlockingQueue.head|]  := v0 @type object;
#L139878.   v2:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L13987c.   v3:= 0  @length 4;
#L13987e.   v0.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]  := v3 @type object;
#L139882.   return v2  @type object;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.enqueue|] ([|java:util:concurrent:LinkedBlockingQueue|] v1 @type (this), [|java:util:concurrent:LinkedBlockingQueue$Node|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.enqueue:(Ljava/util/concurrent/LinkedBlockingQueue$Node;)V|] @Access PRIVATE {
      local temp ;



        v0;
      
#L139894.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue.last|]   @type object;
#L139898.   v0.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]  := v2 @type object;
#L13989c.   v1.[|java:util:concurrent:LinkedBlockingQueue.last|]  := v2 @type object;
#L1398a0.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.readObject|] ([|java:util:concurrent:LinkedBlockingQueue|] v3 @type (this), [|java:io:ObjectInputStream|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v0 @varname [|item|] @scope ((L0017,L001e));


        v1;
        v2;
      
#L1398b4.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v4) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1398ba.   v1:= v3.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L1398be.   v2:= 0  @length 4;
#L1398c0.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.set|](v1, v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.set:(I)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L1398c6.   v1:= new [|java:util:concurrent:LinkedBlockingQueue$Node|];
#L1398ca.   v2:= 0  @length 4;
#L1398cc.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue$Node.<init>|](v1, v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue$Node|] @type direct;
#L1398d2.   v3.[|java:util:concurrent:LinkedBlockingQueue.head|]  := v1 @type object;
#L1398d6.   v3.[|java:util:concurrent:LinkedBlockingQueue.last|]  := v1 @type object;
#L1398da.   call temp:=  [|java:io:ObjectInputStream.readObject|](v4) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L1398e0.   v0:= temp  @type object;
#L1398e2.   if v0 != 0 then goto L1398e8;
#L1398e6.   return @void ;
#L1398e8.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.add|](v3, v0) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L1398ee.   goto L1398da;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.signalNotEmpty|] ([|java:util:concurrent:LinkedBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotEmpty:()V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|takeLock|] @scope ((L0002,L0013));

        v1;
      
#L139900.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]   @type object;
#L139904.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13990a.   v1:= v2.[|java:util:concurrent:LinkedBlockingQueue.notEmpty|]   @type object;
#L13990e.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v1) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139914.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13991a.   return @void ;
#L13991c.   v1:= Exception  @type object;
#L13991e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139924.   throw v1;
  catch  [|any|] @[L13990a..L139914] goto L13991c;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.signalNotFull|] ([|java:util:concurrent:LinkedBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotFull:()V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|putLock|] @scope ((L0002,L0013));

        v1;
      
#L139944.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue.putLock|]   @type object;
#L139948.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13994e.   v1:= v2.[|java:util:concurrent:LinkedBlockingQueue.notFull|]   @type object;
#L139952.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v1) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139958.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13995e.   return @void ;
#L139960.   v1:= Exception  @type object;
#L139962.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139968.   throw v1;
  catch  [|any|] @[L13994e..L139958] goto L139960;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.writeObject|] ([|java:util:concurrent:LinkedBlockingQueue|] v2 @type (this), [|java:io:ObjectOutputStream|] v3 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @varname [|p|] @scope ((L000a,L001c));


        v1;
      
#L139988.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13998e.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v3) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L139994.   v1:= v2.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L139998.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13999c.   if v0 == 0 then goto L1399b0;
#L1399a0.   v1:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L1399a4.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v1) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1399aa.   v0:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L1399ae.   goto L13999c;
#L1399b0.   v1:= 0  @length 4;
#L1399b2.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v3, v1) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L1399b8.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L1399be.   return @void ;
#L1399c0.   v1:= Exception  @type object;
#L1399c2.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L1399c8.   throw v1;
  catch  [|any|] @[L13998e..L1399b8] goto L1399c0;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.clear|] ([|java:util:concurrent:LinkedBlockingQueue|] v4 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.clear:()V|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @varname [|h|] @scope ((L0005,L0028));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v1 @varname [|p|] @scope ((L0007,L0028));

        v2;
        v3;
      
#L1399e8.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v4) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L1399ee.   v0:= v4.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L1399f2.   v1:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L1399f6.   if v1 == 0 then goto L139a08;
#L1399fa.   v0.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]  := v0 @type object;
#L1399fe.   v2:= 0  @length 4;
#L139a00.   v1.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]  := v2 @type object;
#L139a04.   v0:= v1  @type object;
#L139a06.   goto L1399f2;
#L139a08.   v2:= v4.[|java:util:concurrent:LinkedBlockingQueue.last|]   @type object;
#L139a0c.   v4.[|java:util:concurrent:LinkedBlockingQueue.head|]  := v2 @type object;
#L139a10.   v2:= v4.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139a14.   v3:= 0  @length 4;
#L139a16.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndSet|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndSet:(I)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139a1c.   v2:= temp;
#L139a1e.   v3:= v4.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139a22.   if v2 != v3 then goto L139a30;
#L139a26.   v2:= v4.[|java:util:concurrent:LinkedBlockingQueue.notFull|]   @type object;
#L139a2a.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v2) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139a30.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v4) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139a36.   return @void ;
#L139a38.   v2:= Exception  @type object;
#L139a3a.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v4) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139a40.   throw v2;
  catch  [|any|] @[L1399ee..L139a30] goto L139a38;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingQueue.contains|] ([|java:util:concurrent:LinkedBlockingQueue|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @varname [|p|] @scope ((L000b,L001d));


        v1;
        v2;
      
#L139a60.   v1:= 0  @length 4;
#L139a62.   if v4 != 0 then goto L139a68;
#L139a66.   return v1;
#L139a68.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v3) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139a6e.   v2:= v3.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L139a72.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L139a76.   if v0 == 0 then goto L139a8c;
#L139a7a.   v2:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L139a7e.   call temp:=  [|java:lang:Object.equals|](v4, v2) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L139a84.   v2:= temp;
#L139a86.   if v2 == 0 then goto L139a94;
#L139a8a.   v1:= 1  @length 4;
#L139a8c.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v3) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139a92.   goto L139a66;
#L139a94.   v0:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L139a98.   goto L139a76;
#L139a9a.   v1:= Exception  @type object;
#L139a9c.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v3) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139aa2.   throw v1;
  catch  [|any|] @[L139a6e..L139a84] goto L139a9a;
  catch  [|any|] @[L139a94..L139a98] goto L139a9a;

   }
    procedure [|int|] [|java:util:concurrent:LinkedBlockingQueue.drainTo|] ([|java:util:concurrent:LinkedBlockingQueue|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.drainTo:(Ljava/util/Collection;)I|] @Access PUBLIC {
      local temp ;



        v0;
      
#L139ac8.    v0:= nan;
#L139ace.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.drainTo|](v1, v2, v0) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.drainTo:(Ljava/util/Collection;I)I|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L139ad4.   v0:= temp;
#L139ad6.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:LinkedBlockingQueue.drainTo|] ([|java:util:concurrent:LinkedBlockingQueue|] v11 @type (this), [|java:util:Collection|] v12 @type (object), [|int|] v13) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.drainTo:(Ljava/util/Collection;I)I|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingQueue$Node|] v3 @varname [|p|] @scope ((L002d,L003b));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @varname [|h|] @scope ((L0028,L004d), (L0057,L0074));
        [|int|] v1 @varname [|i|] @scope ((L0029,L004d), (L0057,L0074));
        [|int|] v2 @varname [|n|] @scope ((L0026,L004d), (L0057,L0074));
        [|boolean|] v4 @varname [|signalNotFull|] @scope ((L0017,L0074));
        [|java:util:concurrent:locks:ReentrantLock|] v5 @varname [|takeLock|] @scope ((L0019,L0074));



        v6;
        v7;
        v8;
        v9;
        v10;
      
#L139ae8.   v8:= 1  @length 4;
#L139aea.   v6:= 0  @length 4;
#L139aec.   if v12 != 0 then goto L139afc;
#L139af0.   v6:= new [|java:lang:NullPointerException|];
#L139af4.   call temp:=  [|java:lang:NullPointerException.<init>|](v6) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L139afa.   throw v6;
#L139afc.   if v12 != v11 then goto L139b0c;
#L139b00.   v6:= new [|java:lang:IllegalArgumentException|];
#L139b04.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v6) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L139b0a.   throw v6;
#L139b0c.   if v13 > 0 then goto L139b14;
#L139b10.   v2:= v6;
#L139b12.   return v2;
#L139b14.   v4:= 0  @length 4;
#L139b16.   v5:= v11.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]   @type object;
#L139b1a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139b20.   v7:= v11.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139b24.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v7) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139b2a.   v7:= temp;
#L139b2c.   call temp:=  [|java:lang:Math.min|](v13, v7) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L139b32.   v2:= temp;
#L139b34.   v0:= v11.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L139b38.   v1:= 0  @length 4;
#L139b3a.   if v1 >= v2 then goto L139b9a;
#L139b3e.   v3:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L139b42.   v7:= v3.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L139b46.   call temp:=  [|java:util:Collection.add|](v12, v7) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L139b4c.   v7:= 0  @length 4;
#L139b4e.   v3.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]  := v7 @type object;
#L139b52.   v0.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]  := v0 @type object;
#L139b56.   v0:= v3  @type object;
#L139b58.   v1:= v1 + 1;
#L139b5c.   goto L139b3a;
#L139b5e.   v7:= Exception  @type object;
#L139b60.   if v1 <= 0 then goto L139b80;
#L139b64.   v11.[|java:util:concurrent:LinkedBlockingQueue.head|]  := v0 @type object;
#L139b68.   v9:= v11.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139b6c.   v10:= -v1  @type int;
#L139b6e.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndAdd|](v9, v10) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndAdd:(I)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139b74.   v9:= temp;
#L139b76.   v10:= v11.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139b7a.   if v9 != v10 then goto L139b96;
#L139b7e.   v4:= v8;
#L139b80.   throw v7;
#L139b82.   v6:= Exception  @type object;
#L139b84.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139b8a.   if v4 == 0 then goto L139b94;
#L139b8e.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.signalNotFull|](v11) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotFull:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139b94.   throw v6;
#L139b96.   v4:= v6;
#L139b98.   goto L139b80;
#L139b9a.   if v1 <= 0 then goto L139bba;
#L139b9e.   v11.[|java:util:concurrent:LinkedBlockingQueue.head|]  := v0 @type object;
#L139ba2.   v7:= v11.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139ba6.   v9:= -v1  @type int;
#L139ba8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndAdd|](v7, v9) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndAdd:(I)I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139bae.   v7:= temp;
#L139bb0.   v9:= v11.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139bb4.   if v7 != v9 then goto L139bcc;
#L139bb8.   v4:= v8;
#L139bba.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v5) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139bc0.   if v4 == 0 then goto L139b12;
#L139bc4.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.signalNotFull|](v11) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotFull:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139bca.   goto L139b12;
#L139bcc.   v4:= v6;
#L139bce.   goto L139bba;
  catch  [|any|] @[L139b20..L139b38] goto L139b82;
  catch  [|any|] @[L139b3e..L139b56] goto L139b5e;
  catch  [|any|] @[L139b64..L139b82] goto L139b82;
  catch  [|any|] @[L139b9e..L139bb4] goto L139b82;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.fullyLock|] ([|java:util:concurrent:LinkedBlockingQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @Access  {
      local temp ;


        v0;
      
#L139c08.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue.putLock|]   @type object;
#L139c0c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139c12.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]   @type object;
#L139c16.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139c1c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|] ([|java:util:concurrent:LinkedBlockingQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @Access  {
      local temp ;


        v0;
      
#L139c30.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]   @type object;
#L139c34.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139c3a.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue.putLock|]   @type object;
#L139c3e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139c44.   return @void ;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:LinkedBlockingQueue.iterator|] ([|java:util:concurrent:LinkedBlockingQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L139c58.   v0:= new [|java:util:concurrent:LinkedBlockingQueue$Itr|];
#L139c5c.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue$Itr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Itr;.<init>:(Ljava/util/concurrent/LinkedBlockingQueue;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue$Itr|] @type direct;
#L139c62.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingQueue.offer|] ([|java:util:concurrent:LinkedBlockingQueue|] v7 @type (this), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|c|] @scope ((L0015,L004a));
        [|java:util:concurrent:atomic:AtomicInteger|] v1 @varname [|count|] @scope ((L000b,L004a));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v2 @varname [|node|] @scope ((L001a,L004a));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|putLock|] @scope ((L001c,L004a));


        v4;
        v5;
        v6;
      
#L139c74.   v4:= 0  @length 4;
#L139c76.   if v8 != 0 then goto L139c86;
#L139c7a.   v4:= new [|java:lang:NullPointerException|];
#L139c7e.   call temp:=  [|java:lang:NullPointerException.<init>|](v4) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L139c84.   throw v4;
#L139c86.   v1:= v7.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139c8a.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139c90.   v5:= temp;
#L139c92.   v6:= v7.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139c96.   if v5 != v6 then goto L139c9c;
#L139c9a.   return v4;
#L139c9c.   v0:= -1  @length 4;
#L139c9e.   v2:= new [|java:util:concurrent:LinkedBlockingQueue$Node|];
#L139ca2.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue$Node.<init>|](v2, v8) @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue$Node|] @type direct;
#L139ca8.   v3:= v7.[|java:util:concurrent:LinkedBlockingQueue.putLock|]   @type object;
#L139cac.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139cb2.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139cb8.   v5:= temp;
#L139cba.   v6:= v7.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139cbe.   if v5 >= v6 then goto L139ce6;
#L139cc2.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.enqueue|](v7, v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.enqueue:(Ljava/util/concurrent/LinkedBlockingQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139cc8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndIncrement|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139cce.   v0:= temp;
#L139cd0.   v5:= v0 + 1;
#L139cd4.   v6:= v7.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139cd8.   if v5 >= v6 then goto L139ce6;
#L139cdc.   v5:= v7.[|java:util:concurrent:LinkedBlockingQueue.notFull|]   @type object;
#L139ce0.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v5) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139ce6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139cec.   if v0 != 0 then goto L139cf6;
#L139cf0.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.signalNotEmpty|](v7) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotEmpty:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139cf6.   if v0 < 0 then goto L139c9a;
#L139cfa.   v4:= 1  @length 4;
#L139cfc.   goto L139c9a;
#L139cfe.   v4:= Exception  @type object;
#L139d00.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139d06.   throw v4;
  catch  [|any|] @[L139cb2..L139ce6] goto L139cfe;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingQueue.offer|] ([|java:util:concurrent:LinkedBlockingQueue|] v7 @type (this), [|java:lang:Object|] v8 @type (object), [|long|] v9, [|java:util:concurrent:TimeUnit|] v11 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|c|] @scope ((L000d,L0054));
        [|java:util:concurrent:atomic:AtomicInteger|] v1 @varname [|count|] @scope ((L0011,L0054));
        [|long|] v2 @varname [|nanos|] @scope ((L000c,L0054));
        [|java:util:concurrent:locks:ReentrantLock|] v4 @varname [|putLock|] @scope ((L000f,L0054));




        v3;
        v5;
        v6;
      
#L139d24.   if v8 != 0 then goto L139d34;
#L139d28.   v5:= new [|java:lang:NullPointerException|];
#L139d2c.   call temp:=  [|java:lang:NullPointerException.<init>|](v5) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L139d32.   throw v5;
#L139d34.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v11, v9, v10) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L139d3a.   v2:= temp  @type wide;
#L139d3c.   v0:= -1  @length 4;
#L139d3e.   v4:= v7.[|java:util:concurrent:LinkedBlockingQueue.putLock|]   @type object;
#L139d42.   v1:= v7.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139d46.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139d4c.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139d52.   v5:= temp;
#L139d54.   v6:= v7.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139d58.   if v5 != v6 then goto L139d80;
#L139d5c.   v5:= 0  @length wide16;
#L139d60.   v5:= cmp(v2,v5);
#L139d64.   if v5 > 0 then goto L139d72;
#L139d68.   v5:= 0  @length 4;
#L139d6a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139d70.   return v5;
#L139d72.   v5:= v7.[|java:util:concurrent:LinkedBlockingQueue.notFull|]   @type object;
#L139d76.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v5, v2, v3) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139d7c.   v2:= temp  @type wide;
#L139d7e.   goto L139d4c;
#L139d80.   v5:= new [|java:util:concurrent:LinkedBlockingQueue$Node|];
#L139d84.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue$Node.<init>|](v5, v8) @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue$Node|] @type direct;
#L139d8a.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.enqueue|](v7, v5) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.enqueue:(Ljava/util/concurrent/LinkedBlockingQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139d90.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndIncrement|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139d96.   v0:= temp;
#L139d98.   v5:= v0 + 1;
#L139d9c.   v6:= v7.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139da0.   if v5 >= v6 then goto L139dae;
#L139da4.   v5:= v7.[|java:util:concurrent:LinkedBlockingQueue.notFull|]   @type object;
#L139da8.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v5) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139dae.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139db4.   if v0 != 0 then goto L139dbe;
#L139db8.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.signalNotEmpty|](v7) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotEmpty:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139dbe.   v5:= 1  @length 4;
#L139dc0.   goto L139d70;
#L139dc2.   v5:= Exception  @type object;
#L139dc4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139dca.   throw v5;
  catch  [|any|] @[L139d4c..L139d58] goto L139dc2;
  catch  [|any|] @[L139d72..L139dae] goto L139dc2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingQueue.peek|] ([|java:util:concurrent:LinkedBlockingQueue|] v4 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.peek:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @varname [|first|] @scope ((L0013,L001c));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|takeLock|] @scope ((L000c,L0021));

        v2;
        v3;
      
#L139df0.   v2:= 0  @length 4;
#L139df2.   v3:= v4.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139df6.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139dfc.   v3:= temp;
#L139dfe.   if v3 != 0 then goto L139e04;
#L139e02.   return v2  @type object;
#L139e04.   v1:= v4.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]   @type object;
#L139e08.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139e0e.   v3:= v4.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L139e12.   v0:= v3.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L139e16.   if v0 != 0 then goto L139e22;
#L139e1a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139e20.   goto L139e02;
#L139e22.   v2:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L139e26.   goto L139e1a;
#L139e28.   v2:= Exception  @type object;
#L139e2a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139e30.   throw v2;
  catch  [|any|] @[L139e0e..L139e16] goto L139e28;
  catch  [|any|] @[L139e22..L139e26] goto L139e28;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingQueue.poll|] ([|java:util:concurrent:LinkedBlockingQueue|] v5 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.poll:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v3 @varname [|x|] @scope ((L000b,L0027));
        [|int|] v0 @varname [|c|] @scope ((L000c,L0037));
        [|java:util:concurrent:atomic:AtomicInteger|] v1 @varname [|count|] @scope ((L0002,L0037));
        [|java:util:concurrent:locks:ReentrantLock|] v2 @varname [|takeLock|] @scope ((L000e,L0037));

        v4;
      
#L139e58.   v1:= v5.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139e5c.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139e62.   v4:= temp;
#L139e64.   if v4 != 0 then goto L139e6c;
#L139e68.   v3:= 0  @length 4;
#L139e6a.   return v3  @type object;
#L139e6c.   v3:= 0  @length 4;
#L139e6e.   v0:= -1  @length 4;
#L139e70.   v2:= v5.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]   @type object;
#L139e74.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139e7a.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139e80.   v4:= temp;
#L139e82.   if v4 <= 0 then goto L139ea6;
#L139e86.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.dequeue|](v5) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139e8c.   v3:= temp  @type object;
#L139e8e.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndDecrement|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndDecrement:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139e94.   v0:= temp;
#L139e96.   v4:= 1  @length 4;
#L139e98.   if v0 <= v4 then goto L139ea6;
#L139e9c.   v4:= v5.[|java:util:concurrent:LinkedBlockingQueue.notEmpty|]   @type object;
#L139ea0.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v4) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139ea6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139eac.   v4:= v5.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139eb0.   if v0 != v4 then goto L139e6a;
#L139eb4.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.signalNotFull|](v5) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotFull:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139eba.   goto L139e6a;
#L139ebc.   v4:= Exception  @type object;
#L139ebe.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139ec4.   throw v4;
  catch  [|any|] @[L139e7a..L139ea6] goto L139ebc;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingQueue.poll|] ([|java:util:concurrent:LinkedBlockingQueue|] v8 @type (this), [|long|] v9, [|java:util:concurrent:TimeUnit|] v11 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v5 @varname [|x|] @scope ((L0001,L001a), (L001e,L0040));
        [|int|] v0 @varname [|c|] @scope ((L0002,L0045));
        [|java:util:concurrent:atomic:AtomicInteger|] v1 @varname [|count|] @scope ((L0008,L0045));
        [|long|] v2 @varname [|nanos|] @scope ((L0006,L0045));
        [|java:util:concurrent:locks:ReentrantLock|] v4 @varname [|takeLock|] @scope ((L000a,L0045));



        v3;
        v6;
        v7;
      
#L139ee4.   v5:= 0  @length 4;
#L139ee6.   v0:= -1  @length 4;
#L139ee8.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v11, v9, v10) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L139eee.   v2:= temp  @type wide;
#L139ef0.   v1:= v8.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139ef4.   v4:= v8.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]   @type object;
#L139ef8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139efe.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139f04.   v6:= temp;
#L139f06.   if v6 != 0 then goto L139f2e;
#L139f0a.   v6:= 0  @length wide16;
#L139f0e.   v6:= cmp(v2,v6);
#L139f12.   if v6 > 0 then goto L139f20;
#L139f16.   v5:= 0  @length 4;
#L139f18.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139f1e.   return v5  @type object;
#L139f20.   v6:= v8.[|java:util:concurrent:LinkedBlockingQueue.notEmpty|]   @type object;
#L139f24.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v6, v2, v3) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139f2a.   v2:= temp  @type wide;
#L139f2c.   goto L139efe;
#L139f2e.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.dequeue|](v8) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139f34.   v5:= temp  @type object;
#L139f36.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndDecrement|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndDecrement:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139f3c.   v0:= temp;
#L139f3e.   v6:= 1  @length 4;
#L139f40.   if v0 <= v6 then goto L139f4e;
#L139f44.   v6:= v8.[|java:util:concurrent:LinkedBlockingQueue.notEmpty|]   @type object;
#L139f48.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v6) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139f4e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139f54.   v6:= v8.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139f58.   if v0 != v6 then goto L139f1e;
#L139f5c.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.signalNotFull|](v8) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotFull:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139f62.   goto L139f1e;
#L139f64.   v6:= Exception  @type object;
#L139f66.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v4) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139f6c.   throw v6;
  catch  [|any|] @[L139efe..L139f04] goto L139f64;
  catch  [|any|] @[L139f20..L139f4e] goto L139f64;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.put|] ([|java:util:concurrent:LinkedBlockingQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.put:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|c|] @scope ((L0009,L0043));
        [|java:util:concurrent:atomic:AtomicInteger|] v1 @varname [|count|] @scope ((L0012,L0043));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v2 @varname [|node|] @scope ((L000e,L0043));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|putLock|] @scope ((L0010,L0043));


        v4;
        v5;
      
#L139f94.   if v7 != 0 then goto L139fa4;
#L139f98.   v4:= new [|java:lang:NullPointerException|];
#L139f9c.   call temp:=  [|java:lang:NullPointerException.<init>|](v4) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L139fa2.   throw v4;
#L139fa4.   v0:= -1  @length 4;
#L139fa6.   v2:= new [|java:util:concurrent:LinkedBlockingQueue$Node|];
#L139faa.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue$Node.<init>|](v2, v7) @signature [|Ljava/util/concurrent/LinkedBlockingQueue$Node;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue$Node|] @type direct;
#L139fb0.   v3:= v6.[|java:util:concurrent:LinkedBlockingQueue.putLock|]   @type object;
#L139fb4.   v1:= v6.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L139fb8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139fbe.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139fc4.   v4:= temp;
#L139fc6.   v5:= v6.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139fca.   if v4 != v5 then goto L139fe4;
#L139fce.   v4:= v6.[|java:util:concurrent:LinkedBlockingQueue.notFull|]   @type object;
#L139fd2.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v4) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L139fd8.   goto L139fbe;
#L139fda.   v4:= Exception  @type object;
#L139fdc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L139fe2.   throw v4;
#L139fe4.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.enqueue|](v6, v2) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.enqueue:(Ljava/util/concurrent/LinkedBlockingQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L139fea.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndIncrement|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L139ff0.   v0:= temp;
#L139ff2.   v4:= v0 + 1;
#L139ff6.   v5:= v6.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L139ffa.   if v4 >= v5 then goto L13a008;
#L139ffe.   v4:= v6.[|java:util:concurrent:LinkedBlockingQueue.notFull|]   @type object;
#L13a002.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v4) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13a008.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13a00e.   if v0 != 0 then goto L13a018;
#L13a012.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.signalNotEmpty|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotEmpty:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L13a018.   return @void ;
  catch  [|any|] @[L139fbe..L139fd8] goto L139fda;
  catch  [|any|] @[L139fe4..L13a008] goto L139fda;

   }
    procedure [|int|] [|java:util:concurrent:LinkedBlockingQueue.remainingCapacity|] ([|java:util:concurrent:LinkedBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.remainingCapacity:()I|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L13a040.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L13a044.   v1:= v2.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L13a048.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13a04e.   v1:= temp;
#L13a050.   v0:= v0 - v1  @type int;
#L13a052.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedBlockingQueue.remove|] ([|java:util:concurrent:LinkedBlockingQueue|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedBlockingQueue$Node|] v0 @varname [|p|] @scope ((L000b,L0021));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v1 @varname [|trail|] @scope ((L0009,L0021));


        v2;
        v3;
      
#L13a064.   v2:= 0  @length 4;
#L13a066.   if v5 != 0 then goto L13a06c;
#L13a06a.   return v2;
#L13a06c.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v4) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a072.   v1:= v4.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L13a076.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13a07a.   if v0 == 0 then goto L13a096;
#L13a07e.   v3:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L13a082.   call temp:=  [|java:lang:Object.equals|](v5, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13a088.   v3:= temp;
#L13a08a.   if v3 == 0 then goto L13a09e;
#L13a08e.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.unlink|](v4, v0, v1) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.unlink:(Ljava/util/concurrent/LinkedBlockingQueue$Node;Ljava/util/concurrent/LinkedBlockingQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a094.   v2:= 1  @length 4;
#L13a096.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v4) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a09c.   goto L13a06a;
#L13a09e.   v1:= v0  @type object;
#L13a0a0.   v0:= v0.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13a0a4.   goto L13a07a;
#L13a0a6.   v2:= Exception  @type object;
#L13a0a8.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v4) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a0ae.   throw v2;
  catch  [|any|] @[L13a072..L13a094] goto L13a0a6;
  catch  [|any|] @[L13a0a0..L13a0a4] goto L13a0a6;

   }
    procedure [|int|] [|java:util:concurrent:LinkedBlockingQueue.size|] ([|java:util:concurrent:LinkedBlockingQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.size:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13a0d4.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L13a0d8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13a0de.   v0:= temp;
#L13a0e0.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedBlockingQueue.take|] ([|java:util:concurrent:LinkedBlockingQueue|] v5 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.take:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|c|] @scope ((L0001,L0034));
        [|java:util:concurrent:atomic:AtomicInteger|] v1 @varname [|count|] @scope ((L0003,L0034));
        [|java:util:concurrent:locks:ReentrantLock|] v2 @varname [|takeLock|] @scope ((L0005,L0034));
        [|java:lang:Object|] v3 @varname [|x|] @scope ((L001d,L0034));

        v4;
      
#L13a0f4.   v0:= -1  @length 4;
#L13a0f6.   v1:= v5.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L13a0fa.   v2:= v5.[|java:util:concurrent:LinkedBlockingQueue.takeLock|]   @type object;
#L13a0fe.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13a104.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13a10a.   v4:= temp;
#L13a10c.   if v4 != 0 then goto L13a126;
#L13a110.   v4:= v5.[|java:util:concurrent:LinkedBlockingQueue.notEmpty|]   @type object;
#L13a114.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v4) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13a11a.   goto L13a104;
#L13a11c.   v4:= Exception  @type object;
#L13a11e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13a124.   throw v4;
#L13a126.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.dequeue|](v5) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L13a12c.   v3:= temp  @type object;
#L13a12e.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndDecrement|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndDecrement:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13a134.   v0:= temp;
#L13a136.   v4:= 1  @length 4;
#L13a138.   if v0 <= v4 then goto L13a146;
#L13a13c.   v4:= v5.[|java:util:concurrent:LinkedBlockingQueue.notEmpty|]   @type object;
#L13a140.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v4) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13a146.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13a14c.   v4:= v5.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L13a150.   if v0 != v4 then goto L13a15a;
#L13a154.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.signalNotFull|](v5) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.signalNotFull:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type direct;
#L13a15a.   return v3  @type object;
  catch  [|any|] @[L13a104..L13a11a] goto L13a11c;
  catch  [|any|] @[L13a126..L13a146] goto L13a11c;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:LinkedBlockingQueue.toArray|] ([|java:util:concurrent:LinkedBlockingQueue|] v6 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|int|] v1 @varname [|k|] @scope ((L000c,L0011), (L0011,L0015), (L0015,L001c), (L001c,L001d), (L0022,L0026));
        [|java:lang:Object|][] v0 @varname [|a|] @scope ((L000b,L001d), (L0022,L0026));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v3 @varname [|p|] @scope ((L0010,L001d), (L0022,L0026));
        [|int|] v4 @varname [|size|] @scope ((L0009,L001d), (L0022,L0026));

        v2;
        v5;
      
#L13a180.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a186.   v5:= v6.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L13a18a.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v5) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13a190.   v4:= temp;
#L13a192.   v0:= new [|java:lang:Object|][v4];
#L13a196.   v1:= 0  @length 4;
#L13a198.   v5:= v6.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L13a19c.   v3:= v5.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13a1a0.   v2:= v1;
#L13a1a2.   if v3 == 0 then goto L13a1c4;
#L13a1a6.   v1:= v2 + 1;
#L13a1aa.   v5:= v3.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L13a1ae.   v0[v2]:= v5  @type object;
#L13a1b2.   v3:= v3.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13a1b6.   v2:= v1;
#L13a1b8.   goto L13a1a2;
#L13a1ba.   v5:= Exception  @type object;
#L13a1bc.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a1c2.   throw v5;
#L13a1c4.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a1ca.   return v0  @type object;
  catch  [|any|] @[L13a186..L13a1b6] goto L13a1ba;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:LinkedBlockingQueue.toArray|] ([|java:util:concurrent:LinkedBlockingQueue|] v6 @type (this), [|java:lang:Object|][] v7 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|int|] v1 @varname [|k|] @scope ((L001f,L0024), (L0024,L0028), (L0028,L002f), (L002f,L003a));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v3 @varname [|p|] @scope ((L0023,L003a));
        [|int|] v4 @varname [|size|] @scope ((L0009,L003a));


        v0;
        v2;
        v5;
      
#L13a1e8.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a1ee.   v5:= v6.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L13a1f2.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v5) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13a1f8.   v4:= temp;
#L13a1fa.   v5:= v7.length;
#L13a1fc.   if v5 >= v4 then goto L13a224;
#L13a200.   call temp:=  [|java:lang:Object.getClass|](v7) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13a206.   v5:= temp  @type object;
#L13a208.   call temp:=  [|java:lang:Class.getComponentType|](v5) @signature [|Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13a20e.   v5:= temp  @type object;
#L13a210.   call temp:=  [|java:lang:reflect:Array.newInstance|](v5, v4) @signature [|Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;|] @classDescriptor [|java:lang:reflect:Array|] @type static;
#L13a216.   v5:= temp  @type object;
#L13a218.   v5:= ([|java:lang:Object|][])v5;
#L13a21c.   v0:= v5  @type object;
#L13a21e.   v0:= ([|java:lang:Object|][])v0;
#L13a222.   v7:= v0  @type object;
#L13a224.   v1:= 0  @length 4;
#L13a226.   v5:= v6.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L13a22a.   v3:= v5.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13a22e.   v2:= v1;
#L13a230.   if v3 == 0 then goto L13a248;
#L13a234.   v1:= v2 + 1;
#L13a238.   v5:= v3.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L13a23c.   v7[v2]:= v5  @type object;
#L13a240.   v3:= v3.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13a244.   v2:= v1;
#L13a246.   goto L13a230;
#L13a248.   v5:= v7.length;
#L13a24a.   if v5 <= v2 then goto L13a254;
#L13a24e.   v5:= 0  @length 4;
#L13a250.   v7[v2]:= v5  @type object;
#L13a254.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a25a.   return v7  @type object;
#L13a25c.   v5:= Exception  @type object;
#L13a25e.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v6) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a264.   throw v5;
  catch  [|any|] @[L13a1ee..L13a254] goto L13a25c;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:LinkedBlockingQueue.toString|] ([|java:util:concurrent:LinkedBlockingQueue|] v5 @type (this)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L001b,L001f));
        [|java:util:concurrent:LinkedBlockingQueue$Node|] v1 @varname [|p|] @scope ((L0007,L003d));
        [|java:lang:StringBuilder|] v2 @varname [|sb|] @scope ((L0014,L003d));

        v3;
        v4;
      
#L13a284.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyLock|](v5) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a28a.   v3:= v5.[|java:util:concurrent:LinkedBlockingQueue.head|]   @type object;
#L13a28e.   v1:= v3.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13a292.   if v1 != 0 then goto L13a2a2;
#L13a296.   v3:= "[]" @type (object, string);
#L13a29a.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v5) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a2a0.   return v3  @type object;
#L13a2a2.   v2:= new [|java:lang:StringBuilder|];
#L13a2a6.   call temp:=  [|java:lang:StringBuilder.<init>|](v2) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L13a2ac.   v3:= 91  @length 16;
#L13a2b0.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13a2b6.   v0:= v1.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]   @type object;
#L13a2ba.   if v0 != v5 then goto L13a2c2;
#L13a2be.   v0:= "(this Collection)" @type (object, string);
#L13a2c2.   call temp:=  [|java:lang:StringBuilder.append|](v2, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13a2c8.   v1:= v1.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13a2cc.   if v1 != 0 then goto L13a2e6;
#L13a2d0.   v3:= 93  @length 16;
#L13a2d4.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13a2da.   v3:= temp  @type object;
#L13a2dc.   call temp:=  [|java:lang:StringBuilder.toString|](v3) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13a2e2.   v3:= temp  @type object;
#L13a2e4.   goto L13a29a;
#L13a2e6.   v3:= 44  @length 16;
#L13a2ea.   call temp:=  [|java:lang:StringBuilder.append|](v2, v3) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13a2f0.   v3:= temp  @type object;
#L13a2f2.   v4:= 32  @length 16;
#L13a2f6.   call temp:=  [|java:lang:StringBuilder.append|](v3, v4) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13a2fc.   goto L13a2b6;
#L13a2fe.   v3:= Exception  @type object;
#L13a300.   call temp:=  [|java:util:concurrent:LinkedBlockingQueue.fullyUnlock|](v5) @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock:()V|] @classDescriptor [|java:util:concurrent:LinkedBlockingQueue|] @type virtual;
#L13a306.   throw v3;
  catch  [|any|] @[L13a28a..L13a29a] goto L13a2fe;
  catch  [|any|] @[L13a2a2..L13a2fc] goto L13a2fe;

   }
    procedure [|void|] [|java:util:concurrent:LinkedBlockingQueue.unlink|] ([|java:util:concurrent:LinkedBlockingQueue|] v2 @type (this), [|java:util:concurrent:LinkedBlockingQueue$Node|] v3 @type (object), [|java:util:concurrent:LinkedBlockingQueue$Node|] v4 @type (object)) @owner [|java:util:concurrent:LinkedBlockingQueue|] @signature [|Ljava/util/concurrent/LinkedBlockingQueue;.unlink:(Ljava/util/concurrent/LinkedBlockingQueue$Node;Ljava/util/concurrent/LinkedBlockingQueue$Node;)V|] @Access  {
      local temp ;




        v0;
        v1;
      
#L13a32c.   v0:= 0  @length 4;
#L13a32e.   v3.[|java:util:concurrent:LinkedBlockingQueue$Node.item|]  := v0 @type object;
#L13a332.   v0:= v3.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]   @type object;
#L13a336.   v4.[|java:util:concurrent:LinkedBlockingQueue$Node.next|]  := v0 @type object;
#L13a33a.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue.last|]   @type object;
#L13a33e.   if v0 != v3 then goto L13a346;
#L13a342.   v2.[|java:util:concurrent:LinkedBlockingQueue.last|]  := v4 @type object;
#L13a346.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue.count|]   @type object;
#L13a34a.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.getAndDecrement|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.getAndDecrement:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13a350.   v0:= temp;
#L13a352.   v1:= v2.[|java:util:concurrent:LinkedBlockingQueue.capacity|] ;
#L13a356.   if v0 != v1 then goto L13a364;
#L13a35a.   v0:= v2.[|java:util:concurrent:LinkedBlockingQueue.notFull|]   @type object;
#L13a35e.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v0) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13a364.   return @void ;

   }
record [|java:util:concurrent:LinkedTransferQueue$Itr|]  @type class @AccessFlag FINAL extends  [|java:util:Iterator|] {
      [|java:util:concurrent:LinkedTransferQueue$Node|] [|java:util:concurrent:LinkedTransferQueue$Itr.lastPred|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:LinkedTransferQueue$Node|] [|java:util:concurrent:LinkedTransferQueue$Itr.lastRet|]    @AccessFlag PRIVATE;
      [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue$Itr.nextItem|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:LinkedTransferQueue$Node|] [|java:util:concurrent:LinkedTransferQueue$Itr.nextNode|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:LinkedTransferQueue|] [|java:util:concurrent:LinkedTransferQueue$Itr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue$Itr.<init>|] ([|java:util:concurrent:LinkedTransferQueue$Itr|] v1 @type (this), [|java:util:concurrent:LinkedTransferQueue|] v2 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Itr;.<init>:(Ljava/util/concurrent/LinkedTransferQueue;)V|] @Access CONSTRUCTOR {
      local temp ;


        v0;
      
#L13a378.   v1.[|java:util:concurrent:LinkedTransferQueue$Itr.this$0|]  := v2 @type object;
#L13a37c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13a382.   v0:= 0  @length 4;
#L13a384.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Itr.advance|](v1, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Itr;.advance:(Ljava/util/concurrent/LinkedTransferQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Itr|] @type direct;
#L13a38a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue$Itr.advance|] ([|java:util:concurrent:LinkedTransferQueue$Itr|] v8 @type (this), [|java:util:concurrent:LinkedTransferQueue$Node|] v9 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Itr;.advance:(Ljava/util/concurrent/LinkedTransferQueue$Node;)V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedTransferQueue$Node|] v3 @varname [|p|] @scope ((L0010,L001d), (L0040,L006c));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v5 @varname [|s|] @scope ((L0016,L001d), (L002c,L0040), (L0043,L006c));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v0 @varname [|b|] @scope ((L001f,L0040));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v2 @varname [|n|] @scope ((L0038,L0040), (L0062,L006c));
        [|java:lang:Object|] v1 @varname [|item|] @scope ((L0049,L006c));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v4 @varname [|r|] @scope ((L0003,L006c));


        v6;
        v7;
      
#L13a39c.   v7:= 0  @length 4;
#L13a39e.   v4:= v8.[|java:util:concurrent:LinkedTransferQueue$Itr.lastRet|]   @type object;
#L13a3a2.   if v4 == 0 then goto L13a3d6;
#L13a3a6.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v4) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a3ac.   v6:= temp;
#L13a3ae.   if v6 != 0 then goto L13a3d6;
#L13a3b2.   v8.[|java:util:concurrent:LinkedTransferQueue$Itr.lastPred|]  := v4 @type object;
#L13a3b6.   v8.[|java:util:concurrent:LinkedTransferQueue$Itr.lastRet|]  := v9 @type object;
#L13a3ba.   v3:= v9  @type object;
#L13a3bc.   if v3 != 0 then goto L13a41c;
#L13a3c0.   v6:= v8.[|java:util:concurrent:LinkedTransferQueue$Itr.this$0|]   @type object;
#L13a3c4.   v5:= v6.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13a3c8.   if v5 != 0 then goto L13a422;
#L13a3cc.   v8.[|java:util:concurrent:LinkedTransferQueue$Itr.nextNode|]  := v7 @type object;
#L13a3d0.   v8.[|java:util:concurrent:LinkedTransferQueue$Itr.nextItem|]  := v7 @type object;
#L13a3d4.   return @void ;
#L13a3d6.   v0:= v8.[|java:util:concurrent:LinkedTransferQueue$Itr.lastPred|]   @type object;
#L13a3da.   if v0 == 0 then goto L13a3ea;
#L13a3de.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a3e4.   v6:= temp;
#L13a3e6.   if v6 == 0 then goto L13a3f0;
#L13a3ea.   v8.[|java:util:concurrent:LinkedTransferQueue$Itr.lastPred|]  := v7 @type object;
#L13a3ee.   goto L13a3b6;
#L13a3f0.   v5:= v0.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13a3f4.   if v5 == 0 then goto L13a3b6;
#L13a3f8.   if v5 == v0 then goto L13a3b6;
#L13a3fc.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a402.   v6:= temp;
#L13a404.   if v6 == 0 then goto L13a3b6;
#L13a408.   v2:= v5.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13a40c.   if v2 == 0 then goto L13a3b6;
#L13a410.   if v2 == v5 then goto L13a3b6;
#L13a414.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.casNext|](v0, v5, v2) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casNext:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a41a.   goto L13a3f0;
#L13a41c.   v5:= v3.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13a420.   goto L13a3c8;
#L13a422.   if v5 != v3 then goto L13a42a;
#L13a426.   v3:= 0  @length 4;
#L13a428.   goto L13a3bc;
#L13a42a.   v1:= v5.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13a42e.   v6:= v5.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13a432.   if v6 == 0 then goto L13a450;
#L13a436.   if v1 == 0 then goto L13a454;
#L13a43a.   if v1 == v5 then goto L13a454;
#L13a43e.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.cast|](v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.cast:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type static;
#L13a444.   v6:= temp  @type object;
#L13a446.   v8.[|java:util:concurrent:LinkedTransferQueue$Itr.nextItem|]  := v6 @type object;
#L13a44a.   v8.[|java:util:concurrent:LinkedTransferQueue$Itr.nextNode|]  := v5 @type object;
#L13a44e.   goto L13a3d4;
#L13a450.   if v1 == 0 then goto L13a3cc;
#L13a454.   if v3 != 0 then goto L13a45c;
#L13a458.   v3:= v5  @type object;
#L13a45a.   goto L13a3bc;
#L13a45c.   v2:= v5.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13a460.   if v2 == 0 then goto L13a3cc;
#L13a464.   if v5 != v2 then goto L13a46c;
#L13a468.   v3:= 0  @length 4;
#L13a46a.   goto L13a3bc;
#L13a46c.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.casNext|](v3, v5, v2) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casNext:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a472.   goto L13a3bc;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue$Itr.hasNext|] ([|java:util:concurrent:LinkedTransferQueue$Itr|] v1 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Itr;.hasNext:()Z|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L13a484.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue$Itr.nextNode|]   @type object;
#L13a488.   if v0 == 0 then goto L13a490;
#L13a48c.   v0:= 1  @length 4;
#L13a48e.   return v0;
#L13a490.   v0:= 0  @length 4;
#L13a492.   goto L13a48e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue$Itr.next|] ([|java:util:concurrent:LinkedTransferQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Itr;.next:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L000c,L0010));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v1 @varname [|p|] @scope ((L0002,L0010));

        v2;
      
#L13a4a4.   v1:= v3.[|java:util:concurrent:LinkedTransferQueue$Itr.nextNode|]   @type object;
#L13a4a8.   if v1 != 0 then goto L13a4b8;
#L13a4ac.   v2:= new [|java:util:NoSuchElementException|];
#L13a4b0.   call temp:=  [|java:util:NoSuchElementException.<init>|](v2) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L13a4b6.   throw v2;
#L13a4b8.   v0:= v3.[|java:util:concurrent:LinkedTransferQueue$Itr.nextItem|]   @type object;
#L13a4bc.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Itr.advance|](v3, v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Itr;.advance:(Ljava/util/concurrent/LinkedTransferQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Itr|] @type direct;
#L13a4c2.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue$Itr.remove|] ([|java:util:concurrent:LinkedTransferQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue$Itr|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Itr;.remove:()V|] @Access PUBLIC_FINAL {
      local temp ;

        [|java:util:concurrent:LinkedTransferQueue$Node|] v0 @varname [|lastRet|] @scope ((L0002,L001b));

        v1;
        v2;
      
#L13a4d4.   v0:= v3.[|java:util:concurrent:LinkedTransferQueue$Itr.lastRet|]   @type object;
#L13a4d8.   if v0 != 0 then goto L13a4e8;
#L13a4dc.   v1:= new [|java:lang:IllegalStateException|];
#L13a4e0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L13a4e6.   throw v1;
#L13a4e8.   v1:= 0  @length 4;
#L13a4ea.   v3.[|java:util:concurrent:LinkedTransferQueue$Itr.lastRet|]  := v1 @type object;
#L13a4ee.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.tryMatchData|](v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.tryMatchData:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a4f4.   v1:= temp;
#L13a4f6.   if v1 == 0 then goto L13a508;
#L13a4fa.   v1:= v3.[|java:util:concurrent:LinkedTransferQueue$Itr.this$0|]   @type object;
#L13a4fe.   v2:= v3.[|java:util:concurrent:LinkedTransferQueue$Itr.lastPred|]   @type object;
#L13a502.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.unsplice|](v1, v2, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.unsplice:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13a508.   return @void ;

   }
record [|java:util:concurrent:LinkedTransferQueue$Node|]  @type class @AccessFlag FINAL  {
      [|boolean|] [|java:util:concurrent:LinkedTransferQueue$Node.isData|]    @AccessFlag FINAL;
      [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue$Node.item|]    @AccessFlag VOLATILE;
      [|java:util:concurrent:LinkedTransferQueue$Node|] [|java:util:concurrent:LinkedTransferQueue$Node.next|]    @AccessFlag VOLATILE;
      [|java:lang:Thread|] [|java:util:concurrent:LinkedTransferQueue$Node.waiter|]    @AccessFlag VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:LinkedTransferQueue$Node.itemOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:LinkedTransferQueue$Node.nextOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:LinkedTransferQueue$Node.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:LinkedTransferQueue$Node.waiterOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue$Node.<clinit>|] () @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0034,L003a));
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0008,L003a));
        v2;
        v3;
      
#L13a51c.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L13a522.   v2:= temp  @type object;
#L13a524.   @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|] := v2  @type object;
#L13a528.   v1:= new [|java:util:concurrent:LinkedTransferQueue$Node|];
#L13a52c.   v2:= @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]   @type object;
#L13a530.   v3:= "item" @type (object, string);
#L13a534.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13a53a.   v3:= temp  @type object;
#L13a53c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a542.   v2:= temp  @type wide;
#L13a544.   @@[|java:util:concurrent:LinkedTransferQueue$Node.itemOffset|] := v2  @wide;
#L13a548.   v2:= @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]   @type object;
#L13a54c.   v3:= "next" @type (object, string);
#L13a550.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13a556.   v3:= temp  @type object;
#L13a558.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a55e.   v2:= temp  @type wide;
#L13a560.   @@[|java:util:concurrent:LinkedTransferQueue$Node.nextOffset|] := v2  @wide;
#L13a564.   v2:= @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]   @type object;
#L13a568.   v3:= "waiter" @type (object, string);
#L13a56c.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13a572.   v3:= temp  @type object;
#L13a574.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a57a.   v2:= temp  @type wide;
#L13a57c.   @@[|java:util:concurrent:LinkedTransferQueue$Node.waiterOffset|] := v2  @wide;
#L13a580.   return @void ;
#L13a582.   v0:= Exception  @type object;
#L13a584.   v2:= new [|java:lang:Error|];
#L13a588.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13a58e.   throw v2;
  catch  [|java:lang:Exception|] @[L13a51c..L13a580] goto L13a582;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue$Node.<init>|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v3 @type (this), [|java:lang:Object|] v4 @type (object), [|boolean|] v5) @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.<init>:(Ljava/lang/Object;Z)V|] @Access CONSTRUCTOR {
      local temp ;



        v0;
        v1;
        v2;
      
#L13a5b0.   call temp:=  [|java:lang:Object.<init>|](v3) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13a5b6.   v0:= @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]   @type object;
#L13a5ba.   v1:= @@[|java:util:concurrent:LinkedTransferQueue$Node.itemOffset|]   @wide;
#L13a5be.   call temp:=  [|sun:misc:Unsafe.putObject|](v0, v3, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a5c4.   v3.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]  := v5 @boolean;
#L13a5c8.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue$Node.cannotPrecede|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v5 @type (this), [|boolean|] v6) @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.cannotPrecede:(Z)Z|] @Access FINAL {
      local temp ;
        [|java:lang:Object|] v1 @varname [|x|] @scope ((L0008,L000f), (L0010,L0012));
        [|boolean|] v0 @varname [|d|] @scope ((L0004,L0014));


        v2;
        v3;
        v4;
      
#L13a5dc.   v2:= 1  @length 4;
#L13a5de.   v3:= 0  @length 4;
#L13a5e0.   v0:= v5.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13a5e4.   if v0 == v6 then goto L13a600;
#L13a5e8.   v1:= v5.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13a5ec.   if v1 == v5 then goto L13a600;
#L13a5f0.   if v1 == 0 then goto L13a5fc;
#L13a5f4.   v4:= v2;
#L13a5f6.   if v4 != v0 then goto L13a600;
#L13a5fa.   return v2;
#L13a5fc.   v4:= v3;
#L13a5fe.   goto L13a5f6;
#L13a600.   v2:= v3;
#L13a602.   goto L13a5fa;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue$Node.casItem|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access FINAL {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13a614.   v0:= @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]   @type object;
#L13a618.   v2:= @@[|java:util:concurrent:LinkedTransferQueue$Node.itemOffset|]   @wide;
#L13a61c.   v1:= v6  @type object;
#L13a61e.   v4:= v7  @type object;
#L13a620.   v5:= v8  @type object;
#L13a622.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a628.   v0:= temp;
#L13a62a.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue$Node.casNext|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v6 @type (this), [|java:util:concurrent:LinkedTransferQueue$Node|] v7 @type (object), [|java:util:concurrent:LinkedTransferQueue$Node|] v8 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casNext:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @Access FINAL {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13a63c.   v0:= @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]   @type object;
#L13a640.   v2:= @@[|java:util:concurrent:LinkedTransferQueue$Node.nextOffset|]   @wide;
#L13a644.   v1:= v6  @type object;
#L13a646.   v4:= v7  @type object;
#L13a648.   v5:= v8  @type object;
#L13a64a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a650.   v0:= temp;
#L13a652.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue$Node.forgetContents|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v4 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.forgetContents:()V|] @Access FINAL {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L13a664.   v0:= @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]   @type object;
#L13a668.   v1:= @@[|java:util:concurrent:LinkedTransferQueue$Node.itemOffset|]   @wide;
#L13a66c.   call temp:=  [|sun:misc:Unsafe.putObject|](v0, v4, v1, v2, v4) @signature [|Lsun/misc/Unsafe;.putObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a672.   v0:= @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]   @type object;
#L13a676.   v1:= @@[|java:util:concurrent:LinkedTransferQueue$Node.waiterOffset|]   @wide;
#L13a67a.   v3:= 0  @length 4;
#L13a67c.   call temp:=  [|sun:misc:Unsafe.putObject|](v0, v4, v1, v2, v3) @signature [|Lsun/misc/Unsafe;.putObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a682.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue$Node.forgetNext|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v3 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.forgetNext:()V|] @Access FINAL {
      local temp ;

        v0;
        v1;
        v2;
      
#L13a694.   v0:= @@[|java:util:concurrent:LinkedTransferQueue$Node.UNSAFE|]   @type object;
#L13a698.   v1:= @@[|java:util:concurrent:LinkedTransferQueue$Node.nextOffset|]   @wide;
#L13a69c.   call temp:=  [|sun:misc:Unsafe.putObject|](v0, v3, v1, v2, v3) @signature [|Lsun/misc/Unsafe;.putObject:(Ljava/lang/Object;JLjava/lang/Object;)V|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a6a2.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v5 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @Access FINAL {
      local temp ;
        [|java:lang:Object|] v0 @varname [|x|] @scope ((L0004,L0011));

        v1;
        v2;
        v3;
        v4;
      
#L13a6b4.   v2:= 1  @length 4;
#L13a6b6.   v3:= 0  @length 4;
#L13a6b8.   v0:= v5.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13a6bc.   if v0 == v5 then goto L13a6ce;
#L13a6c0.   if v0 != 0 then goto L13a6d2;
#L13a6c4.   v1:= v2;
#L13a6c6.   v4:= v5.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13a6ca.   if v1 != v4 then goto L13a6d0;
#L13a6ce.   v3:= v2;
#L13a6d0.   return v3;
#L13a6d2.   v1:= v3;
#L13a6d4.   goto L13a6c6;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue$Node.isUnmatchedRequest|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v1 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isUnmatchedRequest:()Z|] @Access FINAL {
      local temp ;

        v0;
      
#L13a6e8.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13a6ec.   if v0 != 0 then goto L13a6fc;
#L13a6f0.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13a6f4.   if v0 != 0 then goto L13a6fc;
#L13a6f8.   v0:= 1  @length 4;
#L13a6fa.   return v0;
#L13a6fc.   v0:= 0  @length 4;
#L13a6fe.   goto L13a6fa;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue$Node.tryMatchData|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v2 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue$Node|] @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.tryMatchData:()Z|] @Access FINAL {
      local temp ;
        [|java:lang:Object|] v0 @varname [|x|] @scope ((L0002,L0016));

        v1;
      
#L13a710.   v0:= v2.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13a714.   if v0 == 0 then goto L13a738;
#L13a718.   if v0 == v2 then goto L13a738;
#L13a71c.   v1:= 0  @length 4;
#L13a71e.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.casItem|](v2, v0, v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a724.   v1:= temp;
#L13a726.   if v1 == 0 then goto L13a738;
#L13a72a.   v1:= v2.[|java:util:concurrent:LinkedTransferQueue$Node.waiter|]   @type object;
#L13a72e.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L13a734.   v1:= 1  @length 4;
#L13a736.   return v1;
#L13a738.   v1:= 0  @length 4;
#L13a73a.   goto L13a736;

   }
record [|java:util:concurrent:TransferQueue|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:concurrent:BlockingQueue|] {
   }
    procedure [|int|] [|java:util:concurrent:TransferQueue.getWaitingConsumerCount|] () @owner [|java:util:concurrent:TransferQueue|] @signature [|Ljava/util/concurrent/TransferQueue;.getWaitingConsumerCount:()I|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:TransferQueue.hasWaitingConsumer|] () @owner [|java:util:concurrent:TransferQueue|] @signature [|Ljava/util/concurrent/TransferQueue;.hasWaitingConsumer:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|void|] [|java:util:concurrent:TransferQueue.transfer|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:TransferQueue|] @signature [|Ljava/util/concurrent/TransferQueue;.transfer:(Ljava/lang/Object;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:TransferQueue.tryTransfer|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:TransferQueue|] @signature [|Ljava/util/concurrent/TransferQueue;.tryTransfer:(Ljava/lang/Object;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:TransferQueue.tryTransfer|] ([|java:lang:Object|] v0 @type (object), [|long|] v1, [|java:util:concurrent:TimeUnit|] v3 @type (object)) @owner [|java:util:concurrent:TransferQueue|] @signature [|Ljava/util/concurrent/TransferQueue;.tryTransfer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:LinkedTransferQueue|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractQueue|], [|java:util:concurrent:TransferQueue|], [|java:io:Serializable|] {
      [|java:util:concurrent:LinkedTransferQueue$Node|] [|java:util:concurrent:LinkedTransferQueue.head|]    @AccessFlag VOLATILE_TRANSIENT;
      [|int|] [|java:util:concurrent:LinkedTransferQueue.sweepVotes|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
      [|java:util:concurrent:LinkedTransferQueue$Node|] [|java:util:concurrent:LinkedTransferQueue.tail|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
   }
      global [|int|] @@[|java:util:concurrent:LinkedTransferQueue.ASYNC|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:LinkedTransferQueue.CHAINED_SPINS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:LinkedTransferQueue.FRONT_SPINS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|boolean|] @@[|java:util:concurrent:LinkedTransferQueue.MP|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:LinkedTransferQueue.NOW|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:LinkedTransferQueue.SWEEP_THRESHOLD|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:LinkedTransferQueue.SYNC|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:LinkedTransferQueue.TIMED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:LinkedTransferQueue.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:LinkedTransferQueue.headOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:LinkedTransferQueue.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:LinkedTransferQueue.sweepVotesOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:LinkedTransferQueue.tailOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue.<clinit>|] () @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0015,L0040), (L0042,L0049));
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0043,L0049));
        v2;
        v3;
      
#L13a74c.   v2:= 1  @length 4;
#L13a74e.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L13a754.   v3:= temp  @type object;
#L13a756.   call temp:=  [|java:lang:Runtime.availableProcessors|](v3) @signature [|Ljava/lang/Runtime;.availableProcessors:()I|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L13a75c.   v3:= temp;
#L13a75e.   if v3 <= v2 then goto L13a7cc;
#L13a762.   @@[|java:util:concurrent:LinkedTransferQueue.MP|] := v2  @boolean;
#L13a766.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L13a76c.   v2:= temp  @type object;
#L13a76e.   @@[|java:util:concurrent:LinkedTransferQueue.UNSAFE|] := v2  @type object;
#L13a772.   v1:= new [|java:util:concurrent:LinkedTransferQueue|];
#L13a776.   v2:= @@[|java:util:concurrent:LinkedTransferQueue.UNSAFE|]   @type object;
#L13a77a.   v3:= "head" @type (object, string);
#L13a77e.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13a784.   v3:= temp  @type object;
#L13a786.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a78c.   v2:= temp  @type wide;
#L13a78e.   @@[|java:util:concurrent:LinkedTransferQueue.headOffset|] := v2  @wide;
#L13a792.   v2:= @@[|java:util:concurrent:LinkedTransferQueue.UNSAFE|]   @type object;
#L13a796.   v3:= "tail" @type (object, string);
#L13a79a.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13a7a0.   v3:= temp  @type object;
#L13a7a2.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a7a8.   v2:= temp  @type wide;
#L13a7aa.   @@[|java:util:concurrent:LinkedTransferQueue.tailOffset|] := v2  @wide;
#L13a7ae.   v2:= @@[|java:util:concurrent:LinkedTransferQueue.UNSAFE|]   @type object;
#L13a7b2.   v3:= "sweepVotes" @type (object, string);
#L13a7b6.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13a7bc.   v3:= temp  @type object;
#L13a7be.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a7c4.   v2:= temp  @type wide;
#L13a7c6.   @@[|java:util:concurrent:LinkedTransferQueue.sweepVotesOffset|] := v2  @wide;
#L13a7ca.   return @void ;
#L13a7cc.   v2:= 0  @length 4;
#L13a7ce.   goto L13a762;
#L13a7d0.   v0:= Exception  @type object;
#L13a7d2.   v2:= new [|java:lang:Error|];
#L13a7d6.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13a7dc.   throw v2;
  catch  [|java:lang:Exception|] @[L13a766..L13a7ca] goto L13a7d0;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue.<init>|] ([|java:util:concurrent:LinkedTransferQueue|] v0 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L13a800.   call temp:=  [|java:util:AbstractQueue.<init>|](v0) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L13a806.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue.<init>|] ([|java:util:concurrent:LinkedTransferQueue|] v0 @type (this), [|java:util:Collection|] v1 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L13a818.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.<init>|](v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13a81e.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.addAll|](v0, v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13a824.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue.awaitMatch|] ([|java:util:concurrent:LinkedTransferQueue|] v12 @type (this), [|java:util:concurrent:LinkedTransferQueue$Node|] v13 @type (object), [|java:util:concurrent:LinkedTransferQueue$Node|] v14 @type (object), [|java:lang:Object|] v15 @type (object), [|boolean|] v16, [|long|] v17) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.awaitMatch:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;


        [|java:lang:Object|] v2 @varname [|item|] @scope ((L000e,L0018), (L001b,L0074));
        [|long|] v3 @varname [|lastTime|] @scope ((L0006,L0018), (L001b,L0074));
        [|java:util:concurrent:ThreadLocalRandom|] v7 @varname [|randomYields|] @scope ((L000c,L0018), (L001b,L0074));
        [|int|] v8 @varname [|spins|] @scope ((L000b,L0018), (L001b,L0074));
        [|java:lang:Thread|] v9 @varname [|w|] @scope ((L000a,L0018), (L001b,L0074));
        [|long|] v5 @varname [|now|] @scope ((L005f,L0070));






        v0;
        v1;
        v4;
        v6;
        v10;
        v11;
      
#L13a838.   if v16 == 0 then goto L13a868;
#L13a83c.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L13a842.   v3:= temp  @type wide;
#L13a844.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13a84a.   v9:= temp  @type object;
#L13a84c.   v8:= -1  @length 4;
#L13a84e.   v7:= 0  @length 4;
#L13a850.   v2:= v13.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13a854.   if v2 == v15 then goto L13a86e;
#L13a858.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.forgetContents|](v13) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.forgetContents:()V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a85e.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.cast|](v2) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.cast:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type static;
#L13a864.   v15:= temp  @type object;
#L13a866.   return v15  @type object;
#L13a868.   v3:= 0  @length wide16;
#L13a86c.   goto L13a844;
#L13a86e.   call temp:=  [|java:lang:Thread.isInterrupted|](v9) @signature [|Ljava/lang/Thread;.isInterrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13a874.   v10:= temp;
#L13a876.   if v10 != 0 then goto L13a88a;
#L13a87a.   if v16 == 0 then goto L13a89e;
#L13a87e.   v10:= 0  @length wide16;
#L13a882.   v10:= cmp(v17,v10);
#L13a886.   if v10 > 0 then goto L13a89e;
#L13a88a.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.casItem|](v13, v15, v13) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a890.   v10:= temp;
#L13a892.   if v10 == 0 then goto L13a89e;
#L13a896.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.unsplice|](v12, v14, v13) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.unsplice:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13a89c.   goto L13a866;
#L13a89e.   if v8 >= 0 then goto L13a8bc;
#L13a8a2.   v10:= v13.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13a8a6.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.spinsFor|](v14, v10) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.spinsFor:(Ljava/util/concurrent/LinkedTransferQueue$Node;Z)I|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type static;
#L13a8ac.   v8:= temp;
#L13a8ae.   if v8 <= 0 then goto L13a850;
#L13a8b2.   call temp:=  [|java:util:concurrent:ThreadLocalRandom.current|]() @signature [|Ljava/util/concurrent/ThreadLocalRandom;.current:()Ljava/util/concurrent/ThreadLocalRandom;|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom|] @type static;
#L13a8b8.   v7:= temp  @type object;
#L13a8ba.   goto L13a850;
#L13a8bc.   if v8 <= 0 then goto L13a8dc;
#L13a8c0.   v8:= v8 + -1;
#L13a8c4.   v10:= 64  @length 16;
#L13a8c8.   call temp:=  [|java:util:concurrent:ThreadLocalRandom.nextInt|](v7, v10) @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextInt:(I)I|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom|] @type virtual;
#L13a8ce.   v10:= temp;
#L13a8d0.   if v10 != 0 then goto L13a850;
#L13a8d4.   call temp:=  [|java:lang:Thread.yield|]() @signature [|Ljava/lang/Thread;.yield:()V|] @classDescriptor [|java:lang:Thread|] @type static;
#L13a8da.   goto L13a850;
#L13a8dc.   v10:= v13.[|java:util:concurrent:LinkedTransferQueue$Node.waiter|]   @type object;
#L13a8e0.   if v10 != 0 then goto L13a8ea;
#L13a8e4.   v13.[|java:util:concurrent:LinkedTransferQueue$Node.waiter|]  := v9 @type object;
#L13a8e8.   goto L13a850;
#L13a8ea.   if v16 == 0 then goto L13a918;
#L13a8ee.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L13a8f4.   v5:= temp  @type wide;
#L13a8f6.   v10:= v5 - v3  @type long;
#L13a8fa.   v17:= v17 - v10  @type long;
#L13a8fe.   v10:= 0  @length wide16;
#L13a902.   v10:= cmp(v17,v10);
#L13a906.   if v10 <= 0 then goto L13a914;
#L13a90a.   v0:= v17  @type wide;
#L13a90e.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v12, v0, v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L13a914.   v3:= v5  @type wide;
#L13a916.   goto L13a850;
#L13a918.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v12) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L13a91e.   goto L13a850;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.casHead|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:util:concurrent:LinkedTransferQueue$Node|] v7 @type (object), [|java:util:concurrent:LinkedTransferQueue$Node|] v8 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.casHead:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @Access PRIVATE {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13a930.   v0:= @@[|java:util:concurrent:LinkedTransferQueue.UNSAFE|]   @type object;
#L13a934.   v2:= @@[|java:util:concurrent:LinkedTransferQueue.headOffset|]   @wide;
#L13a938.   v1:= v6  @type object;
#L13a93a.   v4:= v7  @type object;
#L13a93c.   v5:= v8  @type object;
#L13a93e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a944.   v0:= temp;
#L13a946.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.casSweepVotes|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|int|] v7, [|int|] v8) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.casSweepVotes:(II)Z|] @Access PRIVATE {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13a958.   v0:= @@[|java:util:concurrent:LinkedTransferQueue.UNSAFE|]   @type object;
#L13a95c.   v2:= @@[|java:util:concurrent:LinkedTransferQueue.sweepVotesOffset|]   @wide;
#L13a960.   v1:= v6  @type object;
#L13a962.   v4:= v7;
#L13a964.   v5:= v8;
#L13a966.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a96c.   v0:= temp;
#L13a96e.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.casTail|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:util:concurrent:LinkedTransferQueue$Node|] v7 @type (object), [|java:util:concurrent:LinkedTransferQueue$Node|] v8 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.casTail:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @Access PRIVATE {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13a980.   v0:= @@[|java:util:concurrent:LinkedTransferQueue.UNSAFE|]   @type object;
#L13a984.   v2:= @@[|java:util:concurrent:LinkedTransferQueue.tailOffset|]   @wide;
#L13a988.   v1:= v6  @type object;
#L13a98a.   v4:= v7  @type object;
#L13a98c.   v5:= v8  @type object;
#L13a98e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13a994.   v0:= temp;
#L13a996.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue.cast|] ([|java:lang:Object|] v0 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.cast:(Ljava/lang/Object;)Ljava/lang/Object;|] @Access STATIC {
      local temp ;

      
#L13a9a8.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:LinkedTransferQueue.countOfMode|] ([|java:util:concurrent:LinkedTransferQueue|] v4 @type (this), [|boolean|] v5) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.countOfMode:(Z)I|] @Access PRIVATE {
      local temp ;

        [|int|] v0 @varname [|count|] @scope ((L0001,L0024));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v1 @varname [|n|] @scope ((L001c,L0024));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v2 @varname [|p|] @scope ((L0003,L0024));


        v3;
      
#L13a9bc.   v0:= 0  @length 4;
#L13a9be.   v2:= v4.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13a9c2.   if v2 == 0 then goto L13a9ec;
#L13a9c6.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v2) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13a9cc.   v3:= temp;
#L13a9ce.   if v3 != 0 then goto L13a9f0;
#L13a9d2.   v3:= v2.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13a9d6.   if v3 == v5 then goto L13a9de;
#L13a9da.   v3:= 0  @length 4;
#L13a9dc.   return v3;
#L13a9de.   v0:= v0 + 1;
#L13a9e2.    v3:= nan;
#L13a9e8.   if v0 != v3 then goto L13a9f0;
#L13a9ec.   v3:= v0;
#L13a9ee.   goto L13a9dc;
#L13a9f0.   v1:= v2.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13a9f4.   if v1 == v2 then goto L13a9fc;
#L13a9f8.   v2:= v1  @type object;
#L13a9fa.   goto L13a9c2;
#L13a9fc.   v0:= 0  @length 4;
#L13a9fe.   v2:= v4.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13aa02.   goto L13a9c2;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.findAndRemove|] ([|java:util:concurrent:LinkedTransferQueue|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.findAndRemove:(Ljava/lang/Object;)Z|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v0 @varname [|item|] @scope ((L0009,L0021), (L0022,L0024), (L0026,L002f));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v1 @varname [|p|] @scope ((L0005,L0021), (L0022,L0024), (L0026,L002f));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v2 @varname [|pred|] @scope ((L0003,L0021), (L0022,L0024), (L0026,L002f));


        v3;
      
#L13aa14.   if v5 == 0 then goto L13aa5c;
#L13aa18.   v2:= 0  @length 4;
#L13aa1a.   v1:= v4.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13aa1e.   if v1 == 0 then goto L13aa5c;
#L13aa22.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13aa26.   v3:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13aa2a.   if v3 == 0 then goto L13aa58;
#L13aa2e.   if v0 == 0 then goto L13aa60;
#L13aa32.   if v0 == v1 then goto L13aa60;
#L13aa36.   call temp:=  [|java:lang:Object.equals|](v5, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13aa3c.   v3:= temp;
#L13aa3e.   if v3 == 0 then goto L13aa60;
#L13aa42.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.tryMatchData|](v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.tryMatchData:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13aa48.   v3:= temp;
#L13aa4a.   if v3 == 0 then goto L13aa60;
#L13aa4e.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.unsplice|](v4, v2, v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.unsplice:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13aa54.   v3:= 1  @length 4;
#L13aa56.   return v3;
#L13aa58.   if v0 != 0 then goto L13aa60;
#L13aa5c.   v3:= 0  @length 4;
#L13aa5e.   goto L13aa56;
#L13aa60.   v2:= v1  @type object;
#L13aa62.   v1:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13aa66.   if v1 != v2 then goto L13aa1e;
#L13aa6a.   v2:= 0  @length 4;
#L13aa6c.   v1:= v4.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13aa70.   goto L13aa1e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue.firstDataItem|] ([|java:util:concurrent:LinkedTransferQueue|] v4 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.firstDataItem:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v0 @varname [|item|] @scope ((L0007,L0013), (L0014,L001b));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v1 @varname [|p|] @scope ((L0003,L001b));

        v2;
        v3;
      
#L13aa84.   v2:= 0  @length 4;
#L13aa86.   v1:= v4.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13aa8a.   if v1 == 0 then goto L13aaaa;
#L13aa8e.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13aa92.   v3:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13aa96.   if v3 == 0 then goto L13aaac;
#L13aa9a.   if v0 == 0 then goto L13aab0;
#L13aa9e.   if v0 == v1 then goto L13aab0;
#L13aaa2.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.cast|](v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.cast:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type static;
#L13aaa8.   v2:= temp  @type object;
#L13aaaa.   return v2  @type object;
#L13aaac.   if v0 == 0 then goto L13aaaa;
#L13aab0.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.succ|](v4, v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.succ:(Ljava/util/concurrent/LinkedTransferQueue$Node;)Ljava/util/concurrent/LinkedTransferQueue$Node;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13aab6.   v1:= temp  @type object;
#L13aab8.   goto L13aa8a;

   }
    procedure [|java:util:concurrent:LinkedTransferQueue$Node|] [|java:util:concurrent:LinkedTransferQueue.firstOfMode|] ([|java:util:concurrent:LinkedTransferQueue|] v3 @type (this), [|boolean|] v4) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.firstOfMode:(Z)Ljava/util/concurrent/LinkedTransferQueue$Node;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedTransferQueue$Node|] v0 @varname [|p|] @scope ((L0003,L000f), (L0010,L0019));


        v1;
        v2;
      
#L13aacc.   v1:= 0  @length 4;
#L13aace.   v0:= v3.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13aad2.   if v0 == 0 then goto L13aafa;
#L13aad6.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13aadc.   v2:= temp;
#L13aade.   if v2 != 0 then goto L13aaf0;
#L13aae2.   v2:= v0.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13aae6.   if v2 != v4 then goto L13aaec;
#L13aaea.   return v0  @type object;
#L13aaec.   v0:= v1  @type object;
#L13aaee.   goto L13aaea;
#L13aaf0.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.succ|](v3, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.succ:(Ljava/util/concurrent/LinkedTransferQueue$Node;)Ljava/util/concurrent/LinkedTransferQueue$Node;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13aaf6.   v0:= temp  @type object;
#L13aaf8.   goto L13aad2;
#L13aafa.   v0:= v1  @type object;
#L13aafc.   goto L13aaea;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue.readObject|] ([|java:util:concurrent:LinkedTransferQueue|] v1 @type (this), [|java:io:ObjectInputStream|] v2 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v0 @varname [|item|] @scope ((L0007,L000e));


      
#L13ab10.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v2) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L13ab16.   call temp:=  [|java:io:ObjectInputStream.readObject|](v2) @signature [|Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L13ab1c.   v0:= temp  @type object;
#L13ab1e.   if v0 != 0 then goto L13ab24;
#L13ab22.   return @void ;
#L13ab24.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.offer|](v1, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.offer:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13ab2a.   goto L13ab16;

   }
    procedure [|int|] [|java:util:concurrent:LinkedTransferQueue.spinsFor|] ([|java:util:concurrent:LinkedTransferQueue$Node|] v1 @type (object), [|boolean|] v2) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.spinsFor:(Ljava/util/concurrent/LinkedTransferQueue$Node;Z)I|] @Access PRIVATE_STATIC {
      local temp ;


        v0;
      
#L13ab3c.   v0:= @@[|java:util:concurrent:LinkedTransferQueue.MP|]   @boolean;
#L13ab40.   if v0 == 0 then goto L13ab76;
#L13ab44.   if v1 == 0 then goto L13ab76;
#L13ab48.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13ab4c.   if v0 == v2 then goto L13ab56;
#L13ab50.   v0:= 192  @length 16;
#L13ab54.   return v0;
#L13ab56.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13ab5c.   v0:= temp;
#L13ab5e.   if v0 == 0 then goto L13ab68;
#L13ab62.   v0:= 128  @length 16;
#L13ab66.   goto L13ab54;
#L13ab68.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.waiter|]   @type object;
#L13ab6c.   if v0 != 0 then goto L13ab76;
#L13ab70.   v0:= 64  @length 16;
#L13ab74.   goto L13ab54;
#L13ab76.   v0:= 0  @length 4;
#L13ab78.   goto L13ab54;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue.sweep|] ([|java:util:concurrent:LinkedTransferQueue|] v4 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.sweep:()V|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedTransferQueue$Node|] v0 @varname [|n|] @scope ((L0012,L0014), (L0015,L001e));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v2 @varname [|s|] @scope ((L0006,L0014), (L0015,L001e));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v1 @varname [|p|] @scope ((L0002,L001e));

        v3;
      
#L13ab8c.   v1:= v4.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13ab90.   if v1 == 0 then goto L13abb4;
#L13ab94.   v2:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13ab98.   if v2 == 0 then goto L13abb4;
#L13ab9c.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v2) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13aba2.   v3:= temp;
#L13aba4.   if v3 != 0 then goto L13abac;
#L13aba8.   v1:= v2  @type object;
#L13abaa.   goto L13ab90;
#L13abac.   v0:= v2.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13abb0.   if v0 != 0 then goto L13abb6;
#L13abb4.   return @void ;
#L13abb6.   if v2 != v0 then goto L13abc0;
#L13abba.   v1:= v4.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13abbe.   goto L13ab90;
#L13abc0.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.casNext|](v1, v2, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casNext:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13abc6.   goto L13ab90;

   }
    procedure [|java:util:concurrent:LinkedTransferQueue$Node|] [|java:util:concurrent:LinkedTransferQueue.tryAppend|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:util:concurrent:LinkedTransferQueue$Node|] v7 @type (object), [|boolean|] v8) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.tryAppend:(Ljava/util/concurrent/LinkedTransferQueue$Node;Z)Ljava/util/concurrent/LinkedTransferQueue$Node;|] @Access PRIVATE {
      local temp ;

        [|java:util:concurrent:LinkedTransferQueue$Node|] v3 @varname [|u|] @scope ((L0020,L0024));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v0 @varname [|n|] @scope ((L001a,L0050));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v1 @varname [|p|] @scope ((L0004,L0050));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v2 @varname [|t|] @scope ((L0003,L0050));



        v4;
        v5;
      
#L13abd8.   v4:= 0  @length 4;
#L13abda.   v2:= v6.[|java:util:concurrent:LinkedTransferQueue.tail|]   @type object;
#L13abde.   v1:= v2  @type object;
#L13abe0.   if v1 != 0 then goto L13abfc;
#L13abe4.   v1:= v6.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13abe8.   if v1 != 0 then goto L13abfc;
#L13abec.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.casHead|](v6, v4, v7) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.casHead:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13abf2.   v5:= temp;
#L13abf4.   if v5 == 0 then goto L13abe0;
#L13abf8.   v4:= v7  @type object;
#L13abfa.   return v4  @type object;
#L13abfc.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.cannotPrecede|](v1, v8) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.cannotPrecede:(Z)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13ac02.   v5:= temp;
#L13ac04.   if v5 != 0 then goto L13abfa;
#L13ac08.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13ac0c.   if v0 == 0 then goto L13ac2e;
#L13ac10.   if v1 == v2 then goto L13ac22;
#L13ac14.   v3:= v6.[|java:util:concurrent:LinkedTransferQueue.tail|]   @type object;
#L13ac18.   if v2 == v3 then goto L13ac22;
#L13ac1c.   v2:= v3  @type object;
#L13ac1e.   v1:= v3  @type object;
#L13ac20.   goto L13abe0;
#L13ac22.   if v1 == v0 then goto L13ac2a;
#L13ac26.   v1:= v0  @type object;
#L13ac28.   goto L13ac20;
#L13ac2a.   v1:= v4  @type object;
#L13ac2c.   goto L13ac20;
#L13ac2e.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.casNext|](v1, v4, v7) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casNext:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13ac34.   v5:= temp;
#L13ac36.   if v5 != 0 then goto L13ac40;
#L13ac3a.   v1:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13ac3e.   goto L13abe0;
#L13ac40.   if v1 == v2 then goto L13ac74;
#L13ac44.   v4:= v6.[|java:util:concurrent:LinkedTransferQueue.tail|]   @type object;
#L13ac48.   if v4 != v2 then goto L13ac58;
#L13ac4c.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.casTail|](v6, v2, v7) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.casTail:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13ac52.   v4:= temp;
#L13ac54.   if v4 != 0 then goto L13ac74;
#L13ac58.   v2:= v6.[|java:util:concurrent:LinkedTransferQueue.tail|]   @type object;
#L13ac5c.   if v2 == 0 then goto L13ac74;
#L13ac60.   v7:= v2.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13ac64.   if v7 == 0 then goto L13ac74;
#L13ac68.   v7:= v7.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13ac6c.   if v7 == 0 then goto L13ac74;
#L13ac70.   if v7 != v2 then goto L13ac44;
#L13ac74.   v4:= v1  @type object;
#L13ac76.   goto L13abfa;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue.writeObject|] ([|java:util:concurrent:LinkedTransferQueue|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L0011,L0015));
        [|java:util:Iterator|] v1 @varname [|i$|] @scope ((L0007,L001a));


        v2;
      
#L13ac88.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v4) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L13ac8e.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.iterator|](v3) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13ac94.   v1:= temp  @type object;
#L13ac96.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13ac9c.   v2:= temp;
#L13ac9e.   if v2 == 0 then goto L13acb2;
#L13aca2.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13aca8.   v0:= temp  @type object;
#L13acaa.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v0) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L13acb0.   goto L13ac96;
#L13acb2.   v2:= 0  @length 4;
#L13acb4.   call temp:=  [|java:io:ObjectOutputStream.writeObject|](v4, v2) @signature [|Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L13acba.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue.xfer|] ([|java:util:concurrent:LinkedTransferQueue|] v14 @type (this), [|java:lang:Object|] v15 @type (object), [|boolean|] v16, [|int|] v17, [|long|] v18) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|boolean|] v9 @varname [|isData|] @scope ((L0012,L001f), (L0046,L0086));
        [|java:lang:Object|] v10 @varname [|item|] @scope ((L0014,L001f), (L0046,L0086));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v2 @varname [|s|] @scope ((L000b,L0025), (L002a,L0088));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v3 @varname [|pred|] @scope ((L0030,L0045), (L0086,L0088));

        [|java:util:concurrent:LinkedTransferQueue$Node|] v11 @varname [|n|] @scope ((L0053,L005a), (L007e,L0086));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v13 @varname [|q|] @scope ((L004f,L007c));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v8 @varname [|h|] @scope ((L000d,L0088));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v12 @varname [|p|] @scope ((L000e,L0088));





        v0;
        v1;
        v4;
        v5;
        v6;
        v7;
      
#L13accc.   if v16 == 0 then goto L13ace0;
#L13acd0.   if v15 != 0 then goto L13ace0;
#L13acd4.   v1:= new [|java:lang:NullPointerException|];
#L13acd8.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13acde.   throw v1;
#L13ace0.   v2:= 0  @length 4;
#L13ace2.   v8:= v14.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13ace6.   v12:= v8  @type object;
#L13ace8.   if v12 == 0 then goto L13ad0a;
#L13acec.   v9:= v12.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13acf0.   v10:= v12.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13acf4.   if v10 == v12 then goto L13adc4;
#L13acf8.   if v10 == 0 then goto L13ad58;
#L13acfc.   v1:= 1  @length 4;
#L13acfe.   if v1 != v9 then goto L13adc4;
#L13ad02.   v0:= v16;
#L13ad06.   if v9 != v0 then goto L13ad5c;
#L13ad0a.   if v17 == 0 then goto L13ad56;
#L13ad0e.   if v2 != 0 then goto L13ad20;
#L13ad12.   v2:= new [|java:util:concurrent:LinkedTransferQueue$Node|];
#L13ad16.   v0:= v16;
#L13ad1a.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.<init>|](v2, v15, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.<init>:(Ljava/lang/Object;Z)V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type direct;
#L13ad20.   v0:= v16;
#L13ad24.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.tryAppend|](v14, v2, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.tryAppend:(Ljava/util/concurrent/LinkedTransferQueue$Node;Z)Ljava/util/concurrent/LinkedTransferQueue$Node;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13ad2a.   v3:= temp  @type object;
#L13ad2c.   if v3 == 0 then goto L13ace2;
#L13ad30.   v1:= 1  @length 4;
#L13ad32.   v0:= v17;
#L13ad36.   if v0 == v1 then goto L13ad56;
#L13ad3a.   v1:= 3  @length 4;
#L13ad3c.   v0:= v17;
#L13ad40.   if v0 != v1 then goto L13add8;
#L13ad44.   v5:= 1  @length 4;
#L13ad46.   v1:= v14  @type object;
#L13ad48.   v4:= v15  @type object;
#L13ad4a.   v6:= v18  @type wide;
#L13ad4e.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.awaitMatch|](v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.awaitMatch:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13ad54.   v15:= temp  @type object;
#L13ad56.   return v15  @type object;
#L13ad58.   v1:= 0  @length 4;
#L13ad5a.   goto L13acfe;
#L13ad5c.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.casItem|](v12, v10, v15) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13ad62.   v1:= temp;
#L13ad64.   if v1 == 0 then goto L13adc4;
#L13ad68.   v13:= v12  @type object;
#L13ad6a.   if v13 == v8 then goto L13ad92;
#L13ad6e.   v11:= v13.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13ad72.   v1:= v14.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13ad76.   if v1 != v8 then goto L13ada6;
#L13ad7a.   if v11 != 0 then goto L13ad80;
#L13ad7e.   v11:= v13  @type object;
#L13ad80.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.casHead|](v14, v8, v11) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.casHead:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13ad86.   v1:= temp;
#L13ad88.   if v1 == 0 then goto L13ada6;
#L13ad8c.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.forgetNext|](v8) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.forgetNext:()V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13ad92.   v1:= v12.[|java:util:concurrent:LinkedTransferQueue$Node.waiter|]   @type object;
#L13ad96.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L13ad9c.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.cast|](v10) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.cast:(Ljava/lang/Object;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type static;
#L13ada2.   v15:= temp  @type object;
#L13ada4.   goto L13ad56;
#L13ada6.   v8:= v14.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13adaa.   if v8 == 0 then goto L13ad92;
#L13adae.   v13:= v8.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13adb2.   if v13 == 0 then goto L13ad92;
#L13adb6.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v13) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13adbc.   v1:= temp;
#L13adbe.   if v1 != 0 then goto L13ad6a;
#L13adc2.   goto L13ad92;
#L13adc4.   v11:= v12.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13adc8.   if v12 == v11 then goto L13add0;
#L13adcc.   v12:= v11  @type object;
#L13adce.   goto L13ace8;
#L13add0.   v8:= v14.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13add4.   v12:= v8  @type object;
#L13add6.   goto L13adce;
#L13add8.   v5:= 0  @length 4;
#L13adda.   goto L13ad46;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.add|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13adec.   v2:= 1  @length 4;
#L13adee.   v4:= 0  @length wide16;
#L13adf2.   v0:= v6  @type object;
#L13adf4.   v1:= v7  @type object;
#L13adf6.   v3:= v2;
#L13adf8.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13adfe.   return v2;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.contains|] ([|java:util:concurrent:LinkedTransferQueue|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|item|] @scope ((L000a,L0021));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v1 @varname [|p|] @scope ((L0006,L0021));


        v2;
        v3;
      
#L13ae10.   v2:= 0  @length 4;
#L13ae12.   if v5 != 0 then goto L13ae18;
#L13ae16.   return v2;
#L13ae18.   v1:= v4.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13ae1c.   if v1 == 0 then goto L13ae16;
#L13ae20.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.item|]   @type object;
#L13ae24.   v3:= v1.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13ae28.   if v3 == 0 then goto L13ae44;
#L13ae2c.   if v0 == 0 then goto L13ae48;
#L13ae30.   if v0 == v1 then goto L13ae48;
#L13ae34.   call temp:=  [|java:lang:Object.equals|](v5, v0) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13ae3a.   v3:= temp;
#L13ae3c.   if v3 == 0 then goto L13ae48;
#L13ae40.   v2:= 1  @length 4;
#L13ae42.   goto L13ae16;
#L13ae44.   if v0 == 0 then goto L13ae16;
#L13ae48.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.succ|](v4, v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.succ:(Ljava/util/concurrent/LinkedTransferQueue$Node;)Ljava/util/concurrent/LinkedTransferQueue$Node;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13ae4e.   v1:= temp  @type object;
#L13ae50.   goto L13ae1c;

   }
    procedure [|int|] [|java:util:concurrent:LinkedTransferQueue.drainTo|] ([|java:util:concurrent:LinkedTransferQueue|] v3 @type (this), [|java:util:Collection|] v4 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.drainTo:(Ljava/util/Collection;)I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L0015,L001e));
        [|int|] v1 @varname [|n|] @scope ((L0011,L001e));


        v2;
      
#L13ae64.   if v4 != 0 then goto L13ae74;
#L13ae68.   v2:= new [|java:lang:NullPointerException|];
#L13ae6c.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13ae72.   throw v2;
#L13ae74.   if v4 != v3 then goto L13ae84;
#L13ae78.   v2:= new [|java:lang:IllegalArgumentException|];
#L13ae7c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13ae82.   throw v2;
#L13ae84.   v1:= 0  @length 4;
#L13ae86.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.poll|](v3) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13ae8c.   v0:= temp  @type object;
#L13ae8e.   if v0 == 0 then goto L13ae9e;
#L13ae92.   call temp:=  [|java:util:Collection.add|](v4, v0) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L13ae98.   v1:= v1 + 1;
#L13ae9c.   goto L13ae86;
#L13ae9e.   return v1;

   }
    procedure [|int|] [|java:util:concurrent:LinkedTransferQueue.drainTo|] ([|java:util:concurrent:LinkedTransferQueue|] v3 @type (this), [|java:util:Collection|] v4 @type (object), [|int|] v5) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.drainTo:(Ljava/util/Collection;I)I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L0017,L001f));
        [|int|] v1 @varname [|n|] @scope ((L0011,L0020));



        v2;
      
#L13aeb0.   if v4 != 0 then goto L13aec0;
#L13aeb4.   v2:= new [|java:lang:NullPointerException|];
#L13aeb8.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13aebe.   throw v2;
#L13aec0.   if v4 != v3 then goto L13aed0;
#L13aec4.   v2:= new [|java:lang:IllegalArgumentException|];
#L13aec8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13aece.   throw v2;
#L13aed0.   v1:= 0  @length 4;
#L13aed2.   if v1 >= v5 then goto L13aeee;
#L13aed6.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.poll|](v3) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13aedc.   v0:= temp  @type object;
#L13aede.   if v0 == 0 then goto L13aeee;
#L13aee2.   call temp:=  [|java:util:Collection.add|](v4, v0) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L13aee8.   v1:= v1 + 1;
#L13aeec.   goto L13aed2;
#L13aeee.   return v1;

   }
    procedure [|int|] [|java:util:concurrent:LinkedTransferQueue.getWaitingConsumerCount|] ([|java:util:concurrent:LinkedTransferQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.getWaitingConsumerCount:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13af00.   v0:= 0  @length 4;
#L13af02.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.countOfMode|](v1, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.countOfMode:(Z)I|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13af08.   v0:= temp;
#L13af0a.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.hasWaitingConsumer|] ([|java:util:concurrent:LinkedTransferQueue|] v2 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.hasWaitingConsumer:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L13af1c.   v0:= 0  @length 4;
#L13af1e.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.firstOfMode|](v2, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.firstOfMode:(Z)Ljava/util/concurrent/LinkedTransferQueue$Node;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13af24.   v1:= temp  @type object;
#L13af26.   if v1 == 0 then goto L13af2c;
#L13af2a.   v0:= 1  @length 4;
#L13af2c.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.isEmpty|] ([|java:util:concurrent:LinkedTransferQueue|] v3 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:LinkedTransferQueue$Node|] v0 @varname [|p|] @scope ((L0003,L0017));

        v1;
        v2;
      
#L13af40.   v1:= 1  @length 4;
#L13af42.   v0:= v3.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13af46.   if v0 == 0 then goto L13af5e;
#L13af4a.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13af50.   v2:= temp;
#L13af52.   if v2 != 0 then goto L13af64;
#L13af56.   v2:= v0.[|java:util:concurrent:LinkedTransferQueue$Node.isData|]   @boolean;
#L13af5a.   if v2 != 0 then goto L13af60;
#L13af5e.   return v1;
#L13af60.   v1:= 0  @length 4;
#L13af62.   goto L13af5e;
#L13af64.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.succ|](v3, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.succ:(Ljava/util/concurrent/LinkedTransferQueue$Node;)Ljava/util/concurrent/LinkedTransferQueue$Node;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type virtual;
#L13af6a.   v0:= temp  @type object;
#L13af6c.   goto L13af46;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:LinkedTransferQueue.iterator|] ([|java:util:concurrent:LinkedTransferQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13af80.   v0:= new [|java:util:concurrent:LinkedTransferQueue$Itr|];
#L13af84.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Itr.<init>|](v0, v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Itr;.<init>:(Ljava/util/concurrent/LinkedTransferQueue;)V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Itr|] @type direct;
#L13af8a.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.offer|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13af9c.   v2:= 1  @length 4;
#L13af9e.   v4:= 0  @length wide16;
#L13afa2.   v0:= v6  @type object;
#L13afa4.   v1:= v7  @type object;
#L13afa6.   v3:= v2;
#L13afa8.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13afae.   return v2;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.offer|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8, [|java:util:concurrent:TimeUnit|] v10 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;





        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13afc0.   v2:= 1  @length 4;
#L13afc2.   v4:= 0  @length wide16;
#L13afc6.   v0:= v6  @type object;
#L13afc8.   v1:= v7  @type object;
#L13afca.   v3:= v2;
#L13afcc.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13afd2.   return v2;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue.peek|] ([|java:util:concurrent:LinkedTransferQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.peek:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13afe4.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.firstDataItem|](v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.firstDataItem:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13afea.   v0:= temp  @type object;
#L13afec.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue.poll|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.poll:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13b000.   v2:= 0  @length 4;
#L13b002.   v1:= 0  @length 4;
#L13b004.   v4:= 0  @length wide16;
#L13b008.   v0:= v6  @type object;
#L13b00a.   v3:= v2;
#L13b00c.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b012.   v0:= temp  @type object;
#L13b014.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue.poll|] ([|java:util:concurrent:LinkedTransferQueue|] v7 @type (this), [|long|] v8, [|java:util:concurrent:TimeUnit|] v10 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v6 @varname [|e|] @scope ((L000c,L001b));



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13b028.   v1:= 0  @length 4;
#L13b02a.   v2:= 0  @length 4;
#L13b02c.   v3:= 3  @length 4;
#L13b02e.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v10, v8, v9) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13b034.   v4:= temp  @type wide;
#L13b036.   v0:= v7  @type object;
#L13b038.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b03e.   v6:= temp  @type object;
#L13b040.   if v6 != 0 then goto L13b050;
#L13b044.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L13b04a.   v0:= temp;
#L13b04c.   if v0 != 0 then goto L13b052;
#L13b050.   return v6  @type object;
#L13b052.   v0:= new [|java:lang:InterruptedException|];
#L13b056.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L13b05c.   throw v0;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue.put|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.put:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13b070.   v2:= 1  @length 4;
#L13b072.   v4:= 0  @length wide16;
#L13b076.   v0:= v6  @type object;
#L13b078.   v1:= v7  @type object;
#L13b07a.   v3:= v2;
#L13b07c.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b082.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:LinkedTransferQueue.remainingCapacity|] ([|java:util:concurrent:LinkedTransferQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.remainingCapacity:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13b094.    v0:= nan;
#L13b09a.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.remove|] ([|java:util:concurrent:LinkedTransferQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L13b0ac.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.findAndRemove|](v1, v2) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.findAndRemove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b0b2.   v0:= temp;
#L13b0b4.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:LinkedTransferQueue.size|] ([|java:util:concurrent:LinkedTransferQueue|] v1 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.size:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13b0c8.   v0:= 1  @length 4;
#L13b0ca.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.countOfMode|](v1, v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.countOfMode:(Z)I|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b0d0.   v0:= temp;
#L13b0d2.   return v0;

   }
    procedure [|java:util:concurrent:LinkedTransferQueue$Node|] [|java:util:concurrent:LinkedTransferQueue.succ|] ([|java:util:concurrent:LinkedTransferQueue|] v1 @type (this), [|java:util:concurrent:LinkedTransferQueue$Node|] v2 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.succ:(Ljava/util/concurrent/LinkedTransferQueue$Node;)Ljava/util/concurrent/LinkedTransferQueue$Node;|] @Access FINAL {
      local temp ;

        [|java:util:concurrent:LinkedTransferQueue$Node|] v0 @varname [|next|] @scope ((L0002,L0006));


      
#L13b0e4.   v0:= v2.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13b0e8.   if v2 != v0 then goto L13b0f0;
#L13b0ec.   v0:= v1.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13b0f0.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:LinkedTransferQueue.take|] ([|java:util:concurrent:LinkedTransferQueue|] v7 @type (this)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.take:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v6 @varname [|e|] @scope ((L000a,L0016));

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13b104.   v1:= 0  @length 4;
#L13b106.   v2:= 0  @length 4;
#L13b108.   v3:= 2  @length 4;
#L13b10a.   v4:= 0  @length wide16;
#L13b10e.   v0:= v7  @type object;
#L13b110.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b116.   v6:= temp  @type object;
#L13b118.   if v6 == 0 then goto L13b11e;
#L13b11c.   return v6  @type object;
#L13b11e.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L13b124.   v0:= new [|java:lang:InterruptedException|];
#L13b128.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L13b12e.   throw v0;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue.transfer|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.transfer:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13b140.   v2:= 1  @length 4;
#L13b142.   v3:= 2  @length 4;
#L13b144.   v4:= 0  @length wide16;
#L13b148.   v0:= v6  @type object;
#L13b14a.   v1:= v7  @type object;
#L13b14c.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b152.   v0:= temp  @type object;
#L13b154.   if v0 == 0 then goto L13b16a;
#L13b158.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L13b15e.   v0:= new [|java:lang:InterruptedException|];
#L13b162.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L13b168.   throw v0;
#L13b16a.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.tryTransfer|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.tryTransfer:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13b17c.   v2:= 1  @length 4;
#L13b17e.   v3:= 0  @length 4;
#L13b180.   v4:= 0  @length wide16;
#L13b184.   v0:= v6  @type object;
#L13b186.   v1:= v7  @type object;
#L13b188.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b18e.   v0:= temp  @type object;
#L13b190.   if v0 != 0 then goto L13b196;
#L13b194.   return v2;
#L13b196.   v2:= v3;
#L13b198.   goto L13b194;

   }
    procedure [|boolean|] [|java:util:concurrent:LinkedTransferQueue.tryTransfer|] ([|java:util:concurrent:LinkedTransferQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|long|] v8, [|java:util:concurrent:TimeUnit|] v10 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.tryTransfer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;





        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13b1ac.   v2:= 1  @length 4;
#L13b1ae.   v3:= 3  @length 4;
#L13b1b0.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v10, v8, v9) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13b1b6.   v4:= temp  @type wide;
#L13b1b8.   v0:= v6  @type object;
#L13b1ba.   v1:= v7  @type object;
#L13b1bc.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.xfer|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.xfer:(Ljava/lang/Object;ZIJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b1c2.   v0:= temp  @type object;
#L13b1c4.   if v0 != 0 then goto L13b1ca;
#L13b1c8.   return v2;
#L13b1ca.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L13b1d0.   v0:= temp;
#L13b1d2.   if v0 != 0 then goto L13b1da;
#L13b1d6.   v2:= 0  @length 4;
#L13b1d8.   goto L13b1c8;
#L13b1da.   v0:= new [|java:lang:InterruptedException|];
#L13b1de.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L13b1e4.   throw v0;

   }
    procedure [|void|] [|java:util:concurrent:LinkedTransferQueue.unsplice|] ([|java:util:concurrent:LinkedTransferQueue|] v5 @type (this), [|java:util:concurrent:LinkedTransferQueue$Node|] v6 @type (object), [|java:util:concurrent:LinkedTransferQueue$Node|] v7 @type (object)) @owner [|java:util:concurrent:LinkedTransferQueue|] @signature [|Ljava/util/concurrent/LinkedTransferQueue;.unsplice:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)V|] @Access FINAL {
      local temp ;

        [|java:util:concurrent:LinkedTransferQueue$Node|] v0 @varname [|h|] @scope ((L001f,L0025), (L0026,L005e));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v2 @varname [|n|] @scope ((L000d,L0025), (L0026,L005e));
        [|int|] v3 @varname [|v|] @scope ((L0036,L0043), (L0053,L005e));
        [|java:util:concurrent:LinkedTransferQueue$Node|] v1 @varname [|hn|] @scope ((L0045,L0053));



        v4;
      
#L13b1f8.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.forgetContents|](v7) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.forgetContents:()V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13b1fe.   if v6 == 0 then goto L13b242;
#L13b202.   if v6 == v7 then goto L13b242;
#L13b206.   v4:= v6.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13b20a.   if v4 != v7 then goto L13b242;
#L13b20e.   v2:= v7.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13b212.   if v2 == 0 then goto L13b232;
#L13b216.   if v2 == v7 then goto L13b242;
#L13b21a.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.casNext|](v6, v7, v2) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.casNext:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13b220.   v4:= temp;
#L13b222.   if v4 == 0 then goto L13b242;
#L13b226.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v6) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13b22c.   v4:= temp;
#L13b22e.   if v4 == 0 then goto L13b242;
#L13b232.   v0:= v5.[|java:util:concurrent:LinkedTransferQueue.head|]   @type object;
#L13b236.   if v0 == v6 then goto L13b242;
#L13b23a.   if v0 == v7 then goto L13b242;
#L13b23e.   if v0 != 0 then goto L13b244;
#L13b242.   return @void ;
#L13b244.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.isMatched|](v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.isMatched:()Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13b24a.   v4:= temp;
#L13b24c.   if v4 != 0 then goto L13b27e;
#L13b250.   v4:= v6.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13b254.   if v4 == v6 then goto L13b242;
#L13b258.   v4:= v7.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13b25c.   if v4 == v7 then goto L13b242;
#L13b260.   v3:= v5.[|java:util:concurrent:LinkedTransferQueue.sweepVotes|] ;
#L13b264.   v4:= 32  @length 16;
#L13b268.   if v3 >= v4 then goto L13b29e;
#L13b26c.   v4:= v3 + 1;
#L13b270.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.casSweepVotes|](v5, v3, v4) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.casSweepVotes:(II)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b276.   v4:= temp;
#L13b278.   if v4 == 0 then goto L13b260;
#L13b27c.   goto L13b242;
#L13b27e.   v1:= v0.[|java:util:concurrent:LinkedTransferQueue$Node.next|]   @type object;
#L13b282.   if v1 == 0 then goto L13b242;
#L13b286.   if v1 == v0 then goto L13b232;
#L13b28a.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.casHead|](v5, v0, v1) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.casHead:(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b290.   v4:= temp;
#L13b292.   if v4 == 0 then goto L13b232;
#L13b296.   call temp:=  [|java:util:concurrent:LinkedTransferQueue$Node.forgetNext|](v0) @signature [|Ljava/util/concurrent/LinkedTransferQueue$Node;.forgetNext:()V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue$Node|] @type virtual;
#L13b29c.   goto L13b232;
#L13b29e.   v4:= 0  @length 4;
#L13b2a0.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.casSweepVotes|](v5, v3, v4) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.casSweepVotes:(II)Z|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b2a6.   v4:= temp;
#L13b2a8.   if v4 == 0 then goto L13b260;
#L13b2ac.   call temp:=  [|java:util:concurrent:LinkedTransferQueue.sweep|](v5) @signature [|Ljava/util/concurrent/LinkedTransferQueue;.sweep:()V|] @classDescriptor [|java:util:concurrent:LinkedTransferQueue|] @type direct;
#L13b2b2.   goto L13b242;

   }
record [|java:util:concurrent:Phaser$QNode|]  @type class @AccessFlag FINAL extends  [|java:util:concurrent:ForkJoinPool$ManagedBlocker|] {
      [|boolean|] [|java:util:concurrent:Phaser$QNode.interruptible|]    @AccessFlag FINAL;
      [|long|] [|java:util:concurrent:Phaser$QNode.lastTime|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:Phaser$QNode.nanos|]    @AccessFlag ;
      [|java:util:concurrent:Phaser$QNode|] [|java:util:concurrent:Phaser$QNode.next|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:Phaser$QNode.phase|]    @AccessFlag FINAL;
      [|java:util:concurrent:Phaser|] [|java:util:concurrent:Phaser$QNode.phaser|]    @AccessFlag FINAL;
      [|java:lang:Thread|] [|java:util:concurrent:Phaser$QNode.thread|]    @AccessFlag VOLATILE;
      [|boolean|] [|java:util:concurrent:Phaser$QNode.timed|]    @AccessFlag FINAL;
      [|boolean|] [|java:util:concurrent:Phaser$QNode.wasInterrupted|]    @AccessFlag ;
   }
    procedure [|void|] [|java:util:concurrent:Phaser$QNode.<init>|] ([|java:util:concurrent:Phaser$QNode|] v2 @type (this), [|java:util:concurrent:Phaser|] v3 @type (object), [|int|] v4, [|boolean|] v5, [|boolean|] v6, [|long|] v7) @owner [|java:util:concurrent:Phaser$QNode|] @signature [|Ljava/util/concurrent/Phaser$QNode;.<init>:(Ljava/util/concurrent/Phaser;IZZJ)V|] @Access CONSTRUCTOR {
      local temp ;






        v0;
        v1;
      
#L13b2c4.   call temp:=  [|java:lang:Object.<init>|](v2) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13b2ca.   v2.[|java:util:concurrent:Phaser$QNode.phaser|]  := v3 @type object;
#L13b2ce.   v2.[|java:util:concurrent:Phaser$QNode.phase|]  := v4;
#L13b2d2.   v2.[|java:util:concurrent:Phaser$QNode.interruptible|]  := v5 @boolean;
#L13b2d6.   v2.[|java:util:concurrent:Phaser$QNode.nanos|]  := v7 @wide;
#L13b2da.   v2.[|java:util:concurrent:Phaser$QNode.timed|]  := v6 @boolean;
#L13b2de.   if v6 == 0 then goto L13b2fc;
#L13b2e2.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L13b2e8.   v0:= temp  @type wide;
#L13b2ea.   v2.[|java:util:concurrent:Phaser$QNode.lastTime|]  := v0 @wide;
#L13b2ee.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13b2f4.   v0:= temp  @type object;
#L13b2f6.   v2.[|java:util:concurrent:Phaser$QNode.thread|]  := v0 @type object;
#L13b2fa.   return @void ;
#L13b2fc.   v0:= 0  @length wide16;
#L13b300.   goto L13b2ea;

   }
    procedure [|boolean|] [|java:util:concurrent:Phaser$QNode.block|] ([|java:util:concurrent:Phaser$QNode|] v4 @type (this)) @owner [|java:util:concurrent:Phaser$QNode|] @signature [|Ljava/util/concurrent/Phaser$QNode;.block:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L13b314.   call temp:=  [|java:util:concurrent:Phaser$QNode.isReleasable|](v4) @signature [|Ljava/util/concurrent/Phaser$QNode;.isReleasable:()Z|] @classDescriptor [|java:util:concurrent:Phaser$QNode|] @type virtual;
#L13b31a.   v0:= temp;
#L13b31c.   if v0 == 0 then goto L13b324;
#L13b320.   v0:= 1  @length 4;
#L13b322.   return v0;
#L13b324.   v0:= v4.[|java:util:concurrent:Phaser$QNode.timed|]   @boolean;
#L13b328.   if v0 != 0 then goto L13b33c;
#L13b32c.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v4) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L13b332.   call temp:=  [|java:util:concurrent:Phaser$QNode.isReleasable|](v4) @signature [|Ljava/util/concurrent/Phaser$QNode;.isReleasable:()Z|] @classDescriptor [|java:util:concurrent:Phaser$QNode|] @type virtual;
#L13b338.   v0:= temp;
#L13b33a.   goto L13b322;
#L13b33c.   v0:= v4.[|java:util:concurrent:Phaser$QNode.nanos|]   @wide;
#L13b340.   v2:= 0  @length wide16;
#L13b344.   v0:= cmp(v0,v2);
#L13b348.   if v0 <= 0 then goto L13b332;
#L13b34c.   v0:= v4.[|java:util:concurrent:Phaser$QNode.nanos|]   @wide;
#L13b350.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v4, v0, v1) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L13b356.   goto L13b332;

   }
    procedure [|boolean|] [|java:util:concurrent:Phaser$QNode.isReleasable|] ([|java:util:concurrent:Phaser$QNode|] v10 @type (this)) @owner [|java:util:concurrent:Phaser$QNode|] @signature [|Ljava/util/concurrent/Phaser$QNode;.isReleasable:()Z|] @Access PUBLIC {
      local temp ;
        [|long|] v0 @varname [|now|] @scope ((L0037,L0042));

        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
      
#L13b368.   v8:= 0  @length wide16;
#L13b36c.   v7:= 0  @length 4;
#L13b36e.   v2:= 1  @length 4;
#L13b370.   v3:= v10.[|java:util:concurrent:Phaser$QNode.thread|]   @type object;
#L13b374.   if v3 != 0 then goto L13b37a;
#L13b378.   return v2;
#L13b37a.   v3:= v10.[|java:util:concurrent:Phaser$QNode.phaser|]   @type object;
#L13b37e.   call temp:=  [|java:util:concurrent:Phaser.getPhase|](v3) @signature [|Ljava/util/concurrent/Phaser;.getPhase:()I|] @classDescriptor [|java:util:concurrent:Phaser|] @type virtual;
#L13b384.   v3:= temp;
#L13b386.   v4:= v10.[|java:util:concurrent:Phaser$QNode.phase|] ;
#L13b38a.   if v3 == v4 then goto L13b394;
#L13b38e.   v10.[|java:util:concurrent:Phaser$QNode.thread|]  := v7 @type object;
#L13b392.   goto L13b378;
#L13b394.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L13b39a.   v3:= temp;
#L13b39c.   if v3 == 0 then goto L13b3a4;
#L13b3a0.   v10.[|java:util:concurrent:Phaser$QNode.wasInterrupted|]  := v2 @boolean;
#L13b3a4.   v3:= v10.[|java:util:concurrent:Phaser$QNode.wasInterrupted|]   @boolean;
#L13b3a8.   if v3 == 0 then goto L13b3ba;
#L13b3ac.   v3:= v10.[|java:util:concurrent:Phaser$QNode.interruptible|]   @boolean;
#L13b3b0.   if v3 == 0 then goto L13b3ba;
#L13b3b4.   v10.[|java:util:concurrent:Phaser$QNode.thread|]  := v7 @type object;
#L13b3b8.   goto L13b378;
#L13b3ba.   v3:= v10.[|java:util:concurrent:Phaser$QNode.timed|]   @boolean;
#L13b3be.   if v3 == 0 then goto L13b3fe;
#L13b3c2.   v3:= v10.[|java:util:concurrent:Phaser$QNode.nanos|]   @wide;
#L13b3c6.   v3:= cmp(v3,v8);
#L13b3ca.   if v3 <= 0 then goto L13b3ec;
#L13b3ce.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L13b3d4.   v0:= temp  @type wide;
#L13b3d6.   v3:= v10.[|java:util:concurrent:Phaser$QNode.nanos|]   @wide;
#L13b3da.   v5:= v10.[|java:util:concurrent:Phaser$QNode.lastTime|]   @wide;
#L13b3de.   v5:= v0 - v5  @type long;
#L13b3e2.   v3:= v3 - v5  @type long;
#L13b3e4.   v10.[|java:util:concurrent:Phaser$QNode.nanos|]  := v3 @wide;
#L13b3e8.   v10.[|java:util:concurrent:Phaser$QNode.lastTime|]  := v0 @wide;
#L13b3ec.   v3:= v10.[|java:util:concurrent:Phaser$QNode.nanos|]   @wide;
#L13b3f0.   v3:= cmp(v3,v8);
#L13b3f4.   if v3 > 0 then goto L13b3fe;
#L13b3f8.   v10.[|java:util:concurrent:Phaser$QNode.thread|]  := v7 @type object;
#L13b3fc.   goto L13b378;
#L13b3fe.   v2:= 0  @length 4;
#L13b400.   goto L13b378;

   }
record [|java:util:concurrent:Phaser|]  @type class @AccessFlag PUBLIC  {
      [|java:util:concurrent:atomic:AtomicReference|] [|java:util:concurrent:Phaser.evenQ|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:atomic:AtomicReference|] [|java:util:concurrent:Phaser.oddQ|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:Phaser|] [|java:util:concurrent:Phaser.parent|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:Phaser|] [|java:util:concurrent:Phaser.root|]    @AccessFlag PRIVATE_FINAL;
      [|long|] [|java:util:concurrent:Phaser.state|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|long|] @@[|java:util:concurrent:Phaser.COUNTS_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.EMPTY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.MAX_PARTIES|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.MAX_PHASE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.NCPU|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.ONE_ARRIVAL|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.ONE_DEREGISTER|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.ONE_PARTY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:Phaser.PARTIES_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.PARTIES_SHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.PHASE_SHIFT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.SPINS_PER_ARRIVAL|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:Phaser.TERMINATION_BIT|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:Phaser.UNARRIVED_MASK|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:Phaser.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:Phaser.stateOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:Phaser.<clinit>|] () @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L001a,L0029), (L002c,L0033));
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L002d,L0033));
        v2;
        v3;
      
#L13b414.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L13b41a.   v2:= temp  @type object;
#L13b41c.   call temp:=  [|java:lang:Runtime.availableProcessors|](v2) @signature [|Ljava/lang/Runtime;.availableProcessors:()I|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L13b422.   v2:= temp;
#L13b424.   @@[|java:util:concurrent:Phaser.NCPU|] := v2;
#L13b428.   v2:= @@[|java:util:concurrent:Phaser.NCPU|] ;
#L13b42c.   v3:= 2  @length 4;
#L13b42e.   if v2 >= v3 then goto L13b466;
#L13b432.   v2:= 1  @length 4;
#L13b434.   @@[|java:util:concurrent:Phaser.SPINS_PER_ARRIVAL|] := v2;
#L13b438.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L13b43e.   v2:= temp  @type object;
#L13b440.   @@[|java:util:concurrent:Phaser.UNSAFE|] := v2  @type object;
#L13b444.   v1:= new [|java:util:concurrent:Phaser|];
#L13b448.   v2:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13b44c.   v3:= "state" @type (object, string);
#L13b450.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13b456.   v3:= temp  @type object;
#L13b458.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13b45e.   v2:= temp  @type wide;
#L13b460.   @@[|java:util:concurrent:Phaser.stateOffset|] := v2  @wide;
#L13b464.   return @void ;
#L13b466.   v2:= 256  @length 16;
#L13b46a.   goto L13b434;
#L13b46c.   v0:= Exception  @type object;
#L13b46e.   v2:= new [|java:lang:Error|];
#L13b472.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13b478.   throw v2;
  catch  [|java:lang:Exception|] @[L13b438..L13b464] goto L13b46c;

   }
    procedure [|void|] [|java:util:concurrent:Phaser.<init>|] ([|java:util:concurrent:Phaser|] v2 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        v0;
        v1;
      
#L13b49c.   v0:= 0  @length 4;
#L13b49e.   v1:= 0  @length 4;
#L13b4a0.   call temp:=  [|java:util:concurrent:Phaser.<init>|](v2, v0, v1) @signature [|Ljava/util/concurrent/Phaser;.<init>:(Ljava/util/concurrent/Phaser;I)V|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b4a6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Phaser.<init>|] ([|java:util:concurrent:Phaser|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L13b4b8.   v0:= 0  @length 4;
#L13b4ba.   call temp:=  [|java:util:concurrent:Phaser.<init>|](v1, v0, v2) @signature [|Ljava/util/concurrent/Phaser;.<init>:(Ljava/util/concurrent/Phaser;I)V|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b4c0.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Phaser.<init>|] ([|java:util:concurrent:Phaser|] v1 @type (this), [|java:util:concurrent:Phaser|] v2 @type (object)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.<init>:(Ljava/util/concurrent/Phaser;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L13b4d4.   v0:= 0  @length 4;
#L13b4d6.   call temp:=  [|java:util:concurrent:Phaser.<init>|](v1, v2, v0) @signature [|Ljava/util/concurrent/Phaser;.<init>:(Ljava/util/concurrent/Phaser;I)V|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b4dc.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Phaser.<init>|] ([|java:util:concurrent:Phaser|] v7 @type (this), [|java:util:concurrent:Phaser|] v8 @type (object), [|int|] v9) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.<init>:(Ljava/util/concurrent/Phaser;I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;
        [|java:util:concurrent:Phaser|] v1 @varname [|root|] @scope ((L0016,L0027));
        [|int|] v0 @varname [|phase|] @scope ((L0010,L004b));



        v2;
        v3;
        v4;
        v5;
        v6;
      
#L13b4f0.   call temp:=  [|java:lang:Object.<init>|](v7) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13b4f6.   v2:= v9 ^>> 16;
#L13b4fa.   if v2 == 0 then goto L13b50e;
#L13b4fe.   v2:= new [|java:lang:IllegalArgumentException|];
#L13b502.   v3:= "Illegal number of parties" @type (object, string);
#L13b506.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2, v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13b50c.   throw v2;
#L13b50e.   v0:= 0  @length 4;
#L13b510.   v7.[|java:util:concurrent:Phaser.parent|]  := v8 @type object;
#L13b514.   if v8 == 0 then goto L13b54c;
#L13b518.   v1:= v8.[|java:util:concurrent:Phaser.root|]   @type object;
#L13b51c.   v7.[|java:util:concurrent:Phaser.root|]  := v1 @type object;
#L13b520.   v2:= v1.[|java:util:concurrent:Phaser.evenQ|]   @type object;
#L13b524.   v7.[|java:util:concurrent:Phaser.evenQ|]  := v2 @type object;
#L13b528.   v2:= v1.[|java:util:concurrent:Phaser.oddQ|]   @type object;
#L13b52c.   v7.[|java:util:concurrent:Phaser.oddQ|]  := v2 @type object;
#L13b530.   if v9 == 0 then goto L13b53e;
#L13b534.   v2:= 1  @length 4;
#L13b536.   call temp:=  [|java:util:concurrent:Phaser.doRegister|](v8, v2) @signature [|Ljava/util/concurrent/Phaser;.doRegister:(I)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b53c.   v0:= temp;
#L13b53e.   if v9 != 0 then goto L13b56e;
#L13b542.   v2:= 1  @length wide16;
#L13b546.   v7.[|java:util:concurrent:Phaser.state|]  := v2 @wide;
#L13b54a.   return @void ;
#L13b54c.   v7.[|java:util:concurrent:Phaser.root|]  := v7 @type object;
#L13b550.   v2:= new [|java:util:concurrent:atomic:AtomicReference|];
#L13b554.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.<init>|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type direct;
#L13b55a.   v7.[|java:util:concurrent:Phaser.evenQ|]  := v2 @type object;
#L13b55e.   v2:= new [|java:util:concurrent:atomic:AtomicReference|];
#L13b562.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.<init>|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type direct;
#L13b568.   v7.[|java:util:concurrent:Phaser.oddQ|]  := v2 @type object;
#L13b56c.   goto L13b53e;
#L13b56e.   v2:= (long)v0  @type i2l;
#L13b570.   v4:= 32  @length 16;
#L13b574.   v2:= v2 ^< v4  @type long;
#L13b576.   v4:= (long)v9  @type i2l;
#L13b578.   v6:= 16  @length 16;
#L13b57c.   v4:= v4 ^< v6  @type long;
#L13b57e.   v2:= v2 ^| v4  @type long;
#L13b580.   v4:= (long)v9  @type i2l;
#L13b582.   v2:= v2 ^| v4  @type long;
#L13b584.   goto L13b546;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.abortWait|] ([|java:util:concurrent:Phaser|] v7 @type (this), [|int|] v8) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.abortWait:(I)I|] @Access PRIVATE {
      local temp ;
        [|java:lang:Thread|] v3 @varname [|t|] @scope ((L0018,L001e), (L0022,L0033));
        [|java:util:concurrent:atomic:AtomicReference|] v0 @varname [|head|] @scope ((L0006,L001f), (L0022,L0033));
        [|int|] v1 @varname [|p|] @scope ((L0014,L001f), (L0022,L0033));
        [|java:util:concurrent:Phaser$QNode|] v2 @varname [|q|] @scope ((L000c,L001f), (L0022,L0033));


        v4;
        v5;
        v6;
      
#L13b598.   v4:= v8 ^& 1;
#L13b59c.   if v4 != 0 then goto L13b5d6;
#L13b5a0.   v0:= v7.[|java:util:concurrent:Phaser.evenQ|]   @type object;
#L13b5a4.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type virtual;
#L13b5aa.   v2:= temp  @type object;
#L13b5ac.   v2:= ([|java:util:concurrent:Phaser$QNode|])v2;
#L13b5b0.   v4:= v7.[|java:util:concurrent:Phaser.root|]   @type object;
#L13b5b4.   v4:= v4.[|java:util:concurrent:Phaser.state|]   @wide;
#L13b5b8.   v6:= 32  @length 16;
#L13b5bc.   v4:= v4 ^>> v6  @type long;
#L13b5be.   v1:= (int)v4  @type l2i;
#L13b5c0.   if v2 == 0 then goto L13b5d4;
#L13b5c4.   v3:= v2.[|java:util:concurrent:Phaser$QNode.thread|]   @type object;
#L13b5c8.   if v3 == 0 then goto L13b5dc;
#L13b5cc.   v4:= v2.[|java:util:concurrent:Phaser$QNode.phase|] ;
#L13b5d0.   if v4 != v1 then goto L13b5dc;
#L13b5d4.   return v1;
#L13b5d6.   v0:= v7.[|java:util:concurrent:Phaser.oddQ|]   @type object;
#L13b5da.   goto L13b5a4;
#L13b5dc.   v4:= v2.[|java:util:concurrent:Phaser$QNode.next|]   @type object;
#L13b5e0.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.compareAndSet|](v0, v2, v4) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type virtual;
#L13b5e6.   v4:= temp;
#L13b5e8.   if v4 == 0 then goto L13b5a4;
#L13b5ec.   if v3 == 0 then goto L13b5a4;
#L13b5f0.   v4:= 0  @length 4;
#L13b5f2.   v2.[|java:util:concurrent:Phaser$QNode.thread|]  := v4 @type object;
#L13b5f6.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v3) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L13b5fc.   goto L13b5a4;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.arrivedOf|] ([|long|] v3) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.arrivedOf:(J)I|] @Access PRIVATE_STATIC {
      local temp ;
        [|int|] v0 @varname [|counts|] @scope ((L0001,L000e));

        v1;
        v2;
      
#L13b610.   v0:= (int)v3  @type l2i;
#L13b612.   v1:= 1  @length 4;
#L13b614.   if v0 != v1 then goto L13b61c;
#L13b618.   v1:= 0  @length 4;
#L13b61a.   return v1;
#L13b61c.   v1:= v0 ^>> 16;
#L13b620.    v2:= 0.000000;
#L13b626.   v2:= v2 ^& v0  @type int;
#L13b628.   v1:= v1 - v2  @type int;
#L13b62a.   goto L13b61a;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:Phaser.badArrive|] ([|java:util:concurrent:Phaser|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.badArrive:(J)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;


        v0;
        v1;
      
#L13b63c.   v0:= new [|java:lang:StringBuilder|];
#L13b640.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L13b646.   v1:= "Attempted arrival of unregistered party for " @type (object, string);
#L13b64a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13b650.   v0:= temp  @type object;
#L13b652.   call temp:=  [|java:util:concurrent:Phaser.stateToString|](v2, v3, v4) @signature [|Ljava/util/concurrent/Phaser;.stateToString:(J)Ljava/lang/String;|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b658.   v1:= temp  @type object;
#L13b65a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13b660.   v0:= temp  @type object;
#L13b662.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13b668.   v0:= temp  @type object;
#L13b66a.   return v0  @type object;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:Phaser.badRegister|] ([|java:util:concurrent:Phaser|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.badRegister:(J)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;


        v0;
        v1;
      
#L13b67c.   v0:= new [|java:lang:StringBuilder|];
#L13b680.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L13b686.   v1:= "Attempt to register more than 65535 parties for " @type (object, string);
#L13b68a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13b690.   v0:= temp  @type object;
#L13b692.   call temp:=  [|java:util:concurrent:Phaser.stateToString|](v2, v3, v4) @signature [|Ljava/util/concurrent/Phaser;.stateToString:(J)Ljava/lang/String;|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b698.   v1:= temp  @type object;
#L13b69a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13b6a0.   v0:= temp  @type object;
#L13b6a2.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13b6a8.   v0:= temp  @type object;
#L13b6aa.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.doArrive|] ([|java:util:concurrent:Phaser|] v34 @type (this), [|int|] v35) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.doArrive:(I)I|] @Access PRIVATE {
      local temp ;
        [|int|] v30 @varname [|phase|] @scope ((L0017,L001b), (L001b,L001c), (L0021,L009a), (L009a,L009b), (L009b,L00cf));
        [|long|] v7 @varname [|s|] @scope ((L0010,L001c), (L0021,L0048), (L0048,L0098), (L0098,L009b), (L009b,L00cf));
        [|int|] v33 @varname [|unarrived|] @scope ((L002b,L0039), (L003f,L00cf));
        [|long|] v17 @varname [|n|] @scope ((L005c,L0097), (L009b,L00cf));
        [|int|] v28 @varname [|nextPhase|] @scope ((L007e,L0097));
        [|int|] v29 @varname [|nextUnarrived|] @scope ((L0061,L0097), (L009b,L00cf));
        [|int|] v27 @varname [|counts|] @scope ((L0024,L00cf));
        [|java:util:concurrent:Phaser|] v32 @varname [|root|] @scope ((L0006,L00cf));


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v18;
        v19;
        v20;
        v21;
        v22;
        v23;
        v24;
        v25;
        v26;
        v31;
      
#L13b6bc.   v0:= v34  @type object;
#L13b6c0.   v0:= v0.[|java:util:concurrent:Phaser.root|]   @type object;
#L13b6c4.   v32:= v0  @type object;
#L13b6c8.   v0:= v32  @type object;
#L13b6cc.   v1:= v34  @type object;
#L13b6d0.   if v0 != v1 then goto L13b6f4;
#L13b6d4.   v0:= v34  @type object;
#L13b6d8.   v7:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13b6dc.   v3:= 32  @length 16;
#L13b6e0.   v3:= v7 ^>> v3  @type long;
#L13b6e4.   v0:= (int)v3  @type l2i;
#L13b6e6.   v30:= v0;
#L13b6ea.   if v30 >= 0 then goto L13b6fe;
#L13b6ee.   v31:= v30;
#L13b6f2.   return v31;
#L13b6f4.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v34) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b6fa.   v7:= temp  @type wide;
#L13b6fc.   goto L13b6dc;
#L13b6fe.   v0:= (int)v7  @type l2i;
#L13b700.   v27:= v0;
#L13b704.   v3:= 1  @length 4;
#L13b706.   v0:= v27;
#L13b70a.   if v0 != v3 then goto L13b72e;
#L13b70e.   v33:= 0  @length 16;
#L13b712.   if v33 > 0 then goto L13b73a;
#L13b716.   v3:= new [|java:lang:IllegalStateException|];
#L13b71a.   v0:= v34  @type object;
#L13b71e.   call temp:=  [|java:util:concurrent:Phaser.badArrive|](v0, v7, v8) @signature [|Ljava/util/concurrent/Phaser;.badArrive:(J)Ljava/lang/String;|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b724.   v4:= temp  @type object;
#L13b726.   call temp:=  [|java:lang:IllegalStateException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L13b72c.   throw v3;
#L13b72e.    v3:= 0.000000;
#L13b734.   v33:= v27 ^& v3  @type int;
#L13b738.   goto L13b712;
#L13b73a.   v3:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13b73e.   v5:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13b742.   v0:= v35;
#L13b746.   v11:= (long)v0  @type i2l;
#L13b748.   v9:= v7 - v11  @type long;
#L13b74c.   v4:= v34  @type object;
#L13b750.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v3, v4, v5, v6, v7, v8, v9, v10) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13b756.   v3:= temp;
#L13b758.   if v3 == 0 then goto L13b6c8;
#L13b75c.   v3:= 1  @length 4;
#L13b75e.   v0:= v33;
#L13b762.   if v0 != v3 then goto L13b7ea;
#L13b766.   v3:= 0.000000L  @length wide;
#L13b770.   v17:= v9 ^& v3  @type long;
#L13b774.   v0:= v17  @type wide;
#L13b778.   v3:= (int)v0  @type l2i;
#L13b77a.   v29:= v3 ^>> 16;
#L13b77e.   v0:= v32  @type object;
#L13b782.   v1:= v34  @type object;
#L13b786.   if v0 != v1 then goto L13b80c;
#L13b78a.   v0:= v34  @type object;
#L13b78e.   v1:= v30;
#L13b792.   v2:= v29;
#L13b796.   call temp:=  [|java:util:concurrent:Phaser.onAdvance|](v0, v1, v2) @signature [|Ljava/util/concurrent/Phaser;.onAdvance:(II)Z|] @classDescriptor [|java:util:concurrent:Phaser|] @type virtual;
#L13b79c.   v3:= temp;
#L13b79e.   if v3 == 0 then goto L13b7f2;
#L13b7a2.   v3:= -9223372036854775808L  @length wide_high16;
#L13b7a6.   v17:= v17 ^| v3  @type long;
#L13b7aa.   v3:= v30 + 1;
#L13b7ae.    v4:= nan;
#L13b7b4.   v28:= v3 ^& v4  @type int;
#L13b7b8.   v0:= v28;
#L13b7bc.   v3:= (long)v0  @type i2l;
#L13b7be.   v5:= 32  @length 16;
#L13b7c2.   v3:= v3 ^< v5  @type long;
#L13b7c4.   v17:= v17 ^| v3  @type long;
#L13b7c8.   v11:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13b7cc.   v13:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13b7d0.   v12:= v34  @type object;
#L13b7d4.   v15:= v9  @type wide;
#L13b7d6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v11, v12, v13, v14, v15, v16, v17, v18) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13b7dc.   v0:= v34  @type object;
#L13b7e0.   v1:= v30;
#L13b7e4.   call temp:=  [|java:util:concurrent:Phaser.releaseWaiters|](v0, v1) @signature [|Ljava/util/concurrent/Phaser;.releaseWaiters:(I)V|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b7ea.   v7:= v9  @type wide;
#L13b7ec.   v31:= v30;
#L13b7f0.   goto L13b6f2;
#L13b7f2.   if v29 != 0 then goto L13b800;
#L13b7f6.   v3:= 1  @length wide16;
#L13b7fa.   v17:= v17 ^| v3  @type long;
#L13b7fe.   goto L13b7aa;
#L13b800.   v0:= v29;
#L13b804.   v3:= (long)v0  @type i2l;
#L13b806.   v17:= v17 ^| v3  @type long;
#L13b80a.   goto L13b7aa;
#L13b80c.   if v29 != 0 then goto L13b846;
#L13b810.   v0:= v34  @type object;
#L13b814.   v3:= v0.[|java:util:concurrent:Phaser.parent|]   @type object;
#L13b818.    v4:= 0.000000;
#L13b81e.   call temp:=  [|java:util:concurrent:Phaser.doArrive|](v3, v4) @signature [|Ljava/util/concurrent/Phaser;.doArrive:(I)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b824.   v30:= temp;
#L13b826.   v19:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13b82a.   v21:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13b82e.   v3:= 1  @length wide16;
#L13b832.   v25:= v9 ^| v3  @type long;
#L13b836.   v20:= v34  @type object;
#L13b83a.   v23:= v9  @type wide;
#L13b83e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v19, v20, v21, v22, v23, v24, v25, v26) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13b844.   goto L13b7ea;
#L13b846.   v0:= v34  @type object;
#L13b84a.   v3:= v0.[|java:util:concurrent:Phaser.parent|]   @type object;
#L13b84e.   v4:= 1  @length 4;
#L13b850.   call temp:=  [|java:util:concurrent:Phaser.doArrive|](v3, v4) @signature [|Ljava/util/concurrent/Phaser;.doArrive:(I)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b856.   v30:= temp;
#L13b858.   goto L13b7ea;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.doRegister|] ([|java:util:concurrent:Phaser|] v24 @type (this), [|int|] v25) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.doRegister:(I)I|] @Access PRIVATE {
      local temp ;
        [|long|] v5 @varname [|s|] @scope ((L0017,L0036), (L003b,L00ca));
        [|int|] v19 @varname [|counts|] @scope ((L001a,L0036), (L003b,L00ca));
        [|int|] v21 @varname [|parties|] @scope ((L001c,L0036), (L003b,L00ca));
        [|int|] v23 @varname [|unarrived|] @scope ((L0021,L0036), (L003b,L00ca));
        [|long|] v7 @varname [|next|] @scope ((L007a,L0087));
        [|long|] v17 @varname [|adjust|] @scope ((L000b,L00ca));
        [|java:util:concurrent:Phaser|] v20 @varname [|parent|] @scope ((L0011,L00ca));
        [|int|] v22 @varname [|phase|] @scope ((L0042,L00ca));


        v0;
        v1;
        v2;
        v3;
        v4;
        v6;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v18;
      
#L13b86c.   v0:= v25;
#L13b870.   v1:= (long)v0  @type i2l;
#L13b872.   v3:= 16  @length 16;
#L13b876.   v1:= v1 ^< v3  @type long;
#L13b878.   v0:= v25;
#L13b87c.   v3:= (long)v0  @type i2l;
#L13b87e.   v17:= v1 ^| v3  @type long;
#L13b882.   v0:= v24  @type object;
#L13b886.   v0:= v0.[|java:util:concurrent:Phaser.parent|]   @type object;
#L13b88a.   v20:= v0  @type object;
#L13b88e.   if v20 != 0 then goto L13b8d8;
#L13b892.   v0:= v24  @type object;
#L13b896.   v5:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13b89a.   v0:= (int)v5  @type l2i;
#L13b89c.   v19:= v0;
#L13b8a0.   v21:= v19 ^>> 16;
#L13b8a4.    v1:= 0.000000;
#L13b8aa.   v23:= v19 ^& v1  @type int;
#L13b8ae.    v1:= 0.000000;
#L13b8b4.   v1:= v1 - v21  @type int;
#L13b8b8.   v0:= v25;
#L13b8bc.   if v0 <= v1 then goto L13b8e2;
#L13b8c0.   v1:= new [|java:lang:IllegalStateException|];
#L13b8c4.   v0:= v24  @type object;
#L13b8c8.   call temp:=  [|java:util:concurrent:Phaser.badRegister|](v0, v5, v6) @signature [|Ljava/util/concurrent/Phaser;.badRegister:(J)Ljava/lang/String;|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b8ce.   v2:= temp  @type object;
#L13b8d0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v1, v2) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L13b8d6.   throw v1;
#L13b8d8.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v24) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b8de.   v5:= temp  @type wide;
#L13b8e0.   goto L13b89a;
#L13b8e2.   v1:= 32  @length 16;
#L13b8e6.   v1:= v5 ^>> v1  @type long;
#L13b8ea.   v0:= (int)v1  @type l2i;
#L13b8ec.   v22:= v0;
#L13b8f0.   if v22 >= 0 then goto L13b8f6;
#L13b8f4.   return v22;
#L13b8f6.   v1:= 1  @length 4;
#L13b8f8.   v0:= v19;
#L13b8fc.   if v0 == v1 then goto L13b94c;
#L13b900.   if v20 == 0 then goto L13b914;
#L13b904.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v24) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b90a.   v1:= temp  @type wide;
#L13b90c.   v1:= cmp(v1,v5);
#L13b910.   if v1 != 0 then goto L13b88e;
#L13b914.   if v23 != 0 then goto L13b92e;
#L13b918.   v0:= v24  @type object;
#L13b91c.   v1:= v0.[|java:util:concurrent:Phaser.root|]   @type object;
#L13b920.   v2:= 0  @length 4;
#L13b922.   v0:= v22;
#L13b926.   call temp:=  [|java:util:concurrent:Phaser.internalAwaitAdvance|](v1, v0, v2) @signature [|Ljava/util/concurrent/Phaser;.internalAwaitAdvance:(ILjava/util/concurrent/Phaser$QNode;)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b92c.   goto L13b88e;
#L13b92e.   v1:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13b932.   v3:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13b936.   v7:= v5 + v17  @type long;
#L13b93a.   v2:= v24  @type object;
#L13b93e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13b944.   v1:= temp;
#L13b946.   if v1 == 0 then goto L13b88e;
#L13b94a.   goto L13b8f4;
#L13b94c.   if v20 != 0 then goto L13b97a;
#L13b950.   v0:= v22;
#L13b954.   v1:= (long)v0  @type i2l;
#L13b956.   v3:= 32  @length 16;
#L13b95a.   v1:= v1 ^< v3  @type long;
#L13b95c.   v7:= v1 ^| v17  @type long;
#L13b960.   v1:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13b964.   v3:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13b968.   v2:= v24  @type object;
#L13b96c.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13b972.   v1:= temp;
#L13b974.   if v1 == 0 then goto L13b88e;
#L13b978.   goto L13b8f4;
#L13b97a.   (@monitorenter v24)
#L13b97c.   v0:= v24  @type object;
#L13b980.   v1:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13b984.   v1:= cmp(v1,v5);
#L13b988.   if v1 != 0 then goto L13b9fa;
#L13b98c.   v1:= 1  @length 4;
#L13b98e.   v0:= v20  @type object;
#L13b992.   call temp:=  [|java:util:concurrent:Phaser.doRegister|](v0, v1) @signature [|Ljava/util/concurrent/Phaser;.doRegister:(I)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13b998.   v22:= temp;
#L13b99a.   if v22 >= 0 then goto L13b9a8;
#L13b99e.   (@monitorexit v24)
#L13b9a0.   goto L13b8f4;
#L13b9a2.   v1:= Exception  @type object;
#L13b9a4.   (@monitorexit v24)
#L13b9a6.   throw v1;
#L13b9a8.   v9:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13b9ac.   v11:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13b9b0.   v0:= v22;
#L13b9b4.   v1:= (long)v0  @type i2l;
#L13b9b6.   v3:= 32  @length 16;
#L13b9ba.   v1:= v1 ^< v3  @type long;
#L13b9bc.   v15:= v1 ^| v17  @type long;
#L13b9c0.   v10:= v24  @type object;
#L13b9c4.   v13:= v5  @type wide;
#L13b9c6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v9, v10, v11, v12, v13, v14, v15, v16) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13b9cc.   v1:= temp;
#L13b9ce.   if v1 != 0 then goto L13b9f4;
#L13b9d2.   v0:= v24  @type object;
#L13b9d6.   v5:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13b9da.   v0:= v24  @type object;
#L13b9de.   v1:= v0.[|java:util:concurrent:Phaser.root|]   @type object;
#L13b9e2.   v1:= v1.[|java:util:concurrent:Phaser.state|]   @wide;
#L13b9e6.   v3:= 32  @length 16;
#L13b9ea.   v1:= v1 ^>> v3  @type long;
#L13b9ec.   v0:= (int)v1  @type l2i;
#L13b9ee.   v22:= v0;
#L13b9f2.   goto L13b9a8;
#L13b9f4.   (@monitorexit v24)
#L13b9f6.   goto L13b8f4;
#L13b9fa.   (@monitorexit v24)
#L13b9fc.   goto L13b88e;
  catch  [|any|] @[L13b97c..L13b9a6] goto L13b9a2;
  catch  [|any|] @[L13b9a8..L13b9fc] goto L13b9a2;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.internalAwaitAdvance|] ([|java:util:concurrent:Phaser|] v19 @type (this), [|int|] v20, [|java:util:concurrent:Phaser$QNode|] v21 @type (object)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.internalAwaitAdvance:(ILjava/util/concurrent/Phaser$QNode;)I|] @Access PRIVATE {
      local temp ;

        [|boolean|] v10 @varname [|interrupted|] @scope ((L0034,L004e));
        [|int|] v18 @varname [|unarrived|] @scope ((L0020,L004e));
        [|java:util:concurrent:atomic:AtomicReference|] v8 @varname [|head|] @scope ((L0093,L00b9));
        [|java:util:concurrent:Phaser$QNode|] v13 @varname [|q|] @scope ((L009d,L00b9));
        [|java:lang:InterruptedException|] v9 @varname [|ie|] @scope ((L00c4,L00cb));
        [|int|] v11 @varname [|lastUnarrived|] @scope ((L0009,L00d0));
        [|int|] v12 @varname [|p|] @scope ((L0014,L00d0));
        [|boolean|] v14 @varname [|queued|] @scope ((L0008,L00d0));
        [|long|] v15 @varname [|s|] @scope ((L000f,L00d0));
        [|int|] v17 @varname [|spins|] @scope ((L000b,L00d0));



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v16;
      
#L13ba24.   v1:= v20 + -1;
#L13ba28.   v0:= v19  @type object;
#L13ba2c.   call temp:=  [|java:util:concurrent:Phaser.releaseWaiters|](v0, v1) @signature [|Ljava/util/concurrent/Phaser;.releaseWaiters:(I)V|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13ba32.   v14:= 0  @length 4;
#L13ba34.   v11:= 0  @length 4;
#L13ba36.   v17:= @@[|java:util:concurrent:Phaser.SPINS_PER_ARRIVAL|] ;
#L13ba3a.   v0:= v19  @type object;
#L13ba3e.   v15:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13ba42.   v1:= 32  @length 16;
#L13ba46.   v1:= v15 ^>> v1  @type long;
#L13ba4a.   v12:= (int)v1  @type l2i;
#L13ba4c.   v0:= v20;
#L13ba50.   if v12 != v0 then goto L13bacc;
#L13ba54.   if v21 != 0 then goto L13bac0;
#L13ba58.   v1:= (int)v15  @type l2i;
#L13ba5a.    v2:= 0.000000;
#L13ba60.   v18:= v1 ^& v2  @type int;
#L13ba64.   v0:= v18;
#L13ba68.   if v0 == v11 then goto L13ba84;
#L13ba6c.   v11:= v18;
#L13ba70.   v1:= @@[|java:util:concurrent:Phaser.NCPU|] ;
#L13ba74.   v0:= v18;
#L13ba78.   if v0 >= v1 then goto L13ba84;
#L13ba7c.   v1:= @@[|java:util:concurrent:Phaser.SPINS_PER_ARRIVAL|] ;
#L13ba80.   v17:= v17 + v1  @type int;
#L13ba84.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L13ba8a.   v10:= temp;
#L13ba8c.   if v10 != 0 then goto L13ba98;
#L13ba90.   v17:= v17 + -1;
#L13ba94.   if v17 >= 0 then goto L13ba3a;
#L13ba98.   v21:= new [|java:util:concurrent:Phaser$QNode|];
#L13ba9c.   v4:= 0  @length 4;
#L13ba9e.   v5:= 0  @length 4;
#L13baa0.   v6:= 0  @length wide16;
#L13baa4.   v1:= v21  @type object;
#L13baa8.   v2:= v19  @type object;
#L13baac.   v3:= v20;
#L13bab0.   call temp:=  [|java:util:concurrent:Phaser$QNode.<init>|](v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/concurrent/Phaser$QNode;.<init>:(Ljava/util/concurrent/Phaser;IZZJ)V|] @classDescriptor [|java:util:concurrent:Phaser$QNode|] @type direct;
#L13bab6.   v0:= v21  @type object;
#L13baba.   v0.[|java:util:concurrent:Phaser$QNode.wasInterrupted|]  := v10 @boolean;
#L13babe.   goto L13ba3a;
#L13bac0.   call temp:=  [|java:util:concurrent:Phaser$QNode.isReleasable|](v21) @signature [|Ljava/util/concurrent/Phaser$QNode;.isReleasable:()Z|] @classDescriptor [|java:util:concurrent:Phaser$QNode|] @type virtual;
#L13bac6.   v1:= temp;
#L13bac8.   if v1 == 0 then goto L13bb36;
#L13bacc.   if v21 == 0 then goto L13bbba;
#L13bad0.   v0:= v21  @type object;
#L13bad4.   v1:= v0.[|java:util:concurrent:Phaser$QNode.thread|]   @type object;
#L13bad8.   if v1 == 0 then goto L13bae6;
#L13badc.   v1:= 0  @length 4;
#L13bade.   v0:= v21  @type object;
#L13bae2.   v0.[|java:util:concurrent:Phaser$QNode.thread|]  := v1 @type object;
#L13bae6.   v0:= v21  @type object;
#L13baea.   v1:= v0.[|java:util:concurrent:Phaser$QNode.wasInterrupted|]   @boolean;
#L13baee.   if v1 == 0 then goto L13bb0c;
#L13baf2.   v0:= v21  @type object;
#L13baf6.   v1:= v0.[|java:util:concurrent:Phaser$QNode.interruptible|]   @boolean;
#L13bafa.   if v1 != 0 then goto L13bb0c;
#L13bafe.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13bb04.   v1:= temp  @type object;
#L13bb06.   call temp:=  [|java:lang:Thread.interrupt|](v1) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13bb0c.   v0:= v20;
#L13bb10.   if v12 != v0 then goto L13bbba;
#L13bb14.   v0:= v19  @type object;
#L13bb18.   v1:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13bb1c.   v3:= 32  @length 16;
#L13bb20.   v1:= v1 ^>> v3  @type long;
#L13bb22.   v12:= (int)v1  @type l2i;
#L13bb24.   v0:= v20;
#L13bb28.   if v12 != v0 then goto L13bbba;
#L13bb2c.   call temp:=  [|java:util:concurrent:Phaser.abortWait|](v19, v20) @signature [|Ljava/util/concurrent/Phaser;.abortWait:(I)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13bb32.   v1:= temp;
#L13bb34.   return v1;
#L13bb36.   if v14 != 0 then goto L13bba0;
#L13bb3a.   v1:= v20 ^& 1;
#L13bb3e.   if v1 != 0 then goto L13bb96;
#L13bb42.   v0:= v19  @type object;
#L13bb46.   v8:= v0.[|java:util:concurrent:Phaser.evenQ|]   @type object;
#L13bb4a.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.get|](v8) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type virtual;
#L13bb50.   v13:= temp  @type object;
#L13bb52.   v13:= ([|java:util:concurrent:Phaser$QNode|])v13;
#L13bb56.   v0:= v21  @type object;
#L13bb5a.   v0.[|java:util:concurrent:Phaser$QNode.next|]  := v13 @type object;
#L13bb5e.   if v13 == 0 then goto L13bb6e;
#L13bb62.   v1:= v13.[|java:util:concurrent:Phaser$QNode.phase|] ;
#L13bb66.   v0:= v20;
#L13bb6a.   if v1 != v0 then goto L13ba3a;
#L13bb6e.   v0:= v19  @type object;
#L13bb72.   v1:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13bb76.   v3:= 32  @length 16;
#L13bb7a.   v1:= v1 ^>> v3  @type long;
#L13bb7c.   v1:= (int)v1  @type l2i;
#L13bb7e.   v0:= v20;
#L13bb82.   if v1 != v0 then goto L13ba3a;
#L13bb86.   v0:= v21  @type object;
#L13bb8a.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.compareAndSet|](v8, v13, v0) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type virtual;
#L13bb90.   v14:= temp;
#L13bb92.   goto L13ba3a;
#L13bb96.   v0:= v19  @type object;
#L13bb9a.   v8:= v0.[|java:util:concurrent:Phaser.oddQ|]   @type object;
#L13bb9e.   goto L13bb4a;
#L13bba0.   call temp:=  [|java:util:concurrent:ForkJoinPool.managedBlock|](v21) @signature [|Ljava/util/concurrent/ForkJoinPool;.managedBlock:(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V|] @classDescriptor [|java:util:concurrent:ForkJoinPool|] @type static;
#L13bba6.   goto L13ba3a;
#L13bbaa.   v9:= Exception  @type object;
#L13bbac.   v1:= 1  @length 4;
#L13bbae.   v0:= v21  @type object;
#L13bbb2.   v0.[|java:util:concurrent:Phaser$QNode.wasInterrupted|]  := v1 @boolean;
#L13bbb6.   goto L13ba3a;
#L13bbba.   call temp:=  [|java:util:concurrent:Phaser.releaseWaiters|](v19, v20) @signature [|Ljava/util/concurrent/Phaser;.releaseWaiters:(I)V|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13bbc0.   v1:= v12;
#L13bbc2.   goto L13bb34;
  catch  [|java:lang:InterruptedException|] @[L13bba0..L13bba6] goto L13bbaa;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.partiesOf|] ([|long|] v1) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.partiesOf:(J)I|] @Access PRIVATE_STATIC {
      local temp ;

        v0;
      
#L13bbe4.   v0:= (int)v1  @type l2i;
#L13bbe6.   v0:= v0 ^>> 16;
#L13bbea.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.phaseOf|] ([|long|] v2) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.phaseOf:(J)I|] @Access PRIVATE_STATIC {
      local temp ;

        v0;
        v1;
      
#L13bbfc.   v0:= 32  @length 16;
#L13bc00.   v0:= v2 ^>> v0  @type long;
#L13bc04.   v0:= (int)v0  @type l2i;
#L13bc06.   return v0;

   }
    procedure [|java:util:concurrent:atomic:AtomicReference|] [|java:util:concurrent:Phaser.queueFor|] ([|java:util:concurrent:Phaser|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.queueFor:(I)Ljava/util/concurrent/atomic/AtomicReference;|] @Access PRIVATE {
      local temp ;


        v0;
      
#L13bc18.   v0:= v2 ^& 1;
#L13bc1c.   if v0 != 0 then goto L13bc26;
#L13bc20.   v0:= v1.[|java:util:concurrent:Phaser.evenQ|]   @type object;
#L13bc24.   return v0  @type object;
#L13bc26.   v0:= v1.[|java:util:concurrent:Phaser.oddQ|]   @type object;
#L13bc2a.   goto L13bc24;

   }
    procedure [|long|] [|java:util:concurrent:Phaser.reconcileState|] ([|java:util:concurrent:Phaser|] v19 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @Access PRIVATE {
      local temp ;
        [|long|] v6 @varname [|s|] @scope ((L0008,L002c), (L002c,L0038), (L0038,L004d), (L004d,L004e), (L004e,L004f));
        [|int|] v10 @varname [|p|] @scope ((L003c,L004d));
        [|int|] v11 @varname [|phase|] @scope ((L0012,L004e));
        [|java:util:concurrent:Phaser|] v12 @varname [|root|] @scope ((L0004,L004f));

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v7;
        v8;
        v9;
        v13;
        v14;
        v15;
        v16;
        v17;
        v18;
      
#L13bc3c.   v0:= v19  @type object;
#L13bc40.   v12:= v0.[|java:util:concurrent:Phaser.root|]   @type object;
#L13bc44.   v0:= v19  @type object;
#L13bc48.   v6:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13bc4c.   v0:= v19  @type object;
#L13bc50.   if v12 == v0 then goto L13bcd8;
#L13bc54.   v2:= v12.[|java:util:concurrent:Phaser.state|]   @wide;
#L13bc58.   v4:= 32  @length 16;
#L13bc5c.   v2:= v2 ^>> v4  @type long;
#L13bc5e.   v11:= (int)v2  @type l2i;
#L13bc60.   v2:= 32  @length 16;
#L13bc64.   v2:= v6 ^>> v2  @type long;
#L13bc68.   v2:= (int)v2  @type l2i;
#L13bc6a.   if v11 == v2 then goto L13bcd8;
#L13bc6e.   v2:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13bc72.   v4:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13bc76.   v13:= (long)v11  @type i2l;
#L13bc78.   v3:= 32  @length 16;
#L13bc7c.   v15:= v13 ^< v3  @type long;
#L13bc80.   if v11 >= 0 then goto L13bcae;
#L13bc84.   v13:= 0.000000L  @length wide;
#L13bc8e.   v13:= v13 ^& v6  @type long;
#L13bc90.   v8:= v15 ^| v13  @type long;
#L13bc94.   v3:= v19  @type object;
#L13bc98.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v2, v3, v4, v5, v6, v7, v8, v9) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13bc9e.   v2:= temp;
#L13bca0.   if v2 != 0 then goto L13bcd6;
#L13bca4.   v0:= v19  @type object;
#L13bca8.   v6:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13bcac.   goto L13bc54;
#L13bcae.   v3:= (int)v6  @type l2i;
#L13bcb0.   v10:= v3 ^>> 16;
#L13bcb4.   if v10 != 0 then goto L13bcbe;
#L13bcb8.   v13:= 1  @length wide16;
#L13bcbc.   goto L13bc90;
#L13bcbe.   v13:= 0.000000L  @length wide;
#L13bcc8.   v13:= v13 ^& v6  @type long;
#L13bcca.   v0:= (long)v10  @type i2l;
#L13bccc.   v17:= v0  @type wide;
#L13bcd0.   v13:= v13 ^| v17  @type long;
#L13bcd4.   goto L13bc90;
#L13bcd6.   v6:= v8  @type wide;
#L13bcd8.   return v6  @type wide;

   }
    procedure [|void|] [|java:util:concurrent:Phaser.releaseWaiters|] ([|java:util:concurrent:Phaser|] v7 @type (this), [|int|] v8) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.releaseWaiters:(I)V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:atomic:AtomicReference|] v0 @varname [|head|] @scope ((L0006,L002d), (L0030,L0031));
        [|java:util:concurrent:Phaser$QNode|] v1 @varname [|q|] @scope ((L000c,L002d), (L0030,L0031));
        [|java:lang:Thread|] v2 @varname [|t|] @scope ((L0024,L002d));


        v3;
        v4;
        v5;
        v6;
      
#L13bcec.   v3:= v8 ^& 1;
#L13bcf0.   if v3 != 0 then goto L13bd46;
#L13bcf4.   v0:= v7.[|java:util:concurrent:Phaser.evenQ|]   @type object;
#L13bcf8.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type virtual;
#L13bcfe.   v1:= temp  @type object;
#L13bd00.   v1:= ([|java:util:concurrent:Phaser$QNode|])v1;
#L13bd04.   if v1 == 0 then goto L13bd4c;
#L13bd08.   v3:= v1.[|java:util:concurrent:Phaser$QNode.phase|] ;
#L13bd0c.   v4:= v7.[|java:util:concurrent:Phaser.root|]   @type object;
#L13bd10.   v4:= v4.[|java:util:concurrent:Phaser.state|]   @wide;
#L13bd14.   v6:= 32  @length 16;
#L13bd18.   v4:= v4 ^>> v6  @type long;
#L13bd1a.   v4:= (int)v4  @type l2i;
#L13bd1c.   if v3 == v4 then goto L13bd4c;
#L13bd20.   v3:= v1.[|java:util:concurrent:Phaser$QNode.next|]   @type object;
#L13bd24.   call temp:=  [|java:util:concurrent:atomic:AtomicReference.compareAndSet|](v0, v1, v3) @signature [|Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicReference|] @type virtual;
#L13bd2a.   v3:= temp;
#L13bd2c.   if v3 == 0 then goto L13bcf8;
#L13bd30.   v2:= v1.[|java:util:concurrent:Phaser$QNode.thread|]   @type object;
#L13bd34.   if v2 == 0 then goto L13bcf8;
#L13bd38.   v3:= 0  @length 4;
#L13bd3a.   v1.[|java:util:concurrent:Phaser$QNode.thread|]  := v3 @type object;
#L13bd3e.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v2) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L13bd44.   goto L13bcf8;
#L13bd46.   v0:= v7.[|java:util:concurrent:Phaser.oddQ|]   @type object;
#L13bd4a.   goto L13bcf8;
#L13bd4c.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:Phaser.stateToString|] ([|java:util:concurrent:Phaser|] v2 @type (this), [|long|] v3) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.stateToString:(J)Ljava/lang/String;|] @Access PRIVATE {
      local temp ;


        v0;
        v1;
      
#L13bd60.   v0:= new [|java:lang:StringBuilder|];
#L13bd64.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L13bd6a.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L13bd70.   v1:= temp  @type object;
#L13bd72.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13bd78.   v0:= temp  @type object;
#L13bd7a.   v1:= "[phase = " @type (object, string);
#L13bd7e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13bd84.   v0:= temp  @type object;
#L13bd86.   call temp:=  [|java:util:concurrent:Phaser.phaseOf|](v3, v4) @signature [|Ljava/util/concurrent/Phaser;.phaseOf:(J)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type static;
#L13bd8c.   v1:= temp;
#L13bd8e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13bd94.   v0:= temp  @type object;
#L13bd96.   v1:= " parties = " @type (object, string);
#L13bd9a.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13bda0.   v0:= temp  @type object;
#L13bda2.   call temp:=  [|java:util:concurrent:Phaser.partiesOf|](v3, v4) @signature [|Ljava/util/concurrent/Phaser;.partiesOf:(J)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type static;
#L13bda8.   v1:= temp;
#L13bdaa.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13bdb0.   v0:= temp  @type object;
#L13bdb2.   v1:= " arrived = " @type (object, string);
#L13bdb6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13bdbc.   v0:= temp  @type object;
#L13bdbe.   call temp:=  [|java:util:concurrent:Phaser.arrivedOf|](v3, v4) @signature [|Ljava/util/concurrent/Phaser;.arrivedOf:(J)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type static;
#L13bdc4.   v1:= temp;
#L13bdc6.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13bdcc.   v0:= temp  @type object;
#L13bdce.   v1:= "]" @type (object, string);
#L13bdd2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13bdd8.   v0:= temp  @type object;
#L13bdda.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13bde0.   v0:= temp  @type object;
#L13bde2.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.unarrivedOf|] ([|long|] v2) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.unarrivedOf:(J)I|] @Access PRIVATE_STATIC {
      local temp ;
        [|int|] v0 @varname [|counts|] @scope ((L0001,L000b));

        v1;
      
#L13bdf4.   v0:= (int)v2  @type l2i;
#L13bdf6.   v1:= 1  @length 4;
#L13bdf8.   if v0 != v1 then goto L13be00;
#L13bdfc.   v1:= 0  @length 4;
#L13bdfe.   return v1;
#L13be00.    v1:= 0.000000;
#L13be06.   v1:= v1 ^& v0  @type int;
#L13be08.   goto L13bdfe;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.arrive|] ([|java:util:concurrent:Phaser|] v1 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.arrive:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13be1c.   v0:= 1  @length 4;
#L13be1e.   call temp:=  [|java:util:concurrent:Phaser.doArrive|](v1, v0) @signature [|Ljava/util/concurrent/Phaser;.doArrive:(I)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13be24.   v0:= temp;
#L13be26.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.arriveAndAwaitAdvance|] ([|java:util:concurrent:Phaser|] v25 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.arriveAndAwaitAdvance:()I|] @Access PUBLIC {
      local temp ;
        [|int|] v22 @varname [|phase|] @scope ((L0017,L0019), (L001f,L005b), (L005d,L006b), (L006d,L00cb));
        [|long|] v7 @varname [|s|] @scope ((L0010,L001a), (L001f,L0045), (L0045,L005c), (L005c,L005d), (L005d,L006c), (L006c,L006d), (L006d,L00b0), (L00b0,L00b2), (L00b2,L00c7), (L00c7,L00cb));
        [|int|] v24 @varname [|unarrived|] @scope ((L0029,L0037), (L003d,L00cb));
        [|int|] v20 @varname [|nextPhase|] @scope ((L0090,L00b2), (L00bf,L00cb));
        [|long|] v17 @varname [|n|] @scope ((L0074,L00cb));
        [|int|] v19 @varname [|counts|] @scope ((L0022,L00cb));
        [|int|] v21 @varname [|nextUnarrived|] @scope ((L0079,L00cb));
        [|java:util:concurrent:Phaser|] v23 @varname [|root|] @scope ((L0006,L00cb));

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v8;
        v9;
        v10;
        v11;
        v12;
        v13;
        v14;
        v15;
        v16;
        v18;
      
#L13be38.   v0:= v25  @type object;
#L13be3c.   v0:= v0.[|java:util:concurrent:Phaser.root|]   @type object;
#L13be40.   v23:= v0  @type object;
#L13be44.   v0:= v23  @type object;
#L13be48.   v1:= v25  @type object;
#L13be4c.   if v0 != v1 then goto L13be6c;
#L13be50.   v0:= v25  @type object;
#L13be54.   v7:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13be58.   v3:= 32  @length 16;
#L13be5c.   v3:= v7 ^>> v3  @type long;
#L13be60.   v0:= (int)v3  @type l2i;
#L13be62.   v22:= v0;
#L13be66.   if v22 >= 0 then goto L13be76;
#L13be6a.   return v22;
#L13be6c.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v25) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13be72.   v7:= temp  @type wide;
#L13be74.   goto L13be58;
#L13be76.   v0:= (int)v7  @type l2i;
#L13be78.   v19:= v0;
#L13be7c.   v3:= 1  @length 4;
#L13be7e.   v0:= v19;
#L13be82.   if v0 != v3 then goto L13bea6;
#L13be86.   v24:= 0  @length 16;
#L13be8a.   if v24 > 0 then goto L13beb2;
#L13be8e.   v3:= new [|java:lang:IllegalStateException|];
#L13be92.   v0:= v25  @type object;
#L13be96.   call temp:=  [|java:util:concurrent:Phaser.badArrive|](v0, v7, v8) @signature [|Ljava/util/concurrent/Phaser;.badArrive:(J)Ljava/lang/String;|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13be9c.   v4:= temp  @type object;
#L13be9e.   call temp:=  [|java:lang:IllegalStateException.<init>|](v3, v4) @signature [|Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L13bea4.   throw v3;
#L13bea6.    v3:= 0.000000;
#L13beac.   v24:= v19 ^& v3  @type int;
#L13beb0.   goto L13be8a;
#L13beb2.   v3:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13beb6.   v5:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13beba.   v11:= 1  @length wide16;
#L13bebe.   v9:= v7 - v11  @type long;
#L13bec2.   v4:= v25  @type object;
#L13bec6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v3, v4, v5, v6, v7, v8, v9, v10) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13becc.   v3:= temp;
#L13bece.   if v3 == 0 then goto L13be44;
#L13bed2.   v3:= 1  @length 4;
#L13bed4.   v0:= v24;
#L13bed8.   if v0 <= v3 then goto L13bef2;
#L13bedc.   v3:= 0  @length 4;
#L13bede.   v0:= v23  @type object;
#L13bee2.   v1:= v22;
#L13bee6.   call temp:=  [|java:util:concurrent:Phaser.internalAwaitAdvance|](v0, v1, v3) @signature [|Ljava/util/concurrent/Phaser;.internalAwaitAdvance:(ILjava/util/concurrent/Phaser$QNode;)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13beec.   v22:= temp;
#L13beee.   v7:= v9  @type wide;
#L13bef0.   goto L13be6a;
#L13bef2.   v0:= v23  @type object;
#L13bef6.   v1:= v25  @type object;
#L13befa.   if v0 == v1 then goto L13bf12;
#L13befe.   v0:= v25  @type object;
#L13bf02.   v3:= v0.[|java:util:concurrent:Phaser.parent|]   @type object;
#L13bf06.   call temp:=  [|java:util:concurrent:Phaser.arriveAndAwaitAdvance|](v3) @signature [|Ljava/util/concurrent/Phaser;.arriveAndAwaitAdvance:()I|] @classDescriptor [|java:util:concurrent:Phaser|] @type virtual;
#L13bf0c.   v22:= temp;
#L13bf0e.   v7:= v9  @type wide;
#L13bf10.   goto L13be6a;
#L13bf12.   v3:= 0.000000L  @length wide;
#L13bf1c.   v17:= v9 ^& v3  @type long;
#L13bf20.   v0:= v17  @type wide;
#L13bf24.   v3:= (int)v0  @type l2i;
#L13bf26.   v21:= v3 ^>> 16;
#L13bf2a.   v0:= v25  @type object;
#L13bf2e.   v1:= v22;
#L13bf32.   v2:= v21;
#L13bf36.   call temp:=  [|java:util:concurrent:Phaser.onAdvance|](v0, v1, v2) @signature [|Ljava/util/concurrent/Phaser;.onAdvance:(II)Z|] @classDescriptor [|java:util:concurrent:Phaser|] @type virtual;
#L13bf3c.   v3:= temp;
#L13bf3e.   if v3 == 0 then goto L13bf9c;
#L13bf42.   v3:= -9223372036854775808L  @length wide_high16;
#L13bf46.   v17:= v17 ^| v3  @type long;
#L13bf4a.   v3:= v22 + 1;
#L13bf4e.    v4:= nan;
#L13bf54.   v20:= v3 ^& v4  @type int;
#L13bf58.   v0:= v20;
#L13bf5c.   v3:= (long)v0  @type i2l;
#L13bf5e.   v5:= 32  @length 16;
#L13bf62.   v3:= v3 ^< v5  @type long;
#L13bf64.   v17:= v17 ^| v3  @type long;
#L13bf68.   v11:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13bf6c.   v13:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13bf70.   v12:= v25  @type object;
#L13bf74.   v15:= v9  @type wide;
#L13bf76.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v11, v12, v13, v14, v15, v16, v17, v18) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13bf7c.   v3:= temp;
#L13bf7e.   if v3 != 0 then goto L13bfb6;
#L13bf82.   v0:= v25  @type object;
#L13bf86.   v3:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13bf8a.   v5:= 32  @length 16;
#L13bf8e.   v3:= v3 ^>> v5  @type long;
#L13bf90.   v0:= (int)v3  @type l2i;
#L13bf92.   v22:= v0;
#L13bf96.   v7:= v9  @type wide;
#L13bf98.   goto L13be6a;
#L13bf9c.   if v21 != 0 then goto L13bfaa;
#L13bfa0.   v3:= 1  @length wide16;
#L13bfa4.   v17:= v17 ^| v3  @type long;
#L13bfa8.   goto L13bf4a;
#L13bfaa.   v0:= v21;
#L13bfae.   v3:= (long)v0  @type i2l;
#L13bfb0.   v17:= v17 ^| v3  @type long;
#L13bfb4.   goto L13bf4a;
#L13bfb6.   v0:= v25  @type object;
#L13bfba.   v1:= v22;
#L13bfbe.   call temp:=  [|java:util:concurrent:Phaser.releaseWaiters|](v0, v1) @signature [|Ljava/util/concurrent/Phaser;.releaseWaiters:(I)V|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13bfc4.   v7:= v9  @type wide;
#L13bfc6.   v22:= v20;
#L13bfca.   goto L13be6a;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.arriveAndDeregister|] ([|java:util:concurrent:Phaser|] v1 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.arriveAndDeregister:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13bfe0.    v0:= 0.000000;
#L13bfe6.   call temp:=  [|java:util:concurrent:Phaser.doArrive|](v1, v0) @signature [|Ljava/util/concurrent/Phaser;.doArrive:(I)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13bfec.   v0:= temp;
#L13bfee.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.awaitAdvance|] ([|java:util:concurrent:Phaser|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.awaitAdvance:(I)I|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|p|] @scope ((L000b,L000e), (L0013,L001d));
        [|long|] v2 @varname [|s|] @scope ((L0006,L000e), (L0013,L001d));
        [|java:util:concurrent:Phaser|] v1 @varname [|root|] @scope ((L0002,L001d));


        v3;
        v4;
        v5;
      
#L13c000.   v1:= v6.[|java:util:concurrent:Phaser.root|]   @type object;
#L13c004.   if v1 != v6 then goto L13c01c;
#L13c008.   v2:= v6.[|java:util:concurrent:Phaser.state|]   @wide;
#L13c00c.   v4:= 32  @length 16;
#L13c010.   v4:= v2 ^>> v4  @type long;
#L13c014.   v0:= (int)v4  @type l2i;
#L13c016.   if v7 >= 0 then goto L13c026;
#L13c01a.   return v7;
#L13c01c.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v6) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c022.   v2:= temp  @type wide;
#L13c024.   goto L13c00c;
#L13c026.   if v0 != v7 then goto L13c036;
#L13c02a.   v4:= 0  @length 4;
#L13c02c.   call temp:=  [|java:util:concurrent:Phaser.internalAwaitAdvance|](v1, v7, v4) @signature [|Ljava/util/concurrent/Phaser;.internalAwaitAdvance:(ILjava/util/concurrent/Phaser$QNode;)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c032.   v7:= temp;
#L13c034.   goto L13c01a;
#L13c036.   v7:= v0;
#L13c038.   goto L13c01a;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.awaitAdvanceInterruptibly|] ([|java:util:concurrent:Phaser|] v11 @type (this), [|int|] v12) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.awaitAdvanceInterruptibly:(I)I|] @Access PUBLIC {
      local temp ;

        [|int|] v7 @varname [|p|] @scope ((L000b,L000e), (L0013,L0030));
        [|long|] v9 @varname [|s|] @scope ((L0006,L000e), (L0013,L0030));
        [|java:util:concurrent:Phaser$QNode|] v0 @varname [|node|] @scope ((L0020,L002e));
        [|java:util:concurrent:Phaser|] v8 @varname [|root|] @scope ((L0002,L0030));


        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v10;
      
#L13c04c.   v8:= v11.[|java:util:concurrent:Phaser.root|]   @type object;
#L13c050.   if v8 != v11 then goto L13c068;
#L13c054.   v9:= v11.[|java:util:concurrent:Phaser.state|]   @wide;
#L13c058.   v1:= 32  @length 16;
#L13c05c.   v1:= v9 ^>> v1  @type long;
#L13c060.   v7:= (int)v1  @type l2i;
#L13c062.   if v12 >= 0 then goto L13c072;
#L13c066.   return v12;
#L13c068.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v11) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c06e.   v9:= temp  @type wide;
#L13c070.   goto L13c058;
#L13c072.   if v7 != v12 then goto L13c0a8;
#L13c076.   v0:= new [|java:util:concurrent:Phaser$QNode|];
#L13c07a.   v3:= 1  @length 4;
#L13c07c.   v4:= 0  @length 4;
#L13c07e.   v5:= 0  @length wide16;
#L13c082.   v1:= v11  @type object;
#L13c084.   v2:= v12;
#L13c086.   call temp:=  [|java:util:concurrent:Phaser$QNode.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/Phaser$QNode;.<init>:(Ljava/util/concurrent/Phaser;IZZJ)V|] @classDescriptor [|java:util:concurrent:Phaser$QNode|] @type direct;
#L13c08c.   call temp:=  [|java:util:concurrent:Phaser.internalAwaitAdvance|](v8, v12, v0) @signature [|Ljava/util/concurrent/Phaser;.internalAwaitAdvance:(ILjava/util/concurrent/Phaser$QNode;)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c092.   v7:= temp;
#L13c094.   v1:= v0.[|java:util:concurrent:Phaser$QNode.wasInterrupted|]   @boolean;
#L13c098.   if v1 == 0 then goto L13c0a8;
#L13c09c.   v1:= new [|java:lang:InterruptedException|];
#L13c0a0.   call temp:=  [|java:lang:InterruptedException.<init>|](v1) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L13c0a6.   throw v1;
#L13c0a8.   v12:= v7;
#L13c0aa.   goto L13c066;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.awaitAdvanceInterruptibly|] ([|java:util:concurrent:Phaser|] v11 @type (this), [|int|] v12, [|long|] v13, [|java:util:concurrent:TimeUnit|] v15 @type (object)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.awaitAdvanceInterruptibly:(IJLjava/util/concurrent/TimeUnit;)I|] @Access PUBLIC {
      local temp ;

        [|int|] v7 @varname [|p|] @scope ((L0010,L0013), (L0018,L003a));
        [|long|] v9 @varname [|s|] @scope ((L000b,L0013), (L0018,L003a));
        [|java:util:concurrent:Phaser$QNode|] v0 @varname [|node|] @scope ((L0022,L0038));
        [|long|] v5 @varname [|nanos|] @scope ((L0005,L003a));
        [|java:util:concurrent:Phaser|] v8 @varname [|root|] @scope ((L0007,L003a));




        v1;
        v2;
        v3;
        v4;
        v6;
        v10;
      
#L13c0bc.   v3:= 1  @length 4;
#L13c0be.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v15, v13, v14) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13c0c4.   v5:= temp  @type wide;
#L13c0c6.   v8:= v11.[|java:util:concurrent:Phaser.root|]   @type object;
#L13c0ca.   if v8 != v11 then goto L13c0e2;
#L13c0ce.   v9:= v11.[|java:util:concurrent:Phaser.state|]   @wide;
#L13c0d2.   v1:= 32  @length 16;
#L13c0d6.   v1:= v9 ^>> v1  @type long;
#L13c0da.   v7:= (int)v1  @type l2i;
#L13c0dc.   if v12 >= 0 then goto L13c0ec;
#L13c0e0.   return v12;
#L13c0e2.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v11) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c0e8.   v9:= temp  @type wide;
#L13c0ea.   goto L13c0d2;
#L13c0ec.   if v7 != v12 then goto L13c12c;
#L13c0f0.   v0:= new [|java:util:concurrent:Phaser$QNode|];
#L13c0f4.   v1:= v11  @type object;
#L13c0f6.   v2:= v12;
#L13c0f8.   v4:= v3;
#L13c0fa.   call temp:=  [|java:util:concurrent:Phaser$QNode.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/Phaser$QNode;.<init>:(Ljava/util/concurrent/Phaser;IZZJ)V|] @classDescriptor [|java:util:concurrent:Phaser$QNode|] @type direct;
#L13c100.   call temp:=  [|java:util:concurrent:Phaser.internalAwaitAdvance|](v8, v12, v0) @signature [|Ljava/util/concurrent/Phaser;.internalAwaitAdvance:(ILjava/util/concurrent/Phaser$QNode;)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c106.   v7:= temp;
#L13c108.   v1:= v0.[|java:util:concurrent:Phaser$QNode.wasInterrupted|]   @boolean;
#L13c10c.   if v1 == 0 then goto L13c11c;
#L13c110.   v1:= new [|java:lang:InterruptedException|];
#L13c114.   call temp:=  [|java:lang:InterruptedException.<init>|](v1) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L13c11a.   throw v1;
#L13c11c.   if v7 != v12 then goto L13c12c;
#L13c120.   v1:= new [|java:util:concurrent:TimeoutException|];
#L13c124.   call temp:=  [|java:util:concurrent:TimeoutException.<init>|](v1) @signature [|Ljava/util/concurrent/TimeoutException;.<init>:()V|] @classDescriptor [|java:util:concurrent:TimeoutException|] @type direct;
#L13c12a.   throw v1;
#L13c12c.   v12:= v7;
#L13c12e.   goto L13c0e0;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.bulkRegister|] ([|java:util:concurrent:Phaser|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.bulkRegister:(I)I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13c140.   if v2 >= 0 then goto L13c150;
#L13c144.   v0:= new [|java:lang:IllegalArgumentException|];
#L13c148.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13c14e.   throw v0;
#L13c150.   if v2 != 0 then goto L13c15e;
#L13c154.   call temp:=  [|java:util:concurrent:Phaser.getPhase|](v1) @signature [|Ljava/util/concurrent/Phaser;.getPhase:()I|] @classDescriptor [|java:util:concurrent:Phaser|] @type virtual;
#L13c15a.   v0:= temp;
#L13c15c.   return v0;
#L13c15e.   call temp:=  [|java:util:concurrent:Phaser.doRegister|](v1, v2) @signature [|Ljava/util/concurrent/Phaser;.doRegister:(I)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c164.   v0:= temp;
#L13c166.   goto L13c15c;

   }
    procedure [|void|] [|java:util:concurrent:Phaser.forceTermination|] ([|java:util:concurrent:Phaser|] v8 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.forceTermination:()V|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:Phaser|] v1 @varname [|root|] @scope ((L0002,L0020));
        [|long|] v4 @varname [|s|] @scope ((L0004,L0020));

        v0;
        v2;
        v3;
        v5;
        v6;
        v7;
      
#L13c178.   v1:= v8.[|java:util:concurrent:Phaser.root|]   @type object;
#L13c17c.   v4:= v1.[|java:util:concurrent:Phaser.state|]   @wide;
#L13c180.   v2:= 0  @length wide16;
#L13c184.   v0:= cmp(v4,v2);
#L13c188.   if v0 < 0 then goto L13c1b6;
#L13c18c.   v0:= @@[|java:util:concurrent:Phaser.UNSAFE|]   @type object;
#L13c190.   v2:= @@[|java:util:concurrent:Phaser.stateOffset|]   @wide;
#L13c194.   v6:= -9223372036854775808L  @length wide_high16;
#L13c198.   v6:= v6 ^| v4  @type long;
#L13c19a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapLong|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Lsun/misc/Unsafe;.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13c1a0.   v0:= temp;
#L13c1a2.   if v0 == 0 then goto L13c17c;
#L13c1a6.   v0:= 0  @length 4;
#L13c1a8.   call temp:=  [|java:util:concurrent:Phaser.releaseWaiters|](v8, v0) @signature [|Ljava/util/concurrent/Phaser;.releaseWaiters:(I)V|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c1ae.   v0:= 1  @length 4;
#L13c1b0.   call temp:=  [|java:util:concurrent:Phaser.releaseWaiters|](v8, v0) @signature [|Ljava/util/concurrent/Phaser;.releaseWaiters:(I)V|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c1b6.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.getArrivedParties|] ([|java:util:concurrent:Phaser|] v2 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.getArrivedParties:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L13c1c8.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v2) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c1ce.   v0:= temp  @type wide;
#L13c1d0.   call temp:=  [|java:util:concurrent:Phaser.arrivedOf|](v0, v1) @signature [|Ljava/util/concurrent/Phaser;.arrivedOf:(J)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type static;
#L13c1d6.   v0:= temp;
#L13c1d8.   return v0;

   }
    procedure [|java:util:concurrent:Phaser|] [|java:util:concurrent:Phaser.getParent|] ([|java:util:concurrent:Phaser|] v1 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.getParent:()Ljava/util/concurrent/Phaser;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13c1ec.   v0:= v1.[|java:util:concurrent:Phaser.parent|]   @type object;
#L13c1f0.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.getPhase|] ([|java:util:concurrent:Phaser|] v3 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.getPhase:()I|] @Access PUBLIC_FINAL {
      local temp ;

        v0;
        v1;
        v2;
      
#L13c204.   v0:= v3.[|java:util:concurrent:Phaser.root|]   @type object;
#L13c208.   v0:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13c20c.   v2:= 32  @length 16;
#L13c210.   v0:= v0 ^>> v2  @type long;
#L13c212.   v0:= (int)v0  @type l2i;
#L13c214.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.getRegisteredParties|] ([|java:util:concurrent:Phaser|] v2 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.getRegisteredParties:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L13c228.   v0:= v2.[|java:util:concurrent:Phaser.state|]   @wide;
#L13c22c.   call temp:=  [|java:util:concurrent:Phaser.partiesOf|](v0, v1) @signature [|Ljava/util/concurrent/Phaser;.partiesOf:(J)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type static;
#L13c232.   v0:= temp;
#L13c234.   return v0;

   }
    procedure [|java:util:concurrent:Phaser|] [|java:util:concurrent:Phaser.getRoot|] ([|java:util:concurrent:Phaser|] v1 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.getRoot:()Ljava/util/concurrent/Phaser;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13c248.   v0:= v1.[|java:util:concurrent:Phaser.root|]   @type object;
#L13c24c.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.getUnarrivedParties|] ([|java:util:concurrent:Phaser|] v2 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.getUnarrivedParties:()I|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L13c260.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v2) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c266.   v0:= temp  @type wide;
#L13c268.   call temp:=  [|java:util:concurrent:Phaser.unarrivedOf|](v0, v1) @signature [|Ljava/util/concurrent/Phaser;.unarrivedOf:(J)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type static;
#L13c26e.   v0:= temp;
#L13c270.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:Phaser.isTerminated|] ([|java:util:concurrent:Phaser|] v4 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.isTerminated:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
        v3;
      
#L13c284.   v0:= v4.[|java:util:concurrent:Phaser.root|]   @type object;
#L13c288.   v0:= v0.[|java:util:concurrent:Phaser.state|]   @wide;
#L13c28c.   v2:= 0  @length wide16;
#L13c290.   v0:= cmp(v0,v2);
#L13c294.   if v0 >= 0 then goto L13c29c;
#L13c298.   v0:= 1  @length 4;
#L13c29a.   return v0;
#L13c29c.   v0:= 0  @length 4;
#L13c29e.   goto L13c29a;

   }
    procedure [|boolean|] [|java:util:concurrent:Phaser.onAdvance|] ([|java:util:concurrent:Phaser|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.onAdvance:(II)Z|] @Access PROTECTED {
      local temp ;



        v0;
      
#L13c2b0.   if v3 != 0 then goto L13c2b8;
#L13c2b4.   v0:= 1  @length 4;
#L13c2b6.   return v0;
#L13c2b8.   v0:= 0  @length 4;
#L13c2ba.   goto L13c2b6;

   }
    procedure [|int|] [|java:util:concurrent:Phaser.register|] ([|java:util:concurrent:Phaser|] v1 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.register:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13c2cc.   v0:= 1  @length 4;
#L13c2ce.   call temp:=  [|java:util:concurrent:Phaser.doRegister|](v1, v0) @signature [|Ljava/util/concurrent/Phaser;.doRegister:(I)I|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c2d4.   v0:= temp;
#L13c2d6.   return v0;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:Phaser.toString|] ([|java:util:concurrent:Phaser|] v2 @type (this)) @owner [|java:util:concurrent:Phaser|] @signature [|Ljava/util/concurrent/Phaser;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L13c2e8.   call temp:=  [|java:util:concurrent:Phaser.reconcileState|](v2) @signature [|Ljava/util/concurrent/Phaser;.reconcileState:()J|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c2ee.   v0:= temp  @type wide;
#L13c2f0.   call temp:=  [|java:util:concurrent:Phaser.stateToString|](v2, v0, v1) @signature [|Ljava/util/concurrent/Phaser;.stateToString:(J)Ljava/lang/String;|] @classDescriptor [|java:util:concurrent:Phaser|] @type direct;
#L13c2f6.   v0:= temp  @type object;
#L13c2f8.   return v0  @type object;

   }
record [|java:util:concurrent:PriorityBlockingQueue$Itr|]  @type class @AccessFlag FINAL extends  [|java:util:Iterator|] {
      [|java:lang:Object|][] [|java:util:concurrent:PriorityBlockingQueue$Itr.array|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:PriorityBlockingQueue$Itr.cursor|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:PriorityBlockingQueue$Itr.lastRet|]    @AccessFlag ;
      [|java:util:concurrent:PriorityBlockingQueue|] [|java:util:concurrent:PriorityBlockingQueue$Itr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue$Itr.<init>|] ([|java:util:concurrent:PriorityBlockingQueue$Itr|] v1 @type (this), [|java:util:concurrent:PriorityBlockingQueue|] v2 @type (object), [|java:lang:Object|][] v3 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue$Itr;.<init>:(Ljava/util/concurrent/PriorityBlockingQueue;[Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;



        v0;
      
#L13c30c.   v1.[|java:util:concurrent:PriorityBlockingQueue$Itr.this$0|]  := v2 @type object;
#L13c310.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13c316.   v0:= -1  @length 4;
#L13c318.   v1.[|java:util:concurrent:PriorityBlockingQueue$Itr.lastRet|]  := v0;
#L13c31c.   v1.[|java:util:concurrent:PriorityBlockingQueue$Itr.array|]  := v3 @type object;
#L13c320.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:PriorityBlockingQueue$Itr.hasNext|] ([|java:util:concurrent:PriorityBlockingQueue$Itr|] v2 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue$Itr;.hasNext:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L13c334.   v0:= v2.[|java:util:concurrent:PriorityBlockingQueue$Itr.cursor|] ;
#L13c338.   v1:= v2.[|java:util:concurrent:PriorityBlockingQueue$Itr.array|]   @type object;
#L13c33c.   v1:= v1.length;
#L13c33e.   if v0 >= v1 then goto L13c346;
#L13c342.   v0:= 1  @length 4;
#L13c344.   return v0;
#L13c346.   v0:= 0  @length 4;
#L13c348.   goto L13c344;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:PriorityBlockingQueue$Itr.next|] ([|java:util:concurrent:PriorityBlockingQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue$Itr;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L13c35c.   v0:= v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.cursor|] ;
#L13c360.   v1:= v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.array|]   @type object;
#L13c364.   v1:= v1.length;
#L13c366.   if v0 < v1 then goto L13c376;
#L13c36a.   v0:= new [|java:util:NoSuchElementException|];
#L13c36e.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L13c374.   throw v0;
#L13c376.   v0:= v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.cursor|] ;
#L13c37a.   v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.lastRet|]  := v0;
#L13c37e.   v0:= v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.array|]   @type object;
#L13c382.   v1:= v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.cursor|] ;
#L13c386.   v2:= v1 + 1;
#L13c38a.   v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.cursor|]  := v2;
#L13c38e.   v0:= v0[v1]  @type object;
#L13c392.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue$Itr.remove|] ([|java:util:concurrent:PriorityBlockingQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue$Itr|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue$Itr;.remove:()V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L13c3a4.   v0:= v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.lastRet|] ;
#L13c3a8.   if v0 >= 0 then goto L13c3b8;
#L13c3ac.   v0:= new [|java:lang:IllegalStateException|];
#L13c3b0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L13c3b6.   throw v0;
#L13c3b8.   v0:= v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.this$0|]   @type object;
#L13c3bc.   v1:= v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.array|]   @type object;
#L13c3c0.   v2:= v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.lastRet|] ;
#L13c3c4.   v1:= v1[v2]  @type object;
#L13c3c8.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.removeEQ|](v0, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.removeEQ:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type virtual;
#L13c3ce.   v0:= -1  @length 4;
#L13c3d0.   v3.[|java:util:concurrent:PriorityBlockingQueue$Itr.lastRet|]  := v0;
#L13c3d4.   return @void ;

   }
record [|java:util:concurrent:PriorityBlockingQueue|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractQueue|], [|java:util:concurrent:BlockingQueue|], [|java:io:Serializable|] {
      [|int|] [|java:util:concurrent:PriorityBlockingQueue.allocationSpinLock|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
      [|java:util:Comparator|] [|java:util:concurrent:PriorityBlockingQueue.comparator|]    @AccessFlag PRIVATE_TRANSIENT;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:PriorityBlockingQueue.lock|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:PriorityBlockingQueue.notEmpty|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:PriorityQueue|] [|java:util:concurrent:PriorityBlockingQueue.q|]    @AccessFlag PRIVATE;
      [|java:lang:Object|][] [|java:util:concurrent:PriorityBlockingQueue.queue|]    @AccessFlag PRIVATE_TRANSIENT;
      [|int|] [|java:util:concurrent:PriorityBlockingQueue.size|]    @AccessFlag PRIVATE_TRANSIENT;
   }
      global [|int|] @@[|java:util:concurrent:PriorityBlockingQueue.DEFAULT_INITIAL_CAPACITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:PriorityBlockingQueue.MAX_ARRAY_SIZE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:PriorityBlockingQueue.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:PriorityBlockingQueue.allocationSpinLockOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:PriorityBlockingQueue.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.<clinit>|] () @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0018,L001e));
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0008,L001e));
        v2;
        v3;
      
#L13c3e8.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L13c3ee.   v2:= temp  @type object;
#L13c3f0.   @@[|java:util:concurrent:PriorityBlockingQueue.UNSAFE|] := v2  @type object;
#L13c3f4.   v1:= new [|java:util:concurrent:PriorityBlockingQueue|];
#L13c3f8.   v2:= @@[|java:util:concurrent:PriorityBlockingQueue.UNSAFE|]   @type object;
#L13c3fc.   v3:= "allocationSpinLock" @type (object, string);
#L13c400.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L13c406.   v3:= temp  @type object;
#L13c408.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13c40e.   v2:= temp  @type wide;
#L13c410.   @@[|java:util:concurrent:PriorityBlockingQueue.allocationSpinLockOffset|] := v2  @wide;
#L13c414.   return @void ;
#L13c416.   v0:= Exception  @type object;
#L13c418.   v2:= new [|java:lang:Error|];
#L13c41c.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13c422.   throw v2;
  catch  [|java:lang:Exception|] @[L13c3e8..L13c414] goto L13c416;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.<init>|] ([|java:util:concurrent:PriorityBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
      
#L13c444.   v0:= 11  @length 16;
#L13c448.   v1:= 0  @length 4;
#L13c44a.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.<init>|](v2, v0, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.<init>:(ILjava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13c450.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.<init>|] ([|java:util:concurrent:PriorityBlockingQueue|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L13c464.   v0:= 0  @length 4;
#L13c466.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.<init>|](v1, v2, v0) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.<init>:(ILjava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13c46c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.<init>|] ([|java:util:concurrent:PriorityBlockingQueue|] v1 @type (this), [|int|] v2, [|java:util:Comparator|] v3 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.<init>:(ILjava/util/Comparator;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




        v0;
      
#L13c480.   call temp:=  [|java:util:AbstractQueue.<init>|](v1) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L13c486.   v0:= 1  @length 4;
#L13c488.   if v2 >= v0 then goto L13c498;
#L13c48c.   v0:= new [|java:lang:IllegalArgumentException|];
#L13c490.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13c496.   throw v0;
#L13c498.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L13c49c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L13c4a2.   v1.[|java:util:concurrent:PriorityBlockingQueue.lock|]  := v0 @type object;
#L13c4a6.   v0:= v1.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13c4aa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13c4b0.   v0:= temp  @type object;
#L13c4b2.   v1.[|java:util:concurrent:PriorityBlockingQueue.notEmpty|]  := v0 @type object;
#L13c4b6.   v1.[|java:util:concurrent:PriorityBlockingQueue.comparator|]  := v3 @type object;
#L13c4ba.   v0:= new [|java:lang:Object|][v2];
#L13c4be.   v1.[|java:util:concurrent:PriorityBlockingQueue.queue|]  := v0 @type object;
#L13c4c2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.<init>|] ([|java:util:concurrent:PriorityBlockingQueue|] v9 @type (this), [|java:util:Collection|] v10 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.<init>:(Ljava/util/Collection;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

        [|java:util:SortedSet|] v6 @varname [|ss|] @scope ((L001b,L0022));
        [|java:lang:Object|][] v0 @varname [|a|] @scope ((L0026,L004b), (L0063,L0070));
        [|int|] v2 @varname [|i|] @scope ((L003f,L004b), (L0063,L0066));
        [|int|] v3 @varname [|n|] @scope ((L0027,L004b), (L0063,L0070));
        [|java:util:concurrent:PriorityBlockingQueue|] v4 @varname [|pq|] @scope ((L0052,L0063));
        [|boolean|] v1 @varname [|heapify|] @scope ((L0013,L0070));
        [|boolean|] v5 @varname [|screen|] @scope ((L0014,L0070));


        v7;
        v8;
      
#L13c4d4.   call temp:=  [|java:util:AbstractQueue.<init>|](v9) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L13c4da.   v7:= new [|java:util:concurrent:locks:ReentrantLock|];
#L13c4de.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v7) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L13c4e4.   v9.[|java:util:concurrent:PriorityBlockingQueue.lock|]  := v7 @type object;
#L13c4e8.   v7:= v9.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13c4ec.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v7) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13c4f2.   v7:= temp  @type object;
#L13c4f4.   v9.[|java:util:concurrent:PriorityBlockingQueue.notEmpty|]  := v7 @type object;
#L13c4f8.   v1:= 1  @length 4;
#L13c4fa.   v5:= 1  @length 4;
#L13c4fc.   v7:= instanceof @varname v10 @type [|java:util:SortedSet|];
#L13c500.   if v7 == 0 then goto L13c56a;
#L13c504.   v6:= v10  @type object;
#L13c506.   v6:= ([|java:util:SortedSet|])v6;
#L13c50a.   call temp:=  [|java:util:SortedSet.comparator|](v6) @signature [|Ljava/util/SortedSet;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:SortedSet|] @type interface;
#L13c510.   v7:= temp  @type object;
#L13c512.   v9.[|java:util:concurrent:PriorityBlockingQueue.comparator|]  := v7 @type object;
#L13c516.   v1:= 0  @length 4;
#L13c518.   call temp:=  [|java:util:Collection.toArray|](v10) @signature [|Ljava/util/Collection;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:Collection|] @type interface;
#L13c51e.   v0:= temp  @type object;
#L13c520.   v3:= v0.length;
#L13c522.   call temp:=  [|java:lang:Object.getClass|](v0) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13c528.   v7:= temp  @type object;
#L13c52a.   v8:= new [|java:lang:Object|][];
#L13c52e.   if v7 == v8 then goto L13c53e;
#L13c532.   v7:= new [|java:lang:Object|][];
#L13c536.   call temp:=  [|java:util:Arrays.copyOf|](v0, v3, v7) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L13c53c.   v0:= temp  @type object;
#L13c53e.   if v5 == 0 then goto L13c5a0;
#L13c542.   v7:= 1  @length 4;
#L13c544.   if v3 == v7 then goto L13c550;
#L13c548.   v7:= v9.[|java:util:concurrent:PriorityBlockingQueue.comparator|]   @type object;
#L13c54c.   if v7 == 0 then goto L13c5a0;
#L13c550.   v2:= 0  @length 4;
#L13c552.   if v2 >= v3 then goto L13c5a0;
#L13c556.   v7:= v0[v2]  @type object;
#L13c55a.   if v7 != 0 then goto L13c59a;
#L13c55e.   v7:= new [|java:lang:NullPointerException|];
#L13c562.   call temp:=  [|java:lang:NullPointerException.<init>|](v7) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13c568.   throw v7;
#L13c56a.   v7:= instanceof @varname v10 @type [|java:util:concurrent:PriorityBlockingQueue|];
#L13c56e.   if v7 == 0 then goto L13c518;
#L13c572.   v4:= v10  @type object;
#L13c574.   v4:= ([|java:util:concurrent:PriorityBlockingQueue|])v4;
#L13c578.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.comparator|](v4) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type virtual;
#L13c57e.   v7:= temp  @type object;
#L13c580.   v9.[|java:util:concurrent:PriorityBlockingQueue.comparator|]  := v7 @type object;
#L13c584.   v5:= 0  @length 4;
#L13c586.   call temp:=  [|java:lang:Object.getClass|](v4) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13c58c.   v7:= temp  @type object;
#L13c58e.   v8:= new [|java:util:concurrent:PriorityBlockingQueue|];
#L13c592.   if v7 != v8 then goto L13c518;
#L13c596.   v1:= 0  @length 4;
#L13c598.   goto L13c518;
#L13c59a.   v2:= v2 + 1;
#L13c59e.   goto L13c552;
#L13c5a0.   v9.[|java:util:concurrent:PriorityBlockingQueue.queue|]  := v0 @type object;
#L13c5a4.   v9.[|java:util:concurrent:PriorityBlockingQueue.size|]  := v3;
#L13c5a8.   if v1 == 0 then goto L13c5b2;
#L13c5ac.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.heapify|](v9) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.heapify:()V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13c5b2.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:PriorityBlockingQueue.dequeue|] ([|java:util:concurrent:PriorityBlockingQueue|] v8 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.dequeue:()Ljava/lang/Object;|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|array|] @scope ((L000c,L0020));
        [|java:util:Comparator|] v1 @varname [|cmp|] @scope ((L0014,L0020));
        [|int|] v2 @varname [|n|] @scope ((L0006,L0020));
        [|java:lang:Object|] v3 @varname [|result|] @scope ((L000e,L0020));
        [|java:lang:Object|] v4 @varname [|x|] @scope ((L0010,L0020));

        v5;
        v6;
        v7;
      
#L13c5c4.   v5:= 0  @length 4;
#L13c5c6.   v7:= 0  @length 4;
#L13c5c8.   v6:= v8.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13c5cc.   v2:= v6 + -1;
#L13c5d0.   if v2 >= 0 then goto L13c5d8;
#L13c5d4.   v3:= v5  @type object;
#L13c5d6.   return v3  @type object;
#L13c5d8.   v0:= v8.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13c5dc.   v3:= v0[v7]  @type object;
#L13c5e0.   v4:= v0[v2]  @type object;
#L13c5e4.   v0[v2]:= v5  @type object;
#L13c5e8.   v1:= v8.[|java:util:concurrent:PriorityBlockingQueue.comparator|]   @type object;
#L13c5ec.   if v1 != 0 then goto L13c5fc;
#L13c5f0.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftDownComparable|](v7, v4, v0, v2) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftDownComparable:(ILjava/lang/Object;[Ljava/lang/Object;I)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13c5f6.   v8.[|java:util:concurrent:PriorityBlockingQueue.size|]  := v2;
#L13c5fa.   goto L13c5d6;
#L13c5fc.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftDownUsingComparator|](v7, v4, v0, v2, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftDownUsingComparator:(ILjava/lang/Object;[Ljava/lang/Object;ILjava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13c602.   goto L13c5f6;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.heapify|] ([|java:util:concurrent:PriorityBlockingQueue|] v6 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.heapify:()V|] @Access PRIVATE {
      local temp ;

        [|int|] v3 @varname [|i|] @scope ((L000d,L0017), (L0018,L0023));
        [|java:lang:Object|][] v0 @varname [|array|] @scope ((L0002,L0023));
        [|java:util:Comparator|] v1 @varname [|cmp|] @scope ((L000a,L0023));
        [|int|] v2 @varname [|half|] @scope ((L0008,L0023));
        [|int|] v4 @varname [|n|] @scope ((L0004,L0023));

        v5;
      
#L13c614.   v0:= v6.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13c618.   v4:= v6.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13c61c.   v5:= v4 ^>> 1;
#L13c620.   v2:= v5 + -1;
#L13c624.   v1:= v6.[|java:util:concurrent:PriorityBlockingQueue.comparator|]   @type object;
#L13c628.   if v1 != 0 then goto L13c642;
#L13c62c.   v3:= v2;
#L13c62e.   if v3 < 0 then goto L13c658;
#L13c632.   v5:= v0[v3]  @type object;
#L13c636.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftDownComparable|](v3, v5, v0, v4) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftDownComparable:(ILjava/lang/Object;[Ljava/lang/Object;I)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13c63c.   v3:= v3 + -1;
#L13c640.   goto L13c62e;
#L13c642.   v3:= v2;
#L13c644.   if v3 < 0 then goto L13c658;
#L13c648.   v5:= v0[v3]  @type object;
#L13c64c.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftDownUsingComparator|](v3, v5, v0, v4, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftDownUsingComparator:(ILjava/lang/Object;[Ljava/lang/Object;ILjava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13c652.   v3:= v3 + -1;
#L13c656.   goto L13c644;
#L13c658.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:PriorityBlockingQueue.indexOf|] ([|java:util:concurrent:PriorityBlockingQueue|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.indexOf:(Ljava/lang/Object;)I|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|array|] @scope ((L0004,L0011), (L0012,L0015));
        [|int|] v1 @varname [|i|] @scope ((L0007,L0011), (L0012,L0015));
        [|int|] v2 @varname [|n|] @scope ((L0006,L0011), (L0012,L0015));


        v3;
      
#L13c66c.   if v5 == 0 then goto L13c696;
#L13c670.   v0:= v4.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13c674.   v2:= v4.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13c678.   v1:= 0  @length 4;
#L13c67a.   if v1 >= v2 then goto L13c696;
#L13c67e.   v3:= v0[v1]  @type object;
#L13c682.   call temp:=  [|java:lang:Object.equals|](v5, v3) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13c688.   v3:= temp;
#L13c68a.   if v3 == 0 then goto L13c690;
#L13c68e.   return v1;
#L13c690.   v1:= v1 + 1;
#L13c694.   goto L13c67a;
#L13c696.   v1:= -1  @length 4;
#L13c698.   goto L13c68e;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.readObject|] ([|java:util:concurrent:PriorityBlockingQueue|] v2 @type (this), [|java:io:ObjectInputStream|] v3 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;



        v0;
        v1;
      
#L13c6ac.   v1:= 0  @length 4;
#L13c6ae.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v3) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L13c6b4.   v0:= v2.[|java:util:concurrent:PriorityBlockingQueue.q|]   @type object;
#L13c6b8.   call temp:=  [|java:util:PriorityQueue.size|](v0) @signature [|Ljava/util/PriorityQueue;.size:()I|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L13c6be.   v0:= temp;
#L13c6c0.   v0:= new [|java:lang:Object|][v0];
#L13c6c4.   v2.[|java:util:concurrent:PriorityBlockingQueue.queue|]  := v0 @type object;
#L13c6c8.   v0:= v2.[|java:util:concurrent:PriorityBlockingQueue.q|]   @type object;
#L13c6cc.   call temp:=  [|java:util:PriorityQueue.comparator|](v0) @signature [|Ljava/util/PriorityQueue;.comparator:()Ljava/util/Comparator;|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L13c6d2.   v0:= temp  @type object;
#L13c6d4.   v2.[|java:util:concurrent:PriorityBlockingQueue.comparator|]  := v0 @type object;
#L13c6d8.   v0:= v2.[|java:util:concurrent:PriorityBlockingQueue.q|]   @type object;
#L13c6dc.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.addAll|](v2, v0) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type virtual;
#L13c6e2.   v2.[|java:util:concurrent:PriorityBlockingQueue.q|]  := v1 @type object;
#L13c6e6.   return @void ;
#L13c6e8.   v0:= Exception  @type object;
#L13c6ea.   v2.[|java:util:concurrent:PriorityBlockingQueue.q|]  := v1 @type object;
#L13c6ee.   throw v0;
  catch  [|any|] @[L13c6ae..L13c6e2] goto L13c6e8;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.removeAt|] ([|java:util:concurrent:PriorityBlockingQueue|] v6 @type (this), [|int|] v7) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.removeAt:(I)V|] @Access PRIVATE {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|array|] @scope ((L0003,L002b));
        [|java:util:Comparator|] v1 @varname [|cmp|] @scope ((L0014,L002b));
        [|java:lang:Object|] v2 @varname [|moved|] @scope ((L0010,L002b));
        [|int|] v3 @varname [|n|] @scope ((L0007,L002b));


        v4;
        v5;
      
#L13c70c.   v5:= 0  @length 4;
#L13c70e.   v0:= v6.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13c712.   v4:= v6.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13c716.   v3:= v4 + -1;
#L13c71a.   if v3 != v7 then goto L13c728;
#L13c71e.   v0[v7]:= v5  @type object;
#L13c722.   v6.[|java:util:concurrent:PriorityBlockingQueue.size|]  := v3;
#L13c726.   return @void ;
#L13c728.   v2:= v0[v3]  @type object;
#L13c72c.   v0[v3]:= v5  @type object;
#L13c730.   v1:= v6.[|java:util:concurrent:PriorityBlockingQueue.comparator|]   @type object;
#L13c734.   if v1 != 0 then goto L13c752;
#L13c738.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftDownComparable|](v7, v2, v0, v3) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftDownComparable:(ILjava/lang/Object;[Ljava/lang/Object;I)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13c73e.   v4:= v0[v7]  @type object;
#L13c742.   if v4 != v2 then goto L13c722;
#L13c746.   if v1 != 0 then goto L13c75a;
#L13c74a.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftUpComparable|](v7, v2, v0) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftUpComparable:(ILjava/lang/Object;[Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13c750.   goto L13c722;
#L13c752.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftDownUsingComparator|](v7, v2, v0, v3, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftDownUsingComparator:(ILjava/lang/Object;[Ljava/lang/Object;ILjava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13c758.   goto L13c73e;
#L13c75a.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftUpUsingComparator|](v7, v2, v0, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftUpUsingComparator:(ILjava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13c760.   goto L13c722;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.siftDownComparable|] ([|int|] v7, [|java:lang:Object|] v8 @type (object), [|java:lang:Object|][] v9 @type (object), [|int|] v10) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftDownComparable:(ILjava/lang/Object;[Ljava/lang/Object;I)V|] @Access PRIVATE_STATIC {
      local temp ;
        [|java:lang:Object|] v0 @varname [|c|] @scope ((L000d,L0025), (L0028,L002c));
        [|int|] v1 @varname [|child|] @scope ((L000b,L0025), (L0028,L002c));
        [|int|] v4 @varname [|right|] @scope ((L000f,L0025), (L0028,L002c));
        [|int|] v2 @varname [|half|] @scope ((L0005,L002c));
        [|java:lang:Comparable|] v3 @varname [|key|] @scope ((L0003,L002c));




        v5;
        v6;
      
#L13c774.   v3:= v8  @type object;
#L13c776.   v3:= ([|java:lang:Comparable|])v3;
#L13c77a.   v2:= v10 ^>> 1;
#L13c77e.   if v7 >= v2 then goto L13c7be;
#L13c782.   v5:= v7 ^< 1;
#L13c786.   v1:= v5 + 1;
#L13c78a.   v0:= v9[v1]  @type object;
#L13c78e.   v4:= v1 + 1;
#L13c792.   if v4 >= v10 then goto L13c7b2;
#L13c796.   v5:= v0  @type object;
#L13c798.   v5:= ([|java:lang:Comparable|])v5;
#L13c79c.   v6:= v9[v4]  @type object;
#L13c7a0.   call temp:=  [|java:lang:Comparable.compareTo|](v5, v6) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L13c7a6.   v5:= temp;
#L13c7a8.   if v5 <= 0 then goto L13c7b2;
#L13c7ac.   v1:= v4;
#L13c7ae.   v0:= v9[v4]  @type object;
#L13c7b2.   call temp:=  [|java:lang:Comparable.compareTo|](v3, v0) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L13c7b8.   v5:= temp;
#L13c7ba.   if v5 > 0 then goto L13c7c4;
#L13c7be.   v9[v7]:= v3  @type object;
#L13c7c2.   return @void ;
#L13c7c4.   v9[v7]:= v0  @type object;
#L13c7c8.   v7:= v1;
#L13c7ca.   goto L13c77e;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.siftDownUsingComparator|] ([|int|] v5, [|java:lang:Object|] v6 @type (object), [|java:lang:Object|][] v7 @type (object), [|int|] v8, [|java:util:Comparator|] v9 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftDownUsingComparator:(ILjava/lang/Object;[Ljava/lang/Object;ILjava/util/Comparator;)V|] @Access PRIVATE_STATIC {
      local temp ;
        [|java:lang:Object|] v0 @varname [|c|] @scope ((L000a,L001f), (L0022,L0026));
        [|int|] v1 @varname [|child|] @scope ((L0008,L001f), (L0022,L0026));
        [|int|] v3 @varname [|right|] @scope ((L000c,L001f), (L0022,L0026));
        [|int|] v2 @varname [|half|] @scope ((L0002,L0026));





        v4;
      
#L13c7dc.   v2:= v8 ^>> 1;
#L13c7e0.   if v5 >= v2 then goto L13c81a;
#L13c7e4.   v4:= v5 ^< 1;
#L13c7e8.   v1:= v4 + 1;
#L13c7ec.   v0:= v7[v1]  @type object;
#L13c7f0.   v3:= v1 + 1;
#L13c7f4.   if v3 >= v8 then goto L13c80e;
#L13c7f8.   v4:= v7[v3]  @type object;
#L13c7fc.   call temp:=  [|java:util:Comparator.compare|](v9, v0, v4) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L13c802.   v4:= temp;
#L13c804.   if v4 <= 0 then goto L13c80e;
#L13c808.   v1:= v3;
#L13c80a.   v0:= v7[v3]  @type object;
#L13c80e.   call temp:=  [|java:util:Comparator.compare|](v9, v6, v0) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L13c814.   v4:= temp;
#L13c816.   if v4 > 0 then goto L13c820;
#L13c81a.   v7[v5]:= v6  @type object;
#L13c81e.   return @void ;
#L13c820.   v7[v5]:= v0  @type object;
#L13c824.   v5:= v1;
#L13c826.   goto L13c7e0;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.siftUpComparable|] ([|int|] v4, [|java:lang:Object|] v5 @type (object), [|java:lang:Object|][] v6 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftUpComparable:(ILjava/lang/Object;[Ljava/lang/Object;)V|] @Access PRIVATE_STATIC {
      local temp ;
        [|java:lang:Object|] v0 @varname [|e|] @scope ((L000b,L0011), (L0014,L0018));
        [|int|] v2 @varname [|parent|] @scope ((L0009,L0011), (L0014,L0018));
        [|java:lang:Comparable|] v1 @varname [|key|] @scope ((L0003,L0018));



        v3;
      
#L13c838.   v1:= v5  @type object;
#L13c83a.   v1:= ([|java:lang:Comparable|])v1;
#L13c83e.   if v4 <= 0 then goto L13c85a;
#L13c842.   v3:= v4 + -1;
#L13c846.   v2:= v3 ^>> 1;
#L13c84a.   v0:= v6[v2]  @type object;
#L13c84e.   call temp:=  [|java:lang:Comparable.compareTo|](v1, v0) @signature [|Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:lang:Comparable|] @type interface;
#L13c854.   v3:= temp;
#L13c856.   if v3 < 0 then goto L13c860;
#L13c85a.   v6[v4]:= v1  @type object;
#L13c85e.   return @void ;
#L13c860.   v6[v4]:= v0  @type object;
#L13c864.   v4:= v2;
#L13c866.   goto L13c83e;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.siftUpUsingComparator|] ([|int|] v3, [|java:lang:Object|] v4 @type (object), [|java:lang:Object|][] v5 @type (object), [|java:util:Comparator|] v6 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftUpUsingComparator:(ILjava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)V|] @Access PRIVATE_STATIC {
      local temp ;
        [|java:lang:Object|] v0 @varname [|e|] @scope ((L0008,L000e), (L0011,L0015));
        [|int|] v1 @varname [|parent|] @scope ((L0006,L000e), (L0011,L0015));




        v2;
      
#L13c878.   if v3 <= 0 then goto L13c894;
#L13c87c.   v2:= v3 + -1;
#L13c880.   v1:= v2 ^>> 1;
#L13c884.   v0:= v5[v1]  @type object;
#L13c888.   call temp:=  [|java:util:Comparator.compare|](v6, v4, v0) @signature [|Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I|] @classDescriptor [|java:util:Comparator|] @type interface;
#L13c88e.   v2:= temp;
#L13c890.   if v2 < 0 then goto L13c89a;
#L13c894.   v5[v3]:= v4  @type object;
#L13c898.   return @void ;
#L13c89a.   v5[v3]:= v0  @type object;
#L13c89e.   v3:= v1;
#L13c8a0.   goto L13c878;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.tryGrow|] ([|java:util:concurrent:PriorityBlockingQueue|] v10 @type (this), [|java:lang:Object|][] v11 @type (object), [|int|] v12) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.tryGrow:([Ljava/lang/Object;I)V|] @Access PRIVATE {
      local temp ;

        [|int|] v6 @varname [|minCap|] @scope ((L0028,L0032), (L0039,L003c));
        [|int|] v8 @varname [|newCap|] @scope ((L0022,L0036), (L0039,L0046));
        [|java:lang:Object|][] v7 @varname [|newArray|] @scope ((L000a,L005c));



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v9;
      
#L13c8b4.    v9:= nan;
#L13c8ba.   v4:= 0  @length 4;
#L13c8bc.   v0:= v10.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13c8c0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13c8c6.   v7:= 0  @length 4;
#L13c8c8.   v0:= v10.[|java:util:concurrent:PriorityBlockingQueue.allocationSpinLock|] ;
#L13c8cc.   if v0 != 0 then goto L13c940;
#L13c8d0.   v0:= @@[|java:util:concurrent:PriorityBlockingQueue.UNSAFE|]   @type object;
#L13c8d4.   v2:= @@[|java:util:concurrent:PriorityBlockingQueue.allocationSpinLockOffset|]   @wide;
#L13c8d8.   v5:= 1  @length 4;
#L13c8da.   v1:= v10  @type object;
#L13c8dc.   call temp:=  [|sun:misc:Unsafe.compareAndSwapInt|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapInt:(Ljava/lang/Object;JII)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L13c8e2.   v0:= temp;
#L13c8e4.   if v0 == 0 then goto L13c940;
#L13c8e8.   v0:= 64  @length 16;
#L13c8ec.   if v12 >= v0 then goto L13c920;
#L13c8f0.   v0:= v12 + 2;
#L13c8f4.   v8:= v12 + v0  @type int;
#L13c8f8.   v0:= v8 - v9  @type int;
#L13c8fc.   if v0 <= 0 then goto L13c92c;
#L13c900.   v6:= v12 + 1;
#L13c904.   if v6 < 0 then goto L13c90c;
#L13c908.   if v6 <= v9 then goto L13c926;
#L13c90c.   v0:= new [|java:lang:OutOfMemoryError|];
#L13c910.   call temp:=  [|java:lang:OutOfMemoryError.<init>|](v0) @signature [|Ljava/lang/OutOfMemoryError;.<init>:()V|] @classDescriptor [|java:lang:OutOfMemoryError|] @type direct;
#L13c916.   throw v0;
#L13c918.   v0:= Exception  @type object;
#L13c91a.   v10.[|java:util:concurrent:PriorityBlockingQueue.allocationSpinLock|]  := v4;
#L13c91e.   throw v0;
#L13c920.   v0:= v12 ^> 1;
#L13c924.   goto L13c8f4;
#L13c926.    v8:= nan;
#L13c92c.   if v8 <= v12 then goto L13c93c;
#L13c930.   v0:= v10.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13c934.   if v0 != v11 then goto L13c93c;
#L13c938.   v7:= new [|java:lang:Object|][v8];
#L13c93c.   v10.[|java:util:concurrent:PriorityBlockingQueue.allocationSpinLock|]  := v4;
#L13c940.   if v7 != 0 then goto L13c94a;
#L13c944.   call temp:=  [|java:lang:Thread.yield|]() @signature [|Ljava/lang/Thread;.yield:()V|] @classDescriptor [|java:lang:Thread|] @type static;
#L13c94a.   v0:= v10.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13c94e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13c954.   if v7 == 0 then goto L13c96a;
#L13c958.   v0:= v10.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13c95c.   if v0 != v11 then goto L13c96a;
#L13c960.   v10.[|java:util:concurrent:PriorityBlockingQueue.queue|]  := v7 @type object;
#L13c964.   call temp:=  [|java:lang:System.arraycopy|](v11, v4, v7, v4, v12) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L13c96a.   return @void ;
  catch  [|any|] @[L13c90c..L13c918] goto L13c918;
  catch  [|any|] @[L13c930..L13c93c] goto L13c918;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.writeObject|] ([|java:util:concurrent:PriorityBlockingQueue|] v4 @type (this), [|java:io:ObjectOutputStream|] v5 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L13c990.   v3:= 0  @length 4;
#L13c992.   v0:= v4.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13c996.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13c99c.   v0:= new [|java:util:PriorityQueue|];
#L13c9a0.   v1:= v4.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13c9a4.   v2:= 1  @length 4;
#L13c9a6.   call temp:=  [|java:lang:Math.max|](v1, v2) @signature [|Ljava/lang/Math;.max:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L13c9ac.   v1:= temp;
#L13c9ae.   v2:= v4.[|java:util:concurrent:PriorityBlockingQueue.comparator|]   @type object;
#L13c9b2.   call temp:=  [|java:util:PriorityQueue.<init>|](v0, v1, v2) @signature [|Ljava/util/PriorityQueue;.<init>:(ILjava/util/Comparator;)V|] @classDescriptor [|java:util:PriorityQueue|] @type direct;
#L13c9b8.   v4.[|java:util:concurrent:PriorityBlockingQueue.q|]  := v0 @type object;
#L13c9bc.   v0:= v4.[|java:util:concurrent:PriorityBlockingQueue.q|]   @type object;
#L13c9c0.   call temp:=  [|java:util:PriorityQueue.addAll|](v0, v4) @signature [|Ljava/util/PriorityQueue;.addAll:(Ljava/util/Collection;)Z|] @classDescriptor [|java:util:PriorityQueue|] @type virtual;
#L13c9c6.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v5) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L13c9cc.   v4.[|java:util:concurrent:PriorityBlockingQueue.q|]  := v3 @type object;
#L13c9d0.   v0:= v4.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13c9d4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13c9da.   return @void ;
#L13c9dc.   v0:= Exception  @type object;
#L13c9de.   v4.[|java:util:concurrent:PriorityBlockingQueue.q|]  := v3 @type object;
#L13c9e2.   v1:= v4.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13c9e6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13c9ec.   throw v0;
  catch  [|any|] @[L13c99c..L13c9cc] goto L13c9dc;

   }
    procedure [|boolean|] [|java:util:concurrent:PriorityBlockingQueue.add|] ([|java:util:concurrent:PriorityBlockingQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L13ca0c.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.offer|](v1, v2) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.offer:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type virtual;
#L13ca12.   v0:= temp;
#L13ca14.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.clear|] ([|java:util:concurrent:PriorityBlockingQueue|] v5 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.clear:()V|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|array|] @scope ((L0007,L0015), (L001a,L001e));
        [|int|] v1 @varname [|i|] @scope ((L000d,L0015), (L001a,L001e));
        [|int|] v3 @varname [|n|] @scope ((L0009,L0015), (L001a,L001e));
        [|java:util:concurrent:locks:ReentrantLock|] v2 @varname [|lock|] @scope ((L0002,L001e));

        v4;
      
#L13ca28.   v2:= v5.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13ca2c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ca32.   v0:= v5.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13ca36.   v3:= v5.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13ca3a.   v4:= 0  @length 4;
#L13ca3c.   v5.[|java:util:concurrent:PriorityBlockingQueue.size|]  := v4;
#L13ca40.   v1:= 0  @length 4;
#L13ca42.   if v1 >= v3 then goto L13ca5c;
#L13ca46.   v4:= 0  @length 4;
#L13ca48.   v0[v1]:= v4  @type object;
#L13ca4c.   v1:= v1 + 1;
#L13ca50.   goto L13ca42;
#L13ca52.   v4:= Exception  @type object;
#L13ca54.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ca5a.   throw v4;
#L13ca5c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ca62.   return @void ;
  catch  [|any|] @[L13ca32..L13ca4c] goto L13ca52;

   }
    procedure [|java:util:Comparator|] [|java:util:concurrent:PriorityBlockingQueue.comparator|] ([|java:util:concurrent:PriorityBlockingQueue|] v1 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.comparator:()Ljava/util/Comparator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13ca80.   v0:= v1.[|java:util:concurrent:PriorityBlockingQueue.comparator|]   @type object;
#L13ca84.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:PriorityBlockingQueue.contains|] ([|java:util:concurrent:PriorityBlockingQueue|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0018));


        v1;
        v2;
      
#L13ca98.   v0:= v3.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13ca9c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13caa2.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.indexOf|](v3, v4) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13caa8.   v1:= temp;
#L13caaa.   v2:= -1  @length 4;
#L13caac.   if v1 == v2 then goto L13caba;
#L13cab0.   v1:= 1  @length 4;
#L13cab2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cab8.   return v1;
#L13caba.   v1:= 0  @length 4;
#L13cabc.   goto L13cab2;
#L13cabe.   v1:= Exception  @type object;
#L13cac0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cac6.   throw v1;
  catch  [|any|] @[L13caa2..L13caa8] goto L13cabe;

   }
    procedure [|int|] [|java:util:concurrent:PriorityBlockingQueue.drainTo|] ([|java:util:concurrent:PriorityBlockingQueue|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.drainTo:(Ljava/util/Collection;)I|] @Access PUBLIC {
      local temp ;



        v0;
      
#L13cae4.    v0:= nan;
#L13caea.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.drainTo|](v1, v2, v0) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.drainTo:(Ljava/util/Collection;I)I|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type virtual;
#L13caf0.   v0:= temp;
#L13caf2.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:PriorityBlockingQueue.drainTo|] ([|java:util:concurrent:PriorityBlockingQueue|] v5 @type (this), [|java:util:Collection|] v6 @type (object), [|int|] v7) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.drainTo:(Ljava/util/Collection;I)I|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|i|] @scope ((L0020,L0030), (L0035,L0039));
        [|int|] v2 @varname [|n|] @scope ((L001f,L0030), (L0035,L0039));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0016,L0039));



        v3;
        v4;
      
#L13cb04.   v2:= 0  @length 4;
#L13cb06.   if v6 != 0 then goto L13cb16;
#L13cb0a.   v3:= new [|java:lang:NullPointerException|];
#L13cb0e.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13cb14.   throw v3;
#L13cb16.   if v6 != v5 then goto L13cb26;
#L13cb1a.   v3:= new [|java:lang:IllegalArgumentException|];
#L13cb1e.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13cb24.   throw v3;
#L13cb26.   if v7 > 0 then goto L13cb2c;
#L13cb2a.   return v2;
#L13cb2c.   v1:= v5.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13cb30.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cb36.   v3:= v5.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13cb3a.   call temp:=  [|java:lang:Math.min|](v3, v7) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L13cb40.   v2:= temp;
#L13cb42.   v0:= 0  @length 4;
#L13cb44.   if v0 >= v2 then goto L13cb6e;
#L13cb48.   v3:= v5.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13cb4c.   v4:= 0  @length 4;
#L13cb4e.   v3:= v3[v4]  @type object;
#L13cb52.   call temp:=  [|java:util:Collection.add|](v6, v3) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L13cb58.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.dequeue|](v5) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13cb5e.   v0:= v0 + 1;
#L13cb62.   goto L13cb44;
#L13cb64.   v3:= Exception  @type object;
#L13cb66.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cb6c.   throw v3;
#L13cb6e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cb74.   goto L13cb2a;
  catch  [|any|] @[L13cb36..L13cb5e] goto L13cb64;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:PriorityBlockingQueue.iterator|] ([|java:util:concurrent:PriorityBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L13cb94.   v0:= new [|java:util:concurrent:PriorityBlockingQueue$Itr|];
#L13cb98.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.toArray|](v2) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type virtual;
#L13cb9e.   v1:= temp  @type object;
#L13cba0.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue$Itr.<init>|](v0, v2, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue$Itr;.<init>:(Ljava/util/concurrent/PriorityBlockingQueue;[Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue$Itr|] @type direct;
#L13cba6.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:PriorityBlockingQueue.offer|] ([|java:util:concurrent:PriorityBlockingQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|java:util:Comparator|] v2 @varname [|cmp|] @scope ((L001a,L0031));
        [|java:lang:Object|][] v0 @varname [|array|] @scope ((L0011,L0036));
        [|int|] v1 @varname [|cap|] @scope ((L0012,L0036));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|lock|] @scope ((L000a,L0036));
        [|int|] v4 @varname [|n|] @scope ((L000f,L0036));


        v5;
      
#L13cbb8.   if v7 != 0 then goto L13cbc8;
#L13cbbc.   v5:= new [|java:lang:NullPointerException|];
#L13cbc0.   call temp:=  [|java:lang:NullPointerException.<init>|](v5) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13cbc6.   throw v5;
#L13cbc8.   v3:= v6.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13cbcc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cbd2.   v4:= v6.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13cbd6.   v0:= v6.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13cbda.   v1:= v0.length;
#L13cbdc.   if v4 < v1 then goto L13cbe8;
#L13cbe0.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.tryGrow|](v6, v0, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.tryGrow:([Ljava/lang/Object;I)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13cbe6.   goto L13cbd2;
#L13cbe8.   v2:= v6.[|java:util:concurrent:PriorityBlockingQueue.comparator|]   @type object;
#L13cbec.   if v2 != 0 then goto L13cc12;
#L13cbf0.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftUpComparable|](v4, v7, v0) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftUpComparable:(ILjava/lang/Object;[Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13cbf6.   v5:= v4 + 1;
#L13cbfa.   v6.[|java:util:concurrent:PriorityBlockingQueue.size|]  := v5;
#L13cbfe.   v5:= v6.[|java:util:concurrent:PriorityBlockingQueue.notEmpty|]   @type object;
#L13cc02.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v5) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13cc08.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cc0e.   v5:= 1  @length 4;
#L13cc10.   return v5;
#L13cc12.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.siftUpUsingComparator|](v4, v7, v0, v2) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.siftUpUsingComparator:(ILjava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type static;
#L13cc18.   goto L13cbf6;
#L13cc1a.   v5:= Exception  @type object;
#L13cc1c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cc22.   throw v5;
  catch  [|any|] @[L13cbe8..L13cc08] goto L13cc1a;
  catch  [|any|] @[L13cc12..L13cc18] goto L13cc1a;

   }
    procedure [|boolean|] [|java:util:concurrent:PriorityBlockingQueue.offer|] ([|java:util:concurrent:PriorityBlockingQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;





        v0;
      
#L13cc48.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.offer|](v1, v2) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.offer:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type virtual;
#L13cc4e.   v0:= temp;
#L13cc50.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:PriorityBlockingQueue.peek|] ([|java:util:concurrent:PriorityBlockingQueue|] v3 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.peek:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0019));

        v1;
        v2;
      
#L13cc64.   v0:= v3.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13cc68.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cc6e.   v1:= v3.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13cc72.   if v1 != 0 then goto L13cc80;
#L13cc76.   v1:= 0  @length 4;
#L13cc78.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cc7e.   return v1  @type object;
#L13cc80.   v1:= v3.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13cc84.   v2:= 0  @length 4;
#L13cc86.   v1:= v1[v2]  @type object;
#L13cc8a.   goto L13cc78;
#L13cc8c.   v1:= Exception  @type object;
#L13cc8e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cc94.   throw v1;
  catch  [|any|] @[L13cc6e..L13cc72] goto L13cc8c;
  catch  [|any|] @[L13cc80..L13cc8a] goto L13cc8c;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:PriorityBlockingQueue.poll|] ([|java:util:concurrent:PriorityBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.poll:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0012));

        v1;
      
#L13ccbc.   v0:= v2.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13ccc0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ccc6.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.dequeue|](v2) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13cccc.   v1:= temp  @type object;
#L13ccce.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ccd4.   return v1  @type object;
#L13ccd6.   v1:= Exception  @type object;
#L13ccd8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ccde.   throw v1;
  catch  [|any|] @[L13ccc6..L13cccc] goto L13ccd6;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:PriorityBlockingQueue.poll|] ([|java:util:concurrent:PriorityBlockingQueue|] v6 @type (this), [|long|] v7, [|java:util:concurrent:TimeUnit|] v9 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v3 @varname [|result|] @scope ((L000d,L001c), (L0021,L0025));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0006,L0025));
        [|long|] v1 @varname [|nanos|] @scope ((L0004,L0025));



        v2;
        v4;
        v5;
      
#L13ccfc.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v9, v7, v8) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13cd02.   v1:= temp  @type wide;
#L13cd04.   v0:= v6.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13cd08.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cd0e.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.dequeue|](v6) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13cd14.   v3:= temp  @type object;
#L13cd16.   if v3 != 0 then goto L13cd3e;
#L13cd1a.   v4:= 0  @length wide16;
#L13cd1e.   v4:= cmp(v1,v4);
#L13cd22.   if v4 <= 0 then goto L13cd3e;
#L13cd26.   v4:= v6.[|java:util:concurrent:PriorityBlockingQueue.notEmpty|]   @type object;
#L13cd2a.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v4, v1, v2) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13cd30.   v1:= temp  @type wide;
#L13cd32.   goto L13cd0e;
#L13cd34.   v4:= Exception  @type object;
#L13cd36.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cd3c.   throw v4;
#L13cd3e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cd44.   return v3  @type object;
  catch  [|any|] @[L13cd0e..L13cd30] goto L13cd34;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.put|] ([|java:util:concurrent:PriorityBlockingQueue|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.put:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



      
#L13cd64.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.offer|](v0, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.offer:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type virtual;
#L13cd6a.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:PriorityBlockingQueue.remainingCapacity|] ([|java:util:concurrent:PriorityBlockingQueue|] v1 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.remainingCapacity:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13cd7c.    v0:= nan;
#L13cd82.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:PriorityBlockingQueue.remove|] ([|java:util:concurrent:PriorityBlockingQueue|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;

        [|int|] v0 @varname [|i|] @scope ((L0009,L0016));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0002,L001b));


        v2;
      
#L13cd94.   v1:= v3.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13cd98.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cd9e.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.indexOf|](v3, v4) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13cda4.   v0:= temp;
#L13cda6.   v2:= -1  @length 4;
#L13cda8.   if v0 != v2 then goto L13cdb6;
#L13cdac.   v2:= 0  @length 4;
#L13cdae.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cdb4.   return v2;
#L13cdb6.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.removeAt|](v3, v0) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.removeAt:(I)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13cdbc.   v2:= 1  @length 4;
#L13cdbe.   goto L13cdae;
#L13cdc0.   v2:= Exception  @type object;
#L13cdc2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cdc8.   throw v2;
  catch  [|any|] @[L13cd9e..L13cda4] goto L13cdc0;
  catch  [|any|] @[L13cdb6..L13cdbc] goto L13cdc0;

   }
    procedure [|void|] [|java:util:concurrent:PriorityBlockingQueue.removeEQ|] ([|java:util:concurrent:PriorityBlockingQueue|] v5 @type (this), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.removeEQ:(Ljava/lang/Object;)V|] @Access  {
      local temp ;

        [|java:lang:Object|][] v0 @varname [|array|] @scope ((L0007,L001a));
        [|int|] v1 @varname [|i|] @scope ((L0008,L001a));
        [|int|] v3 @varname [|n|] @scope ((L000a,L001a));
        [|java:util:concurrent:locks:ReentrantLock|] v2 @varname [|lock|] @scope ((L0002,L001f));


        v4;
      
#L13cdf0.   v2:= v5.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13cdf4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cdfa.   v0:= v5.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13cdfe.   v1:= 0  @length 4;
#L13ce00.   v3:= v5.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13ce04.   if v1 >= v3 then goto L13ce16;
#L13ce08.   v4:= v0[v1]  @type object;
#L13ce0c.   if v6 != v4 then goto L13ce1e;
#L13ce10.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.removeAt|](v5, v1) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.removeAt:(I)V|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13ce16.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ce1c.   return @void ;
#L13ce1e.   v1:= v1 + 1;
#L13ce22.   goto L13ce04;
#L13ce24.   v4:= Exception  @type object;
#L13ce26.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ce2c.   throw v4;
  catch  [|any|] @[L13cdfa..L13ce16] goto L13ce24;

   }
    procedure [|int|] [|java:util:concurrent:PriorityBlockingQueue.size|] ([|java:util:concurrent:PriorityBlockingQueue|] v2 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.size:()I|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0010));

        v1;
      
#L13ce4c.   v0:= v2.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13ce50.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ce56.   v1:= v2.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13ce5a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ce60.   return v1;
#L13ce62.   v1:= Exception  @type object;
#L13ce64.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ce6a.   throw v1;
  catch  [|any|] @[L13ce56..L13ce5a] goto L13ce62;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:PriorityBlockingQueue.take|] ([|java:util:concurrent:PriorityBlockingQueue|] v3 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.take:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v1 @varname [|result|] @scope ((L0009,L0011), (L0016,L001a));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L001a));

        v2;
      
#L13ce88.   v0:= v3.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13ce8c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ce92.   call temp:=  [|java:util:concurrent:PriorityBlockingQueue.dequeue|](v3) @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.dequeue:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:PriorityBlockingQueue|] @type direct;
#L13ce98.   v1:= temp  @type object;
#L13ce9a.   if v1 != 0 then goto L13ceb4;
#L13ce9e.   v2:= v3.[|java:util:concurrent:PriorityBlockingQueue.notEmpty|]   @type object;
#L13cea2.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v2) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13cea8.   goto L13ce92;
#L13ceaa.   v2:= Exception  @type object;
#L13ceac.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ceb2.   throw v2;
#L13ceb4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ceba.   return v1  @type object;
  catch  [|any|] @[L13ce92..L13cea8] goto L13ceaa;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:PriorityBlockingQueue.toArray|] ([|java:util:concurrent:PriorityBlockingQueue|] v3 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0016));

        v1;
        v2;
      
#L13ced8.   v0:= v3.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13cedc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cee2.   v1:= v3.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13cee6.   v2:= v3.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13ceea.   call temp:=  [|java:util:Arrays.copyOf|](v1, v2) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L13cef0.   v1:= temp  @type object;
#L13cef2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cef8.   return v1  @type object;
#L13cefa.   v1:= Exception  @type object;
#L13cefc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cf02.   throw v1;
  catch  [|any|] @[L13cee2..L13cef0] goto L13cefa;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:PriorityBlockingQueue.toArray|] ([|java:util:concurrent:PriorityBlockingQueue|] v5 @type (this), [|java:lang:Object|][] v6 @type (object)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|int|] v1 @varname [|n|] @scope ((L0007,L002e));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0033));


        v2;
        v3;
        v4;
      
#L13cf20.   v0:= v5.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13cf24.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cf2a.   v1:= v5.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13cf2e.   v2:= v6.length;
#L13cf30.   if v2 >= v1 then goto L13cf58;
#L13cf34.   v2:= v5.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13cf38.   v3:= v5.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13cf3c.   call temp:=  [|java:lang:Object.getClass|](v6) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13cf42.   v4:= temp  @type object;
#L13cf44.   call temp:=  [|java:util:Arrays.copyOf|](v2, v3, v4) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L13cf4a.   v2:= temp  @type object;
#L13cf4c.   v2:= ([|java:lang:Object|][])v2;
#L13cf50.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cf56.   return v2  @type object;
#L13cf58.   v2:= v5.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13cf5c.   v3:= 0  @length 4;
#L13cf5e.   v4:= 0  @length 4;
#L13cf60.   call temp:=  [|java:lang:System.arraycopy|](v2, v3, v6, v4, v1) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L13cf66.   v2:= v6.length;
#L13cf68.   if v2 <= v1 then goto L13cf72;
#L13cf6c.   v2:= 0  @length 4;
#L13cf6e.   v6[v1]:= v2  @type object;
#L13cf72.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cf78.   v2:= v6  @type object;
#L13cf7a.   goto L13cf56;
#L13cf7c.   v2:= Exception  @type object;
#L13cf7e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cf84.   throw v2;
  catch  [|any|] @[L13cf2a..L13cf50] goto L13cf7c;
  catch  [|any|] @[L13cf58..L13cf72] goto L13cf7c;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:PriorityBlockingQueue.toString|] ([|java:util:concurrent:PriorityBlockingQueue|] v7 @type (this)) @owner [|java:util:concurrent:PriorityBlockingQueue|] @signature [|Ljava/util/concurrent/PriorityBlockingQueue;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L0020,L0024));
        [|int|] v1 @varname [|i|] @scope ((L001a,L0044));
        [|int|] v3 @varname [|n|] @scope ((L0007,L0044));
        [|java:lang:StringBuilder|] v4 @varname [|sb|] @scope ((L0014,L0044));
        [|java:util:concurrent:locks:ReentrantLock|] v2 @varname [|lock|] @scope ((L0002,L0049));

        v5;
        v6;
      
#L13cfac.   v2:= v7.[|java:util:concurrent:PriorityBlockingQueue.lock|]   @type object;
#L13cfb0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cfb6.   v3:= v7.[|java:util:concurrent:PriorityBlockingQueue.size|] ;
#L13cfba.   if v3 != 0 then goto L13cfca;
#L13cfbe.   v5:= "[]" @type (object, string);
#L13cfc2.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13cfc8.   return v5  @type object;
#L13cfca.   v4:= new [|java:lang:StringBuilder|];
#L13cfce.   call temp:=  [|java:lang:StringBuilder.<init>|](v4) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L13cfd4.   v5:= 91  @length 16;
#L13cfd8.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13cfde.   v1:= 0  @length 4;
#L13cfe0.   if v1 >= v3 then goto L13d01e;
#L13cfe4.   v5:= v7.[|java:util:concurrent:PriorityBlockingQueue.queue|]   @type object;
#L13cfe8.   v0:= v5[v1]  @type object;
#L13cfec.   if v0 != v7 then goto L13cff4;
#L13cff0.   v0:= "(this Collection)" @type (object, string);
#L13cff4.   call temp:=  [|java:lang:StringBuilder.append|](v4, v0) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13cffa.   v5:= v3 + -1;
#L13cffe.   if v1 == v5 then goto L13d018;
#L13d002.   v5:= 44  @length 16;
#L13d006.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13d00c.   v5:= temp  @type object;
#L13d00e.   v6:= 32  @length 16;
#L13d012.   call temp:=  [|java:lang:StringBuilder.append|](v5, v6) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13d018.   v1:= v1 + 1;
#L13d01c.   goto L13cfe0;
#L13d01e.   v5:= 93  @length 16;
#L13d022.   call temp:=  [|java:lang:StringBuilder.append|](v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13d028.   v5:= temp  @type object;
#L13d02a.   call temp:=  [|java:lang:StringBuilder.toString|](v5) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13d030.   v5:= temp  @type object;
#L13d032.   goto L13cfc2;
#L13d034.   v5:= Exception  @type object;
#L13d036.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d03c.   throw v5;
  catch  [|any|] @[L13cfb6..L13cfc2] goto L13d034;
  catch  [|any|] @[L13cfca..L13d030] goto L13d034;

   }
record [|java:util:concurrent:RecursiveTask|]  @type class @AccessFlag PUBLIC_ABSTRACT  extends [|java:util:concurrent:ForkJoinTask|] {
      [|java:lang:Object|] [|java:util:concurrent:RecursiveTask.result|]    @AccessFlag ;
   }
      global [|long|] @@[|java:util:concurrent:RecursiveTask.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:RecursiveTask.<init>|] ([|java:util:concurrent:RecursiveTask|] v0 @type (this)) @owner [|java:util:concurrent:RecursiveTask|] @signature [|Ljava/util/concurrent/RecursiveTask;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L13d064.   call temp:=  [|java:util:concurrent:ForkJoinTask.<init>|](v0) @signature [|Ljava/util/concurrent/ForkJoinTask;.<init>:()V|] @classDescriptor [|java:util:concurrent:ForkJoinTask|] @type direct;
#L13d06a.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:RecursiveTask.compute|] () @owner [|java:util:concurrent:RecursiveTask|] @signature [|Ljava/util/concurrent/RecursiveTask;.compute:()Ljava/lang/Object;|] @Access PROTECTED_ABSTRACT {
      # return;
   }
    procedure [|boolean|] [|java:util:concurrent:RecursiveTask.exec|] ([|java:util:concurrent:RecursiveTask|] v1 @type (this)) @owner [|java:util:concurrent:RecursiveTask|] @signature [|Ljava/util/concurrent/RecursiveTask;.exec:()Z|] @Access PROTECTED_FINAL {
      local temp ;


        v0;
      
#L13d07c.   call temp:=  [|java:util:concurrent:RecursiveTask.compute|](v1) @signature [|Ljava/util/concurrent/RecursiveTask;.compute:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:RecursiveTask|] @type virtual;
#L13d082.   v0:= temp  @type object;
#L13d084.   v1.[|java:util:concurrent:RecursiveTask.result|]  := v0 @type object;
#L13d088.   v0:= 1  @length 4;
#L13d08a.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:RecursiveTask.getRawResult|] ([|java:util:concurrent:RecursiveTask|] v1 @type (this)) @owner [|java:util:concurrent:RecursiveTask|] @signature [|Ljava/util/concurrent/RecursiveTask;.getRawResult:()Ljava/lang/Object;|] @Access PUBLIC_FINAL {
      local temp ;


        v0;
      
#L13d09c.   v0:= v1.[|java:util:concurrent:RecursiveTask.result|]   @type object;
#L13d0a0.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:RecursiveTask.setRawResult|] ([|java:util:concurrent:RecursiveTask|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:RecursiveTask|] @signature [|Ljava/util/concurrent/RecursiveTask;.setRawResult:(Ljava/lang/Object;)V|] @Access PROTECTED_FINAL {
      local temp ;



      
#L13d0b4.   v0.[|java:util:concurrent:RecursiveTask.result|]  := v1 @type object;
#L13d0b8.   return @void ;

   }
record [|java:util:concurrent:RejectedExecutionException|]  @type class @AccessFlag PUBLIC  extends [|java:lang:RuntimeException|] {
   }
      global [|long|] @@[|java:util:concurrent:RejectedExecutionException.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:RejectedExecutionException.<init>|] ([|java:util:concurrent:RejectedExecutionException|] v0 @type (this)) @owner [|java:util:concurrent:RejectedExecutionException|] @signature [|Ljava/util/concurrent/RejectedExecutionException;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;

      
#L13d0cc.   call temp:=  [|java:lang:RuntimeException.<init>|](v0) @signature [|Ljava/lang/RuntimeException;.<init>:()V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L13d0d2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:RejectedExecutionException.<init>|] ([|java:util:concurrent:RejectedExecutionException|] v0 @type (this), [|java:lang:String|] v1 @type (object)) @owner [|java:util:concurrent:RejectedExecutionException|] @signature [|Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L13d0e4.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L13d0ea.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:RejectedExecutionException.<init>|] ([|java:util:concurrent:RejectedExecutionException|] v0 @type (this), [|java:lang:String|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:util:concurrent:RejectedExecutionException|] @signature [|Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



      
#L13d0fc.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1, v2) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L13d102.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:RejectedExecutionException.<init>|] ([|java:util:concurrent:RejectedExecutionException|] v0 @type (this), [|java:lang:Throwable|] v1 @type (object)) @owner [|java:util:concurrent:RejectedExecutionException|] @signature [|Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/Throwable;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


      
#L13d114.   call temp:=  [|java:lang:RuntimeException.<init>|](v0, v1) @signature [|Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:RuntimeException|] @type direct;
#L13d11a.   return @void ;

   }
record [|java:util:concurrent:RejectedExecutionHandler|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT  {
   }
    procedure [|void|] [|java:util:concurrent:RejectedExecutionHandler.rejectedExecution|] ([|java:lang:Runnable|] v0 @type (object), [|java:util:concurrent:ThreadPoolExecutor|] v1 @type (object)) @owner [|java:util:concurrent:RejectedExecutionHandler|] @signature [|Ljava/util/concurrent/RejectedExecutionHandler;.rejectedExecution:(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ScheduledFuture|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:concurrent:Delayed|], [|java:util:concurrent:Future|] {
   }
record [|java:util:concurrent:RunnableScheduledFuture|]  @type interface @AccessFlag PUBLIC_INTERFACE_ABSTRACT extends  [|java:util:concurrent:RunnableFuture|], [|java:util:concurrent:ScheduledFuture|] {
   }
    procedure [|boolean|] [|java:util:concurrent:RunnableScheduledFuture.isPeriodic|] () @owner [|java:util:concurrent:RunnableScheduledFuture|] @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.isPeriodic:()Z|] @Access PUBLIC_ABSTRACT {
      # return;
   }
record [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
      [|java:util:concurrent:RunnableScheduledFuture|][] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.array|]    @AccessFlag FINAL;
      [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.cursor|]    @AccessFlag ;
      [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.lastRet|]    @AccessFlag ;
      [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.this$0|]    @AccessFlag FINAL_SYNTHETIC;
   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.<init>|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] v1 @type (this), [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v2 @type (object), [|java:util:concurrent:RunnableScheduledFuture|][] v3 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;.<init>:(Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;[Ljava/util/concurrent/RunnableScheduledFuture;)V|] @Access CONSTRUCTOR {
      local temp ;


        v0;
      
#L13d12c.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.this$0|]  := v2 @type object;
#L13d130.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13d136.   v0:= 0  @length 4;
#L13d138.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.cursor|]  := v0;
#L13d13c.   v0:= -1  @length 4;
#L13d13e.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.lastRet|]  := v0;
#L13d142.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.array|]  := v3 @type object;
#L13d146.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] v2 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;.hasNext:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L13d158.   v0:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.cursor|] ;
#L13d15c.   v1:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.array|]   @type object;
#L13d160.   v1:= v1.length;
#L13d162.   if v0 >= v1 then goto L13d16a;
#L13d166.   v0:= 1  @length 4;
#L13d168.   return v0;
#L13d16a.   v0:= 0  @length 4;
#L13d16c.   goto L13d168;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;.next:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;

        v0;
      
#L13d180.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;.next:()Ljava/lang/Runnable;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] @type virtual;
#L13d186.   v0:= temp  @type object;
#L13d188.   return v0  @type object;

   }
    procedure [|java:lang:Runnable|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;.next:()Ljava/lang/Runnable;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L13d19c.   v0:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.cursor|] ;
#L13d1a0.   v1:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.array|]   @type object;
#L13d1a4.   v1:= v1.length;
#L13d1a6.   if v0 < v1 then goto L13d1b6;
#L13d1aa.   v0:= new [|java:util:NoSuchElementException|];
#L13d1ae.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L13d1b4.   throw v0;
#L13d1b6.   v0:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.cursor|] ;
#L13d1ba.   v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.lastRet|]  := v0;
#L13d1be.   v0:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.array|]   @type object;
#L13d1c2.   v1:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.cursor|] ;
#L13d1c6.   v2:= v1 + 1;
#L13d1ca.   v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.cursor|]  := v2;
#L13d1ce.   v0:= v0[v1]  @type object;
#L13d1d2.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.remove|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] v3 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;.remove:()V|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L13d1e4.   v0:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.lastRet|] ;
#L13d1e8.   if v0 >= 0 then goto L13d1f8;
#L13d1ec.   v0:= new [|java:lang:IllegalStateException|];
#L13d1f0.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L13d1f6.   throw v0;
#L13d1f8.   v0:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.this$0|]   @type object;
#L13d1fc.   v1:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.array|]   @type object;
#L13d200.   v2:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.lastRet|] ;
#L13d204.   v1:= v1[v2]  @type object;
#L13d208.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.remove|](v0, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d20e.   v0:= -1  @length 4;
#L13d210.   v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.lastRet|]  := v0;
#L13d214.   return @void ;

   }
record [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|]  @type class @AccessFlag   extends [|java:util:AbstractQueue|], [|java:util:concurrent:BlockingQueue|] {
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]    @AccessFlag PRIVATE_FINAL;
      [|java:lang:Thread|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:RunnableScheduledFuture|][] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.INITIAL_CAPACITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.<init>|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

        v0;
      
#L13d228.   call temp:=  [|java:util:AbstractQueue.<init>|](v1) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L13d22e.   v0:= 16  @length 16;
#L13d232.   v0:= new [|java:util:concurrent:RunnableScheduledFuture|][v0];
#L13d236.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]  := v0 @type object;
#L13d23a.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L13d23e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L13d244.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]  := v0 @type object;
#L13d248.   v0:= 0  @length 4;
#L13d24a.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|]  := v0;
#L13d24e.   v0:= 0  @length 4;
#L13d250.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]  := v0 @type object;
#L13d254.   v0:= v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13d258.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d25e.   v0:= temp  @type object;
#L13d260.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]  := v0 @type object;
#L13d264.   return @void ;

   }
    procedure [|java:util:concurrent:RunnableScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.finishPoll|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v4 @type (this), [|java:util:concurrent:RunnableScheduledFuture|] v5 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.finishPoll:(Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|s|] @scope ((L0006,L001a));
        [|java:util:concurrent:RunnableScheduledFuture|] v1 @varname [|x|] @scope ((L000a,L001a));


        v2;
        v3;
      
#L13d278.   v2:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13d27c.   v0:= v2 + -1;
#L13d280.   v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|]  := v0;
#L13d284.   v2:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d288.   v1:= v2[v0]  @type object;
#L13d28c.   v2:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d290.   v3:= 0  @length 4;
#L13d292.   v2[v0]:= v3  @type object;
#L13d296.   if v0 == 0 then goto L13d2a2;
#L13d29a.   v2:= 0  @length 4;
#L13d29c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown|](v4, v2, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.siftDown:(ILjava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d2a2.   v2:= -1  @length 4;
#L13d2a4.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex|](v4, v5, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.setIndex:(Ljava/util/concurrent/RunnableScheduledFuture;I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d2aa.   return v5  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.grow|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v3 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.grow:()V|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|newCapacity|] @scope ((L0007,L0017));
        [|int|] v1 @varname [|oldCapacity|] @scope ((L0003,L0017));

        v2;
      
#L13d2bc.   v2:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d2c0.   v1:= v2.length;
#L13d2c2.   v2:= v1 ^> 1;
#L13d2c6.   v0:= v1 + v2  @type int;
#L13d2ca.   if v0 >= 0 then goto L13d2d4;
#L13d2ce.    v0:= nan;
#L13d2d4.   v2:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d2d8.   call temp:=  [|java:util:Arrays.copyOf|](v2, v0) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L13d2de.   v2:= temp  @type object;
#L13d2e0.   v2:= ([|java:util:concurrent:RunnableScheduledFuture|][])v2;
#L13d2e4.   v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]  := v2 @type object;
#L13d2e8.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.indexOf|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v2 @type (this), [|java:lang:Object|] v3 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.indexOf:(Ljava/lang/Object;)I|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L000b,L0017), (L0019,L002a));


        v1;
      
#L13d2fc.   if v3 == 0 then goto L13d350;
#L13d300.   v1:= instanceof @varname v3 @type [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|];
#L13d304.   if v1 == 0 then goto L13d32c;
#L13d308.   v1:= v3  @type object;
#L13d30a.   v1:= ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|])v1;
#L13d30e.   v0:= v1.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.heapIndex|] ;
#L13d312.   if v0 < 0 then goto L13d350;
#L13d316.   v1:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13d31a.   if v0 >= v1 then goto L13d350;
#L13d31e.   v1:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d322.   v1:= v1[v0]  @type object;
#L13d326.   if v1 != v3 then goto L13d350;
#L13d32a.   return v0;
#L13d32c.   v0:= 0  @length 4;
#L13d32e.   v1:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13d332.   if v0 >= v1 then goto L13d350;
#L13d336.   v1:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d33a.   v1:= v1[v0]  @type object;
#L13d33e.   call temp:=  [|java:lang:Object.equals|](v3, v1) @signature [|Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13d344.   v1:= temp;
#L13d346.   if v1 != 0 then goto L13d32a;
#L13d34a.   v0:= v0 + 1;
#L13d34e.   goto L13d32e;
#L13d350.   v0:= -1  @length 4;
#L13d352.   goto L13d32a;

   }
    procedure [|java:util:concurrent:RunnableScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.peekExpired|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v5 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.peekExpired:()Ljava/util/concurrent/RunnableScheduledFuture;|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v0 @varname [|first|] @scope ((L0005,L0014));

        v1;
        v2;
        v3;
        v4;
      
#L13d364.   v1:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d368.   v2:= 0  @length 4;
#L13d36a.   v0:= v1[v2]  @type object;
#L13d36e.   if v0 == 0 then goto L13d38a;
#L13d372.   v1:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13d376.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.getDelay|](v0, v1) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13d37c.   v1:= temp  @type wide;
#L13d37e.   v3:= 0  @length wide16;
#L13d382.   v1:= cmp(v1,v3);
#L13d386.   if v1 <= 0 then goto L13d38c;
#L13d38a.   v0:= 0  @length 4;
#L13d38c.   return v0  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this), [|java:util:concurrent:RunnableScheduledFuture|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.setIndex:(Ljava/util/concurrent/RunnableScheduledFuture;I)V|] @Access PRIVATE {
      local temp ;



        v0;
      
#L13d3a0.   v0:= instanceof @varname v2 @type [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|];
#L13d3a4.   if v0 == 0 then goto L13d3b0;
#L13d3a8.   v2:= ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|])v2;
#L13d3ac.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.heapIndex|]  := v3;
#L13d3b0.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v5 @type (this), [|int|] v6, [|java:util:concurrent:RunnableScheduledFuture|] v7 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.siftDown:(ILjava/util/concurrent/RunnableScheduledFuture;)V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v0 @varname [|c|] @scope ((L000e,L0029), (L0031,L003a));
        [|int|] v1 @varname [|child|] @scope ((L000a,L0029), (L0031,L003a));
        [|int|] v3 @varname [|right|] @scope ((L0010,L0029), (L0031,L003a));
        [|int|] v2 @varname [|half|] @scope ((L0004,L003a));



        v4;
      
#L13d3c4.   v4:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13d3c8.   v2:= v4 ^>> 1;
#L13d3cc.   if v6 >= v2 then goto L13d416;
#L13d3d0.   v4:= v6 ^< 1;
#L13d3d4.   v1:= v4 + 1;
#L13d3d8.   v4:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d3dc.   v0:= v4[v1]  @type object;
#L13d3e0.   v3:= v1 + 1;
#L13d3e4.   v4:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13d3e8.   if v3 >= v4 then goto L13d40a;
#L13d3ec.   v4:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d3f0.   v4:= v4[v3]  @type object;
#L13d3f4.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.compareTo|](v0, v4) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13d3fa.   v4:= temp;
#L13d3fc.   if v4 <= 0 then goto L13d40a;
#L13d400.   v4:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d404.   v1:= v3;
#L13d406.   v0:= v4[v3]  @type object;
#L13d40a.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.compareTo|](v7, v0) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13d410.   v4:= temp;
#L13d412.   if v4 > 0 then goto L13d426;
#L13d416.   v4:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d41a.   v4[v6]:= v7  @type object;
#L13d41e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex|](v5, v7, v6) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.setIndex:(Ljava/util/concurrent/RunnableScheduledFuture;I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d424.   return @void ;
#L13d426.   v4:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d42a.   v4[v6]:= v0  @type object;
#L13d42e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex|](v5, v0, v6) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.setIndex:(Ljava/util/concurrent/RunnableScheduledFuture;I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d434.   v6:= v1;
#L13d436.   goto L13d3cc;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.siftUp|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v3 @type (this), [|int|] v4, [|java:util:concurrent:RunnableScheduledFuture|] v5 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.siftUp:(ILjava/util/concurrent/RunnableScheduledFuture;)V|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v0 @varname [|e|] @scope ((L000a,L0010), (L0018,L0021));
        [|int|] v1 @varname [|parent|] @scope ((L0006,L0010), (L0018,L0021));



        v2;
      
#L13d448.   if v4 <= 0 then goto L13d468;
#L13d44c.   v2:= v4 + -1;
#L13d450.   v1:= v2 ^>> 1;
#L13d454.   v2:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d458.   v0:= v2[v1]  @type object;
#L13d45c.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.compareTo|](v5, v0) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.compareTo:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13d462.   v2:= temp;
#L13d464.   if v2 < 0 then goto L13d478;
#L13d468.   v2:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d46c.   v2[v4]:= v5  @type object;
#L13d470.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex|](v3, v5, v4) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.setIndex:(Ljava/util/concurrent/RunnableScheduledFuture;I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d476.   return @void ;
#L13d478.   v2:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d47c.   v2[v4]:= v0  @type object;
#L13d480.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex|](v3, v0, v4) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.setIndex:(Ljava/util/concurrent/RunnableScheduledFuture;I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d486.   v4:= v1;
#L13d488.   goto L13d448;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.add|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.add:(Ljava/lang/Object;)Z|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L13d49c.   v2:= ([|java:lang:Runnable|])v2;
#L13d4a0.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.add|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.add:(Ljava/lang/Runnable;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d4a6.   v0:= temp;
#L13d4a8.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.add|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.add:(Ljava/lang/Runnable;)Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13d4bc.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.offer|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.offer:(Ljava/lang/Runnable;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d4c2.   v0:= temp;
#L13d4c4.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.clear|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v5 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.clear:()V|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v2 @varname [|t|] @scope ((L000e,L001c));
        [|int|] v0 @varname [|i|] @scope ((L0006,L0028));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0002,L0028));

        v3;
        v4;
      
#L13d4d8.   v1:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13d4dc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d4e2.   v0:= 0  @length 4;
#L13d4e4.   v3:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13d4e8.   if v0 >= v3 then goto L13d510;
#L13d4ec.   v3:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d4f0.   v2:= v3[v0]  @type object;
#L13d4f4.   if v2 == 0 then goto L13d50a;
#L13d4f8.   v3:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d4fc.   v4:= 0  @length 4;
#L13d4fe.   v3[v0]:= v4  @type object;
#L13d502.   v3:= -1  @length 4;
#L13d504.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex|](v5, v2, v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.setIndex:(Ljava/util/concurrent/RunnableScheduledFuture;I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d50a.   v0:= v0 + 1;
#L13d50e.   goto L13d4e4;
#L13d510.   v3:= 0  @length 4;
#L13d512.   v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|]  := v3;
#L13d516.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d51c.   return @void ;
#L13d51e.   v3:= Exception  @type object;
#L13d520.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d526.   throw v3;
  catch  [|any|] @[L13d4e4..L13d516] goto L13d51e;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.contains|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v3 @type (this), [|java:lang:Object|] v4 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0018));


        v1;
        v2;
      
#L13d544.   v0:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13d548.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d54e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.indexOf|](v3, v4) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d554.   v1:= temp;
#L13d556.   v2:= -1  @length 4;
#L13d558.   if v1 == v2 then goto L13d566;
#L13d55c.   v1:= 1  @length 4;
#L13d55e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d564.   return v1;
#L13d566.   v1:= 0  @length 4;
#L13d568.   goto L13d55e;
#L13d56a.   v1:= Exception  @type object;
#L13d56c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d572.   throw v1;
  catch  [|any|] @[L13d54e..L13d554] goto L13d56a;

   }
    procedure [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.drainTo|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v4 @type (this), [|java:util:Collection|] v5 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.drainTo:(Ljava/util/Collection;)I|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v0 @varname [|first|] @scope ((L001a,L0025), (L002a,L002e));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0012,L002e));
        [|int|] v2 @varname [|n|] @scope ((L0016,L002e));


        v3;
      
#L13d590.   if v5 != 0 then goto L13d5a0;
#L13d594.   v3:= new [|java:lang:NullPointerException|];
#L13d598.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13d59e.   throw v3;
#L13d5a0.   if v5 != v4 then goto L13d5b0;
#L13d5a4.   v3:= new [|java:lang:IllegalArgumentException|];
#L13d5a8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13d5ae.   throw v3;
#L13d5b0.   v1:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13d5b4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d5ba.   v2:= 0  @length 4;
#L13d5bc.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.peekExpired|](v4) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.peekExpired:()Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d5c2.   v0:= temp  @type object;
#L13d5c4.   if v0 == 0 then goto L13d5e4;
#L13d5c8.   call temp:=  [|java:util:Collection.add|](v5, v0) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L13d5ce.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.finishPoll|](v4, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.finishPoll:(Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d5d4.   v2:= v2 + 1;
#L13d5d8.   goto L13d5bc;
#L13d5da.   v3:= Exception  @type object;
#L13d5dc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d5e2.   throw v3;
#L13d5e4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d5ea.   return v2;
  catch  [|any|] @[L13d5bc..L13d5d4] goto L13d5da;

   }
    procedure [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.drainTo|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v4 @type (this), [|java:util:Collection|] v5 @type (object), [|int|] v6) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.drainTo:(Ljava/util/Collection;I)I|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v0 @varname [|first|] @scope ((L0020,L002b));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0016,L0034));
        [|int|] v2 @varname [|n|] @scope ((L001a,L0034));



        v3;
      
#L13d608.   if v5 != 0 then goto L13d618;
#L13d60c.   v3:= new [|java:lang:NullPointerException|];
#L13d610.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13d616.   throw v3;
#L13d618.   if v5 != v4 then goto L13d628;
#L13d61c.   v3:= new [|java:lang:IllegalArgumentException|];
#L13d620.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13d626.   throw v3;
#L13d628.   if v6 > 0 then goto L13d630;
#L13d62c.   v2:= 0  @length 4;
#L13d62e.   return v2;
#L13d630.   v1:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13d634.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d63a.   v2:= 0  @length 4;
#L13d63c.   if v2 >= v6 then goto L13d668;
#L13d640.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.peekExpired|](v4) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.peekExpired:()Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d646.   v0:= temp  @type object;
#L13d648.   if v0 == 0 then goto L13d668;
#L13d64c.   call temp:=  [|java:util:Collection.add|](v5, v0) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L13d652.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.finishPoll|](v4, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.finishPoll:(Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d658.   v2:= v2 + 1;
#L13d65c.   goto L13d63c;
#L13d65e.   v3:= Exception  @type object;
#L13d660.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d666.   throw v3;
#L13d668.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d66e.   goto L13d62e;
  catch  [|any|] @[L13d640..L13d658] goto L13d65e;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.isEmpty|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13d68c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.size:()I|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d692.   v0:= temp;
#L13d694.   if v0 != 0 then goto L13d69c;
#L13d698.   v0:= 1  @length 4;
#L13d69a.   return v0;
#L13d69c.   v0:= 0  @length 4;
#L13d69e.   goto L13d69a;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.iterator|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v3 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L13d6b0.   v1:= new [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|];
#L13d6b4.   v0:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d6b8.   v2:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13d6bc.   call temp:=  [|java:util:Arrays.copyOf|](v0, v2) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L13d6c2.   v0:= temp  @type object;
#L13d6c4.   v0:= ([|java:util:concurrent:RunnableScheduledFuture|][])v0;
#L13d6c8.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.<init>|](v1, v3, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr;.<init>:(Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;[Ljava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr|] @type direct;
#L13d6ce.   return v1  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.offer|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


        v0;
      
#L13d6e0.   v2:= ([|java:lang:Runnable|])v2;
#L13d6e4.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.offer|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.offer:(Ljava/lang/Runnable;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d6ea.   v0:= temp;
#L13d6ec.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.offer|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;




        v0;
      
#L13d700.   v2:= ([|java:lang:Runnable|])v2;
#L13d704.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.offer|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.offer:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d70a.   v0:= temp;
#L13d70c.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.offer|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v5 @type (this), [|java:lang:Runnable|] v6 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.offer:(Ljava/lang/Runnable;)Z|] @Access PUBLIC {
      local temp ;
        [|int|] v1 @varname [|i|] @scope ((L0012,L0041));
        [|java:util:concurrent:RunnableScheduledFuture|] v0 @varname [|e|] @scope ((L000b,L0046));
        [|java:util:concurrent:locks:ReentrantLock|] v2 @varname [|lock|] @scope ((L000d,L0046));


        v3;
        v4;
      
#L13d720.   if v6 != 0 then goto L13d730;
#L13d724.   v3:= new [|java:lang:NullPointerException|];
#L13d728.   call temp:=  [|java:lang:NullPointerException.<init>|](v3) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13d72e.   throw v3;
#L13d730.   v0:= v6  @type object;
#L13d732.   v0:= ([|java:util:concurrent:RunnableScheduledFuture|])v0;
#L13d736.   v2:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13d73a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d740.   v1:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13d744.   v3:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d748.   v3:= v3.length;
#L13d74a.   if v1 < v3 then goto L13d754;
#L13d74e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.grow|](v5) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.grow:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d754.   v3:= v1 + 1;
#L13d758.   v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|]  := v3;
#L13d75c.   if v1 != 0 then goto L13d79a;
#L13d760.   v3:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d764.   v4:= 0  @length 4;
#L13d766.   v3[v4]:= v0  @type object;
#L13d76a.   v3:= 0  @length 4;
#L13d76c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex|](v5, v0, v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.setIndex:(Ljava/util/concurrent/RunnableScheduledFuture;I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d772.   v3:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d776.   v4:= 0  @length 4;
#L13d778.   v3:= v3[v4]  @type object;
#L13d77c.   if v3 != v0 then goto L13d790;
#L13d780.   v3:= 0  @length 4;
#L13d782.   v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]  := v3 @type object;
#L13d786.   v3:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13d78a.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v3) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13d790.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d796.   v3:= 1  @length 4;
#L13d798.   return v3;
#L13d79a.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.siftUp|](v5, v1, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.siftUp:(ILjava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d7a0.   goto L13d772;
#L13d7a2.   v3:= Exception  @type object;
#L13d7a4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d7aa.   throw v3;
  catch  [|any|] @[L13d740..L13d790] goto L13d7a2;
  catch  [|any|] @[L13d79a..L13d7a0] goto L13d7a2;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.offer|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object), [|long|] v3, [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.offer:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;




        v0;
      
#L13d7d0.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.offer|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.offer:(Ljava/lang/Runnable;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d7d6.   v0:= temp;
#L13d7d8.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.peek|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.peek:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;

        v0;
      
#L13d7ec.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.peek|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.peek:()Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d7f2.   v0:= temp  @type object;
#L13d7f4.   return v0  @type object;

   }
    procedure [|java:util:concurrent:RunnableScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.peek|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v3 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.peek:()Ljava/util/concurrent/RunnableScheduledFuture;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0013));

        v1;
        v2;
      
#L13d808.   v0:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13d80c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d812.   v1:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d816.   v2:= 0  @length 4;
#L13d818.   v1:= v1[v2]  @type object;
#L13d81c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d822.   return v1  @type object;
#L13d824.   v1:= Exception  @type object;
#L13d826.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d82c.   throw v1;
  catch  [|any|] @[L13d812..L13d81c] goto L13d824;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.poll|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.poll:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;

        v0;
      
#L13d84c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.poll|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.poll:()Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d852.   v0:= temp  @type object;
#L13d854.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.poll|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this), [|long|] v2, [|java:util:concurrent:TimeUnit|] v4 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



        v0;
      
#L13d868.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.poll|](v1, v2, v3, v4) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13d86e.   v0:= temp  @type object;
#L13d870.   return v0  @type object;

   }
    procedure [|java:util:concurrent:RunnableScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.poll|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v6 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.poll:()Ljava/util/concurrent/RunnableScheduledFuture;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v0 @varname [|first|] @scope ((L000a,L0022));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0002,L0027));

        v2;
        v3;
        v4;
        v5;
      
#L13d884.   v1:= v6.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13d888.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d88e.   v2:= v6.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d892.   v3:= 0  @length 4;
#L13d894.   v0:= v2[v3]  @type object;
#L13d898.   if v0 == 0 then goto L13d8b4;
#L13d89c.   v2:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13d8a0.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.getDelay|](v0, v2) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13d8a6.   v2:= temp  @type wide;
#L13d8a8.   v4:= 0  @length wide16;
#L13d8ac.   v2:= cmp(v2,v4);
#L13d8b0.   if v2 <= 0 then goto L13d8be;
#L13d8b4.   v2:= 0  @length 4;
#L13d8b6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d8bc.   return v2  @type object;
#L13d8be.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.finishPoll|](v6, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.finishPoll:(Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d8c4.   v2:= temp  @type object;
#L13d8c6.   goto L13d8b6;
#L13d8c8.   v2:= Exception  @type object;
#L13d8ca.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d8d0.   throw v2;
  catch  [|any|] @[L13d88e..L13d8a6] goto L13d8c8;
  catch  [|any|] @[L13d8be..L13d8c4] goto L13d8c8;

   }
    procedure [|java:util:concurrent:RunnableScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.poll|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v12 @type (this), [|long|] v13, [|java:util:concurrent:TimeUnit|] v15 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/RunnableScheduledFuture;|] @Access PUBLIC {
      local temp ;
        [|long|] v0 @varname [|delay|] @scope ((L0038,L0092), (L00a7,L00b0));
        [|java:util:concurrent:RunnableScheduledFuture|] v2 @varname [|first|] @scope ((L000e,L0092), (L00a7,L00b0));
        [|java:lang:Thread|] v6 @varname [|thisThread|] @scope ((L007e,L0092), (L00a7,L00b0));
        [|long|] v7 @varname [|timeLeft|] @scope ((L0086,L0092));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|lock|] @scope ((L0006,L00b0));
        [|long|] v4 @varname [|nanos|] @scope ((L0004,L00b0));



        v1;
        v5;
        v8;
        v9;
        v10;
        v11;
      
#L13d8f8.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v15, v13, v14) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13d8fe.   v4:= temp  @type wide;
#L13d900.   v3:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13d904.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d90a.   v9:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d90e.   v10:= 0  @length 4;
#L13d910.   v2:= v9[v10]  @type object;
#L13d914.   if v2 != 0 then goto L13d95c;
#L13d918.   v9:= 0  @length wide16;
#L13d91c.   v9:= cmp(v4,v9);
#L13d920.   if v9 > 0 then goto L13d94e;
#L13d924.   v9:= 0  @length 4;
#L13d926.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13d92a.   if v10 != 0 then goto L13d946;
#L13d92e.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d932.   v11:= 0  @length 4;
#L13d934.   v10:= v10[v11]  @type object;
#L13d938.   if v10 == 0 then goto L13d946;
#L13d93c.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13d940.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v10) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13d946.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13d94c.   return v9  @type object;
#L13d94e.   v9:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13d952.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v9, v4, v5) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13d958.   v4:= temp  @type wide;
#L13d95a.   goto L13d90a;
#L13d95c.   v9:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13d960.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.getDelay|](v2, v9) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13d966.   v0:= temp  @type wide;
#L13d968.   v9:= 0  @length wide16;
#L13d96c.   v9:= cmp(v0,v9);
#L13d970.   if v9 > 0 then goto L13d99e;
#L13d974.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.finishPoll|](v12, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.finishPoll:(Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13d97a.   v9:= temp  @type object;
#L13d97c.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13d980.   if v10 != 0 then goto L13d946;
#L13d984.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d988.   v11:= 0  @length 4;
#L13d98a.   v10:= v10[v11]  @type object;
#L13d98e.   if v10 == 0 then goto L13d946;
#L13d992.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13d996.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v10) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13d99c.   goto L13d946;
#L13d99e.   v9:= 0  @length wide16;
#L13d9a2.   v9:= cmp(v4,v9);
#L13d9a6.   if v9 > 0 then goto L13d9ce;
#L13d9aa.   v9:= 0  @length 4;
#L13d9ac.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13d9b0.   if v10 != 0 then goto L13d946;
#L13d9b4.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13d9b8.   v11:= 0  @length 4;
#L13d9ba.   v10:= v10[v11]  @type object;
#L13d9be.   if v10 == 0 then goto L13d946;
#L13d9c2.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13d9c6.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v10) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13d9cc.   goto L13d946;
#L13d9ce.   v9:= cmp(v4,v0);
#L13d9d2.   if v9 < 0 then goto L13d9de;
#L13d9d6.   v9:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13d9da.   if v9 == 0 then goto L13d9ec;
#L13d9de.   v9:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13d9e2.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v9, v4, v5) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13d9e8.   v4:= temp  @type wide;
#L13d9ea.   goto L13d90a;
#L13d9ec.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13d9f2.   v6:= temp  @type object;
#L13d9f4.   v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]  := v6 @type object;
#L13d9f8.   v9:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13d9fc.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v9, v0, v1) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13da02.   v7:= temp  @type wide;
#L13da04.   v9:= v0 - v7  @type long;
#L13da08.   v4:= v4 - v9  @type long;
#L13da0a.   v9:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13da0e.   if v9 != v6 then goto L13d90a;
#L13da12.   v9:= 0  @length 4;
#L13da14.   v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]  := v9 @type object;
#L13da18.   goto L13d90a;
#L13da1c.   v9:= Exception  @type object;
#L13da1e.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13da22.   if v10 != 0 then goto L13da3e;
#L13da26.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13da2a.   v11:= 0  @length 4;
#L13da2c.   v10:= v10[v11]  @type object;
#L13da30.   if v10 == 0 then goto L13da3e;
#L13da34.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13da38.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v10) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13da3e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13da44.   throw v9;
#L13da46.   v9:= Exception  @type object;
#L13da48.   v10:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13da4c.   if v10 != v6 then goto L13da56;
#L13da50.   v10:= 0  @length 4;
#L13da52.   v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]  := v10 @type object;
#L13da56.   throw v9;
  catch  [|any|] @[L13d90a..L13d914] goto L13da1c;
  catch  [|any|] @[L13d94e..L13d97a] goto L13da1c;
  catch  [|any|] @[L13d9d6..L13d9f8] goto L13da1c;
  catch  [|any|] @[L13d9f8..L13da02] goto L13da46;
  catch  [|any|] @[L13da0a..L13da18] goto L13da1c;
  catch  [|any|] @[L13da48..L13da56] goto L13da1c;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.put|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.put:(Ljava/lang/Object;)V|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;


      
#L13daa0.   v1:= ([|java:lang:Runnable|])v1;
#L13daa4.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.put|](v0, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.put:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13daaa.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.put|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v0 @type (this), [|java:lang:Runnable|] v1 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.put:(Ljava/lang/Runnable;)V|] @Access PUBLIC {
      local temp ;


      
#L13dabc.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.offer|](v0, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.offer:(Ljava/lang/Runnable;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13dac2.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.remainingCapacity|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.remainingCapacity:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13dad4.    v0:= nan;
#L13dada.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.remove|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|i|] @scope ((L0009,L0037));
        [|java:util:concurrent:RunnableScheduledFuture|] v2 @varname [|replacement|] @scope ((L0022,L0037));
        [|int|] v3 @varname [|s|] @scope ((L001e,L0037));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|lock|] @scope ((L0002,L003c));


        v4;
        v5;
      
#L13daec.   v1:= v6.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13daf0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13daf6.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.indexOf|](v6, v7) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.indexOf:(Ljava/lang/Object;)I|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13dafc.   v0:= temp;
#L13dafe.   if v0 >= 0 then goto L13db0c;
#L13db02.   v4:= 0  @length 4;
#L13db04.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13db0a.   return v4;
#L13db0c.   v4:= v6.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13db10.   v4:= v4[v0]  @type object;
#L13db14.   v5:= -1  @length 4;
#L13db16.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex|](v6, v4, v5) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.setIndex:(Ljava/util/concurrent/RunnableScheduledFuture;I)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13db1c.   v4:= v6.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13db20.   v3:= v4 + -1;
#L13db24.   v6.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|]  := v3;
#L13db28.   v4:= v6.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13db2c.   v2:= v4[v3]  @type object;
#L13db30.   v4:= v6.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13db34.   v5:= 0  @length 4;
#L13db36.   v4[v3]:= v5  @type object;
#L13db3a.   if v3 == v0 then goto L13db56;
#L13db3e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown|](v6, v0, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.siftDown:(ILjava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13db44.   v4:= v6.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13db48.   v4:= v4[v0]  @type object;
#L13db4c.   if v4 != v2 then goto L13db56;
#L13db50.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.siftUp|](v6, v0, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.siftUp:(ILjava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13db56.   v4:= 1  @length 4;
#L13db58.   goto L13db04;
#L13db5a.   v4:= Exception  @type object;
#L13db5c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13db62.   throw v4;
  catch  [|any|] @[L13daf6..L13dafc] goto L13db5a;
  catch  [|any|] @[L13db0c..L13db56] goto L13db5a;

   }
    procedure [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v2 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.size:()I|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0010));

        v1;
      
#L13db88.   v0:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13db8c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13db92.   v1:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13db96.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13db9c.   return v1;
#L13db9e.   v1:= Exception  @type object;
#L13dba0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13dba6.   throw v1;
  catch  [|any|] @[L13db92..L13db96] goto L13db9e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.take|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.take:()Ljava/lang/Object;|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;

        v0;
      
#L13dbc4.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.take|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.take:()Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type virtual;
#L13dbca.   v0:= temp  @type object;
#L13dbcc.   return v0  @type object;

   }
    procedure [|java:util:concurrent:RunnableScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.take|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v8 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.take:()Ljava/util/concurrent/RunnableScheduledFuture;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v2 @varname [|first|] @scope ((L000b,L0013), (L0027,L0070));
        [|long|] v0 @varname [|delay|] @scope ((L002d,L0070));
        [|java:util:concurrent:locks:ReentrantLock|] v3 @varname [|lock|] @scope ((L0003,L0070));
        [|java:lang:Thread|] v4 @varname [|thisThread|] @scope ((L0058,L0070));

        v1;
        v5;
        v6;
        v7;
      
#L13dbe0.   v7:= 0  @length 4;
#L13dbe2.   v3:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13dbe6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lockInterruptibly|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lockInterruptibly:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13dbec.   v5:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13dbf0.   v6:= 0  @length 4;
#L13dbf2.   v2:= v5[v6]  @type object;
#L13dbf6.   if v2 != 0 then goto L13dc2e;
#L13dbfa.   v5:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13dbfe.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v5) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13dc04.   goto L13dbec;
#L13dc06.   v5:= Exception  @type object;
#L13dc08.   v6:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13dc0c.   if v6 != 0 then goto L13dc26;
#L13dc10.   v6:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13dc14.   v6:= v6[v7]  @type object;
#L13dc18.   if v6 == 0 then goto L13dc26;
#L13dc1c.   v6:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13dc20.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v6) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13dc26.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13dc2c.   throw v5;
#L13dc2e.   v5:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13dc32.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.getDelay|](v2, v5) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13dc38.   v0:= temp  @type wide;
#L13dc3a.   v5:= 0  @length wide16;
#L13dc3e.   v5:= cmp(v0,v5);
#L13dc42.   if v5 > 0 then goto L13dc74;
#L13dc46.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.finishPoll|](v8, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.finishPoll:(Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13dc4c.   v5:= temp  @type object;
#L13dc4e.   v6:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13dc52.   if v6 != 0 then goto L13dc6c;
#L13dc56.   v6:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13dc5a.   v6:= v6[v7]  @type object;
#L13dc5e.   if v6 == 0 then goto L13dc6c;
#L13dc62.   v6:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13dc66.   call temp:=  [|java:util:concurrent:locks:Condition.signal|](v6) @signature [|Ljava/util/concurrent/locks/Condition;.signal:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13dc6c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v3) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13dc72.   return v5  @type object;
#L13dc74.   v5:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13dc78.   if v5 == 0 then goto L13dc88;
#L13dc7c.   v5:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13dc80.   call temp:=  [|java:util:concurrent:locks:Condition.await|](v5) @signature [|Ljava/util/concurrent/locks/Condition;.await:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13dc86.   goto L13dbec;
#L13dc88.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13dc8e.   v4:= temp  @type object;
#L13dc90.   v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]  := v4 @type object;
#L13dc94.   v5:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.available|]   @type object;
#L13dc98.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v5, v0, v1) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13dc9e.   v5:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13dca2.   if v5 != v4 then goto L13dbec;
#L13dca6.   v5:= 0  @length 4;
#L13dca8.   v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]  := v5 @type object;
#L13dcac.   goto L13dbec;
#L13dcae.   v5:= Exception  @type object;
#L13dcb0.   v6:= v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]   @type object;
#L13dcb4.   if v6 != v4 then goto L13dcbe;
#L13dcb8.   v6:= 0  @length 4;
#L13dcba.   v8.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.leader|]  := v6 @type object;
#L13dcbe.   throw v5;
  catch  [|any|] @[L13dbec..L13dc04] goto L13dc06;
  catch  [|any|] @[L13dc2e..L13dc4c] goto L13dc06;
  catch  [|any|] @[L13dc74..L13dc94] goto L13dc06;
  catch  [|any|] @[L13dc94..L13dc9e] goto L13dcae;
  catch  [|any|] @[L13dc9e..L13dcbe] goto L13dc06;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.toArray|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v4 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0018));

        v1;
        v2;
        v3;
      
#L13dd00.   v0:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13dd04.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13dd0a.   v1:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13dd0e.   v2:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13dd12.   v3:= new [|java:lang:Object|][];
#L13dd16.   call temp:=  [|java:util:Arrays.copyOf|](v1, v2, v3) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L13dd1c.   v1:= temp  @type object;
#L13dd1e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13dd24.   return v1  @type object;
#L13dd26.   v1:= Exception  @type object;
#L13dd28.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13dd2e.   throw v1;
  catch  [|any|] @[L13dd0a..L13dd1c] goto L13dd26;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.toArray|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] v5 @type (this), [|java:lang:Object|][] v6 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|lock|] @scope ((L0002,L0039));


        v1;
        v2;
        v3;
        v4;
      
#L13dd4c.   v0:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.lock|]   @type object;
#L13dd50.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13dd56.   v1:= v6.length;
#L13dd58.   v2:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13dd5c.   if v1 >= v2 then goto L13dd84;
#L13dd60.   v1:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13dd64.   v2:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13dd68.   call temp:=  [|java:lang:Object.getClass|](v6) @signature [|Ljava/lang/Object;.getClass:()Ljava/lang/Class;|] @classDescriptor [|java:lang:Object|] @type virtual;
#L13dd6e.   v3:= temp  @type object;
#L13dd70.   call temp:=  [|java:util:Arrays.copyOf|](v1, v2, v3) @signature [|Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;|] @classDescriptor [|java:util:Arrays|] @type static;
#L13dd76.   v1:= temp  @type object;
#L13dd78.   v1:= ([|java:lang:Object|][])v1;
#L13dd7c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13dd82.   return v1  @type object;
#L13dd84.   v1:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.queue|]   @type object;
#L13dd88.   v2:= 0  @length 4;
#L13dd8a.   v3:= 0  @length 4;
#L13dd8c.   v4:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13dd90.   call temp:=  [|java:lang:System.arraycopy|](v1, v2, v6, v3, v4) @signature [|Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V|] @classDescriptor [|java:lang:System|] @type static;
#L13dd96.   v1:= v6.length;
#L13dd98.   v2:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13dd9c.   if v1 <= v2 then goto L13ddaa;
#L13dda0.   v1:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.size|] ;
#L13dda4.   v2:= 0  @length 4;
#L13dda6.   v6[v1]:= v2  @type object;
#L13ddaa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ddb0.   v1:= v6  @type object;
#L13ddb2.   goto L13dd82;
#L13ddb4.   v1:= Exception  @type object;
#L13ddb6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ddbc.   throw v1;
  catch  [|any|] @[L13dd56..L13dd7c] goto L13ddb4;
  catch  [|any|] @[L13dd84..L13ddaa] goto L13ddb4;

   }
record [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|]  @type class @AccessFlag   extends [|java:util:concurrent:FutureTask|], [|java:util:concurrent:RunnableScheduledFuture|] {
      [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.heapIndex|]    @AccessFlag ;
      [|java:util:concurrent:RunnableScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.outerTask|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.period|]    @AccessFlag PRIVATE_FINAL;
      [|long|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.sequenceNumber|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:ScheduledThreadPoolExecutor|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]    @AccessFlag FINAL_SYNTHETIC;
      [|long|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]    @AccessFlag PRIVATE;
   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v2 @type (this), [|java:util:concurrent:ScheduledThreadPoolExecutor|] v3 @type (object), [|java:lang:Runnable|] v4 @type (object), [|java:lang:Object|] v5 @type (object), [|long|] v6) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.<init>:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;Ljava/lang/Runnable;Ljava/lang/Object;J)V|] @Access CONSTRUCTOR {
      local temp ;





        v0;
        v1;
      
#L13dde4.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]  := v3 @type object;
#L13dde8.   call temp:=  [|java:util:concurrent:FutureTask.<init>|](v2, v4, v5) @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L13ddee.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.outerTask|]  := v2 @type object;
#L13ddf2.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]  := v6 @wide;
#L13ddf6.   v0:= 0  @length wide16;
#L13ddfa.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.period|]  := v0 @wide;
#L13ddfe.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.access$000|]() @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.access$000:()Ljava/util/concurrent/atomic/AtomicLong;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type static;
#L13de04.   v0:= temp  @type object;
#L13de06.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.getAndIncrement|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.getAndIncrement:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L13de0c.   v0:= temp  @type wide;
#L13de0e.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.sequenceNumber|]  := v0 @wide;
#L13de12.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v2 @type (this), [|java:util:concurrent:ScheduledThreadPoolExecutor|] v3 @type (object), [|java:lang:Runnable|] v4 @type (object), [|java:lang:Object|] v5 @type (object), [|long|] v6, [|long|] v8) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.<init>:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;Ljava/lang/Runnable;Ljava/lang/Object;JJ)V|] @Access CONSTRUCTOR {
      local temp ;






        v0;
        v1;
      
#L13de24.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]  := v3 @type object;
#L13de28.   call temp:=  [|java:util:concurrent:FutureTask.<init>|](v2, v4, v5) @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L13de2e.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.outerTask|]  := v2 @type object;
#L13de32.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]  := v6 @wide;
#L13de36.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.period|]  := v8 @wide;
#L13de3a.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.access$000|]() @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.access$000:()Ljava/util/concurrent/atomic/AtomicLong;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type static;
#L13de40.   v0:= temp  @type object;
#L13de42.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.getAndIncrement|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.getAndIncrement:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L13de48.   v0:= temp  @type wide;
#L13de4a.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.sequenceNumber|]  := v0 @wide;
#L13de4e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v2 @type (this), [|java:util:concurrent:ScheduledThreadPoolExecutor|] v3 @type (object), [|java:util:concurrent:Callable|] v4 @type (object), [|long|] v5) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.<init>:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;Ljava/util/concurrent/Callable;J)V|] @Access CONSTRUCTOR {
      local temp ;




        v0;
        v1;
      
#L13de60.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]  := v3 @type object;
#L13de64.   call temp:=  [|java:util:concurrent:FutureTask.<init>|](v2, v4) @signature [|Ljava/util/concurrent/FutureTask;.<init>:(Ljava/util/concurrent/Callable;)V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type direct;
#L13de6a.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.outerTask|]  := v2 @type object;
#L13de6e.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]  := v5 @wide;
#L13de72.   v0:= 0  @length wide16;
#L13de76.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.period|]  := v0 @wide;
#L13de7a.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.access$000|]() @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.access$000:()Ljava/util/concurrent/atomic/AtomicLong;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type static;
#L13de80.   v0:= temp  @type object;
#L13de82.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.getAndIncrement|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.getAndIncrement:()J|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type virtual;
#L13de88.   v0:= temp  @type wide;
#L13de8a.   v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.sequenceNumber|]  := v0 @wide;
#L13de8e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v0 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.access$201:(Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;)V|] @Access STATIC_SYNTHETIC {
      local temp ;

      
#L13dea0.   call temp:=  [|java:util:concurrent:FutureTask.run|](v0) @signature [|Ljava/util/concurrent/FutureTask;.run:()V|] @classDescriptor [|java:util:concurrent:FutureTask|] @type super;
#L13dea6.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v1 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.access$301:(Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L13deb8.   call temp:=  [|java:util:concurrent:FutureTask.runAndReset|](v1) @signature [|Ljava/util/concurrent/FutureTask;.runAndReset:()Z|] @classDescriptor [|java:util:concurrent:FutureTask|] @type super;
#L13debe.   v0:= temp;
#L13dec0.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.setNextRunTime|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v5 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.setNextRunTime:()V|] @Access PRIVATE {
      local temp ;

        [|long|] v0 @varname [|p|] @scope ((L0002,L0018));

        v1;
        v2;
        v3;
        v4;
      
#L13ded4.   v0:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.period|]   @wide;
#L13ded8.   v2:= 0  @length wide16;
#L13dedc.   v2:= cmp(v0,v2);
#L13dee0.   if v2 <= 0 then goto L13def0;
#L13dee4.   v2:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]   @wide;
#L13dee8.   v2:= v2 + v0  @type long;
#L13deea.   v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]  := v2 @wide;
#L13deee.   return @void ;
#L13def0.   v2:= v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]   @type object;
#L13def4.   v3:= -v0  @type long;
#L13def6.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.triggerTime|](v2, v3, v4) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.triggerTime:(J)J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13defc.   v2:= temp  @type wide;
#L13defe.   v5.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]  := v2 @wide;
#L13df02.   goto L13deee;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v2 @type (this), [|boolean|] v3) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.cancel:(Z)Z|] @Access PUBLIC {
      local temp ;

        [|boolean|] v0 @varname [|cancelled|] @scope ((L0004,L0018));


        v1;
      
#L13df14.   call temp:=  [|java:util:concurrent:FutureTask.cancel|](v2, v3) @signature [|Ljava/util/concurrent/FutureTask;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:FutureTask|] @type super;
#L13df1a.   v0:= temp;
#L13df1c.   if v0 == 0 then goto L13df42;
#L13df20.   v1:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]   @type object;
#L13df24.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.access$100|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.access$100:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type static;
#L13df2a.   v1:= temp;
#L13df2c.   if v1 == 0 then goto L13df42;
#L13df30.   v1:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.heapIndex|] ;
#L13df34.   if v1 < 0 then goto L13df42;
#L13df38.   v1:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]   @type object;
#L13df3c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.remove|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.remove:(Ljava/lang/Runnable;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13df42.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.compareTo:(Ljava/lang/Object;)I|] @Access PUBLIC_BRIDGE_SYNTHETIC {
      local temp ;



        v0;
      
#L13df54.   v2:= ([|java:util:concurrent:Delayed|])v2;
#L13df58.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.compareTo:(Ljava/util/concurrent/Delayed;)I|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type virtual;
#L13df5e.   v0:= temp;
#L13df60.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v12 @type (this), [|java:util:concurrent:Delayed|] v13 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.compareTo:(Ljava/util/concurrent/Delayed;)I|] @Access PUBLIC {
      local temp ;

        [|long|] v0 @varname [|diff|] @scope ((L0016,L002a), (L0038,L0044));
        [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v2 @varname [|x|] @scope ((L0010,L002a));


        v1;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
        v9;
        v10;
        v11;
      
#L13df74.   v5:= 0  @length 4;
#L13df76.   v4:= 1  @length 4;
#L13df78.   v3:= -1  @length 4;
#L13df7a.   v10:= 0  @length wide16;
#L13df7e.   if v13 != v12 then goto L13df86;
#L13df82.   v3:= v5;
#L13df84.   return v3;
#L13df86.   v6:= instanceof @varname v13 @type [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|];
#L13df8a.   if v6 == 0 then goto L13dfc8;
#L13df8e.   v2:= v13  @type object;
#L13df90.   v2:= ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|])v2;
#L13df94.   v5:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]   @wide;
#L13df98.   v7:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]   @wide;
#L13df9c.   v0:= v5 - v7  @type long;
#L13dfa0.   v5:= cmp(v0,v10);
#L13dfa4.   if v5 < 0 then goto L13df84;
#L13dfa8.   v5:= cmp(v0,v10);
#L13dfac.   if v5 <= 0 then goto L13dfb4;
#L13dfb0.   v3:= v4;
#L13dfb2.   goto L13df84;
#L13dfb4.   v5:= v12.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.sequenceNumber|]   @wide;
#L13dfb8.   v7:= v2.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.sequenceNumber|]   @wide;
#L13dfbc.   v5:= cmp(v5,v7);
#L13dfc0.   if v5 < 0 then goto L13df84;
#L13dfc4.   v3:= v4;
#L13dfc6.   goto L13df84;
#L13dfc8.   v6:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13dfcc.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay|](v12, v6) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type virtual;
#L13dfd2.   v6:= temp  @type wide;
#L13dfd4.   v8:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13dfd8.   call temp:=  [|java:util:concurrent:Delayed.getDelay|](v13, v8) @signature [|Ljava/util/concurrent/Delayed;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:Delayed|] @type interface;
#L13dfde.   v8:= temp  @type wide;
#L13dfe0.   v0:= v6 - v8  @type long;
#L13dfe4.   v6:= cmp(v0,v10);
#L13dfe8.   if v6 < 0 then goto L13df84;
#L13dfec.   v3:= cmp(v0,v10);
#L13dff0.   if v3 <= 0 then goto L13dff8;
#L13dff4.   v3:= v4;
#L13dff6.   goto L13df84;
#L13dff8.   v3:= v5;
#L13dffa.   goto L13df84;

   }
    procedure [|long|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v4 @type (this), [|java:util:concurrent:TimeUnit|] v5 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L13e00c.   v0:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.time|]   @wide;
#L13e010.   v2:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]   @type object;
#L13e014.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.now|](v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.now:()J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13e01a.   v2:= temp  @type wide;
#L13e01c.   v0:= v0 - v2  @type long;
#L13e01e.   v2:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13e022.   call temp:=  [|java:util:concurrent:TimeUnit.convert|](v5, v0, v1, v2) @signature [|Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13e028.   v0:= temp  @type wide;
#L13e02a.   return v0  @type wide;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.isPeriodic|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v4 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.isPeriodic:()Z|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L13e03c.   v0:= v4.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.period|]   @wide;
#L13e040.   v2:= 0  @length wide16;
#L13e044.   v0:= cmp(v0,v2);
#L13e048.   if v0 == 0 then goto L13e050;
#L13e04c.   v0:= 1  @length 4;
#L13e04e.   return v0;
#L13e050.   v0:= 0  @length 4;
#L13e052.   goto L13e04e;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.run|] ([|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v3 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.run:()V|] @Access PUBLIC {
      local temp ;

        [|boolean|] v0 @varname [|periodic|] @scope ((L0004,L0028));

        v1;
        v2;
      
#L13e064.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.isPeriodic|](v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.isPeriodic:()Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type virtual;
#L13e06a.   v0:= temp;
#L13e06c.   v1:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]   @type object;
#L13e070.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.canRunInCurrentRunState|](v1, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.canRunInCurrentRunState:(Z)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13e076.   v1:= temp;
#L13e078.   if v1 != 0 then goto L13e086;
#L13e07c.   v1:= 0  @length 4;
#L13e07e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel|](v3, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type virtual;
#L13e084.   return @void ;
#L13e086.   if v0 != 0 then goto L13e092;
#L13e08a.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201|](v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.access$201:(Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type static;
#L13e090.   goto L13e084;
#L13e092.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301|](v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.access$301:(Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type static;
#L13e098.   v1:= temp;
#L13e09a.   if v1 == 0 then goto L13e084;
#L13e09e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.setNextRunTime|](v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.setNextRunTime:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type direct;
#L13e0a4.   v1:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.this$0|]   @type object;
#L13e0a8.   v2:= v3.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.outerTask|]   @type object;
#L13e0ac.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.reExecutePeriodic|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.reExecutePeriodic:(Ljava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13e0b2.   goto L13e084;

   }
record [|java:util:concurrent:ThreadPoolExecutor|]  @type class @AccessFlag PUBLIC  extends [|java:util:concurrent:AbstractExecutorService|] {
      [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.allowCoreThreadTimeOut|]    @AccessFlag PRIVATE_VOLATILE;
      [|long|] [|java:util:concurrent:ThreadPoolExecutor.completedTaskCount|]    @AccessFlag PRIVATE;
      [|int|] [|java:util:concurrent:ThreadPoolExecutor.corePoolSize|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:concurrent:atomic:AtomicInteger|] [|java:util:concurrent:ThreadPoolExecutor.ctl|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:RejectedExecutionHandler|] [|java:util:concurrent:ThreadPoolExecutor.handler|]    @AccessFlag PRIVATE_VOLATILE;
      [|long|] [|java:util:concurrent:ThreadPoolExecutor.keepAliveTime|]    @AccessFlag PRIVATE_VOLATILE;
      [|int|] [|java:util:concurrent:ThreadPoolExecutor.largestPoolSize|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:ThreadPoolExecutor.mainLock|]    @AccessFlag PRIVATE_FINAL;
      [|int|] [|java:util:concurrent:ThreadPoolExecutor.maximumPoolSize|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:concurrent:locks:Condition|] [|java:util:concurrent:ThreadPoolExecutor.termination|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:concurrent:ThreadFactory|] [|java:util:concurrent:ThreadPoolExecutor.threadFactory|]    @AccessFlag PRIVATE_VOLATILE;
      [|java:util:concurrent:BlockingQueue|] [|java:util:concurrent:ThreadPoolExecutor.workQueue|]    @AccessFlag PRIVATE_FINAL;
      [|java:util:HashSet|] [|java:util:concurrent:ThreadPoolExecutor.workers|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|int|] @@[|java:util:concurrent:ThreadPoolExecutor.CAPACITY|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ThreadPoolExecutor.COUNT_BITS|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|boolean|] @@[|java:util:concurrent:ThreadPoolExecutor.ONLY_ONE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ThreadPoolExecutor.RUNNING|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ThreadPoolExecutor.SHUTDOWN|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ThreadPoolExecutor.STOP|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ThreadPoolExecutor.TERMINATED|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:ThreadPoolExecutor.TIDYING|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:util:concurrent:RejectedExecutionHandler|] @@[|java:util:concurrent:ThreadPoolExecutor.defaultHandler|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:RuntimePermission|] @@[|java:util:concurrent:ThreadPoolExecutor.shutdownPerm|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.<clinit>|] () @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L13e0c4.   v0:= new [|java:util:concurrent:ThreadPoolExecutor$AbortPolicy|];
#L13e0c8.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$AbortPolicy.<init>|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$AbortPolicy;.<init>:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$AbortPolicy|] @type direct;
#L13e0ce.   @@[|java:util:concurrent:ThreadPoolExecutor.defaultHandler|] := v0  @type object;
#L13e0d2.   v0:= new [|java:lang:RuntimePermission|];
#L13e0d6.   v1:= "modifyThread" @type (object, string);
#L13e0da.   call temp:=  [|java:lang:RuntimePermission.<init>|](v0, v1) @signature [|Ljava/lang/RuntimePermission;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:RuntimePermission|] @type direct;
#L13e0e0.   @@[|java:util:concurrent:ThreadPoolExecutor.shutdownPerm|] := v0  @type object;
#L13e0e4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.<init>|] ([|java:util:concurrent:ThreadPoolExecutor|] v9 @type (this), [|int|] v10, [|int|] v11, [|long|] v12, [|java:util:concurrent:TimeUnit|] v14 @type (object), [|java:util:concurrent:BlockingQueue|] v15 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;






        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L13e0f8.   call temp:=  [|java:util:concurrent:Executors.defaultThreadFactory|]() @signature [|Ljava/util/concurrent/Executors;.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;|] @classDescriptor [|java:util:concurrent:Executors|] @type static;
#L13e0fe.   v7:= temp  @type object;
#L13e100.   v8:= @@[|java:util:concurrent:ThreadPoolExecutor.defaultHandler|]   @type object;
#L13e104.   v0:= v9  @type object;
#L13e106.   v1:= v10;
#L13e108.   v2:= v11;
#L13e10a.   v3:= v12  @type wide;
#L13e10c.   v5:= v14  @type object;
#L13e10e.   v6:= v15  @type object;
#L13e110.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e116.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.<init>|] ([|java:util:concurrent:ThreadPoolExecutor|] v9 @type (this), [|int|] v10, [|int|] v11, [|long|] v12, [|java:util:concurrent:TimeUnit|] v14 @type (object), [|java:util:concurrent:BlockingQueue|] v15 @type (object), [|java:util:concurrent:RejectedExecutionHandler|] v16 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/RejectedExecutionHandler;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;







        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L13e128.   call temp:=  [|java:util:concurrent:Executors.defaultThreadFactory|]() @signature [|Ljava/util/concurrent/Executors;.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;|] @classDescriptor [|java:util:concurrent:Executors|] @type static;
#L13e12e.   v7:= temp  @type object;
#L13e130.   v0:= v9  @type object;
#L13e132.   v1:= v10;
#L13e134.   v2:= v11;
#L13e136.   v3:= v12  @type wide;
#L13e138.   v5:= v14  @type object;
#L13e13a.   v6:= v15  @type object;
#L13e13c.   v8:= v16  @type object;
#L13e140.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e146.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.<init>|] ([|java:util:concurrent:ThreadPoolExecutor|] v9 @type (this), [|int|] v10, [|int|] v11, [|long|] v12, [|java:util:concurrent:TimeUnit|] v14 @type (object), [|java:util:concurrent:BlockingQueue|] v15 @type (object), [|java:util:concurrent:ThreadFactory|] v16 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;







        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L13e158.   v8:= @@[|java:util:concurrent:ThreadPoolExecutor.defaultHandler|]   @type object;
#L13e15c.   v0:= v9  @type object;
#L13e15e.   v1:= v10;
#L13e160.   v2:= v11;
#L13e162.   v3:= v12  @type wide;
#L13e164.   v5:= v14  @type object;
#L13e166.   v6:= v15  @type object;
#L13e168.   v7:= v16  @type object;
#L13e16c.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e172.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.<init>|] ([|java:util:concurrent:ThreadPoolExecutor|] v3 @type (this), [|int|] v4, [|int|] v5, [|long|] v6, [|java:util:concurrent:TimeUnit|] v8 @type (object), [|java:util:concurrent:BlockingQueue|] v9 @type (object), [|java:util:concurrent:ThreadFactory|] v10 @type (object), [|java:util:concurrent:RejectedExecutionHandler|] v11 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;








        v0;
        v1;
        v2;
      
#L13e184.   call temp:=  [|java:util:concurrent:AbstractExecutorService.<init>|](v3) @signature [|Ljava/util/concurrent/AbstractExecutorService;.<init>:()V|] @classDescriptor [|java:util:concurrent:AbstractExecutorService|] @type direct;
#L13e18a.   v0:= new [|java:util:concurrent:atomic:AtomicInteger|];
#L13e18e.   v1:= -536870912  @length high16;
#L13e192.   v2:= 0  @length 4;
#L13e194.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.ctlOf|](v1, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.ctlOf:(II)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e19a.   v1:= temp;
#L13e19c.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.<init>|](v0, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type direct;
#L13e1a2.   v3.[|java:util:concurrent:ThreadPoolExecutor.ctl|]  := v0 @type object;
#L13e1a6.   v0:= new [|java:util:concurrent:locks:ReentrantLock|];
#L13e1aa.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L13e1b0.   v3.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]  := v0 @type object;
#L13e1b4.   v0:= new [|java:util:HashSet|];
#L13e1b8.   call temp:=  [|java:util:HashSet.<init>|](v0) @signature [|Ljava/util/HashSet;.<init>:()V|] @classDescriptor [|java:util:HashSet|] @type direct;
#L13e1be.   v3.[|java:util:concurrent:ThreadPoolExecutor.workers|]  := v0 @type object;
#L13e1c2.   v0:= v3.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13e1c6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.newCondition|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e1cc.   v0:= temp  @type object;
#L13e1ce.   v3.[|java:util:concurrent:ThreadPoolExecutor.termination|]  := v0 @type object;
#L13e1d2.   if v4 < 0 then goto L13e1ea;
#L13e1d6.   if v5 <= 0 then goto L13e1ea;
#L13e1da.   if v5 < v4 then goto L13e1ea;
#L13e1de.   v0:= 0  @length wide16;
#L13e1e2.   v0:= cmp(v6,v0);
#L13e1e6.   if v0 >= 0 then goto L13e1f6;
#L13e1ea.   v0:= new [|java:lang:IllegalArgumentException|];
#L13e1ee.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13e1f4.   throw v0;
#L13e1f6.   if v9 == 0 then goto L13e202;
#L13e1fa.   if v10 == 0 then goto L13e202;
#L13e1fe.   if v11 != 0 then goto L13e20e;
#L13e202.   v0:= new [|java:lang:NullPointerException|];
#L13e206.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13e20c.   throw v0;
#L13e20e.   v3.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|]  := v4;
#L13e212.   v3.[|java:util:concurrent:ThreadPoolExecutor.maximumPoolSize|]  := v5;
#L13e216.   v3.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]  := v9 @type object;
#L13e21a.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v8, v6, v7) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13e220.   v0:= temp  @type wide;
#L13e222.   v3.[|java:util:concurrent:ThreadPoolExecutor.keepAliveTime|]  := v0 @wide;
#L13e226.   v3.[|java:util:concurrent:ThreadPoolExecutor.threadFactory|]  := v10 @type object;
#L13e22a.   v3.[|java:util:concurrent:ThreadPoolExecutor.handler|]  := v11 @type object;
#L13e22e.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.addWorker|] ([|java:util:concurrent:ThreadPoolExecutor|] v9 @type (this), [|java:lang:Runnable|] v10 @type (object), [|boolean|] v11) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @Access PRIVATE {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|mainLock|] @scope ((L0038,L0057), (L0067,L009c));
        [|java:lang:Thread|] v4 @varname [|t|] @scope ((L0036,L0057), (L0067,L009c));
        [|java:util:concurrent:ThreadPoolExecutor$Worker|] v5 @varname [|w|] @scope ((L0034,L0057), (L0067,L009c));
        [|int|] v3 @varname [|s|] @scope ((L0072,L0097));
        [|int|] v0 @varname [|c|] @scope ((L0007,L009c));
        [|int|] v2 @varname [|rs|] @scope ((L000b,L009c));
        [|int|] v6 @varname [|wc|] @scope ((L001e,L009c));



        v7;
        v8;
      
#L13e240.   v7:= 0  @length 4;
#L13e242.   v8:= v9.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e246.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v8) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e24c.   v0:= temp;
#L13e24e.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e254.   v2:= temp;
#L13e256.   if v2 < 0 then goto L13e274;
#L13e25a.   if v2 != 0 then goto L13e272;
#L13e25e.   if v10 != 0 then goto L13e272;
#L13e262.   v8:= v9.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13e266.   call temp:=  [|java:util:concurrent:BlockingQueue.isEmpty|](v8) @signature [|Ljava/util/concurrent/BlockingQueue;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13e26c.   v8:= temp;
#L13e26e.   if v8 == 0 then goto L13e274;
#L13e272.   return v7;
#L13e274.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e27a.   v6:= temp;
#L13e27c.    v8:= 0.000000;
#L13e282.   if v6 >= v8 then goto L13e272;
#L13e286.   if v11 == 0 then goto L13e2ee;
#L13e28a.   v8:= v9.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|] ;
#L13e28e.   if v6 >= v8 then goto L13e272;
#L13e292.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.compareAndIncrementWorkerCount|](v9, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.compareAndIncrementWorkerCount:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e298.   v8:= temp;
#L13e29a.   if v8 == 0 then goto L13e2f4;
#L13e29e.   v5:= new [|java:util:concurrent:ThreadPoolExecutor$Worker|];
#L13e2a2.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.<init>|](v5, v9, v10) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.<init>:(Ljava/util/concurrent/ThreadPoolExecutor;Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type direct;
#L13e2a8.   v4:= v5.[|java:util:concurrent:ThreadPoolExecutor$Worker.thread|]   @type object;
#L13e2ac.   v1:= v9.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13e2b0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e2b6.   v8:= v9.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e2ba.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v8) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e2c0.   v0:= temp;
#L13e2c2.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e2c8.   v2:= temp;
#L13e2ca.   if v4 == 0 then goto L13e2da;
#L13e2ce.   if v2 < 0 then goto L13e30e;
#L13e2d2.   if v2 != 0 then goto L13e2da;
#L13e2d6.   if v10 == 0 then goto L13e30e;
#L13e2da.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.decrementWorkerCount|](v9) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.decrementWorkerCount:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e2e0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.tryTerminate|](v9) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.tryTerminate:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13e2e6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e2ec.   goto L13e272;
#L13e2ee.   v8:= v9.[|java:util:concurrent:ThreadPoolExecutor.maximumPoolSize|] ;
#L13e2f2.   goto L13e28e;
#L13e2f4.   v8:= v9.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e2f8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v8) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e2fe.   v0:= temp;
#L13e300.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e306.   v8:= temp;
#L13e308.   if v8 == v2 then goto L13e274;
#L13e30c.   goto L13e242;
#L13e30e.   v7:= v9.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13e312.   call temp:=  [|java:util:HashSet.add|](v7, v5) @signature [|Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13e318.   v7:= v9.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13e31c.   call temp:=  [|java:util:HashSet.size|](v7) @signature [|Ljava/util/HashSet;.size:()I|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13e322.   v3:= temp;
#L13e324.   v7:= v9.[|java:util:concurrent:ThreadPoolExecutor.largestPoolSize|] ;
#L13e328.   if v3 <= v7 then goto L13e330;
#L13e32c.   v9.[|java:util:concurrent:ThreadPoolExecutor.largestPoolSize|]  := v3;
#L13e330.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e336.   call temp:=  [|java:lang:Thread.start|](v4) @signature [|Ljava/lang/Thread;.start:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13e33c.   v7:= v9.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e340.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v7) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e346.   v7:= temp;
#L13e348.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateOf|](v7) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e34e.   v7:= temp;
#L13e350.   v8:= 536870912  @length high16;
#L13e354.   if v7 != v8 then goto L13e36a;
#L13e358.   call temp:=  [|java:lang:Thread.isInterrupted|](v4) @signature [|Ljava/lang/Thread;.isInterrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13e35e.   v7:= temp;
#L13e360.   if v7 != 0 then goto L13e36a;
#L13e364.   call temp:=  [|java:lang:Thread.interrupt|](v4) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13e36a.   v7:= 1  @length 4;
#L13e36c.   goto L13e272;
#L13e36e.   v7:= Exception  @type object;
#L13e370.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e376.   throw v7;
  catch  [|any|] @[L13e2b6..L13e2e6] goto L13e36e;
  catch  [|any|] @[L13e30e..L13e330] goto L13e36e;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.advanceRunState|] ([|java:util:concurrent:ThreadPoolExecutor|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.advanceRunState:(I)V|] @Access PRIVATE {
      local temp ;
        [|int|] v0 @varname [|c|] @scope ((L0006,L001d));


        v1;
        v2;
      
#L13e39c.   v1:= v3.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e3a0.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e3a6.   v0:= temp;
#L13e3a8.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateAtLeast|](v0, v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateAtLeast:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e3ae.   v1:= temp;
#L13e3b0.   if v1 != 0 then goto L13e3d4;
#L13e3b4.   v1:= v3.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e3b8.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e3be.   v2:= temp;
#L13e3c0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.ctlOf|](v4, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.ctlOf:(II)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e3c6.   v2:= temp;
#L13e3c8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v1, v0, v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e3ce.   v1:= temp;
#L13e3d0.   if v1 == 0 then goto L13e39c;
#L13e3d4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.checkShutdownAccess|] ([|java:util:concurrent:ThreadPoolExecutor|] v5 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.checkShutdownAccess:()V|] @Access PRIVATE {
      local temp ;
        [|java:util:Iterator|] v0 @varname [|i$|] @scope ((L0016,L0028), (L002d,L0030));
        [|java:util:concurrent:ThreadPoolExecutor$Worker|] v3 @varname [|w|] @scope ((L0022,L0028));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|mainLock|] @scope ((L000d,L0030));
        [|java:lang:SecurityManager|] v2 @varname [|security|] @scope ((L0004,L0031));

        v4;
      
#L13e3e8.   call temp:=  [|java:lang:System.getSecurityManager|]() @signature [|Ljava/lang/System;.getSecurityManager:()Ljava/lang/SecurityManager;|] @classDescriptor [|java:lang:System|] @type static;
#L13e3ee.   v2:= temp  @type object;
#L13e3f0.   if v2 == 0 then goto L13e448;
#L13e3f4.   v4:= @@[|java:util:concurrent:ThreadPoolExecutor.shutdownPerm|]   @type object;
#L13e3f8.   call temp:=  [|java:lang:SecurityManager.checkPermission|](v2, v4) @signature [|Ljava/lang/SecurityManager;.checkPermission:(Ljava/security/Permission;)V|] @classDescriptor [|java:lang:SecurityManager|] @type virtual;
#L13e3fe.   v1:= v5.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13e402.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e408.   v4:= v5.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13e40c.   call temp:=  [|java:util:HashSet.iterator|](v4) @signature [|Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13e412.   v0:= temp  @type object;
#L13e414.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13e41a.   v4:= temp;
#L13e41c.   if v4 == 0 then goto L13e442;
#L13e420.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13e426.   v3:= temp  @type object;
#L13e428.   v3:= ([|java:util:concurrent:ThreadPoolExecutor$Worker|])v3;
#L13e42c.   v4:= v3.[|java:util:concurrent:ThreadPoolExecutor$Worker.thread|]   @type object;
#L13e430.   call temp:=  [|java:lang:SecurityManager.checkAccess|](v2, v4) @signature [|Ljava/lang/SecurityManager;.checkAccess:(Ljava/lang/Thread;)V|] @classDescriptor [|java:lang:SecurityManager|] @type virtual;
#L13e436.   goto L13e414;
#L13e438.   v4:= Exception  @type object;
#L13e43a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e440.   throw v4;
#L13e442.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e448.   return @void ;
  catch  [|any|] @[L13e408..L13e436] goto L13e438;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.clearInterruptsForTaskRun|] ([|java:util:concurrent:ThreadPoolExecutor|] v2 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.clearInterruptsForTaskRun:()V|] @Access PRIVATE {
      local temp ;

        v0;
        v1;
      
#L13e468.   v1:= 536870912  @length high16;
#L13e46c.   v0:= v2.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e470.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e476.   v0:= temp;
#L13e478.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateLessThan|](v0, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateLessThan:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e47e.   v0:= temp;
#L13e480.   if v0 == 0 then goto L13e4b6;
#L13e484.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L13e48a.   v0:= temp;
#L13e48c.   if v0 == 0 then goto L13e4b6;
#L13e490.   v0:= v2.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e494.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e49a.   v0:= temp;
#L13e49c.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateAtLeast|](v0, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateAtLeast:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e4a2.   v0:= temp;
#L13e4a4.   if v0 == 0 then goto L13e4b6;
#L13e4a8.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L13e4ae.   v0:= temp  @type object;
#L13e4b0.   call temp:=  [|java:lang:Thread.interrupt|](v0) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13e4b6.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.compareAndDecrementWorkerCount|] ([|java:util:concurrent:ThreadPoolExecutor|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.compareAndDecrementWorkerCount:(I)Z|] @Access PRIVATE {
      local temp ;


        v0;
        v1;
      
#L13e4c8.   v0:= v2.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e4cc.   v1:= v3 + -1;
#L13e4d0.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v0, v3, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e4d6.   v0:= temp;
#L13e4d8.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.compareAndIncrementWorkerCount|] ([|java:util:concurrent:ThreadPoolExecutor|] v2 @type (this), [|int|] v3) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.compareAndIncrementWorkerCount:(I)Z|] @Access PRIVATE {
      local temp ;


        v0;
        v1;
      
#L13e4ec.   v0:= v2.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e4f0.   v1:= v3 + 1;
#L13e4f4.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v0, v3, v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e4fa.   v0:= temp;
#L13e4fc.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ThreadPoolExecutor.ctlOf|] ([|int|] v1, [|int|] v2) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.ctlOf:(II)I|] @Access PRIVATE_STATIC {
      local temp ;


        v0;
      
#L13e510.   v0:= v1 ^| v2  @type int;
#L13e514.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.decrementWorkerCount|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.decrementWorkerCount:()V|] @Access PRIVATE {
      local temp ;

        v0;
      
#L13e528.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e52c.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e532.   v0:= temp;
#L13e534.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.compareAndDecrementWorkerCount|](v1, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.compareAndDecrementWorkerCount:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e53a.   v0:= temp;
#L13e53c.   if v0 == 0 then goto L13e528;
#L13e540.   return @void ;

   }
    procedure [|java:util:List|] [|java:util:concurrent:ThreadPoolExecutor.drainQueue|] ([|java:util:concurrent:ThreadPoolExecutor|] v7 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.drainQueue:()Ljava/util/List;|] @Access PRIVATE {
      local temp ;
        [|java:lang:Runnable|][] v0 @varname [|arr$|] @scope ((L0019,L002b));
        [|int|] v1 @varname [|i$|] @scope ((L001b,L002b));
        [|int|] v2 @varname [|len$|] @scope ((L001a,L002b));
        [|java:lang:Runnable|] v4 @varname [|r|] @scope ((L001f,L002b));
        [|java:util:concurrent:BlockingQueue|] v3 @varname [|q|] @scope ((L0002,L002c));
        [|java:util:List|] v5 @varname [|taskList|] @scope ((L0007,L002c));

        v6;
      
#L13e554.   v3:= v7.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13e558.   v5:= new [|java:util:ArrayList|];
#L13e55c.   call temp:=  [|java:util:ArrayList.<init>|](v5) @signature [|Ljava/util/ArrayList;.<init>:()V|] @classDescriptor [|java:util:ArrayList|] @type direct;
#L13e562.   call temp:=  [|java:util:concurrent:BlockingQueue.drainTo|](v3, v5) @signature [|Ljava/util/concurrent/BlockingQueue;.drainTo:(Ljava/util/Collection;)I|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13e568.   call temp:=  [|java:util:concurrent:BlockingQueue.isEmpty|](v3) @signature [|Ljava/util/concurrent/BlockingQueue;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13e56e.   v6:= temp;
#L13e570.   if v6 != 0 then goto L13e5aa;
#L13e574.   v6:= 0  @length 4;
#L13e576.   v6:= new [|java:lang:Runnable|][v6];
#L13e57a.   call temp:=  [|java:util:concurrent:BlockingQueue.toArray|](v3, v6) @signature [|Ljava/util/concurrent/BlockingQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13e580.   v0:= temp  @type object;
#L13e582.   v0:= ([|java:lang:Runnable|][])v0;
#L13e586.   v2:= v0.length;
#L13e588.   v1:= 0  @length 4;
#L13e58a.   if v1 >= v2 then goto L13e5aa;
#L13e58e.   v4:= v0[v1]  @type object;
#L13e592.   call temp:=  [|java:util:concurrent:BlockingQueue.remove|](v3, v4) @signature [|Ljava/util/concurrent/BlockingQueue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13e598.   v6:= temp;
#L13e59a.   if v6 == 0 then goto L13e5a4;
#L13e59e.   call temp:=  [|java:util:List.add|](v5, v4) @signature [|Ljava/util/List;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:List|] @type interface;
#L13e5a4.   v1:= v1 + 1;
#L13e5a8.   goto L13e58a;
#L13e5aa.   return v5  @type object;

   }
    procedure [|java:lang:Runnable|] [|java:util:concurrent:ThreadPoolExecutor.getTask|] ([|java:util:concurrent:ThreadPoolExecutor|] v12 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getTask:()Ljava/lang/Runnable;|] @Access PRIVATE {
      local temp ;
        [|java:lang:Runnable|] v1 @varname [|r|] @scope ((L0043,L0047));
        [|boolean|] v4 @varname [|timed|] @scope ((L002c,L0047), (L0049,L006b));
        [|int|] v0 @varname [|c|] @scope ((L0008,L006b));
        [|java:lang:InterruptedException|] v2 @varname [|retry|] @scope ((L0069,L006b));
        [|int|] v3 @varname [|rs|] @scope ((L000c,L006b));
        [|boolean|] v5 @varname [|timedOut|] @scope ((L0002,L006b));
        [|int|] v6 @varname [|wc|] @scope ((L0023,L006b));

        v7;
        v8;
        v9;
        v10;
        v11;
      
#L13e5bc.   v8:= 0  @length 4;
#L13e5be.   v5:= 0  @length 4;
#L13e5c0.   v7:= v12.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e5c4.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v7) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e5ca.   v0:= temp;
#L13e5cc.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e5d2.   v3:= temp;
#L13e5d4.   if v3 < 0 then goto L13e5fa;
#L13e5d8.   v7:= 536870912  @length high16;
#L13e5dc.   if v3 >= v7 then goto L13e5f0;
#L13e5e0.   v7:= v12.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13e5e4.   call temp:=  [|java:util:concurrent:BlockingQueue.isEmpty|](v7) @signature [|Ljava/util/concurrent/BlockingQueue;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13e5ea.   v7:= temp;
#L13e5ec.   if v7 == 0 then goto L13e5fa;
#L13e5f0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.decrementWorkerCount|](v12) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.decrementWorkerCount:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e5f6.   v1:= v8  @type object;
#L13e5f8.   return v1  @type object;
#L13e5fa.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e600.   v6:= temp;
#L13e602.   v7:= v12.[|java:util:concurrent:ThreadPoolExecutor.allowCoreThreadTimeOut|]   @boolean;
#L13e606.   if v7 != 0 then goto L13e612;
#L13e60a.   v7:= v12.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|] ;
#L13e60e.   if v6 <= v7 then goto L13e64a;
#L13e612.   v4:= 1  @length 4;
#L13e614.   v7:= v12.[|java:util:concurrent:ThreadPoolExecutor.maximumPoolSize|] ;
#L13e618.   if v6 > v7 then goto L13e64e;
#L13e61c.   if v5 == 0 then goto L13e624;
#L13e620.   if v4 != 0 then goto L13e64e;
#L13e624.   if v4 == 0 then goto L13e678;
#L13e628.   v7:= v12.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13e62c.   v9:= v12.[|java:util:concurrent:ThreadPoolExecutor.keepAliveTime|]   @wide;
#L13e630.   v11:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13e634.   call temp:=  [|java:util:concurrent:BlockingQueue.poll|](v7, v9, v10, v11) @signature [|Ljava/util/concurrent/BlockingQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13e63a.   v7:= temp  @type object;
#L13e63c.   v7:= ([|java:lang:Runnable|])v7;
#L13e640.   v1:= v7  @type object;
#L13e642.   if v1 != 0 then goto L13e5f8;
#L13e646.   v5:= 1  @length 4;
#L13e648.   goto L13e5c0;
#L13e64a.   v4:= 0  @length 4;
#L13e64c.   goto L13e614;
#L13e64e.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.compareAndDecrementWorkerCount|](v12, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.compareAndDecrementWorkerCount:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e654.   v7:= temp;
#L13e656.   if v7 == 0 then goto L13e65e;
#L13e65a.   v1:= v8  @type object;
#L13e65c.   goto L13e5f8;
#L13e65e.   v7:= v12.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e662.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v7) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e668.   v0:= temp;
#L13e66a.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e670.   v7:= temp;
#L13e672.   if v7 == v3 then goto L13e5fa;
#L13e676.   goto L13e5c0;
#L13e678.   v7:= v12.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13e67c.   call temp:=  [|java:util:concurrent:BlockingQueue.take|](v7) @signature [|Ljava/util/concurrent/BlockingQueue;.take:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13e682.   v7:= temp  @type object;
#L13e684.   v7:= ([|java:lang:Runnable|])v7;
#L13e688.   v1:= v7  @type object;
#L13e68a.   goto L13e642;
#L13e68c.   v2:= Exception  @type object;
#L13e68e.   v5:= 0  @length 4;
#L13e690.   goto L13e5c0;
  catch  [|java:lang:InterruptedException|] @[L13e628..L13e640] goto L13e68c;
  catch  [|java:lang:InterruptedException|] @[L13e678..L13e688] goto L13e68c;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.interruptIdleWorkers|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptIdleWorkers:()V|] @Access PRIVATE {
      local temp ;

        v0;
      
#L13e6bc.   v0:= 0  @length 4;
#L13e6be.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.interruptIdleWorkers|](v1, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptIdleWorkers:(Z)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e6c4.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.interruptIdleWorkers|] ([|java:util:concurrent:ThreadPoolExecutor|] v5 @type (this), [|boolean|] v6) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptIdleWorkers:(Z)V|] @Access PRIVATE {
      local temp ;
        [|java:lang:Thread|] v2 @varname [|t|] @scope ((L0019,L002d), (L0031,L0036), (L003b,L0040));
        [|java:util:concurrent:ThreadPoolExecutor$Worker|] v3 @varname [|w|] @scope ((L0017,L002d), (L0031,L0036), (L003b,L0040));
        [|java:util:Iterator|] v0 @varname [|i$|] @scope ((L000b,L0036), (L003b,L0040));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|mainLock|] @scope ((L0002,L0040));


        v4;
      
#L13e6d8.   v1:= v5.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13e6dc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e6e2.   v4:= v5.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13e6e6.   call temp:=  [|java:util:HashSet.iterator|](v4) @signature [|Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13e6ec.   v0:= temp  @type object;
#L13e6ee.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13e6f4.   v4:= temp;
#L13e6f6.   if v4 == 0 then goto L13e732;
#L13e6fa.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13e700.   v3:= temp  @type object;
#L13e702.   v3:= ([|java:util:concurrent:ThreadPoolExecutor$Worker|])v3;
#L13e706.   v2:= v3.[|java:util:concurrent:ThreadPoolExecutor$Worker.thread|]   @type object;
#L13e70a.   call temp:=  [|java:lang:Thread.isInterrupted|](v2) @signature [|Ljava/lang/Thread;.isInterrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13e710.   v4:= temp;
#L13e712.   if v4 != 0 then goto L13e72e;
#L13e716.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.tryLock|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.tryLock:()Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13e71c.   v4:= temp;
#L13e71e.   if v4 == 0 then goto L13e72e;
#L13e722.   call temp:=  [|java:lang:Thread.interrupt|](v2) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13e728.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.unlock|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.unlock:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13e72e.   if v6 == 0 then goto L13e6ee;
#L13e732.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e738.   return @void ;
#L13e73a.   v4:= Exception  @type object;
#L13e73c.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.unlock|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.unlock:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13e742.   throw v4;
#L13e744.   v4:= Exception  @type object;
#L13e746.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e74c.   throw v4;
#L13e74e.   v4:= Exception  @type object;
#L13e750.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.unlock|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.unlock:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13e756.   goto L13e72e;
  catch  [|any|] @[L13e6e2..L13e71c] goto L13e744;
  catch  [|java:lang:SecurityException|] @[L13e722..L13e728] goto L13e74e;
  catch  [|any|] @[L13e722..L13e728] goto L13e73a;
  catch  [|any|] @[L13e728..L13e72e] goto L13e744;
  catch  [|any|] @[L13e73c..L13e744] goto L13e744;
  catch  [|any|] @[L13e750..L13e756] goto L13e744;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.interruptWorkers|] ([|java:util:concurrent:ThreadPoolExecutor|] v4 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptWorkers:()V|] @Access PRIVATE {
      local temp ;
        [|java:util:Iterator|] v0 @varname [|i$|] @scope ((L000b,L001f), (L0024,L0028));
        [|java:util:concurrent:ThreadPoolExecutor$Worker|] v2 @varname [|w|] @scope ((L0017,L001f));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|mainLock|] @scope ((L0002,L0028));

        v3;
      
#L13e798.   v1:= v4.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13e79c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e7a2.   v3:= v4.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13e7a6.   call temp:=  [|java:util:HashSet.iterator|](v3) @signature [|Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13e7ac.   v0:= temp  @type object;
#L13e7ae.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13e7b4.   v3:= temp;
#L13e7b6.   if v3 == 0 then goto L13e7e0;
#L13e7ba.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13e7c0.   v2:= temp  @type object;
#L13e7c2.   v2:= ([|java:util:concurrent:ThreadPoolExecutor$Worker|])v2;
#L13e7c6.   v3:= v2.[|java:util:concurrent:ThreadPoolExecutor$Worker.thread|]   @type object;
#L13e7ca.   call temp:=  [|java:lang:Thread.interrupt|](v3) @signature [|Ljava/lang/Thread;.interrupt:()V|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L13e7d0.   goto L13e7ae;
#L13e7d2.   v3:= Exception  @type object;
#L13e7d4.   goto L13e7ae;
#L13e7d6.   v3:= Exception  @type object;
#L13e7d8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e7de.   throw v3;
#L13e7e0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e7e6.   return @void ;
  catch  [|any|] @[L13e7a2..L13e7c6] goto L13e7d6;
  catch  [|java:lang:SecurityException|] @[L13e7c6..L13e7d0] goto L13e7d2;
  catch  [|any|] @[L13e7c6..L13e7d0] goto L13e7d6;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.isRunning|] ([|int|] v1) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isRunning:(I)Z|] @Access PRIVATE_STATIC {
      local temp ;

        v0;
      
#L13e810.   if v1 >= 0 then goto L13e818;
#L13e814.   v0:= 1  @length 4;
#L13e816.   return v0;
#L13e818.   v0:= 0  @length 4;
#L13e81a.   goto L13e816;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.processWorkerExit|] ([|java:util:concurrent:ThreadPoolExecutor|] v8 @type (this), [|java:util:concurrent:ThreadPoolExecutor$Worker|] v9 @type (object), [|boolean|] v10) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.processWorkerExit:(Ljava/util/concurrent/ThreadPoolExecutor$Worker;Z)V|] @Access PRIVATE {
      local temp ;
        [|int|] v2 @varname [|min|] @scope ((L0032,L0043));
        [|int|] v0 @varname [|c|] @scope ((L0023,L0044), (L0049,L0051));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|mainLock|] @scope ((L0008,L0051));



        v3;
        v4;
        v5;
        v6;
        v7;
      
#L13e82c.   v3:= 0  @length 4;
#L13e82e.   if v10 == 0 then goto L13e838;
#L13e832.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.decrementWorkerCount|](v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.decrementWorkerCount:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e838.   v1:= v8.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13e83c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e842.   v4:= v8.[|java:util:concurrent:ThreadPoolExecutor.completedTaskCount|]   @wide;
#L13e846.   v6:= v9.[|java:util:concurrent:ThreadPoolExecutor$Worker.completedTasks|]   @wide;
#L13e84a.   v4:= v4 + v6  @type long;
#L13e84c.   v8.[|java:util:concurrent:ThreadPoolExecutor.completedTaskCount|]  := v4 @wide;
#L13e850.   v4:= v8.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13e854.   call temp:=  [|java:util:HashSet.remove|](v4, v9) @signature [|Ljava/util/HashSet;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13e85a.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e860.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.tryTerminate|](v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.tryTerminate:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13e866.   v4:= v8.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e86a.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v4) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e870.   v0:= temp;
#L13e872.   v4:= 536870912  @length high16;
#L13e876.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateLessThan|](v0, v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateLessThan:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e87c.   v4:= temp;
#L13e87e.   if v4 == 0 then goto L13e8b2;
#L13e882.   if v10 != 0 then goto L13e8c4;
#L13e886.   v4:= v8.[|java:util:concurrent:ThreadPoolExecutor.allowCoreThreadTimeOut|]   @boolean;
#L13e88a.   if v4 == 0 then goto L13e8be;
#L13e88e.   v2:= v3;
#L13e890.   if v2 != 0 then goto L13e8a6;
#L13e894.   v4:= v8.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13e898.   call temp:=  [|java:util:concurrent:BlockingQueue.isEmpty|](v4) @signature [|Ljava/util/concurrent/BlockingQueue;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13e89e.   v4:= temp;
#L13e8a0.   if v4 != 0 then goto L13e8a6;
#L13e8a4.   v2:= 1  @length 4;
#L13e8a6.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e8ac.   v4:= temp;
#L13e8ae.   if v4 < v2 then goto L13e8c4;
#L13e8b2.   return @void ;
#L13e8b4.   v3:= Exception  @type object;
#L13e8b6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e8bc.   throw v3;
#L13e8be.   v2:= v8.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|] ;
#L13e8c2.   goto L13e890;
#L13e8c4.   v4:= 0  @length 4;
#L13e8c6.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.addWorker|](v8, v4, v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e8cc.   goto L13e8b2;
  catch  [|any|] @[L13e842..L13e85a] goto L13e8b4;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.runStateAtLeast|] ([|int|] v1, [|int|] v2) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateAtLeast:(II)Z|] @Access PRIVATE_STATIC {
      local temp ;


        v0;
      
#L13e8ec.   if v1 < v2 then goto L13e8f4;
#L13e8f0.   v0:= 1  @length 4;
#L13e8f2.   return v0;
#L13e8f4.   v0:= 0  @length 4;
#L13e8f6.   goto L13e8f2;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.runStateLessThan|] ([|int|] v1, [|int|] v2) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateLessThan:(II)Z|] @Access PRIVATE_STATIC {
      local temp ;


        v0;
      
#L13e908.   if v1 >= v2 then goto L13e910;
#L13e90c.   v0:= 1  @length 4;
#L13e90e.   return v0;
#L13e910.   v0:= 0  @length 4;
#L13e912.   goto L13e90e;

   }
    procedure [|int|] [|java:util:concurrent:ThreadPoolExecutor.runStateOf|] ([|int|] v1) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateOf:(I)I|] @Access PRIVATE_STATIC {
      local temp ;

        v0;
      
#L13e924.   v0:= -536870912  @length high16;
#L13e928.   v0:= v0 ^& v1  @type int;
#L13e92a.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|] ([|int|] v1) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @Access PRIVATE_STATIC {
      local temp ;

        v0;
      
#L13e93c.    v0:= 0.000000;
#L13e942.   v0:= v0 ^& v1  @type int;
#L13e944.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.afterExecute|] ([|java:util:concurrent:ThreadPoolExecutor|] v0 @type (this), [|java:lang:Runnable|] v1 @type (object), [|java:lang:Throwable|] v2 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.afterExecute:(Ljava/lang/Runnable;Ljava/lang/Throwable;)V|] @Access PROTECTED {
      local temp ;



      
#L13e958.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.allowCoreThreadTimeOut|] ([|java:util:concurrent:ThreadPoolExecutor|] v4 @type (this), [|boolean|] v5) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.allowCoreThreadTimeOut:(Z)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L13e96c.   if v5 == 0 then goto L13e990;
#L13e970.   v0:= v4.[|java:util:concurrent:ThreadPoolExecutor.keepAliveTime|]   @wide;
#L13e974.   v2:= 0  @length wide16;
#L13e978.   v0:= cmp(v0,v2);
#L13e97c.   if v0 > 0 then goto L13e990;
#L13e980.   v0:= new [|java:lang:IllegalArgumentException|];
#L13e984.   v1:= "Core threads must have nonzero keep alive times" @type (object, string);
#L13e988.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13e98e.   throw v0;
#L13e990.   v0:= v4.[|java:util:concurrent:ThreadPoolExecutor.allowCoreThreadTimeOut|]   @boolean;
#L13e994.   if v5 == v0 then goto L13e9a6;
#L13e998.   v4.[|java:util:concurrent:ThreadPoolExecutor.allowCoreThreadTimeOut|]  := v5 @boolean;
#L13e99c.   if v5 == 0 then goto L13e9a6;
#L13e9a0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.interruptIdleWorkers|](v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptIdleWorkers:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13e9a6.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.allowsCoreThreadTimeOut|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.allowsCoreThreadTimeOut:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13e9b8.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.allowCoreThreadTimeOut|]   @boolean;
#L13e9bc.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.awaitTermination|] ([|java:util:concurrent:ThreadPoolExecutor|] v5 @type (this), [|long|] v6, [|java:util:concurrent:TimeUnit|] v8 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|mainLock|] @scope ((L0006,L0030));
        [|long|] v1 @varname [|nanos|] @scope ((L0004,L0030));



        v2;
        v3;
        v4;
      
#L13e9d0.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v8, v6, v7) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13e9d6.   v1:= temp  @type wide;
#L13e9d8.   v0:= v5.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13e9dc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13e9e2.   v3:= v5.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13e9e6.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13e9ec.   v3:= temp;
#L13e9ee.   v4:= 1610612736  @length high16;
#L13e9f2.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateAtLeast|](v3, v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateAtLeast:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13e9f8.   v3:= temp;
#L13e9fa.   if v3 == 0 then goto L13ea08;
#L13e9fe.   v3:= 1  @length 4;
#L13ea00.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ea06.   return v3;
#L13ea08.   v3:= 0  @length wide16;
#L13ea0c.   v3:= cmp(v1,v3);
#L13ea10.   if v3 > 0 then goto L13ea18;
#L13ea14.   v3:= 0  @length 4;
#L13ea16.   goto L13ea00;
#L13ea18.   v3:= v5.[|java:util:concurrent:ThreadPoolExecutor.termination|]   @type object;
#L13ea1c.   call temp:=  [|java:util:concurrent:locks:Condition.awaitNanos|](v3, v1, v2) @signature [|Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13ea22.   v1:= temp  @type wide;
#L13ea24.   goto L13e9e2;
#L13ea26.   v3:= Exception  @type object;
#L13ea28.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ea2e.   throw v3;
  catch  [|any|] @[L13e9e2..L13e9f8] goto L13ea26;
  catch  [|any|] @[L13ea18..L13ea22] goto L13ea26;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.beforeExecute|] ([|java:util:concurrent:ThreadPoolExecutor|] v0 @type (this), [|java:lang:Thread|] v1 @type (object), [|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.beforeExecute:(Ljava/lang/Thread;Ljava/lang/Runnable;)V|] @Access PROTECTED {
      local temp ;



      
#L13ea54.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.ensurePrestart|] ([|java:util:concurrent:ThreadPoolExecutor|] v3 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.ensurePrestart:()V|] @Access  {
      local temp ;
        [|int|] v0 @varname [|wc|] @scope ((L000b,L001b));

        v1;
        v2;
      
#L13ea68.   v2:= 0  @length 4;
#L13ea6a.   v1:= v3.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13ea6e.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13ea74.   v1:= temp;
#L13ea76.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13ea7c.   v0:= temp;
#L13ea7e.   v1:= v3.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|] ;
#L13ea82.   if v0 >= v1 then goto L13ea90;
#L13ea86.   v1:= 1  @length 4;
#L13ea88.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.addWorker|](v3, v2, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13ea8e.   return @void ;
#L13ea90.   if v0 != 0 then goto L13ea8e;
#L13ea94.   v1:= 0  @length 4;
#L13ea96.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.addWorker|](v3, v2, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13ea9c.   goto L13ea8e;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.execute|] ([|java:util:concurrent:ThreadPoolExecutor|] v5 @type (this), [|java:lang:Runnable|] v6 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.execute:(Ljava/lang/Runnable;)V|] @Access PUBLIC {
      local temp ;
        [|int|] v1 @varname [|recheck|] @scope ((L0039,L0054));
        [|int|] v0 @varname [|c|] @scope ((L000f,L005e));


        v2;
        v3;
        v4;
      
#L13eab0.   v4:= 0  @length 4;
#L13eab2.   if v6 != 0 then goto L13eac2;
#L13eab6.   v2:= new [|java:lang:NullPointerException|];
#L13eaba.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13eac0.   throw v2;
#L13eac2.   v2:= v5.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13eac6.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13eacc.   v0:= temp;
#L13eace.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13ead4.   v2:= temp;
#L13ead6.   v3:= v5.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|] ;
#L13eada.   if v2 >= v3 then goto L13eafa;
#L13eade.   v2:= 1  @length 4;
#L13eae0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.addWorker|](v5, v6, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13eae6.   v2:= temp;
#L13eae8.   if v2 == 0 then goto L13eaee;
#L13eaec.   return @void ;
#L13eaee.   v2:= v5.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13eaf2.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13eaf8.   v0:= temp;
#L13eafa.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.isRunning|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isRunning:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13eb00.   v2:= temp;
#L13eb02.   if v2 == 0 then goto L13eb58;
#L13eb06.   v2:= v5.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13eb0a.   call temp:=  [|java:util:concurrent:BlockingQueue.offer|](v2, v6) @signature [|Ljava/util/concurrent/BlockingQueue;.offer:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13eb10.   v2:= temp;
#L13eb12.   if v2 == 0 then goto L13eb58;
#L13eb16.   v2:= v5.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13eb1a.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13eb20.   v1:= temp;
#L13eb22.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.isRunning|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isRunning:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13eb28.   v2:= temp;
#L13eb2a.   if v2 != 0 then goto L13eb42;
#L13eb2e.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.remove|](v5, v6) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.remove:(Ljava/lang/Runnable;)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13eb34.   v2:= temp;
#L13eb36.   if v2 == 0 then goto L13eb42;
#L13eb3a.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.reject|](v5, v6) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.reject:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13eb40.   goto L13eaec;
#L13eb42.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13eb48.   v2:= temp;
#L13eb4a.   if v2 != 0 then goto L13eaec;
#L13eb4e.   v2:= 0  @length 4;
#L13eb50.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.addWorker|](v5, v2, v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13eb56.   goto L13eaec;
#L13eb58.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.addWorker|](v5, v6, v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13eb5e.   v2:= temp;
#L13eb60.   if v2 != 0 then goto L13eaec;
#L13eb64.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.reject|](v5, v6) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.reject:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13eb6a.   goto L13eaec;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.finalize|] ([|java:util:concurrent:ThreadPoolExecutor|] v0 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.finalize:()V|] @Access PROTECTED {
      local temp ;

      
#L13eb7c.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.shutdown|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.shutdown:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13eb82.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:ThreadPoolExecutor.getActiveCount|] ([|java:util:concurrent:ThreadPoolExecutor|] v5 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getActiveCount:()I|] @Access PUBLIC {
      local temp ;
        [|java:util:Iterator|] v0 @varname [|i$|] @scope ((L000c,L0021), (L0026,L002a));
        [|java:util:concurrent:ThreadPoolExecutor$Worker|] v3 @varname [|w|] @scope ((L0018,L0021));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|mainLock|] @scope ((L0002,L002a));
        [|int|] v2 @varname [|n|] @scope ((L0006,L002a));

        v4;
      
#L13eb94.   v1:= v5.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13eb98.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13eb9e.   v2:= 0  @length 4;
#L13eba0.   v4:= v5.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13eba4.   call temp:=  [|java:util:HashSet.iterator|](v4) @signature [|Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13ebaa.   v0:= temp  @type object;
#L13ebac.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13ebb2.   v4:= temp;
#L13ebb4.   if v4 == 0 then goto L13ebe0;
#L13ebb8.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13ebbe.   v3:= temp  @type object;
#L13ebc0.   v3:= ([|java:util:concurrent:ThreadPoolExecutor$Worker|])v3;
#L13ebc4.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.isLocked|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.isLocked:()Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13ebca.   v4:= temp;
#L13ebcc.   if v4 == 0 then goto L13ebac;
#L13ebd0.   v2:= v2 + 1;
#L13ebd4.   goto L13ebac;
#L13ebd6.   v4:= Exception  @type object;
#L13ebd8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ebde.   throw v4;
#L13ebe0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ebe6.   return v2;
  catch  [|any|] @[L13eba0..L13ebca] goto L13ebd6;

   }
    procedure [|long|] [|java:util:concurrent:ThreadPoolExecutor.getCompletedTaskCount|] ([|java:util:concurrent:ThreadPoolExecutor|] v7 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getCompletedTaskCount:()J|] @Access PUBLIC {
      local temp ;
        [|java:util:Iterator|] v0 @varname [|i$|] @scope ((L000d,L001d), (L0022,L0026));
        [|long|] v2 @varname [|n|] @scope ((L0007,L001d), (L0022,L0026));
        [|java:util:concurrent:ThreadPoolExecutor$Worker|] v4 @varname [|w|] @scope ((L0019,L001d));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|mainLock|] @scope ((L0002,L0026));

        v3;
        v5;
        v6;
      
#L13ec04.   v1:= v7.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13ec08.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ec0e.   v2:= v7.[|java:util:concurrent:ThreadPoolExecutor.completedTaskCount|]   @wide;
#L13ec12.   v5:= v7.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13ec16.   call temp:=  [|java:util:HashSet.iterator|](v5) @signature [|Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13ec1c.   v0:= temp  @type object;
#L13ec1e.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13ec24.   v5:= temp;
#L13ec26.   if v5 == 0 then goto L13ec48;
#L13ec2a.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13ec30.   v4:= temp  @type object;
#L13ec32.   v4:= ([|java:util:concurrent:ThreadPoolExecutor$Worker|])v4;
#L13ec36.   v5:= v4.[|java:util:concurrent:ThreadPoolExecutor$Worker.completedTasks|]   @wide;
#L13ec3a.   v2:= v2 + v5  @type long;
#L13ec3c.   goto L13ec1e;
#L13ec3e.   v5:= Exception  @type object;
#L13ec40.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ec46.   throw v5;
#L13ec48.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ec4e.   return v2  @type wide;
  catch  [|any|] @[L13ec0e..L13ec3a] goto L13ec3e;

   }
    procedure [|int|] [|java:util:concurrent:ThreadPoolExecutor.getCorePoolSize|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getCorePoolSize:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13ec6c.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|] ;
#L13ec70.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:ThreadPoolExecutor.getKeepAliveTime|] ([|java:util:concurrent:ThreadPoolExecutor|] v3 @type (this), [|java:util:concurrent:TimeUnit|] v4 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getKeepAliveTime:(Ljava/util/concurrent/TimeUnit;)J|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L13ec84.   v0:= v3.[|java:util:concurrent:ThreadPoolExecutor.keepAliveTime|]   @wide;
#L13ec88.   v2:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13ec8c.   call temp:=  [|java:util:concurrent:TimeUnit.convert|](v4, v0, v1, v2) @signature [|Ljava/util/concurrent/TimeUnit;.convert:(JLjava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13ec92.   v0:= temp  @type wide;
#L13ec94.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:ThreadPoolExecutor.getLargestPoolSize|] ([|java:util:concurrent:ThreadPoolExecutor|] v2 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getLargestPoolSize:()I|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|mainLock|] @scope ((L0002,L0010));

        v1;
      
#L13eca8.   v0:= v2.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13ecac.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ecb2.   v1:= v2.[|java:util:concurrent:ThreadPoolExecutor.largestPoolSize|] ;
#L13ecb6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ecbc.   return v1;
#L13ecbe.   v1:= Exception  @type object;
#L13ecc0.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ecc6.   throw v1;
  catch  [|any|] @[L13ecb2..L13ecb6] goto L13ecbe;

   }
    procedure [|int|] [|java:util:concurrent:ThreadPoolExecutor.getMaximumPoolSize|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getMaximumPoolSize:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13ece4.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.maximumPoolSize|] ;
#L13ece8.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:ThreadPoolExecutor.getPoolSize|] ([|java:util:concurrent:ThreadPoolExecutor|] v3 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getPoolSize:()I|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|mainLock|] @scope ((L0002,L0024));

        v1;
        v2;
      
#L13ecfc.   v0:= v3.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13ed00.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ed06.   v1:= v3.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13ed0a.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13ed10.   v1:= temp;
#L13ed12.   v2:= 1073741824  @length high16;
#L13ed16.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateAtLeast|](v1, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateAtLeast:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13ed1c.   v1:= temp;
#L13ed1e.   if v1 == 0 then goto L13ed2c;
#L13ed22.   v1:= 0  @length 4;
#L13ed24.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ed2a.   return v1;
#L13ed2c.   v1:= v3.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13ed30.   call temp:=  [|java:util:HashSet.size|](v1) @signature [|Ljava/util/HashSet;.size:()I|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13ed36.   v1:= temp;
#L13ed38.   goto L13ed24;
#L13ed3a.   v1:= Exception  @type object;
#L13ed3c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ed42.   throw v1;
  catch  [|any|] @[L13ed06..L13ed1c] goto L13ed3a;
  catch  [|any|] @[L13ed2c..L13ed36] goto L13ed3a;

   }
    procedure [|java:util:concurrent:BlockingQueue|] [|java:util:concurrent:ThreadPoolExecutor.getQueue|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getQueue:()Ljava/util/concurrent/BlockingQueue;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13ed68.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13ed6c.   return v0  @type object;

   }
    procedure [|java:util:concurrent:RejectedExecutionHandler|] [|java:util:concurrent:ThreadPoolExecutor.getRejectedExecutionHandler|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getRejectedExecutionHandler:()Ljava/util/concurrent/RejectedExecutionHandler;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13ed80.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.handler|]   @type object;
#L13ed84.   return v0  @type object;

   }
    procedure [|long|] [|java:util:concurrent:ThreadPoolExecutor.getTaskCount|] ([|java:util:concurrent:ThreadPoolExecutor|] v7 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getTaskCount:()J|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:ThreadPoolExecutor$Worker|] v4 @varname [|w|] @scope ((L0019,L0026));
        [|java:util:Iterator|] v0 @varname [|i$|] @scope ((L000d,L0032));
        [|long|] v2 @varname [|n|] @scope ((L0007,L0032));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|mainLock|] @scope ((L0002,L0037));

        v3;
        v5;
        v6;
      
#L13ed98.   v1:= v7.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13ed9c.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13eda2.   v2:= v7.[|java:util:concurrent:ThreadPoolExecutor.completedTaskCount|]   @wide;
#L13eda6.   v5:= v7.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13edaa.   call temp:=  [|java:util:HashSet.iterator|](v5) @signature [|Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13edb0.   v0:= temp  @type object;
#L13edb2.   call temp:=  [|java:util:Iterator.hasNext|](v0) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13edb8.   v5:= temp;
#L13edba.   if v5 == 0 then goto L13ede4;
#L13edbe.   call temp:=  [|java:util:Iterator.next|](v0) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13edc4.   v4:= temp  @type object;
#L13edc6.   v4:= ([|java:util:concurrent:ThreadPoolExecutor$Worker|])v4;
#L13edca.   v5:= v4.[|java:util:concurrent:ThreadPoolExecutor$Worker.completedTasks|]   @wide;
#L13edce.   v2:= v2 + v5  @type long;
#L13edd0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.isLocked|](v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.isLocked:()Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13edd6.   v5:= temp;
#L13edd8.   if v5 == 0 then goto L13edb2;
#L13eddc.   v5:= 1  @length wide16;
#L13ede0.   v2:= v2 + v5  @type long;
#L13ede2.   goto L13edb2;
#L13ede4.   v5:= v7.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13ede8.   call temp:=  [|java:util:concurrent:BlockingQueue.size|](v5) @signature [|Ljava/util/concurrent/BlockingQueue;.size:()I|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13edee.   v5:= temp;
#L13edf0.   v5:= (long)v5  @type i2l;
#L13edf2.   v5:= v5 + v2  @type long;
#L13edf4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13edfa.   return v5  @type wide;
#L13edfc.   v5:= Exception  @type object;
#L13edfe.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13ee04.   throw v5;
  catch  [|any|] @[L13eda2..L13edee] goto L13edfc;

   }
    procedure [|java:util:concurrent:ThreadFactory|] [|java:util:concurrent:ThreadPoolExecutor.getThreadFactory|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getThreadFactory:()Ljava/util/concurrent/ThreadFactory;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13ee24.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.threadFactory|]   @type object;
#L13ee28.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.isRunningOrShutdown|] ([|java:util:concurrent:ThreadPoolExecutor|] v2 @type (this), [|boolean|] v3) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isRunningOrShutdown:(Z)Z|] @Access FINAL {
      local temp ;
        [|int|] v0 @varname [|rs|] @scope ((L000a,L0016));


        v1;
      
#L13ee3c.   v1:= v2.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13ee40.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13ee46.   v1:= temp;
#L13ee48.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateOf|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13ee4e.   v0:= temp;
#L13ee50.   v1:= -536870912  @length high16;
#L13ee54.   if v0 == v1 then goto L13ee60;
#L13ee58.   if v0 != 0 then goto L13ee64;
#L13ee5c.   if v3 == 0 then goto L13ee64;
#L13ee60.   v1:= 1  @length 4;
#L13ee62.   return v1;
#L13ee64.   v1:= 0  @length 4;
#L13ee66.   goto L13ee62;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.isShutdown|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isShutdown:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13ee78.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13ee7c.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13ee82.   v0:= temp;
#L13ee84.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.isRunning|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isRunning:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13ee8a.   v0:= temp;
#L13ee8c.   if v0 != 0 then goto L13ee94;
#L13ee90.   v0:= 1  @length 4;
#L13ee92.   return v0;
#L13ee94.   v0:= 0  @length 4;
#L13ee96.   goto L13ee92;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.isTerminated|] ([|java:util:concurrent:ThreadPoolExecutor|] v2 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isTerminated:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L13eea8.   v0:= v2.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13eeac.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13eeb2.   v0:= temp;
#L13eeb4.   v1:= 1610612736  @length high16;
#L13eeb8.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateAtLeast|](v0, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateAtLeast:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13eebe.   v0:= temp;
#L13eec0.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.isTerminating|] ([|java:util:concurrent:ThreadPoolExecutor|] v2 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isTerminating:()Z|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|c|] @scope ((L0006,L0018));

        v1;
      
#L13eed4.   v1:= v2.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13eed8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13eede.   v0:= temp;
#L13eee0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.isRunning|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isRunning:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13eee6.   v1:= temp;
#L13eee8.   if v1 != 0 then goto L13ef00;
#L13eeec.   v1:= 1610612736  @length high16;
#L13eef0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateLessThan|](v0, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateLessThan:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13eef6.   v1:= temp;
#L13eef8.   if v1 == 0 then goto L13ef00;
#L13eefc.   v1:= 1  @length 4;
#L13eefe.   return v1;
#L13ef00.   v1:= 0  @length 4;
#L13ef02.   goto L13eefe;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.onShutdown|] ([|java:util:concurrent:ThreadPoolExecutor|] v0 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.onShutdown:()V|] @Access  {
      local temp ;

      
#L13ef14.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:ThreadPoolExecutor.prestartAllCoreThreads|] ([|java:util:concurrent:ThreadPoolExecutor|] v3 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.prestartAllCoreThreads:()I|] @Access PUBLIC {
      local temp ;
        [|int|] v0 @varname [|n|] @scope ((L0001,L000d));

        v1;
        v2;
      
#L13ef28.   v0:= 0  @length 4;
#L13ef2a.   v1:= 0  @length 4;
#L13ef2c.   v2:= 1  @length 4;
#L13ef2e.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.addWorker|](v3, v1, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13ef34.   v1:= temp;
#L13ef36.   if v1 == 0 then goto L13ef40;
#L13ef3a.   v0:= v0 + 1;
#L13ef3e.   goto L13ef2a;
#L13ef40.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.prestartCoreThread|] ([|java:util:concurrent:ThreadPoolExecutor|] v3 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.prestartCoreThread:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
        v2;
      
#L13ef54.   v0:= 1  @length 4;
#L13ef56.   v1:= v3.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13ef5a.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v1) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13ef60.   v1:= temp;
#L13ef62.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13ef68.   v1:= temp;
#L13ef6a.   v2:= v3.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|] ;
#L13ef6e.   if v1 >= v2 then goto L13ef82;
#L13ef72.   v1:= 0  @length 4;
#L13ef74.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.addWorker|](v3, v1, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13ef7a.   v1:= temp;
#L13ef7c.   if v1 == 0 then goto L13ef82;
#L13ef80.   return v0;
#L13ef82.   v0:= 0  @length 4;
#L13ef84.   goto L13ef80;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.purge|] ([|java:util:concurrent:ThreadPoolExecutor|] v8 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.purge:()V|] @Access PUBLIC {
      local temp ;
        [|java:lang:Runnable|] v6 @varname [|r|] @scope ((L0012,L0018), (L002d,L0040));
        [|java:util:Iterator|] v3 @varname [|it|] @scope ((L0006,L0022));
        [|java:lang:Object|][] v0 @varname [|arr$|] @scope ((L0027,L0040));
        [|java:util:ConcurrentModificationException|] v1 @varname [|fallThrough|] @scope ((L0023,L0040));
        [|int|] v2 @varname [|i$|] @scope ((L0029,L0040));
        [|int|] v4 @varname [|len$|] @scope ((L0028,L0040));
        [|java:util:concurrent:BlockingQueue|] v5 @varname [|q|] @scope ((L0002,L0044));

        v7;
      
#L13ef98.   v5:= v8.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13ef9c.   call temp:=  [|java:util:concurrent:BlockingQueue.iterator|](v5) @signature [|Ljava/util/concurrent/BlockingQueue;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13efa2.   v3:= temp  @type object;
#L13efa4.   call temp:=  [|java:util:Iterator.hasNext|](v3) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13efaa.   v7:= temp;
#L13efac.   if v7 == 0 then goto L13f018;
#L13efb0.   call temp:=  [|java:util:Iterator.next|](v3) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13efb6.   v6:= temp  @type object;
#L13efb8.   v6:= ([|java:lang:Runnable|])v6;
#L13efbc.   v7:= instanceof @varname v6 @type [|java:util:concurrent:Future|];
#L13efc0.   if v7 == 0 then goto L13efa4;
#L13efc4.   v6:= ([|java:util:concurrent:Future|])v6;
#L13efc8.   call temp:=  [|java:util:concurrent:Future.isCancelled|](v6) @signature [|Ljava/util/concurrent/Future;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L13efce.   v7:= temp;
#L13efd0.   if v7 == 0 then goto L13efa4;
#L13efd4.   call temp:=  [|java:util:Iterator.remove|](v3) @signature [|Ljava/util/Iterator;.remove:()V|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13efda.   goto L13efa4;
#L13efdc.   v1:= Exception  @type object;
#L13efde.   call temp:=  [|java:util:concurrent:BlockingQueue.toArray|](v5) @signature [|Ljava/util/concurrent/BlockingQueue;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13efe4.   v0:= temp  @type object;
#L13efe6.   v4:= v0.length;
#L13efe8.   v2:= 0  @length 4;
#L13efea.   if v2 >= v4 then goto L13f018;
#L13efee.   v6:= v0[v2]  @type object;
#L13eff2.   v7:= instanceof @varname v6 @type [|java:util:concurrent:Future|];
#L13eff6.   if v7 == 0 then goto L13f012;
#L13effa.   v7:= v6  @type object;
#L13effc.   v7:= ([|java:util:concurrent:Future|])v7;
#L13f000.   call temp:=  [|java:util:concurrent:Future.isCancelled|](v7) @signature [|Ljava/util/concurrent/Future;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:Future|] @type interface;
#L13f006.   v7:= temp;
#L13f008.   if v7 == 0 then goto L13f012;
#L13f00c.   call temp:=  [|java:util:concurrent:BlockingQueue.remove|](v5, v6) @signature [|Ljava/util/concurrent/BlockingQueue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13f012.   v2:= v2 + 1;
#L13f016.   goto L13efea;
#L13f018.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.tryTerminate|](v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.tryTerminate:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f01e.   return @void ;
  catch  [|java:util:ConcurrentModificationException|] @[L13ef9c..L13efda] goto L13efdc;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.reject|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this), [|java:lang:Runnable|] v2 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.reject:(Ljava/lang/Runnable;)V|] @Access FINAL {
      local temp ;


        v0;
      
#L13f040.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.handler|]   @type object;
#L13f044.   call temp:=  [|java:util:concurrent:RejectedExecutionHandler.rejectedExecution|](v0, v2, v1) @signature [|Ljava/util/concurrent/RejectedExecutionHandler;.rejectedExecution:(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V|] @classDescriptor [|java:util:concurrent:RejectedExecutionHandler|] @type interface;
#L13f04a.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ThreadPoolExecutor.remove|] ([|java:util:concurrent:ThreadPoolExecutor|] v2 @type (this), [|java:lang:Runnable|] v3 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.remove:(Ljava/lang/Runnable;)Z|] @Access PUBLIC {
      local temp ;
        [|boolean|] v0 @varname [|removed|] @scope ((L0006,L000a));


        v1;
      
#L13f05c.   v1:= v2.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13f060.   call temp:=  [|java:util:concurrent:BlockingQueue.remove|](v1, v3) @signature [|Ljava/util/concurrent/BlockingQueue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13f066.   v0:= temp;
#L13f068.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.tryTerminate|](v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.tryTerminate:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f06e.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.runWorker|] ([|java:util:concurrent:ThreadPoolExecutor|] v9 @type (this), [|java:util:concurrent:ThreadPoolExecutor$Worker|] v10 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runWorker:(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V|] @Access FINAL {
      local temp ;
        [|java:lang:Throwable|] v2 @varname [|thrown|] @scope ((L001c,L002c), (L0031,L0039), (L0044,L004f));
        [|java:lang:RuntimeException|] v3 @varname [|x|] @scope ((L0032,L0034), (L0045,L0047), (L0048,L004f));
        [|boolean|] v0 @varname [|completedAbruptly|] @scope ((L0008,L0054));
        [|java:lang:Runnable|] v1 @varname [|task|] @scope ((L0004,L0054));


        v4;
        v5;
        v6;
        v7;
        v8;
      
#L13f080.   v7:= 1  @length wide16;
#L13f084.   v1:= v10.[|java:util:concurrent:ThreadPoolExecutor$Worker.firstTask|]   @type object;
#L13f088.   v4:= 0  @length 4;
#L13f08a.   v10.[|java:util:concurrent:ThreadPoolExecutor$Worker.firstTask|]  := v4 @type object;
#L13f08e.   v0:= 1  @length 4;
#L13f090.   if v1 != 0 then goto L13f0a0;
#L13f094.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.getTask|](v9) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getTask:()Ljava/lang/Runnable;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f09a.   v1:= temp  @type object;
#L13f09c.   if v1 == 0 then goto L13f11e;
#L13f0a0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.lock|](v10) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.lock:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13f0a6.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.clearInterruptsForTaskRun|](v9) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.clearInterruptsForTaskRun:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f0ac.   v4:= v10.[|java:util:concurrent:ThreadPoolExecutor$Worker.thread|]   @type object;
#L13f0b0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.beforeExecute|](v9, v4, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.beforeExecute:(Ljava/lang/Thread;Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f0b6.   v2:= 0  @length 4;
#L13f0b8.   call temp:=  [|java:lang:Runnable.run|](v1) @signature [|Ljava/lang/Runnable;.run:()V|] @classDescriptor [|java:lang:Runnable|] @type interface;
#L13f0be.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.afterExecute|](v9, v1, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.afterExecute:(Ljava/lang/Runnable;Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f0c4.   v1:= 0  @length 4;
#L13f0c6.   v4:= v10.[|java:util:concurrent:ThreadPoolExecutor$Worker.completedTasks|]   @wide;
#L13f0ca.   v4:= v4 + v7  @type long;
#L13f0cc.   v10.[|java:util:concurrent:ThreadPoolExecutor$Worker.completedTasks|]  := v4 @wide;
#L13f0d0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.unlock|](v10) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.unlock:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13f0d6.   goto L13f090;
#L13f0d8.   v4:= Exception  @type object;
#L13f0da.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.processWorkerExit|](v9, v10, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.processWorkerExit:(Ljava/util/concurrent/ThreadPoolExecutor$Worker;Z)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f0e0.   throw v4;
#L13f0e2.   v3:= Exception  @type object;
#L13f0e4.   v2:= v3  @type object;
#L13f0e6.   throw v3;
#L13f0e8.   v4:= Exception  @type object;
#L13f0ea.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.afterExecute|](v9, v1, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.afterExecute:(Ljava/lang/Runnable;Ljava/lang/Throwable;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f0f0.   throw v4;
#L13f0f2.   v4:= Exception  @type object;
#L13f0f4.   v1:= 0  @length 4;
#L13f0f6.   v5:= v10.[|java:util:concurrent:ThreadPoolExecutor$Worker.completedTasks|]   @wide;
#L13f0fa.   v5:= v5 + v7  @type long;
#L13f0fc.   v10.[|java:util:concurrent:ThreadPoolExecutor$Worker.completedTasks|]  := v5 @wide;
#L13f100.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.unlock|](v10) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.unlock:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13f106.   throw v4;
#L13f108.   v3:= Exception  @type object;
#L13f10a.   v2:= v3  @type object;
#L13f10c.   throw v3;
#L13f10e.   v3:= Exception  @type object;
#L13f110.   v2:= v3  @type object;
#L13f112.   v4:= new [|java:lang:Error|];
#L13f116.   call temp:=  [|java:lang:Error.<init>|](v4, v3) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13f11c.   throw v4;
#L13f11e.   v0:= 0  @length 4;
#L13f120.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.processWorkerExit|](v9, v10, v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.processWorkerExit:(Ljava/util/concurrent/ThreadPoolExecutor$Worker;Z)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f126.   return @void ;
  catch  [|any|] @[L13f094..L13f0ac] goto L13f0d8;
  catch  [|any|] @[L13f0ac..L13f0b6] goto L13f0f2;
  catch  [|java:lang:RuntimeException|] @[L13f0b8..L13f0be] goto L13f0e2;
  catch  [|java:lang:Error|] @[L13f0b8..L13f0be] goto L13f108;
  catch  [|java:lang:Throwable|] @[L13f0b8..L13f0be] goto L13f10e;
  catch  [|any|] @[L13f0b8..L13f0be] goto L13f0e8;
  catch  [|any|] @[L13f0be..L13f0c4] goto L13f0f2;
  catch  [|any|] @[L13f0c6..L13f0d6] goto L13f0d8;
  catch  [|any|] @[L13f0e6..L13f0e8] goto L13f0e8;
  catch  [|any|] @[L13f0ea..L13f0f2] goto L13f0f2;
  catch  [|any|] @[L13f0f6..L13f108] goto L13f0d8;
  catch  [|any|] @[L13f10c..L13f11e] goto L13f0e8;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.setCorePoolSize|] ([|java:util:concurrent:ThreadPoolExecutor|] v5 @type (this), [|int|] v6) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.setCorePoolSize:(I)V|] @Access PUBLIC {
      local temp ;
        [|int|] v1 @varname [|k|] @scope ((L002a,L002b), (L002b,L002d), (L002d,L0040), (L0040,L0041));
        [|int|] v0 @varname [|delta|] @scope ((L000c,L0041));


        v2;
        v3;
        v4;
      
#L13f194.   if v6 >= 0 then goto L13f1a4;
#L13f198.   v3:= new [|java:lang:IllegalArgumentException|];
#L13f19c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v3) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13f1a2.   throw v3;
#L13f1a4.   v3:= v5.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|] ;
#L13f1a8.   v0:= v6 - v3  @type int;
#L13f1ac.   v5.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|]  := v6;
#L13f1b0.   v3:= v5.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13f1b4.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13f1ba.   v3:= temp;
#L13f1bc.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f1c2.   v3:= temp;
#L13f1c4.   if v3 <= v6 then goto L13f1d0;
#L13f1c8.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.interruptIdleWorkers|](v5) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptIdleWorkers:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f1ce.   return @void ;
#L13f1d0.   if v0 <= 0 then goto L13f1ce;
#L13f1d4.   v3:= v5.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13f1d8.   call temp:=  [|java:util:concurrent:BlockingQueue.size|](v3) @signature [|Ljava/util/concurrent/BlockingQueue;.size:()I|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13f1de.   v3:= temp;
#L13f1e0.   call temp:=  [|java:lang:Math.min|](v0, v3) @signature [|Ljava/lang/Math;.min:(II)I|] @classDescriptor [|java:lang:Math|] @type static;
#L13f1e6.   v1:= temp;
#L13f1e8.   v2:= v1;
#L13f1ea.   v1:= v2 + -1;
#L13f1ee.   if v2 <= 0 then goto L13f1ce;
#L13f1f2.   v3:= 0  @length 4;
#L13f1f4.   v4:= 1  @length 4;
#L13f1f6.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.addWorker|](v5, v3, v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.addWorker:(Ljava/lang/Runnable;Z)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f1fc.   v3:= temp;
#L13f1fe.   if v3 == 0 then goto L13f1ce;
#L13f202.   v3:= v5.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13f206.   call temp:=  [|java:util:concurrent:BlockingQueue.isEmpty|](v3) @signature [|Ljava/util/concurrent/BlockingQueue;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13f20c.   v3:= temp;
#L13f20e.   if v3 != 0 then goto L13f1ce;
#L13f212.   v2:= v1;
#L13f214.   goto L13f1ea;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.setKeepAliveTime|] ([|java:util:concurrent:ThreadPoolExecutor|] v8 @type (this), [|long|] v9, [|java:util:concurrent:TimeUnit|] v11 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.setKeepAliveTime:(JLjava/util/concurrent/TimeUnit;)V|] @Access PUBLIC {
      local temp ;
        [|long|] v0 @varname [|delta|] @scope ((L0026,L0030));
        [|long|] v2 @varname [|keepAliveTime|] @scope ((L0022,L0030));



        v1;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L13f228.   v6:= 0  @length wide16;
#L13f22c.   v4:= cmp(v9,v6);
#L13f230.   if v4 >= 0 then goto L13f240;
#L13f234.   v4:= new [|java:lang:IllegalArgumentException|];
#L13f238.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13f23e.   throw v4;
#L13f240.   v4:= cmp(v9,v6);
#L13f244.   if v4 != 0 then goto L13f264;
#L13f248.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.allowsCoreThreadTimeOut|](v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.allowsCoreThreadTimeOut:()Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f24e.   v4:= temp;
#L13f250.   if v4 == 0 then goto L13f264;
#L13f254.   v4:= new [|java:lang:IllegalArgumentException|];
#L13f258.   v5:= "Core threads must have nonzero keep alive times" @type (object, string);
#L13f25c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v4, v5) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13f262.   throw v4;
#L13f264.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v11, v9, v10) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13f26a.   v2:= temp  @type wide;
#L13f26c.   v4:= v8.[|java:util:concurrent:ThreadPoolExecutor.keepAliveTime|]   @wide;
#L13f270.   v0:= v2 - v4  @type long;
#L13f274.   v8.[|java:util:concurrent:ThreadPoolExecutor.keepAliveTime|]  := v2 @wide;
#L13f278.   v4:= cmp(v0,v6);
#L13f27c.   if v4 >= 0 then goto L13f286;
#L13f280.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.interruptIdleWorkers|](v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptIdleWorkers:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f286.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.setMaximumPoolSize|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.setMaximumPoolSize:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13f298.   if v2 <= 0 then goto L13f2a4;
#L13f29c.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.corePoolSize|] ;
#L13f2a0.   if v2 >= v0 then goto L13f2b0;
#L13f2a4.   v0:= new [|java:lang:IllegalArgumentException|];
#L13f2a8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13f2ae.   throw v0;
#L13f2b0.   v1.[|java:util:concurrent:ThreadPoolExecutor.maximumPoolSize|]  := v2;
#L13f2b4.   v0:= v1.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13f2b8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13f2be.   v0:= temp;
#L13f2c0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f2c6.   v0:= temp;
#L13f2c8.   if v0 <= v2 then goto L13f2d2;
#L13f2cc.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.interruptIdleWorkers|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptIdleWorkers:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f2d2.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.setRejectedExecutionHandler|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this), [|java:util:concurrent:RejectedExecutionHandler|] v2 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.setRejectedExecutionHandler:(Ljava/util/concurrent/RejectedExecutionHandler;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13f2e4.   if v2 != 0 then goto L13f2f4;
#L13f2e8.   v0:= new [|java:lang:NullPointerException|];
#L13f2ec.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13f2f2.   throw v0;
#L13f2f4.   v1.[|java:util:concurrent:ThreadPoolExecutor.handler|]  := v2 @type object;
#L13f2f8.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.setThreadFactory|] ([|java:util:concurrent:ThreadPoolExecutor|] v1 @type (this), [|java:util:concurrent:ThreadFactory|] v2 @type (object)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.setThreadFactory:(Ljava/util/concurrent/ThreadFactory;)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13f30c.   if v2 != 0 then goto L13f31c;
#L13f310.   v0:= new [|java:lang:NullPointerException|];
#L13f314.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13f31a.   throw v0;
#L13f31c.   v1.[|java:util:concurrent:ThreadPoolExecutor.threadFactory|]  := v2 @type object;
#L13f320.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.shutdown|] ([|java:util:concurrent:ThreadPoolExecutor|] v2 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.shutdown:()V|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|mainLock|] @scope ((L0002,L001e));

        v1;
      
#L13f334.   v0:= v2.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13f338.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f33e.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.checkShutdownAccess|](v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.checkShutdownAccess:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f344.   v1:= 0  @length 4;
#L13f346.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.advanceRunState|](v2, v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.advanceRunState:(I)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f34c.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.interruptIdleWorkers|](v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptIdleWorkers:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f352.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.onShutdown|](v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.onShutdown:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f358.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f35e.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.tryTerminate|](v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.tryTerminate:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f364.   return @void ;
#L13f366.   v1:= Exception  @type object;
#L13f368.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f36e.   throw v1;
  catch  [|any|] @[L13f33e..L13f358] goto L13f366;

   }
    procedure [|java:util:List|] [|java:util:concurrent:ThreadPoolExecutor.shutdownNow|] ([|java:util:concurrent:ThreadPoolExecutor|] v3 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.shutdownNow:()Ljava/util/List;|] @Access PUBLIC {
      local temp ;
        [|java:util:List|] v1 @varname [|tasks|] @scope ((L0014,L001b));
        [|java:util:concurrent:locks:ReentrantLock|] v0 @varname [|mainLock|] @scope ((L0002,L0020));

        v2;
      
#L13f38c.   v0:= v3.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13f390.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f396.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.checkShutdownAccess|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.checkShutdownAccess:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f39c.   v2:= 536870912  @length high16;
#L13f3a0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.advanceRunState|](v3, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.advanceRunState:(I)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f3a6.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.interruptWorkers|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptWorkers:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f3ac.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.drainQueue|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.drainQueue:()Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f3b2.   v1:= temp  @type object;
#L13f3b4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f3ba.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.tryTerminate|](v3) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.tryTerminate:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f3c0.   return v1  @type object;
#L13f3c2.   v2:= Exception  @type object;
#L13f3c4.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v0) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f3ca.   throw v2;
  catch  [|any|] @[L13f396..L13f3b2] goto L13f3c2;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.terminated|] ([|java:util:concurrent:ThreadPoolExecutor|] v0 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.terminated:()V|] @Access PROTECTED {
      local temp ;

      
#L13f3e8.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:ThreadPoolExecutor.toString|] ([|java:util:concurrent:ThreadPoolExecutor|] v11 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;
        [|java:util:Iterator|] v1 @varname [|i$|] @scope ((L0014,L002c), (L0031,L00a1));
        [|int|] v3 @varname [|nactive|] @scope ((L0008,L002c), (L0031,L00a1));
        [|long|] v4 @varname [|ncompleted|] @scope ((L0007,L002c), (L0031,L00a1));
        [|int|] v6 @varname [|nworkers|] @scope ((L000e,L002c), (L0031,L00a1));
        [|java:util:concurrent:ThreadPoolExecutor$Worker|] v8 @varname [|w|] @scope ((L0020,L002c));
        [|java:lang:String|] v7 @varname [|rs|] @scope ((L0043,L0093));
        [|int|] v0 @varname [|c|] @scope ((L003a,L00a1));
        [|java:util:concurrent:locks:ReentrantLock|] v2 @varname [|mainLock|] @scope ((L0002,L00a1));

        v5;
        v9;
        v10;
      
#L13f3fc.   v2:= v11.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13f400.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f406.   v4:= v11.[|java:util:concurrent:ThreadPoolExecutor.completedTaskCount|]   @wide;
#L13f40a.   v3:= 0  @length 4;
#L13f40c.   v9:= v11.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13f410.   call temp:=  [|java:util:HashSet.size|](v9) @signature [|Ljava/util/HashSet;.size:()I|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13f416.   v6:= temp;
#L13f418.   v9:= v11.[|java:util:concurrent:ThreadPoolExecutor.workers|]   @type object;
#L13f41c.   call temp:=  [|java:util:HashSet.iterator|](v9) @signature [|Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;|] @classDescriptor [|java:util:HashSet|] @type virtual;
#L13f422.   v1:= temp  @type object;
#L13f424.   call temp:=  [|java:util:Iterator.hasNext|](v1) @signature [|Ljava/util/Iterator;.hasNext:()Z|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13f42a.   v9:= temp;
#L13f42c.   if v9 == 0 then goto L13f45e;
#L13f430.   call temp:=  [|java:util:Iterator.next|](v1) @signature [|Ljava/util/Iterator;.next:()Ljava/lang/Object;|] @classDescriptor [|java:util:Iterator|] @type interface;
#L13f436.   v8:= temp  @type object;
#L13f438.   v8:= ([|java:util:concurrent:ThreadPoolExecutor$Worker|])v8;
#L13f43c.   v9:= v8.[|java:util:concurrent:ThreadPoolExecutor$Worker.completedTasks|]   @wide;
#L13f440.   v4:= v4 + v9  @type long;
#L13f442.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor$Worker.isLocked|](v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor$Worker;.isLocked:()Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor$Worker|] @type virtual;
#L13f448.   v9:= temp;
#L13f44a.   if v9 == 0 then goto L13f424;
#L13f44e.   v3:= v3 + 1;
#L13f452.   goto L13f424;
#L13f454.   v9:= Exception  @type object;
#L13f456.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f45c.   throw v9;
#L13f45e.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f464.   v9:= v11.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13f468.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v9) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13f46e.   v0:= temp;
#L13f470.   v9:= 0  @length 4;
#L13f472.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateLessThan|](v0, v9) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateLessThan:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f478.   v9:= temp;
#L13f47a.   if v9 == 0 then goto L13f522;
#L13f47e.   v7:= "Running" @type (object, string);
#L13f482.   v9:= new [|java:lang:StringBuilder|];
#L13f486.   call temp:=  [|java:lang:StringBuilder.<init>|](v9) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L13f48c.   call temp:=  [|java:lang:Object.toString|](v11) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L13f492.   v10:= temp  @type object;
#L13f494.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f49a.   v9:= temp  @type object;
#L13f49c.   v10:= "[" @type (object, string);
#L13f4a0.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f4a6.   v9:= temp  @type object;
#L13f4a8.   call temp:=  [|java:lang:StringBuilder.append|](v9, v7) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f4ae.   v9:= temp  @type object;
#L13f4b0.   v10:= ", pool size = " @type (object, string);
#L13f4b4.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f4ba.   v9:= temp  @type object;
#L13f4bc.   call temp:=  [|java:lang:StringBuilder.append|](v9, v6) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f4c2.   v9:= temp  @type object;
#L13f4c4.   v10:= ", active threads = " @type (object, string);
#L13f4c8.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f4ce.   v9:= temp  @type object;
#L13f4d0.   call temp:=  [|java:lang:StringBuilder.append|](v9, v3) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f4d6.   v9:= temp  @type object;
#L13f4d8.   v10:= ", queued tasks = " @type (object, string);
#L13f4dc.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f4e2.   v9:= temp  @type object;
#L13f4e4.   v10:= v11.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13f4e8.   call temp:=  [|java:util:concurrent:BlockingQueue.size|](v10) @signature [|Ljava/util/concurrent/BlockingQueue;.size:()I|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13f4ee.   v10:= temp;
#L13f4f0.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f4f6.   v9:= temp  @type object;
#L13f4f8.   v10:= ", completed tasks = " @type (object, string);
#L13f4fc.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f502.   v9:= temp  @type object;
#L13f504.   call temp:=  [|java:lang:StringBuilder.append|](v9, v4, v5) @signature [|Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f50a.   v9:= temp  @type object;
#L13f50c.   v10:= "]" @type (object, string);
#L13f510.   call temp:=  [|java:lang:StringBuilder.append|](v9, v10) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f516.   v9:= temp  @type object;
#L13f518.   call temp:=  [|java:lang:StringBuilder.toString|](v9) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L13f51e.   v9:= temp  @type object;
#L13f520.   return v9  @type object;
#L13f522.   v9:= 1610612736  @length high16;
#L13f526.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateAtLeast|](v0, v9) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateAtLeast:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f52c.   v9:= temp;
#L13f52e.   if v9 == 0 then goto L13f538;
#L13f532.   v7:= "Terminated" @type (object, string);
#L13f536.   goto L13f482;
#L13f538.   v7:= "Shutting down" @type (object, string);
#L13f53c.   goto L13f482;
  catch  [|any|] @[L13f406..L13f448] goto L13f454;

   }
    procedure [|void|] [|java:util:concurrent:ThreadPoolExecutor.tryTerminate|] ([|java:util:concurrent:ThreadPoolExecutor|] v6 @type (this)) @owner [|java:util:concurrent:ThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.tryTerminate:()V|] @Access FINAL {
      local temp ;
        [|int|] v0 @varname [|c|] @scope ((L0008,L0076));
        [|java:util:concurrent:locks:ReentrantLock|] v1 @varname [|mainLock|] @scope ((L0030,L0076));

        v2;
        v3;
        v4;
        v5;
      
#L13f55c.   v5:= 1073741824  @length high16;
#L13f560.   v2:= v6.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13f564.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.get|](v2) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.get:()I|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13f56a.   v0:= temp;
#L13f56c.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.isRunning|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.isRunning:(I)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f572.   v2:= temp;
#L13f574.   if v2 != 0 then goto L13f5a0;
#L13f578.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateAtLeast|](v0, v5) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateAtLeast:(II)Z|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f57e.   v2:= temp;
#L13f580.   if v2 != 0 then goto L13f5a0;
#L13f584.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.runStateOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.runStateOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f58a.   v2:= temp;
#L13f58c.   if v2 != 0 then goto L13f5a2;
#L13f590.   v2:= v6.[|java:util:concurrent:ThreadPoolExecutor.workQueue|]   @type object;
#L13f594.   call temp:=  [|java:util:concurrent:BlockingQueue.isEmpty|](v2) @signature [|Ljava/util/concurrent/BlockingQueue;.isEmpty:()Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13f59a.   v2:= temp;
#L13f59c.   if v2 != 0 then goto L13f5a2;
#L13f5a0.   return @void ;
#L13f5a2.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.workerCountOf|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.workerCountOf:(I)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f5a8.   v2:= temp;
#L13f5aa.   if v2 == 0 then goto L13f5b8;
#L13f5ae.   v2:= 1  @length 4;
#L13f5b0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.interruptIdleWorkers|](v6, v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.interruptIdleWorkers:(Z)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f5b6.   goto L13f5a0;
#L13f5b8.   v1:= v6.[|java:util:concurrent:ThreadPoolExecutor.mainLock|]   @type object;
#L13f5bc.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.lock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.lock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f5c2.   v2:= v6.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13f5c6.   v3:= 1073741824  @length high16;
#L13f5ca.   v4:= 0  @length 4;
#L13f5cc.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.ctlOf|](v3, v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.ctlOf:(II)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f5d2.   v3:= temp;
#L13f5d4.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.compareAndSet|](v2, v0, v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.compareAndSet:(II)Z|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13f5da.   v2:= temp;
#L13f5dc.   if v2 == 0 then goto L13f640;
#L13f5e0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.terminated|](v6) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.terminated:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type virtual;
#L13f5e6.   v2:= v6.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13f5ea.   v3:= 1610612736  @length high16;
#L13f5ee.   v4:= 0  @length 4;
#L13f5f0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.ctlOf|](v3, v4) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.ctlOf:(II)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f5f6.   v3:= temp;
#L13f5f8.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.set|](v2, v3) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.set:(I)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13f5fe.   v2:= v6.[|java:util:concurrent:ThreadPoolExecutor.termination|]   @type object;
#L13f602.   call temp:=  [|java:util:concurrent:locks:Condition.signalAll|](v2) @signature [|Ljava/util/concurrent/locks/Condition;.signalAll:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13f608.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f60e.   goto L13f5a0;
#L13f610.   v2:= Exception  @type object;
#L13f612.   v3:= v6.[|java:util:concurrent:ThreadPoolExecutor.ctl|]   @type object;
#L13f616.   v4:= 1610612736  @length high16;
#L13f61a.   v5:= 0  @length 4;
#L13f61c.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.ctlOf|](v4, v5) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.ctlOf:(II)I|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type static;
#L13f622.   v4:= temp;
#L13f624.   call temp:=  [|java:util:concurrent:atomic:AtomicInteger.set|](v3, v4) @signature [|Ljava/util/concurrent/atomic/AtomicInteger;.set:(I)V|] @classDescriptor [|java:util:concurrent:atomic:AtomicInteger|] @type virtual;
#L13f62a.   v3:= v6.[|java:util:concurrent:ThreadPoolExecutor.termination|]   @type object;
#L13f62e.   call temp:=  [|java:util:concurrent:locks:Condition.signalAll|](v3) @signature [|Ljava/util/concurrent/locks/Condition;.signalAll:()V|] @classDescriptor [|java:util:concurrent:locks:Condition|] @type interface;
#L13f634.   throw v2;
#L13f636.   v2:= Exception  @type object;
#L13f638.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f63e.   throw v2;
#L13f640.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.unlock|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type virtual;
#L13f646.   goto L13f560;
  catch  [|any|] @[L13f5c2..L13f5da] goto L13f636;
  catch  [|any|] @[L13f5e0..L13f5e6] goto L13f610;
  catch  [|any|] @[L13f5e6..L13f608] goto L13f636;
  catch  [|any|] @[L13f612..L13f636] goto L13f636;

   }
record [|java:util:concurrent:ScheduledThreadPoolExecutor|]  @type class @AccessFlag PUBLIC  extends [|java:util:concurrent:ThreadPoolExecutor|], [|java:util:concurrent:ScheduledExecutorService|] {
      [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor.continueExistingPeriodicTasksAfterShutdown|]    @AccessFlag PRIVATE_VOLATILE;
      [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor.executeExistingDelayedTasksAfterShutdown|]    @AccessFlag PRIVATE_VOLATILE;
      [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor.removeOnCancel|]    @AccessFlag PRIVATE_VOLATILE;
   }
      global [|java:util:concurrent:atomic:AtomicLong|] @@[|java:util:concurrent:ScheduledThreadPoolExecutor.sequencer|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.<clinit>|] () @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L13f680.   v0:= new [|java:util:concurrent:atomic:AtomicLong|];
#L13f684.   call temp:=  [|java:util:concurrent:atomic:AtomicLong.<init>|](v0) @signature [|Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V|] @classDescriptor [|java:util:concurrent:atomic:AtomicLong|] @type direct;
#L13f68a.   @@[|java:util:concurrent:ScheduledThreadPoolExecutor.sequencer|] := v0  @type object;
#L13f68e.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.<init>|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v7 @type (this), [|int|] v8) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
      
#L13f6a0.    v2:= nan;
#L13f6a6.   v3:= 0  @length wide16;
#L13f6aa.   v5:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13f6ae.   v6:= new [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|];
#L13f6b2.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.<init>|](v6) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13f6b8.   v0:= v7  @type object;
#L13f6ba.   v1:= v8;
#L13f6bc.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f6c2.   v0:= 1  @length 4;
#L13f6c4.   v7.[|java:util:concurrent:ScheduledThreadPoolExecutor.executeExistingDelayedTasksAfterShutdown|]  := v0 @boolean;
#L13f6c8.   v0:= 0  @length 4;
#L13f6ca.   v7.[|java:util:concurrent:ScheduledThreadPoolExecutor.removeOnCancel|]  := v0 @boolean;
#L13f6ce.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.<init>|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v8 @type (this), [|int|] v9, [|java:util:concurrent:RejectedExecutionHandler|] v10 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/RejectedExecutionHandler;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L13f6e0.    v2:= nan;
#L13f6e6.   v3:= 0  @length wide16;
#L13f6ea.   v5:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13f6ee.   v6:= new [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|];
#L13f6f2.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.<init>|](v6) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13f6f8.   v0:= v8  @type object;
#L13f6fa.   v1:= v9;
#L13f6fc.   v7:= v10  @type object;
#L13f6fe.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/RejectedExecutionHandler;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f704.   v0:= 1  @length 4;
#L13f706.   v8.[|java:util:concurrent:ScheduledThreadPoolExecutor.executeExistingDelayedTasksAfterShutdown|]  := v0 @boolean;
#L13f70a.   v0:= 0  @length 4;
#L13f70c.   v8.[|java:util:concurrent:ScheduledThreadPoolExecutor.removeOnCancel|]  := v0 @boolean;
#L13f710.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.<init>|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v8 @type (this), [|int|] v9, [|java:util:concurrent:ThreadFactory|] v10 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L13f724.    v2:= nan;
#L13f72a.   v3:= 0  @length wide16;
#L13f72e.   v5:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13f732.   v6:= new [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|];
#L13f736.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.<init>|](v6) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13f73c.   v0:= v8  @type object;
#L13f73e.   v1:= v9;
#L13f740.   v7:= v10  @type object;
#L13f742.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f748.   v0:= 1  @length 4;
#L13f74a.   v8.[|java:util:concurrent:ScheduledThreadPoolExecutor.executeExistingDelayedTasksAfterShutdown|]  := v0 @boolean;
#L13f74e.   v0:= 0  @length 4;
#L13f750.   v8.[|java:util:concurrent:ScheduledThreadPoolExecutor.removeOnCancel|]  := v0 @boolean;
#L13f754.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.<init>|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v9 @type (this), [|int|] v10, [|java:util:concurrent:ThreadFactory|] v11 @type (object), [|java:util:concurrent:RejectedExecutionHandler|] v12 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
        v8;
      
#L13f768.    v2:= nan;
#L13f76e.   v3:= 0  @length wide16;
#L13f772.   v5:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13f776.   v6:= new [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|];
#L13f77a.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue.<init>|](v6) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$DelayedWorkQueue|] @type direct;
#L13f780.   v0:= v9  @type object;
#L13f782.   v1:= v10;
#L13f784.   v7:= v11  @type object;
#L13f786.   v8:= v12  @type object;
#L13f788.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.<init>|](v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type direct;
#L13f78e.   v0:= 1  @length 4;
#L13f790.   v9.[|java:util:concurrent:ScheduledThreadPoolExecutor.executeExistingDelayedTasksAfterShutdown|]  := v0 @boolean;
#L13f794.   v0:= 0  @length 4;
#L13f796.   v9.[|java:util:concurrent:ScheduledThreadPoolExecutor.removeOnCancel|]  := v0 @boolean;
#L13f79a.   return @void ;

   }
    procedure [|java:util:concurrent:atomic:AtomicLong|] [|java:util:concurrent:ScheduledThreadPoolExecutor.access$000|] () @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.access$000:()Ljava/util/concurrent/atomic/AtomicLong;|] @Access STATIC_SYNTHETIC {
      local temp ;
        v0;
      
#L13f7ac.   v0:= @@[|java:util:concurrent:ScheduledThreadPoolExecutor.sequencer|]   @type object;
#L13f7b0.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor.access$100|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.access$100:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)Z|] @Access STATIC_SYNTHETIC {
      local temp ;

        v0;
      
#L13f7c4.   v0:= v1.[|java:util:concurrent:ScheduledThreadPoolExecutor.removeOnCancel|]   @boolean;
#L13f7c8.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.delayedExecute|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (this), [|java:util:concurrent:RunnableScheduledFuture|] v2 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.delayedExecute:(Ljava/util/concurrent/RunnableScheduledFuture;)V|] @Access PRIVATE {
      local temp ;


        v0;
      
#L13f7dc.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.isShutdown|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.isShutdown:()Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f7e2.   v0:= temp;
#L13f7e4.   if v0 == 0 then goto L13f7f0;
#L13f7e8.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.reject|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.reject:(Ljava/lang/Runnable;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f7ee.   return @void ;
#L13f7f0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.getQueue|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getQueue:()Ljava/util/concurrent/BlockingQueue;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type super;
#L13f7f6.   v0:= temp  @type object;
#L13f7f8.   call temp:=  [|java:util:concurrent:BlockingQueue.add|](v0, v2) @signature [|Ljava/util/concurrent/BlockingQueue;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13f7fe.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.isShutdown|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.isShutdown:()Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f804.   v0:= temp;
#L13f806.   if v0 == 0 then goto L13f834;
#L13f80a.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.isPeriodic|](v2) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.isPeriodic:()Z|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13f810.   v0:= temp;
#L13f812.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.canRunInCurrentRunState|](v1, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.canRunInCurrentRunState:(Z)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f818.   v0:= temp;
#L13f81a.   if v0 != 0 then goto L13f834;
#L13f81e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.remove|](v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.remove:(Ljava/lang/Runnable;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f824.   v0:= temp;
#L13f826.   if v0 == 0 then goto L13f834;
#L13f82a.   v0:= 0  @length 4;
#L13f82c.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.cancel|](v2, v0) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13f832.   goto L13f7ee;
#L13f834.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.ensurePrestart|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.ensurePrestart:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f83a.   goto L13f7ee;

   }
    procedure [|long|] [|java:util:concurrent:ScheduledThreadPoolExecutor.overflowFree|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v7 @type (this), [|long|] v8) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.overflowFree:(J)J|] @Access PRIVATE {
      local temp ;
        [|long|] v1 @varname [|headDelay|] @scope ((L0014,L0025));
        [|java:util:concurrent:Delayed|] v0 @varname [|head|] @scope ((L000c,L0026));


        v2;
        v3;
        v4;
        v5;
        v6;
      
#L13f84c.   v5:= 0  @length wide16;
#L13f850.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.getQueue|](v7) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getQueue:()Ljava/util/concurrent/BlockingQueue;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type super;
#L13f856.   v3:= temp  @type object;
#L13f858.   call temp:=  [|java:util:concurrent:BlockingQueue.peek|](v3) @signature [|Ljava/util/concurrent/BlockingQueue;.peek:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13f85e.   v0:= temp  @type object;
#L13f860.   v0:= ([|java:util:concurrent:Delayed|])v0;
#L13f864.   if v0 == 0 then goto L13f896;
#L13f868.   v3:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13f86c.   call temp:=  [|java:util:concurrent:Delayed.getDelay|](v0, v3) @signature [|Ljava/util/concurrent/Delayed;.getDelay:(Ljava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:Delayed|] @type interface;
#L13f872.   v1:= temp  @type wide;
#L13f874.   v3:= cmp(v1,v5);
#L13f878.   if v3 >= 0 then goto L13f896;
#L13f87c.   v3:= v8 - v1  @type long;
#L13f880.   v3:= cmp(v3,v5);
#L13f884.   if v3 >= 0 then goto L13f896;
#L13f888.   v3:= nanL  @length wide;
#L13f892.   v8:= v3 + v1  @type long;
#L13f896.   return v8  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:ScheduledThreadPoolExecutor.triggerTime|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v3 @type (this), [|long|] v4, [|java:util:concurrent:TimeUnit|] v6 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.triggerTime:(JLjava/util/concurrent/TimeUnit;)J|] @Access PRIVATE {
      local temp ;



        v0;
        v1;
        v2;
      
#L13f8a8.   v0:= 0  @length wide16;
#L13f8ac.   v2:= cmp(v4,v0);
#L13f8b0.   if v2 >= 0 then goto L13f8b6;
#L13f8b4.   v4:= v0  @type wide;
#L13f8b6.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v6, v4, v5) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13f8bc.   v0:= temp  @type wide;
#L13f8be.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.triggerTime|](v3, v0, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.triggerTime:(J)J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f8c4.   v0:= temp  @type wide;
#L13f8c6.   return v0  @type wide;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor.canRunInCurrentRunState|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (this), [|boolean|] v2) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.canRunInCurrentRunState:(Z)Z|] @Access  {
      local temp ;


        v0;
      
#L13f8d8.   if v2 == 0 then goto L13f8ea;
#L13f8dc.   v0:= v1.[|java:util:concurrent:ScheduledThreadPoolExecutor.continueExistingPeriodicTasksAfterShutdown|]   @boolean;
#L13f8e0.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.isRunningOrShutdown|](v1, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.isRunningOrShutdown:(Z)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f8e6.   v0:= temp;
#L13f8e8.   return v0;
#L13f8ea.   v0:= v1.[|java:util:concurrent:ScheduledThreadPoolExecutor.executeExistingDelayedTasksAfterShutdown|]   @boolean;
#L13f8ee.   goto L13f8e0;

   }
    procedure [|java:util:concurrent:RunnableScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor.decorateTask|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v0 @type (this), [|java:lang:Runnable|] v1 @type (object), [|java:util:concurrent:RunnableScheduledFuture|] v2 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.decorateTask:(Ljava/lang/Runnable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @Access PROTECTED {
      local temp ;



      
#L13f900.   return v2  @type object;

   }
    procedure [|java:util:concurrent:RunnableScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor.decorateTask|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v0 @type (this), [|java:util:concurrent:Callable|] v1 @type (object), [|java:util:concurrent:RunnableScheduledFuture|] v2 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.decorateTask:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @Access PROTECTED {
      local temp ;



      
#L13f914.   return v2  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.execute|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v3 @type (this), [|java:lang:Runnable|] v4 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.execute:(Ljava/lang/Runnable;)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L13f928.   v0:= 0  @length wide16;
#L13f92c.   v2:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13f930.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.schedule|](v3, v4, v0, v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f936.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor.getContinueExistingPeriodicTasksAfterShutdownPolicy|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.getContinueExistingPeriodicTasksAfterShutdownPolicy:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13f948.   v0:= v1.[|java:util:concurrent:ScheduledThreadPoolExecutor.continueExistingPeriodicTasksAfterShutdown|]   @boolean;
#L13f94c.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor.getExecuteExistingDelayedTasksAfterShutdownPolicy|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.getExecuteExistingDelayedTasksAfterShutdownPolicy:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13f960.   v0:= v1.[|java:util:concurrent:ScheduledThreadPoolExecutor.executeExistingDelayedTasksAfterShutdown|]   @boolean;
#L13f964.   return v0;

   }
    procedure [|java:util:concurrent:BlockingQueue|] [|java:util:concurrent:ScheduledThreadPoolExecutor.getQueue|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.getQueue:()Ljava/util/concurrent/BlockingQueue;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13f978.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.getQueue|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getQueue:()Ljava/util/concurrent/BlockingQueue;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type super;
#L13f97e.   v0:= temp  @type object;
#L13f980.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.getRemoveOnCancelPolicy:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13f994.   v0:= v1.[|java:util:concurrent:ScheduledThreadPoolExecutor.removeOnCancel|]   @boolean;
#L13f998.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:ScheduledThreadPoolExecutor.now|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v2 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.now:()J|] @Access FINAL {
      local temp ;

        v0;
        v1;
      
#L13f9ac.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L13f9b2.   v0:= temp  @type wide;
#L13f9b4.   return v0  @type wide;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.onShutdown|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v10 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.onShutdown:()V|] @Access  {
      local temp ;
        [|java:lang:Object|] v1 @varname [|e|] @scope ((L001b,L0021), (L0038,L005c));
        [|java:lang:Object|][] v0 @varname [|arr$|] @scope ((L0015,L002e), (L0032,L005c));
        [|int|] v2 @varname [|i$|] @scope ((L0017,L002e), (L0034,L005c));
        [|int|] v5 @varname [|len$|] @scope ((L0016,L002e), (L0033,L005c));
        [|java:util:concurrent:RunnableScheduledFuture|] v7 @varname [|t|] @scope ((L003f,L0050), (L0053,L005c));
        [|boolean|] v3 @varname [|keepDelayed|] @scope ((L0009,L005c));
        [|boolean|] v4 @varname [|keepPeriodic|] @scope ((L000d,L005c));
        [|java:util:concurrent:BlockingQueue|] v6 @varname [|q|] @scope ((L0005,L005c));

        v8;
        v9;
      
#L13f9c8.   v9:= 0  @length 4;
#L13f9ca.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.getQueue|](v10) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getQueue:()Ljava/util/concurrent/BlockingQueue;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type super;
#L13f9d0.   v6:= temp  @type object;
#L13f9d2.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.getExecuteExistingDelayedTasksAfterShutdownPolicy|](v10) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.getExecuteExistingDelayedTasksAfterShutdownPolicy:()Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f9d8.   v3:= temp;
#L13f9da.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.getContinueExistingPeriodicTasksAfterShutdownPolicy|](v10) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.getContinueExistingPeriodicTasksAfterShutdownPolicy:()Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13f9e0.   v4:= temp;
#L13f9e2.   if v3 != 0 then goto L13fa24;
#L13f9e6.   if v4 != 0 then goto L13fa24;
#L13f9ea.   call temp:=  [|java:util:concurrent:BlockingQueue.toArray|](v6) @signature [|Ljava/util/concurrent/BlockingQueue;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13f9f0.   v0:= temp  @type object;
#L13f9f2.   v5:= v0.length;
#L13f9f4.   v2:= 0  @length 4;
#L13f9f6.   if v2 >= v5 then goto L13fa16;
#L13f9fa.   v1:= v0[v2]  @type object;
#L13f9fe.   v8:= instanceof @varname v1 @type [|java:util:concurrent:RunnableScheduledFuture|];
#L13fa02.   if v8 == 0 then goto L13fa10;
#L13fa06.   v1:= ([|java:util:concurrent:RunnableScheduledFuture|])v1;
#L13fa0a.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.cancel|](v1, v9) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13fa10.   v2:= v2 + 1;
#L13fa14.   goto L13f9f6;
#L13fa16.   call temp:=  [|java:util:concurrent:BlockingQueue.clear|](v6) @signature [|Ljava/util/concurrent/BlockingQueue;.clear:()V|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13fa1c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.tryTerminate|](v10) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.tryTerminate:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fa22.   return @void ;
#L13fa24.   call temp:=  [|java:util:concurrent:BlockingQueue.toArray|](v6) @signature [|Ljava/util/concurrent/BlockingQueue;.toArray:()[Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13fa2a.   v0:= temp  @type object;
#L13fa2c.   v5:= v0.length;
#L13fa2e.   v2:= 0  @length 4;
#L13fa30.   if v2 >= v5 then goto L13fa1c;
#L13fa34.   v1:= v0[v2]  @type object;
#L13fa38.   v8:= instanceof @varname v1 @type [|java:util:concurrent:RunnableScheduledFuture|];
#L13fa3c.   if v8 == 0 then goto L13fa68;
#L13fa40.   v7:= v1  @type object;
#L13fa42.   v7:= ([|java:util:concurrent:RunnableScheduledFuture|])v7;
#L13fa46.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.isPeriodic|](v7) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.isPeriodic:()Z|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13fa4c.   v8:= temp;
#L13fa4e.   if v8 == 0 then goto L13fa6e;
#L13fa52.   if v4 != 0 then goto L13fa72;
#L13fa56.   call temp:=  [|java:util:concurrent:BlockingQueue.remove|](v6, v7) @signature [|Ljava/util/concurrent/BlockingQueue;.remove:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13fa5c.   v8:= temp;
#L13fa5e.   if v8 == 0 then goto L13fa68;
#L13fa62.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.cancel|](v7, v9) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13fa68.   v2:= v2 + 1;
#L13fa6c.   goto L13fa30;
#L13fa6e.   if v3 == 0 then goto L13fa56;
#L13fa72.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.isCancelled|](v7) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13fa78.   v8:= temp;
#L13fa7a.   if v8 == 0 then goto L13fa68;
#L13fa7e.   goto L13fa56;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.reExecutePeriodic|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v2 @type (this), [|java:util:concurrent:RunnableScheduledFuture|] v3 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.reExecutePeriodic:(Ljava/util/concurrent/RunnableScheduledFuture;)V|] @Access  {
      local temp ;


        v0;
        v1;
      
#L13fa90.   v1:= 1  @length 4;
#L13fa92.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.canRunInCurrentRunState|](v2, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.canRunInCurrentRunState:(Z)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fa98.   v0:= temp;
#L13fa9a.   if v0 == 0 then goto L13facc;
#L13fa9e.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.getQueue|](v2) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.getQueue:()Ljava/util/concurrent/BlockingQueue;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type super;
#L13faa4.   v0:= temp  @type object;
#L13faa6.   call temp:=  [|java:util:concurrent:BlockingQueue.add|](v0, v3) @signature [|Ljava/util/concurrent/BlockingQueue;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:BlockingQueue|] @type interface;
#L13faac.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.canRunInCurrentRunState|](v2, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.canRunInCurrentRunState:(Z)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fab2.   v0:= temp;
#L13fab4.   if v0 != 0 then goto L13face;
#L13fab8.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.remove|](v2, v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.remove:(Ljava/lang/Runnable;)Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fabe.   v0:= temp;
#L13fac0.   if v0 == 0 then goto L13face;
#L13fac4.   v0:= 0  @length 4;
#L13fac6.   call temp:=  [|java:util:concurrent:RunnableScheduledFuture.cancel|](v3, v0) @signature [|Ljava/util/concurrent/RunnableScheduledFuture;.cancel:(Z)Z|] @classDescriptor [|java:util:concurrent:RunnableScheduledFuture|] @type interface;
#L13facc.   return @void ;
#L13face.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.ensurePrestart|](v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.ensurePrestart:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fad4.   goto L13facc;

   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor.schedule|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v7 @type (this), [|java:lang:Runnable|] v8 @type (object), [|long|] v9, [|java:util:concurrent:TimeUnit|] v11 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v6 @varname [|t|] @scope ((L001a,L001e));




        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L13fae8.   if v8 == 0 then goto L13faf0;
#L13faec.   if v11 != 0 then goto L13fafc;
#L13faf0.   v0:= new [|java:lang:NullPointerException|];
#L13faf4.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13fafa.   throw v0;
#L13fafc.   v0:= new [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|];
#L13fb00.   v3:= 0  @length 4;
#L13fb02.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.triggerTime|](v7, v9, v10, v11) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.triggerTime:(JLjava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L13fb08.   v4:= temp  @type wide;
#L13fb0a.   v1:= v7  @type object;
#L13fb0c.   v2:= v8  @type object;
#L13fb0e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.<init>:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;Ljava/lang/Runnable;Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type direct;
#L13fb14.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.decorateTask|](v7, v8, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.decorateTask:(Ljava/lang/Runnable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fb1a.   v6:= temp  @type object;
#L13fb1c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.delayedExecute|](v7, v6) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.delayedExecute:(Ljava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L13fb22.   return v6  @type object;

   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor.schedule|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v4 @type (this), [|java:util:concurrent:Callable|] v5 @type (object), [|long|] v6, [|java:util:concurrent:TimeUnit|] v8 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:RunnableScheduledFuture|] v0 @varname [|t|] @scope ((L0017,L001b));




        v1;
        v2;
        v3;
      
#L13fb34.   if v5 == 0 then goto L13fb3c;
#L13fb38.   if v8 != 0 then goto L13fb48;
#L13fb3c.   v1:= new [|java:lang:NullPointerException|];
#L13fb40.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13fb46.   throw v1;
#L13fb48.   v1:= new [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|];
#L13fb4c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.triggerTime|](v4, v6, v7, v8) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.triggerTime:(JLjava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L13fb52.   v2:= temp  @type wide;
#L13fb54.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>|](v1, v4, v5, v2, v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.<init>:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;Ljava/util/concurrent/Callable;J)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type direct;
#L13fb5a.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.decorateTask|](v4, v5, v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.decorateTask:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fb60.   v0:= temp  @type object;
#L13fb62.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.delayedExecute|](v4, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.delayedExecute:(Ljava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L13fb68.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor.scheduleAtFixedRate|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v9 @type (this), [|java:lang:Runnable|] v10 @type (object), [|long|] v11, [|long|] v13, [|java:util:concurrent:TimeUnit|] v15 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v0 @varname [|sft|] @scope ((L0026,L0030));
        [|java:util:concurrent:RunnableScheduledFuture|] v8 @varname [|t|] @scope ((L002a,L0030));





        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L13fb7c.   if v10 == 0 then goto L13fb84;
#L13fb80.   if v15 != 0 then goto L13fb90;
#L13fb84.   v1:= new [|java:lang:NullPointerException|];
#L13fb88.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13fb8e.   throw v1;
#L13fb90.   v1:= 0  @length wide16;
#L13fb94.   v1:= cmp(v13,v1);
#L13fb98.   if v1 > 0 then goto L13fba8;
#L13fb9c.   v1:= new [|java:lang:IllegalArgumentException|];
#L13fba0.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13fba6.   throw v1;
#L13fba8.   v0:= new [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|];
#L13fbac.   v3:= 0  @length 4;
#L13fbae.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.triggerTime|](v9, v11, v12, v15) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.triggerTime:(JLjava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L13fbb4.   v4:= temp  @type wide;
#L13fbb6.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v15, v13, v14) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13fbbc.   v6:= temp  @type wide;
#L13fbbe.   v1:= v9  @type object;
#L13fbc0.   v2:= v10  @type object;
#L13fbc2.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.<init>:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;Ljava/lang/Runnable;Ljava/lang/Object;JJ)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type direct;
#L13fbc8.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.decorateTask|](v9, v10, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.decorateTask:(Ljava/lang/Runnable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fbce.   v8:= temp  @type object;
#L13fbd0.   v0.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.outerTask|]  := v8 @type object;
#L13fbd4.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.delayedExecute|](v9, v8) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.delayedExecute:(Ljava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L13fbda.   return v8  @type object;

   }
    procedure [|java:util:concurrent:ScheduledFuture|] [|java:util:concurrent:ScheduledThreadPoolExecutor.scheduleWithFixedDelay|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v9 @type (this), [|java:lang:Runnable|] v10 @type (object), [|long|] v11, [|long|] v13, [|java:util:concurrent:TimeUnit|] v15 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @Access PUBLIC {
      local temp ;
        [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] v0 @varname [|sft|] @scope ((L0027,L0031));
        [|java:util:concurrent:RunnableScheduledFuture|] v8 @varname [|t|] @scope ((L002b,L0031));





        v1;
        v2;
        v3;
        v4;
        v5;
        v6;
        v7;
      
#L13fbec.   if v10 == 0 then goto L13fbf4;
#L13fbf0.   if v15 != 0 then goto L13fc00;
#L13fbf4.   v1:= new [|java:lang:NullPointerException|];
#L13fbf8.   call temp:=  [|java:lang:NullPointerException.<init>|](v1) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L13fbfe.   throw v1;
#L13fc00.   v1:= 0  @length wide16;
#L13fc04.   v1:= cmp(v13,v1);
#L13fc08.   if v1 > 0 then goto L13fc18;
#L13fc0c.   v1:= new [|java:lang:IllegalArgumentException|];
#L13fc10.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13fc16.   throw v1;
#L13fc18.   v0:= new [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|];
#L13fc1c.   v3:= 0  @length 4;
#L13fc1e.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.triggerTime|](v9, v11, v12, v15) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.triggerTime:(JLjava/util/concurrent/TimeUnit;)J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L13fc24.   v4:= temp  @type wide;
#L13fc26.   v1:= -v13  @type long;
#L13fc28.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v15, v1, v2) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L13fc2e.   v6:= temp  @type wide;
#L13fc30.   v1:= v9  @type object;
#L13fc32.   v2:= v10  @type object;
#L13fc34.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.<init>|](v0, v1, v2, v3, v4, v5, v6, v7) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask;.<init>:(Ljava/util/concurrent/ScheduledThreadPoolExecutor;Ljava/lang/Runnable;Ljava/lang/Object;JJ)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask|] @type direct;
#L13fc3a.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.decorateTask|](v9, v10, v0) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.decorateTask:(Ljava/lang/Runnable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fc40.   v8:= temp  @type object;
#L13fc42.   v0.[|java:util:concurrent:ScheduledThreadPoolExecutor$ScheduledFutureTask.outerTask|]  := v8 @type object;
#L13fc46.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.delayedExecute|](v9, v8) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.delayedExecute:(Ljava/util/concurrent/RunnableScheduledFuture;)V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L13fc4c.   return v8  @type object;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (this), [|boolean|] v2) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.setContinueExistingPeriodicTasksAfterShutdownPolicy:(Z)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13fc60.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor.continueExistingPeriodicTasksAfterShutdown|]  := v2 @boolean;
#L13fc64.   if v2 != 0 then goto L13fc7a;
#L13fc68.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.isShutdown|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.isShutdown:()Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fc6e.   v0:= temp;
#L13fc70.   if v0 == 0 then goto L13fc7a;
#L13fc74.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.onShutdown|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.onShutdown:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fc7a.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (this), [|boolean|] v2) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.setExecuteExistingDelayedTasksAfterShutdownPolicy:(Z)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13fc8c.   v1.[|java:util:concurrent:ScheduledThreadPoolExecutor.executeExistingDelayedTasksAfterShutdown|]  := v2 @boolean;
#L13fc90.   if v2 != 0 then goto L13fca6;
#L13fc94.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.isShutdown|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.isShutdown:()Z|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fc9a.   v0:= temp;
#L13fc9c.   if v0 == 0 then goto L13fca6;
#L13fca0.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.onShutdown|](v1) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.onShutdown:()V|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fca6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v0 @type (this), [|boolean|] v1) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.setRemoveOnCancelPolicy:(Z)V|] @Access PUBLIC {
      local temp ;


      
#L13fcb8.   v0.[|java:util:concurrent:ScheduledThreadPoolExecutor.removeOnCancel|]  := v1 @boolean;
#L13fcbc.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ScheduledThreadPoolExecutor.shutdown|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v0 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.shutdown:()V|] @Access PUBLIC {
      local temp ;

      
#L13fcd0.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.shutdown|](v0) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.shutdown:()V|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type super;
#L13fcd6.   return @void ;

   }
    procedure [|java:util:List|] [|java:util:concurrent:ScheduledThreadPoolExecutor.shutdownNow|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v1 @type (this)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.shutdownNow:()Ljava/util/List;|] @Access PUBLIC {
      local temp ;

        v0;
      
#L13fce8.   call temp:=  [|java:util:concurrent:ThreadPoolExecutor.shutdownNow|](v1) @signature [|Ljava/util/concurrent/ThreadPoolExecutor;.shutdownNow:()Ljava/util/List;|] @classDescriptor [|java:util:concurrent:ThreadPoolExecutor|] @type super;
#L13fcee.   v0:= temp  @type object;
#L13fcf0.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ScheduledThreadPoolExecutor.submit|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v3 @type (this), [|java:lang:Runnable|] v4 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L13fd04.   v0:= 0  @length wide16;
#L13fd08.   v2:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13fd0c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.schedule|](v3, v4, v0, v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fd12.   v0:= temp  @type object;
#L13fd14.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ScheduledThreadPoolExecutor.submit|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v4 @type (this), [|java:lang:Runnable|] v5 @type (object), [|java:lang:Object|] v6 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L13fd28.   call temp:=  [|java:util:concurrent:Executors.callable|](v5, v6) @signature [|Ljava/util/concurrent/Executors;.callable:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Callable;|] @classDescriptor [|java:util:concurrent:Executors|] @type static;
#L13fd2e.   v0:= temp  @type object;
#L13fd30.   v1:= 0  @length wide16;
#L13fd34.   v3:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13fd38.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.schedule|](v4, v0, v1, v2, v3) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fd3e.   v0:= temp  @type object;
#L13fd40.   return v0  @type object;

   }
    procedure [|java:util:concurrent:Future|] [|java:util:concurrent:ScheduledThreadPoolExecutor.submit|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v3 @type (this), [|java:util:concurrent:Callable|] v4 @type (object)) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
      
#L13fd54.   v0:= 0  @length wide16;
#L13fd58.   v2:= @@[|java:util:concurrent:TimeUnit.NANOSECONDS|]   @type object;
#L13fd5c.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.schedule|](v3, v4, v0, v1, v2) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fd62.   v0:= temp  @type object;
#L13fd64.   return v0  @type object;

   }
    procedure [|long|] [|java:util:concurrent:ScheduledThreadPoolExecutor.triggerTime|] ([|java:util:concurrent:ScheduledThreadPoolExecutor|] v4 @type (this), [|long|] v5) @owner [|java:util:concurrent:ScheduledThreadPoolExecutor|] @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.triggerTime:(J)J|] @Access  {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L13fd78.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.now|](v4) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.now:()J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type virtual;
#L13fd7e.   v0:= temp  @type wide;
#L13fd80.   v2:= 2.000000L  @length wide;
#L13fd8a.   v2:= cmp(v5,v2);
#L13fd8e.   if v2 >= 0 then goto L13fd96;
#L13fd92.   v0:= v0 + v5  @type long;
#L13fd94.   return v0  @type wide;
#L13fd96.   call temp:=  [|java:util:concurrent:ScheduledThreadPoolExecutor.overflowFree|](v4, v5, v6) @signature [|Ljava/util/concurrent/ScheduledThreadPoolExecutor;.overflowFree:(J)J|] @classDescriptor [|java:util:concurrent:ScheduledThreadPoolExecutor|] @type direct;
#L13fd9c.   v5:= temp  @type wide;
#L13fd9e.   goto L13fd92;

   }
record [|java:util:concurrent:Semaphore$Sync|]  @type class @AccessFlag ABSTRACT  extends [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] {
   }
      global [|long|] @@[|java:util:concurrent:Semaphore$Sync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:Semaphore$Sync.<init>|] ([|java:util:concurrent:Semaphore$Sync|] v0 @type (this), [|int|] v1) @owner [|java:util:concurrent:Semaphore$Sync|] @signature [|Ljava/util/concurrent/Semaphore$Sync;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L13fdb0.   call temp:=  [|java:util:concurrent:locks:AbstractQueuedSynchronizer.<init>|](v0) @signature [|Ljava/util/concurrent/locks/AbstractQueuedSynchronizer;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:AbstractQueuedSynchronizer|] @type direct;
#L13fdb6.   call temp:=  [|java:util:concurrent:Semaphore$Sync.setState|](v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.setState:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13fdbc.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:Semaphore$Sync.drainPermits|] ([|java:util:concurrent:Semaphore$Sync|] v2 @type (this)) @owner [|java:util:concurrent:Semaphore$Sync|] @signature [|Ljava/util/concurrent/Semaphore$Sync;.drainPermits:()I|] @Access FINAL {
      local temp ;
        [|int|] v0 @varname [|current|] @scope ((L0004,L000e));

        v1;
      
#L13fdd0.   call temp:=  [|java:util:concurrent:Semaphore$Sync.getState|](v2) @signature [|Ljava/util/concurrent/Semaphore$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13fdd6.   v0:= temp;
#L13fdd8.   if v0 == 0 then goto L13fdea;
#L13fddc.   v1:= 0  @length 4;
#L13fdde.   call temp:=  [|java:util:concurrent:Semaphore$Sync.compareAndSetState|](v2, v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13fde4.   v1:= temp;
#L13fde6.   if v1 == 0 then goto L13fdd0;
#L13fdea.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:Semaphore$Sync.getPermits|] ([|java:util:concurrent:Semaphore$Sync|] v1 @type (this)) @owner [|java:util:concurrent:Semaphore$Sync|] @signature [|Ljava/util/concurrent/Semaphore$Sync;.getPermits:()I|] @Access FINAL {
      local temp ;

        v0;
      
#L13fdfc.   call temp:=  [|java:util:concurrent:Semaphore$Sync.getState|](v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13fe02.   v0:= temp;
#L13fe04.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:Semaphore$Sync.nonfairTryAcquireShared|] ([|java:util:concurrent:Semaphore$Sync|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:Semaphore$Sync|] @signature [|Ljava/util/concurrent/Semaphore$Sync;.nonfairTryAcquireShared:(I)I|] @Access FINAL {
      local temp ;
        [|int|] v0 @varname [|available|] @scope ((L0004,L000f));
        [|int|] v1 @varname [|remaining|] @scope ((L0006,L000f));


        v2;
      
#L13fe18.   call temp:=  [|java:util:concurrent:Semaphore$Sync.getState|](v3) @signature [|Ljava/util/concurrent/Semaphore$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13fe1e.   v0:= temp;
#L13fe20.   v1:= v0 - v4  @type int;
#L13fe24.   if v1 < 0 then goto L13fe34;
#L13fe28.   call temp:=  [|java:util:concurrent:Semaphore$Sync.compareAndSetState|](v3, v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13fe2e.   v2:= temp;
#L13fe30.   if v2 == 0 then goto L13fe18;
#L13fe34.   return v1;

   }
    procedure [|void|] [|java:util:concurrent:Semaphore$Sync.reducePermits|] ([|java:util:concurrent:Semaphore$Sync|] v4 @type (this), [|int|] v5) @owner [|java:util:concurrent:Semaphore$Sync|] @signature [|Ljava/util/concurrent/Semaphore$Sync;.reducePermits:(I)V|] @Access FINAL {
      local temp ;
        [|int|] v0 @varname [|current|] @scope ((L0004,L0017));
        [|int|] v1 @varname [|next|] @scope ((L0006,L0017));


        v2;
        v3;
      
#L13fe48.   call temp:=  [|java:util:concurrent:Semaphore$Sync.getState|](v4) @signature [|Ljava/util/concurrent/Semaphore$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13fe4e.   v0:= temp;
#L13fe50.   v1:= v0 - v5  @type int;
#L13fe54.   if v1 <= v0 then goto L13fe68;
#L13fe58.   v2:= new [|java:lang:Error|];
#L13fe5c.   v3:= "Permit count underflow" @type (object, string);
#L13fe60.   call temp:=  [|java:lang:Error.<init>|](v2, v3) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13fe66.   throw v2;
#L13fe68.   call temp:=  [|java:util:concurrent:Semaphore$Sync.compareAndSetState|](v4, v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13fe6e.   v2:= temp;
#L13fe70.   if v2 == 0 then goto L13fe48;
#L13fe74.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:Semaphore$Sync.tryReleaseShared|] ([|java:util:concurrent:Semaphore$Sync|] v4 @type (this), [|int|] v5) @owner [|java:util:concurrent:Semaphore$Sync|] @signature [|Ljava/util/concurrent/Semaphore$Sync;.tryReleaseShared:(I)Z|] @Access PROTECTED_FINAL {
      local temp ;
        [|int|] v0 @varname [|current|] @scope ((L0004,L0018));
        [|int|] v1 @varname [|next|] @scope ((L0006,L0018));


        v2;
        v3;
      
#L13fe88.   call temp:=  [|java:util:concurrent:Semaphore$Sync.getState|](v4) @signature [|Ljava/util/concurrent/Semaphore$Sync;.getState:()I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13fe8e.   v0:= temp;
#L13fe90.   v1:= v0 + v5  @type int;
#L13fe94.   if v1 >= v0 then goto L13fea8;
#L13fe98.   v2:= new [|java:lang:Error|];
#L13fe9c.   v3:= "Maximum permit count exceeded" @type (object, string);
#L13fea0.   call temp:=  [|java:lang:Error.<init>|](v2, v3) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L13fea6.   throw v2;
#L13fea8.   call temp:=  [|java:util:concurrent:Semaphore$Sync.compareAndSetState|](v4, v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13feae.   v2:= temp;
#L13feb0.   if v2 == 0 then goto L13fe88;
#L13feb4.   v2:= 1  @length 4;
#L13feb6.   return v2;

   }
record [|java:util:concurrent:Semaphore$FairSync|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:Semaphore$Sync|] {
   }
      global [|long|] @@[|java:util:concurrent:Semaphore$FairSync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:Semaphore$FairSync.<init>|] ([|java:util:concurrent:Semaphore$FairSync|] v0 @type (this), [|int|] v1) @owner [|java:util:concurrent:Semaphore$FairSync|] @signature [|Ljava/util/concurrent/Semaphore$FairSync;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L13fec8.   call temp:=  [|java:util:concurrent:Semaphore$Sync.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type direct;
#L13fece.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:Semaphore$FairSync.tryAcquireShared|] ([|java:util:concurrent:Semaphore$FairSync|] v3 @type (this), [|int|] v4) @owner [|java:util:concurrent:Semaphore$FairSync|] @signature [|Ljava/util/concurrent/Semaphore$FairSync;.tryAcquireShared:(I)I|] @Access PROTECTED {
      local temp ;
        [|int|] v0 @varname [|available|] @scope ((L000c,L0017));
        [|int|] v1 @varname [|remaining|] @scope ((L000e,L0017));


        v2;
      
#L13fee0.   call temp:=  [|java:util:concurrent:Semaphore$FairSync.hasQueuedPredecessors|](v3) @signature [|Ljava/util/concurrent/Semaphore$FairSync;.hasQueuedPredecessors:()Z|] @classDescriptor [|java:util:concurrent:Semaphore$FairSync|] @type virtual;
#L13fee6.   v2:= temp;
#L13fee8.   if v2 == 0 then goto L13fef0;
#L13feec.   v1:= -1  @length 4;
#L13feee.   return v1;
#L13fef0.   call temp:=  [|java:util:concurrent:Semaphore$FairSync.getState|](v3) @signature [|Ljava/util/concurrent/Semaphore$FairSync;.getState:()I|] @classDescriptor [|java:util:concurrent:Semaphore$FairSync|] @type virtual;
#L13fef6.   v0:= temp;
#L13fef8.   v1:= v0 - v4  @type int;
#L13fefc.   if v1 < 0 then goto L13feee;
#L13ff00.   call temp:=  [|java:util:concurrent:Semaphore$FairSync.compareAndSetState|](v3, v0, v1) @signature [|Ljava/util/concurrent/Semaphore$FairSync;.compareAndSetState:(II)Z|] @classDescriptor [|java:util:concurrent:Semaphore$FairSync|] @type virtual;
#L13ff06.   v2:= temp;
#L13ff08.   if v2 == 0 then goto L13fee0;
#L13ff0c.   goto L13feee;

   }
record [|java:util:concurrent:Semaphore$NonfairSync|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:Semaphore$Sync|] {
   }
      global [|long|] @@[|java:util:concurrent:Semaphore$NonfairSync.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:Semaphore$NonfairSync.<init>|] ([|java:util:concurrent:Semaphore$NonfairSync|] v0 @type (this), [|int|] v1) @owner [|java:util:concurrent:Semaphore$NonfairSync|] @signature [|Ljava/util/concurrent/Semaphore$NonfairSync;.<init>:(I)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L13ff20.   call temp:=  [|java:util:concurrent:Semaphore$Sync.<init>|](v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type direct;
#L13ff26.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:Semaphore$NonfairSync.tryAcquireShared|] ([|java:util:concurrent:Semaphore$NonfairSync|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Semaphore$NonfairSync|] @signature [|Ljava/util/concurrent/Semaphore$NonfairSync;.tryAcquireShared:(I)I|] @Access PROTECTED {
      local temp ;


        v0;
      
#L13ff38.   call temp:=  [|java:util:concurrent:Semaphore$NonfairSync.nonfairTryAcquireShared|](v1, v2) @signature [|Ljava/util/concurrent/Semaphore$NonfairSync;.nonfairTryAcquireShared:(I)I|] @classDescriptor [|java:util:concurrent:Semaphore$NonfairSync|] @type virtual;
#L13ff3e.   v0:= temp;
#L13ff40.   return v0;

   }
record [|java:util:concurrent:Semaphore|]  @type class @AccessFlag PUBLIC extends  [|java:io:Serializable|] {
      [|java:util:concurrent:Semaphore$Sync|] [|java:util:concurrent:Semaphore.sync|]    @AccessFlag PRIVATE_FINAL;
   }
      global [|long|] @@[|java:util:concurrent:Semaphore.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:Semaphore.<init>|] ([|java:util:concurrent:Semaphore|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.<init>:(I)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L13ff54.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13ff5a.   v0:= new [|java:util:concurrent:Semaphore$NonfairSync|];
#L13ff5e.   call temp:=  [|java:util:concurrent:Semaphore$NonfairSync.<init>|](v0, v2) @signature [|Ljava/util/concurrent/Semaphore$NonfairSync;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$NonfairSync|] @type direct;
#L13ff64.   v1.[|java:util:concurrent:Semaphore.sync|]  := v0 @type object;
#L13ff68.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Semaphore.<init>|] ([|java:util:concurrent:Semaphore|] v1 @type (this), [|int|] v2, [|boolean|] v3) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.<init>:(IZ)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L13ff7c.   call temp:=  [|java:lang:Object.<init>|](v1) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L13ff82.   if v3 == 0 then goto L13ff96;
#L13ff86.   v0:= new [|java:util:concurrent:Semaphore$FairSync|];
#L13ff8a.   call temp:=  [|java:util:concurrent:Semaphore$FairSync.<init>|](v0, v2) @signature [|Ljava/util/concurrent/Semaphore$FairSync;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$FairSync|] @type direct;
#L13ff90.   v1.[|java:util:concurrent:Semaphore.sync|]  := v0 @type object;
#L13ff94.   return @void ;
#L13ff96.   v0:= new [|java:util:concurrent:Semaphore$NonfairSync|];
#L13ff9a.   call temp:=  [|java:util:concurrent:Semaphore$NonfairSync.<init>|](v0, v2) @signature [|Ljava/util/concurrent/Semaphore$NonfairSync;.<init>:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$NonfairSync|] @type direct;
#L13ffa0.   goto L13ff90;

   }
    procedure [|void|] [|java:util:concurrent:Semaphore.acquire|] ([|java:util:concurrent:Semaphore|] v2 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.acquire:()V|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L13ffb4.   v0:= v2.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L13ffb8.   v1:= 1  @length 4;
#L13ffba.   call temp:=  [|java:util:concurrent:Semaphore$Sync.acquireSharedInterruptibly|](v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.acquireSharedInterruptibly:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13ffc0.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Semaphore.acquire|] ([|java:util:concurrent:Semaphore|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.acquire:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L13ffd4.   if v2 >= 0 then goto L13ffe4;
#L13ffd8.   v0:= new [|java:lang:IllegalArgumentException|];
#L13ffdc.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L13ffe2.   throw v0;
#L13ffe4.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L13ffe8.   call temp:=  [|java:util:concurrent:Semaphore$Sync.acquireSharedInterruptibly|](v0, v2) @signature [|Ljava/util/concurrent/Semaphore$Sync;.acquireSharedInterruptibly:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L13ffee.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Semaphore.acquireUninterruptibly|] ([|java:util:concurrent:Semaphore|] v2 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.acquireUninterruptibly:()V|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L140000.   v0:= v2.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L140004.   v1:= 1  @length 4;
#L140006.   call temp:=  [|java:util:concurrent:Semaphore$Sync.acquireShared|](v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.acquireShared:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L14000c.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Semaphore.acquireUninterruptibly|] ([|java:util:concurrent:Semaphore|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.acquireUninterruptibly:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L140020.   if v2 >= 0 then goto L140030;
#L140024.   v0:= new [|java:lang:IllegalArgumentException|];
#L140028.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14002e.   throw v0;
#L140030.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L140034.   call temp:=  [|java:util:concurrent:Semaphore$Sync.acquireShared|](v0, v2) @signature [|Ljava/util/concurrent/Semaphore$Sync;.acquireShared:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L14003a.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:Semaphore.availablePermits|] ([|java:util:concurrent:Semaphore|] v1 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.availablePermits:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L14004c.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L140050.   call temp:=  [|java:util:concurrent:Semaphore$Sync.getPermits|](v0) @signature [|Ljava/util/concurrent/Semaphore$Sync;.getPermits:()I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L140056.   v0:= temp;
#L140058.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:Semaphore.drainPermits|] ([|java:util:concurrent:Semaphore|] v1 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.drainPermits:()I|] @Access PUBLIC {
      local temp ;

        v0;
      
#L14006c.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L140070.   call temp:=  [|java:util:concurrent:Semaphore$Sync.drainPermits|](v0) @signature [|Ljava/util/concurrent/Semaphore$Sync;.drainPermits:()I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L140076.   v0:= temp;
#L140078.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:Semaphore.getQueueLength|] ([|java:util:concurrent:Semaphore|] v1 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.getQueueLength:()I|] @Access PUBLIC_FINAL {
      local temp ;

        v0;
      
#L14008c.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L140090.   call temp:=  [|java:util:concurrent:Semaphore$Sync.getQueueLength|](v0) @signature [|Ljava/util/concurrent/Semaphore$Sync;.getQueueLength:()I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L140096.   v0:= temp;
#L140098.   return v0;

   }
    procedure [|java:util:Collection|] [|java:util:concurrent:Semaphore.getQueuedThreads|] ([|java:util:concurrent:Semaphore|] v1 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.getQueuedThreads:()Ljava/util/Collection;|] @Access PROTECTED {
      local temp ;

        v0;
      
#L1400ac.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L1400b0.   call temp:=  [|java:util:concurrent:Semaphore$Sync.getQueuedThreads|](v0) @signature [|Ljava/util/concurrent/Semaphore$Sync;.getQueuedThreads:()Ljava/util/Collection;|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L1400b6.   v0:= temp  @type object;
#L1400b8.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:Semaphore.hasQueuedThreads|] ([|java:util:concurrent:Semaphore|] v1 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.hasQueuedThreads:()Z|] @Access PUBLIC_FINAL {
      local temp ;

        v0;
      
#L1400cc.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L1400d0.   call temp:=  [|java:util:concurrent:Semaphore$Sync.hasQueuedThreads|](v0) @signature [|Ljava/util/concurrent/Semaphore$Sync;.hasQueuedThreads:()Z|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L1400d6.   v0:= temp;
#L1400d8.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:Semaphore.isFair|] ([|java:util:concurrent:Semaphore|] v1 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.isFair:()Z|] @Access PUBLIC {
      local temp ;

        v0;
      
#L1400ec.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L1400f0.   v0:= instanceof @varname v0 @type [|java:util:concurrent:Semaphore$FairSync|];
#L1400f4.   return v0;

   }
    procedure [|void|] [|java:util:concurrent:Semaphore.reducePermits|] ([|java:util:concurrent:Semaphore|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.reducePermits:(I)V|] @Access PROTECTED {
      local temp ;


        v0;
      
#L140108.   if v2 >= 0 then goto L140118;
#L14010c.   v0:= new [|java:lang:IllegalArgumentException|];
#L140110.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L140116.   throw v0;
#L140118.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L14011c.   call temp:=  [|java:util:concurrent:Semaphore$Sync.reducePermits|](v0, v2) @signature [|Ljava/util/concurrent/Semaphore$Sync;.reducePermits:(I)V|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L140122.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Semaphore.release|] ([|java:util:concurrent:Semaphore|] v2 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.release:()V|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L140134.   v0:= v2.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L140138.   v1:= 1  @length 4;
#L14013a.   call temp:=  [|java:util:concurrent:Semaphore$Sync.releaseShared|](v0, v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.releaseShared:(I)Z|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L140140.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:Semaphore.release|] ([|java:util:concurrent:Semaphore|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.release:(I)V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L140154.   if v2 >= 0 then goto L140164;
#L140158.   v0:= new [|java:lang:IllegalArgumentException|];
#L14015c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L140162.   throw v0;
#L140164.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L140168.   call temp:=  [|java:util:concurrent:Semaphore$Sync.releaseShared|](v0, v2) @signature [|Ljava/util/concurrent/Semaphore$Sync;.releaseShared:(I)Z|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L14016e.   return @void ;

   }
    procedure [|java:lang:String|] [|java:util:concurrent:Semaphore.toString|] ([|java:util:concurrent:Semaphore|] v2 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.toString:()Ljava/lang/String;|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L140180.   v0:= new [|java:lang:StringBuilder|];
#L140184.   call temp:=  [|java:lang:StringBuilder.<init>|](v0) @signature [|Ljava/lang/StringBuilder;.<init>:()V|] @classDescriptor [|java:lang:StringBuilder|] @type direct;
#L14018a.   call temp:=  [|java:lang:Object.toString|](v2) @signature [|Ljava/lang/Object;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:Object|] @type super;
#L140190.   v1:= temp  @type object;
#L140192.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L140198.   v0:= temp  @type object;
#L14019a.   v1:= "[Permits = " @type (object, string);
#L14019e.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1401a4.   v0:= temp  @type object;
#L1401a6.   v1:= v2.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L1401aa.   call temp:=  [|java:util:concurrent:Semaphore$Sync.getPermits|](v1) @signature [|Ljava/util/concurrent/Semaphore$Sync;.getPermits:()I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L1401b0.   v1:= temp;
#L1401b2.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1401b8.   v0:= temp  @type object;
#L1401ba.   v1:= "]" @type (object, string);
#L1401be.   call temp:=  [|java:lang:StringBuilder.append|](v0, v1) @signature [|Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1401c4.   v0:= temp  @type object;
#L1401c6.   call temp:=  [|java:lang:StringBuilder.toString|](v0) @signature [|Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;|] @classDescriptor [|java:lang:StringBuilder|] @type virtual;
#L1401cc.   v0:= temp  @type object;
#L1401ce.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:Semaphore.tryAcquire|] ([|java:util:concurrent:Semaphore|] v2 @type (this)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.tryAcquire:()Z|] @Access PUBLIC {
      local temp ;

        v0;
        v1;
      
#L1401e0.   v0:= 1  @length 4;
#L1401e2.   v1:= v2.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L1401e6.   call temp:=  [|java:util:concurrent:Semaphore$Sync.nonfairTryAcquireShared|](v1, v0) @signature [|Ljava/util/concurrent/Semaphore$Sync;.nonfairTryAcquireShared:(I)I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L1401ec.   v1:= temp;
#L1401ee.   if v1 < 0 then goto L1401f4;
#L1401f2.   return v0;
#L1401f4.   v0:= 0  @length 4;
#L1401f6.   goto L1401f2;

   }
    procedure [|boolean|] [|java:util:concurrent:Semaphore.tryAcquire|] ([|java:util:concurrent:Semaphore|] v1 @type (this), [|int|] v2) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.tryAcquire:(I)Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L140208.   if v2 >= 0 then goto L140218;
#L14020c.   v0:= new [|java:lang:IllegalArgumentException|];
#L140210.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L140216.   throw v0;
#L140218.   v0:= v1.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L14021c.   call temp:=  [|java:util:concurrent:Semaphore$Sync.nonfairTryAcquireShared|](v0, v2) @signature [|Ljava/util/concurrent/Semaphore$Sync;.nonfairTryAcquireShared:(I)I|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L140222.   v0:= temp;
#L140224.   if v0 < 0 then goto L14022c;
#L140228.   v0:= 1  @length 4;
#L14022a.   return v0;
#L14022c.   v0:= 0  @length 4;
#L14022e.   goto L14022a;

   }
    procedure [|boolean|] [|java:util:concurrent:Semaphore.tryAcquire|] ([|java:util:concurrent:Semaphore|] v3 @type (this), [|int|] v4, [|long|] v5, [|java:util:concurrent:TimeUnit|] v7 @type (object)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.tryAcquire:(IJLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;




        v0;
        v1;
        v2;
      
#L140240.   if v4 >= 0 then goto L140250;
#L140244.   v0:= new [|java:lang:IllegalArgumentException|];
#L140248.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14024e.   throw v0;
#L140250.   v0:= v3.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L140254.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v7, v5, v6) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L14025a.   v1:= temp  @type wide;
#L14025c.   call temp:=  [|java:util:concurrent:Semaphore$Sync.tryAcquireSharedNanos|](v0, v4, v1, v2) @signature [|Ljava/util/concurrent/Semaphore$Sync;.tryAcquireSharedNanos:(IJ)Z|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L140262.   v0:= temp;
#L140264.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:Semaphore.tryAcquire|] ([|java:util:concurrent:Semaphore|] v4 @type (this), [|long|] v5, [|java:util:concurrent:TimeUnit|] v7 @type (object)) @owner [|java:util:concurrent:Semaphore|] @signature [|Ljava/util/concurrent/Semaphore;.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L140278.   v0:= v4.[|java:util:concurrent:Semaphore.sync|]   @type object;
#L14027c.   v1:= 1  @length 4;
#L14027e.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v7, v5, v6) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L140284.   v2:= temp  @type wide;
#L140286.   call temp:=  [|java:util:concurrent:Semaphore$Sync.tryAcquireSharedNanos|](v0, v1, v2, v3) @signature [|Ljava/util/concurrent/Semaphore$Sync;.tryAcquireSharedNanos:(IJ)Z|] @classDescriptor [|java:util:concurrent:Semaphore$Sync|] @type virtual;
#L14028c.   v0:= temp;
#L14028e.   return v0;

   }
record [|java:util:concurrent:SynchronousQueue$EmptyIterator|]  @type class @AccessFlag  extends  [|java:util:Iterator|] {
   }
      global [|java:util:concurrent:SynchronousQueue$EmptyIterator|] @@[|java:util:concurrent:SynchronousQueue$EmptyIterator.EMPTY_ITERATOR|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$EmptyIterator.<clinit>|] () @owner [|java:util:concurrent:SynchronousQueue$EmptyIterator|] @signature [|Ljava/util/concurrent/SynchronousQueue$EmptyIterator;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1402a0.   v0:= new [|java:util:concurrent:SynchronousQueue$EmptyIterator|];
#L1402a4.   call temp:=  [|java:util:concurrent:SynchronousQueue$EmptyIterator.<init>|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$EmptyIterator;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$EmptyIterator|] @type direct;
#L1402aa.   @@[|java:util:concurrent:SynchronousQueue$EmptyIterator.EMPTY_ITERATOR|] := v0  @type object;
#L1402ae.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$EmptyIterator.<init>|] ([|java:util:concurrent:SynchronousQueue$EmptyIterator|] v0 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$EmptyIterator|] @signature [|Ljava/util/concurrent/SynchronousQueue$EmptyIterator;.<init>:()V|] @Access PRIVATE_CONSTRUCTOR {
      local temp ;


      
#L1402c0.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1402c6.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$EmptyIterator.hasNext|] ([|java:util:concurrent:SynchronousQueue$EmptyIterator|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$EmptyIterator|] @signature [|Ljava/util/concurrent/SynchronousQueue$EmptyIterator;.hasNext:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1402d8.   v0:= 0  @length 4;
#L1402da.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue$EmptyIterator.next|] ([|java:util:concurrent:SynchronousQueue$EmptyIterator|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$EmptyIterator|] @signature [|Ljava/util/concurrent/SynchronousQueue$EmptyIterator;.next:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1402ec.   v0:= new [|java:util:NoSuchElementException|];
#L1402f0.   call temp:=  [|java:util:NoSuchElementException.<init>|](v0) @signature [|Ljava/util/NoSuchElementException;.<init>:()V|] @classDescriptor [|java:util:NoSuchElementException|] @type direct;
#L1402f6.   throw v0;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$EmptyIterator.remove|] ([|java:util:concurrent:SynchronousQueue$EmptyIterator|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$EmptyIterator|] @signature [|Ljava/util/concurrent/SynchronousQueue$EmptyIterator;.remove:()V|] @Access PUBLIC {
      local temp ;


        v0;
      
#L140308.   v0:= new [|java:lang:IllegalStateException|];
#L14030c.   call temp:=  [|java:lang:IllegalStateException.<init>|](v0) @signature [|Ljava/lang/IllegalStateException;.<init>:()V|] @classDescriptor [|java:lang:IllegalStateException|] @type direct;
#L140312.   throw v0;

   }
record [|java:util:concurrent:SynchronousQueue$WaitQueue|]  @type class @AccessFlag  extends  [|java:io:Serializable|] {
   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$WaitQueue.<init>|] ([|java:util:concurrent:SynchronousQueue$WaitQueue|] v0 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$WaitQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$WaitQueue;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

      
#L140324.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14032a.   return @void ;

   }
record [|java:util:concurrent:SynchronousQueue$FifoWaitQueue|]  @type class @AccessFlag   extends [|java:util:concurrent:SynchronousQueue$WaitQueue|] {
   }
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$FifoWaitQueue.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$FifoWaitQueue.<init>|] ([|java:util:concurrent:SynchronousQueue$FifoWaitQueue|] v0 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$FifoWaitQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$FifoWaitQueue;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

      
#L14033c.   call temp:=  [|java:util:concurrent:SynchronousQueue$WaitQueue.<init>|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$WaitQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$WaitQueue|] @type direct;
#L140342.   return @void ;

   }
record [|java:util:concurrent:SynchronousQueue$LifoWaitQueue|]  @type class @AccessFlag   extends [|java:util:concurrent:SynchronousQueue$WaitQueue|] {
   }
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$LifoWaitQueue.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$LifoWaitQueue.<init>|] ([|java:util:concurrent:SynchronousQueue$LifoWaitQueue|] v0 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$LifoWaitQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$LifoWaitQueue;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

      
#L140354.   call temp:=  [|java:util:concurrent:SynchronousQueue$WaitQueue.<init>|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$WaitQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$WaitQueue|] @type direct;
#L14035a.   return @void ;

   }
record [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|]  @type class @AccessFlag FINAL  {
      [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.isData|]    @AccessFlag FINAL;
      [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.item|]    @AccessFlag VOLATILE;
      [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]    @AccessFlag VOLATILE;
      [|java:lang:Thread|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.waiter|]    @AccessFlag VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.itemOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.nextOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.<clinit>|] () @owner [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0026,L002c));
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0008,L002c));
        v2;
        v3;
      
#L14036c.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L140372.   v2:= temp  @type object;
#L140374.   @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.UNSAFE|] := v2  @type object;
#L140378.   v1:= new [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|];
#L14037c.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.UNSAFE|]   @type object;
#L140380.   v3:= "item" @type (object, string);
#L140384.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14038a.   v3:= temp  @type object;
#L14038c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140392.   v2:= temp  @type wide;
#L140394.   @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.itemOffset|] := v2  @wide;
#L140398.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.UNSAFE|]   @type object;
#L14039c.   v3:= "next" @type (object, string);
#L1403a0.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L1403a6.   v3:= temp  @type object;
#L1403a8.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1403ae.   v2:= temp  @type wide;
#L1403b0.   @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.nextOffset|] := v2  @wide;
#L1403b4.   return @void ;
#L1403b6.   v0:= Exception  @type object;
#L1403b8.   v2:= new [|java:lang:Error|];
#L1403bc.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L1403c2.   throw v2;
  catch  [|java:lang:Exception|] @[L14036c..L1403b4] goto L1403b6;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.<init>|] ([|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v0 @type (this), [|java:lang:Object|] v1 @type (object), [|boolean|] v2) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.<init>:(Ljava/lang/Object;Z)V|] @Access CONSTRUCTOR {
      local temp ;



      
#L1403e4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1403ea.   v0.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.item|]  := v1 @type object;
#L1403ee.   v0.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.isData|]  := v2 @boolean;
#L1403f2.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.casItem|] ([|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v6 @type (this), [|java:lang:Object|] v7 @type (object), [|java:lang:Object|] v8 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @Access  {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L140404.   v0:= v6.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.item|]   @type object;
#L140408.   if v0 != v7 then goto L14042a;
#L14040c.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.UNSAFE|]   @type object;
#L140410.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.itemOffset|]   @wide;
#L140414.   v1:= v6  @type object;
#L140416.   v4:= v7  @type object;
#L140418.   v5:= v8  @type object;
#L14041a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140420.   v0:= temp;
#L140422.   if v0 == 0 then goto L14042a;
#L140426.   v0:= 1  @length 4;
#L140428.   return v0;
#L14042a.   v0:= 0  @length 4;
#L14042c.   goto L140428;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.casNext|] ([|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v6 @type (this), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v7 @type (object), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v8 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.casNext:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)Z|] @Access  {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L140440.   v0:= v6.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L140444.   if v0 != v7 then goto L140466;
#L140448.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.UNSAFE|]   @type object;
#L14044c.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.nextOffset|]   @wide;
#L140450.   v1:= v6  @type object;
#L140452.   v4:= v7  @type object;
#L140454.   v5:= v8  @type object;
#L140456.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14045c.   v0:= temp;
#L14045e.   if v0 == 0 then goto L140466;
#L140462.   v0:= 1  @length 4;
#L140464.   return v0;
#L140466.   v0:= 0  @length 4;
#L140468.   goto L140464;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.isCancelled|] ([|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.isCancelled:()Z|] @Access  {
      local temp ;

        v0;
      
#L14047c.   v0:= v1.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.item|]   @type object;
#L140480.   if v0 != v1 then goto L140488;
#L140484.   v0:= 1  @length 4;
#L140486.   return v0;
#L140488.   v0:= 0  @length 4;
#L14048a.   goto L140486;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.isOffList|] ([|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.isOffList:()Z|] @Access  {
      local temp ;

        v0;
      
#L14049c.   v0:= v1.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L1404a0.   if v0 != v1 then goto L1404a8;
#L1404a4.   v0:= 1  @length 4;
#L1404a6.   return v0;
#L1404a8.   v0:= 0  @length 4;
#L1404aa.   goto L1404a6;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.tryCancel|] ([|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v6 @type (this), [|java:lang:Object|] v7 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.tryCancel:(Ljava/lang/Object;)V|] @Access  {
      local temp ;


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1404bc.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.UNSAFE|]   @type object;
#L1404c0.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.itemOffset|]   @wide;
#L1404c4.   v1:= v6  @type object;
#L1404c6.   v4:= v7  @type object;
#L1404c8.   v5:= v6  @type object;
#L1404ca.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1404d0.   return @void ;

   }
record [|java:util:concurrent:SynchronousQueue$Transferer|]  @type class @AccessFlag ABSTRACT  {
   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$Transferer.<init>|] ([|java:util:concurrent:SynchronousQueue$Transferer|] v0 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$Transferer|] @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

      
#L1404e4.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L1404ea.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue$Transferer.transfer|] ([|java:lang:Object|] v0 @type (object), [|boolean|] v1, [|long|] v2) @owner [|java:util:concurrent:SynchronousQueue$Transferer|] @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @Access ABSTRACT {
      # return;
   }
record [|java:util:concurrent:SynchronousQueue$TransferQueue|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:SynchronousQueue$Transferer|] {
      [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] [|java:util:concurrent:SynchronousQueue$TransferQueue.cleanMe|]    @AccessFlag VOLATILE_TRANSIENT;
      [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] [|java:util:concurrent:SynchronousQueue$TransferQueue.head|]    @AccessFlag VOLATILE_TRANSIENT;
      [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] [|java:util:concurrent:SynchronousQueue$TransferQueue.tail|]    @AccessFlag VOLATILE_TRANSIENT;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:SynchronousQueue$TransferQueue.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$TransferQueue.cleanMeOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$TransferQueue.headOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$TransferQueue.tailOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferQueue.<clinit>|] () @owner [|java:util:concurrent:SynchronousQueue$TransferQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0034,L003a));
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0008,L003a));
        v2;
        v3;
      
#L1404fc.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L140502.   v2:= temp  @type object;
#L140504.   @@[|java:util:concurrent:SynchronousQueue$TransferQueue.UNSAFE|] := v2  @type object;
#L140508.   v1:= new [|java:util:concurrent:SynchronousQueue$TransferQueue|];
#L14050c.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue.UNSAFE|]   @type object;
#L140510.   v3:= "head" @type (object, string);
#L140514.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14051a.   v3:= temp  @type object;
#L14051c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140522.   v2:= temp  @type wide;
#L140524.   @@[|java:util:concurrent:SynchronousQueue$TransferQueue.headOffset|] := v2  @wide;
#L140528.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue.UNSAFE|]   @type object;
#L14052c.   v3:= "tail" @type (object, string);
#L140530.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L140536.   v3:= temp  @type object;
#L140538.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14053e.   v2:= temp  @type wide;
#L140540.   @@[|java:util:concurrent:SynchronousQueue$TransferQueue.tailOffset|] := v2  @wide;
#L140544.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue.UNSAFE|]   @type object;
#L140548.   v3:= "cleanMe" @type (object, string);
#L14054c.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L140552.   v3:= temp  @type object;
#L140554.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L14055a.   v2:= temp  @type wide;
#L14055c.   @@[|java:util:concurrent:SynchronousQueue$TransferQueue.cleanMeOffset|] := v2  @wide;
#L140560.   return @void ;
#L140562.   v0:= Exception  @type object;
#L140564.   v2:= new [|java:lang:Error|];
#L140568.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L14056e.   throw v2;
  catch  [|java:lang:Exception|] @[L1404fc..L140560] goto L140562;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferQueue.<init>|] ([|java:util:concurrent:SynchronousQueue$TransferQueue|] v3 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v0 @varname [|h|] @scope ((L000a,L000f));

        v1;
        v2;
      
#L140590.   call temp:=  [|java:util:concurrent:SynchronousQueue$Transferer.<init>|](v3) @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$Transferer|] @type direct;
#L140596.   v0:= new [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|];
#L14059a.   v1:= 0  @length 4;
#L14059c.   v2:= 0  @length 4;
#L14059e.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.<init>|](v0, v1, v2) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.<init>:(Ljava/lang/Object;Z)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type direct;
#L1405a4.   v3.[|java:util:concurrent:SynchronousQueue$TransferQueue.head|]  := v0 @type object;
#L1405a8.   v3.[|java:util:concurrent:SynchronousQueue$TransferQueue.tail|]  := v0 @type object;
#L1405ac.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferQueue.advanceHead|] ([|java:util:concurrent:SynchronousQueue$TransferQueue|] v6 @type (this), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v7 @type (object), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v8 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceHead:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @Access  {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1405c0.   v0:= v6.[|java:util:concurrent:SynchronousQueue$TransferQueue.head|]   @type object;
#L1405c4.   if v7 != v0 then goto L1405e6;
#L1405c8.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue.UNSAFE|]   @type object;
#L1405cc.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue.headOffset|]   @wide;
#L1405d0.   v1:= v6  @type object;
#L1405d2.   v4:= v7  @type object;
#L1405d4.   v5:= v8  @type object;
#L1405d6.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1405dc.   v0:= temp;
#L1405de.   if v0 == 0 then goto L1405e6;
#L1405e2.   v7.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]  := v7 @type object;
#L1405e6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferQueue.advanceTail|] ([|java:util:concurrent:SynchronousQueue$TransferQueue|] v6 @type (this), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v7 @type (object), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v8 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceTail:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @Access  {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1405f8.   v0:= v6.[|java:util:concurrent:SynchronousQueue$TransferQueue.tail|]   @type object;
#L1405fc.   if v0 != v7 then goto L140614;
#L140600.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue.UNSAFE|]   @type object;
#L140604.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue.tailOffset|]   @wide;
#L140608.   v1:= v6  @type object;
#L14060a.   v4:= v7  @type object;
#L14060c.   v5:= v8  @type object;
#L14060e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140614.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue$TransferQueue.awaitFulfill|] ([|java:util:concurrent:SynchronousQueue$TransferQueue|] v9 @type (this), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v10 @type (object), [|java:lang:Object|] v11 @type (object), [|boolean|] v12, [|long|] v13) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.awaitFulfill:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @Access  {
      local temp ;
        [|long|] v0 @varname [|lastTime|] @scope ((L0006,L0022), (L0025,L005a));
        [|int|] v4 @varname [|spins|] @scope ((L0014,L0022), (L002a,L005a));
        [|java:lang:Thread|] v5 @varname [|w|] @scope ((L000a,L0022), (L0025,L005a));
        [|java:lang:Object|] v6 @varname [|x|] @scope ((L001f,L0022), (L002a,L005a));
        [|long|] v2 @varname [|now|] @scope ((L0030,L003e));





        v1;
        v3;
        v7;
        v8;
      
#L140628.   if v12 == 0 then goto L14066c;
#L14062c.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L140632.   v0:= temp  @type wide;
#L140634.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L14063a.   v5:= temp  @type object;
#L14063c.   v7:= v9.[|java:util:concurrent:SynchronousQueue$TransferQueue.head|]   @type object;
#L140640.   v7:= v7.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L140644.   if v7 != v10 then goto L140678;
#L140648.   if v12 == 0 then goto L140672;
#L14064c.   v4:= @@[|java:util:concurrent:SynchronousQueue.maxTimedSpins|] ;
#L140650.   call temp:=  [|java:lang:Thread.isInterrupted|](v5) @signature [|Ljava/lang/Thread;.isInterrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L140656.   v7:= temp;
#L140658.   if v7 == 0 then goto L140662;
#L14065c.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.tryCancel|](v10, v11) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.tryCancel:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type virtual;
#L140662.   v6:= v10.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.item|]   @type object;
#L140666.   if v6 == v11 then goto L14067c;
#L14066a.   return v6  @type object;
#L14066c.   v0:= 0  @length wide16;
#L140670.   goto L140634;
#L140672.   v4:= @@[|java:util:concurrent:SynchronousQueue.maxUntimedSpins|] ;
#L140676.   goto L140650;
#L140678.   v4:= 0  @length 4;
#L14067a.   goto L140650;
#L14067c.   if v12 == 0 then goto L1406a4;
#L140680.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L140686.   v2:= temp  @type wide;
#L140688.   v7:= v2 - v0  @type long;
#L14068c.   v13:= v13 - v7  @type long;
#L14068e.   v0:= v2  @type wide;
#L140690.   v7:= 0  @length wide16;
#L140694.   v7:= cmp(v13,v7);
#L140698.   if v7 > 0 then goto L1406a4;
#L14069c.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.tryCancel|](v10, v11) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.tryCancel:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type virtual;
#L1406a2.   goto L140650;
#L1406a4.   if v4 <= 0 then goto L1406ae;
#L1406a8.   v4:= v4 + -1;
#L1406ac.   goto L140650;
#L1406ae.   v7:= v10.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.waiter|]   @type object;
#L1406b2.   if v7 != 0 then goto L1406bc;
#L1406b6.   v10.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.waiter|]  := v5 @type object;
#L1406ba.   goto L140650;
#L1406bc.   if v12 != 0 then goto L1406c8;
#L1406c0.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v9) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L1406c6.   goto L140650;
#L1406c8.   v7:= 1000  @length wide16;
#L1406cc.   v7:= cmp(v13,v7);
#L1406d0.   if v7 <= 0 then goto L140650;
#L1406d4.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v9, v13, v14) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L1406da.   goto L140650;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferQueue.casCleanMe|] ([|java:util:concurrent:SynchronousQueue$TransferQueue|] v6 @type (this), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v7 @type (object), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v8 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.casCleanMe:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)Z|] @Access  {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1406ec.   v0:= v6.[|java:util:concurrent:SynchronousQueue$TransferQueue.cleanMe|]   @type object;
#L1406f0.   if v0 != v7 then goto L140712;
#L1406f4.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue.UNSAFE|]   @type object;
#L1406f8.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferQueue.cleanMeOffset|]   @wide;
#L1406fc.   v1:= v6  @type object;
#L1406fe.   v4:= v7  @type object;
#L140700.   v5:= v8  @type object;
#L140702.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140708.   v0:= temp;
#L14070a.   if v0 == 0 then goto L140712;
#L14070e.   v0:= 1  @length 4;
#L140710.   return v0;
#L140712.   v0:= 0  @length 4;
#L140714.   goto L140710;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferQueue.clean|] ([|java:util:concurrent:SynchronousQueue$TransferQueue|] v10 @type (this), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v11 @type (object), [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v12 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.clean:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @Access  {
      local temp ;
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v3 @varname [|h|] @scope ((L0009,L001b), (L001c,L005f));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v4 @varname [|hn|] @scope ((L000b,L001b), (L001c,L005f));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v6 @varname [|t|] @scope ((L0019,L001b), (L001c,L005f));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v5 @varname [|sn|] @scope ((L002c,L0034));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v1 @varname [|dn|] @scope ((L0048,L0052));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v0 @varname [|d|] @scope ((L003a,L0058));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v2 @varname [|dp|] @scope ((L0036,L005f));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v7 @varname [|tn|] @scope ((L001e,L005f));



        v8;
        v9;
      
#L140728.   v9:= 0  @length 4;
#L14072a.   v12.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.waiter|]  := v9 @type object;
#L14072e.   v8:= v11.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L140732.   if v8 != v12 then goto L14075e;
#L140736.   v3:= v10.[|java:util:concurrent:SynchronousQueue$TransferQueue.head|]   @type object;
#L14073a.   v4:= v3.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L14073e.   if v4 == 0 then goto L140756;
#L140742.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.isCancelled|](v4) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type virtual;
#L140748.   v8:= temp;
#L14074a.   if v8 == 0 then goto L140756;
#L14074e.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.advanceHead|](v10, v3, v4) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceHead:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L140754.   goto L14072e;
#L140756.   v6:= v10.[|java:util:concurrent:SynchronousQueue$TransferQueue.tail|]   @type object;
#L14075a.   if v6 != v3 then goto L140760;
#L14075e.   return @void ;
#L140760.   v7:= v6.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L140764.   v8:= v10.[|java:util:concurrent:SynchronousQueue$TransferQueue.tail|]   @type object;
#L140768.   if v6 != v8 then goto L14072e;
#L14076c.   if v7 == 0 then goto L140778;
#L140770.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.advanceTail|](v10, v6, v7) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceTail:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L140776.   goto L14072e;
#L140778.   if v12 == v6 then goto L140790;
#L14077c.   v5:= v12.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L140780.   if v5 == v12 then goto L14075e;
#L140784.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.casNext|](v11, v12, v5) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.casNext:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type virtual;
#L14078a.   v8:= temp;
#L14078c.   if v8 != 0 then goto L14075e;
#L140790.   v2:= v10.[|java:util:concurrent:SynchronousQueue$TransferQueue.cleanMe|]   @type object;
#L140794.   if v2 == 0 then goto L1407d8;
#L140798.   v0:= v2.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L14079c.   if v0 == 0 then goto L1407cc;
#L1407a0.   if v0 == v2 then goto L1407cc;
#L1407a4.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.isCancelled|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type virtual;
#L1407aa.   v8:= temp;
#L1407ac.   if v8 == 0 then goto L1407cc;
#L1407b0.   if v0 == v6 then goto L1407d2;
#L1407b4.   v1:= v0.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L1407b8.   if v1 == 0 then goto L1407d2;
#L1407bc.   if v1 == v0 then goto L1407d2;
#L1407c0.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.casNext|](v2, v0, v1) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.casNext:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type virtual;
#L1407c6.   v8:= temp;
#L1407c8.   if v8 == 0 then goto L1407d2;
#L1407cc.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.casCleanMe|](v10, v2, v9) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.casCleanMe:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L1407d2.   if v2 != v11 then goto L14072e;
#L1407d6.   goto L14075e;
#L1407d8.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.casCleanMe|](v10, v9, v11) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.casCleanMe:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L1407de.   v8:= temp;
#L1407e0.   if v8 == 0 then goto L14072e;
#L1407e4.   goto L14075e;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue$TransferQueue.transfer|] ([|java:util:concurrent:SynchronousQueue$TransferQueue|] v12 @type (this), [|java:lang:Object|] v13 @type (object), [|boolean|] v14, [|long|] v15) @owner [|java:util:concurrent:SynchronousQueue$TransferQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @Access  {
      local temp ;
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v6 @varname [|h|] @scope ((L0008,L001e), (L0020,L008b));
        [|boolean|] v7 @varname [|isData|] @scope ((L0004,L001e), (L0020,L008b));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v9 @varname [|t|] @scope ((L0006,L001e), (L0020,L008b));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v10 @varname [|tn|] @scope ((L0014,L001e), (L0020,L0029), (L002a,L005e));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v1 @varname [|s|] @scope ((L0001,L002e), (L0031,L008b));
        [|java:lang:Object|] v11 @varname [|x|] @scope ((L0043,L005e), (L006c,L008b));
        [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] v8 @varname [|m|] @scope ((L0060,L008b));




        v0;
        v2;
        v3;
        v4;
        v5;
      
#L1407f8.   v1:= 0  @length 4;
#L1407fa.   if v13 == 0 then goto L140834;
#L1407fe.   v7:= 1  @length 4;
#L140800.   v9:= v12.[|java:util:concurrent:SynchronousQueue$TransferQueue.tail|]   @type object;
#L140804.   v6:= v12.[|java:util:concurrent:SynchronousQueue$TransferQueue.head|]   @type object;
#L140808.   if v9 == 0 then goto L140800;
#L14080c.   if v6 == 0 then goto L140800;
#L140810.   if v6 == v9 then goto L14081c;
#L140814.   v0:= v9.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.isData|]   @boolean;
#L140818.   if v0 != v7 then goto L1408b4;
#L14081c.   v10:= v9.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L140820.   v0:= v12.[|java:util:concurrent:SynchronousQueue$TransferQueue.tail|]   @type object;
#L140824.   if v9 != v0 then goto L140800;
#L140828.   if v10 == 0 then goto L140838;
#L14082c.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.advanceTail|](v12, v9, v10) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceTail:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L140832.   goto L140800;
#L140834.   v7:= 0  @length 4;
#L140836.   goto L140800;
#L140838.   if v14 == 0 then goto L14084c;
#L14083c.   v2:= 0  @length wide16;
#L140840.   v0:= cmp(v15,v2);
#L140844.   if v0 > 0 then goto L14084c;
#L140848.   v11:= 0  @length 4;
#L14084a.   return v11  @type object;
#L14084c.   if v1 != 0 then goto L14085a;
#L140850.   v1:= new [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|];
#L140854.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.<init>|](v1, v13, v7) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.<init>:(Ljava/lang/Object;Z)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type direct;
#L14085a.   v0:= 0  @length 4;
#L14085c.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.casNext|](v9, v0, v1) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.casNext:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type virtual;
#L140862.   v0:= temp;
#L140864.   if v0 == 0 then goto L140800;
#L140868.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.advanceTail|](v12, v9, v1) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceTail:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L14086e.   v0:= v12  @type object;
#L140870.   v2:= v13  @type object;
#L140872.   v3:= v14;
#L140874.   v4:= v15  @type wide;
#L140876.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.awaitFulfill|](v0, v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.awaitFulfill:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L14087c.   v11:= temp  @type object;
#L14087e.   if v11 != v1 then goto L14088c;
#L140882.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.clean|](v12, v9, v1) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.clean:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L140888.   v11:= 0  @length 4;
#L14088a.   goto L14084a;
#L14088c.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.isOffList|](v1) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.isOffList:()Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type virtual;
#L140892.   v0:= temp;
#L140894.   if v0 != 0 then goto L1408ac;
#L140898.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.advanceHead|](v12, v9, v1) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceHead:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L14089e.   if v11 == 0 then goto L1408a6;
#L1408a2.   v1.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.item|]  := v1 @type object;
#L1408a6.   v0:= 0  @length 4;
#L1408a8.   v1.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.waiter|]  := v0 @type object;
#L1408ac.   if v11 != 0 then goto L14084a;
#L1408b0.   v11:= v13  @type object;
#L1408b2.   goto L14084a;
#L1408b4.   v8:= v6.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.next|]   @type object;
#L1408b8.   v0:= v12.[|java:util:concurrent:SynchronousQueue$TransferQueue.tail|]   @type object;
#L1408bc.   if v9 != v0 then goto L140800;
#L1408c0.   if v8 == 0 then goto L140800;
#L1408c4.   v0:= v12.[|java:util:concurrent:SynchronousQueue$TransferQueue.head|]   @type object;
#L1408c8.   if v6 != v0 then goto L140800;
#L1408cc.   v11:= v8.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.item|]   @type object;
#L1408d0.   if v11 == 0 then goto L1408f2;
#L1408d4.   v0:= 1  @length 4;
#L1408d6.   if v7 == v0 then goto L1408ea;
#L1408da.   if v11 == v8 then goto L1408ea;
#L1408de.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.casItem|](v8, v11, v13) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.casItem:(Ljava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue$QNode|] @type virtual;
#L1408e4.   v0:= temp;
#L1408e6.   if v0 != 0 then goto L1408f6;
#L1408ea.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.advanceHead|](v12, v6, v8) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceHead:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L1408f0.   goto L140800;
#L1408f2.   v0:= 0  @length 4;
#L1408f4.   goto L1408d6;
#L1408f6.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.advanceHead|](v12, v6, v8) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceHead:(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type virtual;
#L1408fc.   v0:= v8.[|java:util:concurrent:SynchronousQueue$TransferQueue$QNode.waiter|]   @type object;
#L140900.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v0) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L140906.   if v11 != 0 then goto L14084a;
#L14090a.   v11:= v13  @type object;
#L14090c.   goto L14084a;

   }
record [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|]  @type class @AccessFlag FINAL  {
      [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.item|]    @AccessFlag ;
      [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.match|]    @AccessFlag VOLATILE;
      [|int|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.mode|]    @AccessFlag ;
      [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]    @AccessFlag VOLATILE;
      [|java:lang:Thread|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.waiter|]    @AccessFlag VOLATILE;
   }
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.matchOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.nextOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.<clinit>|] () @owner [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0026,L002c));
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0008,L002c));
        v2;
        v3;
      
#L140920.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L140926.   v2:= temp  @type object;
#L140928.   @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.UNSAFE|] := v2  @type object;
#L14092c.   v1:= new [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|];
#L140930.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.UNSAFE|]   @type object;
#L140934.   v3:= "match" @type (object, string);
#L140938.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14093e.   v3:= temp  @type object;
#L140940.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140946.   v2:= temp  @type wide;
#L140948.   @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.matchOffset|] := v2  @wide;
#L14094c.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.UNSAFE|]   @type object;
#L140950.   v3:= "next" @type (object, string);
#L140954.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L14095a.   v3:= temp  @type object;
#L14095c.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140962.   v2:= temp  @type wide;
#L140964.   @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.nextOffset|] := v2  @wide;
#L140968.   return @void ;
#L14096a.   v0:= Exception  @type object;
#L14096c.   v2:= new [|java:lang:Error|];
#L140970.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L140976.   throw v2;
  catch  [|java:lang:Exception|] @[L140920..L140968] goto L14096a;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.<init>|] ([|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v0 @type (this), [|java:lang:Object|] v1 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.<init>:(Ljava/lang/Object;)V|] @Access CONSTRUCTOR {
      local temp ;


      
#L140998.   call temp:=  [|java:lang:Object.<init>|](v0) @signature [|Ljava/lang/Object;.<init>:()V|] @classDescriptor [|java:lang:Object|] @type direct;
#L14099e.   v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.item|]  := v1 @type object;
#L1409a2.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.casNext|] ([|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v6 @type (this), [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v7 @type (object), [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v8 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.casNext:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @Access  {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1409b4.   v0:= v6.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L1409b8.   if v7 != v0 then goto L1409da;
#L1409bc.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.UNSAFE|]   @type object;
#L1409c0.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.nextOffset|]   @wide;
#L1409c4.   v1:= v6  @type object;
#L1409c6.   v4:= v7  @type object;
#L1409c8.   v5:= v8  @type object;
#L1409ca.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L1409d0.   v0:= temp;
#L1409d2.   if v0 == 0 then goto L1409da;
#L1409d6.   v0:= 1  @length 4;
#L1409d8.   return v0;
#L1409da.   v0:= 0  @length 4;
#L1409dc.   goto L1409d8;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.isCancelled|] ([|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.isCancelled:()Z|] @Access  {
      local temp ;

        v0;
      
#L1409f0.   v0:= v1.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.match|]   @type object;
#L1409f4.   if v0 != v1 then goto L1409fc;
#L1409f8.   v0:= 1  @length 4;
#L1409fa.   return v0;
#L1409fc.   v0:= 0  @length 4;
#L1409fe.   goto L1409fa;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.tryCancel|] ([|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v6 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.tryCancel:()V|] @Access  {
      local temp ;

        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L140a10.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.UNSAFE|]   @type object;
#L140a14.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.matchOffset|]   @wide;
#L140a18.   v4:= 0  @length 4;
#L140a1a.   v1:= v6  @type object;
#L140a1c.   v5:= v6  @type object;
#L140a1e.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140a24.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.tryMatch|] ([|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v8 @type (this), [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v9 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.tryMatch:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @Access  {
      local temp ;
        [|java:lang:Thread|] v6 @varname [|w|] @scope ((L0014,L001b));


        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
        v7;
      
#L140a38.   v4:= 0  @length 4;
#L140a3a.   v7:= 1  @length 4;
#L140a3c.   v0:= v8.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.match|]   @type object;
#L140a40.   if v0 != 0 then goto L140a70;
#L140a44.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.UNSAFE|]   @type object;
#L140a48.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.matchOffset|]   @wide;
#L140a4c.   v1:= v8  @type object;
#L140a4e.   v5:= v9  @type object;
#L140a50.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140a56.   v0:= temp;
#L140a58.   if v0 == 0 then goto L140a70;
#L140a5c.   v6:= v8.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.waiter|]   @type object;
#L140a60.   if v6 == 0 then goto L140a6e;
#L140a64.   v8.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.waiter|]  := v4 @type object;
#L140a68.   call temp:=  [|java:util:concurrent:locks:LockSupport.unpark|](v6) @signature [|Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L140a6e.   return v7;
#L140a70.   v0:= v8.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.match|]   @type object;
#L140a74.   if v0 != v9 then goto L140a7e;
#L140a78.   v0:= v7;
#L140a7a.   v7:= v0;
#L140a7c.   goto L140a6e;
#L140a7e.   v0:= 0  @length 4;
#L140a80.   goto L140a7a;

   }
record [|java:util:concurrent:SynchronousQueue$TransferStack|]  @type class @AccessFlag FINAL  extends [|java:util:concurrent:SynchronousQueue$Transferer|] {
      [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] [|java:util:concurrent:SynchronousQueue$TransferStack.head|]    @AccessFlag VOLATILE;
   }
      global [|int|] @@[|java:util:concurrent:SynchronousQueue$TransferStack.DATA|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:SynchronousQueue$TransferStack.FULFILLING|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:SynchronousQueue$TransferStack.REQUEST|]    @AccessFlag STATIC_FINAL;
      global [|sun:misc:Unsafe|] @@[|java:util:concurrent:SynchronousQueue$TransferStack.UNSAFE|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue$TransferStack.headOffset|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferStack.<clinit>|] () @owner [|java:util:concurrent:SynchronousQueue$TransferStack|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        [|java:lang:Exception|] v0 @varname [|e|] @scope ((L0018,L001e));
        [|java:lang:Class|] v1 @varname [|k|] @scope ((L0008,L001e));
        v2;
        v3;
      
#L140a94.   call temp:=  [|sun:misc:Unsafe.getUnsafe|]() @signature [|Lsun/misc/Unsafe;.getUnsafe:()Lsun/misc/Unsafe;|] @classDescriptor [|sun:misc:Unsafe|] @type static;
#L140a9a.   v2:= temp  @type object;
#L140a9c.   @@[|java:util:concurrent:SynchronousQueue$TransferStack.UNSAFE|] := v2  @type object;
#L140aa0.   v1:= new [|java:util:concurrent:SynchronousQueue$TransferStack|];
#L140aa4.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferStack.UNSAFE|]   @type object;
#L140aa8.   v3:= "head" @type (object, string);
#L140aac.   call temp:=  [|java:lang:Class.getDeclaredField|](v1, v3) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L140ab2.   v3:= temp  @type object;
#L140ab4.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v2, v3) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140aba.   v2:= temp  @type wide;
#L140abc.   @@[|java:util:concurrent:SynchronousQueue$TransferStack.headOffset|] := v2  @wide;
#L140ac0.   return @void ;
#L140ac2.   v0:= Exception  @type object;
#L140ac4.   v2:= new [|java:lang:Error|];
#L140ac8.   call temp:=  [|java:lang:Error.<init>|](v2, v0) @signature [|Ljava/lang/Error;.<init>:(Ljava/lang/Throwable;)V|] @classDescriptor [|java:lang:Error|] @type direct;
#L140ace.   throw v2;
  catch  [|java:lang:Exception|] @[L140a94..L140ac0] goto L140ac2;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferStack.<init>|] ([|java:util:concurrent:SynchronousQueue$TransferStack|] v0 @type (this)) @owner [|java:util:concurrent:SynchronousQueue$TransferStack|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

      
#L140af0.   call temp:=  [|java:util:concurrent:SynchronousQueue$Transferer.<init>|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$Transferer|] @type direct;
#L140af6.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferStack.isFulfilling|] ([|int|] v1) @owner [|java:util:concurrent:SynchronousQueue$TransferStack|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.isFulfilling:(I)Z|] @Access STATIC {
      local temp ;

        v0;
      
#L140b08.   v0:= v1 ^& 2;
#L140b0c.   if v0 == 0 then goto L140b14;
#L140b10.   v0:= 1  @length 4;
#L140b12.   return v0;
#L140b14.   v0:= 0  @length 4;
#L140b16.   goto L140b12;

   }
    procedure [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] [|java:util:concurrent:SynchronousQueue$TransferStack.snode|] ([|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v0 @type (object), [|java:lang:Object|] v1 @type (object), [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v2 @type (object), [|int|] v3) @owner [|java:util:concurrent:SynchronousQueue$TransferStack|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.snode:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/lang/Object;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;I)Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;|] @Access STATIC {
      local temp ;





      
#L140b28.   if v0 != 0 then goto L140b36;
#L140b2c.   v0:= new [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|];
#L140b30.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.<init>|](v0, v1) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.<init>:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type direct;
#L140b36.   v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.mode|]  := v3;
#L140b3a.   v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]  := v2 @type object;
#L140b3e.   return v0  @type object;

   }
    procedure [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] [|java:util:concurrent:SynchronousQueue$TransferStack.awaitFulfill|] ([|java:util:concurrent:SynchronousQueue$TransferStack|] v9 @type (this), [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v10 @type (object), [|boolean|] v11, [|long|] v12) @owner [|java:util:concurrent:SynchronousQueue$TransferStack|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.awaitFulfill:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;ZJ)Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;|] @Access  {
      local temp ;
        [|long|] v0 @varname [|lastTime|] @scope ((L0006,L0022), (L0025,L0062));
        [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v2 @varname [|m|] @scope ((L001f,L0022), (L002a,L0062));
        [|int|] v5 @varname [|spins|] @scope ((L0014,L0022), (L002a,L0062));
        [|java:lang:Thread|] v6 @varname [|w|] @scope ((L000a,L0022), (L0025,L0062));
        [|long|] v3 @varname [|now|] @scope ((L0030,L003e));




        v1;
        v4;
        v7;
        v8;
      
#L140b50.   if v11 == 0 then goto L140b94;
#L140b54.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L140b5a.   v0:= temp  @type wide;
#L140b5c.   call temp:=  [|java:lang:Thread.currentThread|]() @signature [|Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;|] @classDescriptor [|java:lang:Thread|] @type static;
#L140b62.   v6:= temp  @type object;
#L140b64.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.shouldSpin|](v9, v10) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.shouldSpin:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140b6a.   v7:= temp;
#L140b6c.   if v7 == 0 then goto L140ba0;
#L140b70.   if v11 == 0 then goto L140b9a;
#L140b74.   v5:= @@[|java:util:concurrent:SynchronousQueue.maxTimedSpins|] ;
#L140b78.   call temp:=  [|java:lang:Thread.isInterrupted|](v6) @signature [|Ljava/lang/Thread;.isInterrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type virtual;
#L140b7e.   v7:= temp;
#L140b80.   if v7 == 0 then goto L140b8a;
#L140b84.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.tryCancel|](v10) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.tryCancel:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140b8a.   v2:= v10.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.match|]   @type object;
#L140b8e.   if v2 == 0 then goto L140ba4;
#L140b92.   return v2  @type object;
#L140b94.   v0:= 0  @length wide16;
#L140b98.   goto L140b5c;
#L140b9a.   v5:= @@[|java:util:concurrent:SynchronousQueue.maxUntimedSpins|] ;
#L140b9e.   goto L140b78;
#L140ba0.   v5:= 0  @length 4;
#L140ba2.   goto L140b78;
#L140ba4.   if v11 == 0 then goto L140bcc;
#L140ba8.   call temp:=  [|java:lang:System.nanoTime|]() @signature [|Ljava/lang/System;.nanoTime:()J|] @classDescriptor [|java:lang:System|] @type static;
#L140bae.   v3:= temp  @type wide;
#L140bb0.   v7:= v3 - v0  @type long;
#L140bb4.   v12:= v12 - v7  @type long;
#L140bb6.   v0:= v3  @type wide;
#L140bb8.   v7:= 0  @length wide16;
#L140bbc.   v7:= cmp(v12,v7);
#L140bc0.   if v7 > 0 then goto L140bcc;
#L140bc4.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.tryCancel|](v10) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.tryCancel:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140bca.   goto L140b78;
#L140bcc.   if v5 <= 0 then goto L140be6;
#L140bd0.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.shouldSpin|](v9, v10) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.shouldSpin:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140bd6.   v7:= temp;
#L140bd8.   if v7 == 0 then goto L140be2;
#L140bdc.   v5:= v5 + -1;
#L140be0.   goto L140b78;
#L140be2.   v5:= 0  @length 4;
#L140be4.   goto L140be0;
#L140be6.   v7:= v10.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.waiter|]   @type object;
#L140bea.   if v7 != 0 then goto L140bf4;
#L140bee.   v10.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.waiter|]  := v6 @type object;
#L140bf2.   goto L140b78;
#L140bf4.   if v11 != 0 then goto L140c00;
#L140bf8.   call temp:=  [|java:util:concurrent:locks:LockSupport.park|](v9) @signature [|Ljava/util/concurrent/locks/LockSupport;.park:(Ljava/lang/Object;)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L140bfe.   goto L140b78;
#L140c00.   v7:= 1000  @length wide16;
#L140c04.   v7:= cmp(v12,v7);
#L140c08.   if v7 <= 0 then goto L140b78;
#L140c0c.   call temp:=  [|java:util:concurrent:locks:LockSupport.parkNanos|](v9, v12, v13) @signature [|Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V|] @classDescriptor [|java:util:concurrent:locks:LockSupport|] @type static;
#L140c12.   goto L140b78;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|] ([|java:util:concurrent:SynchronousQueue$TransferStack|] v6 @type (this), [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v7 @type (object), [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v8 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferStack|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @Access  {
      local temp ;



        v0;
        v1;
        v2;
        v3;
        v4;
        v5;
      
#L140c24.   v0:= v6.[|java:util:concurrent:SynchronousQueue$TransferStack.head|]   @type object;
#L140c28.   if v7 != v0 then goto L140c4a;
#L140c2c.   v0:= @@[|java:util:concurrent:SynchronousQueue$TransferStack.UNSAFE|]   @type object;
#L140c30.   v2:= @@[|java:util:concurrent:SynchronousQueue$TransferStack.headOffset|]   @wide;
#L140c34.   v1:= v6  @type object;
#L140c36.   v4:= v7  @type object;
#L140c38.   v5:= v8  @type object;
#L140c3a.   call temp:=  [|sun:misc:Unsafe.compareAndSwapObject|](v0, v1, v2, v3, v4, v5) @signature [|Lsun/misc/Unsafe;.compareAndSwapObject:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140c40.   v0:= temp;
#L140c42.   if v0 == 0 then goto L140c4a;
#L140c46.   v0:= 1  @length 4;
#L140c48.   return v0;
#L140c4a.   v0:= 0  @length 4;
#L140c4c.   goto L140c48;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue$TransferStack.clean|] ([|java:util:concurrent:SynchronousQueue$TransferStack|] v4 @type (this), [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v5 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferStack|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.clean:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)V|] @Access  {
      local temp ;
        [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v0 @varname [|n|] @scope ((L0029,L0039));
        [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v1 @varname [|p|] @scope ((L0013,L003a));
        [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v2 @varname [|past|] @scope ((L0007,L003a));


        v3;
      
#L140c60.   v3:= 0  @length 4;
#L140c62.   v5.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.item|]  := v3 @type object;
#L140c66.   v5.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.waiter|]  := v3 @type object;
#L140c6a.   v2:= v5.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140c6e.   if v2 == 0 then goto L140c82;
#L140c72.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.isCancelled|](v2) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140c78.   v3:= temp;
#L140c7a.   if v3 == 0 then goto L140c82;
#L140c7e.   v2:= v2.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140c82.   v1:= v4.[|java:util:concurrent:SynchronousQueue$TransferStack.head|]   @type object;
#L140c86.   if v1 == 0 then goto L140ca6;
#L140c8a.   if v1 == v2 then goto L140ca6;
#L140c8e.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.isCancelled|](v1) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140c94.   v3:= temp;
#L140c96.   if v3 == 0 then goto L140ca6;
#L140c9a.   v3:= v1.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140c9e.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v4, v1, v3) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140ca4.   goto L140c82;
#L140ca6.   if v1 == 0 then goto L140cd2;
#L140caa.   if v1 == v2 then goto L140cd2;
#L140cae.   v0:= v1.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140cb2.   if v0 == 0 then goto L140cce;
#L140cb6.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.isCancelled|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140cbc.   v3:= temp;
#L140cbe.   if v3 == 0 then goto L140cce;
#L140cc2.   v3:= v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140cc6.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.casNext|](v1, v0, v3) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.casNext:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140ccc.   goto L140ca6;
#L140cce.   v1:= v0  @type object;
#L140cd0.   goto L140ca6;
#L140cd2.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue$TransferStack.shouldSpin|] ([|java:util:concurrent:SynchronousQueue$TransferStack|] v2 @type (this), [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v3 @type (object)) @owner [|java:util:concurrent:SynchronousQueue$TransferStack|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.shouldSpin:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @Access  {
      local temp ;
        [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v0 @varname [|h|] @scope ((L0002,L0012));


        v1;
      
#L140ce4.   v0:= v2.[|java:util:concurrent:SynchronousQueue$TransferStack.head|]   @type object;
#L140ce8.   if v0 == v3 then goto L140d00;
#L140cec.   if v0 == 0 then goto L140d00;
#L140cf0.   v1:= v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.mode|] ;
#L140cf4.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.isFulfilling|](v1) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.isFulfilling:(I)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type static;
#L140cfa.   v1:= temp;
#L140cfc.   if v1 == 0 then goto L140d04;
#L140d00.   v1:= 1  @length 4;
#L140d02.   return v1;
#L140d04.   v1:= 0  @length 4;
#L140d06.   goto L140d02;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue$TransferStack.transfer|] ([|java:util:concurrent:SynchronousQueue$TransferStack|] v8 @type (this), [|java:lang:Object|] v9 @type (object), [|boolean|] v10, [|long|] v11) @owner [|java:util:concurrent:SynchronousQueue$TransferStack|] @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @Access  {
      local temp ;
        [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v0 @varname [|h|] @scope ((L0007,L0023), (L0025,L00a9));
        [|int|] v3 @varname [|mode|] @scope ((L0005,L0023), (L0025,L00a9));
        [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v1 @varname [|m|] @scope ((L0033,L0038), (L0039,L004e), (L0070,L008e), (L0090,L00a9));
        [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v2 @varname [|mn|] @scope ((L0079,L008e), (L0099,L00a9));
        [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] v4 @varname [|s|] @scope ((L0002,L00a9));




        v5;
        v6;
        v7;
      
#L140d18.   v5:= 0  @length 4;
#L140d1a.   v4:= 0  @length 4;
#L140d1c.   if v9 != 0 then goto L140d5e;
#L140d20.   v3:= 0  @length 4;
#L140d22.   v0:= v8.[|java:util:concurrent:SynchronousQueue$TransferStack.head|]   @type object;
#L140d26.   if v0 == 0 then goto L140d32;
#L140d2a.   v6:= v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.mode|] ;
#L140d2e.   if v6 != v3 then goto L140db4;
#L140d32.   if v10 == 0 then goto L140d62;
#L140d36.   v6:= 0  @length wide16;
#L140d3a.   v6:= cmp(v11,v6);
#L140d3e.   if v6 > 0 then goto L140d62;
#L140d42.   if v0 == 0 then goto L140d88;
#L140d46.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.isCancelled|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140d4c.   v6:= temp;
#L140d4e.   if v6 == 0 then goto L140d88;
#L140d52.   v6:= v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140d56.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v8, v0, v6) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140d5c.   goto L140d22;
#L140d5e.   v3:= 1  @length 4;
#L140d60.   goto L140d22;
#L140d62.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.snode|](v4, v9, v0, v3) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.snode:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/lang/Object;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;I)Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type static;
#L140d68.   v4:= temp  @type object;
#L140d6a.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v8, v0, v4) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140d70.   v6:= temp;
#L140d72.   if v6 == 0 then goto L140d22;
#L140d76.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.awaitFulfill|](v8, v4, v10, v11, v12) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.awaitFulfill:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;ZJ)Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140d7c.   v1:= temp  @type object;
#L140d7e.   if v1 != v4 then goto L140d8a;
#L140d82.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.clean|](v8, v4) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.clean:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140d88.   return v5  @type object;
#L140d8a.   v0:= v8.[|java:util:concurrent:SynchronousQueue$TransferStack.head|]   @type object;
#L140d8e.   if v0 == 0 then goto L140da4;
#L140d92.   v5:= v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140d96.   if v5 != v4 then goto L140da4;
#L140d9a.   v5:= v4.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140d9e.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v8, v0, v5) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140da4.   if v3 != 0 then goto L140dae;
#L140da8.   v5:= v1.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.item|]   @type object;
#L140dac.   goto L140d88;
#L140dae.   v5:= v4.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.item|]   @type object;
#L140db2.   goto L140d88;
#L140db4.   v6:= v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.mode|] ;
#L140db8.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.isFulfilling|](v6) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.isFulfilling:(I)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type static;
#L140dbe.   v6:= temp;
#L140dc0.   if v6 != 0 then goto L140e34;
#L140dc4.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.isCancelled|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.isCancelled:()Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140dca.   v6:= temp;
#L140dcc.   if v6 == 0 then goto L140ddc;
#L140dd0.   v6:= v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140dd4.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v8, v0, v6) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140dda.   goto L140d22;
#L140ddc.   v6:= v3 ^| 2;
#L140de0.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.snode|](v4, v9, v0, v6) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.snode:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/lang/Object;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;I)Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type static;
#L140de6.   v4:= temp  @type object;
#L140de8.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v8, v0, v4) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140dee.   v6:= temp;
#L140df0.   if v6 == 0 then goto L140d22;
#L140df4.   v1:= v4.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140df8.   if v1 != 0 then goto L140e06;
#L140dfc.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v8, v4, v5) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140e02.   v4:= 0  @length 4;
#L140e04.   goto L140d22;
#L140e06.   v2:= v1.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140e0a.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.tryMatch|](v1, v4) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.tryMatch:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140e10.   v6:= temp;
#L140e12.   if v6 == 0 then goto L140e2c;
#L140e16.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v8, v4, v2) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140e1c.   if v3 != 0 then goto L140e26;
#L140e20.   v5:= v1.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.item|]   @type object;
#L140e24.   goto L140d88;
#L140e26.   v5:= v4.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.item|]   @type object;
#L140e2a.   goto L140d88;
#L140e2c.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.casNext|](v4, v1, v2) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.casNext:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140e32.   goto L140df4;
#L140e34.   v1:= v0.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140e38.   if v1 != 0 then goto L140e46;
#L140e3c.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v8, v0, v5) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140e42.   goto L140d22;
#L140e46.   v2:= v1.[|java:util:concurrent:SynchronousQueue$TransferStack$SNode.next|]   @type object;
#L140e4a.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.tryMatch|](v1, v0) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.tryMatch:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140e50.   v6:= temp;
#L140e52.   if v6 == 0 then goto L140e60;
#L140e56.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.casHead|](v8, v0, v2) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type virtual;
#L140e5c.   goto L140d22;
#L140e60.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack$SNode.casNext|](v0, v1, v2) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.casNext:(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack$SNode|] @type virtual;
#L140e66.   goto L140d22;

   }
record [|java:util:concurrent:SynchronousQueue|]  @type class @AccessFlag PUBLIC  extends [|java:util:AbstractQueue|], [|java:util:concurrent:BlockingQueue|], [|java:io:Serializable|] {
      [|java:util:concurrent:locks:ReentrantLock|] [|java:util:concurrent:SynchronousQueue.qlock|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:SynchronousQueue$Transferer|] [|java:util:concurrent:SynchronousQueue.transferer|]    @AccessFlag PRIVATE_VOLATILE_TRANSIENT;
      [|java:util:concurrent:SynchronousQueue$WaitQueue|] [|java:util:concurrent:SynchronousQueue.waitingConsumers|]    @AccessFlag PRIVATE;
      [|java:util:concurrent:SynchronousQueue$WaitQueue|] [|java:util:concurrent:SynchronousQueue.waitingProducers|]    @AccessFlag PRIVATE;
   }
      global [|int|] @@[|java:util:concurrent:SynchronousQueue.NCPUS|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:SynchronousQueue.maxTimedSpins|]    @AccessFlag STATIC_FINAL;
      global [|int|] @@[|java:util:concurrent:SynchronousQueue.maxUntimedSpins|]    @AccessFlag STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:SynchronousQueue.spinForTimeoutThreshold|]    @AccessFlag STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:SynchronousQueue.<clinit>|] () @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
        v1;
      
#L140e7c.   call temp:=  [|java:lang:Runtime.getRuntime|]() @signature [|Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;|] @classDescriptor [|java:lang:Runtime|] @type static;
#L140e82.   v0:= temp  @type object;
#L140e84.   call temp:=  [|java:lang:Runtime.availableProcessors|](v0) @signature [|Ljava/lang/Runtime;.availableProcessors:()I|] @classDescriptor [|java:lang:Runtime|] @type virtual;
#L140e8a.   v0:= temp;
#L140e8c.   @@[|java:util:concurrent:SynchronousQueue.NCPUS|] := v0;
#L140e90.   v0:= @@[|java:util:concurrent:SynchronousQueue.NCPUS|] ;
#L140e94.   v1:= 2  @length 4;
#L140e96.   if v0 >= v1 then goto L140eae;
#L140e9a.   v0:= 0  @length 4;
#L140e9c.   @@[|java:util:concurrent:SynchronousQueue.maxTimedSpins|] := v0;
#L140ea0.   v0:= @@[|java:util:concurrent:SynchronousQueue.maxTimedSpins|] ;
#L140ea4.   v0:= v0 * 16;
#L140ea8.   @@[|java:util:concurrent:SynchronousQueue.maxUntimedSpins|] := v0;
#L140eac.   return @void ;
#L140eae.   v0:= 32  @length 16;
#L140eb2.   goto L140e9c;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue.<init>|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.<init>:()V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;


        v0;
      
#L140ec4.   v0:= 0  @length 4;
#L140ec6.   call temp:=  [|java:util:concurrent:SynchronousQueue.<init>|](v1, v0) @signature [|Ljava/util/concurrent/SynchronousQueue;.<init>:(Z)V|] @classDescriptor [|java:util:concurrent:SynchronousQueue|] @type direct;
#L140ecc.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue.<init>|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this), [|boolean|] v2) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.<init>:(Z)V|] @Access PUBLIC_CONSTRUCTOR {
      local temp ;



        v0;
      
#L140ee0.   call temp:=  [|java:util:AbstractQueue.<init>|](v1) @signature [|Ljava/util/AbstractQueue;.<init>:()V|] @classDescriptor [|java:util:AbstractQueue|] @type direct;
#L140ee6.   if v2 == 0 then goto L140efa;
#L140eea.   v0:= new [|java:util:concurrent:SynchronousQueue$TransferQueue|];
#L140eee.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.<init>|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type direct;
#L140ef4.   v1.[|java:util:concurrent:SynchronousQueue.transferer|]  := v0 @type object;
#L140ef8.   return @void ;
#L140efa.   v0:= new [|java:util:concurrent:SynchronousQueue$TransferStack|];
#L140efe.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.<init>|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type direct;
#L140f04.   goto L140ef4;

   }
    procedure [|long|] [|java:util:concurrent:SynchronousQueue.objectFieldOffset|] ([|sun:misc:Unsafe|] v4 @type (object), [|java:lang:String|] v5 @type (object), [|java:lang:Class|] v6 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.objectFieldOffset:(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class;)J|] @Access STATIC {
      local temp ;
        [|java:lang:NoSuchFieldException|] v0 @varname [|e|] @scope ((L000a,L0013));
        [|java:lang:NoSuchFieldError|] v1 @varname [|error|] @scope ((L000f,L0013));



        v2;
        v3;
      
#L140f18.   call temp:=  [|java:lang:Class.getDeclaredField|](v6, v5) @signature [|Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;|] @classDescriptor [|java:lang:Class|] @type virtual;
#L140f1e.   v2:= temp  @type object;
#L140f20.   call temp:=  [|sun:misc:Unsafe.objectFieldOffset|](v4, v2) @signature [|Lsun/misc/Unsafe;.objectFieldOffset:(Ljava/lang/reflect/Field;)J|] @classDescriptor [|sun:misc:Unsafe|] @type virtual;
#L140f26.   v2:= temp  @type wide;
#L140f28.   return v2  @type wide;
#L140f2a.   v0:= Exception  @type object;
#L140f2c.   v1:= new [|java:lang:NoSuchFieldError|];
#L140f30.   call temp:=  [|java:lang:NoSuchFieldError.<init>|](v1, v5) @signature [|Ljava/lang/NoSuchFieldError;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:NoSuchFieldError|] @type direct;
#L140f36.   call temp:=  [|java:lang:NoSuchFieldError.initCause|](v1, v0) @signature [|Ljava/lang/NoSuchFieldError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;|] @classDescriptor [|java:lang:NoSuchFieldError|] @type virtual;
#L140f3c.   throw v1;
  catch  [|java:lang:NoSuchFieldException|] @[L140f18..L140f26] goto L140f2a;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue.readObject|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this), [|java:io:ObjectInputStream|] v2 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.readObject:(Ljava/io/ObjectInputStream;)V|] @Access PRIVATE {
      local temp ;



        v0;
      
#L140f60.   call temp:=  [|java:io:ObjectInputStream.defaultReadObject|](v2) @signature [|Ljava/io/ObjectInputStream;.defaultReadObject:()V|] @classDescriptor [|java:io:ObjectInputStream|] @type virtual;
#L140f66.   v0:= v1.[|java:util:concurrent:SynchronousQueue.waitingProducers|]   @type object;
#L140f6a.   v0:= instanceof @varname v0 @type [|java:util:concurrent:SynchronousQueue$FifoWaitQueue|];
#L140f6e.   if v0 == 0 then goto L140f82;
#L140f72.   v0:= new [|java:util:concurrent:SynchronousQueue$TransferQueue|];
#L140f76.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferQueue.<init>|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferQueue|] @type direct;
#L140f7c.   v1.[|java:util:concurrent:SynchronousQueue.transferer|]  := v0 @type object;
#L140f80.   return @void ;
#L140f82.   v0:= new [|java:util:concurrent:SynchronousQueue$TransferStack|];
#L140f86.   call temp:=  [|java:util:concurrent:SynchronousQueue$TransferStack.<init>|](v0) @signature [|Ljava/util/concurrent/SynchronousQueue$TransferStack;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$TransferStack|] @type direct;
#L140f8c.   v1.[|java:util:concurrent:SynchronousQueue.transferer|]  := v0 @type object;
#L140f90.   goto L140f80;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue.writeObject|] ([|java:util:concurrent:SynchronousQueue|] v3 @type (this), [|java:io:ObjectOutputStream|] v4 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.writeObject:(Ljava/io/ObjectOutputStream;)V|] @Access PRIVATE {
      local temp ;

        [|boolean|] v0 @varname [|fair|] @scope ((L0004,L0036));


        v1;
        v2;
      
#L140fa4.   v1:= v3.[|java:util:concurrent:SynchronousQueue.transferer|]   @type object;
#L140fa8.   v0:= instanceof @varname v1 @type [|java:util:concurrent:SynchronousQueue$TransferQueue|];
#L140fac.   if v0 == 0 then goto L140fe4;
#L140fb0.   v1:= new [|java:util:concurrent:locks:ReentrantLock|];
#L140fb4.   v2:= 1  @length 4;
#L140fb6.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v1, v2) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:(Z)V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L140fbc.   v3.[|java:util:concurrent:SynchronousQueue.qlock|]  := v1 @type object;
#L140fc0.   v1:= new [|java:util:concurrent:SynchronousQueue$FifoWaitQueue|];
#L140fc4.   call temp:=  [|java:util:concurrent:SynchronousQueue$FifoWaitQueue.<init>|](v1) @signature [|Ljava/util/concurrent/SynchronousQueue$FifoWaitQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$FifoWaitQueue|] @type direct;
#L140fca.   v3.[|java:util:concurrent:SynchronousQueue.waitingProducers|]  := v1 @type object;
#L140fce.   v1:= new [|java:util:concurrent:SynchronousQueue$FifoWaitQueue|];
#L140fd2.   call temp:=  [|java:util:concurrent:SynchronousQueue$FifoWaitQueue.<init>|](v1) @signature [|Ljava/util/concurrent/SynchronousQueue$FifoWaitQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$FifoWaitQueue|] @type direct;
#L140fd8.   v3.[|java:util:concurrent:SynchronousQueue.waitingConsumers|]  := v1 @type object;
#L140fdc.   call temp:=  [|java:io:ObjectOutputStream.defaultWriteObject|](v4) @signature [|Ljava/io/ObjectOutputStream;.defaultWriteObject:()V|] @classDescriptor [|java:io:ObjectOutputStream|] @type virtual;
#L140fe2.   return @void ;
#L140fe4.   v1:= new [|java:util:concurrent:locks:ReentrantLock|];
#L140fe8.   call temp:=  [|java:util:concurrent:locks:ReentrantLock.<init>|](v1) @signature [|Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V|] @classDescriptor [|java:util:concurrent:locks:ReentrantLock|] @type direct;
#L140fee.   v3.[|java:util:concurrent:SynchronousQueue.qlock|]  := v1 @type object;
#L140ff2.   v1:= new [|java:util:concurrent:SynchronousQueue$LifoWaitQueue|];
#L140ff6.   call temp:=  [|java:util:concurrent:SynchronousQueue$LifoWaitQueue.<init>|](v1) @signature [|Ljava/util/concurrent/SynchronousQueue$LifoWaitQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$LifoWaitQueue|] @type direct;
#L140ffc.   v3.[|java:util:concurrent:SynchronousQueue.waitingProducers|]  := v1 @type object;
#L141000.   v1:= new [|java:util:concurrent:SynchronousQueue$LifoWaitQueue|];
#L141004.   call temp:=  [|java:util:concurrent:SynchronousQueue$LifoWaitQueue.<init>|](v1) @signature [|Ljava/util/concurrent/SynchronousQueue$LifoWaitQueue;.<init>:()V|] @classDescriptor [|java:util:concurrent:SynchronousQueue$LifoWaitQueue|] @type direct;
#L14100a.   v3.[|java:util:concurrent:SynchronousQueue.waitingConsumers|]  := v1 @type object;
#L14100e.   goto L140fdc;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue.clear|] ([|java:util:concurrent:SynchronousQueue|] v0 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.clear:()V|] @Access PUBLIC {
      local temp ;


      
#L141020.   return @void ;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue.contains|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.contains:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L141034.   v0:= 0  @length 4;
#L141036.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue.containsAll|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.containsAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L141048.   call temp:=  [|java:util:Collection.isEmpty|](v2) @signature [|Ljava/util/Collection;.isEmpty:()Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L14104e.   v0:= temp;
#L141050.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:SynchronousQueue.drainTo|] ([|java:util:concurrent:SynchronousQueue|] v3 @type (this), [|java:util:Collection|] v4 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.drainTo:(Ljava/util/Collection;)I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L0015,L001e));
        [|int|] v1 @varname [|n|] @scope ((L0011,L001e));


        v2;
      
#L141064.   if v4 != 0 then goto L141074;
#L141068.   v2:= new [|java:lang:NullPointerException|];
#L14106c.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L141072.   throw v2;
#L141074.   if v4 != v3 then goto L141084;
#L141078.   v2:= new [|java:lang:IllegalArgumentException|];
#L14107c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L141082.   throw v2;
#L141084.   v1:= 0  @length 4;
#L141086.   call temp:=  [|java:util:concurrent:SynchronousQueue.poll|](v3) @signature [|Ljava/util/concurrent/SynchronousQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:SynchronousQueue|] @type virtual;
#L14108c.   v0:= temp  @type object;
#L14108e.   if v0 == 0 then goto L14109e;
#L141092.   call temp:=  [|java:util:Collection.add|](v4, v0) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L141098.   v1:= v1 + 1;
#L14109c.   goto L141086;
#L14109e.   return v1;

   }
    procedure [|int|] [|java:util:concurrent:SynchronousQueue.drainTo|] ([|java:util:concurrent:SynchronousQueue|] v3 @type (this), [|java:util:Collection|] v4 @type (object), [|int|] v5) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.drainTo:(Ljava/util/Collection;I)I|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L0017,L001f));
        [|int|] v1 @varname [|n|] @scope ((L0011,L0020));



        v2;
      
#L1410b0.   if v4 != 0 then goto L1410c0;
#L1410b4.   v2:= new [|java:lang:NullPointerException|];
#L1410b8.   call temp:=  [|java:lang:NullPointerException.<init>|](v2) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L1410be.   throw v2;
#L1410c0.   if v4 != v3 then goto L1410d0;
#L1410c4.   v2:= new [|java:lang:IllegalArgumentException|];
#L1410c8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v2) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1410ce.   throw v2;
#L1410d0.   v1:= 0  @length 4;
#L1410d2.   if v1 >= v5 then goto L1410ee;
#L1410d6.   call temp:=  [|java:util:concurrent:SynchronousQueue.poll|](v3) @signature [|Ljava/util/concurrent/SynchronousQueue;.poll:()Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:SynchronousQueue|] @type virtual;
#L1410dc.   v0:= temp  @type object;
#L1410de.   if v0 == 0 then goto L1410ee;
#L1410e2.   call temp:=  [|java:util:Collection.add|](v4, v0) @signature [|Ljava/util/Collection;.add:(Ljava/lang/Object;)Z|] @classDescriptor [|java:util:Collection|] @type interface;
#L1410e8.   v1:= v1 + 1;
#L1410ec.   goto L1410d2;
#L1410ee.   return v1;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue.isEmpty|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.isEmpty:()Z|] @Access PUBLIC {
      local temp ;


        v0;
      
#L141100.   v0:= 1  @length 4;
#L141102.   return v0;

   }
    procedure [|java:util:Iterator|] [|java:util:concurrent:SynchronousQueue.iterator|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.iterator:()Ljava/util/Iterator;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L141114.   v0:= @@[|java:util:concurrent:SynchronousQueue$EmptyIterator.EMPTY_ITERATOR|]   @type object;
#L141118.   return v0  @type object;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue.offer|] ([|java:util:concurrent:SynchronousQueue|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.offer:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L14112c.   v0:= 1  @length 4;
#L14112e.   if v5 != 0 then goto L14113e;
#L141132.   v0:= new [|java:lang:NullPointerException|];
#L141136.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L14113c.   throw v0;
#L14113e.   v1:= v4.[|java:util:concurrent:SynchronousQueue.transferer|]   @type object;
#L141142.   v2:= 0  @length wide16;
#L141146.   call temp:=  [|java:util:concurrent:SynchronousQueue$Transferer.transfer|](v1, v5, v0, v2, v3) @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$Transferer|] @type virtual;
#L14114c.   v1:= temp  @type object;
#L14114e.   if v1 == 0 then goto L141154;
#L141152.   return v0;
#L141154.   v0:= 0  @length 4;
#L141156.   goto L141152;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue.offer|] ([|java:util:concurrent:SynchronousQueue|] v4 @type (this), [|java:lang:Object|] v5 @type (object), [|long|] v6, [|java:util:concurrent:TimeUnit|] v8 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z|] @Access PUBLIC {
      local temp ;





        v0;
        v1;
        v2;
        v3;
      
#L141168.   v0:= 1  @length 4;
#L14116a.   if v5 != 0 then goto L14117a;
#L14116e.   v0:= new [|java:lang:NullPointerException|];
#L141172.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L141178.   throw v0;
#L14117a.   v1:= v4.[|java:util:concurrent:SynchronousQueue.transferer|]   @type object;
#L14117e.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v8, v6, v7) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L141184.   v2:= temp  @type wide;
#L141186.   call temp:=  [|java:util:concurrent:SynchronousQueue$Transferer.transfer|](v1, v5, v0, v2, v3) @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$Transferer|] @type virtual;
#L14118c.   v1:= temp  @type object;
#L14118e.   if v1 == 0 then goto L141194;
#L141192.   return v0;
#L141194.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L14119a.   v0:= temp;
#L14119c.   if v0 != 0 then goto L1411a4;
#L1411a0.   v0:= 0  @length 4;
#L1411a2.   goto L141192;
#L1411a4.   v0:= new [|java:lang:InterruptedException|];
#L1411a8.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L1411ae.   throw v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue.peek|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.peek:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1411c0.   v0:= 0  @length 4;
#L1411c2.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue.poll|] ([|java:util:concurrent:SynchronousQueue|] v5 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.poll:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
        v4;
      
#L1411d4.   v0:= v5.[|java:util:concurrent:SynchronousQueue.transferer|]   @type object;
#L1411d8.   v1:= 0  @length 4;
#L1411da.   v2:= 1  @length 4;
#L1411dc.   v3:= 0  @length wide16;
#L1411e0.   call temp:=  [|java:util:concurrent:SynchronousQueue$Transferer.transfer|](v0, v1, v2, v3, v4) @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$Transferer|] @type virtual;
#L1411e6.   v0:= temp  @type object;
#L1411e8.   return v0  @type object;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue.poll|] ([|java:util:concurrent:SynchronousQueue|] v6 @type (this), [|long|] v7, [|java:util:concurrent:TimeUnit|] v9 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L000c,L001b));



        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1411fc.   v1:= v6.[|java:util:concurrent:SynchronousQueue.transferer|]   @type object;
#L141200.   v2:= 0  @length 4;
#L141202.   v3:= 1  @length 4;
#L141204.   call temp:=  [|java:util:concurrent:TimeUnit.toNanos|](v9, v7, v8) @signature [|Ljava/util/concurrent/TimeUnit;.toNanos:(J)J|] @classDescriptor [|java:util:concurrent:TimeUnit|] @type virtual;
#L14120a.   v4:= temp  @type wide;
#L14120c.   call temp:=  [|java:util:concurrent:SynchronousQueue$Transferer.transfer|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$Transferer|] @type virtual;
#L141212.   v0:= temp  @type object;
#L141214.   if v0 != 0 then goto L141224;
#L141218.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L14121e.   v1:= temp;
#L141220.   if v1 != 0 then goto L141226;
#L141224.   return v0  @type object;
#L141226.   v1:= new [|java:lang:InterruptedException|];
#L14122a.   call temp:=  [|java:lang:InterruptedException.<init>|](v1) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L141230.   throw v1;

   }
    procedure [|void|] [|java:util:concurrent:SynchronousQueue.put|] ([|java:util:concurrent:SynchronousQueue|] v4 @type (this), [|java:lang:Object|] v5 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.put:(Ljava/lang/Object;)V|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L141244.   if v5 != 0 then goto L141254;
#L141248.   v0:= new [|java:lang:NullPointerException|];
#L14124c.   call temp:=  [|java:lang:NullPointerException.<init>|](v0) @signature [|Ljava/lang/NullPointerException;.<init>:()V|] @classDescriptor [|java:lang:NullPointerException|] @type direct;
#L141252.   throw v0;
#L141254.   v0:= v4.[|java:util:concurrent:SynchronousQueue.transferer|]   @type object;
#L141258.   v1:= 0  @length 4;
#L14125a.   v2:= 0  @length wide16;
#L14125e.   call temp:=  [|java:util:concurrent:SynchronousQueue$Transferer.transfer|](v0, v5, v1, v2, v3) @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$Transferer|] @type virtual;
#L141264.   v0:= temp  @type object;
#L141266.   if v0 != 0 then goto L14127c;
#L14126a.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L141270.   v0:= new [|java:lang:InterruptedException|];
#L141274.   call temp:=  [|java:lang:InterruptedException.<init>|](v0) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L14127a.   throw v0;
#L14127c.   return @void ;

   }
    procedure [|int|] [|java:util:concurrent:SynchronousQueue.remainingCapacity|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.remainingCapacity:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L141290.   v0:= 0  @length 4;
#L141292.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue.remove|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this), [|java:lang:Object|] v2 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.remove:(Ljava/lang/Object;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L1412a4.   v0:= 0  @length 4;
#L1412a6.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue.removeAll|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.removeAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L1412b8.   v0:= 0  @length 4;
#L1412ba.   return v0;

   }
    procedure [|boolean|] [|java:util:concurrent:SynchronousQueue.retainAll|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this), [|java:util:Collection|] v2 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.retainAll:(Ljava/util/Collection;)Z|] @Access PUBLIC {
      local temp ;



        v0;
      
#L1412cc.   v0:= 0  @length 4;
#L1412ce.   return v0;

   }
    procedure [|int|] [|java:util:concurrent:SynchronousQueue.size|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.size:()I|] @Access PUBLIC {
      local temp ;


        v0;
      
#L1412e0.   v0:= 0  @length 4;
#L1412e2.   return v0;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:SynchronousQueue.take|] ([|java:util:concurrent:SynchronousQueue|] v6 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.take:()Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;

        [|java:lang:Object|] v0 @varname [|e|] @scope ((L000a,L0016));

        v1;
        v2;
        v3;
        v4;
        v5;
      
#L1412f4.   v1:= v6.[|java:util:concurrent:SynchronousQueue.transferer|]   @type object;
#L1412f8.   v2:= 0  @length 4;
#L1412fa.   v3:= 0  @length 4;
#L1412fc.   v4:= 0  @length wide16;
#L141300.   call temp:=  [|java:util:concurrent:SynchronousQueue$Transferer.transfer|](v1, v2, v3, v4, v5) @signature [|Ljava/util/concurrent/SynchronousQueue$Transferer;.transfer:(Ljava/lang/Object;ZJ)Ljava/lang/Object;|] @classDescriptor [|java:util:concurrent:SynchronousQueue$Transferer|] @type virtual;
#L141306.   v0:= temp  @type object;
#L141308.   if v0 == 0 then goto L14130e;
#L14130c.   return v0  @type object;
#L14130e.   call temp:=  [|java:lang:Thread.interrupted|]() @signature [|Ljava/lang/Thread;.interrupted:()Z|] @classDescriptor [|java:lang:Thread|] @type static;
#L141314.   v1:= new [|java:lang:InterruptedException|];
#L141318.   call temp:=  [|java:lang:InterruptedException.<init>|](v1) @signature [|Ljava/lang/InterruptedException;.<init>:()V|] @classDescriptor [|java:lang:InterruptedException|] @type direct;
#L14131e.   throw v1;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:SynchronousQueue.toArray|] ([|java:util:concurrent:SynchronousQueue|] v1 @type (this)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.toArray:()[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;


        v0;
      
#L141330.   v0:= 0  @length 4;
#L141332.   v0:= new [|java:lang:Object|][v0];
#L141336.   return v0  @type object;

   }
    procedure [|java:lang:Object|][] [|java:util:concurrent:SynchronousQueue.toArray|] ([|java:util:concurrent:SynchronousQueue|] v2 @type (this), [|java:lang:Object|][] v3 @type (object)) @owner [|java:util:concurrent:SynchronousQueue|] @signature [|Ljava/util/concurrent/SynchronousQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L141348.   v0:= v3.length;
#L14134a.   if v0 <= 0 then goto L141356;
#L14134e.   v0:= 0  @length 4;
#L141350.   v1:= 0  @length 4;
#L141352.   v3[v0]:= v1  @type object;
#L141356.   return v3  @type object;

   }
record [|java:util:concurrent:ThreadLocalRandom$1|]  @type class @AccessFlag FINAL  extends [|java:lang:ThreadLocal|] {
   }
    procedure [|void|] [|java:util:concurrent:ThreadLocalRandom$1.<init>|] ([|java:util:concurrent:ThreadLocalRandom$1|] v0 @type (this)) @owner [|java:util:concurrent:ThreadLocalRandom$1|] @signature [|Ljava/util/concurrent/ThreadLocalRandom$1;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

      
#L141368.   call temp:=  [|java:lang:ThreadLocal.<init>|](v0) @signature [|Ljava/lang/ThreadLocal;.<init>:()V|] @classDescriptor [|java:lang:ThreadLocal|] @type direct;
#L14136e.   return @void ;

   }
    procedure [|java:lang:Object|] [|java:util:concurrent:ThreadLocalRandom$1.initialValue|] ([|java:util:concurrent:ThreadLocalRandom$1|] v1 @type (this)) @owner [|java:util:concurrent:ThreadLocalRandom$1|] @signature [|Ljava/util/concurrent/ThreadLocalRandom$1;.initialValue:()Ljava/lang/Object;|] @Access PROTECTED_BRIDGE_SYNTHETIC {
      local temp ;

        v0;
      
#L141380.   call temp:=  [|java:util:concurrent:ThreadLocalRandom$1.initialValue|](v1) @signature [|Ljava/util/concurrent/ThreadLocalRandom$1;.initialValue:()Ljava/util/concurrent/ThreadLocalRandom;|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom$1|] @type virtual;
#L141386.   v0:= temp  @type object;
#L141388.   return v0  @type object;

   }
    procedure [|java:util:concurrent:ThreadLocalRandom|] [|java:util:concurrent:ThreadLocalRandom$1.initialValue|] ([|java:util:concurrent:ThreadLocalRandom$1|] v1 @type (this)) @owner [|java:util:concurrent:ThreadLocalRandom$1|] @signature [|Ljava/util/concurrent/ThreadLocalRandom$1;.initialValue:()Ljava/util/concurrent/ThreadLocalRandom;|] @Access PROTECTED {
      local temp ;

        v0;
      
#L14139c.   v0:= new [|java:util:concurrent:ThreadLocalRandom|];
#L1413a0.   call temp:=  [|java:util:concurrent:ThreadLocalRandom.<init>|](v0) @signature [|Ljava/util/concurrent/ThreadLocalRandom;.<init>:()V|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom|] @type direct;
#L1413a6.   return v0  @type object;

   }
record [|java:util:concurrent:ThreadLocalRandom|]  @type class @AccessFlag PUBLIC  extends [|java:util:Random|] {
      [|boolean|] [|java:util:concurrent:ThreadLocalRandom.initialized|]    @AccessFlag ;
      [|long|] [|java:util:concurrent:ThreadLocalRandom.pad0|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:concurrent:ThreadLocalRandom.pad1|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:concurrent:ThreadLocalRandom.pad2|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:concurrent:ThreadLocalRandom.pad3|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:concurrent:ThreadLocalRandom.pad4|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:concurrent:ThreadLocalRandom.pad5|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:concurrent:ThreadLocalRandom.pad6|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:concurrent:ThreadLocalRandom.pad7|]    @AccessFlag PRIVATE;
      [|long|] [|java:util:concurrent:ThreadLocalRandom.rnd|]    @AccessFlag PRIVATE;
   }
      global [|long|] @@[|java:util:concurrent:ThreadLocalRandom.addend|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|java:lang:ThreadLocal|] @@[|java:util:concurrent:ThreadLocalRandom.localRandom|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ThreadLocalRandom.mask|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ThreadLocalRandom.multiplier|]    @AccessFlag PRIVATE_STATIC_FINAL;
      global [|long|] @@[|java:util:concurrent:ThreadLocalRandom.serialVersionUID|]    @AccessFlag PRIVATE_STATIC_FINAL;
    procedure [|void|] [|java:util:concurrent:ThreadLocalRandom.<clinit>|] () @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.<clinit>:()V|] @Access STATIC_CONSTRUCTOR {
      local temp ;
        v0;
      
#L1413b8.   v0:= new [|java:util:concurrent:ThreadLocalRandom$1|];
#L1413bc.   call temp:=  [|java:util:concurrent:ThreadLocalRandom$1.<init>|](v0) @signature [|Ljava/util/concurrent/ThreadLocalRandom$1;.<init>:()V|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom$1|] @type direct;
#L1413c2.   @@[|java:util:concurrent:ThreadLocalRandom.localRandom|] := v0  @type object;
#L1413c6.   return @void ;

   }
    procedure [|void|] [|java:util:concurrent:ThreadLocalRandom.<init>|] ([|java:util:concurrent:ThreadLocalRandom|] v1 @type (this)) @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.<init>:()V|] @Access CONSTRUCTOR {
      local temp ;

        v0;
      
#L1413d8.   call temp:=  [|java:util:Random.<init>|](v1) @signature [|Ljava/util/Random;.<init>:()V|] @classDescriptor [|java:util:Random|] @type direct;
#L1413de.   v0:= 1  @length 4;
#L1413e0.   v1.[|java:util:concurrent:ThreadLocalRandom.initialized|]  := v0 @boolean;
#L1413e4.   return @void ;

   }
    procedure [|java:util:concurrent:ThreadLocalRandom|] [|java:util:concurrent:ThreadLocalRandom.current|] () @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.current:()Ljava/util/concurrent/ThreadLocalRandom;|] @Access PUBLIC_STATIC {
      local temp ;
        v0;
      
#L1413f8.   v0:= @@[|java:util:concurrent:ThreadLocalRandom.localRandom|]   @type object;
#L1413fc.   call temp:=  [|java:lang:ThreadLocal.get|](v0) @signature [|Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;|] @classDescriptor [|java:lang:ThreadLocal|] @type virtual;
#L141402.   v0:= temp  @type object;
#L141404.   v0:= ([|java:util:concurrent:ThreadLocalRandom|])v0;
#L141408.   return v0  @type object;

   }
    procedure [|int|] [|java:util:concurrent:ThreadLocalRandom.next|] ([|java:util:concurrent:ThreadLocalRandom|] v4 @type (this), [|int|] v5) @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.next:(I)I|] @Access PROTECTED {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L14141c.   v0:= v4.[|java:util:concurrent:ThreadLocalRandom.rnd|]   @wide;
#L141420.   v2:= 0.000000L  @length wide;
#L14142a.   v0:= v0 * v2  @type long;
#L14142c.   v2:= 11  @length wide16;
#L141430.   v0:= v0 + v2  @type long;
#L141432.   v2:= 0.000000L  @length wide;
#L14143c.   v0:= v0 ^& v2  @type long;
#L14143e.   v4.[|java:util:concurrent:ThreadLocalRandom.rnd|]  := v0 @wide;
#L141442.   v0:= v4.[|java:util:concurrent:ThreadLocalRandom.rnd|]   @wide;
#L141446.   v2:= v5 - 48;
#L14144a.   v0:= v0 ^>> v2  @type long;
#L14144c.   v0:= (int)v0  @type l2i;
#L14144e.   return v0;

   }
    procedure [|double|] [|java:util:concurrent:ThreadLocalRandom.nextDouble|] ([|java:util:concurrent:ThreadLocalRandom|] v2 @type (this), [|double|] v3) @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextDouble:(D)D|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
      
#L141460.   v0:= 0  @length wide16;
#L141464.   v0:= cmpg(v3,v0);
#L141468.   if v0 > 0 then goto L14147c;
#L14146c.   v0:= new [|java:lang:IllegalArgumentException|];
#L141470.   v1:= "n must be positive" @type (object, string);
#L141474.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0, v1) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14147a.   throw v0;
#L14147c.   call temp:=  [|java:util:concurrent:ThreadLocalRandom.nextDouble|](v2) @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextDouble:()D|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom|] @type virtual;
#L141482.   v0:= temp  @type wide;
#L141484.   v0:= v0 * v3  @type double;
#L141486.   return v0  @type wide;

   }
    procedure [|double|] [|java:util:concurrent:ThreadLocalRandom.nextDouble|] ([|java:util:concurrent:ThreadLocalRandom|] v4 @type (this), [|double|] v5, [|double|] v7) @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextDouble:(DD)D|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
        v2;
        v3;
      
#L141498.   v0:= cmpl(v5,v7);
#L14149c.   if v0 < 0 then goto L1414ac;
#L1414a0.   v0:= new [|java:lang:IllegalArgumentException|];
#L1414a4.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1414aa.   throw v0;
#L1414ac.   call temp:=  [|java:util:concurrent:ThreadLocalRandom.nextDouble|](v4) @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextDouble:()D|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom|] @type virtual;
#L1414b2.   v0:= temp  @type wide;
#L1414b4.   v2:= v7 - v5  @type double;
#L1414b8.   v0:= v0 * v2  @type double;
#L1414ba.   v0:= v0 + v5  @type double;
#L1414bc.   return v0  @type wide;

   }
    procedure [|int|] [|java:util:concurrent:ThreadLocalRandom.nextInt|] ([|java:util:concurrent:ThreadLocalRandom|] v1 @type (this), [|int|] v2, [|int|] v3) @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextInt:(II)I|] @Access PUBLIC {
      local temp ;



        v0;
      
#L1414d0.   if v2 < v3 then goto L1414e0;
#L1414d4.   v0:= new [|java:lang:IllegalArgumentException|];
#L1414d8.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L1414de.   throw v0;
#L1414e0.   v0:= v3 - v2  @type int;
#L1414e4.   call temp:=  [|java:util:concurrent:ThreadLocalRandom.nextInt|](v1, v0) @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextInt:(I)I|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom|] @type virtual;
#L1414ea.   v0:= temp;
#L1414ec.   v0:= v0 + v2  @type int;
#L1414ee.   return v0;

   }
    procedure [|long|] [|java:util:concurrent:ThreadLocalRandom.nextLong|] ([|java:util:concurrent:ThreadLocalRandom|] v9 @type (this), [|long|] v10) @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextLong:(J)J|] @Access PUBLIC {
      local temp ;
        [|long|] v3 @varname [|nextn|] @scope ((L0024,L002d));
        [|int|] v0 @varname [|bits|] @scope ((L001c,L0030));
        [|long|] v1 @varname [|half|] @scope ((L001f,L0030));
        [|long|] v5 @varname [|offset|] @scope ((L0010,L0038));


        v2;
        v4;
        v6;
        v7;
        v8;
      
#L141500.   v7:= 0  @length wide16;
#L141504.   v7:= cmp(v10,v7);
#L141508.   if v7 > 0 then goto L14151c;
#L14150c.   v7:= new [|java:lang:IllegalArgumentException|];
#L141510.   v8:= "n must be positive" @type (object, string);
#L141514.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v7, v8) @signature [|Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L14151a.   throw v7;
#L14151c.   v5:= 0  @length wide16;
#L141520.    v7:= nan  @length wide32;
#L141526.   v7:= cmp(v10,v7);
#L14152a.   if v7 < 0 then goto L141560;
#L14152e.   v7:= 2  @length 4;
#L141530.   call temp:=  [|java:util:concurrent:ThreadLocalRandom.next|](v9, v7) @signature [|Ljava/util/concurrent/ThreadLocalRandom;.next:(I)I|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom|] @type virtual;
#L141536.   v0:= temp;
#L141538.   v7:= 1  @length 4;
#L14153a.   v1:= v10 ^>> v7  @type long;
#L14153e.   v7:= v0 ^& 2;
#L141542.   if v7 != 0 then goto L14155a;
#L141546.   v3:= v1  @type wide;
#L141548.   v7:= v0 ^& 1;
#L14154c.   if v7 != 0 then goto L141556;
#L141550.   v7:= v10 - v3  @type long;
#L141554.   v5:= v5 + v7  @type long;
#L141556.   v10:= v3  @type wide;
#L141558.   goto L141520;
#L14155a.   v3:= v10 - v1  @type long;
#L14155e.   goto L141548;
#L141560.   v7:= (int)v10  @type l2i;
#L141562.   call temp:=  [|java:util:concurrent:ThreadLocalRandom.nextInt|](v9, v7) @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextInt:(I)I|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom|] @type virtual;
#L141568.   v7:= temp;
#L14156a.   v7:= (long)v7  @type i2l;
#L14156c.   v7:= v7 + v5  @type long;
#L14156e.   return v7  @type wide;

   }
    procedure [|long|] [|java:util:concurrent:ThreadLocalRandom.nextLong|] ([|java:util:concurrent:ThreadLocalRandom|] v2 @type (this), [|long|] v3, [|long|] v5) @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextLong:(JJ)J|] @Access PUBLIC {
      local temp ;



        v0;
        v1;
      
#L141580.   v0:= cmp(v3,v5);
#L141584.   if v0 < 0 then goto L141594;
#L141588.   v0:= new [|java:lang:IllegalArgumentException|];
#L14158c.   call temp:=  [|java:lang:IllegalArgumentException.<init>|](v0) @signature [|Ljava/lang/IllegalArgumentException;.<init>:()V|] @classDescriptor [|java:lang:IllegalArgumentException|] @type direct;
#L141592.   throw v0;
#L141594.   v0:= v5 - v3  @type long;
#L141598.   call temp:=  [|java:util:concurrent:ThreadLocalRandom.nextLong|](v2, v0, v1) @signature [|Ljava/util/concurrent/ThreadLocalRandom;.nextLong:(J)J|] @classDescriptor [|java:util:concurrent:ThreadLocalRandom|] @type virtual;
#L14159e.   v0:= temp  @type wide;
#L1415a0.   v0:= v0 + v3  @type long;
#L1415a2.   return v0  @type wide;

   }
    procedure [|void|] [|java:util:concurrent:ThreadLocalRandom.setSeed|] ([|java:util:concurrent:ThreadLocalRandom|] v4 @type (this), [|long|] v5) @owner [|java:util:concurrent:ThreadLocalRandom|] @signature [|Ljava/util/concurrent/ThreadLocalRandom;.setSeed:(J)V|] @Access PUBLIC {
      local temp ;


        v0;
        v1;
        v2;
        v3;
      
#L1415b4.   v0:= v4.[|java:util:concurrent:ThreadLocalRandom.initialized|]   @boolean;
#L1415b8.   if v0 == 0 then goto L1415c8;
#L1415bc.   v0:= new [|java:lang:UnsupportedOperationException|];
#L1415c0.   call temp:=  [|java:lang:UnsupportedOperationException.<init>|](v0) @signature [|Ljava/lang/UnsupportedOperationException;.<init>:()V|] @classDescriptor [|java:lang:UnsupportedOperationException|] @type direct;
#L1415c6.   throw v0;
#L1415c8.   v0:= 0.000000L  @length wide;
#L1415d2.   v0:= v0 ^~ v5  @type long;
#L1415d4.   v2:= 0.000000L  @length wide;
#L1415de.   v0:= v0 ^& v2  @type long;
#L1415e0.   v4.[|java:util:concurrent:ThreadLocalRandom.rnd|]  := v0 @wide;
#L1415e4.   return @void ;

   }
